uint64_t getEnumTagSinglePayload for KillShape(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    v2 = 2;
  }
  else {
    v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    v3 = 1;
  }
  else {
    v3 = v2;
  }
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for KillShape(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6844C88);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KillShape()
{
  return &type metadata for KillShape;
}

unsigned char *storeEnumTagSinglePayload for KillShape.Shape(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6844D8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KillShape.Shape()
{
  return &type metadata for KillShape.Shape;
}

ValueMetadata *type metadata accessor for ParticleKillable()
{
  return &type metadata for ParticleKillable;
}

unint64_t sub_1B6844DD8()
{
  unint64_t result = qword_1E9DD1440;
  if (!qword_1E9DD1440)
  {
    sub_1B62D8588(255, &qword_1E9DD1448, (uint64_t)&type metadata for KillShape.Shape, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1440);
  }
  return result;
}

unint64_t sub_1B6844E58()
{
  unint64_t result = qword_1E9DD1450;
  if (!qword_1E9DD1450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1450);
  }
  return result;
}

unint64_t sub_1B6844EAC()
{
  unint64_t result = qword_1E9DD1460;
  if (!qword_1E9DD1460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1460);
  }
  return result;
}

void sub_1B6844F00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B6844F68()
{
  unint64_t result = qword_1E9DD1478;
  if (!qword_1E9DD1478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1478);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleKillable.CodingKeys()
{
  return &type metadata for ParticleKillable.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for KillShape.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6845098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KillShape.CodingKeys()
{
  return &type metadata for KillShape.CodingKeys;
}

unint64_t sub_1B68450D4()
{
  unint64_t result = qword_1E9DD1480;
  if (!qword_1E9DD1480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1480);
  }
  return result;
}

unint64_t sub_1B684512C()
{
  unint64_t result = qword_1E9DD1488;
  if (!qword_1E9DD1488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1488);
  }
  return result;
}

unint64_t sub_1B6845184()
{
  unint64_t result = qword_1E9DD1490;
  if (!qword_1E9DD1490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1490);
  }
  return result;
}

unint64_t sub_1B68451DC()
{
  unint64_t result = qword_1E9DD1498;
  if (!qword_1E9DD1498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1498);
  }
  return result;
}

unint64_t sub_1B6845234()
{
  unint64_t result = qword_1E9DD14A0;
  if (!qword_1E9DD14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD14A0);
  }
  return result;
}

uint64_t initializeWithCopy for QueryResult.ChunkResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for QueryResult.ChunkResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for QueryResult.ChunkResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetalFunctionReflection.Arg(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetalFunctionReflection.Arg(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryResult.ChunkResult()
{
  return &type metadata for QueryResult.ChunkResult;
}

uint64_t destroy for QueryResult()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for QueryResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v3;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for QueryResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  int v4 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for Scheduler.Job(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for QueryResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryResult(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryResult()
{
  return &type metadata for QueryResult;
}

void sub_1B6845714(char a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(void *)(a2 + 40);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 344));
    uint64_t v3 = *(os_unfair_lock_s **)(v2 + 376);
    os_unfair_lock_unlock(v3);
  }
}

char *sub_1B684575C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 72);
  long long v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  uint64_t v8 = *(void *)(a1 + 32);
  sub_1B6345178(v4, (unsigned __int16 **)v7, a2);
  return sub_1B634507C(*(char **)(a3 + 40));
}

uint64_t sub_1B68457BC()
{
  if ((uint64_t)v0[10] >= 1)
  {
    uint64_t v1 = v0[7];
    if (v1)
    {
      uint64_t v2 = 48 * v1;
      uint64_t v3 = v0[5] + 40;
      do
      {
        uint64_t v5 = *(void *)v3;
        unsigned int v6 = *(os_unfair_lock_s **)(*(void *)v3 + 376);
        swift_retain();
        os_unfair_lock_lock(v6);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 344));
        uint64_t v7 = *(void *)(v5 + 232);
        uint64_t v8 = *(void *)(v5 + 240);
        if (v8 != v7)
        {
          uint64_t v9 = *(void *)(v5 + 192);
          if (v9)
          {
            uint64_t v10 = *(void *)(v5 + 208);
            sub_1B63B52E8(*(void *)(v5 + 232), *(void *)(v5 + 240), v9);
            sub_1B62C9D00(v7, v8, v10);
          }
          sub_1B63658B4(*(void *)(v5 + 40), v5, v7, v8);
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 376));
        uint64_t result = swift_release();
        v3 += 48;
        v2 -= 48;
      }
      while (v2);
    }
  }
  return result;
}

uint64_t sub_1B68458CC(uint64_t result)
{
  char v65 = result;
  if ((uint64_t)v1[10] >= 1)
  {
    uint64_t v2 = v1[7];
    if (v2)
    {
      uint64_t v3 = v1[5];
      uint64_t v4 = v3 + 48 * v2;
      int v5 = result & 1;
      uint64_t v63 = v4;
      int v64 = v5;
      while (1)
      {
        uint64_t v6 = *(void *)(v3 + 40);
        if (*(unsigned __int8 *)(v6 + 120) != v5) {
          break;
        }
LABEL_5:
        v3 += 48;
        if (v3 == v4) {
          return result;
        }
      }
      uint64_t v7 = *(void *)(v6 + 16);
      int v8 = *(_DWORD *)(v6 + 188);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = *(os_unfair_lock_s **)(v7 + 128);
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v10);
      uint64_t v11 = *(void **)(v7 + 96);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v7 + 96) = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v11 = sub_1B6C16694(v11);
        *(void *)(v7 + 96) = v11;
      }
      v13 = v11 + 4;
      uint64_t v14 = (uint64_t)&v11[5 * (int)v9 + 4];
      if (v65)
      {
        v15 = &v13[5 * (int)v9];
        uint64_t v18 = v15[1];
        v16 = v15 + 1;
        uint64_t v17 = v18;
        uint64_t v19 = v18 & 0x7FFFFFFFFFFFFFFFLL;
        if ((v18 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        {
          uint64_t v20 = *(void *)v14;
          if (v19 != 1 && *(_DWORD *)(*(void *)v14 + 32) != v8)
          {
            if (*(_DWORD *)(v20 + 36) == v8)
            {
              uint64_t v22 = 1;
              goto LABEL_17;
            }
            uint64_t v52 = 0;
            uint64_t v53 = v19 - 2;
            uint64_t v54 = v20 + 40;
            while (v53 != v52)
            {
              int v55 = *(_DWORD *)(v54 + 4 * v52++);
              if (v55 == v8)
              {
                uint64_t v22 = v52 + 1;
                goto LABEL_17;
              }
            }
          }
        }
        uint64_t v22 = 0;
LABEL_17:
        uint64_t v23 = v17 - 1;
        void *v16 = v17 - 1;
        if (v22 != v17 - 1)
        {
          uint64_t v24 = *(void *)v14;
          uint64_t v25 = *(void *)v14 + 32;
          int v59 = *(_DWORD *)(v25 + 4 * v22);
          int v61 = *(_DWORD *)(v25 + 4 * v23);
          v26 = (char **)v14;
          char v27 = swift_isUniquelyReferenced_nonNull_native();
          *v26 = (char *)v24;
          if (v27)
          {
            v28 = v26;
          }
          else
          {
            v56 = sub_1B6315450(v24);
            v28 = v26;
            uint64_t v24 = (uint64_t)v56;
            *v26 = v56;
          }
          *(_DWORD *)(v24 + 4 * v22 + 32) = v61;
          v29 = *v28;
          char v30 = swift_isUniquelyReferenced_nonNull_native();
          *v26 = v29;
          if ((v30 & 1) == 0)
          {
            v29 = sub_1B6315450((uint64_t)v29);
            *v26 = v29;
          }
          uint64_t v4 = v63;
          *(_DWORD *)&v29[4 * v23 + 32] = v59;
        }
        v31 = &v13[5 * (int)v9];
        int v33 = *((_DWORD *)v31 + 9);
        v32 = (_DWORD *)v31 + 9;
        if (v33 == v8)
        {
          _DWORD *v32 = -1;
          LODWORD(v13[5 * (int)v9 + 4]) = v8;
        }
LABEL_36:
        int v5 = v64;
        if (*(unsigned char *)(*(void *)(*(void *)(v7 + 80) + 8 * v9 + 32) + 200)) {
          *(unsigned char *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 128));
        swift_release();
        *(unsigned char *)(v6 + 120) = v64;
        uint64_t result = swift_release();
        goto LABEL_5;
      }
      uint64_t v34 = *(void *)v14;
      v35 = &v13[5 * (int)v9];
      uint64_t v38 = v35[1];
      v36 = v35 + 1;
      uint64_t v37 = v38;
      uint64_t v39 = *(void *)(*(void *)v14 + 16);
      if (v38 != v39)
      {
        int v41 = *(_DWORD *)(v34 + 32 + 4 * v37);
        if (v41 == v8) {
          goto LABEL_34;
        }
        uint64_t v40 = v37 + 1;
        if (v37 + 1 != v39)
        {
          if (*(_DWORD *)(v34 + 32 + 4 * v40) == v8) {
            goto LABEL_28;
          }
          uint64_t v49 = v39 - 2;
          uint64_t v50 = v37;
          while (v49 != v50)
          {
            int v51 = *(_DWORD *)(v34 + 40 + 4 * v50++);
            if (v51 == v8)
            {
              uint64_t v40 = v50 + 1;
              if (v50 + 1 == v37) {
                goto LABEL_34;
              }
              goto LABEL_27;
            }
          }
        }
      }
      uint64_t v40 = 0;
      if (v37)
      {
LABEL_27:
        int v41 = *(_DWORD *)(v34 + 4 * v37 + 32);
LABEL_28:
        int v58 = *(_DWORD *)(v34 + 4 * v40 + 32);
        int v60 = v41;
        v62 = (char **)v14;
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        v43 = v62;
        *v62 = (char *)v34;
        if ((v42 & 1) == 0)
        {
          v57 = sub_1B6315450(v34);
          v43 = v62;
          uint64_t v34 = (uint64_t)v57;
          *v62 = v57;
        }
        *(_DWORD *)(v34 + 4 * v40 + 32) = v60;
        v44 = *v43;
        char v45 = swift_isUniquelyReferenced_nonNull_native();
        *v62 = v44;
        if ((v45 & 1) == 0)
        {
          v44 = sub_1B6315450((uint64_t)v44);
          *v62 = v44;
        }
        *(_DWORD *)&v44[4 * v37 + 32] = v58;
      }
LABEL_34:
      void *v36 = v37 + 1;
      v46 = &v13[5 * (int)v9];
      int v48 = *((_DWORD *)v46 + 8);
      v47 = v46 + 4;
      uint64_t v4 = v63;
      if (v48 == v8)
      {
        HIDWORD(v13[5 * (int)v9 + 4]) = v8;
        _DWORD *v47 = -1;
      }
      goto LABEL_36;
    }
  }
  return result;
}

uint64_t sub_1B6845C80()
{
  if (!*(void *)(v0 + 80)) {
    return 0;
  }
  sub_1B637BED0(0);
  uint64_t v2 = v1;
  swift_retain();
  uint64_t v3 = sub_1B62DE2C8(v2);
  swift_release();
  return v3;
}

uint64_t sub_1B6845CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B637BED0(a3);
  uint64_t v5 = v4;
  uint64_t v6 = sub_1B62C91B8(a1);
  if (v7) {
    return 0;
  }
  else {
    return v6 + sub_1B62CD84C(a1) * v5;
  }
}

uint64_t sub_1B6845D7C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B6C3D6CC(0, v2, 0);
    uint64_t v4 = 0;
    uint64_t result = v13;
    uint64_t v5 = (long long *)(a1 + 32);
    unint64_t v6 = *(void *)(v13 + 16);
    uint64_t v7 = 24 * v6;
    do
    {
      long long v8 = *v5;
      uint64_t v14 = result;
      unint64_t v9 = *(void *)(result + 24);
      unint64_t v10 = v6 + 1;
      if (v6 >= v9 >> 1)
      {
        long long v12 = *v5;
        sub_1B6C3D6CC(v9 > 1, v6 + 1, 1);
        long long v8 = v12;
        uint64_t result = v14;
      }
      *(void *)(result + 16) = v10;
      uint64_t v11 = result + v7;
      v7 += 24;
      *(_OWORD *)(v11 + 32) = v8;
      *(void *)(v11 + 48) = v4;
      ++v5;
      unint64_t v6 = v10;
      v4 += *((void *)&v8 + 1);
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1B6845E6C(uint64_t a1, uint64_t a2, _DWORD *a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, float a9, float a10, uint64_t a11, char a12)
{
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = sub_1B68C4860(0, v16 & ~(v16 >> 63), 0, MEMORY[0x1E4FBC860]);
  if (*(uint64_t *)(a1 + 80) >= 1 && v16)
  {
    uint64_t v18 = 0;
    uint64_t v19 = *(void **)(a1 + 72);
    int v20 = *(unsigned __int8 *)(*(void *)(a1 + 64) + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v52 = v19[4];
    long long v21 = *(_OWORD *)(a1 + 16);
    v53[0] = *(_OWORD *)a1;
    v53[1] = v21;
    uint64_t v54 = *(void *)(a1 + 32);
    uint64_t v22 = (uint64_t *)(v15 + 24);
    int v46 = v20;
    do
    {
      uint64_t v50 = v18;
      int v51 = v17;
      uint64_t v23 = *((unsigned int *)v22 - 6);
      int v48 = (uint64_t *)*(v22 - 1);
      uint64_t v49 = *((unsigned int *)v22 - 5);
      uint64_t v24 = v22[1];
      uint64_t v47 = *v22;
      uint64_t v25 = v22[2];
      if (v20)
      {
        v26 = *(os_unfair_lock_s **)(v25 + 376);
        swift_retain();
        os_unfair_lock_lock(v26);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v25 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v52);
      sub_1B62CA37C((uint64_t)(v19 + 6), (uint64_t)v55, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v27 = v19[4];
      uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v25 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v19[6] = ecs_stack_allocator_allocate(v27, 48 * v28, 8);
      v19[7] = v28;
      v19[9] = 0;
      v19[10] = 0;
      v19[8] = 0;
      swift_release();
      uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v48, v47, v24, (uint64_t)v19);
      if (v29) {
        uint64_t v30 = v29 + 16 * v23;
      }
      else {
        uint64_t v30 = 0;
      }
      uint64_t v17 = v51;
      unint64_t v32 = *((void *)v51 + 2);
      unint64_t v31 = *((void *)v51 + 3);
      if (v32 >= v31 >> 1) {
        uint64_t v17 = sub_1B68C4860(v31 > 1, v32 + 1, 1, v51);
      }
      int v20 = v46;
      *((void *)v17 + 2) = v32 + 1;
      int v33 = &v17[16 * v32];
      *((void *)v33 + 4) = v30;
      *((void *)v33 + 5) = v49 - v23;
      uint64_t v18 = v50;
      sub_1B6345178(v19, (unsigned __int16 **)v53, (uint64_t)v55);
      sub_1B634507C((char *)v25);
      ecs_stack_allocator_pop_snapshot(v52);
      if (v46)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 376));
      }
      swift_release();
      v22 += 6;
      --v16;
    }
    while (v16);
  }
  uint64_t v34 = swift_bridgeObjectRetain();
  v35 = (void *)sub_1B6845D7C(v34);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  sub_1B68E4B8C(v35, v37, a2, a3, a4, a5, a6 & 1, a7, a9, a10, a8 & 1, a11, a12 & 1);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6846164(unsigned __int16 **a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v109 = *MEMORY[0x1E4F143B8];
  uint64_t v14 = a1[9];
  uint64_t v15 = *((void *)v14 + 4);
  uint64_t v16 = a1[5];
  uint64_t v95 = v15;
  v96 = a1[7];
  if (v96 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v15);
    uint64_t v20 = (uint64_t)a1[10];
    v94 = ecs_stack_allocator_allocate(v15, 16 * v20, 16);
    uint64_t v21 = v15;
    if (v20 <= 0 || !v96)
    {
LABEL_66:
      uint64_t v79 = *(void *)(*(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                      + 8 * *(void *)thread_worker_index()
                      + 8);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B62F6B80(a9);
      sub_1B6B2440C(0, a3, 1, a4 | ((HIDWORD(a4) & 1) << 32), a6 - a5, v79, a5, a7, (uint64_t)v94, a2, a8, a9, a10, a11 & 1);
      sub_1B62F648C(a9);
      swift_release();
      swift_release();
      swift_release();
      return ecs_stack_allocator_pop_snapshot(v21);
    }
    uint64_t v22 = 0;
    int v23 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v107 = *a1;
    uint64_t v104 = (uint64_t)*a1 + 41;
    int v93 = v23;
    v92 = v16;
LABEL_8:
    uint64_t v24 = (unsigned int *)&v16[24 * v22];
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = *((void *)v24 + 5);
    uint64_t v29 = v16;
    if (v23)
    {
      uint64_t v30 = *(os_unfair_lock_s **)(v28 + 376);
      swift_retain();
      os_unfair_lock_lock(v30);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v21);
    uint64_t v100 = *((void *)v14 + 7);
    uint64_t v101 = *((void *)v14 + 6);
    uint64_t v99 = *((void *)v14 + 8);
    uint64_t v98 = *((void *)v14 + 9);
    uint64_t v102 = *((void *)v14 + 10);
    uint64_t v31 = *((void *)v14 + 4);
    uint64_t v32 = v28;
    uint64_t v33 = *(void *)(*(void *)(*(void *)(*(void *)(v28 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v14 + 6) = ecs_stack_allocator_allocate(v31, 48 * v33, 8);
    *((void *)v14 + 7) = v33;
    *((void *)v14 + 9) = 0;
    *((void *)v14 + 10) = 0;
    *((void *)v14 + 8) = 0;
    swift_release();
    uint64_t v34 = &v94[2 * v27];
    uint64_t v35 = v26 - v25;
    swift_retain();
    uint64_t v36 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, 0, 0, 0, (uint64_t)v14);
    if (v37)
    {
      long long v108 = xmmword_1B6E4F370;
      memset_pattern16_nocache(v34, &v108, 16 * v35);
    }
    else
    {
      memcpy(v34, (const void *)(v36 + 16 * v25), 16 * v35);
    }
    swift_release();
    uint64_t v16 = v29;
    uint64_t v103 = v32;
    unint64_t v38 = *((void *)v14 + 6);
    uint64_t v39 = *((void *)v14 + 8);
    if (!v39)
    {
      uint64_t v65 = *((void *)v14 + 7);
      v66 = (void *)*((void *)v14 + 4);
      goto LABEL_51;
    }
    uint64_t v97 = v22;
    uint64_t v40 = 0;
    while (1)
    {
      char v42 = (uint64_t *)(v38 + 48 * v40);
      uint64_t v43 = *v42;
      v44 = (void (*)(uint64_t))v42[4];
      uint64_t v45 = *((void *)v14 + 9);
      if (v45) {
        BOOL v46 = v43 == v45;
      }
      else {
        BOOL v46 = 0;
      }
      if (!v46 && v107[11])
      {
        unint64_t v47 = v107[9];
        int v48 = (void *)(v104 + v107[8]);
        uint64_t v49 = v42[2];
        uint64_t v50 = v48;
        unint64_t v51 = v47 >> 4;
        uint64_t v52 = v104;
        if (v47 < 0x10) {
          goto LABEL_31;
        }
        while (*v50 != v43)
        {
          ++v52;
          v50 += 2;
          if (!--v51) {
            goto LABEL_31;
          }
        }
        unsigned int v53 = *(unsigned __int8 *)(v52 + v107[10]);
        BOOL v54 = v53 > 5;
        int v55 = (1 << v53) & 0x23;
        if (!v54 && v55 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v57 = v49;
          }
          else {
            uint64_t v57 = 0;
          }
          if (!v57) {
            goto LABEL_17;
          }
          int v58 = v48;
          unint64_t v59 = v47 >> 4;
          uint64_t v60 = v104;
          if (v47 >= 0x10)
          {
            while (*v58 != v57)
            {
              ++v60;
              v58 += 2;
              if (!--v59) {
                goto LABEL_43;
              }
            }
            unsigned int v61 = *(unsigned __int8 *)(v60 + v107[10]);
            BOOL v54 = v61 > 5;
            int v62 = (1 << v61) & 0x23;
            if (v54 || v62 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v64 = 16 * (v47 >> 4);
            while (*v48 != v57)
            {
              v48 += 2;
              v64 -= 16;
              if (!v64) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v41 = swift_retain();
      v44(v41);
      swift_release();
LABEL_17:
      if (++v40 == v39)
      {
        uint64_t v65 = *((void *)v14 + 7);
        unint64_t v38 = *((void *)v14 + 6);
        v66 = (void *)*((void *)v14 + 4);
        uint64_t v22 = v97;
        if (*((uint64_t *)v14 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v16 = v92;
LABEL_51:
        ecs_stack_allocator_deallocate(v66, v38, 48 * v65);
        *((void *)v14 + 6) = v101;
        *((void *)v14 + 7) = v100;
        *((void *)v14 + 8) = v99;
        *((void *)v14 + 9) = v98;
        uint64_t v67 = v103;
        *((void *)v14 + 10) = v102;
        if (*(void *)(*((void *)v14 + 13) + 16))
        {
          uint64_t v68 = swift_bridgeObjectRetain();
          sub_1B639147C(v68, v103);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v70 = *((void *)v14 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v70 + 16));
          }
          else
          {
            v71 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v70 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v67 = v103;
              v71 = (void *)swift_allocObject();
              size_t v72 = j__malloc_size(v71);
              v71[2] = 0;
              v71[3] = 2 * ((uint64_t)(v72 - 32) / 72);
            }
            *((void *)v14 + 13) = v71;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v14 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v73 = v67;
            v76 = *(char **)(v67 + 232);
            v75 = (void *)(v67 + 232);
            v74 = v76;
            v77 = (char *)v75[3];
            if (v76 == v77)
            {
              v78 = *(char **)(v73 + 240);
              uint64_t v67 = v73;
            }
            else
            {
              sub_1B666018C(v77, v74);
              v77 = *(char **)(v73 + 232);
              v78 = *(char **)(v73 + 240);
              if (v78 == v77)
              {
                v78 = 0;
                v77 = 0;
                void *v75 = 0;
                v75[1] = 0;
              }
              uint64_t v67 = v103;
            }
            *(void *)(v67 + 248) = v78;
            *(void *)(v67 + 256) = v77;
          }
        }
        uint64_t v21 = v95;
        ecs_stack_allocator_pop_snapshot(v95);
        int v23 = v93;
        if (v93)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v67 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v67 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v22 == v96) {
          goto LABEL_66;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v105 = *(unsigned int *)v16;
  swift_retain();
  uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, 0, 0, 0, (uint64_t)v14);
  if (v18)
  {
    ecs_stack_allocator_push_snapshot(v15);
    uint64_t v81 = 16 * (void)a1[10];
    v82 = ecs_stack_allocator_allocate(v15, v81, 16);
    uint64_t v83 = (uint64_t)v82;
    if (v81) {
      memset_pattern16(v82, &xmmword_1B6E4F370, v81);
    }
    uint64_t v84 = *(void *)(*(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                    + 8 * *(void *)thread_worker_index()
                    + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B62F6B80(a9);
    sub_1B6B2440C(0, a3, 1, a4 | ((HIDWORD(a4) & 1) << 32), a6 - a5, v84, a5, a7, v83, a2, a8, a9, a10, a11 & 1);
    sub_1B62F648C(a9);
    swift_release();
    swift_release();
    swift_release();
    ecs_stack_allocator_pop_snapshot(v15);
  }
  else
  {
    uint64_t v106 = v17 + 16 * v105;
    uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                    + 8 * *(void *)thread_worker_index()
                    + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B62F6B80(a9);
    sub_1B6B2440C(0, a3, 1, a4 | ((HIDWORD(a4) & 1) << 32), a6 - a5, v19, a5, a7, v106, a2, a8, a9, a10, a11 & 1);
    sub_1B62F648C(a9);
    swift_release();
    swift_release();
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1B6846AD4(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, float *a5, uint64_t *a6)
{
  uint64_t v96 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = a1[9];
  uint64_t v8 = *((void *)v7 + 4);
  unint64_t v9 = a1[5];
  v86 = a1[7];
  if (v86 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v8);
    uint64_t v14 = (uint64_t)a1[10];
    v85 = ecs_stack_allocator_allocate(v8, 16 * v14, 16);
    uint64_t v76 = (16 * v14) >> 4;
    if (v14 <= 0 || !v86)
    {
LABEL_66:
      sub_1B696C670((uint64_t)v85, v76, a2, a3, a4, a5, a6);
      return ecs_stack_allocator_pop_snapshot(v8);
    }
    uint64_t v15 = 0;
    int v16 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v94 = *a1;
    uint64_t v93 = (uint64_t)*a1 + 41;
    int v83 = v16;
    uint64_t v84 = v8;
    v82 = v9;
LABEL_8:
    uint64_t v17 = (unsigned int *)&v9[24 * v15];
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = *((void *)v17 + 5);
    uint64_t v22 = v9;
    if (v16)
    {
      int v23 = *(os_unfair_lock_s **)(v21 + 376);
      swift_retain();
      os_unfair_lock_lock(v23);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    uint64_t v89 = *((void *)v7 + 7);
    uint64_t v90 = *((void *)v7 + 6);
    uint64_t v87 = *((void *)v7 + 9);
    uint64_t v88 = *((void *)v7 + 8);
    uint64_t v91 = *((void *)v7 + 10);
    uint64_t v24 = *((void *)v7 + 4);
    uint64_t v25 = v21;
    uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v21 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v7 + 6) = ecs_stack_allocator_allocate(v24, 48 * v26, 8);
    *((void *)v7 + 7) = v26;
    *((void *)v7 + 9) = 0;
    *((void *)v7 + 10) = 0;
    *((void *)v7 + 8) = 0;
    swift_release();
    uint64_t v27 = &v85[2 * v20];
    uint64_t v28 = v19 - v18;
    swift_retain();
    uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, 0, 0, 0, (uint64_t)v7);
    if (v30)
    {
      long long v95 = xmmword_1B6E4F370;
      memset_pattern16_nocache(v27, &v95, 16 * v28);
    }
    else
    {
      memcpy(v27, (const void *)(v29 + 16 * v18), 16 * v28);
    }
    swift_release();
    unint64_t v9 = v22;
    uint64_t v92 = v25;
    unint64_t v31 = *((void *)v7 + 6);
    uint64_t v32 = *((void *)v7 + 8);
    if (!v32)
    {
      uint64_t v58 = *((void *)v7 + 7);
      unint64_t v59 = (void *)*((void *)v7 + 4);
      goto LABEL_51;
    }
    uint64_t v33 = 0;
    while (1)
    {
      uint64_t v35 = (uint64_t *)(v31 + 48 * v33);
      uint64_t v36 = *v35;
      char v37 = (void (*)(uint64_t))v35[4];
      uint64_t v38 = *((void *)v7 + 9);
      if (v38) {
        BOOL v39 = v36 == v38;
      }
      else {
        BOOL v39 = 0;
      }
      if (!v39 && v94[11])
      {
        unint64_t v40 = v94[9];
        uint64_t v41 = (void *)(v93 + v94[8]);
        uint64_t v42 = v35[2];
        uint64_t v43 = v41;
        unint64_t v44 = v40 >> 4;
        uint64_t v45 = v93;
        if (v40 < 0x10) {
          goto LABEL_31;
        }
        while (*v43 != v36)
        {
          ++v45;
          v43 += 2;
          if (!--v44) {
            goto LABEL_31;
          }
        }
        unsigned int v46 = *(unsigned __int8 *)(v45 + v94[10]);
        BOOL v47 = v46 > 5;
        int v48 = (1 << v46) & 0x23;
        if (!v47 && v48 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v50 = v42;
          }
          else {
            uint64_t v50 = 0;
          }
          if (!v50) {
            goto LABEL_17;
          }
          unint64_t v51 = v41;
          unint64_t v52 = v40 >> 4;
          uint64_t v53 = v93;
          if (v40 >= 0x10)
          {
            while (*v51 != v50)
            {
              ++v53;
              v51 += 2;
              if (!--v52) {
                goto LABEL_43;
              }
            }
            unsigned int v54 = *(unsigned __int8 *)(v53 + v94[10]);
            BOOL v47 = v54 > 5;
            int v55 = (1 << v54) & 0x23;
            if (v47 || v55 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v57 = 16 * (v40 >> 4);
            while (*v41 != v50)
            {
              v41 += 2;
              v57 -= 16;
              if (!v57) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v34 = swift_retain();
      v37(v34);
      swift_release();
LABEL_17:
      if (++v33 == v32)
      {
        uint64_t v58 = *((void *)v7 + 7);
        unint64_t v31 = *((void *)v7 + 6);
        unint64_t v59 = (void *)*((void *)v7 + 4);
        if (*((uint64_t *)v7 + 8) >= 1) {
          swift_arrayDestroy();
        }
        unint64_t v9 = v82;
LABEL_51:
        ecs_stack_allocator_deallocate(v59, v31, 48 * v58);
        *((void *)v7 + 6) = v90;
        *((void *)v7 + 7) = v89;
        *((void *)v7 + 8) = v88;
        *((void *)v7 + 9) = v87;
        uint64_t v60 = v92;
        *((void *)v7 + 10) = v91;
        if (*(void *)(*((void *)v7 + 13) + 16))
        {
          uint64_t v61 = swift_bridgeObjectRetain();
          sub_1B639147C(v61, v92);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v63 = *((void *)v7 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v63 + 16));
          }
          else
          {
            uint64_t v64 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v63 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v60 = v92;
              uint64_t v64 = (void *)swift_allocObject();
              size_t v65 = j__malloc_size(v64);
              v64[2] = 0;
              v64[3] = 2 * ((uint64_t)(v65 - 32) / 72);
            }
            *((void *)v7 + 13) = v64;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v7 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v66 = v60;
            v69 = *(char **)(v60 + 232);
            uint64_t v68 = (void *)(v60 + 232);
            uint64_t v67 = v69;
            uint64_t v70 = (char *)v68[3];
            if (v69 == v70)
            {
              v71 = *(char **)(v66 + 240);
              uint64_t v60 = v66;
            }
            else
            {
              sub_1B666018C(v70, v67);
              uint64_t v70 = *(char **)(v66 + 232);
              v71 = *(char **)(v66 + 240);
              if (v71 == v70)
              {
                v71 = 0;
                uint64_t v70 = 0;
                *uint64_t v68 = 0;
                v68[1] = 0;
              }
              uint64_t v60 = v92;
            }
            *(void *)(v60 + 248) = v71;
            *(void *)(v60 + 256) = v70;
          }
        }
        uint64_t v8 = v84;
        ecs_stack_allocator_pop_snapshot(v84);
        int v16 = v83;
        if (v83)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v15 == v86) {
          goto LABEL_66;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v10 = *(unsigned int *)v9;
  uint64_t v11 = *((unsigned int *)v9 + 1);
  swift_retain();
  uint64_t v12 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, 0, 0, 0, (uint64_t)v7);
  if (v13)
  {
    ecs_stack_allocator_push_snapshot(v8);
    uint64_t v73 = 16 * (void)a1[10];
    v74 = ecs_stack_allocator_allocate(v8, v73, 16);
    uint64_t v75 = (uint64_t)v74;
    if (v73) {
      memset_pattern16(v74, &xmmword_1B6E4F370, v73);
    }
    sub_1B696C670(v75, v73 >> 4, a2, a3, a4, a5, a6);
    ecs_stack_allocator_pop_snapshot(v8);
  }
  else
  {
    sub_1B696C670(v12 + 16 * v10, v11 - v10, a2, a3, a4, a5, a6);
  }

  return swift_release();
}

uint64_t sub_1B68471B8(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  char v80 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v87 = a1[7];
  if (v87 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    v86 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v75 = (16 * v16) >> 4;
    if (v16 <= 0 || !v87)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v86, v75, a2, a3, a4, a5, a6, v80, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v96 = *a1;
    uint64_t v95 = (uint64_t)*a1 + 41;
    int v84 = v18;
    uint64_t v85 = v10;
    int v83 = v11;
LABEL_8:
    uint64_t v19 = (unsigned int *)&v11[24 * v17];
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = *((void *)v19 + 5);
    uint64_t v24 = v11;
    if (v18)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v91 = *((void *)v9 + 7);
    uint64_t v92 = *((void *)v9 + 6);
    uint64_t v90 = *((void *)v9 + 8);
    uint64_t v93 = *((void *)v9 + 10);
    uint64_t v94 = *((void *)v9 + 9);
    uint64_t v26 = *((void *)v9 + 4);
    uint64_t v27 = v23;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v26, 48 * v28, 8);
    *((void *)v9 + 7) = v28;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v29 = &v86[2 * v22];
    uint64_t v30 = v21 - v20;
    swift_retain();
    uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, 0, 0, 0, (uint64_t)v9);
    if (v32)
    {
      long long v97 = xmmword_1B6E4F370;
      memset_pattern16_nocache(v29, &v97, 16 * v30);
    }
    else
    {
      memcpy(v29, (const void *)(v31 + 16 * v20), 16 * v30);
    }
    swift_release();
    uint64_t v33 = v27;
    uint64_t v11 = v24;
    unint64_t v34 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 8);
    if (!v35)
    {
      uint64_t v61 = *((void *)v9 + 7);
      int v62 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v88 = v27;
    uint64_t v89 = v17;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(v34 + 48 * v36);
      uint64_t v39 = *v38;
      unint64_t v40 = (void (*)(uint64_t))v38[4];
      uint64_t v41 = *((void *)v9 + 9);
      if (v41) {
        BOOL v42 = v39 == v41;
      }
      else {
        BOOL v42 = 0;
      }
      if (!v42 && v96[11])
      {
        unint64_t v43 = v96[9];
        unint64_t v44 = (void *)(v95 + v96[8]);
        uint64_t v45 = v38[2];
        unsigned int v46 = v44;
        unint64_t v47 = v43 >> 4;
        uint64_t v48 = v95;
        if (v43 < 0x10) {
          goto LABEL_31;
        }
        while (*v46 != v39)
        {
          ++v48;
          v46 += 2;
          if (!--v47) {
            goto LABEL_31;
          }
        }
        unsigned int v49 = *(unsigned __int8 *)(v48 + v96[10]);
        BOOL v50 = v49 > 5;
        int v51 = (1 << v49) & 0x23;
        if (!v50 && v51 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v53 = v45;
          }
          else {
            uint64_t v53 = 0;
          }
          if (!v53) {
            goto LABEL_17;
          }
          unsigned int v54 = v44;
          unint64_t v55 = v43 >> 4;
          uint64_t v56 = v95;
          if (v43 >= 0x10)
          {
            while (*v54 != v53)
            {
              ++v56;
              v54 += 2;
              if (!--v55) {
                goto LABEL_43;
              }
            }
            unsigned int v57 = *(unsigned __int8 *)(v56 + v96[10]);
            BOOL v50 = v57 > 5;
            int v58 = (1 << v57) & 0x23;
            if (v50 || v58 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v60 = 16 * (v43 >> 4);
            while (*v44 != v53)
            {
              v44 += 2;
              v60 -= 16;
              if (!v60) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v37 = swift_retain();
      v40(v37);
      swift_release();
LABEL_17:
      if (++v36 == v35)
      {
        uint64_t v61 = *((void *)v9 + 7);
        unint64_t v34 = *((void *)v9 + 6);
        int v62 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v83;
        uint64_t v33 = v88;
        uint64_t v17 = v89;
LABEL_51:
        ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
        *((void *)v9 + 6) = v92;
        *((void *)v9 + 7) = v91;
        *((void *)v9 + 8) = v90;
        *((void *)v9 + 9) = v94;
        *((void *)v9 + 10) = v93;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v63 = swift_bridgeObjectRetain();
          sub_1B639147C(v63, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v65 + 16));
          }
          else
          {
            uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v65 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v66 = (void *)swift_allocObject();
              size_t v67 = j__malloc_size(v66);
              v66[2] = 0;
              v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
            }
            *((void *)v9 + 13) = v66;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v68 = *(char **)(v33 + 232);
            v69 = *(char **)(v33 + 256);
            if (v68 == v69)
            {
              uint64_t v70 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v68);
              v69 = *(char **)(v33 + 232);
              uint64_t v70 = *(char **)(v33 + 240);
              if (v70 == v69)
              {
                uint64_t v70 = 0;
                v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
            }
            *(void *)(v33 + 248) = v70;
            *(void *)(v33 + 256) = v69;
          }
        }
        uint64_t v10 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v18 = v84;
        if (v84)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v87) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v72 = 16 * (void)a1[10];
    uint64_t v73 = ecs_stack_allocator_allocate(v10, v72, 16);
    uint64_t v74 = (uint64_t)v73;
    if (v72) {
      memset_pattern16(v73, &xmmword_1B6E4F370, v72);
    }
    sub_1B684A25C(v74, v72 >> 4, a2, a3, a4, a5, a6, v80, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v80, a8);
  }

  return swift_release();
}

uint64_t sub_1B68478BC(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  v97[2] = *MEMORY[0x1E4F143B8];
  char v80 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v87 = a1[7];
  if (v87 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    v86 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v75 = (16 * v16) >> 4;
    if (v16 <= 0 || !v87)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v86, v75, a2, a3, a4, a5, a6, v80, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v96 = *a1;
    uint64_t v95 = (uint64_t)*a1 + 41;
    int v84 = v18;
    uint64_t v85 = v10;
    int v83 = v11;
LABEL_8:
    uint64_t v19 = (unsigned int *)&v11[24 * v17];
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = *((void *)v19 + 5);
    uint64_t v24 = v11;
    if (v18)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v92 = *((void *)v9 + 6);
    uint64_t v90 = *((void *)v9 + 8);
    uint64_t v91 = *((void *)v9 + 7);
    uint64_t v93 = *((void *)v9 + 10);
    uint64_t v94 = *((void *)v9 + 9);
    uint64_t v26 = *((void *)v9 + 4);
    uint64_t v27 = v23;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v26, 48 * v28, 8);
    *((void *)v9 + 7) = v28;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v29 = &v86[2 * v22];
    uint64_t v30 = v21 - v20;
    swift_retain();
    uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, 0, 0, 0, (uint64_t)v9);
    if (v32)
    {
      v97[0] = 0;
      v97[1] = 0;
      memset_pattern16_nocache(v29, v97, 16 * v30);
    }
    else
    {
      memcpy(v29, (const void *)(v31 + 16 * v20), 16 * v30);
    }
    swift_release();
    uint64_t v33 = v27;
    uint64_t v11 = v24;
    unint64_t v34 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 8);
    if (!v35)
    {
      uint64_t v61 = *((void *)v9 + 7);
      int v62 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v88 = v27;
    uint64_t v89 = v17;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(v34 + 48 * v36);
      uint64_t v39 = *v38;
      unint64_t v40 = (void (*)(uint64_t))v38[4];
      uint64_t v41 = *((void *)v9 + 9);
      if (v41) {
        BOOL v42 = v39 == v41;
      }
      else {
        BOOL v42 = 0;
      }
      if (!v42 && v96[11])
      {
        unint64_t v43 = v96[9];
        unint64_t v44 = (void *)(v95 + v96[8]);
        uint64_t v45 = v38[2];
        unsigned int v46 = v44;
        unint64_t v47 = v43 >> 4;
        uint64_t v48 = v95;
        if (v43 < 0x10) {
          goto LABEL_31;
        }
        while (*v46 != v39)
        {
          ++v48;
          v46 += 2;
          if (!--v47) {
            goto LABEL_31;
          }
        }
        unsigned int v49 = *(unsigned __int8 *)(v48 + v96[10]);
        BOOL v50 = v49 > 5;
        int v51 = (1 << v49) & 0x23;
        if (!v50 && v51 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v53 = v45;
          }
          else {
            uint64_t v53 = 0;
          }
          if (!v53) {
            goto LABEL_17;
          }
          unsigned int v54 = v44;
          unint64_t v55 = v43 >> 4;
          uint64_t v56 = v95;
          if (v43 >= 0x10)
          {
            while (*v54 != v53)
            {
              ++v56;
              v54 += 2;
              if (!--v55) {
                goto LABEL_43;
              }
            }
            unsigned int v57 = *(unsigned __int8 *)(v56 + v96[10]);
            BOOL v50 = v57 > 5;
            int v58 = (1 << v57) & 0x23;
            if (v50 || v58 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v60 = 16 * (v43 >> 4);
            while (*v44 != v53)
            {
              v44 += 2;
              v60 -= 16;
              if (!v60) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v37 = swift_retain();
      v40(v37);
      swift_release();
LABEL_17:
      if (++v36 == v35)
      {
        uint64_t v61 = *((void *)v9 + 7);
        unint64_t v34 = *((void *)v9 + 6);
        int v62 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v83;
        uint64_t v33 = v88;
        uint64_t v17 = v89;
LABEL_51:
        ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
        *((void *)v9 + 6) = v92;
        *((void *)v9 + 7) = v91;
        *((void *)v9 + 8) = v90;
        *((void *)v9 + 9) = v94;
        *((void *)v9 + 10) = v93;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v63 = swift_bridgeObjectRetain();
          sub_1B639147C(v63, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v65 + 16));
          }
          else
          {
            uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v65 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v66 = (void *)swift_allocObject();
              size_t v67 = j__malloc_size(v66);
              v66[2] = 0;
              v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
            }
            *((void *)v9 + 13) = v66;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v68 = *(char **)(v33 + 232);
            v69 = *(char **)(v33 + 256);
            if (v68 == v69)
            {
              uint64_t v70 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v68);
              v69 = *(char **)(v33 + 232);
              uint64_t v70 = *(char **)(v33 + 240);
              if (v70 == v69)
              {
                uint64_t v70 = 0;
                v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
            }
            *(void *)(v33 + 248) = v70;
            *(void *)(v33 + 256) = v69;
          }
        }
        uint64_t v10 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v18 = v84;
        if (v84)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v87) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v72 = 16 * (void)a1[10];
    uint64_t v73 = ecs_stack_allocator_allocate(v10, v72, 16);
    uint64_t v74 = (uint64_t)v73;
    if (v72) {
      bzero(v73, v72);
    }
    sub_1B684A25C(v74, v72 >> 4, a2, a3, a4, a5, a6, v80, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v80, a8);
  }

  return swift_release();
}

uint64_t sub_1B6847FA8(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  v97[2] = *MEMORY[0x1E4F143B8];
  char v80 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v87 = a1[7];
  if (v87 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    v86 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v75 = (16 * v16) >> 4;
    if (v16 <= 0 || !v87)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v86, v75, a2, a3, a4, a5, a6, v80, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v96 = *a1;
    uint64_t v95 = (uint64_t)*a1 + 41;
    int v84 = v18;
    uint64_t v85 = v10;
    int v83 = v11;
LABEL_8:
    uint64_t v19 = (unsigned int *)&v11[24 * v17];
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = *((void *)v19 + 5);
    uint64_t v24 = v11;
    if (v18)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v92 = *((void *)v9 + 6);
    uint64_t v90 = *((void *)v9 + 8);
    uint64_t v91 = *((void *)v9 + 7);
    uint64_t v93 = *((void *)v9 + 10);
    uint64_t v94 = *((void *)v9 + 9);
    uint64_t v26 = *((void *)v9 + 4);
    uint64_t v27 = v23;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v26, 48 * v28, 8);
    *((void *)v9 + 7) = v28;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v29 = &v86[2 * v22];
    uint64_t v30 = v21 - v20;
    swift_retain();
    uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for UserData4, (uint64_t)&off_1F0FAA940, 0, 0, 0, (uint64_t)v9);
    if (v32)
    {
      v97[0] = 0;
      v97[1] = 0;
      memset_pattern16_nocache(v29, v97, 16 * v30);
    }
    else
    {
      memcpy(v29, (const void *)(v31 + 16 * v20), 16 * v30);
    }
    swift_release();
    uint64_t v33 = v27;
    uint64_t v11 = v24;
    unint64_t v34 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 8);
    if (!v35)
    {
      uint64_t v61 = *((void *)v9 + 7);
      int v62 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v88 = v27;
    uint64_t v89 = v17;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(v34 + 48 * v36);
      uint64_t v39 = *v38;
      unint64_t v40 = (void (*)(uint64_t))v38[4];
      uint64_t v41 = *((void *)v9 + 9);
      if (v41) {
        BOOL v42 = v39 == v41;
      }
      else {
        BOOL v42 = 0;
      }
      if (!v42 && v96[11])
      {
        unint64_t v43 = v96[9];
        unint64_t v44 = (void *)(v95 + v96[8]);
        uint64_t v45 = v38[2];
        unsigned int v46 = v44;
        unint64_t v47 = v43 >> 4;
        uint64_t v48 = v95;
        if (v43 < 0x10) {
          goto LABEL_31;
        }
        while (*v46 != v39)
        {
          ++v48;
          v46 += 2;
          if (!--v47) {
            goto LABEL_31;
          }
        }
        unsigned int v49 = *(unsigned __int8 *)(v48 + v96[10]);
        BOOL v50 = v49 > 5;
        int v51 = (1 << v49) & 0x23;
        if (!v50 && v51 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v53 = v45;
          }
          else {
            uint64_t v53 = 0;
          }
          if (!v53) {
            goto LABEL_17;
          }
          unsigned int v54 = v44;
          unint64_t v55 = v43 >> 4;
          uint64_t v56 = v95;
          if (v43 >= 0x10)
          {
            while (*v54 != v53)
            {
              ++v56;
              v54 += 2;
              if (!--v55) {
                goto LABEL_43;
              }
            }
            unsigned int v57 = *(unsigned __int8 *)(v56 + v96[10]);
            BOOL v50 = v57 > 5;
            int v58 = (1 << v57) & 0x23;
            if (v50 || v58 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v60 = 16 * (v43 >> 4);
            while (*v44 != v53)
            {
              v44 += 2;
              v60 -= 16;
              if (!v60) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v37 = swift_retain();
      v40(v37);
      swift_release();
LABEL_17:
      if (++v36 == v35)
      {
        uint64_t v61 = *((void *)v9 + 7);
        unint64_t v34 = *((void *)v9 + 6);
        int v62 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v83;
        uint64_t v33 = v88;
        uint64_t v17 = v89;
LABEL_51:
        ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
        *((void *)v9 + 6) = v92;
        *((void *)v9 + 7) = v91;
        *((void *)v9 + 8) = v90;
        *((void *)v9 + 9) = v94;
        *((void *)v9 + 10) = v93;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v63 = swift_bridgeObjectRetain();
          sub_1B639147C(v63, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v65 + 16));
          }
          else
          {
            uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v65 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v66 = (void *)swift_allocObject();
              size_t v67 = j__malloc_size(v66);
              v66[2] = 0;
              v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
            }
            *((void *)v9 + 13) = v66;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v68 = *(char **)(v33 + 232);
            v69 = *(char **)(v33 + 256);
            if (v68 == v69)
            {
              uint64_t v70 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v68);
              v69 = *(char **)(v33 + 232);
              uint64_t v70 = *(char **)(v33 + 240);
              if (v70 == v69)
              {
                uint64_t v70 = 0;
                v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
            }
            *(void *)(v33 + 248) = v70;
            *(void *)(v33 + 256) = v69;
          }
        }
        uint64_t v10 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v18 = v84;
        if (v84)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v87) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for UserData4, (uint64_t)&off_1F0FAA940, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v72 = 16 * (void)a1[10];
    uint64_t v73 = ecs_stack_allocator_allocate(v10, v72, 16);
    uint64_t v74 = (uint64_t)v73;
    if (v72) {
      bzero(v73, v72);
    }
    sub_1B684A25C(v74, v72 >> 4, a2, a3, a4, a5, a6, v80, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v80, a8);
  }

  return swift_release();
}

uint64_t sub_1B6848694(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  v97[2] = *MEMORY[0x1E4F143B8];
  char v80 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v87 = a1[7];
  if (v87 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    v86 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v75 = (16 * v16) >> 4;
    if (v16 <= 0 || !v87)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v86, v75, a2, a3, a4, a5, a6, v80, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v96 = *a1;
    uint64_t v95 = (uint64_t)*a1 + 41;
    int v84 = v18;
    uint64_t v85 = v10;
    int v83 = v11;
LABEL_8:
    uint64_t v19 = (unsigned int *)&v11[24 * v17];
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = *((void *)v19 + 5);
    uint64_t v24 = v11;
    if (v18)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v92 = *((void *)v9 + 6);
    uint64_t v90 = *((void *)v9 + 8);
    uint64_t v91 = *((void *)v9 + 7);
    uint64_t v93 = *((void *)v9 + 10);
    uint64_t v94 = *((void *)v9 + 9);
    uint64_t v26 = *((void *)v9 + 4);
    uint64_t v27 = v23;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v26, 48 * v28, 8);
    *((void *)v9 + 7) = v28;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v29 = &v86[2 * v22];
    uint64_t v30 = v21 - v20;
    swift_retain();
    uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for UserData3, (uint64_t)&off_1F0FAA748, 0, 0, 0, (uint64_t)v9);
    if (v32)
    {
      v97[0] = 0;
      v97[1] = 0;
      memset_pattern16_nocache(v29, v97, 16 * v30);
    }
    else
    {
      memcpy(v29, (const void *)(v31 + 16 * v20), 16 * v30);
    }
    swift_release();
    uint64_t v33 = v27;
    uint64_t v11 = v24;
    unint64_t v34 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 8);
    if (!v35)
    {
      uint64_t v61 = *((void *)v9 + 7);
      int v62 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v88 = v27;
    uint64_t v89 = v17;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(v34 + 48 * v36);
      uint64_t v39 = *v38;
      unint64_t v40 = (void (*)(uint64_t))v38[4];
      uint64_t v41 = *((void *)v9 + 9);
      if (v41) {
        BOOL v42 = v39 == v41;
      }
      else {
        BOOL v42 = 0;
      }
      if (!v42 && v96[11])
      {
        unint64_t v43 = v96[9];
        unint64_t v44 = (void *)(v95 + v96[8]);
        uint64_t v45 = v38[2];
        unsigned int v46 = v44;
        unint64_t v47 = v43 >> 4;
        uint64_t v48 = v95;
        if (v43 < 0x10) {
          goto LABEL_31;
        }
        while (*v46 != v39)
        {
          ++v48;
          v46 += 2;
          if (!--v47) {
            goto LABEL_31;
          }
        }
        unsigned int v49 = *(unsigned __int8 *)(v48 + v96[10]);
        BOOL v50 = v49 > 5;
        int v51 = (1 << v49) & 0x23;
        if (!v50 && v51 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v53 = v45;
          }
          else {
            uint64_t v53 = 0;
          }
          if (!v53) {
            goto LABEL_17;
          }
          unsigned int v54 = v44;
          unint64_t v55 = v43 >> 4;
          uint64_t v56 = v95;
          if (v43 >= 0x10)
          {
            while (*v54 != v53)
            {
              ++v56;
              v54 += 2;
              if (!--v55) {
                goto LABEL_43;
              }
            }
            unsigned int v57 = *(unsigned __int8 *)(v56 + v96[10]);
            BOOL v50 = v57 > 5;
            int v58 = (1 << v57) & 0x23;
            if (v50 || v58 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v60 = 16 * (v43 >> 4);
            while (*v44 != v53)
            {
              v44 += 2;
              v60 -= 16;
              if (!v60) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v37 = swift_retain();
      v40(v37);
      swift_release();
LABEL_17:
      if (++v36 == v35)
      {
        uint64_t v61 = *((void *)v9 + 7);
        unint64_t v34 = *((void *)v9 + 6);
        int v62 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v83;
        uint64_t v33 = v88;
        uint64_t v17 = v89;
LABEL_51:
        ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
        *((void *)v9 + 6) = v92;
        *((void *)v9 + 7) = v91;
        *((void *)v9 + 8) = v90;
        *((void *)v9 + 9) = v94;
        *((void *)v9 + 10) = v93;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v63 = swift_bridgeObjectRetain();
          sub_1B639147C(v63, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v65 + 16));
          }
          else
          {
            uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v65 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v66 = (void *)swift_allocObject();
              size_t v67 = j__malloc_size(v66);
              v66[2] = 0;
              v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
            }
            *((void *)v9 + 13) = v66;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v68 = *(char **)(v33 + 232);
            v69 = *(char **)(v33 + 256);
            if (v68 == v69)
            {
              uint64_t v70 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v68);
              v69 = *(char **)(v33 + 232);
              uint64_t v70 = *(char **)(v33 + 240);
              if (v70 == v69)
              {
                uint64_t v70 = 0;
                v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
            }
            *(void *)(v33 + 248) = v70;
            *(void *)(v33 + 256) = v69;
          }
        }
        uint64_t v10 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v18 = v84;
        if (v84)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v87) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for UserData3, (uint64_t)&off_1F0FAA748, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v72 = 16 * (void)a1[10];
    uint64_t v73 = ecs_stack_allocator_allocate(v10, v72, 16);
    uint64_t v74 = (uint64_t)v73;
    if (v72) {
      bzero(v73, v72);
    }
    sub_1B684A25C(v74, v72 >> 4, a2, a3, a4, a5, a6, v80, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v80, a8);
  }

  return swift_release();
}

uint64_t sub_1B6848D80(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  v97[2] = *MEMORY[0x1E4F143B8];
  char v80 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v87 = a1[7];
  if (v87 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    v86 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v75 = (16 * v16) >> 4;
    if (v16 <= 0 || !v87)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v86, v75, a2, a3, a4, a5, a6, v80, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v96 = *a1;
    uint64_t v95 = (uint64_t)*a1 + 41;
    int v84 = v18;
    uint64_t v85 = v10;
    int v83 = v11;
LABEL_8:
    uint64_t v19 = (unsigned int *)&v11[24 * v17];
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = *((void *)v19 + 5);
    uint64_t v24 = v11;
    if (v18)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v92 = *((void *)v9 + 6);
    uint64_t v90 = *((void *)v9 + 8);
    uint64_t v91 = *((void *)v9 + 7);
    uint64_t v93 = *((void *)v9 + 10);
    uint64_t v94 = *((void *)v9 + 9);
    uint64_t v26 = *((void *)v9 + 4);
    uint64_t v27 = v23;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v26, 48 * v28, 8);
    *((void *)v9 + 7) = v28;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v29 = &v86[2 * v22];
    uint64_t v30 = v21 - v20;
    swift_retain();
    uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for UserData2, (uint64_t)&off_1F0FAA550, 0, 0, 0, (uint64_t)v9);
    if (v32)
    {
      v97[0] = 0;
      v97[1] = 0;
      memset_pattern16_nocache(v29, v97, 16 * v30);
    }
    else
    {
      memcpy(v29, (const void *)(v31 + 16 * v20), 16 * v30);
    }
    swift_release();
    uint64_t v33 = v27;
    uint64_t v11 = v24;
    unint64_t v34 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 8);
    if (!v35)
    {
      uint64_t v61 = *((void *)v9 + 7);
      int v62 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v88 = v27;
    uint64_t v89 = v17;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(v34 + 48 * v36);
      uint64_t v39 = *v38;
      unint64_t v40 = (void (*)(uint64_t))v38[4];
      uint64_t v41 = *((void *)v9 + 9);
      if (v41) {
        BOOL v42 = v39 == v41;
      }
      else {
        BOOL v42 = 0;
      }
      if (!v42 && v96[11])
      {
        unint64_t v43 = v96[9];
        unint64_t v44 = (void *)(v95 + v96[8]);
        uint64_t v45 = v38[2];
        unsigned int v46 = v44;
        unint64_t v47 = v43 >> 4;
        uint64_t v48 = v95;
        if (v43 < 0x10) {
          goto LABEL_31;
        }
        while (*v46 != v39)
        {
          ++v48;
          v46 += 2;
          if (!--v47) {
            goto LABEL_31;
          }
        }
        unsigned int v49 = *(unsigned __int8 *)(v48 + v96[10]);
        BOOL v50 = v49 > 5;
        int v51 = (1 << v49) & 0x23;
        if (!v50 && v51 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v53 = v45;
          }
          else {
            uint64_t v53 = 0;
          }
          if (!v53) {
            goto LABEL_17;
          }
          unsigned int v54 = v44;
          unint64_t v55 = v43 >> 4;
          uint64_t v56 = v95;
          if (v43 >= 0x10)
          {
            while (*v54 != v53)
            {
              ++v56;
              v54 += 2;
              if (!--v55) {
                goto LABEL_43;
              }
            }
            unsigned int v57 = *(unsigned __int8 *)(v56 + v96[10]);
            BOOL v50 = v57 > 5;
            int v58 = (1 << v57) & 0x23;
            if (v50 || v58 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v60 = 16 * (v43 >> 4);
            while (*v44 != v53)
            {
              v44 += 2;
              v60 -= 16;
              if (!v60) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v37 = swift_retain();
      v40(v37);
      swift_release();
LABEL_17:
      if (++v36 == v35)
      {
        uint64_t v61 = *((void *)v9 + 7);
        unint64_t v34 = *((void *)v9 + 6);
        int v62 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v83;
        uint64_t v33 = v88;
        uint64_t v17 = v89;
LABEL_51:
        ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
        *((void *)v9 + 6) = v92;
        *((void *)v9 + 7) = v91;
        *((void *)v9 + 8) = v90;
        *((void *)v9 + 9) = v94;
        *((void *)v9 + 10) = v93;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v63 = swift_bridgeObjectRetain();
          sub_1B639147C(v63, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v65 + 16));
          }
          else
          {
            uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v65 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v66 = (void *)swift_allocObject();
              size_t v67 = j__malloc_size(v66);
              v66[2] = 0;
              v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
            }
            *((void *)v9 + 13) = v66;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v68 = *(char **)(v33 + 232);
            v69 = *(char **)(v33 + 256);
            if (v68 == v69)
            {
              uint64_t v70 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v68);
              v69 = *(char **)(v33 + 232);
              uint64_t v70 = *(char **)(v33 + 240);
              if (v70 == v69)
              {
                uint64_t v70 = 0;
                v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
            }
            *(void *)(v33 + 248) = v70;
            *(void *)(v33 + 256) = v69;
          }
        }
        uint64_t v10 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v18 = v84;
        if (v84)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v87) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for UserData2, (uint64_t)&off_1F0FAA550, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v72 = 16 * (void)a1[10];
    uint64_t v73 = ecs_stack_allocator_allocate(v10, v72, 16);
    uint64_t v74 = (uint64_t)v73;
    if (v72) {
      bzero(v73, v72);
    }
    sub_1B684A25C(v74, v72 >> 4, a2, a3, a4, a5, a6, v80, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v80, a8);
  }

  return swift_release();
}

uint64_t sub_1B684946C(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  v97[2] = *MEMORY[0x1E4F143B8];
  char v80 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v87 = a1[7];
  if (v87 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    v86 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v75 = (16 * v16) >> 4;
    if (v16 <= 0 || !v87)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v86, v75, a2, a3, a4, a5, a6, v80, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v96 = *a1;
    uint64_t v95 = (uint64_t)*a1 + 41;
    int v84 = v18;
    uint64_t v85 = v10;
    int v83 = v11;
LABEL_8:
    uint64_t v19 = (unsigned int *)&v11[24 * v17];
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = *((void *)v19 + 5);
    uint64_t v24 = v11;
    if (v18)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v92 = *((void *)v9 + 6);
    uint64_t v90 = *((void *)v9 + 8);
    uint64_t v91 = *((void *)v9 + 7);
    uint64_t v93 = *((void *)v9 + 10);
    uint64_t v94 = *((void *)v9 + 9);
    uint64_t v26 = *((void *)v9 + 4);
    uint64_t v27 = v23;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v26, 48 * v28, 8);
    *((void *)v9 + 7) = v28;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v29 = &v86[2 * v22];
    uint64_t v30 = v21 - v20;
    swift_retain();
    uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for UserData1, (uint64_t)&off_1F0FAA358, 0, 0, 0, (uint64_t)v9);
    if (v32)
    {
      v97[0] = 0;
      v97[1] = 0;
      memset_pattern16_nocache(v29, v97, 16 * v30);
    }
    else
    {
      memcpy(v29, (const void *)(v31 + 16 * v20), 16 * v30);
    }
    swift_release();
    uint64_t v33 = v27;
    uint64_t v11 = v24;
    unint64_t v34 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 8);
    if (!v35)
    {
      uint64_t v61 = *((void *)v9 + 7);
      int v62 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v88 = v27;
    uint64_t v89 = v17;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(v34 + 48 * v36);
      uint64_t v39 = *v38;
      unint64_t v40 = (void (*)(uint64_t))v38[4];
      uint64_t v41 = *((void *)v9 + 9);
      if (v41) {
        BOOL v42 = v39 == v41;
      }
      else {
        BOOL v42 = 0;
      }
      if (!v42 && v96[11])
      {
        unint64_t v43 = v96[9];
        unint64_t v44 = (void *)(v95 + v96[8]);
        uint64_t v45 = v38[2];
        unsigned int v46 = v44;
        unint64_t v47 = v43 >> 4;
        uint64_t v48 = v95;
        if (v43 < 0x10) {
          goto LABEL_31;
        }
        while (*v46 != v39)
        {
          ++v48;
          v46 += 2;
          if (!--v47) {
            goto LABEL_31;
          }
        }
        unsigned int v49 = *(unsigned __int8 *)(v48 + v96[10]);
        BOOL v50 = v49 > 5;
        int v51 = (1 << v49) & 0x23;
        if (!v50 && v51 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v53 = v45;
          }
          else {
            uint64_t v53 = 0;
          }
          if (!v53) {
            goto LABEL_17;
          }
          unsigned int v54 = v44;
          unint64_t v55 = v43 >> 4;
          uint64_t v56 = v95;
          if (v43 >= 0x10)
          {
            while (*v54 != v53)
            {
              ++v56;
              v54 += 2;
              if (!--v55) {
                goto LABEL_43;
              }
            }
            unsigned int v57 = *(unsigned __int8 *)(v56 + v96[10]);
            BOOL v50 = v57 > 5;
            int v58 = (1 << v57) & 0x23;
            if (v50 || v58 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v60 = 16 * (v43 >> 4);
            while (*v44 != v53)
            {
              v44 += 2;
              v60 -= 16;
              if (!v60) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v37 = swift_retain();
      v40(v37);
      swift_release();
LABEL_17:
      if (++v36 == v35)
      {
        uint64_t v61 = *((void *)v9 + 7);
        unint64_t v34 = *((void *)v9 + 6);
        int v62 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v83;
        uint64_t v33 = v88;
        uint64_t v17 = v89;
LABEL_51:
        ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
        *((void *)v9 + 6) = v92;
        *((void *)v9 + 7) = v91;
        *((void *)v9 + 8) = v90;
        *((void *)v9 + 9) = v94;
        *((void *)v9 + 10) = v93;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v63 = swift_bridgeObjectRetain();
          sub_1B639147C(v63, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v65 + 16));
          }
          else
          {
            uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v65 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v66 = (void *)swift_allocObject();
              size_t v67 = j__malloc_size(v66);
              v66[2] = 0;
              v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
            }
            *((void *)v9 + 13) = v66;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v68 = *(char **)(v33 + 232);
            v69 = *(char **)(v33 + 256);
            if (v68 == v69)
            {
              uint64_t v70 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v68);
              v69 = *(char **)(v33 + 232);
              uint64_t v70 = *(char **)(v33 + 240);
              if (v70 == v69)
              {
                uint64_t v70 = 0;
                v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
            }
            *(void *)(v33 + 248) = v70;
            *(void *)(v33 + 256) = v69;
          }
        }
        uint64_t v10 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v18 = v84;
        if (v84)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v87) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for UserData1, (uint64_t)&off_1F0FAA358, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v72 = 16 * (void)a1[10];
    uint64_t v73 = ecs_stack_allocator_allocate(v10, v72, 16);
    uint64_t v74 = (uint64_t)v73;
    if (v72) {
      bzero(v73, v72);
    }
    sub_1B684A25C(v74, v72 >> 4, a2, a3, a4, a5, a6, v80, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v80, a8);
  }

  return swift_release();
}

uint64_t sub_1B6849B58(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  char v80 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v87 = a1[7];
  if (v87 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    v86 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v75 = (16 * v16) >> 4;
    if (v16 <= 0 || !v87)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v86, v75, a2, a3, a4, a5, a6, v80, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v96 = *a1;
    uint64_t v95 = (uint64_t)*a1 + 41;
    int v84 = v18;
    uint64_t v85 = v10;
    int v83 = v11;
LABEL_8:
    uint64_t v19 = (unsigned int *)&v11[24 * v17];
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = *((void *)v19 + 5);
    uint64_t v24 = v11;
    if (v18)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v25);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v91 = *((void *)v9 + 7);
    uint64_t v92 = *((void *)v9 + 6);
    uint64_t v90 = *((void *)v9 + 8);
    uint64_t v93 = *((void *)v9 + 10);
    uint64_t v94 = *((void *)v9 + 9);
    uint64_t v26 = *((void *)v9 + 4);
    uint64_t v27 = v23;
    uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v26, 48 * v28, 8);
    *((void *)v9 + 7) = v28;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v29 = &v86[2 * v22];
    uint64_t v30 = v21 - v20;
    swift_retain();
    uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, 0, 0, 0, (uint64_t)v9);
    if (v32)
    {
      long long v97 = xmmword_1B6E4F370;
      memset_pattern16_nocache(v29, &v97, 16 * v30);
    }
    else
    {
      memcpy(v29, (const void *)(v31 + 16 * v20), 16 * v30);
    }
    swift_release();
    uint64_t v33 = v27;
    uint64_t v11 = v24;
    unint64_t v34 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 8);
    if (!v35)
    {
      uint64_t v61 = *((void *)v9 + 7);
      int v62 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v88 = v27;
    uint64_t v89 = v17;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(v34 + 48 * v36);
      uint64_t v39 = *v38;
      unint64_t v40 = (void (*)(uint64_t))v38[4];
      uint64_t v41 = *((void *)v9 + 9);
      if (v41) {
        BOOL v42 = v39 == v41;
      }
      else {
        BOOL v42 = 0;
      }
      if (!v42 && v96[11])
      {
        unint64_t v43 = v96[9];
        unint64_t v44 = (void *)(v95 + v96[8]);
        uint64_t v45 = v38[2];
        unsigned int v46 = v44;
        unint64_t v47 = v43 >> 4;
        uint64_t v48 = v95;
        if (v43 < 0x10) {
          goto LABEL_31;
        }
        while (*v46 != v39)
        {
          ++v48;
          v46 += 2;
          if (!--v47) {
            goto LABEL_31;
          }
        }
        unsigned int v49 = *(unsigned __int8 *)(v48 + v96[10]);
        BOOL v50 = v49 > 5;
        int v51 = (1 << v49) & 0x23;
        if (!v50 && v51 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v53 = v45;
          }
          else {
            uint64_t v53 = 0;
          }
          if (!v53) {
            goto LABEL_17;
          }
          unsigned int v54 = v44;
          unint64_t v55 = v43 >> 4;
          uint64_t v56 = v95;
          if (v43 >= 0x10)
          {
            while (*v54 != v53)
            {
              ++v56;
              v54 += 2;
              if (!--v55) {
                goto LABEL_43;
              }
            }
            unsigned int v57 = *(unsigned __int8 *)(v56 + v96[10]);
            BOOL v50 = v57 > 5;
            int v58 = (1 << v57) & 0x23;
            if (v50 || v58 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v60 = 16 * (v43 >> 4);
            while (*v44 != v53)
            {
              v44 += 2;
              v60 -= 16;
              if (!v60) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v37 = swift_retain();
      v40(v37);
      swift_release();
LABEL_17:
      if (++v36 == v35)
      {
        uint64_t v61 = *((void *)v9 + 7);
        unint64_t v34 = *((void *)v9 + 6);
        int v62 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v83;
        uint64_t v33 = v88;
        uint64_t v17 = v89;
LABEL_51:
        ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
        *((void *)v9 + 6) = v92;
        *((void *)v9 + 7) = v91;
        *((void *)v9 + 8) = v90;
        *((void *)v9 + 9) = v94;
        *((void *)v9 + 10) = v93;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v63 = swift_bridgeObjectRetain();
          sub_1B639147C(v63, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v65 + 16));
          }
          else
          {
            uint64_t v66 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v65 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v66 = (void *)swift_allocObject();
              size_t v67 = j__malloc_size(v66);
              v66[2] = 0;
              v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
            }
            *((void *)v9 + 13) = v66;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v68 = *(char **)(v33 + 232);
            v69 = *(char **)(v33 + 256);
            if (v68 == v69)
            {
              uint64_t v70 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v68);
              v69 = *(char **)(v33 + 232);
              uint64_t v70 = *(char **)(v33 + 240);
              if (v70 == v69)
              {
                uint64_t v70 = 0;
                v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
            }
            *(void *)(v33 + 248) = v70;
            *(void *)(v33 + 256) = v69;
          }
        }
        uint64_t v10 = v85;
        ecs_stack_allocator_pop_snapshot(v85);
        int v18 = v84;
        if (v84)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v87) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v72 = 16 * (void)a1[10];
    uint64_t v73 = ecs_stack_allocator_allocate(v10, v72, 16);
    uint64_t v74 = (uint64_t)v73;
    if (v72) {
      memset_pattern16(v73, &xmmword_1B6E4F370, v72);
    }
    sub_1B684A25C(v74, v72 >> 4, a2, a3, a4, a5, a6, v80, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v80, a8);
  }

  return swift_release();
}

uint64_t *sub_1B684A25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v77 = 0;
  uint64_t v95 = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v15 = (16 * a2) >> 4;
  }
  else {
    uint64_t v15 = 0;
  }
  long long v16 = *(_OWORD *)(a3 + 104);
  v82[0] = *(_OWORD *)(a3 + 88);
  v82[1] = v16;
  uint64_t v83 = *(void *)(a3 + 120);
  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E77050;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v18 = *(void *)(a5 + 8);
  *(void *)(v17 + 32) = a4;
  *(void *)(v17 + 40) = v18;
  swift_retain();
  sub_1B62F75EC(v17, (uint64_t)v78);
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v82);
  sub_1B62C9DA8(a6, (uint64_t)v78, 0x200000000, v84);
  sub_1B62CA37C((uint64_t)v84, (uint64_t)v93, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v93[0]) {
    uint64_t v19 = v93[10];
  }
  else {
    uint64_t v19 = 0;
  }
  if ((a8 & 1) == 0 && (a7 & 0x8000000000000000) == 0 && a7)
  {
LABEL_29:
    sub_1B62CA37C((uint64_t)v84, (uint64_t)&v85, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v85)
    {
      if (v92 <= 0) {
        goto LABEL_47;
      }
      uint64_t v64 = v89;
      if (!v89) {
        goto LABEL_47;
      }
      uint64_t v36 = v91;
      uint64_t v37 = v91[4];
      int v38 = *(unsigned __int8 *)(v90 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      long long v79 = v85;
      long long v80 = v86;
      uint64_t v81 = v87;
      uint64_t v56 = (uint64_t)(v91 + 6);
      uint64_t v58 = v88;
      unsigned int v54 = v91 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v39 = 0;
      int v60 = v38;
      uint64_t v62 = v37;
      do
      {
        unint64_t v40 = (unsigned int *)(v58 + 48 * v39);
        uint64_t v41 = v40[2];
        uint64_t v42 = *((void *)v40 + 5);
        uint64_t v74 = v40[1];
        uint64_t v76 = *v40;
        uint64_t v70 = *((void *)v40 + 3);
        uint64_t v72 = (uint64_t *)*((void *)v40 + 2);
        uint64_t v68 = *((void *)v40 + 4);
        if (v38)
        {
          unint64_t v43 = *(os_unfair_lock_s **)(v42 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v43);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v42 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v37);
        sub_1B62CA37C(v56, (uint64_t)v94, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v44 = v36[4];
        uint64_t v45 = *(void *)(*(void *)(*(void *)(*(void *)(v42 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v36[6] = ecs_stack_allocator_allocate(v44, 48 * v45, 8);
        v36[7] = v45;
        v54[1] = 0;
        v54[2] = 0;
        *unsigned int v54 = 0;
        swift_release();
        uint64_t v46 = sub_1B62C9024(v65, v66, v72, v70, v68, (uint64_t)v36);
        if (v76 == v74)
        {
          uint64_t v47 = v77;
          int v38 = v60;
        }
        else
        {
          uint64_t v48 = (_OWORD *)(v46 + 16 * v76);
          uint64_t v49 = v74 - v76;
          uint64_t v47 = v77;
          int v38 = v60;
          do
          {
            long long v50 = 0uLL;
            if (v41 / a7 < v15) {
              long long v50 = *(_OWORD *)(a1 + 16 * (v41 / a7));
            }
            *v48++ = v50;
            ++v41;
            --v49;
          }
          while (v49);
        }
        sub_1B6345178(v36, (unsigned __int16 **)&v79, (uint64_t)v94);
        uint64_t v77 = v47;
        sub_1B634507C((char *)v42);
        uint64_t v37 = v62;
        ecs_stack_allocator_pop_snapshot(v62);
        if (v38)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v42 + 376));
        }
        swift_release();
        ++v39;
      }
      while (v39 != v64);
      goto LABEL_46;
    }
    return (uint64_t *)sub_1B62CA064((uint64_t)v78);
  }
  if (*(void *)(a9 + 80) >= v19)
  {
    a7 = 1;
    goto LABEL_29;
  }
  uint64_t v52 = *(void *)(a9 + 80);
  sub_1B62CA37C((uint64_t)v84, (uint64_t)&v85, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!(void)v85) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v78);
  }
  if (v92 <= 0) {
    goto LABEL_47;
  }
  uint64_t v63 = v89;
  if (!v89) {
    goto LABEL_47;
  }
  uint64_t v20 = v91;
  uint64_t v21 = v91[4];
  int v22 = *(unsigned __int8 *)(v90 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  long long v79 = v85;
  long long v80 = v86;
  uint64_t v81 = v87;
  uint64_t v57 = (uint64_t)(v91 + 6);
  uint64_t v59 = v88;
  unint64_t v55 = v91 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = -1;
  int v53 = v22;
  uint64_t v61 = v21;
  do
  {
    uint64_t v26 = (unsigned int *)(v59 + 48 * v24);
    uint64_t v27 = *((void *)v26 + 5);
    uint64_t v73 = *v26;
    uint64_t v75 = v26[1];
    uint64_t v69 = *((void *)v26 + 3);
    v71 = (uint64_t *)*((void *)v26 + 2);
    uint64_t v67 = *((void *)v26 + 4);
    if (v22)
    {
      uint64_t v28 = *(os_unfair_lock_s **)(v27 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v28);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v21);
    sub_1B62CA37C(v57, (uint64_t)v94, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v29 = v20[4];
    uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v27 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v20[6] = ecs_stack_allocator_allocate(v29, 48 * v30, 8);
    v20[7] = v30;
    v55[1] = 0;
    v55[2] = 0;
    *unint64_t v55 = 0;
    swift_release();
    uint64_t v31 = sub_1B62C9024(v65, v66, v71, v69, v67, (uint64_t)v20);
    if (v73 == v75)
    {
      uint64_t v32 = v77;
      int v22 = v53;
    }
    else
    {
      uint64_t v33 = v19 + v73;
      uint64_t v34 = v75 - v73;
      uint64_t v35 = (_OWORD *)(v31 + 16 * v73);
      uint64_t v32 = v77;
      int v22 = v53;
      do
      {
        if (!v23)
        {
          ++v25;
          uint64_t v23 = v19 / (v52 - v25);
        }
        *v35++ = *(_OWORD *)(a1 + 16 * v25);
        --v19;
        --v23;
        --v34;
      }
      while (v34);
      uint64_t v19 = v33 - v75;
    }
    sub_1B6345178(v20, (unsigned __int16 **)&v79, (uint64_t)v94);
    uint64_t v77 = v32;
    sub_1B634507C((char *)v27);
    uint64_t v21 = v61;
    ecs_stack_allocator_pop_snapshot(v61);
    if (v22)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 376));
    }
    swift_release();
    ++v24;
  }
  while (v24 != v63);
LABEL_46:
  sub_1B632F170(v84);
LABEL_47:
  sub_1B62CA064((uint64_t)v78);
  return sub_1B632F170(v84);
}

uint64_t sub_1B684A8E4(unsigned __int16 **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v103 = *MEMORY[0x1E4F143B8];
  char v84 = a7 & 1;
  unint64_t v9 = a1[9];
  uint64_t v10 = *((void *)v9 + 4);
  uint64_t v11 = a1[5];
  uint64_t v92 = a1[7];
  if (v92 != (unsigned __int16 *)1)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v16 = (uint64_t)a1[10];
    uint64_t v91 = ecs_stack_allocator_allocate(v10, 16 * v16, 16);
    uint64_t v79 = (16 * v16) >> 4;
    if (v16 <= 0 || !v92)
    {
LABEL_65:
      sub_1B684A25C((uint64_t)v91, v79, a2, a3, a4, a5, a6, v84, a8);
      return ecs_stack_allocator_pop_snapshot(v10);
    }
    uint64_t v17 = 0;
    int v18 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v101 = *a1;
    uint64_t v100 = (uint64_t)*a1 + 41;
    __asm { FMOV            V0.4S, #1.0 }
    long long v87 = _Q0;
    int v89 = v18;
    uint64_t v90 = v10;
    uint64_t v88 = v11;
LABEL_8:
    uint64_t v23 = (unsigned int *)&v11[24 * v17];
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t v26 = v23[2];
    uint64_t v27 = *((void *)v23 + 5);
    uint64_t v28 = v11;
    if (v18)
    {
      uint64_t v29 = *(os_unfair_lock_s **)(v27 + 376);
      swift_retain();
      os_unfair_lock_lock(v29);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v96 = *((void *)v9 + 7);
    uint64_t v97 = *((void *)v9 + 6);
    uint64_t v95 = *((void *)v9 + 8);
    uint64_t v98 = *((void *)v9 + 10);
    uint64_t v99 = *((void *)v9 + 9);
    uint64_t v30 = *((void *)v9 + 4);
    uint64_t v31 = v27;
    uint64_t v32 = *(void *)(*(void *)(*(void *)(*(void *)(v27 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *((void *)v9 + 6) = ecs_stack_allocator_allocate(v30, 48 * v32, 8);
    *((void *)v9 + 7) = v32;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 8) = 0;
    swift_release();
    uint64_t v33 = &v91[2 * v26];
    uint64_t v34 = v25 - v24;
    swift_retain();
    uint64_t v35 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, 0, 0, 0, (uint64_t)v9);
    if (v36)
    {
      long long v102 = v87;
      memset_pattern16_nocache(v33, &v102, 16 * v34);
    }
    else
    {
      memcpy(v33, (const void *)(v35 + 16 * v24), 16 * v34);
    }
    swift_release();
    uint64_t v37 = v31;
    uint64_t v11 = v28;
    unint64_t v38 = *((void *)v9 + 6);
    uint64_t v39 = *((void *)v9 + 8);
    if (!v39)
    {
      uint64_t v65 = *((void *)v9 + 7);
      uint64_t v66 = (void *)*((void *)v9 + 4);
      goto LABEL_51;
    }
    uint64_t v93 = v31;
    uint64_t v94 = v17;
    uint64_t v40 = 0;
    while (1)
    {
      uint64_t v42 = (uint64_t *)(v38 + 48 * v40);
      uint64_t v43 = *v42;
      uint64_t v44 = (void (*)(uint64_t))v42[4];
      uint64_t v45 = *((void *)v9 + 9);
      if (v45) {
        _ZF = v43 == v45;
      }
      else {
        _ZF = 0;
      }
      if (!_ZF && v101[11])
      {
        unint64_t v47 = v101[9];
        uint64_t v48 = (void *)(v100 + v101[8]);
        uint64_t v49 = v42[2];
        long long v50 = v48;
        unint64_t v51 = v47 >> 4;
        uint64_t v52 = v100;
        if (v47 < 0x10) {
          goto LABEL_31;
        }
        while (*v50 != v43)
        {
          ++v52;
          v50 += 2;
          if (!--v51) {
            goto LABEL_31;
          }
        }
        unsigned int v53 = *(unsigned __int8 *)(v52 + v101[10]);
        BOOL v54 = v53 > 5;
        int v55 = (1 << v53) & 0x23;
        if (!v54 && v55 != 0)
        {
LABEL_31:
          if (swift_conformsToProtocol2()) {
            uint64_t v57 = v49;
          }
          else {
            uint64_t v57 = 0;
          }
          if (!v57) {
            goto LABEL_17;
          }
          uint64_t v58 = v48;
          unint64_t v59 = v47 >> 4;
          uint64_t v60 = v100;
          if (v47 >= 0x10)
          {
            while (*v58 != v57)
            {
              ++v60;
              v58 += 2;
              if (!--v59) {
                goto LABEL_43;
              }
            }
            unsigned int v61 = *(unsigned __int8 *)(v60 + v101[10]);
            BOOL v54 = v61 > 5;
            int v62 = (1 << v61) & 0x23;
            if (v54 || v62 == 0) {
              goto LABEL_16;
            }
LABEL_43:
            uint64_t v64 = 16 * (v47 >> 4);
            while (*v48 != v57)
            {
              v48 += 2;
              v64 -= 16;
              if (!v64) {
                goto LABEL_16;
              }
            }
            goto LABEL_17;
          }
        }
      }
LABEL_16:
      uint64_t v41 = swift_retain();
      v44(v41);
      swift_release();
LABEL_17:
      if (++v40 == v39)
      {
        uint64_t v65 = *((void *)v9 + 7);
        unint64_t v38 = *((void *)v9 + 6);
        uint64_t v66 = (void *)*((void *)v9 + 4);
        if (*((uint64_t *)v9 + 8) >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v11 = v88;
        uint64_t v37 = v93;
        uint64_t v17 = v94;
LABEL_51:
        ecs_stack_allocator_deallocate(v66, v38, 48 * v65);
        *((void *)v9 + 6) = v97;
        *((void *)v9 + 7) = v96;
        *((void *)v9 + 8) = v95;
        *((void *)v9 + 9) = v99;
        *((void *)v9 + 10) = v98;
        if (*(void *)(*((void *)v9 + 13) + 16))
        {
          uint64_t v67 = swift_bridgeObjectRetain();
          sub_1B639147C(v67, v37);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v69 = *((void *)v9 + 13);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v69 + 16));
          }
          else
          {
            uint64_t v70 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v69 + 24) >= 2uLL)
            {
              sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
              uint64_t v70 = (void *)swift_allocObject();
              size_t v71 = j__malloc_size(v70);
              v70[2] = 0;
              v70[3] = 2 * ((uint64_t)(v71 - 32) / 72);
            }
            *((void *)v9 + 13) = v70;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(*((void *)v9 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v72 = *(char **)(v37 + 232);
            uint64_t v73 = *(char **)(v37 + 256);
            if (v72 == v73)
            {
              uint64_t v74 = *(char **)(v37 + 240);
            }
            else
            {
              sub_1B666018C(v73, v72);
              uint64_t v73 = *(char **)(v37 + 232);
              uint64_t v74 = *(char **)(v37 + 240);
              if (v74 == v73)
              {
                uint64_t v74 = 0;
                uint64_t v73 = 0;
                *(void *)(v37 + 232) = 0;
                *(void *)(v37 + 240) = 0;
              }
            }
            *(void *)(v37 + 248) = v74;
            *(void *)(v37 + 256) = v73;
          }
        }
        uint64_t v10 = v90;
        ecs_stack_allocator_pop_snapshot(v90);
        int v18 = v89;
        if (v89)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 376));
        }
        swift_release();
        if ((unsigned __int16 *)++v17 == v92) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
    }
  }
  uint64_t v12 = *(unsigned int *)v11;
  uint64_t v13 = *((unsigned int *)v11 + 1);
  swift_retain();
  uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, 0, 0, 0, (uint64_t)v9);
  if (v15)
  {
    ecs_stack_allocator_push_snapshot(v10);
    uint64_t v76 = 16 * (void)a1[10];
    uint64_t v77 = ecs_stack_allocator_allocate(v10, v76, 16);
    uint64_t v78 = (uint64_t)v77;
    if (v76) {
      memset_pattern16(v77, &xmmword_1B6E4F380, v76);
    }
    sub_1B684A25C(v78, v76 >> 4, a2, a3, a4, a5, a6, v84, a8);
    ecs_stack_allocator_pop_snapshot(v10);
  }
  else
  {
    sub_1B684A25C(v14 + 16 * v12, v13 - v12, a2, a3, a4, a5, a6, v84, a8);
  }

  return swift_release();
}

ValueMetadata *type metadata accessor for AABB()
{
  return &type metadata for AABB;
}

double sub_1B684AFF4(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vsubq_f32(a1, a2).u64[0];
  return result;
}

double sub_1B684AFFC(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vaddq_f32(a1, a2).u64[0];
  return result;
}

__n128 sub_1B684B004(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5)
{
  float32x4_t v11 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, a1.f32[0]), a3, *(float32x2_t *)a1.f32, 1), a4, a1, 2), a5);
  float32x4_t v5 = vmulq_f32(a2, a2);
  float32x4_t v6 = vmulq_f32(a3, a3);
  *(float *)&unsigned int v7 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), vaddq_f32(v5, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1))).f32[0]);
  __n128 v8 = (__n128)vmulq_f32(a4, a4);
  *(float *)&unsigned int v9 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v8, 2), vaddq_f32((float32x4_t)v8, (float32x4_t)vdupq_lane_s32((int32x2_t)v8.n128_u64[0], 1))).f32[0]);
  v8.n128_u64[0] = __PAIR64__(COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 2), vaddq_f32(v6, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v6.f32, 1))).f32[0])), v7);
  v8.n128_u64[1] = v9;
  sub_1B681B434(v8);
  return (__n128)v11;
}

uint64_t sub_1B684B0AC()
{
  return 0x736E6169646172;
}

uint64_t sub_1B684B0C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E6169646172 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B684B15C(uint64_t a1)
{
  unint64_t v2 = sub_1B684CC70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B684B198(uint64_t a1)
{
  unint64_t v2 = sub_1B684CC70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B684B1D4@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  char v15 = a2;
  sub_1B62A22C4(0, &qword_1E9DD14D8, (uint64_t (*)(void))sub_1B684CC70, (uint64_t)&type metadata for AngleF.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  unsigned int v9 = (char *)&v14 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B684CC70();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v15;
  sub_1B6E32DC8();
  int v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *uint64_t v10 = v12;
  return result;
}

uint64_t sub_1B684B38C(void *a1)
{
  sub_1B62A22C4(0, &qword_1E9DD14E8, (uint64_t (*)(void))sub_1B684CC70, (uint64_t)&type metadata for AngleF.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B684CC70();
  sub_1B6E33A88();
  sub_1B6E32F78();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

BOOL sub_1B684B4F8(float *a1, float *a2)
{
  return *a1 < *a2;
}

BOOL sub_1B684B50C(float *a1, float *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1B684B520(float *a1, float *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1B684B534(float *a1, float *a2)
{
  return *a2 < *a1;
}

BOOL sub_1B684B548(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B684B55C()
{
  return 0x656761726F7473;
}

uint64_t sub_1B684B574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B684B60C(uint64_t a1)
{
  unint64_t v2 = sub_1B684CC1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B684B648(uint64_t a1)
{
  unint64_t v2 = sub_1B684CC1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B684B684@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v14 = a2;
  sub_1B62A22C4(0, &qword_1E9DD14C0, (uint64_t (*)(void))sub_1B684CC1C, (uint64_t)&type metadata for ColorU8.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B684CC1C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v14;
  int v11 = sub_1B6E32E68();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *uint64_t v10 = v11;
  return result;
}

uint64_t sub_1B684B830(void *a1)
{
  sub_1B62A22C4(0, &qword_1E9DD14D0, (uint64_t (*)(void))sub_1B684CC1C, (uint64_t)&type metadata for ColorU8.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B684CC1C();
  sub_1B6E33A88();
  sub_1B6E33018();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

BOOL sub_1B684B994(__n128 a1)
{
  int32x2_t v1 = vdup_n_s32(0x7F800000u);
  int32x2_t v2 = vceq_s32((int32x2_t)vand_s8((int8x8_t)vrev64_s32((int32x2_t)a1.n128_u64[0]), (int8x8_t)v1), v1);
  return ((v2.i32[1] | v2.i32[0]) & 1) == 0 && (~a1.n128_u32[2] & 0x7F800000) != 0;
}

BOOL sub_1B684B9D0(__n128 a1)
{
  int32x2_t v1 = vceqz_s32((int32x2_t)(*(void *)&vrev64_s32((int32x2_t)a1.n128_u64[0]) & 0x7FFFFFFF7FFFFFFFLL));
  if ((v1.i32[1] & v1.i32[0] & 1) == 0) {
    return 0;
  }
  if ((a1.n128_u32[2] & 0x7F800000) != 0) {
    return 0;
  }
  return (a1.n128_u32[2] & 0x7FFFFF) == 0;
}

float32x2_t sub_1B684BA0C(float a1, float32x4_t a2, float32x4_t a3)
{
  return vadd_f32(*(float32x2_t *)a2.f32, vmul_n_f32((float32x2_t)*(_OWORD *)&vsubq_f32(vaddq_f32(a2, a3), a2), a1));
}

double sub_1B684BA34(float32x4_t a1, double a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  *(void *)&double result = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(a6, a5, a1, 2), a4, *(float32x2_t *)a1.f32, 1), a3, a1.f32[0]).u64[0];
  return result;
}

BOOL sub_1B684BA6C(__n128 *a1, __n128 *a2)
{
  return sub_1B684C608(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1B684BA78()
{
  return 0x3A206E696DLL;
}

uint64_t sub_1B684BC48()
{
  return sub_1B684BA78();
}

uint64_t sub_1B684BC50(char *a1, char *a2)
{
  return sub_1B6BB9964(*a1, *a2);
}

uint64_t sub_1B684BC5C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B684BCDC()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B684BD48()
{
  return sub_1B6E33988();
}

uint64_t sub_1B684BDC4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B684BE24(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7265746E6563;
  if (*v1) {
    uint64_t v2 = 0x657A6953666C6168;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B684BE60@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B684BEC4(uint64_t a1)
{
  unint64_t v2 = sub_1B62A232C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B684BF00(uint64_t a1)
{
  unint64_t v2 = sub_1B62A232C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B684BF3C(void *a1, __n128 a2, __n128 a3)
{
  __n128 v12 = a3;
  __n128 v13 = a2;
  sub_1B62A22C4(0, &qword_1E9DD14B0, (uint64_t (*)(void))sub_1B62A232C, (uint64_t)&type metadata for AABB.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A232C();
  sub_1B6E33A88();
  __n128 v15 = v13;
  char v14 = 0;
  sub_1B62A22C4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  sub_1B62AAD08((unint64_t *)&qword_1EB97D1F8);
  sub_1B6E32FA8();
  if (!v3)
  {
    __n128 v15 = v12;
    char v14 = 1;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B684C154(void *a1)
{
  return sub_1B684BF3C(a1, *v1, v1[1]);
}

unint64_t sub_1B684C174()
{
  unint64_t result = qword_1E9DD14A8;
  if (!qword_1E9DD14A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD14A8);
  }
  return result;
}

float32x4_t sub_1B684C1C8(float32x4_t *a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7)
{
  float32x4_t v7 = vsubq_f32(a6, a7);
  int32x4_t v8 = (int32x4_t)vaddq_f32(a7, a7);
  float32x4_t v9 = (float32x4_t)vdupq_laneq_s32(v8, 3);
  v9.i32[0] = v8.i32[0];
  float32x4_t v10 = vaddq_f32(v7, v9);
  float32x4_t v11 = vaddq_f32(v7, (float32x4_t)vtrn2q_s32(vuzp2q_s32(v8, v8), v8));
  float32x4_t v12 = vaddq_f32(v9, v11);
  v13.i64[1] = v8.i64[1];
  v13.i32[0] = v8.i32[3];
  v13.i32[1] = v8.i32[3];
  float32x4_t v14 = vaddq_f32(v7, v13);
  float32x4_t v15 = vaddq_f32(v13, v10);
  float32x4_t v16 = vaddq_f32(v13, v11);
  float32x4_t v17 = vaddq_f32(v13, v12);
  *a1 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v7.f32[0]), a3, *(float32x2_t *)v7.f32, 1), a4, v7, 2), a5, v7, 3);
  a1[1] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v10.f32[0]), a3, *(float32x2_t *)v10.f32, 1), a4, v10, 2), a5, v10, 3);
  a1[2] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v11.f32[0]), a3, *(float32x2_t *)v11.f32, 1), a4, v11, 2), a5, v11, 3);
  a1[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v12.f32[0]), a3, *(float32x2_t *)v12.f32, 1), a4, v12, 2), a5, v12, 3);
  a1[4] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v14.f32[0]), a3, *(float32x2_t *)v14.f32, 1), a4, v14, 2), a5, v14, 3);
  a1[5] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v15.f32[0]), a3, *(float32x2_t *)v15.f32, 1), a4, v15, 2), a5, v15, 3);
  float32x4_t v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v16.f32[0]), a3, *(float32x2_t *)v16.f32, 1), a4, v16, 2), a5, v16, 3);
  float32x4_t result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v17.f32[0]), a3, *(float32x2_t *)v17.f32, 1), a4, v17, 2), a5, v17, 3);
  a1[6] = v18;
  a1[7] = result;
  return result;
}

double sub_1B684C29C(float32x4_t a1, int32x4_t a2, int8x16_t a3)
{
  float32x4_t v3 = vmulq_f32(a1, vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8(a3, a3, 0xCuLL), a3, 8uLL), vnegq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a2, a2), (int8x16_t)a2, 0xCuLL))), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a3, (int32x4_t)a3), a3, 0xCuLL), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)a2, (int8x16_t)a2, 0xCuLL), (int8x16_t)a2, 8uLL)));
  float32x4_t v4 = vaddq_f32(v3, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v3.f32, 1));
  int32x2_t v5 = (int32x2_t)vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v3, 2), v4).u64[0];
  if (*(float *)v5.i32 != 0.0)
  {
    float32x4_t v6 = a1;
    v6.f32[0] = -a1.f32[3];
    int32x4_t v7 = a2;
    *(float *)v7.i32 = -*(float *)&a2.i32[3];
    int32x4_t v8 = (int32x4_t)a3;
    *(float *)v8.i32 = -*(float *)&a3.i32[3];
    int32x4_t v9 = (int32x4_t)vmulq_f32(v6, vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)v8, (int8x16_t)v8, 0xCuLL), (int8x16_t)v8, 8uLL), vnegq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v7, v7), (int8x16_t)v7, 0xCuLL))), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v8, v8), (int8x16_t)v8, 0xCuLL), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v7, (int8x16_t)v7, 0xCuLL), (int8x16_t)v7, 8uLL)));
    float32x4_t v10 = a1;
    v10.f32[1] = -a1.f32[3];
    int32x4_t v11 = a2;
    *(float *)&v11.i32[1] = -*(float *)&a2.i32[3];
    int32x4_t v12 = (int32x4_t)a3;
    *(float *)&v12.i32[1] = -*(float *)&a3.i32[3];
    int32x4_t v13 = (int32x4_t)vmulq_f32(v10, vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)v12, (int8x16_t)v12, 0xCuLL), (int8x16_t)v12, 8uLL), vnegq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v11, v11), (int8x16_t)v11, 0xCuLL))), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v12, v12), (int8x16_t)v12, 0xCuLL), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v11, (int8x16_t)v11, 0xCuLL), (int8x16_t)v11, 8uLL)));
    a1.f32[2] = -a1.f32[3];
    *(float *)&a2.i32[2] = -*(float *)&a2.i32[3];
    *(float *)&a3.i32[2] = -*(float *)&a3.i32[3];
    *(float32x2_t *)v4.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v9, v13), vadd_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v9.i8, *(int32x2_t *)v13.i8), (float32x2_t)vzip2_s32(*(int32x2_t *)v9.i8, *(int32x2_t *)v13.i8)));
    a1 = vmulq_f32(a1, vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8(a3, a3, 0xCuLL), a3, 8uLL), vnegq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a2, a2), (int8x16_t)a2, 0xCuLL))), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a3, (int32x4_t)a3), a3, 0xCuLL), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)a2, (int8x16_t)a2, 0xCuLL), (int8x16_t)a2, 8uLL)));
    v4.i32[2] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)a1, 2), vaddq_f32(a1, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.f32, 1))).u32[0];
    a1.i64[0] = vdivq_f32(v4, (float32x4_t)vdupq_lane_s32(v5, 0)).u64[0];
  }
  return *(double *)a1.i64;
}

void sub_1B684C420(void *a1)
{
  int32x4_t v24 = *(int32x4_t *)v1;
  int32x4_t v20 = *((int32x4_t *)v1 + 2);
  int32x4_t v21 = *((int32x4_t *)v1 + 1);
  int32x4_t v23 = *((int32x4_t *)v1 + 3);
  float32x4_t v22 = *((float32x4_t *)v1 + 4);
  float32x4_t v19 = *((float32x4_t *)v1 + 5);
  sub_1B684C29C(v19, v20, (int8x16_t)v21);
  *a1 = v3;
  a1[1] = v4;
  sub_1B684C29C(v19, v24, (int8x16_t)v20);
  a1[2] = v5;
  a1[3] = v6;
  sub_1B684C29C(v19, v21, (int8x16_t)v23);
  a1[4] = v7;
  a1[5] = v8;
  sub_1B684C29C(v19, v23, (int8x16_t)v24);
  a1[6] = v9;
  a1[7] = v10;
  sub_1B684C29C(v22, v20, (int8x16_t)v21);
  a1[8] = v11;
  a1[9] = v12;
  sub_1B684C29C(v22, v24, (int8x16_t)v20);
  a1[10] = v13;
  a1[11] = v14;
  sub_1B684C29C(v22, v21, (int8x16_t)v23);
  a1[12] = v15;
  a1[13] = v16;
  sub_1B684C29C(v22, v23, (int8x16_t)v24);
  a1[14] = v17;
  a1[15] = v18;
}

float32x4_t sub_1B684C4EC(CGColor *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = CGColorGetColorSpace(a1);
  CFStringRef v5 = (const __CFString *)*MEMORY[0x1E4F1DC88];
  CGColorSpaceRef v6 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC88]);
  CGColorSpaceRef v7 = v6;
  if (!v4)
  {

    goto LABEL_5;
  }
  type metadata accessor for CGColorSpace(0);
  sub_1B684C998();
  uint64_t v8 = v4;
  char v9 = sub_1B6E31148();

  if ((v9 & 1) == 0)
  {
LABEL_5:
    uint64_t v11 = CGColorSpaceCreateWithName(v5);
    CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(v11, kCGRenderingIntentDefault, a1, 0);

    goto LABEL_6;
  }
  CGColorRef CopyByMatchingToColorSpace = a1;
LABEL_6:
  uint64_t v12 = sub_1B6E320F8();
  float64x2_t v14 = *(float64x2_t *)(v12 + 32);
  float64x2_t v15 = *(float64x2_t *)(v12 + 48);

  swift_bridgeObjectRelease();
  float32x4_t result = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v14), v15);
  *unint64_t v2 = result;
  return result;
}

BOOL sub_1B684C608(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4 = 0;
  while (1)
  {
    __n128 v14 = a1;
    float v7 = *(float *)((unint64_t)&v14 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
    __n128 v15 = a3;
    float v8 = *(float *)((unint64_t)&v15 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
    BOOL v5 = v7 == v8;
    if (v4 == 3) {
      break;
    }
    while (1)
    {
      ++v4;
      if (v5) {
        break;
      }
      BOOL v5 = 0;
      BOOL result = 0;
      if (v4 == 3) {
        return result;
      }
    }
  }
  if (v7 != v8) {
    return 0;
  }
  uint64_t v9 = 0;
  while (1)
  {
    __n128 v12 = a2;
    float v11 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    __n128 v13 = a4;
    BOOL v10 = v11 == *(float *)((unint64_t)&v13 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    BOOL result = v10;
    if (v9 == 3) {
      break;
    }
    while (1)
    {
      ++v9;
      if (v10) {
        break;
      }
      BOOL v10 = 0;
      BOOL result = 0;
      if (v9 == 3) {
        return result;
      }
    }
  }
  return result;
}

unint64_t sub_1B684C6E4(unint64_t result, unint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0
    || HIDWORD(result)
    || (a2 & 0x8000000000000000) != 0
    || HIDWORD(a2)
    || (a3 & 0x8000000000000000) != 0
    || HIDWORD(a3))
  {
    BOOL result = sub_1B6E32BD8();
    __break(1u);
  }
  return result;
}

simd_float4 sub_1B684C7B8(int a1, int8x16_t a2, int8x16_t a3)
{
  unsigned __int32 v7 = a2.i32[0];
  *(float *)a2.i32 = (float)a1;
  a3.i32[0] = BYTE1(a1);
  a3.i32[1] = BYTE2(a1);
  *(float32x2_t *)a3.i8 = vcvt_f32_u32((uint32x2_t)vand_s8(*(int8x8_t *)a3.i8, (int8x8_t)0xFF000000FFLL));
  float32x4_t v6 = vmulq_f32((float32x4_t)vextq_s8(vextq_s8(a2, a2, 4uLL), a3, 0xCuLL), (float32x4_t)vdupq_n_s32(0x3B808081u));
  simd_float4 v3 = (simd_float4)vdivq_f32(vaddq_f32(v6, (float32x4_t)vdupq_n_s32(0x3D6147AEu)), (float32x4_t)vdupq_n_s32(0x3F870A3Du));
  v3.i32[3] = 0;
  simd_float4 result = _simd_pow_f4(v3, (simd_float4)xmmword_1B6E72D40);
  int32x4_t v4 = vcgeq_f32((float32x4_t)vdupq_n_s32(0x3D25AEE6u), v6);
  v4.i32[3] = 0;
  result.i64[0] = vbslq_s8((int8x16_t)vcltzq_s32(v4), (int8x16_t)vdivq_f32(v6, (float32x4_t)vdupq_n_s32(0x414EB852u)), (int8x16_t)result).u64[0];
  result.i32[3] = v7;
  return result;
}

double sub_1B684C884(CGColor *a1)
{
  unint64_t v2 = CGColorGetColorSpace(a1);
  CFStringRef v3 = (const __CFString *)*MEMORY[0x1E4F1DC88];
  CGColorSpaceRef v4 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC88]);
  CGColorSpaceRef v5 = v4;
  if (!v2)
  {

    goto LABEL_5;
  }
  type metadata accessor for CGColorSpace(0);
  sub_1B684C998();
  float32x4_t v6 = v2;
  char v7 = sub_1B6E31148();

  if ((v7 & 1) == 0)
  {
LABEL_5:
    uint64_t v9 = CGColorSpaceCreateWithName(v3);
    CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(v9, kCGRenderingIntentDefault, a1, 0);

    goto LABEL_6;
  }
  CGColorRef CopyByMatchingToColorSpace = a1;
LABEL_6:
  uint64_t v10 = sub_1B6E320F8();
  float64x2_t v12 = *(float64x2_t *)(v10 + 32);
  float64x2_t v13 = *(float64x2_t *)(v10 + 48);

  swift_bridgeObjectRelease();
  *(void *)&double result = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v12), v13).u64[0];
  return result;
}

unint64_t sub_1B684C998()
{
  unint64_t result = qword_1EB97D818;
  if (!qword_1EB97D818)
  {
    type metadata accessor for CGColorSpace(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D818);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AABB.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B684CABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AABB.CodingKeys()
{
  return &type metadata for AABB.CodingKeys;
}

ValueMetadata *type metadata accessor for ColorU8()
{
  return &type metadata for ColorU8;
}

ValueMetadata *type metadata accessor for AngleF()
{
  return &type metadata for AngleF;
}

unint64_t sub_1B684CB18()
{
  unint64_t result = qword_1E9DD14B8;
  if (!qword_1E9DD14B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD14B8);
  }
  return result;
}

unint64_t sub_1B684CB70()
{
  unint64_t result = qword_1EB97FC20;
  if (!qword_1EB97FC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC20);
  }
  return result;
}

unint64_t sub_1B684CBC8()
{
  unint64_t result = qword_1EB97FC18;
  if (!qword_1EB97FC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC18);
  }
  return result;
}

unint64_t sub_1B684CC1C()
{
  unint64_t result = qword_1E9DD14C8;
  if (!qword_1E9DD14C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD14C8);
  }
  return result;
}

unint64_t sub_1B684CC70()
{
  unint64_t result = qword_1E9DD14E0;
  if (!qword_1E9DD14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD14E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AngleF.CodingKeys()
{
  return &type metadata for AngleF.CodingKeys;
}

unsigned char *_s3VFX6AngleFV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B684CD74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorU8.CodingKeys()
{
  return &type metadata for ColorU8.CodingKeys;
}

__n128 initializeWithCopy for Torus(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for StencilDescriptor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StencilDescriptor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Torus()
{
  return &type metadata for Torus;
}

ValueMetadata *type metadata accessor for Cylinder()
{
  return &type metadata for Cylinder;
}

ValueMetadata *type metadata accessor for Sphere()
{
  return &type metadata for Sphere;
}

ValueMetadata *type metadata accessor for Ray()
{
  return &type metadata for Ray;
}

unint64_t sub_1B684CE58()
{
  unint64_t result = qword_1E9DD14F0;
  if (!qword_1E9DD14F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD14F0);
  }
  return result;
}

unint64_t sub_1B684CEB0()
{
  unint64_t result = qword_1E9DD14F8;
  if (!qword_1E9DD14F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD14F8);
  }
  return result;
}

unint64_t sub_1B684CF08()
{
  unint64_t result = qword_1E9DD1500;
  if (!qword_1E9DD1500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1500);
  }
  return result;
}

unint64_t sub_1B684CF60()
{
  unint64_t result = qword_1E9DD1508;
  if (!qword_1E9DD1508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1508);
  }
  return result;
}

unint64_t sub_1B684CFB8()
{
  unint64_t result = qword_1E9DD1510;
  if (!qword_1E9DD1510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1510);
  }
  return result;
}

unint64_t sub_1B684D010()
{
  unint64_t result = qword_1E9DD1518[0];
  if (!qword_1E9DD1518[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9DD1518);
  }
  return result;
}

uint64_t sub_1B684D068()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B62C6A50(*(void *)(v0 + 64));
  swift_unknownObjectRelease();
  swift_release();
  sub_1B62C6A50(*(void *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1B684D0D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t *a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, uint64_t a16)
{
  char v18 = a4 & 1;
  char v19 = a6 & 1;
  char v20 = a8 & 1;
  uint64_t v21 = swift_allocObject();
  sub_1B62B3628(a1, a2, a3, v18, a5, v19, a7, v20, a9, a10, a11, a12, a13, a14, a15, a16);
  return v21;
}

uint64_t sub_1B684D1A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12, char a13, unint64_t a14, char a15, unint64_t a16, char a17, __int16 a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  type metadata accessor for PropertyDescription();
  type metadata accessor for EntityGetSet();
  swift_retain();
  uint64_t v26 = sub_1B62B3810((uint64_t)a3, a23);
  uint64_t v27 = swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B684D950(a1, a2, a8, a9 & 1, a10, a11 & 1, a12, a13 & 1, a14, a15 & 1, a16, a17 & 1, a7, a5, a6, v26, v29, a3, a19,
    a20,
    a18,
    a21,
    a22,
    a23);
  return v27;
}

void sub_1B684D374()
{
}

uint64_t sub_1B684D3C0()
{
  return swift_getKeyPath();
}

_WORD *sub_1B684D3F0@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_WORD *sub_1B684D3FC@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_WORD *sub_1B684D410@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_WORD *sub_1B684D424@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1B684D438(_WORD *a1, unsigned __int16 *a2)
{
  int v3 = *a2;
  int v4 = (unsigned __int16)*v2;
  if ((v4 & v3) != v3) {
    *unint64_t v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int16 *sub_1B684D468@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = (unsigned __int16)*v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *unint64_t v2 = v4 & ~(_WORD)v3;
  }
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v5 == 0;
  return result;
}

unsigned __int16 *sub_1B684D494@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = (unsigned __int16)*v2;
  *unint64_t v2 = v4 | v3;
  int v5 = v4 & v3;
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v5 == 0;
  return result;
}

_WORD *sub_1B684D4B8(_WORD *result)
{
  *v1 |= *result;
  return result;
}

_WORD *sub_1B684D4CC(_WORD *result)
{
  *v1 &= *result;
  return result;
}

_WORD *sub_1B684D4E0(_WORD *result)
{
  *v1 ^= *result;
  return result;
}

_WORD *sub_1B684D4F4@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1B684D508(unsigned __int16 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1B684D51C(_WORD *a1)
{
  return (unsigned __int16)(*v1 & *a1) == 0;
}

BOOL sub_1B684D530(unsigned __int16 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1B684D544()
{
  return *v0 == 0;
}

_WORD *sub_1B684D554(_WORD *result)
{
  *v1 &= ~*result;
  return result;
}

_WORD *sub_1B684D568@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(unsigned char *)(a2 + 2) = 0;
  return result;
}

void sub_1B684D578(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1B684D584(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B684D598@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    int v5 = (unsigned __int16 *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOWORD(v4) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1B684D5F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int16 a19, uint64_t a20)
{
  uint64_t v21 = v20;
  *(_OWORD *)(v20 + 64) = 0u;
  uint64_t v26 = v20 + 64;
  *(_OWORD *)(v26 + 16) = 0u;
  *(_OWORD *)(v26 + 32) = 0u;
  *(unsigned char *)(v26 + 48) = 1;
  *(void *)(v26 + 64) = 0;
  *(void *)(v26 + 72) = 0;
  *(void *)(v26 + 56) = 0;
  *(_DWORD *)(v26 + 141) = 16777472;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v26 + 104) = 0;
  *(void *)(v26 + 112) = 0;
  *(void *)(v26 + 96) = v27;
  *(_WORD *)(v26 + 146) = 0;
  *(void *)(v26 + 152) = 0;
  uint64_t KeyPath = swift_getKeyPath();
  char v29 = 0;
  *(void *)(v26 - 48) = a1;
  *(void *)(v26 - 40) = a2;
  *(void *)(v26 - 32) = KeyPath;
  *(void *)(v26 - 24) = a16;
  *(void *)(v26 - 16) = 0;
  *(unsigned char *)(v26 - 8) = 1;
  *(_WORD *)(v26 - 6) = a19 | 0x400;
  float v30 = *(double *)&a3;
  float v31 = v30;
  if (a4) {
    float v31 = 0.0;
  }
  *(float *)(v26 + 120) = v31;
  *(unsigned char *)(v26 + 124) = a4 & 1;
  float v32 = *(double *)&a5;
  float v33 = v32;
  if (a6) {
    float v33 = 0.0;
  }
  *(float *)(v26 + 128) = v33;
  *(unsigned char *)(v26 + 132) = a6 & 1;
  float v34 = *(double *)&a7;
  float v35 = v34;
  if (a8) {
    float v35 = 0.0;
  }
  *(float *)(v26 + 136) = v35;
  *(unsigned char *)(v26 + 140) = a8 & 1;
  if ((a10 & 1) != 0 || (char v29 = a9, (a9 & 0x8000000000000000) == 0) && a9 < 0x100)
  {
    *(unsigned char *)(v21 + 205) = v29;
    *(unsigned char *)(v21 + 206) = a10 & 1;
    if (a12)
    {
      char v36 = 0;
LABEL_14:
      *(unsigned char *)(v21 + 207) = v36;
      *(unsigned char *)(v21 + 208) = a12 & 1;
      *(void *)uint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
      *(void *)(v21 + 96) = a13;
      *(_WORD *)(v21 + 210) = a19;
      *(void *)(v21 + 144) = a14;
      *(void *)(v21 + 152) = a15;
      *(void *)(v21 + 168) = a17;
      *(void *)(v21 + 176) = a18;
      swift_bridgeObjectRelease();
      *(void *)(v21 + 160) = a20;
      swift_bridgeObjectRelease();
      return v21;
    }
    char v36 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
  }
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

uint64_t sub_1B684D838(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t a17, uint64_t *a18, uint64_t a19, uint64_t a20,__int16 a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  char v24 = a4 & 1;
  char v25 = a6 & 1;
  char v29 = a8 & 1;
  uint64_t v26 = swift_allocObject();
  sub_1B684D950(a1, a2, a3, v24, a5, v25, a7, v29, a9, a10 & 1, a11, a12 & 1, a13, a14, a15, a16, v28, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
  return v26;
}

uint64_t sub_1B684D950(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t a17, uint64_t *a18, uint64_t a19, uint64_t a20,__int16 a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v25 = v24;
  uint64_t v56 = *a16;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_OWORD *)(v25 + 96) = 0u;
  *(unsigned char *)(v25 + 112) = 1;
  *(void *)(v25 + 128) = 0;
  *(void *)(v25 + 136) = 0;
  *(void *)(v25 + 120) = 0;
  uint64_t v31 = MEMORY[0x1E4FBC860];
  *(void *)(v25 + 168) = 0;
  *(void *)(v25 + 176) = 0;
  *(void *)(v25 + 160) = v31;
  *(_DWORD *)(v25 + 184) = 0;
  *(unsigned char *)(v25 + 188) = 1;
  *(_DWORD *)(v25 + 192) = 0;
  *(unsigned char *)(v25 + 196) = 1;
  *(void *)(v25 + 200) = 0x1000100000000;
  *(unsigned char *)(v25 + 208) = 1;
  *(_WORD *)(v25 + 210) = 0;
  *(void *)(v25 + 216) = 0;
  sub_1B67CBE9C(a1, a2, a18, a21, (uint64_t)&v58);
  swift_bridgeObjectRelease();
  char v32 = 0;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v25 + 184) = v34;
  long long v35 = v59[0];
  *(_OWORD *)(v25 + 16) = v58;
  *(_OWORD *)(v25 + 32) = v35;
  *(_OWORD *)(v25 + 44) = *(_OWORD *)((char *)v59 + 12);
  *(unsigned char *)(v25 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v25 + 192) = v37;
  *(unsigned char *)(v25 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v25 + 200) = v39;
  *(unsigned char *)(v25 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v25 + 205) = v32;
  *(unsigned char *)(v25 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  *(unsigned char *)(v25 + 207) = v40;
  *(unsigned char *)(v25 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v25 + 64);
  *(void *)(v25 + 64) = 0;
  *(void *)(v25 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v25 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v25 + 144) = a14;
  *(void *)(v25 + 152) = a15;
  *(void *)(v25 + 80) = a16;
  *(void *)(v25 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v25 + 210) = a21;
  if (*(void *)(a22 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v25 + 160) = a22;
    swift_bridgeObjectRelease();
    uint64_t v43 = a19;
    uint64_t v42 = a18;
    uint64_t v44 = a24;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void *)(v56 + 80);
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v45;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a19;
    uint64_t v42 = a18;
    uint64_t v44 = a24;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v25 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v44;
  *(void *)(v53 + 24) = v42;
  uint64_t v54 = *(void *)(v25 + 64);
  *(void *)(v25 + 64) = sub_1B684F8C8;
  *(void *)(v25 + 72) = v53;
  sub_1B62C6A50(v54);
  *(void *)(v25 + 168) = v43;
  *(void *)(v25 + 176) = a20;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 216) = a23;
  swift_release();
  return v25;
}

void *sub_1B684DD64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for EntityValueAccessors();
  uint64_t v11 = swift_allocObject();
  swift_retain();
  uint64_t result = sub_1B684F0AC(a1, a2, a3, a4);
  a5[3] = v10;
  a5[4] = (uint64_t)&off_1F0F67590;
  *a5 = v11;
  return result;
}

uint64_t sub_1B684DE30(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_1B684F0AC(a1, a2, a3, a4);
  return v8;
}

void *sub_1B684DE98@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for EntityValueAccessors();
  uint64_t v9 = swift_allocObject();
  swift_retain();
  uint64_t result = sub_1B684EBF8(a1, a2, a3);
  a4[3] = v8;
  a4[4] = (uint64_t)&off_1F0F67590;
  *a4 = v9;
  return result;
}

uint64_t sub_1B684DF30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1B684EBF8(a1, a2, a3);
  return v6;
}

uint64_t sub_1B684DF88(uint64_t result)
{
  uint64_t v2 = 1;
  switch(result)
  {
    case 0:
      goto LABEL_23;
    case 1:
      uint64_t v2 = 2;
      goto LABEL_23;
    case 2:
      uint64_t v2 = 3;
      goto LABEL_23;
    case 3:
      uint64_t v2 = 5;
      goto LABEL_23;
    case 4:
      uint64_t v2 = 6;
      goto LABEL_23;
    case 5:
      uint64_t v2 = 7;
      goto LABEL_23;
    case 6:
      uint64_t v2 = 8;
      goto LABEL_23;
    case 7:
      uint64_t v2 = 9;
      goto LABEL_23;
    case 8:
      uint64_t v2 = 10;
      goto LABEL_23;
    case 9:
      uint64_t v2 = 11;
      goto LABEL_23;
    case 10:
      uint64_t v2 = 12;
      goto LABEL_23;
    case 11:
      goto LABEL_25;
    case 12:
      uint64_t v2 = 13;
      goto LABEL_23;
    case 13:
      uint64_t v2 = 19;
      goto LABEL_23;
    case 14:
      uint64_t v2 = 15;
      goto LABEL_23;
    case 15:
      uint64_t v2 = 21;
      goto LABEL_23;
    case 16:
      uint64_t v2 = 20;
      goto LABEL_23;
    case 17:
      uint64_t v2 = 18;
      goto LABEL_23;
    case 18:
      uint64_t v2 = 4;
      goto LABEL_23;
    case 19:
      uint64_t v2 = 14;
      goto LABEL_23;
    case 20:
      uint64_t v2 = 22;
      goto LABEL_23;
    case 21:
      uint64_t v2 = 23;
      goto LABEL_23;
    case 22:
      uint64_t v2 = 24;
LABEL_23:
      *int32x2_t v1 = v2;
      v1[1] = 0;
      return result;
    default:
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
LABEL_25:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B684E16CLL);
  }
}

uint64_t sub_1B684E1C8(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x17) {
    return 11;
  }
  else {
    return qword_1B6E8C600[a1 - 1];
  }
}

unint64_t sub_1B684E1EC(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 1701736302;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x656C616373;
      break;
    case 2:
      unint64_t result = 0x656C676E61;
      break;
    case 3:
      unint64_t result = 0x73726574656DLL;
      break;
    case 4:
      unint64_t result = 0x73746E65747865;
      break;
    case 5:
      unint64_t result = 0x726F6C6F63;
      break;
    case 6:
      unint64_t result = 0x6C676E4173697861;
      break;
    case 7:
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x656665526873656DLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 10:
      unint64_t result = 0x72657474696D65;
      break;
    case 11:
      unint64_t result = 0x74694B656E656373;
      break;
    case 12:
      unint64_t result = 0x75466C656E72656BLL;
      break;
    case 14:
      unint64_t result = 0x6946726564616873;
      break;
    case 15:
      unint64_t result = 0x726564616873;
      break;
    case 16:
    case 17:
      unint64_t result = 0x6C6169726574616DLL;
      break;
    case 18:
      unint64_t result = 0x656C67676F74;
      break;
    case 19:
      unint64_t result = 0x65646E496D756E65;
      break;
    case 20:
      unint64_t result = 7107189;
      break;
    case 21:
      unint64_t result = 0x61547265646E6572;
      break;
    case 22:
      unint64_t result = 0x56664F746E696F70;
      break;
    case 23:
      unint64_t result = 0x6174736554746968;
      break;
    default:
      unint64_t result = 0x6F43656372756F73;
      break;
  }
  return result;
}

uint64_t sub_1B684E4F4()
{
  uint64_t v1 = *v0;
  sub_1B6E33918();
  sub_1B684E1C8(v1);
  sub_1B6E33928();
  return sub_1B6E33988();
}

uint64_t sub_1B684E544()
{
  sub_1B684E1C8(*v0);
  return sub_1B6E33928();
}

uint64_t sub_1B684E574()
{
  uint64_t v1 = *v0;
  sub_1B6E33918();
  sub_1B684E1C8(v1);
  sub_1B6E33928();
  return sub_1B6E33988();
}

void *sub_1B684E5C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1B684F700(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B684E5EC(void *a1)
{
  uint64_t v2 = *v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B684E1C8(v2);
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B6E335A8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B684E694()
{
  sub_1B684D068();

  return swift_deallocClassInstance();
}

uint64_t sub_1B684E6C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B684E710()
{
  sub_1B6E32738();
  uint64_t v1 = sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL sub_1B684E7B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_1B6E33918();
  sub_1B684E1C8(v2);
  sub_1B6E33928();
  uint64_t v4 = sub_1B6E33988();
  sub_1B6E33918();
  sub_1B684E1C8(v3);
  sub_1B6E33928();
  return v4 == sub_1B6E33988();
}

uint64_t sub_1B684E844()
{
  return sub_1B684EB58();
}

uint64_t type metadata accessor for ValueAccessors()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B684E864()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B684E8BC()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1B684E8E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B684E90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (*v3)[10];
  uint64_t v8 = sub_1B6E324B8();
  uint64_t v9 = *(void *)(v8 - 8);
  double v11 = MEMORY[0x1F4188790](v8, v10);
  float64x2_t v13 = (char *)&v17 - v12;
  ((void (*)(uint64_t, uint64_t, double))v3[4])(a1, a2, v11);
  uint64_t v14 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v7) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    *(void *)(a3 + 24) = v7;
    uint64_t v16 = sub_1B62C12C4((uint64_t *)a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v14 + 32))(v16, v13, v7);
  }
  return result;
}

uint64_t sub_1B684EA90@<X0>(unint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = (uint64_t *)(*a2 + *MEMORY[0x1E4FBBC10]);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  swift_retain();
  sub_1B6A50C60(a1, v8, (uint64_t)a2, v7, a3);

  return swift_release();
}

uint64_t sub_1B684EB50()
{
  return sub_1B684EB58();
}

uint64_t sub_1B684EB58()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B684EBA4()
{
  return swift_initClassMetadata2();
}

void *sub_1B684EBF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = a1;
  unint64_t v7 = HIDWORD(a1);
  v3[6] = a1;
  v3[7] = a2;
  v3[8] = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(_DWORD *)(v8 + 24) = v6;
  *(_DWORD *)(v8 + 28) = v7;
  *(void *)(v8 + 32) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(_DWORD *)(v9 + 24) = v6;
  *(_DWORD *)(v9 + 28) = v7;
  *(void *)(v9 + 32) = a2;
  v3[2] = sub_1B684F86C;
  v3[3] = v8;
  v3[4] = sub_1B684F878;
  v3[5] = v9;
  swift_retain_n();
  return v3;
}

uint64_t sub_1B684ECB8(void (**a1)(void, void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *((void *)*a1 + 10);
  uint64_t v7 = sub_1B6E324B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v10, v14);
  uint64_t v16 = (char *)&v21 - v15;
  a1[4](a2, a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    return sub_1B6E31C88();
  }
  else
  {
    char v18 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v18(v16, v12, v6);
    sub_1B684F5D8(v6, v6);
    swift_allocObject();
    uint64_t v17 = sub_1B6E31C58();
    v18(v19, v16, v6);
    sub_1B6E31D18();
  }
  return v17;
}

uint64_t sub_1B684EEE4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (*a2)[10];
  uint64_t v9 = sub_1B6E324B8();
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v13 = (char *)v19 - v12;
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v11, v15);
  uint64_t v17 = (char *)v19 - v16;
  v19[1] = a1;
  sub_1B6E31D18();
  swift_getWitnessTable();
  sub_1B6E32038();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, v8);
  ((void (*)(uint64_t, uint64_t, char *))a2[2])(a3, a4, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v8);
}

void *sub_1B684F0AC(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  int v9 = a1;
  unint64_t v10 = HIDWORD(a1);
  uint64_t v11 = *a3;
  v4[6] = a1;
  v4[7] = a2;
  type metadata accessor for EntityGetSet();
  swift_retain();
  uint64_t v12 = sub_1B62B3810((uint64_t)a3, a4);
  swift_release();
  v5[8] = v12;
  swift_release();
  uint64_t v13 = v5[8];
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = *(void *)(v11 + *MEMORY[0x1E4FBBC10]);
  *(void *)(v14 + 16) = v15;
  *(void *)(v14 + 24) = a4;
  *(void *)(v14 + 32) = v13;
  *(_DWORD *)(v14 + 40) = v9;
  *(_DWORD *)(v14 + 44) = v10;
  *(void *)(v14 + 48) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = a4;
  *(void *)(v16 + 32) = v13;
  *(_DWORD *)(v16 + 40) = v9;
  *(_DWORD *)(v16 + 44) = v10;
  *(void *)(v16 + 48) = a2;
  v5[2] = sub_1B684F814;
  v5[3] = v14;
  v5[4] = sub_1B684F824;
  v5[5] = v16;
  swift_retain_n();
  return v5;
}

uint64_t sub_1B684F210()
{
  return swift_release();
}

uint64_t sub_1B684F218()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B684F248()
{
  sub_1B684F218();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityValueAccessors()
{
  return sub_1B62C36EC();
}

ValueMetadata *type metadata accessor for PropertyDescription.Flags()
{
  return &type metadata for PropertyDescription.Flags;
}

uint64_t getEnumTagSinglePayload for PropertyDescription.Semantic(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFE6 && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483623);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 0x19) {
    return (v3 - 24);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PropertyDescription.Semantic(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFE7)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483623;
    if (a3 >= 0x7FFFFFE7) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFE7) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 24;
    }
  }
  return result;
}

uint64_t sub_1B684F354(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1B684F374(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PropertyDescription.Semantic()
{
  return &type metadata for PropertyDescription.Semantic;
}

unint64_t sub_1B684F3B8()
{
  unint64_t result = qword_1E9DD1620;
  if (!qword_1E9DD1620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1620);
  }
  return result;
}

unint64_t sub_1B684F410()
{
  unint64_t result = qword_1E9DD1628;
  if (!qword_1E9DD1628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1628);
  }
  return result;
}

unint64_t sub_1B684F468()
{
  unint64_t result = qword_1E9DD1630;
  if (!qword_1E9DD1630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1630);
  }
  return result;
}

unint64_t sub_1B684F4C0()
{
  unint64_t result = qword_1E9DD1638;
  if (!qword_1E9DD1638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1638);
  }
  return result;
}

unint64_t sub_1B684F518()
{
  unint64_t result = qword_1E9DD1640;
  if (!qword_1E9DD1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1640);
  }
  return result;
}

uint64_t sub_1B684F56C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B684F5A4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B684EA90(a1, *(void **)(v2 + 32), a2);
}

void sub_1B684F5B0()
{
}

uint64_t sub_1B684F5C0()
{
  return 8;
}

void *sub_1B684F5CC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1B684F5D8(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    sub_1B63577E4();
  }
  else
  {
    sub_1B6E330A8();
  }
}

uint64_t sub_1B684F640(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if ((*(unsigned char *)(v2 + 112) & 1) == 0)
  {
    uint64_t v5 = a2 & 1;
    if ((a2 & 1) != 0 || *(void *)(v2 + 104) > a1)
    {
      if (*(void *)(v2 + 136))
      {
        return *(void *)(v2 + 136);
      }
      else
      {
        uint64_t v6 = *(void (**)(uint64_t))(v2 + 120);
        if (v6)
        {
          uint64_t v7 = swift_retain();
          v6(v7);
          uint64_t v8 = sub_1B684F640(a1, v5);
          swift_retain();
          swift_release();
          sub_1B62C6A50((uint64_t)v6);
          *(void *)(v2 + 136) = v8;
          swift_release();
          return *(void *)(v2 + 136);
        }
      }
    }
  }
  return v3;
}

void *sub_1B684F700(void *a1)
{
  long long v7 = xmmword_1B6E50D30;
  uint64_t v3 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v1)
  {
    sub_1B62C14BC(v6, v6[3]);
    uint64_t v4 = sub_1B6E334F8();
    sub_1B684DF88(v4);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    uint64_t v3 = (void *)v7;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1B684F7DC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B684F814()
{
  return sub_1B684ECB8(*(void (***)(void, void))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1B684F824(uint64_t a1)
{
  return sub_1B684EEE4(a1, *(void ***)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1B684F834()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B684F86C()
{
  return sub_1B684ECB8(*(void (***)(void, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B684F878(uint64_t a1)
{
  return sub_1B684EEE4(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void *sub_1B684F884@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B684DE98(a1, a2, *(void *)(v3 + 32), a3);
}

uint64_t sub_1B684F890()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1B684F8C8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B684DD64(a1, a2, *(uint64_t **)(v3 + 24), *(void *)(v3 + 16), a3);
}

uint64_t type metadata accessor for InvalidKeyPathStruct()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B684F8FC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WakeUpEvent()
{
  return self;
}

uint64_t sub_1B684F958(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
    sub_1B6C3C510(0, v1, 0);
    unint64_t v4 = sub_1B6860A54(a1);
    uint64_t v5 = 0;
    uint64_t v25 = a1 + 64;
    uint64_t v2 = v37;
    do
    {
      uint64_t v6 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1B66459A4(*(void *)(a1 + 56) + 88 * v4, (uint64_t)v33);
      v32[0] = v8;
      v32[1] = v7;
      *(void *)&long long v29 = v8;
      *((void *)&v29 + 1) = v7;
      sub_1B66459A4((uint64_t)v33, (uint64_t)v30);
      v27[3] = v30[3];
      v27[4] = v30[4];
      uint64_t v28 = v31;
      long long v26 = v29;
      v27[0] = v30[0];
      v27[1] = v30[1];
      v27[2] = v30[2];
      swift_bridgeObjectRetain_n();
      sub_1B62BFF14((uint64_t)v32, (uint64_t (*)(void))sub_1B6873810);
      sub_1B633AF88();
      uint64_t v9 = sub_1B6E32618();
      uint64_t v11 = v10;
      sub_1B66459A4((uint64_t)v27, (uint64_t)v35);
      *(void *)&long long v34 = v9;
      *((void *)&v34 + 1) = v11;
      sub_1B62BFF14((uint64_t)&v26, (uint64_t (*)(void))sub_1B6873810);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3C510(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v37;
      }
      unint64_t v13 = *(void *)(v2 + 16);
      unint64_t v12 = *(void *)(v2 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3C510(v12 > 1, v13 + 1, 1);
        uint64_t v2 = v37;
      }
      *(void *)(v2 + 16) = v13 + 1;
      uint64_t v14 = v2 + 104 * v13;
      long long v15 = v34;
      long long v16 = v35[1];
      *(_OWORD *)(v14 + 48) = v35[0];
      *(_OWORD *)(v14 + 64) = v16;
      *(_OWORD *)(v14 + 32) = v15;
      long long v17 = v35[2];
      long long v18 = v35[3];
      long long v19 = v35[4];
      *(void *)(v14 + 128) = v36;
      *(_OWORD *)(v14 + 96) = v18;
      *(_OWORD *)(v14 + 112) = v19;
      *(_OWORD *)(v14 + 80) = v17;
      unint64_t v20 = v4 >> 6;
      if ((*(void *)(v25 + 8 * (v4 >> 6)) & (-2 << v4)) != 0)
      {
        unint64_t v4 = __clz(__rbit64(*(void *)(v25 + 8 * (v4 >> 6)) & (-2 << v4))) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
        unint64_t v21 = v20 + 1;
        unint64_t v22 = (v4 + 63) >> 6;
        if (v20 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v25 + 8 * v21);
          if (!v23)
          {
            unint64_t v21 = v20 + 2;
            if (v20 + 2 >= v22) {
              goto LABEL_4;
            }
            unint64_t v23 = *(void *)(v25 + 8 * v21);
            if (!v23)
            {
              while (v22 - 3 != v20)
              {
                unint64_t v23 = *(void *)(a1 + 88 + 8 * v20++);
                if (v23)
                {
                  unint64_t v21 = v20 + 2;
                  goto LABEL_12;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_12:
          unint64_t v4 = __clz(__rbit64(v23)) + (v21 << 6);
        }
      }
LABEL_4:
      ++v5;
    }
    while (v5 != v1);
  }
  return v2;
}

uint64_t sub_1B684FC58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B6C3D4C8(0, v4, 0);
    uint64_t v5 = v19;
    for (uint64_t i = a1 + 56; ; i += 32)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B68559E8(a2, v17);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v17[0];
      uint64_t v10 = v17[1];
      long long v11 = v18;
      uint64_t v19 = v5;
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v16 = v18;
        sub_1B6C3D4C8(v12 > 1, v13 + 1, 1);
        long long v11 = v16;
        uint64_t v5 = v19;
      }
      *(void *)(v5 + 16) = v13 + 1;
      uint64_t v14 = v5 + 32 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v10;
      *(_OWORD *)(v14 + 48) = v11;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1B684FDC4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1B62E1D20(0, v2, 0);
    uint64_t result = v8;
    int64_t v4 = (uint64_t *)(a1 + 32);
    unint64_t v5 = *(void *)(v8 + 16);
    do
    {
      uint64_t v6 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 24);
      if (v5 >= v7 >> 1)
      {
        sub_1B62E1D20(v7 > 1, v5 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v5 + 1;
      *(void *)(result + 8 * v5 + 32) = v6;
      v4 += 7;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_1B684FE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v7 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      uint64_t v8 = (int *)(v7 + 12 * (int)a3);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v8 + 32);
      __int16 v10 = *((_WORD *)v8 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
      sub_1B6863DE4((char *)v9, v10, a1, a2, v3, a3);
      long long v11 = *(os_unfair_lock_s **)(v9 + 344);
      os_unfair_lock_unlock(v11);
    }
  }
}

void sub_1B684FF98(uint64_t a1, __n128 a2)
{
}

void sub_1B684FFB0(uint64_t a1, __n128 a2)
{
}

void sub_1B684FFC8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, __n128), __n128 a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v7 = (int *)(v6 + 12 * (int)a1);
      uint64_t v8 = *(void *)(*(void *)(v3 + 136) + 8 * *v7 + 32);
      uint64_t v9 = *((unsigned __int16 *)v7 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 344));
      a2(v8, v9, v3, a1, a3);
      __int16 v10 = *(os_unfair_lock_s **)(v8 + 344);
      os_unfair_lock_unlock(v10);
    }
  }
}

void sub_1B68500D0(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
}

void sub_1B68500E8(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
}

void sub_1B6850100(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128), __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v9 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      __int16 v10 = (int *)(v9 + 12 * (int)a1);
      uint64_t v11 = *(void *)(*(void *)(v6 + 136) + 8 * *v10 + 32);
      uint64_t v12 = *((unsigned __int16 *)v10 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
      a2(v11, v12, v6, a1, a3, a4, a5, a6);
      unint64_t v13 = *(os_unfair_lock_s **)(v11 + 344);
      os_unfair_lock_unlock(v13);
    }
  }
}

void sub_1B6850210(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850228(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850240(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850258(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850270(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v7 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v8 = (int *)(v7 + 12 * (int)a2);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v8 + 32);
      uint64_t v10 = *((unsigned __int16 *)v8 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
      a3(v9, v10, a1, v3, a2);
      uint64_t v11 = *(os_unfair_lock_s **)(v9 + 344);
      os_unfair_lock_unlock(v11);
    }
  }
}

void sub_1B6850378(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850390(uint64_t a1, uint64_t a2)
{
}

void sub_1B68503A8(long long *a1, uint64_t a2)
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v5 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a2);
      uint64_t v7 = *(void *)(*(void *)(v2 + 136) + 8 * *v6 + 32);
      __int16 v8 = *((_WORD *)v6 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
      sub_1B6864D24(v7, v8, a1, v2, a2);
      uint64_t v9 = *(os_unfair_lock_s **)(v7 + 344);
      os_unfair_lock_unlock(v9);
    }
  }
}

void sub_1B68504A8(uint64_t a1, uint64_t a2)
{
}

void sub_1B68504C0(unsigned int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a5 != 0xFFFFFFFFLL
    && a5 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a5 < *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a5) == -1 || *(_DWORD *)(v11 + 12 * (int)a5 + 8) == HIDWORD(a5))
    {
      uint64_t v12 = (int *)(v11 + 12 * (int)a5);
      uint64_t v13 = *(void *)(*(void *)(v5 + 136) + 8 * *v12 + 32);
      __int16 v14 = *((_WORD *)v12 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
      sub_1B6864EF4(v13, v14, a1, a2, a3, a4 & 0x10101, v5, a5);
      long long v15 = *(os_unfair_lock_s **)(v13 + 344);
      os_unfair_lock_unlock(v15);
    }
  }
}

void sub_1B68505EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B6850604(uint64_t a1, uint64_t a2)
{
}

void sub_1B685061C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B6850634(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v9 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      uint64_t v10 = (int *)(v9 + 12 * (int)a3);
      uint64_t v11 = *(void *)(*(void *)(v4 + 136) + 8 * *v10 + 32);
      uint64_t v12 = *((unsigned __int16 *)v10 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
      a4(v11, v12, a1, a2, v4, a3);
      uint64_t v13 = *(os_unfair_lock_s **)(v11 + 344);
      os_unfair_lock_unlock(v13);
    }
  }
}

void sub_1B6850750(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850768(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B6850780(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850798(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B68507B0(uint64_t a1, uint64_t a2)
{
}

void sub_1B68507C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B68507E0(uint64_t a1, uint64_t a2)
{
}

void sub_1B68507F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B6850810(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850828(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B6850840(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850858(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B6850870(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850888(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B68508A0(long long *a1, uint64_t a2)
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v5 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a2);
      uint64_t v7 = *(void *)(*(void *)(v2 + 136) + 8 * *v6 + 32);
      __int16 v8 = *((_WORD *)v6 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
      sub_1B68670D0(v7, v8, a1, v2, a2);
      uint64_t v9 = *(os_unfair_lock_s **)(v7 + 344);
      os_unfair_lock_unlock(v9);
    }
  }
}

void sub_1B68509A0(uint64_t a1, uint64_t a2)
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v5 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a2);
      uint64_t v7 = *(void *)(*(void *)(v2 + 136) + 8 * *v6 + 32);
      __int16 v8 = *((_WORD *)v6 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
      sub_1B686727C(v7, v8, a1, v2, a2);
      uint64_t v9 = *(os_unfair_lock_s **)(v7 + 344);
      os_unfair_lock_unlock(v9);
    }
  }
}

void sub_1B6850AA0(unint64_t a1, __n128 a2)
{
  if (a1 != 0xFFFFFFFF
    && (uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v5 = (int *)(v4 + 12 * (int)a1);
      uint64_t v6 = *(void *)(*(void *)(v2 + 136) + 8 * *v5 + 32);
      __int16 v7 = *((_WORD *)v5 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 344));
      sub_1B6867420(v6, v7, v2, a1, a2);
      __int16 v8 = *(os_unfair_lock_s **)(v6 + 344);
      os_unfair_lock_unlock(v8);
    }
  }
}

void sub_1B6850B94(uint64_t a1, uint64_t a2)
{
}

void sub_1B6850BAC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v7 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      __int16 v8 = (int *)(v7 + 12 * (int)a2);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v8 + 32);
      uint64_t v10 = *((unsigned __int16 *)v8 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
      a3(v9, v10, a1, v3, a2);
      uint64_t v11 = *(os_unfair_lock_s **)(v9 + 344);
      os_unfair_lock_unlock(v11);
    }
  }
}

void sub_1B6850CB4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a3 != 0xFFFFFFFFLL
    && a3 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a3 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a3) == -1 || *(_DWORD *)(v7 + 12 * (int)a3 + 8) == HIDWORD(a3))
    {
      __int16 v8 = (int *)(v7 + 12 * (int)a3);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v8 + 32);
      __int16 v10 = *((_WORD *)v8 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
      sub_1B6867764(v9, v10, a1, a2, v3, a3);
      uint64_t v11 = *(os_unfair_lock_s **)(v9 + 344);
      os_unfair_lock_unlock(v11);
    }
  }
}

void sub_1B6850DBC(uint64_t a1, float a2)
{
}

void sub_1B6850DD4(uint64_t a1, float a2, float a3, float a4, float a5)
{
}

void sub_1B6850DEC(__n128 *a1, uint64_t a2)
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v5 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a2);
      uint64_t v7 = *(void *)(*(void *)(v2 + 136) + 8 * *v6 + 32);
      __int16 v8 = *((_WORD *)v6 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
      sub_1B6867C88(v7, v8, a1, v2, a2);
      uint64_t v9 = *(os_unfair_lock_s **)(v7 + 344);
      os_unfair_lock_unlock(v9);
    }
  }
}

void sub_1B6850EEC(uint64_t a1, float a2, float a3, float a4, float a5)
{
}

void sub_1B6850F04(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, float, float, float, float), float a3, float a4, float a5, float a6)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v13 = *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v13 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      __int16 v14 = (int *)(v13 + 12 * (int)a1);
      uint64_t v15 = *(void *)(*(void *)(v6 + 136) + 8 * *v14 + 32);
      uint64_t v16 = *((unsigned __int16 *)v14 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
      a2(v15, v16, v6, a1, a3, a4, a5, a6);
      long long v17 = *(os_unfair_lock_s **)(v15 + 344);
      os_unfair_lock_unlock(v17);
    }
  }
}

void sub_1B685103C(long long *a1, uint64_t a2)
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v5 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a2);
      uint64_t v7 = *(void *)(*(void *)(v2 + 136) + 8 * *v6 + 32);
      __int16 v8 = *((_WORD *)v6 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
      sub_1B6867FF0(v7, v8, a1, v2, a2);
      uint64_t v9 = *(os_unfair_lock_s **)(v7 + 344);
      os_unfair_lock_unlock(v9);
    }
  }
}

void sub_1B685113C(__n128 *a1, uint64_t a2)
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v5 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a2);
      uint64_t v7 = *(void *)(*(void *)(v2 + 136) + 8 * *v6 + 32);
      __int16 v8 = *((_WORD *)v6 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
      sub_1B6868194(v7, v8, a1, v2, a2);
      uint64_t v9 = *(os_unfair_lock_s **)(v7 + 344);
      os_unfair_lock_unlock(v9);
    }
  }
}

void sub_1B685123C(uint64_t a1)
{
}

void sub_1B6851254(uint64_t a1)
{
}

void sub_1B685126C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 0xFFFFFFFFLL
    && a5 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a5 < *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a5) == -1 || *(_DWORD *)(v11 + 12 * (int)a5 + 8) == HIDWORD(a5))
    {
      uint64_t v12 = (int *)(v11 + 12 * (int)a5);
      uint64_t v13 = *(void *)(*(void *)(v5 + 136) + 8 * *v12 + 32);
      __int16 v14 = *((_WORD *)v12 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
      sub_1B686858C(v13, v14, a1, a2, a3, a4, v5, a5);
      uint64_t v15 = *(os_unfair_lock_s **)(v13 + 344);
      os_unfair_lock_unlock(v15);
    }
  }
}

void sub_1B6851390(uint64_t a1, uint64_t a2)
{
}

void sub_1B68513A8(uint64_t a1, uint64_t a2)
{
}

void sub_1B68513C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v7 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      __int16 v8 = (int *)(v7 + 12 * (int)a2);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v8 + 32);
      uint64_t v10 = *((unsigned __int16 *)v8 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
      a3(v9, v10, a1, v3, a2);
      uint64_t v11 = *(os_unfair_lock_s **)(v9 + 344);
      os_unfair_lock_unlock(v11);
    }
  }
}

void sub_1B68514C8(uint64_t a1)
{
}

void sub_1B68514E0(uint64_t a1, float a2)
{
}

void sub_1B68514F8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, float), float a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      __int16 v8 = (int *)(v7 + 12 * (int)a1);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v8 + 32);
      uint64_t v10 = *((unsigned __int16 *)v8 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
      a2(v9, v10, v3, a1, a3);
      uint64_t v11 = *(os_unfair_lock_s **)(v9 + 344);
      os_unfair_lock_unlock(v11);
    }
  }
}

void sub_1B685160C(unint64_t a1, __n128 a2, __n128 a3)
{
  if (a1 != 0xFFFFFFFF
    && (uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a1);
      uint64_t v7 = *(void *)(*(void *)(v3 + 136) + 8 * *v6 + 32);
      __int16 v8 = *((_WORD *)v6 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
      sub_1B6868A14(v7, v8, v3, a1, a2, a3);
      uint64_t v9 = *(os_unfair_lock_s **)(v7 + 344);
      os_unfair_lock_unlock(v9);
    }
  }
}

void sub_1B6851700(uint64_t a1, uint64_t a2)
{
}

void sub_1B6851718(uint64_t a1, uint64_t a2)
{
}

void sub_1B6851730(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v7 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      __int16 v8 = (int *)(v7 + 12 * (int)a2);
      uint64_t v9 = *(void *)(*(void *)(v3 + 136) + 8 * *v8 + 32);
      uint64_t v10 = *((unsigned __int16 *)v8 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
      a3(v9, v10, a1, v3, a2);
      uint64_t v11 = *(os_unfair_lock_s **)(v9 + 344);
      os_unfair_lock_unlock(v11);
    }
  }
}

void sub_1B6851838(uint64_t a1)
{
}

void sub_1B6851850(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v4 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v5 = (int *)(v4 + 12 * (int)a1);
      uint64_t v6 = *(void *)(*(void *)(v2 + 136) + 8 * *v5 + 32);
      uint64_t v7 = *((unsigned __int16 *)v5 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 344));
      a2(v6, v7, v2);
      __int16 v8 = *(os_unfair_lock_s **)(v6 + 344);
      os_unfair_lock_unlock(v8);
    }
  }
}

void sub_1B685193C(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
}

void sub_1B6851954(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
}

void sub_1B685196C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128), __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v9 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      uint64_t v10 = (int *)(v9 + 12 * (int)a1);
      uint64_t v11 = *(void *)(*(void *)(v6 + 136) + 8 * *v10 + 32);
      uint64_t v12 = *((unsigned __int16 *)v10 + 2);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
      a2(v11, v12, v6, a1, a3, a4, a5, a6);
      uint64_t v13 = *(os_unfair_lock_s **)(v11 + 344);
      os_unfair_lock_unlock(v13);
    }
  }
}

void *sub_1B6851A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = swift_bridgeObjectRetain() + 80;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = *(void *)(a2 + 8);
    if (*(void *)(v5 + 16))
    {
      unint64_t v20 = v4;
      uint64_t v6 = *(void *)(v3 - 32);
      unint64_t v7 = *(void *)(v3 - 24);
      uint64_t v9 = *(void *)(v3 - 48);
      uint64_t v8 = *(void *)(v3 - 40);
      swift_bridgeObjectRetain();
      sub_1B629C9E8(v6, v7);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1B62B2CE0(v9, v8);
      if (v11)
      {
        uint64_t v12 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v10);
        uint64_t v13 = *v12;
        uint64_t v14 = v12[1];
        swift_retain();
        swift_bridgeObjectRelease_n();
        sub_1B629DCAC(v6, v7);
        uint64_t v4 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1B68C3F64(0, v20[2] + 1, 1, v20);
        }
        unint64_t v16 = v4[2];
        unint64_t v15 = v4[3];
        if (v16 >= v15 >> 1) {
          uint64_t v4 = sub_1B68C3F64(v15 > 1, v16 + 1, 1, v4);
        }
        v4[2] = v16 + 1;
        long long v17 = &v4[2 * v16];
        v17[4] = v13;
        v17[5] = v14;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1B629DCAC(v6, v7);
        uint64_t v4 = v20;
      }
    }
    v3 += 56;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B6851C50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  sub_1B6873628(0);
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (unsigned int *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v31 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  unint64_t v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v32 = v17;
  uint64_t v35 = a1;
  uint64_t v29 = a1 + 112;
  unint64_t v30 = v17 - 6;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_5:
    uint64_t v21 = *(void *)(v35 + 56);
    uint64_t v22 = *(void *)(v35 + 48) + 8 * v20;
    int v23 = *(_DWORD *)v22;
    char v24 = *(unsigned char *)(v22 + 4);
    uint64_t v25 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
    sub_1B6366C08(v21 + *(void *)(*(void *)(v25 - 8) + 72) * v20, (uint64_t)&v12[*(int *)(v33 + 48)], (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(_DWORD *)uint64_t v12 = v23;
    v12[4] = v24;
    sub_1B68737A8((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(void))sub_1B6873628);
    sub_1B685D848(v8, v34);
    sub_1B62BFF14((uint64_t)v8, (uint64_t (*)(void))sub_1B6873628);
    if (v3) {
      return swift_release();
    }
  }
  uint64_t v26 = v18 + 1;
  if (v18 + 1 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 2;
  if (v18 + 2 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 3;
  if (v18 + 3 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 4;
  if (v18 + 4 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27) {
    goto LABEL_20;
  }
  uint64_t v26 = v18 + 5;
  if (v18 + 5 >= v32) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v31 + 8 * v26);
  if (v27)
  {
LABEL_20:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    uint64_t v18 = v26;
    goto LABEL_5;
  }
  while (v30 != v18)
  {
    unint64_t v27 = *(void *)(v29 + 8 * v18++);
    if (v27)
    {
      uint64_t v26 = v18 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B6851F00()
{
  uint64_t v0 = qword_1F0F541C0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  if (qword_1F0F541C0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, qword_1F0F541C0, 0);
    uint64_t v2 = (uint64_t *)&unk_1F0F541D8;
    uint64_t v1 = v9;
    do
    {
      uint64_t v4 = *(v2 - 1);
      uint64_t v3 = *v2;
      unint64_t v5 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v5 >= v6 >> 1) {
        sub_1B6C3C3B8(v6 > 1, v5 + 1, 1);
      }
      v2 += 3;
      *(void *)(v9 + 16) = v5 + 1;
      uint64_t v7 = v9 + 16 * v5;
      *(void *)(v7 + 32) = v4;
      *(void *)(v7 + 40) = v3;
      --v0;
    }
    while (v0);
  }
  return v1;
}

uint64_t sub_1B6851FD4()
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1B6C3C3B8(0, 2, 0);
  uint64_t v0 = v13;
  uint64_t v2 = *(void *)aNearest_2;
  uint64_t v1 = unk_1F0FA3F20;
  unint64_t v4 = *(void *)(v13 + 16);
  unint64_t v3 = *(void *)(v13 + 24);
  unint64_t v5 = v4 + 1;
  swift_bridgeObjectRetain();
  if (v4 >= v3 >> 1)
  {
    sub_1B6C3C3B8(v3 > 1, v4 + 1, 1);
    uint64_t v0 = v13;
  }
  *(void *)(v0 + 16) = v5;
  uint64_t v6 = v0 + 16 * v4;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v1;
  uint64_t v8 = *(void *)aLinear_7;
  uint64_t v7 = unk_1F0FA3F38;
  unint64_t v9 = *(void *)(v0 + 24);
  int64_t v10 = v4 + 2;
  swift_bridgeObjectRetain();
  if (v5 >= v9 >> 1)
  {
    sub_1B6C3C3B8(v9 > 1, v10, 1);
    uint64_t v0 = v13;
  }
  *(void *)(v0 + 16) = v10;
  uint64_t v11 = v0 + 16 * v5;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v7;
  sub_1B67FB8C0(0, &qword_1EB980120);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_1B6852104()
{
  return sub_1B6852144((void (*)(void))type metadata accessor for GraphScriptRunner);
}

uint64_t sub_1B6852124()
{
  return sub_1B6852144((void (*)(void))type metadata accessor for ScriptCompilerSystem);
}

uint64_t sub_1B6852144(void (*a1)(void))
{
  a1(0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 56));
  sub_1B637B2D4();
  if (v2)
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 56));
    return 0;
  }
  else
  {
    sub_1B62C55B0(0, qword_1EB97FE08);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v3 = v5;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 56));
  }
  return v3;
}

uint64_t sub_1B685221C()
{
  return sub_1B6852144((void (*)(void))type metadata accessor for EmitterPrepareRuntime);
}

BOOL sub_1B685223C(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t sub_1B685224C(uint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = result;
  unint64_t v8 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v9 = *v3;
    swift_unownedRetainStrong();
    sub_1B69DE568(a3);
    if ((v10 & 0x100000000) != 0)
    {
      swift_release();
      char v12 = 1;
    }
    else
    {
      BOOL v11 = sub_1B637D6B4((uint64_t)&type metadata for Name);
      swift_release();
      char v12 = !v11;
    }
    swift_unownedRetainStrong();
    sub_1B684FE90(v7, a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    uint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      uint64_t result = swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = a3;
      v14[1] = v8;
      uint64_t v15 = v9;
      sub_1B68795FC(0, &qword_1E9DD1668);
      uint64_t v19 = v13;
      unint64_t v20 = &off_1F0F68360;
      uint64_t v16 = v7;
      uint64_t v17 = a2;
      char v18 = v12 & 1;
      char v21 = 12;
      swift_bridgeObjectRetain();
      sub_1B6A62610((uint64_t)v14);
      swift_release();
      return sub_1B67421B0((uint64_t)v14);
    }
  }
  return result;
}

unint64_t sub_1B68523D0(unint64_t result, __n128 a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = result;
  unint64_t v5 = HIDWORD(result);
  if (result != 0xFFFFFFFF)
  {
    uint64_t v6 = *v2;
    swift_unownedRetainStrong();
    sub_1B69DE568(v4);
    if ((v7 & 0x100000000) != 0)
    {
      swift_release();
      char v9 = 1;
    }
    else
    {
      BOOL v8 = sub_1B637D6B4((uint64_t)&type metadata for Color);
      swift_release();
      char v9 = !v8;
    }
    swift_unownedRetainStrong();
    sub_1B684FFC8(v4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_1B6863F70, a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    uint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      uint64_t result = swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v13[0] = v4;
      v13[1] = v5;
      uint64_t v14 = v6;
      sub_1B68795FC(0, &qword_1E9DD16F0);
      uint64_t v16 = v10;
      uint64_t v17 = &off_1F0F68360;
      BOOL v11 = (__n128 *)swift_allocObject();
      uint64_t v15 = v11;
      v11[1] = a2;
      v11[2].n128_u8[0] = v9 & 1;
      char v18 = 12;
      sub_1B6A62610((uint64_t)v13);
      swift_release();
      return sub_1B67421B0((uint64_t)v13);
    }
  }
  return result;
}

unint64_t sub_1B685256C(unint64_t result, __n128 a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = result;
  unint64_t v5 = HIDWORD(result);
  if (result != 0xFFFFFFFF)
  {
    uint64_t v6 = *v2;
    swift_unownedRetainStrong();
    sub_1B69DE568(v4);
    if ((v7 & 0x100000000) != 0)
    {
      swift_release();
      char v9 = 1;
    }
    else
    {
      BOOL v8 = sub_1B637D6B4((uint64_t)&type metadata for Orientation);
      swift_release();
      char v9 = !v8;
    }
    swift_unownedRetainStrong();
    sub_1B684FFC8(v4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_1B6864134, a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    uint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      uint64_t result = swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v13[0] = v4;
      v13[1] = v5;
      uint64_t v14 = v6;
      sub_1B68795FC(0, &qword_1E9DD16E0);
      uint64_t v16 = v10;
      uint64_t v17 = &off_1F0F68360;
      BOOL v11 = (__n128 *)swift_allocObject();
      uint64_t v15 = v11;
      v11[1] = a2;
      v11[2].n128_u8[0] = v9 & 1;
      char v18 = 12;
      sub_1B6A62610((uint64_t)v13);
      swift_release();
      return sub_1B67421B0((uint64_t)v13);
    }
  }
  return result;
}

unint64_t sub_1B6852708(unint64_t result, __n128 a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = result;
  unint64_t v5 = HIDWORD(result);
  if (result != 0xFFFFFFFF)
  {
    uint64_t v6 = *v2;
    swift_unownedRetainStrong();
    sub_1B69DE568(v4);
    if ((v7 & 0x100000000) != 0)
    {
      swift_release();
      char v9 = 1;
    }
    else
    {
      BOOL v8 = sub_1B637D6B4((uint64_t)&type metadata for Position);
      swift_release();
      char v9 = !v8;
    }
    swift_unownedRetainStrong();
    sub_1B684FFC8(v4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_1B68642F8, a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    uint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      uint64_t result = swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v13[0] = v4;
      v13[1] = v5;
      uint64_t v14 = v6;
      sub_1B68795FC(0, &qword_1E9DD16E8);
      uint64_t v16 = v10;
      uint64_t v17 = &off_1F0F68360;
      BOOL v11 = (__n128 *)swift_allocObject();
      uint64_t v15 = v11;
      v11[1] = a2;
      v11[2].n128_u8[0] = v9 & 1;
      char v18 = 12;
      sub_1B6A62610((uint64_t)v13);
      swift_release();
      return sub_1B67421B0((uint64_t)v13);
    }
  }
  return result;
}

uint64_t sub_1B68528A4(uint64_t result, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v7 = *v2;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for Children, (uint64_t)&off_1F0FA3910, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B68513C0(v5, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6862B6C);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    uint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      uint64_t result = swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v10[0] = a2;
      v10[1] = v6;
      uint64_t v11 = v7;
      sub_1B68795FC(0, &qword_1E9DD1670);
      uint64_t v14 = v9;
      uint64_t v15 = &off_1F0F68360;
      uint64_t v12 = v5;
      BOOL v13 = !v8;
      char v16 = 12;
      swift_bridgeObjectRetain();
      sub_1B6A62610((uint64_t)v10);
      swift_release();
      return sub_1B67421B0((uint64_t)v10);
    }
  }
  return result;
}

uint64_t sub_1B68529FC(uint64_t result, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v7 = *v2;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for PropagateDirtiness, (uint64_t)&off_1F0F7A610, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850BAC(v5, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62E15D4);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    uint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      uint64_t result = swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v10[0] = a2;
      v10[1] = v6;
      uint64_t v11 = v7;
      sub_1B68795FC(0, &qword_1E9DD1660);
      uint64_t v14 = v9;
      uint64_t v15 = &off_1F0F68360;
      uint64_t v12 = v5;
      BOOL v13 = !v8;
      char v16 = 12;
      sub_1B6A62610((uint64_t)v10);
      swift_release();
      return sub_1B67421B0((uint64_t)v10);
    }
  }
  return result;
}

uint64_t sub_1B6852B50(uint64_t a1)
{
  unint64_t v2 = sub_1B687B84C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6852B8C(uint64_t a1)
{
  unint64_t v2 = sub_1B687B84C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6852BC8(void *a1)
{
  sub_1B62BAC28(0, &qword_1E9DD1748, (uint64_t (*)(void))sub_1B687B84C, (uint64_t)&type metadata for CodeGenerationInitialized.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B687B84C();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6852D08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  sub_1B62BAC28(0, &qword_1E9DD1740, (uint64_t (*)(void))sub_1B687B414, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B687B414();
  sub_1B6E33A88();
  char v18 = 0;
  uint64_t v11 = v15;
  sub_1B6E32F48();
  if (!v11)
  {
    uint64_t v16 = v14;
    char v17 = 1;
    sub_1B62D85D4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B687B4FC((unint64_t *)&qword_1E9DCFE00);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6852F10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB98BC(*a1, *a2);
}

uint64_t sub_1B6852F1C(uint64_t a1)
{
  unint64_t v2 = sub_1B687B414();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6852F58(uint64_t a1)
{
  unint64_t v2 = sub_1B687B414();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6852F94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B68785E0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B6852FC4(void *a1)
{
  return sub_1B6852D08(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1B6852FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[3] = &type metadata for Entity;
  v12[4] = &off_1F0F9FC58;
  v12[0] = a3;
  uint64_t v7 = sub_1B62C14BC(v12, (uint64_t)&type metadata for Entity);
  v11[3] = (uint64_t)&type metadata for Entity;
  v11[4] = (uint64_t)&off_1F0F9FC58;
  uint64_t v8 = sub_1B62C12C4(v11);
  *uint64_t v8 = sub_1B6A69610(*v7);
  sub_1B62C55B0(0, (unint64_t *)&qword_1E9DCFCD0);
  swift_dynamicCast();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
  uint64_t v9 = v12[5];
  swift_unknownObjectRetain();
  swift_retain();
  sub_1B6862904(a5, a1);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1B68530F8(void *a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v17 = a3;
  unint64_t v16 = a4;
  unsigned int v4 = a2;
  unint64_t v6 = HIDWORD(a2);
  sub_1B62BAC28(0, &qword_1E9DD1730, (uint64_t (*)(void))sub_1B62A26DC, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = (char *)&v15 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A26DC();
  sub_1B6E33A88();
  unint64_t v19 = __PAIR64__(v6, v4);
  uint64_t v20 = v17;
  char v21 = 0;
  sub_1B6878CE8();
  uint64_t v13 = v18;
  sub_1B6E32FA8();
  if (!v13)
  {
    unint64_t v19 = v16;
    char v21 = 1;
    sub_1B62D85D4(0, &qword_1EB980280, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBB320]);
    sub_1B687B468();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B68532F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B68638F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6853320(uint64_t a1)
{
  unint64_t v2 = sub_1B62A26DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B685335C(uint64_t a1)
{
  unint64_t v2 = sub_1B62A26DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6853398(void *a1)
{
  return sub_1B68530F8(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1B68533B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B6852FE4(a1, a2, *v3, v3[1], v3[2]);
  *a3 = result;
  a3[1] = v6;
  a3[2] = v7;
  return result;
}

uint64_t sub_1B68533F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_unknownObjectRetain();
  uint64_t v6 = sub_1B6861D40(v5, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *unint64_t v2 = (uint64_t)v6;
  uint64_t v7 = v2[1];
  swift_unknownObjectRetain();
  uint64_t v8 = sub_1B6862238(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v2[1] = (uint64_t)v8;
  swift_unknownObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B6861FA8(v9, a1, a2);
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  v2[6] = v10;
  uint64_t v11 = v2[4];
  swift_unknownObjectRetain();
  uint64_t v12 = sub_1B6862238(v11, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  v2[4] = (uint64_t)v12;
  return result;
}

unint64_t sub_1B6853508(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    case 6:
      unint64_t result = 1953522533;
      break;
    case 7:
      unint64_t result = 0x7469706365;
      break;
    case 8:
      unint64_t result = 1953063792;
      break;
    case 9:
      unint64_t result = 0x7469636370;
      break;
    case 10:
      unint64_t result = 6385764;
      break;
    case 11:
      unint64_t result = 1634755685;
      break;
    case 12:
      unint64_t result = 0x7469647065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6853680(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1B62C469C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B62C469C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B685370C()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6853508(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6853770()
{
  sub_1B6853508(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68537C4()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B6853508(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B6853824@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68639E0();
  *a1 = result;
  return result;
}

unint64_t sub_1B6853854@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B6853508(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B6853880@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68639E0();
  *a1 = result;
  return result;
}

void sub_1B68538A8(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1B68538B4(uint64_t a1)
{
  unint64_t v2 = sub_1B62BB590();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68538F0(uint64_t a1)
{
  unint64_t v2 = sub_1B62BB590();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B685392C(void *a1)
{
  unint64_t v3 = v1;
  sub_1B62BAC28(0, &qword_1E9DD1698, (uint64_t (*)(void))sub_1B62BB590, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62BB590();
  sub_1B6E33A88();
  if (!*(void *)(*v3 + 16)
    || (uint64_t v14 = *v3,
        char v13 = 6,
        sub_1B62BB5E4(0, &qword_1EB97E578, (void (*)(void))sub_1B62A2730, (void (*)(void))sub_1B6878CE8),
        sub_1B6878D3C(),
        sub_1B6E32FA8(),
        !v2))
  {
    if (!*(void *)(v3[1] + 16)
      || (uint64_t v14 = v3[1],
          char v13 = 7,
          sub_1B62BB5E4(0, &qword_1EB97E578, (void (*)(void))sub_1B62A2730, (void (*)(void))sub_1B6878CE8),
          sub_1B6878D3C(),
          sub_1B6E32FA8(),
          !v2))
    {
      if (!*(void *)(v3[2] + 16)
        || (uint64_t v14 = v3[2],
            char v13 = 8,
            sub_1B62BB5E4(0, &qword_1EB97E568, (void (*)(void))sub_1B62B1EFC, (void (*)(void))sub_1B68789A4),
            sub_1B6878DCC(),
            sub_1B6E32FA8(),
            !v2))
      {
        if (!*(void *)(v3[3] + 16)
          || (uint64_t v14 = v3[3],
              char v13 = 9,
              sub_1B62BB5E4(0, &qword_1EB97E568, (void (*)(void))sub_1B62B1EFC, (void (*)(void))sub_1B68789A4),
              sub_1B6878DCC(),
              sub_1B6E32FA8(),
              !v2))
        {
          sub_1B6878E5C((uint64_t)(v3 + 5), (uint64_t)v15);
          sub_1B6878E5C((uint64_t)v15, (uint64_t)&v16);
          if (!v16
            || !*(void *)(v16 + 16)
            || (sub_1B6878E5C((uint64_t)v15, (uint64_t)&v14),
                char v13 = 10,
                sub_1B62BAE70(0, &qword_1EB9802B0, &qword_1EB9802A0, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment, MEMORY[0x1E4FBB320]), sub_1B62BAD34(&qword_1E9DD16C8, (void (*)(void))sub_1B6878FD4), sub_1B6E32FA8(), !v2))
          {
            if (!*(void *)(v3[6] + 16)
              || (uint64_t v14 = v3[6],
                  char v13 = 11,
                  sub_1B62D85D4(0, &qword_1EB980290, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment, MEMORY[0x1E4FBB320]), sub_1B6878EEC(), sub_1B6E32FA8(), !v2))
            {
              if (*(void *)(v3[4] + 16))
              {
                uint64_t v14 = v3[4];
                char v13 = 12;
                sub_1B62BACD8(0, &qword_1EB9800D8, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBAEA0]);
                sub_1B62BAECC(&qword_1E9DD16C0, (void (*)(void))sub_1B6878CE8);
                sub_1B6E32FA8();
              }
            }
          }
        }
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B6853E88(void *a1)
{
  return sub_1B685392C(a1);
}

uint64_t sub_1B6853ED0()
{
  swift_bridgeObjectRelease();
  void *v0 = MEMORY[0x1E4FBC868];
  uint64_t result = swift_bridgeObjectRelease();
  v0[5] = 0;
  return result;
}

uint64_t sub_1B6853F04()
{
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    sub_1B6E33938();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 56))
    {
LABEL_3:
      sub_1B6E33938();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1B6E33938();
    if (*(void *)(v0 + 56)) {
      goto LABEL_3;
    }
  }
  sub_1B6E33938();
LABEL_6:
  if (*(unsigned char *)(v0 + 68) == 1) {
    return sub_1B6E33938();
  }
  sub_1B6E33938();
  return sub_1B6E33958();
}

uint64_t sub_1B6854028()
{
  return sub_1B6E33988();
}

uint64_t sub_1B685406C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68540A8(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 64);
  if (*(unsigned char *)(a1 + 68)) {
    unsigned int v2 = 0;
  }
  return (*(_DWORD *)(a2 + 64) > v2) & ~*(unsigned __int8 *)(a2 + 68);
}

uint64_t sub_1B68540D0(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a2 + 64);
  if (*(unsigned char *)(a2 + 68)) {
    unsigned int v2 = 0;
  }
  return *(unsigned char *)(a1 + 68) & 1 | (*(_DWORD *)(a1 + 64) <= v2);
}

uint64_t sub_1B68540FC(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 64);
  if (*(unsigned char *)(a1 + 68)) {
    unsigned int v2 = 0;
  }
  return *(unsigned char *)(a2 + 68) & 1 | (*(_DWORD *)(a2 + 64) <= v2);
}

uint64_t sub_1B6854128(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a2 + 64);
  if (*(unsigned char *)(a2 + 68)) {
    unsigned int v2 = 0;
  }
  return (*(_DWORD *)(a1 + 64) > v2) & ~*(unsigned __int8 *)(a1 + 68);
}

uint64_t sub_1B6854150(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  v8[0] = v2;
  *(void *)((char *)v8 + 13) = *(void *)(a1 + 61);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v10[0] = v4;
  *(void *)((char *)v10 + 13) = *(void *)(a2 + 61);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1B6861344((uint64_t)v7, (uint64_t)v9) & 1;
}

void *sub_1B68541AC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  long long v3 = sub_1B67DDDC8(MEMORY[0x1E4FBC860]);
  uint64_t result = sub_1B67DDDE8(v2);
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t sub_1B68541F4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6854248()
{
  return sub_1B6E318B8();
}

uint64_t sub_1B6854260()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68542B0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B6854304(void *a1@<X8>)
{
  *a1 = 0x747865746E6F63;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1B6854320()
{
  return 0x747865746E6F63;
}

uint64_t sub_1B6854338@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B6854390(uint64_t a1)
{
  unint64_t v2 = sub_1B687B8A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68543CC(uint64_t a1)
{
  unint64_t v2 = sub_1B687B8A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6854408(void *a1, uint64_t a2)
{
  sub_1B62BAC28(0, &qword_1E9DD1770, (uint64_t (*)(void))sub_1B687B8A0, (uint64_t)&type metadata for CodeGenerationComponent.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B687B8A0();
  sub_1B6E33A88();
  if (!a2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  v11[1] = a2;
  _s7ContextCMa();
  sub_1B62BAC90(&qword_1E9DD1778, (void (*)(uint64_t))_s7ContextCMa);
  swift_retain();
  sub_1B6E32FA8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return swift_release();
}

void *sub_1B68545EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B687B580(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6854618(void *a1)
{
  return sub_1B6854408(a1, *v1);
}

uint64_t sub_1B6854634(uint64_t a1, uint64_t a2)
{
  long long v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  if (result)
  {
    uint64_t v7 = *v2;
    if (*v3)
    {
      uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v7 + 2512))();
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t v8 = 0;
    }
    *long long v3 = v8;
  }
  return result;
}

uint64_t sub_1B68546D0(uint64_t *a1, char a2, void **a3, uint64_t *a4)
{
  uint64_t v6 = *a1;
  if (a2)
  {
    if (a2 == 1)
    {
      uint64_t v7 = "constant uint32_t& currentSeed";
      uint64_t v8 = "const void* scriptContext";
      BOOL v9 = v6 == 0xF000000000000000;
      if (v6 == 0xF000000000000000) {
        unint64_t v10 = 0xD000000000000027;
      }
      else {
        unint64_t v10 = 0xD00000000000001ELL;
      }
    }
    else
    {
      uint64_t v7 = "_ currentSeed: UInt32";
      uint64_t v8 = "onstants& scriptContext";
      BOOL v9 = v6 == 0xF000000000000000;
      if (v6 == 0xF000000000000000) {
        unint64_t v10 = 0xD000000000000021;
      }
      else {
        unint64_t v10 = 0xD000000000000015;
      }
    }
    unint64_t v11 = (unint64_t)v8 | 0x8000000000000000;
    unint64_t v12 = (unint64_t)v7 | 0x8000000000000000;
  }
  else
  {
    BOOL v9 = v6 == 0xF000000000000000;
    if (v6 == 0xF000000000000000) {
      unint64_t v10 = 0xD000000000000019;
    }
    else {
      unint64_t v10 = 0xD000000000000014;
    }
    unint64_t v11 = 0x80000001B6F39BD0;
    unint64_t v12 = 0x80000001B6F39BF0;
  }
  if (v9) {
    unint64_t v13 = v12;
  }
  else {
    unint64_t v13 = v11;
  }
  uint64_t v14 = *a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = sub_1B6335858(0, v14[2] + 1, 1, v14);
    *a3 = v14;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = sub_1B6335858(v16 > 1, v17 + 1, 1, v14);
    *a3 = v14;
  }
  _DWORD v14[2] = v17 + 1;
  uint64_t v18 = &v14[2 * v17];
  v18[4] = v10;
  v18[5] = v13;
  BOOL v19 = v6 == 0xF000000000000000;
  if (v6 == 0xF000000000000000) {
    uint64_t v20 = 0x6F43747069726373;
  }
  else {
    uint64_t v20 = 0x53746E6572727563;
  }
  if (v19) {
    unint64_t v21 = 0xED0000747865746ELL;
  }
  else {
    unint64_t v21 = 0xEB00000000646565;
  }
  uint64_t v22 = (void *)*a4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v22;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B6335858(0, v22[2] + 1, 1, v22);
    uint64_t v22 = (void *)result;
    *a4 = result;
  }
  unint64_t v25 = v22[2];
  unint64_t v24 = v22[3];
  if (v25 >= v24 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B6335858(v24 > 1, v25 + 1, 1, v22);
    uint64_t v22 = (void *)result;
    *a4 = result;
  }
  v22[2] = v25 + 1;
  uint64_t v26 = &v22[2 * v25];
  v26[4] = v20;
  v26[5] = v21;
  return result;
}

uint64_t sub_1B6854924()
{
  sub_1B62D85D4(0, (unint64_t *)&unk_1EB980BC8, (uint64_t)&type metadata for ComponentProperty, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E8C6E0;
  unint64_t v1 = MEMORY[0x1BA9B41E0](0x6E6F697469736F70, 0xE800000000000000);
  uint64_t v5 = sub_1B6741EBC(v1, v2, v3, v4);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v5;
  unint64_t v6 = MEMORY[0x1BA9B41E0](0x797469636F6C6576, 0xE800000000000000);
  uint64_t v10 = sub_1B6741EE0(v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 40) = v10;
  unint64_t v11 = MEMORY[0x1BA9B41E0](0x5672616C75676E61, 0xEF797469636F6C65);
  uint64_t v15 = sub_1B67414C0(v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = v15;
  unint64_t v16 = MEMORY[0x1BA9B41E0](0x656C616373, 0xE500000000000000);
  uint64_t v20 = sub_1B6741E50(v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = v20;
  unint64_t v21 = MEMORY[0x1BA9B41E0](0x656C616373, 0xE500000000000000);
  uint64_t v25 = sub_1B6741E74(v21, v22, v23, v24);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = v25;
  unint64_t v26 = MEMORY[0x1BA9B41E0](0x656C616373, 0xE500000000000000);
  uint64_t v30 = sub_1B6741E98(v26, v27, v28, v29);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 72) = v30;
  unint64_t v31 = MEMORY[0x1BA9B41E0](0x726F6C6F63, 0xE500000000000000);
  uint64_t v35 = sub_1B6741E2C(v31, v32, v33, v34);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = v35;
  unint64_t v36 = MEMORY[0x1BA9B41E0](0x7461746E6569726FLL, 0xEB000000006E6F69);
  uint64_t v40 = sub_1B67413E8(v36, v37, v38, v39);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 88) = v40;
  unint64_t v41 = MEMORY[0x1BA9B41E0](0x656C676E61, 0xE500000000000000);
  uint64_t v45 = sub_1B6741454(v41, v42, v43, v44);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 96) = v45;
  unint64_t v46 = MEMORY[0x1BA9B41E0](0x6C6556656C676E61, 0xED0000797469636FLL);
  uint64_t v50 = sub_1B6741DE4(v46, v47, v48, v49);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 104) = v50;
  unint64_t v51 = MEMORY[0x1BA9B41E0](25705, 0xE200000000000000);
  uint64_t v55 = sub_1B67413C4(v51, v52, v53, v54);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 112) = v55;
  unint64_t v56 = MEMORY[0x1BA9B41E0](0x4665727574786574, 0xEC000000656D6172);
  uint64_t v60 = sub_1B6741DC0(v56, v57, v58, v59);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 120) = v60;
  unint64_t v61 = MEMORY[0x1BA9B41E0](0x746F766970, 0xE500000000000000);
  uint64_t v65 = sub_1B6741478(v61, v62, v63, v64);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = v65;
  unint64_t v66 = MEMORY[0x1BA9B41E0](0x7A696C616D726F6ELL, 0xED00006567416465);
  uint64_t v70 = sub_1B674140C(v66, v67, v68, v69);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v70;
  unint64_t v71 = MEMORY[0x1BA9B41E0](0x656D69746566696CLL, 0xE800000000000000);
  uint64_t v75 = sub_1B6741508(v71, v72, v73, v74);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 144) = v75;
  unint64_t v76 = MEMORY[0x1BA9B41E0](1936941421, 0xE400000000000000);
  uint64_t v80 = sub_1B6741E08(v76, v77, v78, v79);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 152) = v80;
  unint64_t v81 = MEMORY[0x1BA9B41E0](0x746567726174, 0xE600000000000000);
  uint64_t v85 = sub_1B674149C(v81, v82, v83, v84);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 160) = v85;
  unint64_t v86 = MEMORY[0x1BA9B41E0](0x6174614472657375, 0xE900000000000031);
  uint64_t v90 = sub_1B6741F04(v86, v87, v88, v89);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 168) = v90;
  unint64_t v91 = MEMORY[0x1BA9B41E0](0x6174614472657375, 0xE900000000000032);
  uint64_t v95 = sub_1B6741F28(v91, v92, v93, v94);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 176) = v95;
  unint64_t v96 = MEMORY[0x1BA9B41E0](0x6174614472657375, 0xE900000000000033);
  uint64_t v100 = sub_1B6741F4C(v96, v97, v98, v99);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 184) = v100;
  unint64_t v101 = MEMORY[0x1BA9B41E0](0x6174614472657375, 0xE900000000000034);
  uint64_t v105 = sub_1B6741F70(v101, v102, v103, v104);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 192) = v105;
  unint64_t v106 = MEMORY[0x1BA9B41E0](0x73656E6867756F72, 0xE900000000000073);
  uint64_t v110 = sub_1B6741D78(v106, v107, v108, v109);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 200) = v110;
  unint64_t v111 = MEMORY[0x1BA9B41E0](0x73656E6C6174656DLL, 0xE900000000000073);
  uint64_t v115 = sub_1B6741D54(v111, v112, v113, v114);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 208) = v115;
  unint64_t v116 = MEMORY[0x1BA9B41E0](0x6E6F697373696D65, 0xE800000000000000);
  uint64_t v120 = sub_1B67414E4(v116, v117, v118, v119);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 216) = v120;
  unint64_t v121 = MEMORY[0x1BA9B41E0](0x726F62686769656ELL, 0xED0000746E756F43);
  uint64_t v125 = sub_1B6741430(v121, v122, v123, v124);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 224) = v125;
  uint64_t result = sub_1B6E31C48();
  qword_1EB997D88 = v0;
  return result;
}

uint64_t *sub_1B6854E80()
{
  if (qword_1EB97F2F0 != -1) {
    swift_once();
  }
  return &qword_1EB997D88;
}

uint64_t sub_1B6854ECC()
{
  sub_1B62D85D4(0, (unint64_t *)&unk_1EB980BC8, (uint64_t)&type metadata for ComponentProperty, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  unint64_t v1 = MEMORY[0x1BA9B41E0](0x44496E77617073, 0xE700000000000000);
  uint64_t v5 = sub_1B6741D9C(v1, v2, v3, v4);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v5;
  uint64_t result = sub_1B6E31C48();
  qword_1EB997D90 = v0;
  return result;
}

double sub_1B6854F88()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B6A6E4E0(1, (uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1E9E49390 = v1[0];
  *(_OWORD *)&qword_1E9E493A0 = v1[1];
  qword_1E9E493B0 = v2;
  return result;
}

uint64_t sub_1B6855038()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EB997A18;
  int v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  char v11 = 2;
  uint64_t v12 = 0;
  swift_retain();
  sub_1B6A6E4E0(1, (uint64_t)&v1);
  uint64_t result = swift_release();
  qword_1EB997D60 = v1;
  dword_1EB997D68 = v2;
  byte_1EB997D6C = v3;
  qword_1EB997D70 = v4 | 1;
  byte_1EB997D78 = v5;
  qword_1EB997D80 = v6;
  return result;
}

uint64_t sub_1B685510C()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EB997A18;
  int v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  char v11 = 2;
  uint64_t v12 = 0;
  swift_retain();
  sub_1B6A6E2D8(1, (uint64_t)&v1);
  uint64_t result = swift_release();
  *(void *)&xmmword_1EB9979A8 = v1;
  DWORD2(xmmword_1EB9979A8) = v2;
  BYTE12(xmmword_1EB9979A8) = v3;
  qword_1EB9979B8 = v4 | 1;
  byte_1EB9979C0 = v5;
  qword_1EB9979C8 = v6;
  return result;
}

uint64_t sub_1B68551E0()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EB997A18;
  int v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  char v11 = 2;
  uint64_t v12 = 0;
  swift_retain();
  sub_1B63AC2E8(3, (uint64_t)&v1);
  uint64_t result = swift_release();
  *(void *)&xmmword_1EB997D38 = v1;
  DWORD2(xmmword_1EB997D38) = v2;
  BYTE12(xmmword_1EB997D38) = v3;
  qword_1EB997D48 = v4 | 1;
  byte_1EB997D50 = v5;
  qword_1EB997D58 = v6;
  return result;
}

double sub_1B68552B4()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B63A7070(3, (uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1EB997D10 = v1[0];
  unk_1EB997D20 = v1[1];
  qword_1EB997D30 = v2;
  return result;
}

uint64_t sub_1B6855364(uint64_t a1)
{
  if (qword_1E9DCC4E0 != -1) {
    swift_once();
  }
  uint64_t v2 = xmmword_1E9E49390;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v4 = sub_1B62B6A60();
  char v5 = *(os_unfair_lock_s **)(v3 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v5);
  sub_1B62B6A68(a1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v4, v2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 40));
  swift_release_n();
  if (qword_1EB97F2E8 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EB997D60;
  swift_getObjectType();
  uint64_t v7 = sub_1B62B6A60();
  uint64_t v8 = *(os_unfair_lock_s **)(v3 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v8);
  sub_1B62B6A68(a1, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v7, v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 40));
  swift_release_n();
  if (qword_1EB97F2D0 != -1) {
    swift_once();
  }
  uint64_t v9 = xmmword_1EB9979A8;
  swift_getObjectType();
  uint64_t v10 = sub_1B62B6A60();
  char v11 = *(os_unfair_lock_s **)(v3 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v11);
  sub_1B62B6A68(a1, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v10, v9);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 40));
  swift_release_n();
  if (qword_1EB97F2D8 != -1) {
    swift_once();
  }
  uint64_t v12 = xmmword_1EB997D38;
  swift_getObjectType();
  uint64_t v13 = sub_1B62B6A60();
  uint64_t v14 = *(os_unfair_lock_s **)(v3 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v14);
  sub_1B62B6A68(a1, v12);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v13, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 40));
  swift_release_n();
  if (qword_1EB97D700 != -1) {
    swift_once();
  }
  uint64_t v15 = xmmword_1EB997D10;
  swift_getObjectType();
  uint64_t v16 = sub_1B62B6A60();
  unint64_t v17 = *(os_unfair_lock_s **)(v3 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v17);
  sub_1B62B6A68(a1, v15);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v16, v15);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 40));
  return swift_release_n();
}

uint64_t sub_1B6855770(unint64_t *a1, uint64_t a2, char a3)
{
  unint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  unint64_t v6 = *a1;
  uint64_t v7 = (ValueMetadata *)a1[1];
  if (*(unsigned char *)(*(void *)(*(void *)(a2 + 80) + 8 * (int)sub_1B62EA764(*a1) + 32) + 200) == 1)
  {
    if (a3 & 1) != 0 && (sub_1B69DE438(v6))
    {
      char v8 = sub_1B69DE438(v6);
      return v8 & 1;
    }
    if (v7 != &type metadata for SetActive)
    {
      if (v7 != &type metadata for NodeVisibilityController) {
        return 0;
      }
      if (v4 != *(void *)aVisible_0 || v5 != unk_1E9DD6588)
      {
        char v8 = sub_1B6E334B8();
        return v8 & 1;
      }
    }
  }
  return 1;
}

uint64_t sub_1B6855854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v18 = 0;
  char v19 = 1;
  swift_retain();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1B68696DC(v10, v4, &v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_1B6869950(v11, v4, &v18);
  swift_bridgeObjectRelease();
  swift_release();
  if (v19)
  {
    uint64_t v12 = *(void **)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v4 + 16) = v12;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B68C2464(0, v12[2] + 1, 1, v12);
      uint64_t v12 = (void *)result;
      *(void *)(v4 + 16) = result;
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B68C2464(v14 > 1, v15 + 1, 1, v12);
      uint64_t v12 = (void *)result;
      *(void *)(v5 + 16) = result;
    }
    v12[2] = v15 + 1;
    uint64_t v16 = &v12[4 * v15];
    v16[4] = a1;
    v16[5] = a2;
    v16[6] = a3;
    v16[7] = a4;
  }
  else
  {
    uint64_t v17 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t)sub_1B68E8710(v17, v17, a1, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1B68559E8@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B68631C8(v3, v2);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1B6863360(v4);
  uint64_t v33 = v7;
  uint64_t v34 = v6;
  uint64_t v32 = v8;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v5 + 16);
  if (v37)
  {
    uint64_t v36 = v5 + 32;
    uint64_t v31 = v5;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v11 = *(void *)(v36 + 40 * v9 + 24);
      uint64_t v40 = *(void *)(v11 + 16);
      if (v40)
      {
        uint64_t v38 = v9;
        uint64_t v39 = v11 + 32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        uint64_t v12 = 0;
        do
        {
          uint64_t v41 = v12;
          uint64_t v13 = (int *)(v39 + 56 * v12);
          int v15 = *v13;
          int v14 = v13[1];
          uint64_t v16 = *((void *)v13 + 5);
          uint64_t v45 = *((void *)v13 + 4);
          uint64_t v46 = *((void *)v13 + 3);
          uint64_t v17 = v10[2];
          uint64_t v44 = *((void *)v13 + 6);
          long long v43 = *(_OWORD *)(v13 + 2);
          unint64_t v42 = v10;
          if (v17)
          {
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v18 = v10 + 5;
            uint64_t v19 = v16;
            while (1)
            {
              if (*((_DWORD *)v18 - 2) == v15 && *((_DWORD *)v18 - 1) == v14 && *v18 == (void)v43 && v18[2] == v46)
              {
                uint64_t v22 = v18[5];
                BOOL v23 = v18[3] == v45 && v18[4] == v19;
                if (v23 || (sub_1B6E334B8() & 1) != 0)
                {
                  if (v22)
                  {
                    if (v44)
                    {
                      sub_1B6E32768();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      char v24 = sub_1B6E31708();
                      swift_bridgeObjectRelease();
                      swift_release_n();
                      uint64_t v19 = v16;
                      swift_release();
                      if (v24)
                      {
LABEL_28:
                        swift_release();
                        uint64_t v10 = v42;
                        goto LABEL_35;
                      }
                    }
                  }
                  else if (!v44)
                  {
                    goto LABEL_28;
                  }
                }
              }
              v18 += 7;
              if (!--v17) {
                goto LABEL_30;
              }
            }
          }
          swift_retain();
          swift_bridgeObjectRetain();
LABEL_30:
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v10 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_1B68C407C(0, v42[2] + 1, 1, v42);
          }
          unint64_t v26 = v10[2];
          unint64_t v25 = v10[3];
          long long v27 = v43;
          if (v26 >= v25 >> 1)
          {
            uint64_t v29 = sub_1B68C407C(v25 > 1, v26 + 1, 1, v10);
            long long v27 = v43;
            uint64_t v10 = v29;
          }
          _OWORD v10[2] = v26 + 1;
          uint64_t v28 = &v10[7 * v26];
          *((_DWORD *)v28 + 8) = v15;
          *((_DWORD *)v28 + 9) = v14;
          *(_OWORD *)(v28 + 5) = v27;
          v28[7] = v46;
          v28[8] = v45;
          v28[9] = v16;
          v28[10] = v44;
          swift_release();
LABEL_35:
          swift_bridgeObjectRelease();
          uint64_t v12 = v41 + 1;
        }
        while (v41 + 1 != v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v9 = v38;
      }
      ++v9;
    }
    while (v9 != v37);
    uint64_t v5 = v31;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1B6641DD8((uint64_t)v10);
  *a2 = v5;
  a2[1] = v34;
  a2[2] = v33;
  a2[3] = v32;
  return result;
}

uint64_t sub_1B6855D84(uint64_t a1, uint64_t a2)
{
  sub_1B695E090(*(void *)(a1 + 24), (uint64_t)&v10);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  int v6 = v13 | (v14 << 16);
  unsigned int v7 = v10;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B6CCF2EC(v5, a1, a2);
  swift_release();
  swift_release();
  swift_retain();
  swift_bridgeObjectRelease_n();
  sub_1B68504C0(v7, v4, v8, v6 & 0x1010101, *(void *)(a1 + 24));
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B6855E74(__int16 *a1, uint64_t a2, uint64_t a3)
{
  sub_1B62E17B4();
  int v6 = v5;
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B6E31098();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  unsigned __int8 v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v16 = result;
  a1[12] = 1;
  if (a3 == 0xFFFFFFFFLL
    || a3 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a3 >= *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v17 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a3) != -1)
    && *(_DWORD *)(v17 + 12 * (int)a3 + 8) != HIDWORD(a3)
    || (uint64_t v18 = sub_1B6C08404(*(void *)(*(void *)(result + 136) + 8 * *(int *)(v17 + 12 * (int)a3) + 32))) == 0
    || (uint64_t v19 = v18, v18 == 1))
  {
LABEL_3:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *((void *)a1 + 2) = MEMORY[0x1E4FBC868];
    return result;
  }
  uint64_t v20 = sub_1B6BF9594(a3, v16);
  if (!v20)
  {
    sub_1B674DC34(v19);
    goto LABEL_3;
  }
  uint64_t v21 = v20;
  uint64_t v22 = *((void *)a1 + 1);
  uint64_t v50 = *((void *)a1 + 2);
  uint64_t v51 = v22;
  uint64_t v42 = v19;
  __int16 v23 = *a1;
  swift_retain();
  char v24 = v23;
  uint64_t v25 = v42;
  sub_1B68569A8(v42, v21, 1, v24, v51);
  swift_bridgeObjectRelease();
  unint64_t v54 = MEMORY[0x1E4FBC860];
  sub_1B6856FC8(v25, &v54);
  unint64_t v26 = v54;
  if (*(void *)(v54 + 16))
  {
    uint64_t v51 = *(void *)(v54 + 16);
    uint64_t v46 = v14;
    uint64_t v47 = v10;
    uint64_t v48 = v6;
    v40[1] = v16;
    uint64_t v41 = a1;
    uint64_t v27 = qword_1EB9852D0;
    swift_bridgeObjectRetain();
    if (v27 != -1) {
      swift_once();
    }
    v40[0] = v26;
    unint64_t v28 = v26 + 88;
    unint64_t v44 = 0x80000001B6F39B00;
    uint64_t v45 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    long long v43 = xmmword_1B6E77050;
    do
    {
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      uint64_t v50 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v30 = v52;
      unint64_t v29 = v53;
      char v31 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v32 = qword_1EB997FF0;
      uint64_t v33 = qword_1EB985528;
      swift_retain();
      if (v33 != -1) {
        swift_once();
      }
      v28 += 64;
      sub_1B67A36D0();
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v43;
      *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v34 + 64) = sub_1B678615C();
      *(void *)(v34 + 32) = v30;
      *(void *)(v34 + 40) = v29;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v49 = v32;
      uint64_t v35 = v46;
      sub_1B6E31088();
      uint64_t v36 = v48[12];
      uint64_t v37 = v48[16];
      uint64_t v38 = &v9[v48[20]];
      (*v45)(v9, v35, v47);
      v9[v36] = v31;
      *(void *)&v9[v37] = 0;
      *(void *)uint64_t v38 = v30;
      *((void *)v38 + 1) = v29;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B62BFF14((uint64_t)v9, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      --v51;
    }
    while (v51);
    uint64_t v39 = v42;
    sub_1B674DC34(v42);
    sub_1B674DC34(v39);
    a1 = v41;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B674DC34(v25);
    sub_1B674DC34(v25);
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_release();
  *((unsigned char *)a1 + 26) = 1;
  return result;
}

uint64_t sub_1B6856410(__int16 *a1, uint64_t a2, uint64_t a3)
{
  sub_1B62E17B4();
  int v6 = v5;
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B6E31098();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  unsigned __int8 v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v16 = result;
  a1[12] = 1;
  if (a3 == 0xFFFFFFFFLL
    || a3 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a3 >= *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v17 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a3) != -1)
    && *(_DWORD *)(v17 + 12 * (int)a3 + 8) != HIDWORD(a3)
    || (uint64_t v18 = sub_1B6C08404(*(void *)(*(void *)(result + 136) + 8 * *(int *)(v17 + 12 * (int)a3) + 32))) == 0
    || (uint64_t v19 = v18, v18 == 1))
  {
LABEL_3:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *((void *)a1 + 2) = MEMORY[0x1E4FBC868];
    return result;
  }
  uint64_t v20 = sub_1B6BF9594(a3, v16);
  if (!v20)
  {
    sub_1B674DC34(v19);
    goto LABEL_3;
  }
  uint64_t v21 = v20;
  uint64_t v47 = v14;
  uint64_t v50 = *((void *)a1 + 1);
  uint64_t v41 = v19;
  __int16 v22 = *a1;
  sub_1B6873900(v19);
  uint64_t v23 = v41;
  sub_1B68569A8(v41, v21, 1, v22, v50);
  swift_bridgeObjectRelease();
  unint64_t v53 = MEMORY[0x1E4FBC860];
  sub_1B6856FC8(v23, &v53);
  unint64_t v24 = v53;
  uint64_t v25 = *(void *)(v53 + 16);
  if (v25)
  {
    uint64_t v45 = v10;
    uint64_t v46 = v6;
    v39[1] = v16;
    uint64_t v40 = a1;
    uint64_t v26 = qword_1EB9852D0;
    swift_bridgeObjectRetain();
    if (v26 != -1) {
      swift_once();
    }
    v39[0] = v24;
    unint64_t v27 = v24 + 88;
    unint64_t v43 = 0x80000001B6F39B00;
    unint64_t v44 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    long long v42 = xmmword_1B6E77050;
    do
    {
      uint64_t v50 = v25;
      uint64_t v51 = 0;
      unint64_t v52 = 0xE000000000000000;
      uint64_t v49 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v29 = v51;
      unint64_t v28 = v52;
      char v30 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v31 = qword_1EB997FF0;
      uint64_t v32 = qword_1EB985528;
      swift_retain();
      if (v32 != -1) {
        swift_once();
      }
      v27 += 64;
      sub_1B67A36D0();
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v42;
      *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v33 + 64) = sub_1B678615C();
      *(void *)(v33 + 32) = v29;
      *(void *)(v33 + 40) = v28;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v48 = v31;
      uint64_t v34 = v47;
      sub_1B6E31088();
      uint64_t v35 = v46[12];
      uint64_t v36 = v46[16];
      uint64_t v37 = &v9[v46[20]];
      (*v44)(v9, v34, v45);
      v9[v35] = v30;
      *(void *)&v9[v36] = 0;
      *(void *)uint64_t v37 = v29;
      *((void *)v37 + 1) = v28;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B62BFF14((uint64_t)v9, (uint64_t (*)(void))sub_1B62E17B4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v25 = v50 - 1;
    }
    while (v50 != 1);
    uint64_t v38 = v41;
    sub_1B674DC34(v41);
    sub_1B674DC34(v38);
    a1 = v40;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B674DC34(v23);
    sub_1B674DC34(v23);
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_release();
  *((unsigned char *)a1 + 26) = 1;
  return result;
}

uint64_t sub_1B68569A8(uint64_t result, uint64_t a2, char a3, char a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return result;
  }
  uint64_t v5 = 0xE400000000000000;
  uint64_t v6 = 1852399949;
  uint64_t v10 = result;
  switch(a4)
  {
    case 1:
      uint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x6E77617053;
      break;
    case 2:
      uint64_t v6 = 1953066569;
      break;
    case 3:
      uint64_t v5 = 0xEC00000074696E49;
      goto LABEL_8;
    case 4:
      uint64_t v5 = 0xE600000000000000;
      uint64_t v6 = 0x657461647055;
      break;
    case 5:
      uint64_t v5 = 0xEE00657461647055;
LABEL_8:
      uint64_t v6 = 0x656C636974726150;
      break;
    case 6:
      uint64_t v5 = 0xE600000000000000;
      uint64_t v6 = 0x7265646E6552;
      break;
    default:
      break;
  }
  uint64_t v11 = *(void *)(result + 176);
  if (!*(void *)(v11 + 16)) {
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1B62B2CE0(v6, v5);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_42:
    return swift_bridgeObjectRelease();
  }
  char v45 = a3;
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = a5;
  unint64_t v15 = *(void *)(v14 + 56);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1B6E32C18();
    if (v16) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v16)
    {
LABEL_14:
      uint64_t v17 = 0;
      uint64_t v42 = v10;
      do
      {
        if ((v15 & 0xC000000000000001) != 0)
        {
          uint64_t v18 = (void *)MEMORY[0x1BA9B4580](v17, v15);
        }
        else
        {
          uint64_t v18 = *(void **)(v15 + 8 * v17 + 32);
          swift_retain();
        }
        sub_1B629C37C((uint64_t)(v18 + 7), (uint64_t)v49);
        sub_1B6646D94(v49, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        if (sub_1B6A3D8B8() == 0x6156686374697753 && v19 == 0xEB0000000065756CLL)
        {
          swift_bridgeObjectRelease();
          sub_1B6646D94(v49, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          swift_release();
        }
        else
        {
          char v20 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          sub_1B6646D94(v49, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          if ((v20 & 1) != 0 || !*(void *)(v46 + 16))
          {
            swift_release();
          }
          else
          {
            uint64_t v22 = v18[5];
            uint64_t v21 = v18[6];
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_1B62B2CE0(v22, v21);
            if ((v24 & 1) == 0)
            {
              swift_release();
              goto LABEL_37;
            }
            uint64_t v25 = *(void *)(*(void *)(v46 + 56) + 16 * v23 + 8);
            swift_retain();
            swift_bridgeObjectRelease();
            sub_1B629C37C((uint64_t)(v18 + 7), (uint64_t)v48);
            sub_1B6646D94(v48, (void (*)(void, void, void, void, void))sub_1B629C9E8);
            uint64_t v26 = sub_1B6A4BDD8(v48);
            sub_1B6646D94(v48, (void (*)(void, void, void, void, void))sub_1B629DCAC);
            uint64_t v27 = *(void *)(v25 + 40);
            if (v26 != v27)
            {
              uint64_t v28 = v18[3];
              uint64_t v29 = v18[4];
              swift_bridgeObjectRetain();
              sub_1B6A47F08(v27, (uint64_t)v47);
              sub_1B6974F20(v28, v29, v47);
              char v30 = sub_1B6975220(v28, v29);
              uint64_t v31 = v30[5];
              uint64_t v32 = v30[6];
              uint64_t v44 = (uint64_t)v30;
              swift_bridgeObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v33 = *(void **)(v10 + 264);
              *(void *)(v10 + 264) = 0x8000000000000000;
              unint64_t v35 = sub_1B62B2CE0(v31, v32);
              char v36 = v34;
              uint64_t v37 = v33[2] + ((v34 & 1) == 0);
              if (v33[3] >= v37)
              {
                if (isUniquelyReferenced_nonNull_native)
                {
                  if ((v34 & 1) == 0) {
                    goto LABEL_29;
                  }
                }
                else
                {
                  sub_1B6AD1344();
                  if ((v36 & 1) == 0) {
                    goto LABEL_29;
                  }
                }
              }
              else
              {
                sub_1B6ABF534(v37, isUniquelyReferenced_nonNull_native);
                uint64_t v38 = sub_1B62B2CE0(v31, v32);
                if ((v36 & 1) != (v39 & 1))
                {
                  sub_1B6E33838();
                  __break(1u);
                  JUMPOUT(0x1B6856FACLL);
                }
                unint64_t v35 = v38;
                if ((v36 & 1) == 0)
                {
LABEL_29:
                  sub_1B62B3510(v35, v31, v32, v44, v33);
                  swift_bridgeObjectRetain();
                  goto LABEL_36;
                }
              }
              uint64_t v40 = v33[7];
              swift_release();
              *(void *)(v40 + 8 * v35) = v44;
LABEL_36:
              uint64_t v10 = v42;
              *(void *)(v42 + 264) = v33;
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B6646D94(v47, (void (*)(void, void, void, void, void))sub_1B629DCAC);
              swift_release();
LABEL_37:
              swift_bridgeObjectRelease();
              goto LABEL_16;
            }
            swift_release();
            swift_release();
          }
        }
LABEL_16:
        ++v17;
      }
      while (v16 != v17);
    }
  }
  swift_bridgeObjectRelease_n();
  if (v45)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_1B6869BC8(v41, a2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1B6856FC8(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = v2;
  unint64_t v122 = a2;
  uint64_t v144 = *MEMORY[0x1E4F143B8];
  sub_1B6873628(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v119 = (_DWORD *)((char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v120 = (uint64_t)&v111 - v12;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v118 = (char *)&v111 - v15;
  sub_1B63BCE6C(0, &qword_1E9DD1658, (uint64_t (*)(uint64_t))sub_1B6873628, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v19 = (char *)&v111 - v18;
  uint64_t v20 = *v2;
  uint64_t v21 = 0xE400000000000000;
  uint64_t v22 = 1852399949;
  switch(v20)
  {
    case 1:
      uint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x6E77617053;
      break;
    case 2:
      uint64_t v22 = 1953066569;
      break;
    case 3:
      uint64_t v21 = 0xEC00000074696E49;
      goto LABEL_7;
    case 4:
      uint64_t v21 = 0xE600000000000000;
      uint64_t v22 = 0x657461647055;
      break;
    case 5:
      uint64_t v21 = 0xEE00657461647055;
LABEL_7:
      uint64_t v22 = 0x656C636974726150;
      break;
    case 6:
      uint64_t v21 = 0xE600000000000000;
      uint64_t v22 = 0x7265646E6552;
      break;
    default:
      break;
  }
  uint64_t v133 = a1;
  uint64_t v23 = *(void *)(a1 + 176);
  if (!*(void *)(v23 + 16)) {
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1B62B2CE0(v22, v21);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    return swift_bridgeObjectRelease();
  }
  uint64_t v123 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(*((void *)v3 + 2) + 16);
  sub_1B62D85D4(0, &qword_1EB980BA8, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = 0xF000000000000000;
  *(unsigned char *)(inited + 40) = 1;
  *(void *)(inited + 48) = 0;
  *(unsigned char *)(inited + 56) = 1;
  int v28 = v3[24];
  uint64_t v116 = v26;
  if (v28 == 1)
  {
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 0xFFFFFFFFLL;
    unint64_t v30 = v29 | 0xB000000000000000;
    uint64_t v31 = sub_1B68C0FD8(1, 2, 1, (void *)inited);
    v31[2] = 2;
    uint64_t inited = (uint64_t)v31;
    v31[8] = v30;
    *((unsigned char *)v31 + 72) = 1;
    v31[10] = 0;
    *((unsigned char *)v31 + 88) = 1;
  }
  char v32 = v3[1];
  uint64_t v134 = MEMORY[0x1E4FBC860];
  v135 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  char v33 = *(unsigned char *)(inited + 40);
  uint64_t v34 = *(void *)(inited + 48);
  char v35 = *(unsigned char *)(inited + 56);
  uint64_t v136 = *(void *)(inited + 32);
  LOBYTE(v137) = v33;
  uint64_t v138 = v34;
  LOBYTE(v139) = v35;
  sub_1B68546D0(&v136, v32, &v135, &v134);
  if (v28)
  {
    char v36 = *(unsigned char *)(inited + 72);
    uint64_t v37 = *(void *)(inited + 80);
    char v38 = *(unsigned char *)(inited + 88);
    uint64_t v136 = *(void *)(inited + 64);
    LOBYTE(v137) = v36;
    uint64_t v138 = v37;
    LOBYTE(v139) = v38;
    sub_1B68546D0(&v136, v32, &v135, &v134);
  }
  uint64_t v115 = inited;
  swift_bridgeObjectRelease();
  v132 = v135;
  uint64_t v131 = v134;
  uint64_t v39 = sub_1B6A1A20C(v123);
  int64_t v40 = *(void *)(v39 + 16);
  unint64_t v121 = v3;
  uint64_t v117 = v6;
  uint64_t v113 = v7;
  unint64_t v112 = v19;
  uint64_t v130 = 0;
  if (v40)
  {
    uint64_t v136 = MEMORY[0x1E4FBC860];
    sub_1B6C3D66C(0, v40, 0);
    uint64_t v114 = v39;
    uint64_t v41 = (uint64_t *)(v39 + 40);
    uint64_t v42 = v136;
    int64_t v43 = v40;
    while (1)
    {
      uint64_t v44 = *(v41 - 1);
      uint64_t v45 = *v41;
      BOOL v46 = v44 == 1701015119 && v45 == 0xE400000000000000;
      if (v46 || (sub_1B6E334B8() & 1) != 0)
      {
        int v47 = 0;
      }
      else
      {
        BOOL v48 = v44 == 0x74737275426E4FLL && v45 == 0xE700000000000000;
        if (!v48 && (sub_1B6E334B8() & 1) == 0)
        {
          if (v44 == 0x7461657065526E4FLL && v45 == 0xE800000000000000)
          {
            int v47 = 0;
            char v49 = 0;
          }
          else
          {
            char v53 = sub_1B6E334B8();
            if (v53) {
              int v47 = 0;
            }
            else {
              int v47 = 2;
            }
            char v49 = v53 ^ 1;
          }
          goto LABEL_30;
        }
        int v47 = 1;
      }
      char v49 = 1;
LABEL_30:
      uint64_t v136 = v42;
      unint64_t v51 = *(void *)(v42 + 16);
      unint64_t v50 = *(void *)(v42 + 24);
      if (v51 >= v50 >> 1)
      {
        sub_1B6C3D66C(v50 > 1, v51 + 1, 1);
        uint64_t v42 = v136;
      }
      v41 += 2;
      *(void *)(v42 + 16) = v51 + 1;
      uint64_t v52 = v42 + 8 * v51;
      *(_DWORD *)(v52 + 32) = v47;
      *(unsigned char *)(v52 + 36) = v49 & 1;
      if (!--v43)
      {
        uint64_t v3 = v121;
        sub_1B685D274(v42);
        swift_bridgeObjectRelease();
        uint64_t v55 = (void *)(swift_bridgeObjectRetain() + 40);
        uint64_t v56 = v133;
        while (1)
        {
          uint64_t v62 = *(v55 - 1);
          uint64_t v61 = *v55;
          int v63 = v3[1];
          BOOL v64 = v62 == 1701015119 && v61 == 0xE400000000000000;
          int64_t v129 = v40;
          uint64_t v128 = v62;
          v126 = v55;
          LODWORD(v127) = v63;
          if (v64 || (sub_1B6E334B8() & 1) != 0) {
            break;
          }
          BOOL v65 = v62 == 0x74737275426E4FLL && v61 == 0xE700000000000000;
          if (v65 || (sub_1B6E334B8() & 1) != 0)
          {
            uint64_t v125 = 1;
            goto LABEL_60;
          }
          if (v62 == 0x7461657065526E4FLL && v61 == 0xE800000000000000)
          {
            uint64_t v125 = 0;
            int v124 = 0;
            goto LABEL_62;
          }
          int v79 = sub_1B6E334B8();
          uint64_t v80 = 2;
          if (v79) {
            uint64_t v80 = 0;
          }
          uint64_t v125 = v80;
          int v66 = v79 ^ 1;
LABEL_61:
          int v124 = v66;
LABEL_62:
          swift_bridgeObjectRetain_n();
          unint64_t v67 = v132;
          swift_bridgeObjectRetain();
          uint64_t v68 = v131;
          swift_bridgeObjectRetain();
          uint64_t v69 = MEMORY[0x1E4FBC860];
          uint64_t v70 = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
          uint64_t v71 = v123;
          uint64_t v73 = *(void *)(v123 + 24);
          uint64_t v72 = *(void *)(v123 + 32);
          _s7ContextC14GenerationDataCMa();
          uint64_t v57 = swift_allocObject();
          *(void *)(v57 + 104) = v69;
          *(void *)(v57 + 112) = v69;
          *(void *)(v57 + 120) = v69;
          *(void *)(v57 + 128) = v69;
          *(void *)(v57 + 136) = v69;
          *(void *)(v57 + 144) = v69;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B67DDFA4(v69);
          *(void *)(v57 + 168) = v69;
          *(void *)(v57 + 176) = v69;
          *(void *)(v57 + 16) = v56;
          *(unsigned char *)(v57 + 24) = (_BYTE)v127;
          *(_WORD *)(v57 + 25) = 1;
          *(unsigned char *)(v57 + 27) = 0;
          *(void *)(v57 + 32) = v69;
          *(_WORD *)(v57 + 40) = 1;
          *(void *)(v57 + 48) = v67;
          *(void *)(v57 + 56) = v68;
          *(_WORD *)(v57 + 64) = 257;
          *(void *)(v57 + 72) = v128;
          *(void *)(v57 + 80) = v61;
          *(void *)(v57 + 88) = v73;
          *(void *)(v57 + 96) = v72;
          v127 = v70;
          *(void *)(v57 + 152) = v70;
          swift_bridgeObjectRelease();
          *(_WORD *)(v57 + 160) = 0;
          uint64_t v136 = v57;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v74 = swift_bridgeObjectRetain();
          uint64_t v75 = v56;
          uint64_t v76 = v130;
          sub_1B6871320(v74, v75, v71);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v77 = swift_retain();
          uint64_t v78 = sub_1B68721F0(v77, v133);
          uint64_t v130 = v76;
          uint64_t v56 = v133;
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease();
          if (*(void *)(v78 + 16))
          {
            sub_1B6A32840(v57);
            swift_release();
            sub_1B69753F0(&v136, v78, v56, 0, 0);
            sub_1B6A1B8C8((uint64_t)&v136);
            uint64_t v57 = v136;
          }
          else
          {
            swift_release();
          }
          uint64_t v3 = v121;
          int64_t v58 = v129;
          uint64_t v59 = v125;
          char v60 = v124;
          uint64_t v55 = v126 + 2;
          swift_retain();
          sub_1B6A22D44();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          LOBYTE(v136) = v60 & 1;
          sub_1B685BF08(v59 | ((unint64_t)(v60 & 1) << 32), (void *)v57, v122);
          swift_bridgeObjectRelease();
          swift_release();
          int64_t v40 = v58 - 1;
          if (!v40) {
            goto LABEL_72;
          }
        }
        uint64_t v125 = 0;
LABEL_60:
        int v66 = 1;
        goto LABEL_61;
      }
    }
  }
  sub_1B685D274((uint64_t)&unk_1F0F804C8);
LABEL_72:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v136) = v3[1];
  *(_WORD *)((char *)&v136 + 1) = 1;
  BYTE3(v136) = 0;
  uint64_t v137 = MEMORY[0x1E4FBC860];
  LOWORD(v138) = 1;
  v139 = v132;
  uint64_t v140 = v131;
  __int16 v141 = 257;
  uint64_t v142 = 0;
  uint64_t v143 = 0;
  unint64_t v81 = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  unint64_t v82 = (void *)sub_1B6A1AE7C(v123, (uint64_t)&v136, (uint64_t)v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v135) = 1;
  sub_1B685BF08(0x100000002uLL, v82, v122);
  swift_release();
  uint64_t v83 = *((void *)v3 + 2);
  if (v116 == *(void *)(v83 + 16))
  {
    uint64_t v84 = v83 + 64;
    uint64_t v85 = 1 << *(unsigned char *)(v83 + 32);
    uint64_t v86 = -1;
    if (v85 < 64) {
      uint64_t v86 = ~(-1 << v85);
    }
    unint64_t v87 = v86 & *(void *)(v83 + 64);
    int64_t v88 = (unint64_t)(v85 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    uint64_t v89 = 0;
    uint64_t v133 = v88 - 7;
    v132 = (void *)(v83 + 120);
    uint64_t v90 = (uint64_t)v118;
    if (!v87) {
      goto LABEL_77;
    }
LABEL_76:
    unint64_t v91 = __clz(__rbit64(v87));
    v87 &= v87 - 1;
    unint64_t v92 = v91 | (v89 << 6);
    while (1)
    {
      uint64_t v95 = *(void *)(v83 + 56);
      uint64_t v96 = *(void *)(v83 + 48) + 8 * v92;
      int v97 = *(_DWORD *)v96;
      char v98 = *(unsigned char *)(v96 + 4);
      uint64_t v99 = v95
          + *(void *)(*(void *)(type metadata accessor for GraphScriptingConfig.ScriptInfo() - 8) + 72) * v92;
      uint64_t v100 = v117;
      sub_1B6366C08(v99, v90 + *(int *)(v117 + 48), (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      *(_DWORD *)uint64_t v90 = v97;
      *(unsigned char *)(v90 + 4) = v98;
      uint64_t v101 = v120;
      sub_1B68737A8(v90, v120, (uint64_t (*)(void))sub_1B6873628);
      uint64_t v102 = *(int *)(v100 + 48);
      uint64_t v103 = v119;
      uint64_t v104 = (uint64_t)v119 + v102;
      char v105 = *(unsigned char *)(v101 + 4);
      *uint64_t v119 = *(_DWORD *)v101;
      *((unsigned char *)v103 + 4) = v105;
      sub_1B6366C08(v101 + v102, v104, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      int v106 = *(unsigned __int8 *)(v104 + 40);
      sub_1B62BFF14(v104, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      if (v106 == 1)
      {
        swift_release();
        uint64_t v107 = (uint64_t)v112;
        sub_1B68737A8(v101, (uint64_t)v112, (uint64_t (*)(void))sub_1B6873628);
        uint64_t v108 = v113;
        uint64_t v109 = v117;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v107, 0, 1, v117);
        goto LABEL_99;
      }
      sub_1B62BFF14(v101, (uint64_t (*)(void))sub_1B6873628);
      if (v87) {
        goto LABEL_76;
      }
LABEL_77:
      uint64_t v93 = v89 + 1;
      if (v89 + 1 >= v88) {
        break;
      }
      unint64_t v94 = *(void *)(v84 + 8 * v93);
      if (!v94)
      {
        uint64_t v93 = v89 + 2;
        if (v89 + 2 >= v88) {
          break;
        }
        unint64_t v94 = *(void *)(v84 + 8 * v93);
        if (!v94)
        {
          uint64_t v93 = v89 + 3;
          if (v89 + 3 >= v88) {
            break;
          }
          unint64_t v94 = *(void *)(v84 + 8 * v93);
          if (!v94)
          {
            uint64_t v93 = v89 + 4;
            if (v89 + 4 >= v88) {
              break;
            }
            unint64_t v94 = *(void *)(v84 + 8 * v93);
            if (!v94)
            {
              uint64_t v93 = v89 + 5;
              if (v89 + 5 >= v88) {
                break;
              }
              unint64_t v94 = *(void *)(v84 + 8 * v93);
              if (!v94)
              {
                uint64_t v93 = v89 + 6;
                if (v89 + 6 >= v88) {
                  break;
                }
                unint64_t v94 = *(void *)(v84 + 8 * v93);
                if (!v94)
                {
                  while (v133 != v89)
                  {
                    unint64_t v94 = v132[v89++];
                    if (v94)
                    {
                      uint64_t v93 = v89 + 6;
                      goto LABEL_92;
                    }
                  }
                  break;
                }
              }
            }
          }
        }
      }
LABEL_92:
      unint64_t v87 = (v94 - 1) & v94;
      unint64_t v92 = __clz(__rbit64(v94)) + (v93 << 6);
      uint64_t v89 = v93;
    }
    swift_release();
    uint64_t v108 = v113;
    uint64_t v107 = (uint64_t)v112;
    uint64_t v109 = v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v112, 1, 1, v117);
LABEL_99:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    BOOL v110 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v107, 1, v109) != 1;
    uint64_t result = sub_1B6873658(v107, &qword_1E9DD1658, (uint64_t (*)(uint64_t))sub_1B6873628);
    v121[26] = v110;
  }
  else
  {
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    v3[26] = 1;
  }
  return result;
}

uint64_t sub_1B6857F20(unint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (v3)
  {
    int v4 = a1;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v7 = HIDWORD(a1);
    uint64_t v8 = (char *)v2 + 44;
    while (1)
    {
      uint64_t v9 = v6 + 1;
      if (*(_DWORD *)&v8[v5 - 4] == a1 && *(_DWORD *)&v8[v5] == HIDWORD(a1)) {
        break;
      }
      v5 += 40;
      ++v6;
      if (v3 == v9)
      {
        uint64_t v6 = *(void *)(*v1 + 16);
        goto LABEL_11;
      }
    }
    if (v3 - 1 != v6)
    {
      uint64_t v12 = v5 + 72;
      uint64_t v3 = v6 + 1;
      unint64_t v25 = HIDWORD(a1);
      uint64_t v26 = v1;
      do
      {
        int v15 = *(_DWORD *)((char *)v2 + v12 + 8);
        int v16 = *(_DWORD *)((char *)v2 + v12 + 12);
        if (v15 != v4 || v16 != v7)
        {
          if (v3 != v6)
          {
            uint64_t v18 = (uint64_t)&v2[5 * v6 + 4];
            uint64_t v19 = *(void *)v18;
            uint64_t v20 = *(void *)(v18 + 8);
            uint64_t v22 = *(void *)(v18 + 16);
            uint64_t v21 = *(void *)(v18 + 24);
            char v32 = *(unsigned char *)(v18 + 33);
            char v33 = *(unsigned char *)(v18 + 32);
            char v31 = *(unsigned char *)(v18 + 34);
            uint64_t v23 = *(void *)((char *)v2 + v12);
            uint64_t v24 = *(void *)((char *)v2 + v12 + 24);
            char v28 = *((unsigned char *)v2 + v12 + 33);
            char v29 = *((unsigned char *)v2 + v12 + 32);
            char v27 = *((unsigned char *)v2 + v12 + 34);
            uint64_t v30 = *(void *)((char *)v2 + v12 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v2 = sub_1B6C16798(v2);
            }
            uint64_t v13 = &v2[5 * v6];
            v13[4] = v23;
            *((_DWORD *)v13 + 10) = v15;
            *((_DWORD *)v13 + 11) = v16;
            v13[6] = v30;
            v13[7] = v24;
            *((unsigned char *)v13 + 64) = v29;
            *((unsigned char *)v13 + 65) = v28;
            *((unsigned char *)v13 + 66) = v27;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v14 = (char *)v2 + v12;
            *(void *)uint64_t v14 = v19;
            *((void *)v14 + 1) = v20;
            *((void *)v14 + 2) = v22;
            *((void *)v14 + 3) = v21;
            v14[32] = v33;
            v14[33] = v32;
            v14[34] = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LODWORD(v7) = v25;
            void *v26 = v2;
          }
          ++v6;
        }
        ++v3;
        v12 += 40;
      }
      while (v3 != v2[2]);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
LABEL_11:

  return sub_1B68E9F70(v6, v3);
}

uint64_t sub_1B6858150(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B62B2CE0(v8, v7);
    if (v11)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v10);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      swift_retain();
      swift_bridgeObjectRelease();
      if (*(void *)(v14 + 216))
      {
        uint64_t v15 = *(void *)(v14 + 216);
      }
      else
      {
        uint64_t v15 = v14;
        swift_retain();
      }
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v13;
      uint64_t v19 = *(void *)(v15 + 16);
      uint64_t v18 = *(void *)(v15 + 24);
      uint64_t v20 = *(void *)(v15 + 48);
      char v21 = *(unsigned char *)(v15 + 56);
      __int16 v22 = *(_WORD *)(v15 + 58);
      swift_retain();
      swift_bridgeObjectRetain();
      long long v30 = *(_OWORD *)(v15 + 32);
      swift_retain();
      swift_release();
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = v18;
      *(_OWORD *)(v17 + 40) = v30;
      *(void *)(v17 + 56) = v20;
      *(unsigned char *)(v17 + 64) = v21;
      *(_WORD *)(v17 + 66) = v22;
      uint64_t v23 = v17 | 0x3000000000000000;
      uint64_t v24 = *a6;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a6 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v24 = sub_1B68C0FD8(0, v24[2] + 1, 1, v24);
        *a6 = v24;
      }
      unint64_t v27 = v24[2];
      unint64_t v26 = v24[3];
      if (v27 >= v26 >> 1) {
        uint64_t v24 = sub_1B68C0FD8(v26 > 1, v27 + 1, 1, v24);
      }
      v24[2] = v27 + 1;
      char v28 = &v24[4 * v27];
      v28[4] = v23;
      *((unsigned char *)v28 + 40) = 3;
      v28[6] = 0;
      *((unsigned char *)v28 + 56) = 1;
      *a6 = v24;
      return swift_release();
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v31[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E314D8();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v16 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v31[0] = 0;
  swift_retain();
  sub_1B6B33E34(v16, v31, 0, 0xE000000000000000);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B68584F4(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1B62B2CE0(v9, v8);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(a3 + 56) + 16 * v11 + 8);
      swift_retain();
      swift_bridgeObjectRelease();
      if (*(void *)(v13 + 216))
      {
        uint64_t v14 = *(void *)(v13 + 216);
      }
      else
      {
        swift_retain();
        uint64_t v14 = v13;
      }
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v14 + 24);
      uint64_t v18 = *(void *)(v14 + 48);
      char v19 = *(unsigned char *)(v14 + 56);
      __int16 v20 = *(_WORD *)(v14 + 58);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      long long v28 = *(_OWORD *)(v14 + 32);
      swift_retain();
      swift_release();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v17;
      *(void *)(v21 + 24) = v16;
      *(_OWORD *)(v21 + 32) = v28;
      *(void *)(v21 + 48) = v18;
      *(unsigned char *)(v21 + 56) = v19;
      *(_WORD *)(v21 + 58) = v20;
      *(unsigned char *)(v21 + 60) = 5;
      swift_release();
      __int16 v22 = *a6;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a6 = v22;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        __int16 v22 = sub_1B68C0FD8(0, v22[2] + 1, 1, v22);
        *a6 = v22;
      }
      unint64_t v25 = v22[2];
      unint64_t v24 = v22[3];
      if (v25 >= v24 >> 1) {
        __int16 v22 = sub_1B68C0FD8(v24 > 1, v25 + 1, 1, v22);
      }
      v22[2] = v25 + 1;
      unint64_t v26 = &v22[4 * v25];
      v26[4] = v21 | 0x9000000000000000;
      *((unsigned char *)v26 + 40) = 3;
      v26[6] = 0;
      *((unsigned char *)v26 + 56) = 1;
      *a6 = v22;
      return swift_release();
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v29[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  char v30 = a2;
  sub_1B6E32B18();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E314D8();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v15 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v29[0] = 0;
  swift_retain();
  sub_1B6B33E34(v15, v29, 0, 0xE000000000000000);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t type metadata accessor for GraphAuthoringSystem()
{
  return self;
}

uint64_t sub_1B68588C4(uint64_t a1)
{
  return sub_1B68740E0(a1, 1, 0);
}

uint64_t sub_1B68588D0(uint64_t result)
{
  if (*(unsigned char *)(result + 48) == 1) {
    return sub_1B6872640(result, 1);
  }
  return result;
}

const char *sub_1B68588E8()
{
  return "GraphAuthoringSystem";
}

uint64_t sub_1B6858900(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_1B6861474((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1B685895C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2)
  {
    uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_28;
  }
  uint64_t v26 = v0;
  uint64_t v27 = *(void *)v0 + 56;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = 0;
  uint64_t v5 = (char *)v3;
  do
  {
    uint64_t v6 = *(void *)(v27 + 40 * v4);
    int64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = v3;
      char v29 = (void *)v3;
      swift_bridgeObjectRetain();
      sub_1B62E1D20(0, v7, 0);
      uint64_t v9 = (void *)v3;
      unint64_t v10 = *(void *)(v3 + 16);
      uint64_t v11 = 32;
      do
      {
        uint64_t v12 = *(void *)(v6 + v11);
        char v29 = v9;
        unint64_t v13 = v9[3];
        if (v10 >= v13 >> 1)
        {
          sub_1B62E1D20(v13 > 1, v10 + 1, 1);
          uint64_t v9 = v29;
        }
        v9[2] = v10 + 1;
        v9[v10 + 4] = v12;
        v11 += 56;
        ++v10;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      uint64_t v3 = v8;
    }
    else
    {
      uint64_t v9 = (void *)v3;
    }
    uint64_t v14 = v9[2];
    uint64_t v15 = *((void *)v5 + 2);
    uint64_t v16 = v15 + v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v16 <= *((void *)v5 + 3) >> 1)
    {
      if (!v9[2]) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v15 <= v16) {
        uint64_t v18 = v15 + v14;
      }
      else {
        uint64_t v18 = v15;
      }
      uint64_t v5 = sub_1B633F784(isUniquelyReferenced_nonNull_native, v18, 1, v5);
      if (!v9[2]) {
        goto LABEL_3;
      }
    }
    char v19 = &v5[8 * *((void *)v5 + 2) + 32];
    if (v9 + 4 < (void *)&v19[8 * v14] && v19 < (char *)&v9[v14 + 4])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v19, v9 + 4, 8 * v14);
    if (v14) {
      *((void *)v5 + 2) += v14;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    ++v4;
  }
  while (v4 != v2);
  swift_bridgeObjectRelease_n();
  uint64_t v1 = v26;
LABEL_28:
  sub_1B67CB1A4();
  uint64_t v21 = sub_1B6E31EF8();
  char v29 = (void *)v21;
  uint64_t v22 = *((void *)v5 + 2);
  if (v22)
  {
    uint64_t v23 = v5 + 36;
    do
    {
      sub_1B67E9ED4(&v28, *(void *)(v23 - 4));
      v23 += 8;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v24 = (uint64_t)v29;
  }
  else
  {
    uint64_t v24 = v21;
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v24;
  return result;
}

uint64_t sub_1B6858C08()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2)
  {
    uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_29;
  }
  uint64_t v28 = v0;
  uint64_t v4 = *(void *)v0 + 48;
  swift_bridgeObjectRetain_n();
  uint64_t v5 = 0;
  uint64_t v6 = (char *)v3;
  uint64_t v29 = v2;
  do
  {
    uint64_t v7 = *(void *)(v4 + 40 * v5);
    if (v7 && (int64_t v8 = *(void *)(v7 + 16)) != 0)
    {
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      char v31 = (void *)v3;
      swift_bridgeObjectRetain();
      sub_1B62E1D20(0, v8, 0);
      uint64_t v11 = (void *)v3;
      unint64_t v12 = *(void *)(v3 + 16);
      uint64_t v13 = 32;
      do
      {
        uint64_t v14 = *(void *)(v7 + v13);
        char v31 = v11;
        unint64_t v15 = v11[3];
        if (v12 >= v15 >> 1)
        {
          sub_1B62E1D20(v15 > 1, v12 + 1, 1);
          uint64_t v11 = v31;
        }
        void v11[2] = v12 + 1;
        v11[v12 + 4] = v14;
        v13 += 56;
        ++v12;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v3 = v10;
      uint64_t v4 = v9;
      uint64_t v2 = v29;
    }
    else
    {
      uint64_t v11 = (void *)v3;
    }
    uint64_t v16 = v11[2];
    uint64_t v17 = *((void *)v6 + 2);
    uint64_t v18 = v17 + v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v18 <= *((void *)v6 + 3) >> 1)
    {
      if (!v11[2]) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v17 <= v18) {
        uint64_t v20 = v17 + v16;
      }
      else {
        uint64_t v20 = v17;
      }
      uint64_t v6 = sub_1B633F784(isUniquelyReferenced_nonNull_native, v20, 1, v6);
      if (!v11[2]) {
        goto LABEL_3;
      }
    }
    uint64_t v21 = &v6[8 * *((void *)v6 + 2) + 32];
    if (v11 + 4 < (void *)&v21[8 * v16] && v21 < (char *)&v11[v16 + 4])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v21, v11 + 4, 8 * v16);
    if (v16) {
      *((void *)v6 + 2) += v16;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    ++v5;
  }
  while (v5 != v2);
  swift_bridgeObjectRelease_n();
  uint64_t v1 = v28;
LABEL_29:
  sub_1B67CB1A4();
  uint64_t v23 = sub_1B6E31EF8();
  char v31 = (void *)v23;
  uint64_t v24 = *((void *)v6 + 2);
  if (v24)
  {
    unint64_t v25 = v6 + 36;
    do
    {
      sub_1B67E9ED4(&v30, *(void *)(v25 - 4));
      v25 += 8;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    uint64_t v26 = (uint64_t)v31;
  }
  else
  {
    uint64_t v26 = v23;
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v26;
  return result;
}

uint64_t sub_1B6858EC4@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = *a1;
  int v3 = a1[1];
  int v6 = a1[2];
  int v5 = a1[3];
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  char v9 = *((unsigned char *)a1 + 32);
  if (v8)
  {
    uint64_t v38 = *(void *)(v8 + 16);
    if (v38)
    {
      int v28 = *a1;
      int v29 = a1[1];
      int v30 = a1[2];
      int v31 = a1[3];
      char v32 = *((unsigned char *)a1 + 32);
      uint64_t v34 = *((void *)a1 + 3);
      uint64_t v35 = a3;
      uint64_t v37 = v8 + 32;
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v33 = *((void *)a1 + 2);
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      uint64_t v36 = v11;
      do
      {
        if (v11)
        {
          uint64_t v13 = (int *)(v37 + 56 * v12);
          int v14 = *v13;
          int v15 = v13[1];
          uint64_t v16 = *((void *)v13 + 1);
          uint64_t v17 = *((void *)v13 + 5);
          uint64_t v42 = *((void *)v13 + 4);
          uint64_t v43 = *((void *)v13 + 3);
          uint64_t v39 = v12;
          uint64_t v18 = *((void *)v13 + 6);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          char v19 = (void *)(a2 + 40);
          uint64_t v41 = v16;
          while (1)
          {
            if (*((_DWORD *)v19 - 2) == v14 && *((_DWORD *)v19 - 1) == v15 && *v19 == v16 && v19[2] == v43)
            {
              uint64_t v22 = v19[5];
              BOOL v23 = v19[3] == v42 && v19[4] == v17;
              if (v23 || (uint64_t v16 = v41, (sub_1B6E334B8() & 1) != 0))
              {
                if (v22)
                {
                  if (v18)
                  {
                    sub_1B6E32768();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    char v40 = sub_1B6E31708();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_release();
                    uint64_t v16 = v41;
                    if (v40)
                    {
LABEL_28:
                      uint64_t v8 = v33;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_release();
                      swift_bridgeObjectRelease();
                      char v24 = 0;
                      goto LABEL_32;
                    }
                  }
                }
                else if (!v18)
                {
                  goto LABEL_28;
                }
              }
            }
            v19 += 7;
            if (!--v11)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v11 = v36;
              uint64_t v12 = v39;
              break;
            }
          }
        }
        ++v12;
      }
      while (v12 != v38);
      uint64_t v8 = v33;
      swift_bridgeObjectRelease();
      char v24 = 1;
LABEL_32:
      uint64_t v7 = v34;
      a3 = v35;
      int v5 = v31;
      char v9 = v32;
      int v3 = v29;
      int v6 = v30;
      int v4 = v28;
    }
    else
    {
      char v24 = 1;
    }
    *(_DWORD *)a3 = v4;
    *(_DWORD *)(a3 + 4) = v3;
    *(_DWORD *)(a3 + 8) = v6;
    *(_DWORD *)(a3 + 12) = v5;
    *(void *)(a3 + 16) = v8;
    *(void *)(a3 + 24) = v7;
    *(unsigned char *)(a3 + 32) = v9;
    *(unsigned char *)(a3 + 33) = v24;
    *(unsigned char *)(a3 + 34) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    char v25 = *((unsigned char *)a1 + 34);
    char v26 = *((unsigned char *)a1 + 33);
    *(_DWORD *)a3 = v4;
    *(_DWORD *)(a3 + 4) = v3;
    *(_DWORD *)(a3 + 8) = v6;
    *(_DWORD *)(a3 + 12) = v5;
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = v7;
    *(unsigned char *)(a3 + 32) = v9;
    *(unsigned char *)(a3 + 33) = v26;
    *(unsigned char *)(a3 + 34) = v25;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B68591A4(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B6861588(v5, a1, a2);
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_unknownObjectRelease();
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_1B6859220()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *assignWithCopy for GraphScriptGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for GraphScriptGroup()
{
  return &type metadata for GraphScriptGroup;
}

uint64_t assignWithCopy for GraphEntityComponentPropertyReferences(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for GraphEntityComponentPropertyReferences()
{
  return &type metadata for GraphEntityComponentPropertyReferences;
}

ValueMetadata *type metadata accessor for GraphDebuggingComponent()
{
  return &type metadata for GraphDebuggingComponent;
}

uint64_t sub_1B68593E8(unsigned __int8 *a1, char *a2)
{
  return sub_1B6B47AE0(*a1, *a2);
}

uint64_t sub_1B68593F4()
{
  return sub_1B69EB088();
}

uint64_t sub_1B6859400()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68594FC()
{
  return sub_1B69EB088();
}

void sub_1B6859504(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1852399949;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6E77617053;
      goto LABEL_3;
    case 2:
      *a1 = 1953066569;
      a1[1] = 0xE400000000000000;
      return;
    case 3:
      unint64_t v4 = 0xEC00000074696E49;
      goto LABEL_8;
    case 4:
      *a1 = 0x657461647055;
      a1[1] = 0xE600000000000000;
      return;
    case 5:
      unint64_t v4 = 0xEE00657461647055;
LABEL_8:
      *a1 = 0x656C636974726150;
      a1[1] = v4;
      break;
    case 6:
      *a1 = 0x7265646E6552;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B68595E0()
{
  return sub_1B6E31AF8();
}

void sub_1B6859630(void *a1@<X8>)
{
  *a1 = &unk_1F0F804F0;
}

uint64_t sub_1B6859640()
{
  uint64_t v1 = *v0;
  unsigned __int8 v2 = *((unsigned char *)v0 + 4);
  sub_1B6E33918();
  sub_1B6391394((uint64_t)v4, v1 | ((unint64_t)v2 << 32));
  return sub_1B6E33988();
}

uint64_t sub_1B6859694(uint64_t a1)
{
  return sub_1B6391394(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

uint64_t sub_1B68596B4(void *a1)
{
  char v3 = *(unsigned char *)(v1 + 4);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v5, v6);
  sub_1B6E332A8();
  if (!v2 && (v3 & 1) == 0)
  {
    sub_1B62C550C((uint64_t)v5, v6);
    sub_1B6E33298();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
}

BOOL sub_1B68597AC(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)a1;
  float v3 = *(float *)a2;
  if (*(unsigned char *)(a1 + 4) != 1)
  {
    if ((*(unsigned char *)(a2 + 4) & 1) == 0) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2 == 0.0)
  {
    BOOL v4 = LODWORD(v3) == 0;
  }
  else
  {
    if (LODWORD(v2) != 1)
    {
      if (LODWORD(v3) > 1) {
        int v7 = *(unsigned __int8 *)(a2 + 4);
      }
      else {
        int v7 = 0;
      }
      return v7 == 1;
    }
    BOOL v4 = LODWORD(v3) == 1;
  }
  if (v4) {
    char v6 = *(unsigned char *)(a2 + 4);
  }
  else {
    char v6 = 0;
  }
  return (v6 & 1) != 0;
}

uint64_t sub_1B6859820(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v5, v6);
  sub_1B6E33268();
  if (!v2)
  {
    sub_1B629C37C(v1 + 16, (uint64_t)v7);
    sub_1B629C37C((uint64_t)v7, (uint64_t)v4);
    sub_1B62C550C((uint64_t)v5, v6);
    sub_1B6646C2C();
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
}

uint64_t sub_1B6859918(void *a1)
{
  return sub_1B6859820(a1);
}

uint64_t sub_1B685995C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_1B6861268(v5, v7) & 1;
}

uint64_t sub_1B68599B8(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB4AD8(*a1, *a2);
}

uint64_t sub_1B68599C4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6859AB4()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6859B8C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6859C78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68638A8();
  *a1 = result;
  return result;
}

void sub_1B6859CA8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEE00617461447265;
  uint64_t v3 = 0x7355736772416E69;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x736772416E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x67724174754F6E69;
      a1[1] = 0xE900000000000073;
      break;
    case 3:
      *a1 = 0x6E49747069726373;
      a1[1] = 0xEB00000000786564;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B6859D68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B68638A8();
  *a1 = result;
  return result;
}

uint64_t sub_1B6859D90(uint64_t a1)
{
  unint64_t v2 = sub_1B63B20D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6859DCC(uint64_t a1)
{
  unint64_t v2 = sub_1B63B20D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6859E08(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62BAC28(0, &qword_1E9DD1790, (uint64_t (*)(void))sub_1B63B20D8, (uint64_t)&type metadata for GraphScriptingConfig.ScriptInfo.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B63B20D8();
  sub_1B6E33A88();
  uint64_t v14 = v3[2];
  char v13 = 0;
  sub_1B63B9EA0();
  sub_1B62BAC90(&qword_1E9DD1798, (void (*)(uint64_t))sub_1B63B9EA0);
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v14 = v3[3];
    char v13 = 1;
    sub_1B62BAE70(0, &qword_1E9DD17A0, &qword_1EB980260, (uint64_t)&type metadata for GraphScriptingConfig.ScriptArg, MEMORY[0x1E4FBB320]);
    sub_1B687BA84();
    sub_1B6E32FA8();
    uint64_t v14 = v3[4];
    char v13 = 2;
    sub_1B6E32FA8();
    type metadata accessor for GraphScriptingConfig.ScriptInfo();
    LOBYTE(v14) = 3;
    sub_1B62B5820();
    sub_1B687BC08();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B685A0C8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (uint64_t *)((char *)&v22 - v9);
  char v11 = *(unsigned char *)(v1 + 40);
  sub_1B6366C08(a1, (uint64_t)&v22 - v9, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  if (v11) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1B685A308(v10);
  }
  sub_1B62BFF14((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  *(unsigned char *)(v1 + 40) = v12 & 1;
  uint64_t v14 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v14;
  *(void *)(v1 + 8) = v13;
  uint64_t v15 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v15;
  uint64_t v16 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v16;
  uint64_t v17 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v17;
  int v19 = *(unsigned __int8 *)(a1 + 41);
  if (v19 == 1)
  {
    *(unsigned char *)(v1 + 41) = 1;
  }
  else
  {
    if ((v12 & 1) == 0 || v17 && *(void *)(v17 + 16))
    {
      *(unsigned char *)(v1 + 41) = 0;
    }
    else
    {
      int v20 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 48) + 8);
      sub_1B6366C08(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      if (v20 != 1)
      {
        uint64_t result = sub_1B62BFF14((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        LOBYTE(v19) = 1;
        *(unsigned char *)(v1 + 41) = 1;
        goto LABEL_11;
      }
      uint64_t v21 = *(void *)&v6[*(int *)(v3 + 44)];
      uint64_t result = sub_1B62BFF14((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      *(unsigned char *)(v1 + 41) = v21 != 0;
      if (v21)
      {
        LOBYTE(v19) = 1;
        goto LABEL_11;
      }
    }
    LOBYTE(v19) = *(unsigned char *)(v1 + 40);
  }
LABEL_11:
  *(unsigned char *)(v1 + 40) = v19;
  return result;
}

uint64_t sub_1B685A308(void *a1)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = a1[1];
  if (v3)
  {
    if (!v4) {
      return 1;
    }
    BOOL v5 = *v1 == *a1 && v3 == v4;
    if (!v5 && (sub_1B6E334B8() & 1) == 0) {
      return 1;
    }
  }
  else if (v4)
  {
    return 1;
  }
  uint64_t v6 = a1[3];
  if (v1[3])
  {
    if (!v6) {
      return 1;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_1B6919878(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 1;
    }
  }
  else if (v6)
  {
    return 1;
  }
  uint64_t v9 = a1[4];
  if (!v1[4])
  {
    if (!v9) {
      goto LABEL_20;
    }
    return 1;
  }
  if (!v9) {
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  char v11 = sub_1B6919878(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 1;
  }
LABEL_20:
  uint64_t v12 = v1[2];
  uint64_t v13 = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1B685A654(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0) {
    return 1;
  }
  uint64_t v15 = v12 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v12 + 64);
  int64_t v19 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v26 = v25 | (v20 << 6);
      goto LABEL_46;
    }
    uint64_t v27 = v20 + 1;
    if (v20 + 1 >= v19) {
      goto LABEL_55;
    }
    unint64_t v28 = *(void *)(v15 + 8 * v27);
    if (!v28)
    {
      uint64_t v27 = v20 + 2;
      if (v20 + 2 >= v19) {
        goto LABEL_55;
      }
      unint64_t v28 = *(void *)(v15 + 8 * v27);
      if (!v28)
      {
        uint64_t v27 = v20 + 3;
        if (v20 + 3 >= v19) {
          goto LABEL_55;
        }
        unint64_t v28 = *(void *)(v15 + 8 * v27);
        if (!v28)
        {
          uint64_t v27 = v20 + 4;
          if (v20 + 4 >= v19) {
            goto LABEL_55;
          }
          unint64_t v28 = *(void *)(v15 + 8 * v27);
          if (!v28)
          {
            uint64_t v27 = v20 + 5;
            if (v20 + 5 >= v19) {
              goto LABEL_55;
            }
            unint64_t v28 = *(void *)(v15 + 8 * v27);
            if (!v28)
            {
              uint64_t v27 = v20 + 6;
              if (v20 + 6 >= v19) {
                goto LABEL_55;
              }
              unint64_t v28 = *(void *)(v15 + 8 * v27);
              if (!v28) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_45:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    uint64_t v20 = v27;
LABEL_46:
    int v29 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v26);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(v12 + 16);
    swift_bridgeObjectRetain();
    if (v32)
    {
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(v31, v30);
      if (v33) {
        swift_retain();
      }
      swift_bridgeObjectRelease();
      if (!*(void *)(v13 + 16)) {
        goto LABEL_26;
      }
    }
    else if (!*(void *)(v13 + 16))
    {
      goto LABEL_26;
    }
    uint64_t v34 = sub_1B62B2CE0(v31, v30);
    if (v35)
    {
      uint64_t v23 = *(void *)(*(void *)(v13 + 56) + 8 * v34);
      swift_retain();
      goto LABEL_27;
    }
LABEL_26:
    uint64_t v23 = 0;
LABEL_27:
    swift_bridgeObjectRelease();
    BOOL v24 = sub_1B6A3BE84(v23);
    swift_release();
    swift_release();
    if (!v24)
    {
      uint64_t v21 = 1;
      goto LABEL_56;
    }
  }
  while (v19 - 7 != v20)
  {
    unint64_t v28 = *(void *)(v12 + 120 + 8 * v20++);
    if (v28)
    {
      uint64_t v27 = v20 + 6;
      goto LABEL_45;
    }
  }
LABEL_55:
  uint64_t v21 = 0;
LABEL_56:
  swift_release();
  return v21;
}

uint64_t sub_1B685A654(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = a1 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = v9;
    if (!v7) {
      break;
    }
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v9 << 6);
    if (!*(void *)(a2 + 16)) {
      goto LABEL_27;
    }
LABEL_26:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    sub_1B62B2CE0(v17, v16);
    LOBYTE(v17) = v18;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
LABEL_27:
      uint64_t v19 = 0;
      goto LABEL_31;
    }
  }
  ++v9;
  if (v10 + 1 >= v8) {
    goto LABEL_30;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v9);
  if (v13) {
    goto LABEL_25;
  }
  uint64_t v9 = v10 + 2;
  if (v10 + 2 >= v8) {
    goto LABEL_30;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v9);
  if (v13) {
    goto LABEL_25;
  }
  uint64_t v9 = v10 + 3;
  if (v10 + 3 >= v8) {
    goto LABEL_30;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v9);
  if (v13) {
    goto LABEL_25;
  }
  uint64_t v9 = v10 + 4;
  if (v10 + 4 >= v8) {
    goto LABEL_30;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v9);
  if (v13) {
    goto LABEL_25;
  }
  uint64_t v9 = v10 + 5;
  if (v10 + 5 >= v8) {
    goto LABEL_30;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v9);
  if (v13) {
    goto LABEL_25;
  }
  uint64_t v9 = v10 + 6;
  if (v10 + 6 >= v8) {
    goto LABEL_30;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v9);
  if (v13)
  {
LABEL_25:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v12 = __clz(__rbit64(v13)) + (v9 << 6);
    if (!*(void *)(a2 + 16)) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  uint64_t v14 = v10;
  while (v8 - 7 != v14)
  {
    unint64_t v13 = *(void *)(a1 + 120 + 8 * v14++);
    if (v13)
    {
      uint64_t v9 = v14 + 6;
      goto LABEL_25;
    }
  }
LABEL_30:
  uint64_t v19 = 1;
LABEL_31:
  sub_1B62BB588();
  return v19;
}

uint64_t sub_1B685A85C(uint64_t a1, uint64_t a2)
{
  sub_1B62B5820();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = sub_1B6E31118();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v42 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v16 = v15[11];
  uint64_t v17 = *(void *)(v2 + v16);
  uint64_t v45 = v12;
  if (v17)
  {
    uint64_t v43 = v11;
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v19 = *(void *)(v17 + 24);
    swift_retain();
    unint64_t v20 = sub_1B6B1BE94(v19, 0, ObjectType, a2);
    if (v21)
    {
      swift_release_n();
      uint64_t v24 = 0;
    }
    else
    {
      int v22 = v20;
      unint64_t v41 = HIDWORD(v20);
      uint64_t v23 = *(void *)(v17 + 16);
      swift_unownedRetainStrong();
      type metadata accessor for VFXAttribute();
      uint64_t v24 = swift_allocObject();
      long long v40 = *(_OWORD *)(v17 + 32);
      *(void *)(v24 + 16) = v23;
      swift_unownedRetain();
      swift_release();
      int v25 = v41;
      *(_DWORD *)(v24 + 24) = v22;
      *(_DWORD *)(v24 + 28) = v25;
      *(_OWORD *)(v24 + 32) = v40;
      swift_release_n();
    }
    uint64_t v11 = v43;
  }
  else
  {
    uint64_t v24 = 0;
  }
  *(void *)(v2 + v16) = v24;
  uint64_t v26 = v2 + v15[12];
  if (*(unsigned char *)(v26 + 8))
  {
    unint64_t v27 = 0;
    char v28 = 1;
  }
  else
  {
    unint64_t v29 = *(void *)v26;
    uint64_t v30 = swift_getObjectType();
    unint64_t v31 = sub_1B6B1BE94(v29, 0, v30, a2);
    char v28 = v32 & 1;
    if (v32) {
      unint64_t v27 = 0;
    }
    else {
      unint64_t v27 = v31;
    }
  }
  *(void *)uint64_t v26 = v27;
  *(unsigned char *)(v26 + 8) = v28 & 1;
  *(unsigned char *)(v2 + 40) = 1;
  uint64_t v33 = swift_getObjectType();
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  uint64_t result = v34(v33, a2);
  if (result)
  {
    uint64_t v36 = v2 + v15[10];
    sub_1B6366C08(v36, (uint64_t)v10, (uint64_t (*)(void))sub_1B62B5820);
    uint64_t v37 = v45;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v10, 1, v11) == 1)
    {
      return sub_1B62BFF14((uint64_t)v10, (uint64_t (*)(void))sub_1B62B5820);
    }
    else
    {
      uint64_t v38 = v42;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v42, v10, v11);
      if (v34(v33, a2))
      {
        uint64_t v39 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, unint64_t, uint64_t (*)(), void, uint64_t, uint64_t))(a2 + 24))(v38, 0x6E49747069726353, 0xEB00000000786564, sub_1B6C117A8, 0, v33, a2);
      }
      else
      {
        uint64_t v39 = (uint64_t)v44;
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v44, v38, v11);
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v11);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v11);
      return sub_1B63BDCC4(v39, v36);
    }
  }
  return result;
}

uint64_t sub_1B685AC64(void *a1)
{
  return sub_1B6859E08(a1);
}

uint64_t sub_1B685AC7C(unint64_t a1)
{
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = &v26[-v9];
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = HIDWORD(a1) & 1;
  if (*(void *)(v11 + 16))
  {
    uint64_t v13 = a1;
    unint64_t v14 = sub_1B69FAA7C(a1 | (unint64_t)(v12 << 32));
    if (v15)
    {
      unint64_t v16 = v14;
      uint64_t v17 = *(void *)(v11 + 56);
      uint64_t v18 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
      uint64_t v19 = *(void *)(v18 - 8);
      sub_1B6366C08(v17 + *(void *)(v19 + 72) * v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
      return sub_1B62BFF14((uint64_t)v10, (uint64_t (*)(void))sub_1B63B2040);
    }
  }
  else
  {
    uint64_t v13 = a1;
  }
  char v21 = (int *)type metadata accessor for GraphScriptingConfig.ScriptInfo();
  int v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, int *))(*((void *)v21 - 1) + 56);
  v22(v10, 1, 1, v21);
  sub_1B62BFF14((uint64_t)v10, (uint64_t (*)(void))sub_1B63B2040);
  *((void *)v6 + 2) = sub_1B639A2D4(MEMORY[0x1E4FBC860]);
  *((_WORD *)v6 + 20) = 1;
  uint64_t v23 = &v6[v21[10]];
  uint64_t v24 = sub_1B6E31118();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(void *)&v6[v21[11]] = 0;
  int v25 = &v6[v21[12]];
  *(void *)int v25 = 0;
  v25[8] = 1;
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 3) = 0;
  *((void *)v6 + 4) = 0;
  v22(v6, 0, 1, v21);
  return sub_1B6CE10FC((uint64_t)v6, v13 | (v12 << 32));
}

uint64_t sub_1B685AF18()
{
  uint64_t v1 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v38 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v37 = (uint64_t)&v29 - v6;
  uint64_t v29 = v0;
  uint64_t v7 = *(void *)(v0 + 16);
  sub_1B6396740(0, (unint64_t *)&qword_1EB980700, MEMORY[0x1E4FBBD58]);
  uint64_t v8 = sub_1B6E32C28();
  uint64_t v9 = 0;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v32 = v7 + 64;
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  uint64_t v39 = v8;
  uint64_t v35 = v8 + 64;
  uint64_t v36 = v7;
  int64_t v33 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v30 = v7 + 112;
  int64_t v31 = v33 - 6;
  uint64_t v14 = (uint64_t)v34;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      uint64_t v40 = v9;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    uint64_t v25 = v9 + 1;
    if (v9 + 1 >= v33) {
      goto LABEL_21;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    if (!v26)
    {
      uint64_t v25 = v9 + 2;
      if (v9 + 2 >= v33) {
        goto LABEL_21;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v25);
      if (!v26)
      {
        uint64_t v25 = v9 + 3;
        if (v9 + 3 >= v33) {
          goto LABEL_21;
        }
        unint64_t v26 = *(void *)(v32 + 8 * v25);
        if (!v26)
        {
          uint64_t v25 = v9 + 4;
          if (v9 + 4 >= v33) {
            goto LABEL_21;
          }
          unint64_t v26 = *(void *)(v32 + 8 * v25);
          if (!v26)
          {
            uint64_t v25 = v9 + 5;
            if (v9 + 5 >= v33) {
              goto LABEL_21;
            }
            unint64_t v26 = *(void *)(v32 + 8 * v25);
            if (!v26) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v16 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v40 = v25;
LABEL_5:
    uint64_t v17 = v37;
    uint64_t v18 = *(void *)(v36 + 56);
    uint64_t v19 = *(void *)(v36 + 48) + 8 * v16;
    int v20 = *(_DWORD *)v19;
    int v41 = *(unsigned __int8 *)(v19 + 4);
    unint64_t v21 = *(void *)(v38 + 72) * v16;
    sub_1B6366C08(v18 + v21, v37, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B6366C08(v17, v14, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    uint64_t v22 = sub_1B68780F0(*(void *)(v14 + 16), qword_1F0F803E0);
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    *(void *)(v14 + 16) = v22;
    sub_1B62BFF14(v17, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(void *)(v35 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t v23 = v39;
    uint64_t v24 = *(void *)(v39 + 48) + 8 * v16;
    *(_DWORD *)uint64_t v24 = v20;
    *(unsigned char *)(v24 + 4) = v41;
    sub_1B68737A8(v14, *(void *)(v23 + 56) + v21, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    ++*(void *)(v23 + 16);
    uint64_t v9 = v40;
  }
  while (v31 != v9)
  {
    unint64_t v26 = *(void *)(v30 + 8 * v9++);
    if (v26)
    {
      uint64_t v25 = v9 + 5;
      goto LABEL_20;
    }
  }
LABEL_21:
  uint64_t v27 = v29;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v27 + 16) = v39;
  return result;
}

uint64_t sub_1B685B2A0()
{
  sub_1B62B5820();
  MEMORY[0x1F4188790](v1 - 8, v2);
  char v49 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4, v5);
  int64_t v58 = (char *)&v46 - v6;
  uint64_t v7 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v55 = (uint64_t)&v46 - v13;
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v46 = v0;
  uint64_t v18 = *(void *)(v0 + 16);
  sub_1B6396740(0, (unint64_t *)&qword_1EB980700, MEMORY[0x1E4FBBD58]);
  uint64_t v19 = sub_1B6E32C28();
  uint64_t v20 = 0;
  uint64_t v21 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v22 = *(void *)(v18 + 64);
  uint64_t v50 = v18 + 64;
  uint64_t v23 = -1;
  if (v21 < 64) {
    uint64_t v23 = ~(-1 << v21);
  }
  unint64_t v24 = v23 & v22;
  uint64_t v59 = v19;
  int64_t v51 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v52 = v19 + 64;
  uint64_t v53 = v18;
  unint64_t v54 = v17;
  uint64_t v47 = v18 + 112;
  int64_t v48 = v51 - 6;
  uint64_t v25 = (uint64_t)v58;
  while (1)
  {
    if (v24)
    {
      unint64_t v29 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      uint64_t v60 = v20;
      unint64_t v30 = v29 | (v20 << 6);
      goto LABEL_21;
    }
    uint64_t v31 = v20 + 1;
    if (v20 + 1 >= v51) {
      goto LABEL_23;
    }
    unint64_t v32 = *(void *)(v50 + 8 * v31);
    if (!v32)
    {
      uint64_t v31 = v20 + 2;
      if (v20 + 2 >= v51) {
        goto LABEL_23;
      }
      unint64_t v32 = *(void *)(v50 + 8 * v31);
      if (!v32)
      {
        uint64_t v31 = v20 + 3;
        if (v20 + 3 >= v51) {
          goto LABEL_23;
        }
        unint64_t v32 = *(void *)(v50 + 8 * v31);
        if (!v32)
        {
          uint64_t v31 = v20 + 4;
          if (v20 + 4 >= v51) {
            goto LABEL_23;
          }
          unint64_t v32 = *(void *)(v50 + 8 * v31);
          if (!v32)
          {
            uint64_t v31 = v20 + 5;
            if (v20 + 5 >= v51) {
              goto LABEL_23;
            }
            unint64_t v32 = *(void *)(v50 + 8 * v31);
            if (!v32) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v24 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v31 << 6);
    uint64_t v60 = v31;
LABEL_21:
    uint64_t v33 = 8 * v30;
    uint64_t v34 = *(void *)(v53 + 56);
    uint64_t v35 = *(void *)(v53 + 48) + 8 * v30;
    int v36 = *(_DWORD *)v35;
    LODWORD(v35) = *(unsigned __int8 *)(v35 + 4);
    int v61 = v36;
    int v62 = v35;
    unint64_t v37 = *(void *)(v56 + 72) * v30;
    sub_1B6366C08(v34 + v37, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B6366C08((uint64_t)v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    uint64_t v38 = (uint64_t)v10;
    uint64_t v39 = (uint64_t)&v10[*(int *)(v57 + 40)];
    sub_1B6366C08(v39, v25, (uint64_t (*)(void))sub_1B62B5820);
    uint64_t v40 = sub_1B6E31118();
    uint64_t v41 = *(void *)(v40 - 8);
    int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v25, 1, v40);
    sub_1B62BFF14(v25, (uint64_t (*)(void))sub_1B62B5820);
    if (v42 != 1)
    {
      uint64_t v43 = (uint64_t)v49;
      sub_1B6E31108();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v40);
      sub_1B63BDCC4(v43, v39);
    }
    uint64_t v10 = (char *)v38;
    uint64_t v26 = v55;
    sub_1B68737A8(v38, v55, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    uint64_t v17 = v54;
    sub_1B62BFF14((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(void *)(v52 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v27 = v59;
    uint64_t v28 = *(void *)(v59 + 48) + v33;
    *(_DWORD *)uint64_t v28 = v61;
    *(unsigned char *)(v28 + 4) = v62;
    sub_1B68737A8(v26, *(void *)(v27 + 56) + v37, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    ++*(void *)(v27 + 16);
    uint64_t v20 = v60;
  }
  while (v48 != v20)
  {
    unint64_t v32 = *(void *)(v47 + 8 * v20++);
    if (v32)
    {
      uint64_t v31 = v20 + 5;
      goto LABEL_20;
    }
  }
LABEL_23:
  uint64_t v44 = v46;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v44 + 16) = v59;
  return result;
}

uint64_t sub_1B685B788()
{
  sub_1B62D85D4(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78130;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62D85D4(0, &qword_1E9DCFBD0, (uint64_t)&type metadata for GraphScriptingConfig.Mode, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v2 = (void *)swift_allocObject();
  v2[4] = sub_1B677C66C;
  v2[5] = KeyPath;
  v2[2] = sub_1B677C674;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = sub_1B6727124(1701080941, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v3;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E493B8 = v0;
  return result;
}

uint64_t sub_1B685B924(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + 8);
  swift_unknownObjectRetain();
  uint64_t v7 = sub_1B6861D40(v6, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 8) = v7;
  uint64_t v8 = *(void *)(v3 + 16);
  swift_unknownObjectRetain();
  uint64_t v9 = sub_1B6861A18(v8, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 16) = v9;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  if (result) {
    char v12 = 1;
  }
  else {
    char v12 = *(unsigned char *)(v3 + 26);
  }
  *(unsigned char *)(v3 + 26) = v12;
  return result;
}

unint64_t sub_1B685BA00(char a1)
{
  unint64_t result = 1701080941;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000023;
      break;
    case 2:
    case 4:
    case 7:
      unint64_t result = 0x65746172656E6567;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x65676175676E616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B685BB28(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB4810(*a1, *a2);
}

uint64_t sub_1B685BB34()
{
  return sub_1B69EB198();
}

uint64_t sub_1B685BB40()
{
  return sub_1B69E9A38();
}

uint64_t sub_1B685BB48()
{
  return sub_1B69EB198();
}

uint64_t sub_1B685BB50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B686385C();
  *a1 = result;
  return result;
}

unint64_t sub_1B685BB80@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B685BA00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B685BBAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B686385C();
  *a1 = result;
  return result;
}

uint64_t sub_1B685BBD4(uint64_t a1)
{
  unint64_t v2 = sub_1B63B212C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B685BC10(uint64_t a1)
{
  unint64_t v2 = sub_1B63B212C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B685BC4C(void *a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1B62BAC28(0, &qword_1E9DD17E0, (uint64_t (*)(void))sub_1B63B212C, (uint64_t)&type metadata for GraphScriptingConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  char v12 = (char *)&v16 - v11;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B63B212C();
  sub_1B6E33A88();
  LOBYTE(v19) = a2;
  char v20 = 0;
  sub_1B687BE14();
  sub_1B6E32FA8();
  if (!v4)
  {
    uint64_t v14 = v17;
    uint64_t v13 = v18;
    LOBYTE(v19) = HIBYTE(a2);
    char v20 = 6;
    sub_1B687BE68();
    sub_1B6E32FA8();
    uint64_t v19 = v14;
    char v20 = 1;
    sub_1B62BB5E4(0, &qword_1EB97E578, (void (*)(void))sub_1B62A2730, (void (*)(void))sub_1B6878CE8);
    sub_1B6878D3C();
    sub_1B6E32FA8();
    uint64_t v19 = v13;
    char v20 = 7;
    sub_1B63B9F9C();
    sub_1B62BAC90(&qword_1E9DD17F8, (void (*)(uint64_t))sub_1B63B9F9C);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1B685BF08(unint64_t a1, void *a2, unint64_t *a3)
{
  uint64_t v4 = v3;
  v156 = a3;
  unint64_t v144 = a1;
  uint64_t v173 = *MEMORY[0x1E4F143B8];
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v145 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148, v10);
  char v12 = (char *)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2[16];
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v137 = v9;
    uint64_t v138 = (uint64_t *)v12;
    uint64_t v161 = *v4;
    v162 = a2;
    uint64_t v15 = *((void *)v4 + 1);
    int64_t v16 = *((void *)v4 + 2);
    v151 = v4;
    v168 = 0;
    unint64_t v169 = 0xE000000000000000;
    v164 = (uint64_t *)v15;
    swift_bridgeObjectRetain();
    int64_t v163 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v160 = v13;
    uint64_t v17 = (unint64_t *)(v13 + 40);
    do
    {
      unint64_t v18 = *v17;
      uint64_t v171 = *(v17 - 1);
      unint64_t v172 = v18;
      strcpy((char *)v167, "$DOMAIN$");
      BYTE1(v167[1]) = 0;
      WORD1(v167[1]) = 0;
      HIDWORD(v167[1]) = -402653184;
      uint64_t v165 = 34;
      unint64_t v166 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B633AF88();
      sub_1B6E32618();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 += 2;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    uint64_t v171 = 0x4F4954434E55463CLL;
    unint64_t v172 = 0xEF3E454D414E5F4ELL;
    unint64_t v19 = 0xE400000000000000;
    uint64_t v20 = 1852399949;
    switch(v161)
    {
      case 1:
        unint64_t v19 = 0xE500000000000000;
        uint64_t v20 = 0x6E77617053;
        break;
      case 2:
        uint64_t v20 = 1953066569;
        break;
      case 3:
        unint64_t v19 = 0xEC00000074696E49;
        goto LABEL_10;
      case 4:
        unint64_t v19 = 0xE600000000000000;
        uint64_t v20 = 0x657461647055;
        break;
      case 5:
        unint64_t v19 = 0xEE00657461647055;
LABEL_10:
        uint64_t v20 = 0x656C636974726150;
        break;
      case 6:
        unint64_t v19 = 0xE600000000000000;
        uint64_t v20 = 0x7265646E6552;
        break;
      default:
        break;
    }
    v167[0] = v20;
    v167[1] = v19;
    uint64_t v21 = sub_1B6E32618();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    v168 = (void *)v21;
    unint64_t v169 = v23;
    uint64_t v171 = 0x5F54554F205F202CLL;
    unint64_t v172 = 0xE800000000000000;
    strcpy((char *)v167, "\n\t\t\t , _ OUT_");
    HIWORD(v167[1]) = -4864;
    uint64_t v24 = sub_1B6E32618();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    v168 = (void *)v24;
    unint64_t v169 = v26;
    uint64_t v171 = 0x5F4E49205F202CLL;
    unint64_t v172 = 0xE700000000000000;
    strcpy((char *)v167, "\n\t\t\t , _ IN_");
    BYTE5(v167[1]) = 0;
    HIWORD(v167[1]) = -5120;
    uint64_t v136 = sub_1B6E32618();
    uint64_t v141 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v28 = v162[14];
    if (v28 >> 62)
    {
      _s13ParameterBaseCMa();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_1B6E32BF8();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E33628();
      unint64_t v29 = v28;
    }
    swift_bridgeObjectRelease();
    uint64_t v140 = sub_1B6872428(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v30 = v162[15];
    if (v30 >> 62)
    {
      _s13ParameterBaseCMa();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_1B6E32BF8();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E33628();
      unint64_t v31 = v30;
    }
    swift_bridgeObjectRelease();
    uint64_t v139 = sub_1B6872428(v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v149 = sub_1B639A2D4(MEMORY[0x1E4FBC860]);
    unint64_t v32 = v162[14];
    if (v32 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v33 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      uint64_t v34 = v151;
      if (v33) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t v34 = v151;
      if (v33)
      {
LABEL_18:
        uint64_t v35 = 0;
        uint64_t v150 = 0;
        unint64_t v36 = v32 & 0xC000000000000001;
        uint64_t v159 = v32 + 32;
        v164 = &v170;
        uint64_t v146 = v33;
        unint64_t v147 = v32;
        unint64_t v153 = v32 & 0xC000000000000001;
        while (1)
        {
          if (v36)
          {
            uint64_t v37 = MEMORY[0x1BA9B4580](v35, v32);
          }
          else
          {
            uint64_t v37 = *(void *)(v159 + 8 * v35);
            swift_retain();
          }
          uint64_t Strong = swift_weakLoadStrong();
          if (!Strong) {
            goto LABEL_20;
          }
          uint64_t v161 = v37;
          if (*(__objc2_class **)Strong != _TtCO3VFX21GraphV1CodeGeneration12ContextEntry) {
            break;
          }
          uint64_t v39 = *(void *)(Strong + 16);
          if (v39)
          {
            uint64_t v157 = v35;
            char v40 = *(unsigned char *)(v39 + 32);
            unsigned int v41 = v40 & 0x3F;
            uint64_t v154 = Strong;
            unint64_t v155 = (unint64_t)((1 << v40) + 63) >> 6;
            size_t v42 = 8 * v155;
            swift_retain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v41 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              v152 = (char *)&v135;
              MEMORY[0x1F4188790](isStackAllocationSafe, v44);
              v158 = (char *)&v135 - ((v42 + 15) & 0x3FFFFFFFFFFFFFF0);
              bzero(v158, v42);
              uint64_t v160 = 0;
              uint64_t v45 = 0;
              uint64_t v46 = v39 + 64;
              uint64_t v47 = 1 << *(unsigned char *)(v39 + 32);
              if (v47 < 64) {
                uint64_t v48 = ~(-1 << v47);
              }
              else {
                uint64_t v48 = -1;
              }
              unint64_t v49 = v48 & *(void *)(v39 + 64);
              int64_t v163 = (unint64_t)(v47 + 63) >> 6;
              uint64_t v142 = v39 + 112;
              uint64_t v143 = v163 - 6;
              if (v49)
              {
LABEL_34:
                unint64_t v50 = __clz(__rbit64(v49));
                v49 &= v49 - 1;
                unint64_t v51 = v50 | (v45 << 6);
                goto LABEL_35;
              }
              while (1)
              {
                uint64_t v55 = v45 + 1;
                if (v45 + 1 >= v163) {
                  break;
                }
                unint64_t v56 = *(void *)(v46 + 8 * v55);
                if (!v56)
                {
                  uint64_t v55 = v45 + 2;
                  if (v45 + 2 >= v163) {
                    break;
                  }
                  unint64_t v56 = *(void *)(v46 + 8 * v55);
                  if (!v56)
                  {
                    uint64_t v55 = v45 + 3;
                    if (v45 + 3 >= v163) {
                      break;
                    }
                    unint64_t v56 = *(void *)(v46 + 8 * v55);
                    if (!v56)
                    {
                      uint64_t v55 = v45 + 4;
                      if (v45 + 4 >= v163) {
                        break;
                      }
                      unint64_t v56 = *(void *)(v46 + 8 * v55);
                      if (!v56)
                      {
                        uint64_t v55 = v45 + 5;
                        if (v45 + 5 >= v163) {
                          break;
                        }
                        unint64_t v56 = *(void *)(v46 + 8 * v55);
                        if (!v56)
                        {
                          while (v143 != v45)
                          {
                            unint64_t v56 = *(void *)(v142 + 8 * v45++);
                            if (v56)
                            {
                              uint64_t v55 = v45 + 5;
                              goto LABEL_50;
                            }
                          }
                          break;
                        }
                      }
                    }
                  }
                }
LABEL_50:
                unint64_t v49 = (v56 - 1) & v56;
                unint64_t v51 = __clz(__rbit64(v56)) + (v55 << 6);
                uint64_t v45 = v55;
LABEL_35:
                uint64_t v52 = (uint64_t *)(*(void *)(v39 + 48) + 16 * v51);
                uint64_t v53 = *v52;
                unint64_t v54 = v52[1];
                sub_1B66459A4(*(void *)(v39 + 56) + 88 * v51, (uint64_t)&v171);
                v168 = (void *)v53;
                unint64_t v169 = v54;
                sub_1B66459A4((uint64_t)&v171, (uint64_t)v164);
                v167[0] = v53;
                v167[1] = v54;
                uint64_t v165 = aUserdata[0];
                unint64_t v166 = aUserdata[1];
                sub_1B666BDC4();
                sub_1B666BE18();
                swift_bridgeObjectRetain_n();
                LOBYTE(v53) = sub_1B6E31618();
                sub_1B62BFF14((uint64_t)&v168, (uint64_t (*)(void))sub_1B6873810);
                sub_1B666BD18((uint64_t)&v171);
                swift_bridgeObjectRelease();
                if (v53)
                {
                  *(void *)&v158[(v51 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v51;
                  ++v160;
                  if (v49) {
                    goto LABEL_34;
                  }
                }
                else if (v49)
                {
                  goto LABEL_34;
                }
              }
              uint64_t v57 = sub_1B685E1C0((unint64_t *)v158, v155, v160, v39);
            }
            else
            {
              v158 = (char *)swift_slowAlloc();
              bzero(v158, v42);
              uint64_t v160 = 0;
              int64_t v58 = 0;
              uint64_t v59 = v39 + 64;
              uint64_t v60 = 1 << *(unsigned char *)(v39 + 32);
              if (v60 < 64) {
                uint64_t v61 = ~(-1 << v60);
              }
              else {
                uint64_t v61 = -1;
              }
              unint64_t v62 = v61 & *(void *)(v39 + 64);
              int64_t v163 = (unint64_t)(v60 + 63) >> 6;
              v152 = (char *)(v163 - 6);
              uint64_t v143 = v39 + 112;
              if (v62)
              {
LABEL_59:
                unint64_t v63 = __clz(__rbit64(v62));
                v62 &= v62 - 1;
                unint64_t v64 = v63 | ((void)v58 << 6);
                goto LABEL_60;
              }
              while (1)
              {
                uint64_t v68 = v58 + 1;
                if ((uint64_t)(v58 + 1) >= v163) {
                  break;
                }
                unint64_t v69 = *(void *)(v59 + 8 * (void)v68);
                if (!v69)
                {
                  uint64_t v68 = v58 + 2;
                  if ((uint64_t)(v58 + 2) >= v163) {
                    break;
                  }
                  unint64_t v69 = *(void *)(v59 + 8 * (void)v68);
                  if (!v69)
                  {
                    uint64_t v68 = v58 + 3;
                    if ((uint64_t)(v58 + 3) >= v163) {
                      break;
                    }
                    unint64_t v69 = *(void *)(v59 + 8 * (void)v68);
                    if (!v69)
                    {
                      uint64_t v68 = v58 + 4;
                      if ((uint64_t)(v58 + 4) >= v163) {
                        break;
                      }
                      unint64_t v69 = *(void *)(v59 + 8 * (void)v68);
                      if (!v69)
                      {
                        uint64_t v68 = v58 + 5;
                        if ((uint64_t)(v58 + 5) >= v163) {
                          break;
                        }
                        unint64_t v69 = *(void *)(v59 + 8 * (void)v68);
                        if (!v69)
                        {
                          while (v152 != v58)
                          {
                            unint64_t v69 = *(void *)(v143 + 8 * (void)v58++);
                            if (v69)
                            {
                              uint64_t v68 = v58 + 5;
                              goto LABEL_75;
                            }
                          }
                          break;
                        }
                      }
                    }
                  }
                }
LABEL_75:
                unint64_t v62 = (v69 - 1) & v69;
                unint64_t v64 = __clz(__rbit64(v69)) + ((void)v68 << 6);
                int64_t v58 = v68;
LABEL_60:
                BOOL v65 = (uint64_t *)(*(void *)(v39 + 48) + 16 * v64);
                uint64_t v66 = *v65;
                unint64_t v67 = v65[1];
                sub_1B66459A4(*(void *)(v39 + 56) + 88 * v64, (uint64_t)&v171);
                v168 = (void *)v66;
                unint64_t v169 = v67;
                sub_1B66459A4((uint64_t)&v171, (uint64_t)v164);
                v167[0] = v66;
                v167[1] = v67;
                uint64_t v165 = aUserdata[0];
                unint64_t v166 = aUserdata[1];
                sub_1B666BDC4();
                sub_1B666BE18();
                swift_bridgeObjectRetain_n();
                LOBYTE(v66) = sub_1B6E31618();
                sub_1B62BFF14((uint64_t)&v168, (uint64_t (*)(void))sub_1B6873810);
                sub_1B666BD18((uint64_t)&v171);
                swift_bridgeObjectRelease();
                if (v66)
                {
                  *(void *)&v158[(v64 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v64;
                  ++v160;
                  if (v62) {
                    goto LABEL_59;
                  }
                }
                else if (v62)
                {
                  goto LABEL_59;
                }
              }
              uint64_t v70 = v158;
              uint64_t v57 = sub_1B685E1C0((unint64_t *)v158, v155, v160, v39);
              MEMORY[0x1BA9B84C0](v70, -1, -1);
            }
            uint64_t v34 = v151;
            uint64_t v35 = v157;
            swift_bridgeObjectRelease();
            uint64_t v71 = v150;
            uint64_t v72 = sub_1B684F958(v57);
            swift_release();
            if (*(void *)(v72 + 16))
            {
              sub_1B62BACD8(0, (unint64_t *)&qword_1E9DD0530, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBBD58]);
              uint64_t v73 = sub_1B6E32C58();
            }
            else
            {
              uint64_t v73 = MEMORY[0x1E4FBC868];
            }
            v168 = (void *)v73;
            uint64_t v74 = swift_bridgeObjectRetain();
            sub_1B685FC84(v74, 1, &v168);
            uint64_t v150 = v71;
            if (v71)
            {
              swift_unexpectedError();
              __break(1u);
              goto LABEL_141;
            }
            swift_bridgeObjectRelease();
            uint64_t v75 = (uint64_t)v168;
            if (v168[2])
            {
              swift_release();
              uint64_t v76 = *(void *)(v161 + 40);
              uint64_t v77 = *(void *)(v161 + 48);
              _s11MetadataSetCMa();
              uint64_t v78 = swift_allocObject();
              *(void *)(v78 + 16) = v75;
              swift_bridgeObjectRetain();
              uint64_t v79 = (uint64_t)v149;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v168 = (void *)v79;
              sub_1B67E6958(v78, v76, v77, isUniquelyReferenced_nonNull_native);
              v149 = v168;
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();
              swift_release_n();
              swift_release();
            }
            uint64_t v33 = v146;
            unint64_t v32 = v147;
          }
          else
          {
            swift_release();
            swift_release();
          }
          unint64_t v36 = v153;
LABEL_21:
          if (++v35 == v33) {
            goto LABEL_92;
          }
        }
        swift_release();
LABEL_20:
        swift_release();
        goto LABEL_21;
      }
    }
    uint64_t v150 = 0;
LABEL_92:
    swift_bridgeObjectRelease_n();
    unint64_t v147 = v162[18];
    uint64_t v154 = *(void *)(v147 + 16);
    if (v154)
    {
      unint64_t v153 = v147 + 32;
      swift_bridgeObjectRetain();
      uint64_t v81 = 0;
      do
      {
        uint64_t v83 = (uint64_t *)(v153 + (v81 << 6));
        uint64_t v84 = *v83;
        uint64_t v85 = v83[1];
        uint64_t v86 = (void *)v83[2];
        int64_t v163 = v83[3];
        v164 = (uint64_t *)v84;
        uint64_t v87 = v83[4];
        uint64_t v161 = v83[5];
        v162 = v86;
        uint64_t v89 = v83[6];
        int64_t v88 = (char *)v83[7];
        uint64_t v159 = v89;
        uint64_t v160 = v87;
        uint64_t v157 = v81;
        v158 = v88;
        unint64_t v90 = *v156;
        unint64_t v91 = *(char **)(*v156 + 16);
        unint64_t v155 = *v156;
        v152 = v91;
        if (v91)
        {
          unint64_t v92 = (void *)(v90 + 48);
          while (1)
          {
            unint64_t v94 = (void *)*v92;
            uint64_t v93 = v92[1];
            uint64_t v95 = v92[2];
            uint64_t v96 = v92[3];
            uint64_t v97 = v92[4];
            char v98 = (char *)v92[5];
            BOOL v99 = (uint64_t *)*(v92 - 2) == v164 && *(v92 - 1) == v85;
            if (v99 || (sub_1B6E334B8() & 1) != 0)
            {
              BOOL v100 = v94 == v162 && v93 == v163;
              if (v100 || (sub_1B6E334B8() & 1) != 0)
              {
                BOOL v101 = v95 == v160 && v96 == v161;
                if (v101 || (sub_1B6E334B8() & 1) != 0)
                {
                  BOOL v102 = v97 == v159 && v98 == v158;
                  if (v102 || (sub_1B6E334B8() & 1) != 0) {
                    break;
                  }
                }
              }
            }
            v92 += 8;
            if (!--v91) {
              goto LABEL_120;
            }
          }
          uint64_t v82 = v157;
        }
        else
        {
LABEL_120:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v103 = v158;
          swift_bridgeObjectRetain();
          uint64_t v104 = (void *)v155;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v104 = sub_1B68C0EC0(0, (uint64_t)(v152 + 1), 1, v104);
          }
          uint64_t v82 = v157;
          unint64_t v106 = v104[2];
          unint64_t v105 = v104[3];
          if (v106 >= v105 >> 1) {
            uint64_t v104 = sub_1B68C0EC0(v105 > 1, v106 + 1, 1, v104);
          }
          v104[2] = v106 + 1;
          uint64_t v107 = &v104[8 * v106];
          v107[4] = v164;
          v107[5] = v85;
          int64_t v108 = v163;
          v107[6] = v162;
          v107[7] = v108;
          uint64_t v109 = v161;
          v107[8] = v160;
          v107[9] = v109;
          v107[10] = v159;
          v107[11] = v103;
          unint64_t *v156 = (unint64_t)v104;
        }
        uint64_t v81 = v82 + 1;
      }
      while (v81 != v154);
      swift_bridgeObjectRelease();
      uint64_t v34 = v151;
    }
    if (*(void *)(*v156 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_128;
    }
    uint64_t v114 = HIDWORD(v144) & 1;
    LOBYTE(v168) = BYTE4(v144) & 1;
    uint64_t v115 = v144;
    sub_1B685AC7C(v144 | ((unint64_t)(BYTE4(v144) & 1) << 32));
    uint64_t v116 = v149;
    swift_bridgeObjectRetain();
    sub_1B639A2D4(MEMORY[0x1E4FBC860]);
    uint64_t v117 = v138;
    *((_WORD *)v138 + 20) = 1;
    uint64_t v118 = v148;
    uint64_t v119 = (char *)v117 + *(int *)(v148 + 40);
    uint64_t v120 = sub_1B6E31118();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v119, 1, 1, v120);
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v117 + *(int *)(v118 + 44)) = 0;
    unint64_t v121 = (char *)v117 + *(int *)(v118 + 48);
    *(void *)unint64_t v121 = 0;
    v121[8] = 1;
    uint64_t v122 = v141;
    *uint64_t v117 = v136;
    v117[1] = v122;
    uint64_t v123 = v140;
    v117[2] = (uint64_t)v116;
    v117[3] = v123;
    v117[4] = v139;
    int v124 = swift_isUniquelyReferenced_nonNull_native();
    v168 = (void *)*((void *)v34 + 2);
    uint64_t v125 = (uint64_t)v168;
    *((void *)v34 + 2) = 0x8000000000000000;
    LOBYTE(v171) = v114;
    unint64_t v127 = sub_1B69FAA7C(v115 | ((unint64_t)v114 << 32));
    char v128 = v126;
    uint64_t v129 = *(void *)(v125 + 16) + ((v126 & 1) == 0);
    if (*(void *)(v125 + 24) >= v129)
    {
      if (v124)
      {
        if ((v126 & 1) == 0) {
          goto LABEL_139;
        }
      }
      else
      {
        sub_1B6AD135C();
        if ((v128 & 1) == 0) {
          goto LABEL_139;
        }
      }
    }
    else
    {
      sub_1B6ABF54C(v129, v124);
      unint64_t v130 = sub_1B69FAA7C(v115 | (v114 << 32));
      if ((v128 & 1) != (v131 & 1))
      {
LABEL_141:
        sub_1B6E33838();
        __break(1u);
        JUMPOUT(0x1B685D258);
      }
      unint64_t v127 = v130;
      if ((v128 & 1) == 0)
      {
LABEL_139:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v145 + 56))(v137, 1, 1, v148);
        __break(1u);
      }
    }
    uint64_t v132 = v145;
    uint64_t v133 = (uint64_t)v137;
    sub_1B68737A8(v168[7] + *(void *)(v145 + 72) * v127, (uint64_t)v137, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56))(v133, 0, 1, v148);
    uint64_t v134 = (uint64_t)v138;
    sub_1B685A0C8((uint64_t)v138);
    sub_1B62BFF14(v134, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B6860728(v133, 1, (uint64_t *)&v168, v127, v115 | (v114 << 32));
    sub_1B62BFF14(v133, (uint64_t (*)(void))sub_1B63B2040);
    *((void *)v151 + 2) = v168;
    return swift_bridgeObjectRelease();
  }
LABEL_128:
  BOOL v110 = sub_1B6AB4400(&v168, v144 | ((HIDWORD(v144) & 1) << 32));
  uint64_t v112 = v111;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v111, 1, v148))
  {
    swift_bridgeObjectRelease();
    *(void *)uint64_t v112 = 0;
    *(void *)(v112 + 8) = 0;
    swift_bridgeObjectRelease();
    *(void *)(v112 + 24) = 0;
    swift_bridgeObjectRelease();
    *(void *)(v112 + 32) = 0;
    *(_WORD *)(v112 + 40) = 257;
  }
  return ((uint64_t (*)(void **, void))v110)(&v168, 0);
}

uint64_t sub_1B685D274(uint64_t a1)
{
  uint64_t v2 = v1;
  v9[2] = a1;
  uint64_t v3 = (void *)swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B68624B8(v3, (uint64_t (*)(char *, unint64_t, char *))sub_1B687387C, (uint64_t)v9);
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16))
  {
    sub_1B6396740(0, (unint64_t *)&qword_1EB980700, MEMORY[0x1E4FBBD58]);
    uint64_t v5 = sub_1B6E32C58();
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC868];
  }
  uint64_t v10 = v5;
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1B68600E8(v6, 1, &v10);
  swift_bridgeObjectRelease();
  uint64_t v7 = v10;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = v7;
  return result;
}

unint64_t sub_1B685D380(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4 = a2;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = HIDWORD(a2) & 1;
  if (!v6)
  {
LABEL_24:
    sub_1B6366C08(a3, a1, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(_WORD *)(a1 + 40) = 257;
    return v4 | (unint64_t)(v7 << 32);
  }
  if (a2 > 1) {
    char v8 = BYTE4(a2) & 1;
  }
  else {
    char v8 = 0;
  }
  if (a2 == 1) {
    char v9 = BYTE4(a2) & 1;
  }
  else {
    char v9 = 0;
  }
  if (a2) {
    char v10 = 0;
  }
  else {
    char v10 = BYTE4(a2) & 1;
  }
  uint64_t v11 = (float *)(a4 + 36);
  while (1)
  {
    float v12 = *(v11 - 1);
    if (*(unsigned char *)v11 != 1) {
      break;
    }
    if (v12 == 0.0)
    {
      if (v10) {
        goto LABEL_23;
      }
    }
    else if (LODWORD(v12) == 1)
    {
      if (v9) {
        goto LABEL_23;
      }
    }
    else if (v8)
    {
      goto LABEL_23;
    }
LABEL_13:
    v11 += 2;
    if (!--v6) {
      goto LABEL_24;
    }
  }
  if ((a2 & 0x100000000) != 0 || v12 != *(float *)&a2) {
    goto LABEL_13;
  }
LABEL_23:
  sub_1B6366C08(a3, a1, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  return v4 | (unint64_t)(v7 << 32);
}

uint64_t sub_1B685D480(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(result + 16) + 80);
  if (v2[2])
  {
    uint64_t v4 = v2[4];
    uint64_t v5 = v2[5];
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B6A5D700(v4, v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
      sub_1B629C37C((uint64_t)(v6 + 7), (uint64_t)v24);
      sub_1B6646D94(v24, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      if (sub_1B6A3D8B8() == 0x6156686374697753 && v7 == 0xEB0000000065756CLL)
      {
        swift_bridgeObjectRelease();
        sub_1B6646D94(v24, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      }
      else
      {
        char v8 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        sub_1B6646D94(v24, (void (*)(void, void, void, void, void))sub_1B629DCAC);
        if ((v8 & 1) == 0)
        {
          unint64_t v9 = v6[8];
          BOOL v10 = v9 > 0x26;
          uint64_t v11 = (1 << v9) & 0x43A0000000;
          BOOL v12 = v10 || v11 == 0;
          if (v12 && *(void *)(a2 + 16))
          {
            uint64_t v13 = v6[5];
            uint64_t v14 = v6[6];
            swift_bridgeObjectRetain();
            uint64_t v15 = sub_1B62B2CE0(v13, v14);
            if ((v16 & 1) == 0)
            {
              swift_release();
              return swift_bridgeObjectRelease();
            }
            uint64_t v17 = *(void *)(*(void *)(a2 + 56) + 16 * v15 + 8);
            swift_retain();
            swift_bridgeObjectRelease();
            sub_1B629C37C((uint64_t)(v6 + 7), (uint64_t)v23);
            swift_retain();
            sub_1B6646D94(v23, (void (*)(void, void, void, void, void))sub_1B629C9E8);
            uint64_t v18 = sub_1B6A4BDD8(v23);
            sub_1B6646D94(v23, (void (*)(void, void, void, void, void))sub_1B629DCAC);
            swift_release();
            uint64_t v19 = *(void *)(v17 + 40);
            if (v18 != v19)
            {
              uint64_t v20 = v6[3];
              uint64_t v21 = v6[4];
              swift_bridgeObjectRetain();
              sub_1B6A47F08(v19, (uint64_t)v22);
              sub_1B6A0F240(v20, v21, (uint64_t)v22);
              swift_release();
              swift_release();
              sub_1B6646D94(v22, (void (*)(void, void, void, void, void))sub_1B629DCAC);
              return swift_bridgeObjectRelease();
            }
            swift_release();
          }
        }
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B685D75C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v8;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1B69FF6BC(v2);
  swift_bridgeObjectRelease();
  sub_1B685D274((uint64_t)v3);
  swift_release();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1B6851C50(v4, v1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  *(unsigned char *)(v1 + 1) = v7;
  *(unsigned char *)(v1 + 24) = 1;
  *(unsigned char *)(v1 + 26) = v9;
  return result;
}

uint64_t sub_1B685D848(unsigned int *a1, uint64_t a2)
{
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v4 - 8, v5);
  char v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *a1;
  unsigned __int8 v28 = *((unsigned char *)a1 + 4);
  unsigned __int8 v9 = v28;
  sub_1B685AC7C(v8 | ((unint64_t)v28 << 32));
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = *(void *)(a2 + 16);
  uint64_t v11 = v26;
  *(void *)(a2 + 16) = 0x8000000000000000;
  unsigned __int8 v27 = v9;
  unint64_t v13 = sub_1B69FAA7C(v8 | ((unint64_t)v9 << 32));
  char v14 = v12;
  uint64_t v15 = *(void *)(v11 + 16) + ((v12 & 1) == 0);
  if (*(void *)(v11 + 24) >= v15)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v12) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1B6AD135C();
      if (v14) {
        goto LABEL_7;
      }
    }
LABEL_9:
    uint64_t v24 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
    __break(1u);
    goto LABEL_10;
  }
  sub_1B6ABF54C(v15, isUniquelyReferenced_nonNull_native);
  v25[16] = v9;
  unint64_t v16 = sub_1B69FAA7C(v8 | ((unint64_t)v9 << 32));
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v13 = v16;
    if ((v14 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_7:
    sub_1B6873628(0);
    uint64_t v19 = (uint64_t)a1 + *(int *)(v18 + 48);
    uint64_t v20 = *(void *)(v26 + 56);
    uint64_t v21 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
    uint64_t v22 = *(void *)(v21 - 8);
    sub_1B68737A8(v20 + *(void *)(v22 + 72) * v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v7, 0, 1, v21);
    sub_1B685A0C8(v19);
    v25[20] = v9;
    sub_1B6860728((uint64_t)v7, 1, &v26, v13, v8 | ((unint64_t)v9 << 32));
    uint64_t result = sub_1B62BFF14((uint64_t)v7, (uint64_t (*)(void))sub_1B63B2040);
    *(void *)(a2 + 16) = v26;
    return result;
  }
LABEL_10:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

unint64_t sub_1B685DAE8()
{
  return 0xD000000000000016;
}

uint64_t sub_1B685DB04(void *a1)
{
  return sub_1B685BC4C(a1, *(_WORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1B685DB30(char a1)
{
  uint64_t v5 = MEMORY[0x1E4FBB390];
  v4[0] = a1;
  uint64_t v2 = aUserdata[0];
  uint64_t v3 = aUserdata[1];
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  sub_1B6A3C3B0(v2, v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B685DBC8(char *a1, char *a2)
{
  return sub_1B6BB4C90(*a1, *a2);
}

uint64_t sub_1B685DBD4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B685DC48()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B685DCA8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B685DD18@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B685DD78(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6580597;
  if (*v1) {
    uint64_t v2 = 1701869940;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B685DDA8()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 6580597;
  }
}

uint64_t sub_1B685DDD4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B685DE38(uint64_t a1)
{
  unint64_t v2 = sub_1B687B904();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B685DE74(uint64_t a1)
{
  unint64_t v2 = sub_1B687B904();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B685DEB0(unsigned __int16 *a1, uint64_t (*a2)(void), uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = a2();
  *a4 = 1;
  if (*(unsigned char *)(a5 + 24) == 1)
  {
    sub_1B677C3D4(*(void *)a6, *(void *)(a6 + 8));
    uint64_t v11 = *((void *)a1 + 1);
    uint64_t v12 = *((void *)a1 + 2);
    int v13 = *((unsigned __int8 *)a1 + 26);
    if (*((unsigned char *)a1 + 25)) {
      __int16 v14 = 256;
    }
    else {
      __int16 v14 = 0;
    }
    __int16 v15 = v14 | *((unsigned __int8 *)a1 + 24);
    *(void *)a6 = *a1;
    *(void *)(a6 + 8) = v11;
    *(void *)(a6 + 16) = v12;
    *(unsigned char *)(a6 + 26) = v13 != 0;
    *(_WORD *)(a6 + 24) = v15;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B685DF80(const void *a1, uint64_t (*a2)(void), uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = a2();
  *a4 = 1;
  if (*(unsigned char *)(a5 + 24) == 1)
  {
    sub_1B62D7710(a6, (uint64_t)v11, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
    sub_1B62EDED8(v11);
    memcpy(__dst, a1, sizeof(__dst));
    memcpy(v13, a1, sizeof(v13));
    nullsub_1(v13);
    sub_1B62D7710((uint64_t)v13, a6, &qword_1EB97E8F0, (uint64_t)&type metadata for EmitterRuntime);
    return sub_1B62EEA00((uint64_t)__dst);
  }
  return result;
}

uint64_t sub_1B685E064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v6 = sub_1B6C2C804(byte_1F0F5BCF8[v4 + 32], a1, a2);
    uint64_t v7 = *((void *)v5 + 2);
    uint64_t v8 = v7 + *(void *)(v6 + 16);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= *((void *)v5 + 3) >> 1)
    {
      uint64_t v10 = *(void *)(v6 + 16);
      if (!v10) {
        goto LABEL_16;
      }
    }
    else
    {
      if (v7 <= v8) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = v7;
      }
      uint64_t v5 = sub_1B68C18B8(isUniquelyReferenced_nonNull_native, v11, 1, v5);
      uint64_t v10 = *(void *)(v6 + 16);
      if (!v10) {
        goto LABEL_16;
      }
    }
    uint64_t v12 = &v5[16 * *((void *)v5 + 2) + 32];
    if (v6 + 32 < (unint64_t)&v12[16 * v10] && (unint64_t)v12 < v6 + 32 + 16 * v10)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v12, (const void *)(v6 + 32), 16 * v10);
    *((void *)v5 + 2) += v10;
LABEL_16:
    swift_bridgeObjectRelease();
    if (v4 == 3) {
      return (uint64_t)v5;
    }
    ++v4;
  }
}

uint64_t sub_1B685E1C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1B62BACD8(0, (unint64_t *)&qword_1E9DD0530, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBBD58]);
  uint64_t v8 = sub_1B6E32C58();
  uint64_t v9 = v8;
  unint64_t v31 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v8 + 64;
  while (v10)
  {
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_26:
    uint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    sub_1B66459A4(*(void *)(v4 + 56) + 88 * v17, (uint64_t)v38);
    long long v34 = v38[2];
    long long v35 = v38[3];
    long long v36 = v38[4];
    uint64_t v37 = v39;
    long long v32 = v38[0];
    long long v33 = v38[1];
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    uint64_t v24 = sub_1B6E33988();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (v27 + 1 == v28) {
          unint64_t v27 = 0;
        }
        else {
          ++v27;
        }
        uint64_t v29 = *(void *)(v12 + 8 * v27);
      }
      while (v29 == -1);
      unint64_t v13 = __clz(__rbit64(~v29)) + (v27 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    __int16 v14 = (void *)(*(void *)(v9 + 48) + 16 * v13);
    *__int16 v14 = v23;
    v14[1] = v22;
    uint64_t v15 = *(void *)(v9 + 56) + 88 * v13;
    *(_OWORD *)(v15 + 32) = v34;
    *(_OWORD *)(v15 + 48) = v35;
    *(_OWORD *)(v15 + 64) = v36;
    *(void *)(v15 + 80) = v37;
    *(_OWORD *)uint64_t v15 = v32;
    *(_OWORD *)(v15 + 16) = v33;
    ++*(void *)(v9 + 16);
    if (!--v5) {
      return v9;
    }
  }
  uint64_t v18 = v11 + 1;
  if (v11 + 1 >= a2) {
    return v9;
  }
  unint64_t v19 = v31[v18];
  if (v19) {
    goto LABEL_25;
  }
  uint64_t v18 = v11 + 2;
  if (v11 + 2 >= a2) {
    return v9;
  }
  unint64_t v19 = v31[v18];
  if (v19) {
    goto LABEL_25;
  }
  uint64_t v18 = v11 + 3;
  if (v11 + 3 >= a2) {
    return v9;
  }
  unint64_t v19 = v31[v18];
  if (v19) {
    goto LABEL_25;
  }
  uint64_t v18 = v11 + 4;
  if (v11 + 4 >= a2) {
    return v9;
  }
  unint64_t v19 = v31[v18];
  if (v19)
  {
LABEL_25:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v11 = v18;
    goto LABEL_26;
  }
  uint64_t v20 = v11 + 5;
  while (a2 != v20)
  {
    unint64_t v19 = v31[v20++];
    if (v19)
    {
      uint64_t v18 = v20 - 1;
      goto LABEL_25;
    }
  }
  return v9;
}

uint64_t sub_1B685E498(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1B62BACD8(0, (unint64_t *)&qword_1EB980760, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBBD58]);
  uint64_t v8 = sub_1B6E32C58();
  uint64_t v9 = v8;
  long long v36 = a1;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v8 + 64;
  while (v10)
  {
    unint64_t v17 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_26:
    uint64_t v22 = 16 * v18;
    uint64_t v23 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v18);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    unint64_t v26 = (uint64_t *)(*(void *)(v4 + 56) + v22);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B6E318B8();
    uint64_t v29 = sub_1B6E33988();
    uint64_t v30 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v31 = v29 & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v33 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (v32 + 1 == v33) {
          unint64_t v32 = 0;
        }
        else {
          ++v32;
        }
        uint64_t v34 = *(void *)(v12 + 8 * v32);
      }
      while (v34 == -1);
      unint64_t v13 = __clz(__rbit64(~v34)) + (v32 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = 16 * v13;
    uint64_t v15 = (void *)(*(void *)(v9 + 48) + v14);
    void *v15 = v25;
    v15[1] = v24;
    unint64_t v16 = (void *)(*(void *)(v9 + 56) + v14);
    void *v16 = v27;
    v16[1] = v28;
    ++*(void *)(v9 + 16);
    if (!--v5) {
      return v9;
    }
  }
  uint64_t v19 = v11 + 1;
  if (v11 + 1 >= v37) {
    return v9;
  }
  unint64_t v20 = v36[v19];
  if (v20) {
    goto LABEL_25;
  }
  uint64_t v19 = v11 + 2;
  if (v11 + 2 >= v37) {
    return v9;
  }
  unint64_t v20 = v36[v19];
  if (v20) {
    goto LABEL_25;
  }
  uint64_t v19 = v11 + 3;
  if (v11 + 3 >= v37) {
    return v9;
  }
  unint64_t v20 = v36[v19];
  if (v20) {
    goto LABEL_25;
  }
  uint64_t v19 = v11 + 4;
  if (v11 + 4 >= v37) {
    return v9;
  }
  unint64_t v20 = v36[v19];
  if (v20)
  {
LABEL_25:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v11 = v19;
    goto LABEL_26;
  }
  uint64_t v21 = v11 + 5;
  while (v37 != v21)
  {
    unint64_t v20 = v36[v21++];
    if (v20)
    {
      uint64_t v19 = v21 - 1;
      goto LABEL_25;
    }
  }
  return v9;
}

void *sub_1B685E738(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8, v9);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v14 = (char *)&v40 - v13;
  if (!a3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return a4;
  }
  uint64_t v42 = v12;
  sub_1B6396740(0, (unint64_t *)&qword_1EB980700, MEMORY[0x1E4FBBD58]);
  uint64_t v15 = sub_1B6E32C58();
  uint64_t v16 = v15;
  char v40 = a1;
  uint64_t v41 = a2;
  if (a2 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *a1;
  }
  uint64_t v18 = v42;
  uint64_t v44 = 0;
  uint64_t v19 = v15 + 64;
  while (v17)
  {
    unint64_t v22 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v23 = v22 | (v44 << 6);
LABEL_26:
    uint64_t v27 = a4[7];
    uint64_t v28 = a4;
    uint64_t v29 = a4[6] + 8 * v23;
    int v30 = *(_DWORD *)v29;
    int v31 = *(unsigned __int8 *)(v29 + 4);
    uint64_t v32 = *(void *)(v43 + 72);
    sub_1B6366C08(v27 + v32 * v23, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B68737A8((uint64_t)v14, v18, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B6E33918();
    sub_1B6E33928();
    if (v31 != 1) {
      sub_1B6E33958();
    }
    uint64_t v33 = sub_1B6E33988();
    uint64_t v34 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v37 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (v36 + 1 == v37) {
          unint64_t v36 = 0;
        }
        else {
          ++v36;
        }
        uint64_t v38 = *(void *)(v19 + 8 * v36);
      }
      while (v38 == -1);
      unint64_t v20 = __clz(__rbit64(~v38)) + (v36 << 6);
    }
    uint64_t v18 = v42;
    *(void *)(v19 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t v21 = *(void *)(v16 + 48) + 8 * v20;
    *(_DWORD *)uint64_t v21 = v30;
    *(unsigned char *)(v21 + 4) = v31;
    sub_1B68737A8(v18, *(void *)(v16 + 56) + v20 * v32, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    ++*(void *)(v16 + 16);
    --a3;
    a4 = v28;
    if (!a3) {
      return (void *)v16;
    }
  }
  uint64_t v24 = v44 + 1;
  if (v44 + 1 >= v41) {
    return (void *)v16;
  }
  unint64_t v25 = v40[v24];
  if (v25) {
    goto LABEL_25;
  }
  uint64_t v24 = v44 + 2;
  if (v44 + 2 >= v41) {
    return (void *)v16;
  }
  unint64_t v25 = v40[v24];
  if (v25) {
    goto LABEL_25;
  }
  uint64_t v24 = v44 + 3;
  if (v44 + 3 >= v41) {
    return (void *)v16;
  }
  unint64_t v25 = v40[v24];
  if (v25) {
    goto LABEL_25;
  }
  uint64_t v24 = v44 + 4;
  if (v44 + 4 >= v41) {
    return (void *)v16;
  }
  unint64_t v25 = v40[v24];
  if (v25)
  {
LABEL_25:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    uint64_t v44 = v24;
    goto LABEL_26;
  }
  uint64_t v26 = v44 + 5;
  while (v41 != v26)
  {
    unint64_t v25 = v40[v26++];
    if (v25)
    {
      uint64_t v24 = v26 - 1;
      goto LABEL_25;
    }
  }
  return (void *)v16;
}

uint64_t sub_1B685EAF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1B6879144(0, &qword_1E9DD07D0, (uint64_t (*)(uint64_t))sub_1B67F9380, MEMORY[0x1E4FBBD58]);
  uint64_t v7 = sub_1B6E32C58();
  uint64_t v8 = v7;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v35 = v4;
  uint64_t v36 = 0;
  uint64_t v10 = v7 + 64;
  while (v9)
  {
    unint64_t v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v15 = v14 | (v36 << 6);
LABEL_26:
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    unint64_t v22 = (uint64_t *)(*(void *)(v4 + 56) + 24 * v15);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    sub_1B6E33918();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    uint64_t v26 = sub_1B6E33988();
    uint64_t v27 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v10 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v28) & ~*(void *)(v10 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (v29 + 1 == v30) {
          unint64_t v29 = 0;
        }
        else {
          ++v29;
        }
        uint64_t v31 = *(void *)(v10 + 8 * v29);
      }
      while (v31 == -1);
      unint64_t v11 = __clz(__rbit64(~v31)) + (v29 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (void *)(*(void *)(v8 + 48) + 16 * v11);
    *uint64_t v12 = v21;
    v12[1] = v20;
    uint64_t v13 = (void *)(*(void *)(v8 + 56) + 24 * v11);
    void *v13 = v23;
    v13[1] = v24;
    _DWORD v13[2] = v25;
    ++*(void *)(v8 + 16);
    --v5;
    uint64_t v4 = v35;
    if (!v5) {
      return v8;
    }
  }
  uint64_t v16 = v36 + 1;
  if (v36 + 1 >= v33) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v36 + 2;
  if (v36 + 2 >= v33) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v36 + 3;
  if (v36 + 3 >= v33) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v36 + 4;
  if (v36 + 4 >= v33) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17)
  {
LABEL_25:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v36 = v16;
    goto LABEL_26;
  }
  uint64_t v18 = v36 + 5;
  while (v33 != v18)
  {
    unint64_t v17 = a1[v18++];
    if (v17)
    {
      uint64_t v16 = v18 - 1;
      goto LABEL_25;
    }
  }
  return v8;
}

uint64_t sub_1B685EDD4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD07C8, (uint64_t (*)(uint64_t))_s13ParameterBaseCMa);
}

uint64_t sub_1B685EDF4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0830, (uint64_t (*)(uint64_t))_s11ContextExitCMa);
}

uint64_t sub_1B685EE14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0838, (uint64_t (*)(uint64_t))_s12ContextEntryCMa);
}

uint64_t sub_1B685EE34(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0818, (uint64_t (*)(uint64_t))_s11CodeSnippetCMa);
}

uint64_t sub_1B685EE54(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0800, (uint64_t (*)(uint64_t))_s19StaticSwitchSnippetCMa);
}

uint64_t sub_1B685EE74(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0808, (uint64_t (*)(uint64_t))_s17TypedArraySnippetCMa);
}

uint64_t sub_1B685EE94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD5230, (uint64_t (*)(uint64_t))_s24VariableReferenceSnippetCMa);
}

uint64_t sub_1B685EEB4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD07F0, (uint64_t (*)(uint64_t))_s15VariableSnippetCMa);
}

uint64_t sub_1B685EED4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0810, (uint64_t (*)(uint64_t))_s17CustomCodeSnippetCMa);
}

uint64_t sub_1B685EEF4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0820, (uint64_t (*)(uint64_t))_s20ArraySequenceSnippetCMa);
}

uint64_t sub_1B685EF14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B685EF34(a1, a2, a3, a4, &qword_1E9DD0828, (uint64_t (*)(uint64_t))_s10SubContextCMa);
}

uint64_t sub_1B685EF34(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v6 = a4;
  uint64_t v7 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v6;
  }
  sub_1B6879144(0, a5, a6, MEMORY[0x1E4FBBD58]);
  uint64_t v10 = sub_1B6E32C58();
  uint64_t v11 = v10;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *a1;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v10 + 64;
  while (v12)
  {
    unint64_t v17 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v18 = v17 | (v13 << 6);
LABEL_26:
    unint64_t v22 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(*(void *)(v6 + 56) + 8 * v18);
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B6E318B8();
    uint64_t v26 = sub_1B6E33988();
    uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v14 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v28) & ~*(void *)(v14 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (v29 + 1 == v30) {
          unint64_t v29 = 0;
        }
        else {
          ++v29;
        }
        uint64_t v31 = *(void *)(v14 + 8 * v29);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v29 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = (void *)(*(void *)(v11 + 48) + 16 * v15);
    void *v16 = v24;
    v16[1] = v23;
    *(void *)(*(void *)(v11 + 56) + 8 * v15) = v25;
    ++*(void *)(v11 + 16);
    if (!--v7) {
      return v11;
    }
  }
  uint64_t v19 = v13 + 1;
  if (v13 + 1 >= v34) {
    return v11;
  }
  unint64_t v20 = v33[v19];
  if (v20) {
    goto LABEL_25;
  }
  uint64_t v19 = v13 + 2;
  if (v13 + 2 >= v34) {
    return v11;
  }
  unint64_t v20 = v33[v19];
  if (v20) {
    goto LABEL_25;
  }
  uint64_t v19 = v13 + 3;
  if (v13 + 3 >= v34) {
    return v11;
  }
  unint64_t v20 = v33[v19];
  if (v20) {
    goto LABEL_25;
  }
  uint64_t v19 = v13 + 4;
  if (v13 + 4 >= v34) {
    return v11;
  }
  unint64_t v20 = v33[v19];
  if (v20)
  {
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v13 = v19;
    goto LABEL_26;
  }
  uint64_t v21 = v13 + 5;
  while (v34 != v21)
  {
    unint64_t v20 = v33[v21++];
    if (v20)
    {
      uint64_t v19 = v21 - 1;
      goto LABEL_25;
    }
  }
  return v11;
}

uint64_t sub_1B685F1AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1B67F7FA8();
  uint64_t v7 = sub_1B6E32C58();
  uint64_t v8 = v7;
  uint64_t v28 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = v7 + 64;
  while (v9)
  {
    unint64_t v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v15 = v14 | (v10 << 6);
LABEL_26:
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v30 = v19[1];
    sub_1B6874B44(*(void *)(v4 + 56) + 96 * v15, (uint64_t)v32);
    sub_1B67F7AF0((uint64_t)v32, (uint64_t)v31);
    sub_1B6E33918();
    sub_1B6E33928();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v21 = sub_1B6E33988();
    uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (v24 + 1 == v25) {
          unint64_t v24 = 0;
        }
        else {
          ++v24;
        }
        uint64_t v26 = *(void *)(v11 + 8 * v24);
      }
      while (v26 == -1);
      unint64_t v12 = __clz(__rbit64(~v26)) + (v24 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v8 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v30;
    sub_1B67F7AF0((uint64_t)v31, *(void *)(v8 + 56) + 96 * v12);
    ++*(void *)(v8 + 16);
    if (!--v5) {
      return v8;
    }
  }
  uint64_t v16 = v10 + 1;
  if (v10 + 1 >= v28) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v10 + 2;
  if (v10 + 2 >= v28) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v10 + 3;
  if (v10 + 3 >= v28) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v10 + 4;
  if (v10 + 4 >= v28) {
    return v8;
  }
  unint64_t v17 = a1[v16];
  if (v17)
  {
LABEL_25:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v10 = v16;
    goto LABEL_26;
  }
  uint64_t v18 = v10 + 5;
  while (v28 != v18)
  {
    unint64_t v17 = a1[v18++];
    if (v17)
    {
      uint64_t v16 = v18 - 1;
      goto LABEL_25;
    }
  }
  return v8;
}

uint64_t sub_1B685F458(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1B62BACD8(0, (unint64_t *)&qword_1E9DD0520, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD58]);
  uint64_t v8 = sub_1B6E32C58();
  uint64_t v9 = v8;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v37 = 0;
  uint64_t v11 = v8 + 64;
  while (v10)
  {
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v17 = v16 | (v37 << 6);
LABEL_26:
    uint64_t v21 = 16 * v17;
    uint64_t v22 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    unint64_t v25 = (uint64_t *)(*(void *)(v4 + 56) + v21);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    uint64_t v28 = sub_1B6E33988();
    uint64_t v29 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v32 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (v31 + 1 == v32) {
          unint64_t v31 = 0;
        }
        else {
          ++v31;
        }
        uint64_t v33 = *(void *)(v11 + 8 * v31);
      }
      while (v33 == -1);
      unint64_t v12 = __clz(__rbit64(~v33)) + (v31 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = 16 * v12;
    unint64_t v14 = (void *)(*(void *)(v9 + 48) + v13);
    *unint64_t v14 = v24;
    v14[1] = v23;
    unint64_t v15 = (void *)(*(void *)(v9 + 56) + v13);
    void *v15 = v26;
    v15[1] = v27;
    ++*(void *)(v9 + 16);
    if (!--v5) {
      return v9;
    }
  }
  uint64_t v18 = v37 + 1;
  if (v37 + 1 >= v36) {
    return v9;
  }
  unint64_t v19 = v35[v18];
  if (v19) {
    goto LABEL_25;
  }
  uint64_t v18 = v37 + 2;
  if (v37 + 2 >= v36) {
    return v9;
  }
  unint64_t v19 = v35[v18];
  if (v19) {
    goto LABEL_25;
  }
  uint64_t v18 = v37 + 3;
  if (v37 + 3 >= v36) {
    return v9;
  }
  unint64_t v19 = v35[v18];
  if (v19) {
    goto LABEL_25;
  }
  uint64_t v18 = v37 + 4;
  if (v37 + 4 >= v36) {
    return v9;
  }
  unint64_t v19 = v35[v18];
  if (v19)
  {
LABEL_25:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v37 = v18;
    goto LABEL_26;
  }
  uint64_t v20 = v37 + 5;
  while (v36 != v20)
  {
    unint64_t v19 = v35[v20++];
    if (v19)
    {
      uint64_t v18 = v20 - 1;
      goto LABEL_25;
    }
  }
  return v9;
}

uint64_t sub_1B685F6FC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1B62BACD8(0, (unint64_t *)&qword_1E9DD07C0, (uint64_t)&_s11CodeSnippetC17SerializationInfoVN, MEMORY[0x1E4FBBD58]);
  uint64_t v6 = sub_1B6E32C58();
  uint64_t v7 = v6;
  if (a2 < 1) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = *a1;
  }
  uint64_t v35 = v4;
  uint64_t v36 = 0;
  uint64_t v9 = v6 + 64;
  while (v8)
  {
    uint64_t v37 = (v8 - 1) & v8;
    unint64_t v13 = __clz(__rbit64(v8)) | (v36 << 6);
LABEL_26:
    uint64_t v17 = *(void *)(v4 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = (uint64_t *)(v17 + 56 * v13);
    uint64_t v22 = v21[1];
    uint64_t v23 = v21[3];
    uint64_t v40 = v21[2];
    uint64_t v24 = v21[5];
    uint64_t v38 = *v21;
    uint64_t v39 = v21[4];
    uint64_t v25 = v21[6];
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    uint64_t v26 = sub_1B6E33988();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (v29 + 1 == v30) {
          unint64_t v29 = 0;
        }
        else {
          ++v29;
        }
        uint64_t v31 = *(void *)(v9 + 8 * v29);
      }
      while (v31 == -1);
      unint64_t v10 = __clz(__rbit64(~v31)) + (v29 << 6);
    }
    unint64_t v8 = v37;
    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = (void *)(*(void *)(v7 + 48) + 16 * v10);
    *uint64_t v11 = v19;
    v11[1] = v20;
    unint64_t v12 = (void *)(*(void *)(v7 + 56) + 56 * v10);
    *unint64_t v12 = v38;
    v12[1] = v22;
    v12[2] = v40;
    v12[3] = v23;
    v12[4] = v39;
    v12[5] = v24;
    void v12[6] = v25;
    ++*(void *)(v7 + 16);
    --v5;
    uint64_t v4 = v35;
    if (!v5) {
      return v7;
    }
  }
  uint64_t v14 = v36 + 1;
  if (v36 + 1 >= a2) {
    return v7;
  }
  unint64_t v15 = a1[v14];
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v14 = v36 + 2;
  if (v36 + 2 >= a2) {
    return v7;
  }
  unint64_t v15 = a1[v14];
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v14 = v36 + 3;
  if (v36 + 3 >= a2) {
    return v7;
  }
  unint64_t v15 = a1[v14];
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v14 = v36 + 4;
  if (v36 + 4 >= a2) {
    return v7;
  }
  unint64_t v15 = a1[v14];
  if (v15)
  {
LABEL_25:
    uint64_t v36 = v14;
    uint64_t v37 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    goto LABEL_26;
  }
  uint64_t v16 = v36 + 5;
  while (a2 != v16)
  {
    unint64_t v15 = a1[v16++];
    if (v15)
    {
      uint64_t v14 = v16 - 1;
      goto LABEL_25;
    }
  }
  return v7;
}

void *sub_1B685FA0C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8, v10);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v26 - v15;
  if (!a3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return a4;
  }
  sub_1B63968D0();
  uint64_t v17 = (void *)sub_1B6E32C58();
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  if (a2 < 1) {
    unint64_t v18 = 0;
  }
  else {
    unint64_t v18 = *a1;
  }
  uint64_t v19 = 0;
  while (v18)
  {
    unint64_t v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v21 = v20 | (v19 << 6);
LABEL_10:
    sub_1B6366C08(a4[6] + *(void *)(v9 + 72) * v21, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    sub_1B6367A74(a4[7] + 160 * v21, (uint64_t)v30);
    sub_1B68737A8((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    sub_1B6366650((uint64_t)v30, (uint64_t)v29);
    sub_1B6366030((uint64_t)v12, (uint64_t)v29, v17);
    if (!--a3) {
      return v17;
    }
  }
  uint64_t v22 = v19 + 1;
  if (v19 + 1 >= v28) {
    return v17;
  }
  unint64_t v23 = v27[v22];
  if (v23) {
    goto LABEL_24;
  }
  uint64_t v22 = v19 + 2;
  if (v19 + 2 >= v28) {
    return v17;
  }
  unint64_t v23 = v27[v22];
  if (v23) {
    goto LABEL_24;
  }
  uint64_t v22 = v19 + 3;
  if (v19 + 3 >= v28) {
    return v17;
  }
  unint64_t v23 = v27[v22];
  if (v23) {
    goto LABEL_24;
  }
  uint64_t v22 = v19 + 4;
  if (v19 + 4 >= v28) {
    return v17;
  }
  unint64_t v23 = v27[v22];
  if (v23)
  {
LABEL_24:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v19 = v22;
    goto LABEL_10;
  }
  uint64_t v24 = v19 + 5;
  while (v28 != v24)
  {
    unint64_t v23 = v27[v24++];
    if (v23)
    {
      uint64_t v22 = v24 - 1;
      goto LABEL_24;
    }
  }
  return v17;
}

void sub_1B685FC84(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_1B6366948(a1 + 32, (uint64_t)&v49, (uint64_t)&qword_1E9DD0538, MEMORY[0x1E4FBB1A0], (uint64_t)&_s8MetadataVN, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B67FB8C0);
  uint64_t v7 = v49;
  uint64_t v8 = v50;
  uint64_t v47 = v49;
  uint64_t v48 = v50;
  long long v43 = v53;
  long long v44 = v54;
  long long v45 = v55;
  uint64_t v46 = v56;
  long long v41 = v51;
  long long v42 = v52;
  uint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_1B62B2CE0(v49, v50);
  char v12 = v10;
  uint64_t v13 = v9[2] + ((v10 & 1) == 0);
  if (v9[3] >= v13)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1B6ACB8DC();
      if (v12) {
        goto LABEL_9;
      }
    }
LABEL_12:
    unint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v19 = (uint64_t *)(v18[6] + 16 * v11);
    *uint64_t v19 = v7;
    v19[1] = v8;
    uint64_t v20 = v18[7] + 88 * v11;
    long long v21 = v42;
    *(_OWORD *)uint64_t v20 = v41;
    *(_OWORD *)(v20 + 16) = v21;
    long long v22 = v43;
    long long v23 = v44;
    long long v24 = v45;
    *(void *)(v20 + 80) = v46;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 64) = v24;
    *(_OWORD *)(v20 + 32) = v22;
    ++v18[2];
    uint64_t v25 = v4 - 1;
    if (v4 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 136;
    while (1)
    {
      sub_1B6366948(v26, (uint64_t)&v49, (uint64_t)&qword_1E9DD0538, MEMORY[0x1E4FBB1A0], (uint64_t)&_s8MetadataVN, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B67FB8C0);
      uint64_t v28 = v49;
      uint64_t v27 = v50;
      uint64_t v47 = v49;
      uint64_t v48 = v50;
      long long v43 = v53;
      long long v44 = v54;
      long long v45 = v55;
      uint64_t v46 = v56;
      long long v41 = v51;
      long long v42 = v52;
      unint64_t v29 = (void *)*a3;
      unint64_t v30 = sub_1B62B2CE0(v49, v50);
      char v32 = v31;
      if (v29[3] < (int64_t)(v29[2] + ((v31 & 1) == 0)))
      {
        sub_1B6AB5694(v29[2] + ((v31 & 1) == 0), 1);
        unint64_t v30 = sub_1B62B2CE0(v28, v27);
        if ((v32 & 1) != (v33 & 1)) {
          goto LABEL_19;
        }
      }
      if (v32) {
        goto LABEL_9;
      }
      uint64_t v34 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v35 = (uint64_t *)(v34[6] + 16 * v30);
      uint64_t *v35 = v28;
      v35[1] = v27;
      uint64_t v36 = v34[7] + 88 * v30;
      long long v37 = v42;
      *(_OWORD *)uint64_t v36 = v41;
      *(_OWORD *)(v36 + 16) = v37;
      long long v38 = v43;
      long long v39 = v44;
      long long v40 = v45;
      *(void *)(v36 + 80) = v46;
      *(_OWORD *)(v36 + 48) = v39;
      *(_OWORD *)(v36 + 64) = v40;
      *(_OWORD *)(v36 + 32) = v38;
      ++v34[2];
      v26 += 104;
      if (!--v25) {
        goto LABEL_18;
      }
    }
  }
  sub_1B6AB5694(v13, a2 & 1);
  uint64_t v14 = sub_1B62B2CE0(v7, v8);
  if ((v12 & 1) == (v15 & 1))
  {
    unint64_t v11 = v14;
    if ((v12 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v16 = (void *)swift_allocError();
    swift_willThrow();
    id v57 = v16;
    id v17 = v16;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1B666BD18((uint64_t)&v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_20;
  }
LABEL_19:
  sub_1B6E33838();
  __break(1u);
LABEL_20:
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B68600E8(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8, v9);
  unint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6873898();
  MEMORY[0x1F4188790](v12, v13);
  id v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v49) = a2;
  v46[1] = v3;
  uint64_t v47 = v8;
  uint64_t v19 = (uint64_t)&v17[*(int *)(v14 + 48)];
  v46[0] = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = a1 + v46[0];
  uint64_t v51 = *(void *)(v15 + 72);
  uint64_t v48 = a1;
  swift_bridgeObjectRetain();
  sub_1B6366C08(v20, (uint64_t)v17, (uint64_t (*)(void))sub_1B6873898);
  unsigned __int8 v22 = v17[4];
  unsigned int v55 = *(_DWORD *)v17;
  uint64_t v21 = v55;
  unsigned __int8 v56 = v22;
  uint64_t v50 = v19;
  sub_1B68737A8(v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  long long v23 = (void *)*a3;
  LOBYTE(v52) = v22;
  unint64_t v25 = sub_1B69FAA7C(v21 | ((unint64_t)v22 << 32));
  char v26 = v24;
  uint64_t v27 = v23[2] + ((v24 & 1) == 0);
  if (v23[3] >= v27)
  {
    if (v49)
    {
      if (v24) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1B6AD135C();
      if (v26) {
        goto LABEL_9;
      }
    }
LABEL_12:
    char v32 = (void *)*a3;
    *(void *)(*a3 + 8 * (v25 >> 6) + 64) |= 1 << v25;
    uint64_t v33 = v32[6] + 8 * v25;
    *(_DWORD *)uint64_t v33 = v21;
    *(unsigned char *)(v33 + 4) = v22;
    uint64_t v34 = v32[7];
    uint64_t v49 = *(void *)(v47 + 72);
    sub_1B68737A8((uint64_t)v11, v34 + v49 * v25, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    ++v32[2];
    uint64_t v35 = v18 - 1;
    if (!v35)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v36 = v48 + v51 + v46[0];
    while (1)
    {
      sub_1B6366C08(v36, (uint64_t)v17, (uint64_t (*)(void))sub_1B6873898);
      unsigned __int8 v38 = v17[4];
      unsigned int v55 = *(_DWORD *)v17;
      uint64_t v37 = v55;
      unsigned __int8 v56 = v38;
      sub_1B68737A8(v50, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      long long v39 = (void *)*a3;
      LOBYTE(v52) = v38;
      unint64_t v40 = sub_1B69FAA7C(v37 | ((unint64_t)v38 << 32));
      char v42 = v41;
      if (v39[3] < (int64_t)(v39[2] + ((v41 & 1) == 0)))
      {
        sub_1B6ABF54C(v39[2] + ((v41 & 1) == 0), 1);
        LOBYTE(v52) = v38;
        unint64_t v40 = sub_1B69FAA7C(v37 | ((unint64_t)v38 << 32));
        if ((v42 & 1) != (v43 & 1)) {
          goto LABEL_19;
        }
      }
      if (v42) {
        goto LABEL_9;
      }
      long long v44 = (void *)*a3;
      *(void *)(*a3 + 8 * (v40 >> 6) + 64) |= 1 << v40;
      uint64_t v45 = v44[6] + 8 * v40;
      *(_DWORD *)uint64_t v45 = v37;
      *(unsigned char *)(v45 + 4) = v38;
      sub_1B68737A8((uint64_t)v11, v44[7] + v49 * v40, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      ++v44[2];
      v36 += v51;
      if (!--v35) {
        goto LABEL_18;
      }
    }
  }
  sub_1B6ABF54C(v27, v49 & 1);
  LOBYTE(v52) = v22;
  unint64_t v28 = sub_1B69FAA7C(v21 | ((unint64_t)v22 << 32));
  if ((v26 & 1) == (v29 & 1))
  {
    unint64_t v25 = v28;
    if ((v26 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_9:
    unint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v54 = v30;
    id v31 = v30;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1B62BFF14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_20;
  }
LABEL_19:
  sub_1B6E33838();
  __break(1u);
LABEL_20:
  uint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B6860674(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = a1[1];
  if (v8)
  {
    uint64_t v10 = *a1;
    unint64_t v11 = (void *)*a3;
    if (a2)
    {
      uint64_t v12 = (uint64_t *)(v11[7] + 16 * a4);
      *uint64_t v12 = v10;
      v12[1] = v8;
    }
    else
    {
      sub_1B6AD7518(a4, a5, a6, v10, v8, v11);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1B6AC8504(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

unint64_t sub_1B6860728(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, unint64_t a5)
{
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19, v20);
  unsigned __int8 v22 = &v25[-v21];
  sub_1B6366C08(a1, (uint64_t)v13, (uint64_t (*)(void))sub_1B63B2040);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    unint64_t result = sub_1B62BFF14((uint64_t)v13, (uint64_t (*)(void))sub_1B63B2040);
    if (a2) {
      return sub_1B6AC9C7C(a4, *a3);
    }
  }
  else
  {
    sub_1B68737A8((uint64_t)v13, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    char v24 = (void *)*a3;
    if (a2)
    {
      return sub_1B68737A8((uint64_t)v22, v24[7] + *(void *)(v15 + 72) * a4, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    }
    else
    {
      sub_1B68737A8((uint64_t)v22, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      return sub_1B6AD7F38(a4, a5 | ((HIDWORD(a5) & 1) << 32), (uint64_t)v18, v24);
    }
  }
  return result;
}

uint64_t sub_1B6860964(uint64_t *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6860990(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AD84F4, (void (*)(uint64_t, void))sub_1B6ACAA98);
}

uint64_t sub_1B6860990(uint64_t *a1, char a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, void))
{
  uint64_t v9 = *a1;
  if (*a1)
  {
    uint64_t v10 = *a3;
    if (a2)
    {
      *(void *)(*(void *)(v10 + 56) + 8 * a4) = v9;
    }
    else
    {
      a6(a4, a5, v9, v10);
      sub_1B67FAC7C(a5);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    a7(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6860A54(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1B6860ADC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  swift_retain();
  LOBYTE(a2) = sub_1B66DD7AC(a1, (uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, a2);
  uint64_t result = swift_release();
  *a3 = a2;
  return result;
}

uint64_t sub_1B6860B44(uint64_t result)
{
  if (result != 0xFFFFFFFFLL)
  {
    uint64_t v1 = swift_retain();
    MEMORY[0x1F4188790](v1, v2);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B687BEBC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6860C04(uint64_t a1, __int16 *a2)
{
  __int16 v3 = *a2;
  uint64_t v4 = *((void *)a2 + 1);
  uint64_t v5 = *((void *)a2 + 2);
  char v6 = *((unsigned char *)a2 + 24);
  char v7 = *((unsigned char *)a2 + 25);
  char v8 = *((unsigned char *)a2 + 26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_WORD *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 25) = v7;
  *(unsigned char *)(a1 + 26) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6860C94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  v20[3] = &type metadata for GraphDebuggingComponent;
  uint64_t v21 = &off_1F0F8F2C8;
  unint64_t v6 = HIDWORD(a3);
  v20[0] = a1;
  v20[1] = a2;
  sub_1B62C14BC(v20, (uint64_t)&type metadata for GraphDebuggingComponent);
  uint64_t DynamicType = swift_getDynamicType();
  char v8 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B636C318(0, (void (*)(unsigned char *))sub_1B687CA38);
  swift_release();
  uint64_t v9 = (uint64_t (**)(uint64_t, void *))v8[1];
  if (v9[6](DynamicType, v9))
  {
    swift_retain();
    uint64_t v10 = sub_1B6C316A0(a3, (uint64_t)&type metadata for IsSubEntityOf);
    char v12 = v11;
    swift_release();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
      swift_retain();
      if (v13)
      {
        int v14 = *(unsigned __int8 *)(v13 + 80);
        MEMORY[0x1BA9B8670](v13 + 48);
        uint64_t v13 = *(void *)(v13 + 56);
      }
      else
      {
        int v14 = 0;
      }
      swift_unknownObjectUnownedInit();
      v17[0] = a4;
      uint64_t v17[2] = v13;
      swift_unknownObjectUnownedAssign();
      swift_unownedRetain();
      swift_unknownObjectRelease();
      char v18 = v14;
      sub_1B636C4E0((uint64_t)v17, (uint64_t)v19);
      sub_1B68529FC(v10, a3);
      sub_1B636C450((uint64_t)v19);
      if (v14) {
        sub_1B6A667F0(1);
      }
      swift_release();
    }
  }
  type metadata accessor for VFXAttribute();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  swift_retain();
  swift_unownedRetain();
  swift_release();
  *(_DWORD *)(v15 + 24) = a3;
  *(_DWORD *)(v15 + 28) = v6;
  *(void *)(v15 + 32) = DynamicType;
  *(void *)(v15 + 40) = v9;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v20);
  return v15;
}

uint64_t sub_1B6860ECC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, void (*a6)(uint64_t, uint64_t *), void (*a7)(unsigned char *))
{
  unint64_t v13 = HIDWORD(a2);
  uint64_t v29 = a4(0);
  uint64_t v30 = a5;
  int v14 = sub_1B62C12C4(v28);
  a6(a1, v14);
  sub_1B62C14BC(v28, v29);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v16 = v30;
  swift_retain();
  sub_1B636C318(0, a7);
  swift_release();
  uint64_t v17 = *(void *)(v16 + 8);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(DynamicType, v17))
  {
    swift_retain();
    uint64_t v18 = sub_1B6C316A0(a2, (uint64_t)&type metadata for IsSubEntityOf);
    char v20 = v19;
    swift_release();
    if ((v20 & 1) == 0)
    {
      uint64_t v21 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
      swift_retain();
      if (v21)
      {
        int v22 = *(unsigned __int8 *)(v21 + 80);
        MEMORY[0x1BA9B8670](v21 + 48);
        uint64_t v21 = *(void *)(v21 + 56);
      }
      else
      {
        int v22 = 0;
      }
      swift_unknownObjectUnownedInit();
      v25[0] = a3;
      v25[2] = v21;
      swift_unknownObjectUnownedAssign();
      swift_unownedRetain();
      swift_unknownObjectRelease();
      char v26 = v22;
      sub_1B636C4E0((uint64_t)v25, (uint64_t)v27);
      sub_1B68529FC(v18, a2);
      sub_1B636C450((uint64_t)v27);
      if (v22) {
        sub_1B6A667F0(1);
      }
      swift_release();
    }
  }
  type metadata accessor for VFXAttribute();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a3;
  swift_retain();
  swift_unownedRetain();
  swift_release();
  *(_DWORD *)(v23 + 24) = a2;
  *(_DWORD *)(v23 + 28) = v13;
  *(void *)(v23 + 32) = DynamicType;
  *(void *)(v23 + 40) = v17;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
  return v23;
}

uint64_t sub_1B6861100(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6861158(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6861200(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6861268(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = 0, (sub_1B6E334B8() & 1) != 0))
  {
    sub_1B629C37C((uint64_t)(a1 + 2), (uint64_t)v12);
    sub_1B629C37C((uint64_t)(a2 + 2), (uint64_t)&v11);
    uint64_t v6 = sub_1B6A3D8B8();
    uint64_t v8 = v7;
    if (v6 == sub_1B6A3D8B8() && v8 == v9) {
      char v5 = 1;
    }
    else {
      char v5 = sub_1B6E334B8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t sub_1B6861344(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_1B6E334B8(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (v8 = sub_1B6E334B8(), uint64_t result = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a2 + 40);
      if (v9)
      {
        if (!v10) {
          return 0;
        }
        if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v9 != v10)
        {
          char v11 = sub_1B6E334B8();
          uint64_t result = 0;
          if ((v11 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v13 = *(void *)(a2 + 56);
      if (v12)
      {
        if (v13)
        {
          if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v12 != v13)
          {
            char v14 = sub_1B6E334B8();
            uint64_t result = 0;
            if ((v14 & 1) == 0) {
              return result;
            }
          }
LABEL_25:
          char v15 = *(unsigned char *)(a2 + 68);
          if (*(unsigned char *)(a1 + 68))
          {
            if ((*(unsigned char *)(a2 + 68) & 1) == 0) {
              return 0;
            }
          }
          else
          {
            if (*(_DWORD *)(a1 + 64) != *(_DWORD *)(a2 + 64)) {
              char v15 = 1;
            }
            if (v15) {
              return 0;
            }
          }
          return 1;
        }
      }
      else if (!v13)
      {
        goto LABEL_25;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B6861474(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2
    || *(_DWORD *)(a1 + 4) != *(_DWORD *)(a2 + 4)
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(void *)(a1 + 24) != *(void *)(a2 + 24))
  {
LABEL_5:
    char v4 = 0;
    return v4 & 1;
  }
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
    || (char v4 = 0, (sub_1B6E334B8() & 1) != 0))
  {
    uint64_t v6 = *(void *)(a2 + 48);
    if (!*(void *)(a1 + 48))
    {
      char v4 = v6 == 0;
      return v4 & 1;
    }
    if (v6)
    {
      sub_1B6E32768();
      swift_retain_n();
      char v4 = sub_1B6E31708();
      swift_release();
      swift_release();
      return v4 & 1;
    }
    goto LABEL_5;
  }
  return v4 & 1;
}

uint64_t sub_1B6861588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v81 = MEMORY[0x1E4FBC860];
    sub_1B6C3D3D8(0, v3, 0);
    uint64_t v4 = v81;
    uint64_t v58 = a1 + 32;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = 0;
    int64_t v59 = v3;
    while (1)
    {
      uint64_t v66 = v6;
      uint64_t v67 = v4;
      BOOL v7 = (unsigned int *)(v58 + 40 * v6);
      uint64_t v8 = *v7;
      uint64_t v9 = v7[1];
      uint64_t v11 = v7[2];
      uint64_t v10 = v7[3];
      uint64_t v13 = *((void *)v7 + 2);
      uint64_t v12 = *((void *)v7 + 3);
      char v64 = *((unsigned char *)v7 + 33);
      char v65 = *((unsigned char *)v7 + 32);
      swift_bridgeObjectRetain();
      uint64_t v69 = v12;
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1B6B1BE94(v8 | (v9 << 32), 0, ObjectType, a3);
      unint64_t v16 = HIDWORD(v14);
      if (v15) {
        int v17 = v8;
      }
      else {
        int v17 = v14;
      }
      if (v15) {
        LODWORD(v16) = v9;
      }
      int v62 = v16;
      int v63 = v17;
      unint64_t v18 = sub_1B6B1BE94(v11 | (v10 << 32), 1, ObjectType, a3);
      unint64_t v20 = HIDWORD(v18);
      if (v19) {
        int v21 = v11;
      }
      else {
        int v21 = v18;
      }
      if (v19) {
        LODWORD(v20) = v10;
      }
      int v60 = v20;
      int v61 = v21;
      uint64_t v68 = v13;
      if (!v13) {
        break;
      }
      int64_t v22 = *(void *)(v13 + 16);
      if (!v22)
      {
        uint64_t v37 = MEMORY[0x1E4FBC860];
        uint64_t v24 = MEMORY[0x1E4FBC860];
        uint64_t v38 = v69;
LABEL_29:
        int64_t v39 = *(void *)(v38 + 16);
        if (v39) {
          goto LABEL_30;
        }
        goto LABEL_26;
      }
      uint64_t v79 = MEMORY[0x1E4FBC860];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6C3D5DC(0, v22, 0);
      uint64_t v23 = 0;
      uint64_t v24 = v79;
      do
      {
        uint64_t v25 = v13 + v23;
        uint64_t v26 = *(unsigned int *)(v13 + v23 + 32);
        uint64_t v27 = *(unsigned int *)(v25 + 36);
        long long v77 = *(_OWORD *)(v25 + 40);
        uint64_t v75 = *(void *)(v25 + 56);
        uint64_t v28 = *(void *)(v25 + 72);
        uint64_t v73 = *(void *)(v25 + 64);
        uint64_t v29 = *(void *)(v25 + 80);
        swift_bridgeObjectRetain();
        swift_retain();
        unint64_t v30 = sub_1B6B1BE94(v26 | (v27 << 32), 0, ObjectType, a3);
        if (v31) {
          int v32 = v26;
        }
        else {
          int v32 = v30;
        }
        if (v31) {
          int v33 = v27;
        }
        else {
          int v33 = HIDWORD(v30);
        }
        unint64_t v35 = *(void *)(v79 + 16);
        unint64_t v34 = *(void *)(v79 + 24);
        if (v35 >= v34 >> 1) {
          sub_1B6C3D5DC(v34 > 1, v35 + 1, 1);
        }
        *(void *)(v79 + 16) = v35 + 1;
        uint64_t v36 = v79 + 56 * v35;
        *(_DWORD *)(v36 + 32) = v32;
        *(_DWORD *)(v36 + 36) = v33;
        *(_OWORD *)(v36 + 40) = v77;
        *(void *)(v36 + 56) = v75;
        *(void *)(v36 + 64) = v73;
        *(void *)(v36 + 72) = v28;
        *(void *)(v36 + 80) = v29;
        v23 += 56;
        --v22;
        uint64_t v13 = v68;
      }
      while (v22);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v37 = MEMORY[0x1E4FBC860];
      uint64_t v4 = v67;
      uint64_t v38 = v69;
      int64_t v39 = *(void *)(v69 + 16);
      if (v39)
      {
LABEL_30:
        uint64_t v80 = v37;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6C3D5DC(0, v39, 0);
        uint64_t v41 = 0;
        uint64_t v40 = v80;
        do
        {
          uint64_t v42 = v38 + v41;
          uint64_t v43 = *(unsigned int *)(v38 + v41 + 32);
          uint64_t v44 = *(unsigned int *)(v42 + 36);
          long long v78 = *(_OWORD *)(v42 + 40);
          uint64_t v72 = *(void *)(v42 + 64);
          uint64_t v74 = *(void *)(v42 + 56);
          uint64_t v45 = *(void *)(v42 + 80);
          uint64_t v76 = *(void *)(v42 + 72);
          swift_bridgeObjectRetain();
          swift_retain();
          unint64_t v46 = sub_1B6B1BE94(v43 | (v44 << 32), 0, ObjectType, a3);
          if (v47) {
            int v48 = v43;
          }
          else {
            int v48 = v46;
          }
          if (v47) {
            int v49 = v44;
          }
          else {
            int v49 = HIDWORD(v46);
          }
          unint64_t v51 = *(void *)(v80 + 16);
          unint64_t v50 = *(void *)(v80 + 24);
          if (v51 >= v50 >> 1) {
            sub_1B6C3D5DC(v50 > 1, v51 + 1, 1);
          }
          *(void *)(v80 + 16) = v51 + 1;
          uint64_t v52 = v80 + 56 * v51;
          *(_DWORD *)(v52 + 32) = v48;
          *(_DWORD *)(v52 + 36) = v49;
          *(_OWORD *)(v52 + 40) = v78;
          *(void *)(v52 + 56) = v74;
          *(void *)(v52 + 64) = v72;
          *(void *)(v52 + 72) = v76;
          *(void *)(v52 + 80) = v45;
          v41 += 56;
          --v39;
          uint64_t v38 = v69;
        }
        while (v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease();
        uint64_t v4 = v67;
        goto LABEL_41;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v37;
LABEL_41:
      unint64_t v54 = *(void *)(v4 + 16);
      unint64_t v53 = *(void *)(v4 + 24);
      uint64_t v55 = v66;
      if (v54 >= v53 >> 1)
      {
        sub_1B6C3D3D8(v53 > 1, v54 + 1, 1);
        uint64_t v55 = v66;
      }
      uint64_t v6 = v55 + 1;
      *(void *)(v4 + 16) = v54 + 1;
      uint64_t v56 = v4 + 40 * v54;
      *(_DWORD *)(v56 + 32) = v63;
      *(_DWORD *)(v56 + 36) = v62;
      *(_DWORD *)(v56 + 40) = v61;
      *(_DWORD *)(v56 + 44) = v60;
      *(void *)(v56 + 48) = v24;
      *(void *)(v56 + 56) = v40;
      *(unsigned char *)(v56 + 64) = v65;
      *(unsigned char *)(v56 + 65) = v64;
      *(unsigned char *)(v56 + 66) = 1;
      if (v6 == v59) {
        return v4;
      }
    }
    uint64_t v24 = 0;
    uint64_t v38 = v69;
    uint64_t v37 = MEMORY[0x1E4FBC860];
    goto LABEL_29;
  }
  return v4;
}

uint64_t sub_1B6861A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v4 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v38 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v37 = (char *)&v31 - v9;
  sub_1B6396740(0, (unint64_t *)&qword_1EB980700, MEMORY[0x1E4FBBD58]);
  uint64_t v10 = sub_1B6E32C28();
  uint64_t v11 = 0;
  uint64_t v40 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v43 = v10;
  int64_t v35 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v36 = v10 + 64;
  int64_t v33 = v35 - 5;
  uint64_t v34 = v13;
  uint64_t v32 = v13 + 40;
  uint64_t v19 = (uint64_t)v37;
  uint64_t v18 = (uint64_t)v38;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      uint64_t v44 = v11;
      unint64_t v21 = v20 | (v11 << 6);
      goto LABEL_5;
    }
    uint64_t v28 = v11 + 1;
    if (v11 + 1 >= v35) {
      return v43;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v28);
    if (!v29)
    {
      uint64_t v28 = v11 + 2;
      if (v11 + 2 >= v35) {
        return v43;
      }
      unint64_t v29 = *(void *)(v34 + 8 * v28);
      if (!v29)
      {
        uint64_t v28 = v11 + 3;
        if (v11 + 3 >= v35) {
          return v43;
        }
        unint64_t v29 = *(void *)(v34 + 8 * v28);
        if (!v29)
        {
          uint64_t v28 = v11 + 4;
          if (v11 + 4 >= v35) {
            return v43;
          }
          unint64_t v29 = *(void *)(v34 + 8 * v28);
          if (!v29) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v17 = (v29 - 1) & v29;
    unint64_t v21 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v44 = v28;
LABEL_5:
    uint64_t v22 = *(void *)(v40 + 48) + 8 * v21;
    int v23 = *(_DWORD *)v22;
    char v24 = *(unsigned char *)(v22 + 4);
    unint64_t v25 = *(void *)(v39 + 72) * v21;
    sub_1B6366C08(*(void *)(v40 + 56) + v25, v19, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B6366C08(v19, v18, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    sub_1B685A85C(v41, v42);
    sub_1B62BFF14(v19, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    *(void *)(v36 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = v43;
    uint64_t v27 = *(void *)(v43 + 48) + 8 * v21;
    *(_DWORD *)uint64_t v27 = v23;
    *(unsigned char *)(v27 + 4) = v24;
    sub_1B68737A8(v18, *(void *)(v26 + 56) + v25, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    ++*(void *)(v26 + 16);
    uint64_t v11 = v44;
  }
  while (v33 != v11)
  {
    unint64_t v29 = *(void *)(v32 + 8 * v11++);
    if (v29)
    {
      uint64_t v28 = v11 + 4;
      goto LABEL_18;
    }
  }
  return v43;
}

void *sub_1B6861D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B62BACD8(0, (unint64_t *)&qword_1EB980760, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBBD58]);
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = 0;
  uint64_t v35 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  uint64_t v37 = (void *)v4;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v34 = v4 + 64;
  uint64_t v32 = v7;
  uint64_t v31 = v7 + 40;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      uint64_t v39 = v5;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_5;
    }
    uint64_t v28 = v5 + 1;
    if (v5 + 1 >= v33) {
      return v37;
    }
    unint64_t v29 = *(void *)(v32 + 8 * v28);
    if (!v29)
    {
      uint64_t v28 = v5 + 2;
      if (v5 + 2 >= v33) {
        return v37;
      }
      unint64_t v29 = *(void *)(v32 + 8 * v28);
      if (!v29)
      {
        uint64_t v28 = v5 + 3;
        if (v5 + 3 >= v33) {
          return v37;
        }
        unint64_t v29 = *(void *)(v32 + 8 * v28);
        if (!v29)
        {
          uint64_t v28 = v5 + 4;
          if (v5 + 4 >= v33) {
            return v37;
          }
          unint64_t v29 = *(void *)(v32 + 8 * v28);
          if (!v29) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v29 - 1) & v29;
    unint64_t v13 = __clz(__rbit64(v29)) + (v28 << 6);
    uint64_t v39 = v28;
LABEL_5:
    uint64_t v14 = 16 * v13;
    uint64_t v15 = (uint64_t *)(*(void *)(v35 + 48) + 16 * v13);
    uint64_t v16 = v15[1];
    uint64_t v38 = *v15;
    unint64_t v17 = (unsigned int *)(*(void *)(v35 + 56) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *((void *)v17 + 1);
    uint64_t ObjectType = swift_getObjectType();
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v22 = sub_1B6B1BE94(v18 | (v19 << 32), 0, ObjectType, a3);
    unint64_t v24 = HIDWORD(v22);
    if (v23) {
      int v25 = v18;
    }
    else {
      int v25 = v22;
    }
    if (v23) {
      LODWORD(v24) = v19;
    }
    *(void *)(v34 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v26 = (void *)(v37[6] + v14);
    void *v26 = v38;
    v26[1] = v16;
    uint64_t v27 = v37[7] + v14;
    *(_DWORD *)uint64_t v27 = v25;
    *(_DWORD *)(v27 + 4) = v24;
    *(void *)(v27 + 8) = v20;
    ++v37[2];
    uint64_t v5 = v39;
  }
  while (v33 - 5 != v5)
  {
    unint64_t v29 = *(void *)(v31 + 8 * v5++);
    if (v29)
    {
      uint64_t v28 = v5 + 4;
      goto LABEL_23;
    }
  }
  return v37;
}

uint64_t sub_1B6861FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1B6C3D468(0, v3, 0);
    uint64_t v4 = v43;
    uint64_t v34 = a1 + 32;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = 0;
    int64_t v33 = v3;
    do
    {
      uint64_t v7 = (unsigned int *)(v34 + 24 * v6);
      uint64_t v8 = *v7;
      uint64_t v9 = v7[1];
      uint64_t v10 = *((void *)v7 + 1);
      uint64_t v11 = *((void *)v7 + 2);
      swift_retain_n();
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1B6B1BE94(v8 | (v9 << 32), 0, ObjectType, a3);
      unint64_t v14 = HIDWORD(v12);
      if (v13) {
        int v15 = v8;
      }
      else {
        int v15 = v12;
      }
      if (v13) {
        LODWORD(v14) = v9;
      }
      int v38 = v14;
      int v39 = v15;
      int64_t v16 = *(void *)(v11 + 16);
      if (v16)
      {
        uint64_t v35 = v10;
        uint64_t v36 = v6;
        uint64_t v37 = v4;
        uint64_t v42 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_1B6C3D4A8(0, v16, 0);
        uint64_t v17 = v11;
        uint64_t v18 = v42;
        uint64_t v19 = (uint64_t *)(v17 + 40);
        do
        {
          uint64_t v20 = *((unsigned int *)v19 - 2);
          uint64_t v21 = *((unsigned int *)v19 - 1);
          uint64_t v22 = *v19;
          swift_retain_n();
          unint64_t v23 = sub_1B6B1BE94(v20 | (v21 << 32), 0, ObjectType, a3);
          char v25 = v24;
          swift_release();
          if ((v25 & 1) == 0)
          {
            LODWORD(v20) = v23;
            LODWORD(v21) = HIDWORD(v23);
          }
          unint64_t v27 = *(void *)(v42 + 16);
          unint64_t v26 = *(void *)(v42 + 24);
          if (v27 >= v26 >> 1) {
            sub_1B6C3D4A8(v26 > 1, v27 + 1, 1);
          }
          *(void *)(v42 + 16) = v27 + 1;
          uint64_t v28 = v42 + 16 * v27;
          *(_DWORD *)(v28 + 32) = v20;
          *(_DWORD *)(v28 + 36) = v21;
          *(void *)(v28 + 40) = v22;
          v19 += 2;
          --v16;
        }
        while (v16);
        uint64_t v10 = v35;
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease();
        int64_t v3 = v33;
        uint64_t v6 = v36;
        uint64_t v4 = v37;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v18 = MEMORY[0x1E4FBC860];
      }
      unint64_t v30 = *(void *)(v4 + 16);
      unint64_t v29 = *(void *)(v4 + 24);
      if (v30 >= v29 >> 1) {
        sub_1B6C3D468(v29 > 1, v30 + 1, 1);
      }
      ++v6;
      *(void *)(v4 + 16) = v30 + 1;
      uint64_t v31 = v4 + 24 * v30;
      *(_DWORD *)(v31 + 32) = v39;
      *(_DWORD *)(v31 + 36) = v38;
      *(void *)(v31 + 40) = v10;
      *(void *)(v31 + 48) = v18;
    }
    while (v6 != v3);
  }
  return v4;
}

void *sub_1B6862238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B62BACD8(0, (unint64_t *)&qword_1EB980760, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBBD58]);
  uint64_t v4 = sub_1B6E32C28();
  uint64_t v5 = 0;
  uint64_t v36 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  int v38 = (void *)v4;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v35 = v4 + 64;
  uint64_t v33 = v7;
  uint64_t v32 = v7 + 40;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      uint64_t v40 = v5;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_5;
    }
    uint64_t v29 = v5 + 1;
    if (v5 + 1 >= v34) {
      return v38;
    }
    unint64_t v30 = *(void *)(v33 + 8 * v29);
    if (!v30)
    {
      uint64_t v29 = v5 + 2;
      if (v5 + 2 >= v34) {
        return v38;
      }
      unint64_t v30 = *(void *)(v33 + 8 * v29);
      if (!v30)
      {
        uint64_t v29 = v5 + 3;
        if (v5 + 3 >= v34) {
          return v38;
        }
        unint64_t v30 = *(void *)(v33 + 8 * v29);
        if (!v30)
        {
          uint64_t v29 = v5 + 4;
          if (v5 + 4 >= v34) {
            return v38;
          }
          unint64_t v30 = *(void *)(v33 + 8 * v29);
          if (!v30) {
            break;
          }
        }
      }
    }
LABEL_29:
    unint64_t v11 = (v30 - 1) & v30;
    unint64_t v13 = __clz(__rbit64(v30)) + (v29 << 6);
    uint64_t v40 = v29;
LABEL_5:
    uint64_t v14 = 16 * v13;
    int v15 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v13);
    uint64_t v16 = v15[1];
    uint64_t v39 = *v15;
    uint64_t v17 = (unsigned int *)(*(void *)(v36 + 56) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *((void *)v17 + 1);
    uint64_t ObjectType = swift_getObjectType();
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v22 = sub_1B6B1BE94(v18 | (v19 << 32), 0, ObjectType, a3);
    unint64_t v24 = HIDWORD(v22);
    if (HIDWORD(v22)) {
      int v25 = -1;
    }
    else {
      int v25 = v18;
    }
    if (HIDWORD(v22)) {
      int v26 = HIDWORD(v22);
    }
    else {
      int v26 = v19;
    }
    if (v22 == -1) {
      LODWORD(v24) = v26;
    }
    else {
      int v25 = v22;
    }
    if (v23)
    {
      int v25 = v18;
      LODWORD(v24) = v19;
    }
    *(void *)(v35 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    unint64_t v27 = (void *)(v38[6] + v14);
    *unint64_t v27 = v39;
    v27[1] = v16;
    uint64_t v28 = v38[7] + v14;
    *(_DWORD *)uint64_t v28 = v25;
    *(_DWORD *)(v28 + 4) = v24;
    *(void *)(v28 + 8) = v20;
    ++v38[2];
    uint64_t v5 = v40;
  }
  while (v34 - 5 != v5)
  {
    unint64_t v30 = *(void *)(v32 + 8 * v5++);
    if (v30)
    {
      uint64_t v29 = v5 + 4;
      goto LABEL_29;
    }
  }
  return v38;
}

uint64_t sub_1B68624B8(void *a1, uint64_t (*a2)(char *, unint64_t, char *), uint64_t a3)
{
  int v60 = a2;
  uint64_t v61 = a3;
  sub_1B6873628(0);
  uint64_t v59 = v5;
  MEMORY[0x1F4188790](v5, v6);
  id v57 = (unsigned int *)((char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v58 = (_DWORD *)((char *)v49 - v10);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v56 = (char *)v49 - v13;
  sub_1B6873898();
  uint64_t v54 = *(void *)(v14 - 8);
  uint64_t v55 = v14;
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = a1[2];
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (v18)
  {
    v49[1] = v3;
    uint64_t v66 = MEMORY[0x1E4FBC860];
    sub_1B6C3D5FC(0, v18, 0);
    uint64_t v20 = sub_1B6860A54((uint64_t)a1);
    int v62 = a1 + 8;
    uint64_t v21 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
    uint64_t v22 = 0;
    uint64_t v23 = *(void *)(*(void *)(v21 - 8) + 72);
    unint64_t v51 = a1;
    uint64_t v52 = v23;
    uint64_t v19 = v66;
    unint64_t v50 = a1 + 11;
    int64_t v53 = v18;
    do
    {
      uint64_t v63 = v22;
      uint64_t v64 = v20;
      uint64_t v24 = v19;
      uint64_t v25 = v59;
      int v26 = v17;
      unint64_t v27 = v56;
      uint64_t v28 = (uint64_t)&v56[*(int *)(v59 + 48)];
      uint64_t v29 = a1[6] + 8 * v20;
      int v30 = *(_DWORD *)v29;
      char v31 = *(unsigned char *)(v29 + 4);
      sub_1B6366C08(a1[7] + v52 * v20, v28, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      *(_DWORD *)unint64_t v27 = v30;
      v27[4] = v31;
      uint64_t v32 = v58;
      *uint64_t v58 = v30;
      *((unsigned char *)v32 + 4) = v31;
      sub_1B6366C08(v28, (uint64_t)v32 + *(int *)(v25 + 48), (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      uint64_t v33 = (uint64_t)v32;
      int64_t v34 = v57;
      sub_1B68737A8(v33, (uint64_t)v57, (uint64_t (*)(void))sub_1B6873628);
      uint64_t v35 = (uint64_t)v27;
      uint64_t v17 = v26;
      sub_1B62BFF14(v35, (uint64_t (*)(void))sub_1B6873628);
      uint64_t v36 = *v34;
      uint64_t v37 = *(int *)(v25 + 48);
      uint64_t v19 = v24;
      int v38 = &v26[*(int *)(v55 + 48)];
      unsigned __int8 v65 = *((unsigned char *)v34 + 4);
      uint64_t v39 = v60(v38, v36 | ((unint64_t)v65 << 32), (char *)v34 + v37);
      *(_DWORD *)int v26 = v39;
      v26[4] = BYTE4(v39) & 1;
      sub_1B62BFF14((uint64_t)v34, (uint64_t (*)(void))sub_1B6873628);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D5FC(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v19 = v66;
      }
      unint64_t v41 = *(void *)(v19 + 16);
      unint64_t v40 = *(void *)(v19 + 24);
      int64_t v42 = v53;
      unint64_t v43 = v64;
      if (v41 >= v40 >> 1)
      {
        sub_1B6C3D5FC(v40 > 1, v41 + 1, 1);
        uint64_t v19 = v66;
      }
      *(void *)(v19 + 16) = v41 + 1;
      sub_1B68737A8((uint64_t)v17, v19+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v41, (uint64_t (*)(void))sub_1B6873898);
      unint64_t v44 = v43 >> 6;
      if ((v62[v43 >> 6] & (-2 << v43)) != 0)
      {
        uint64_t v20 = __clz(__rbit64(v62[v43 >> 6] & (-2 << v43))) | v43 & 0xFFFFFFFFFFFFFFC0;
        a1 = v51;
      }
      else
      {
        a1 = v51;
        uint64_t v20 = 1 << *((unsigned char *)v51 + 32);
        unint64_t v45 = v44 + 1;
        unint64_t v46 = (unint64_t)(v20 + 63) >> 6;
        if (v44 + 1 < v46)
        {
          unint64_t v47 = v62[v45];
          if (!v47)
          {
            unint64_t v45 = v44 + 2;
            if (v44 + 2 >= v46) {
              goto LABEL_4;
            }
            unint64_t v47 = v62[v45];
            if (!v47)
            {
              while (v46 - 3 != v44)
              {
                unint64_t v47 = v50[v44++];
                if (v47)
                {
                  unint64_t v45 = v44 + 2;
                  goto LABEL_12;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_12:
          uint64_t v20 = __clz(__rbit64(v47)) + (v45 << 6);
        }
      }
LABEL_4:
      uint64_t v22 = v63 + 1;
    }
    while (v63 + 1 != v42);
  }
  return v19;
}

uint64_t sub_1B6862904(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1B6C3D4A8(0, v2, 0);
    uint64_t v3 = v35;
    uint64_t v31 = a2;
    uint64_t v30 = OBJC_IVAR____TtC3VFX15DefaultRemapper_isReversed;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    uint64_t v7 = &type metadata for Entity;
    do
    {
      uint64_t v8 = *v6;
      v34[3] = v7;
      v34[4] = &off_1F0F9FC58;
      v34[0] = *(v6 - 1);
      uint64_t v9 = sub_1B62C14BC(v34, (uint64_t)v7);
      uint64_t v10 = v7;
      v33[3] = (uint64_t)v7;
      v33[4] = (uint64_t)&off_1F0F9FC58;
      uint64_t v11 = sub_1B62C12C4(v33);
      uint64_t v12 = v11;
      uint64_t v13 = *(unsigned int *)v9;
      uint64_t v14 = *((unsigned int *)v9 + 1);
      if (v13 == -1 && v14 == 0)
      {
        swift_retain();
        uint64_t v21 = 0xFFFFFFFFLL;
        uint64_t v7 = v10;
      }
      else
      {
        uint64_t v32 = v11;
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          uint64_t v17 = Strong;
          char v18 = *(unsigned char *)(v31 + v30);
          uint64_t v19 = *(void **)(Strong + 16);
          swift_retain();
          objc_msgSend(v19, sel_lock);
          if (v18) {
            uint64_t v20 = *(void *)(v17 + 32);
          }
          else {
            uint64_t v20 = *(void *)(v17 + 24);
          }
          uint64_t v21 = 0xFFFFFFFFLL;
          if (*(void *)(v20 + 16))
          {
            uint64_t v22 = sub_1B62BE38C(v13 | (v14 << 32));
            uint64_t v7 = v10;
            uint64_t v23 = v19;
            if (v24) {
              uint64_t v21 = *(void *)(*(void *)(v20 + 56) + 8 * v22);
            }
          }
          else
          {
            uint64_t v7 = v10;
            uint64_t v23 = v19;
          }
          objc_msgSend(v23, sel_unlock);
          swift_release();
        }
        else
        {
          swift_retain();
          uint64_t v21 = 0xFFFFFFFFLL;
          uint64_t v7 = v10;
        }
        uint64_t v12 = v32;
      }
      *uint64_t v12 = v21;
      sub_1B62C55B0(0, (unint64_t *)&qword_1E9DCFCD0);
      swift_dynamicCast();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v34);
      uint64_t v25 = v34[5];
      uint64_t v35 = v3;
      unint64_t v27 = *(void *)(v3 + 16);
      unint64_t v26 = *(void *)(v3 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1B6C3D4A8(v26 > 1, v27 + 1, 1);
        uint64_t v3 = v35;
      }
      *(void *)(v3 + 16) = v27 + 1;
      uint64_t v28 = v3 + 16 * v27;
      *(void *)(v28 + 32) = v25;
      *(void *)(v28 + 40) = v8;
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1B6862B6C(char *a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a3;
  if (sub_1B62FACF8((uint64_t)&type metadata for Children)) {
    return sub_1B6BFE668(a2, a3);
  }
  uint64_t v16 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  if (!sub_1B62FACF8((uint64_t)&type metadata for Children))
  {
    v17[0] = &type metadata for Children;
    v17[1] = &off_1F0FA3898;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, (uint64_t)a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C(a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = &v19;
  sub_1B69EC9F0(v16, (uint64_t)sub_1B6875368, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B6862CE4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v20[0] = a3;
  v20[1] = a4;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for VFXTag, v18);
  if (LOBYTE(v18[0]) == 1) {
    return sub_1B6BFEA54(a2, a3, a4);
  }
  uint64_t v21 = a6;
  uint64_t v13 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for VFXTag, v18);
  if ((v18[0] & 1) == 0)
  {
    v18[0] = &type metadata for VFXTag;
    v18[1] = &off_1F0FA2150;
    char v19 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v18, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v18);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17[2] = v20;
  sub_1B69ECF70(v21, (uint64_t)sub_1B6875390, (uint64_t)v17);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6862E84(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a3;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for TextureGPURuntime, v17);
  if (LOBYTE(v17[0]) == 1) {
    return sub_1B6BFEADC(a2, a3);
  }
  uint64_t v16 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for TextureGPURuntime, v17);
  if ((v17[0] & 1) == 0)
  {
    v17[0] = &type metadata for TextureGPURuntime;
    v17[1] = &off_1F0F74BA8;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = &v19;
  sub_1B69ECB4C(v16, (uint64_t)sub_1B6879428, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

void sub_1B686301C(uint64_t a1, __int16 a2, void *a3, uint64_t a4, uint64_t a5)
{
  char v18 = a3;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for TextureCGImage, v16);
  if (LOBYTE(v16[0]) == 1)
  {
    sub_1B6BF7EF0(a2, a3);
  }
  else
  {
    uint64_t v15 = a5;
    uint64_t v10 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v10 + 32));
    uint64_t v11 = *v10;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for TextureCGImage, v16);
    if ((v16[0] & 1) == 0)
    {
      v16[0] = &type metadata for TextureCGImage;
      v16[1] = &off_1F0F66BC8;
      char v17 = 0;
      sub_1B63B2A48(v11 + 104, (uint64_t)v16, a2, 0, a1, v11);
      sub_1B6391400((uint64_t)v16);
    }
    uint64_t v12 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v12, v13);
    _DWORD v14[2] = &v18;
    sub_1B69EE1C4(v15, (uint64_t)sub_1B68793E0, (uint64_t)v14);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v10 + 32));
  }
}

uint64_t sub_1B68631C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1B6C3D3D8(0, v4, 0);
    uint64_t v5 = v38;
    uint64_t v7 = (char *)(a1 + 66);
    while (1)
    {
      uint64_t v8 = *(void *)(v7 - 18);
      uint64_t v9 = *(void *)(v7 - 10);
      char v10 = *(v7 - 2);
      char v11 = *(v7 - 1);
      char v12 = *v7;
      long long v26 = *(_OWORD *)(v7 - 34);
      uint64_t v27 = v8;
      uint64_t v28 = v9;
      char v29 = v10;
      char v30 = v11;
      char v31 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6858EC4((int *)&v26, a2, (uint64_t)&v32);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v13 = v32;
      uint64_t v14 = v33;
      uint64_t v15 = v34;
      char v16 = v35;
      char v17 = v36;
      char v18 = v37;
      uint64_t v38 = v5;
      unint64_t v20 = *(void *)(v5 + 16);
      unint64_t v19 = *(void *)(v5 + 24);
      if (v20 >= v19 >> 1)
      {
        long long v24 = v32;
        char v23 = v37;
        sub_1B6C3D3D8(v19 > 1, v20 + 1, 1);
        char v18 = v23;
        long long v13 = v24;
        uint64_t v5 = v38;
      }
      *(void *)(v5 + 16) = v20 + 1;
      uint64_t v21 = v5 + 40 * v20;
      *(_OWORD *)(v21 + 32) = v13;
      *(void *)(v21 + 48) = v14;
      *(void *)(v21 + 56) = v15;
      *(unsigned char *)(v21 + 64) = v16;
      *(unsigned char *)(v21 + 65) = v17;
      *(unsigned char *)(v21 + 66) = v18;
      v7 += 40;
      --v4;
      uint64_t v3 = 0;
      if (!v4) {
        return v5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1B6863360(uint64_t a1)
{
  ++qword_1EB97D6C0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v46 = *(void *)(a1 + 16);
  if (v46)
  {
    uint64_t v45 = a1 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v2 = 0;
    uint64_t v3 = (char *)v1;
    while (1)
    {
      uint64_t v4 = *(void *)(v45 + 40 * v2 + 24);
      int64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        uint64_t v6 = v1;
        uint64_t v49 = v1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1B62E1D20(0, v5, 0);
        uint64_t v7 = (void *)v1;
        unint64_t v8 = *(void *)(v1 + 16);
        uint64_t v9 = 32;
        do
        {
          uint64_t v10 = *(void *)(v4 + v9);
          uint64_t v49 = (uint64_t)v7;
          unint64_t v11 = v7[3];
          if (v8 >= v11 >> 1)
          {
            sub_1B62E1D20(v11 > 1, v8 + 1, 1);
            uint64_t v7 = (void *)v49;
          }
          _OWORD v7[2] = v8 + 1;
          v7[v8 + 4] = v10;
          v9 += 56;
          ++v8;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v1 = v6;
      }
      else
      {
        uint64_t v7 = (void *)v1;
      }
      uint64_t v12 = v7[2];
      uint64_t v13 = *((void *)v3 + 2);
      uint64_t v14 = v13 + v12;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v14 <= *((void *)v3 + 3) >> 1)
      {
        if (v7[2]) {
          goto LABEL_19;
        }
      }
      else
      {
        if (v13 <= v14) {
          uint64_t v16 = v13 + v12;
        }
        else {
          uint64_t v16 = v13;
        }
        uint64_t v3 = sub_1B633F784(isUniquelyReferenced_nonNull_native, v16, 1, v3);
        if (v7[2])
        {
LABEL_19:
          char v17 = &v3[8 * *((void *)v3 + 2) + 32];
          if (v7 + 4 < (void *)&v17[8 * v12] && v17 < (char *)&v7[v12 + 4])
          {
LABEL_65:
            uint64_t result = sub_1B6E32C88();
            __break(1u);
            return result;
          }
          memcpy(v17, v7 + 4, 8 * v12);
          if (v12) {
            *((void *)v3 + 2) += v12;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (++v2 == v46)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_28;
      }
    }
  }
  uint64_t v3 = (char *)MEMORY[0x1E4FBC860];
LABEL_28:
  sub_1B67CB1A4();
  uint64_t v49 = sub_1B6E31EF8();
  uint64_t v19 = *((void *)v3 + 2);
  if (v19)
  {
    unint64_t v20 = v3 + 36;
    do
    {
      sub_1B67E9ED4(&v48, *(void *)(v20 - 4));
      v20 += 8;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
  if (v21)
  {
    uint64_t v23 = a1 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = 0;
    uint64_t v25 = v22;
    uint64_t v47 = v21;
    while (1)
    {
      uint64_t v26 = *(void *)(v23 + 40 * v24 + 16);
      if (v26 && (int64_t v27 = *(void *)(v26 + 16)) != 0)
      {
        uint64_t v28 = v22;
        uint64_t v49 = (uint64_t)v22;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1B62E1D20(0, v27, 0);
        char v29 = (void *)v49;
        unint64_t v30 = *(void *)(v49 + 16);
        uint64_t v31 = 32;
        do
        {
          uint64_t v32 = *(void *)(v26 + v31);
          uint64_t v49 = (uint64_t)v29;
          unint64_t v33 = v29[3];
          if (v30 >= v33 >> 1)
          {
            sub_1B62E1D20(v33 > 1, v30 + 1, 1);
            char v29 = (void *)v49;
          }
          uint64_t v29[2] = v30 + 1;
          v29[v30 + 4] = v32;
          v31 += 56;
          ++v30;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v22 = v28;
        uint64_t v23 = a1 + 32;
        uint64_t v21 = v47;
      }
      else
      {
        char v29 = v22;
      }
      uint64_t v34 = v29[2];
      uint64_t v35 = *((void *)v25 + 2);
      uint64_t v36 = v35 + v34;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      if ((v37 & 1) != 0 && v36 <= *((void *)v25 + 3) >> 1)
      {
        if (v29[2]) {
          goto LABEL_52;
        }
      }
      else
      {
        if (v35 <= v36) {
          uint64_t v38 = v35 + v34;
        }
        else {
          uint64_t v38 = v35;
        }
        uint64_t v25 = sub_1B633F784(v37, v38, 1, v25);
        if (v29[2])
        {
LABEL_52:
          uint64_t v39 = &v25[8 * *((void *)v25 + 2) + 32];
          if (v29 + 4 < (void *)&v39[8 * v34] && v39 < (char *)&v29[v34 + 4]) {
            goto LABEL_65;
          }
          memcpy(v39, v29 + 4, 8 * v34);
          if (v34) {
            *((void *)v25 + 2) += v34;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (++v24 == v21)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_61;
      }
    }
  }
  uint64_t v25 = (char *)MEMORY[0x1E4FBC860];
LABEL_61:
  uint64_t v49 = sub_1B6E31EF8();
  uint64_t v41 = *((void *)v25 + 2);
  if (v41)
  {
    int64_t v42 = v25 + 36;
    do
    {
      sub_1B67E9ED4(&v48, *(void *)(v42 - 4));
      v42 += 8;
      --v41;
    }
    while (v41);
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B686385C()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B68638A8()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B68638F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746567726174 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B68639E0()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6863A2C(char *a1, __int16 a2, const void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v10 = type metadata accessor for GraphScript(0);
  if (sub_1B62FACF8(v10)) {
    return sub_1B6BF7D9C(a2, a3, **(void **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues));
  }
  char v18 = a3;
  uint64_t v19 = v5;
  uint64_t v12 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v12 + 32));
  uint64_t v13 = *v12;
  if (!sub_1B62FACF8(v10))
  {
    v20[0] = v10;
    v20[1] = &off_1F0F55610;
    char v21 = 0;
    sub_1B63B2A48(v13 + 104, (uint64_t)v20, a2, 0, (uint64_t)a1, v13);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v14 = sub_1B634507C(a1);
  uint64_t v16 = *(void *)(v10 - 8);
  if (*(void *)(v16 + 64))
  {
    if (*(uint64_t *)(v16 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v14, v15);
      uint64_t v17[2] = v18;
      sub_1B69ECA7C(v22, (uint64_t)sub_1B6879524, (uint64_t)v17);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v12 + 32));
}

uint64_t sub_1B6863C08(char *a1, __int16 a2, const void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v10 = type metadata accessor for TriggerScript(0);
  if (sub_1B62FACF8(v10)) {
    return sub_1B6BF7D6C(a2, a3, **(void **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues));
  }
  char v18 = a3;
  uint64_t v19 = v5;
  uint64_t v12 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v12 + 32));
  uint64_t v13 = *v12;
  if (!sub_1B62FACF8(v10))
  {
    v20[0] = v10;
    v20[1] = &off_1F0F625B0;
    char v21 = 0;
    sub_1B63B2A48(v13 + 104, (uint64_t)v20, a2, 0, (uint64_t)a1, v13);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v14 = sub_1B634507C(a1);
  uint64_t v16 = *(void *)(v10 - 8);
  if (*(void *)(v16 + 64))
  {
    if (*(uint64_t *)(v16 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v14, v15);
      uint64_t v17[2] = v18;
      sub_1B69ECA30(v22, (uint64_t)sub_1B6879590, (uint64_t)v17);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v12 + 32));
}

uint64_t sub_1B6863DE4(char *a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a6;
  v19[0] = a3;
  v19[1] = a4;
  if (sub_1B637D6B4((uint64_t)&type metadata for Name)) {
    return sub_1B6C03C24(a2, a3, a4);
  }
  uint64_t v12 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v12 + 32));
  uint64_t v13 = *v12;
  if (!sub_1B637D6B4((uint64_t)&type metadata for Name))
  {
    v17[0] = &type metadata for Name;
    v17[1] = &off_1F0F9E630;
    char v18 = 0;
    sub_1B63B2A48(v13 + 104, (uint64_t)v17, a2, 0, (uint64_t)a1, v13);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v14 = sub_1B634507C(a1);
  MEMORY[0x1F4188790](v14, v15);
  v16[2] = v19;
  sub_1B69EC5A0(v20, (uint64_t)sub_1B6875390, (uint64_t)v16);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v12 + 32));
}

uint64_t sub_1B6863F70(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  __n128 v20 = a5;
  __n128 v23 = a5;
  uint64_t result = sub_1B637D6B4((uint64_t)&type metadata for Color);
  if (result)
  {
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = (uint64_t *)(v11 + 56);
      __n128 v14 = v20;
      while ((ValueMetadata *)*(v13 - 3) != &type metadata for Color)
      {
        v13 += 5;
        if (!--v12) {
          goto LABEL_12;
        }
      }
      uint64_t v12 = *v13;
    }
    else
    {
      __n128 v14 = v20;
    }
LABEL_12:
    *(__n128 *)(*(void *)(a1 + 128) + v12 + 16 * a2) = v14;
  }
  else
  {
    uint64_t v24 = a4;
    v20.n128_u64[0] = v5;
    uint64_t v15 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
    uint64_t v16 = *v15;
    if (!sub_1B637D6B4((uint64_t)&type metadata for Color))
    {
      v21[0] = &type metadata for Color;
      v21[1] = &off_1F0F9ECD8;
      char v22 = 0;
      sub_1B63B2A48(v16 + 104, (uint64_t)v21, a2, 0, a1, v16);
      sub_1B6391400((uint64_t)v21);
    }
    char v17 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v17, v18);
    void v19[2] = &v23;
    sub_1B69EC5D8(v24, (uint64_t)sub_1B687CA04, (uint64_t)v19);
    return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
  }
  return result;
}

uint64_t sub_1B6864134(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  __n128 v20 = a5;
  __n128 v23 = a5;
  uint64_t result = sub_1B637D6B4((uint64_t)&type metadata for Orientation);
  if (result)
  {
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = (uint64_t *)(v11 + 56);
      __n128 v14 = v20;
      while ((ValueMetadata *)*(v13 - 3) != &type metadata for Orientation)
      {
        v13 += 5;
        if (!--v12) {
          goto LABEL_12;
        }
      }
      uint64_t v12 = *v13;
    }
    else
    {
      __n128 v14 = v20;
    }
LABEL_12:
    *(__n128 *)(*(void *)(a1 + 128) + v12 + 16 * a2) = v14;
  }
  else
  {
    uint64_t v24 = a4;
    v20.n128_u64[0] = v5;
    uint64_t v15 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
    uint64_t v16 = *v15;
    if (!sub_1B637D6B4((uint64_t)&type metadata for Orientation))
    {
      v21[0] = &type metadata for Orientation;
      v21[1] = &off_1F0F560A8;
      char v22 = 0;
      sub_1B63B2A48(v16 + 104, (uint64_t)v21, a2, 0, a1, v16);
      sub_1B6391400((uint64_t)v21);
    }
    char v17 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v17, v18);
    void v19[2] = &v23;
    sub_1B69EC614(v24, (uint64_t)sub_1B6875380, (uint64_t)v19);
    return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
  }
  return result;
}

uint64_t sub_1B68642F8(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  __n128 v20 = a5;
  __n128 v23 = a5;
  uint64_t result = sub_1B637D6B4((uint64_t)&type metadata for Position);
  if (result)
  {
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = (uint64_t *)(v11 + 56);
      __n128 v14 = v20;
      while ((ValueMetadata *)*(v13 - 3) != &type metadata for Position)
      {
        v13 += 5;
        if (!--v12) {
          goto LABEL_12;
        }
      }
      uint64_t v12 = *v13;
    }
    else
    {
      __n128 v14 = v20;
    }
LABEL_12:
    *(__n128 *)(*(void *)(a1 + 128) + v12 + 16 * a2) = v14;
  }
  else
  {
    uint64_t v24 = a4;
    v20.n128_u64[0] = v5;
    uint64_t v15 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
    uint64_t v16 = *v15;
    if (!sub_1B637D6B4((uint64_t)&type metadata for Position))
    {
      v21[0] = &type metadata for Position;
      v21[1] = &off_1F0FA6EE0;
      char v22 = 0;
      sub_1B63B2A48(v16 + 104, (uint64_t)v21, a2, 0, a1, v16);
      sub_1B6391400((uint64_t)v21);
    }
    char v17 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v17, v18);
    void v19[2] = &v23;
    sub_1B69EC65C(v24, (uint64_t)sub_1B687CA04, (uint64_t)v19);
    return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
  }
  return result;
}

uint64_t sub_1B68644BC(char *a1, __int16 a2, uint64_t a3, unint64_t a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  __n128 v18 = a5;
  v24[0] = a5;
  v24[1] = a6;
  __n128 v19 = a6;
  __n128 v20 = a7;
  v24[2] = a7;
  v24[3] = a8;
  __n128 v21 = a8;
  if (sub_1B62FACF8((uint64_t)&type metadata for WorldTransform)) {
    return sub_1B6C03CA8(a2, v18, v19, v20, v21);
  }
  v20.n128_u64[0] = a4;
  uint64_t v13 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  if (!sub_1B62FACF8((uint64_t)&type metadata for WorldTransform))
  {
    v22[0] = &type metadata for WorldTransform;
    v22[1] = &off_1F0F67720;
    char v23 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v22, a2, 0, (uint64_t)a1, v14);
    sub_1B6391400((uint64_t)v22);
  }
  uint64_t v15 = sub_1B634507C(a1);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17[2] = v24;
  sub_1B69EC69C(v20.n128_i64[0], (uint64_t)sub_1B68791B8, (uint64_t)v17);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6864658(char *a1, __int16 a2, uint64_t a3, unint64_t a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  __n128 v18 = a5;
  v24[0] = a5;
  v24[1] = a6;
  __n128 v19 = a6;
  __n128 v20 = a7;
  v24[2] = a7;
  v24[3] = a8;
  __n128 v21 = a8;
  if (sub_1B62FACF8((uint64_t)&type metadata for InverseWorldTransform)) {
    return sub_1B6C03CF8(a2, v18, v19, v20, v21);
  }
  v20.n128_u64[0] = a4;
  uint64_t v13 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  if (!sub_1B62FACF8((uint64_t)&type metadata for InverseWorldTransform))
  {
    v22[0] = &type metadata for InverseWorldTransform;
    v22[1] = &off_1F0F87E48;
    char v23 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v22, a2, 0, (uint64_t)a1, v14);
    sub_1B6391400((uint64_t)v22);
  }
  uint64_t v15 = sub_1B634507C(a1);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17[2] = v24;
  sub_1B69EC6E8(v20.n128_i64[0], (uint64_t)sub_1B68791B8, (uint64_t)v17);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B68647F4(char *a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a3;
  if (sub_1B62FACF8((uint64_t)&type metadata for ScriptsHolder)) {
    return sub_1B6C03D48(a2, a3);
  }
  uint64_t v16 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  if (!sub_1B62FACF8((uint64_t)&type metadata for ScriptsHolder))
  {
    v17[0] = &type metadata for ScriptsHolder;
    v17[1] = &off_1F0F61CA0;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, (uint64_t)a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C(a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = &v19;
  sub_1B69EC9A4(v16, (uint64_t)sub_1B6875368, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B686496C(char *a1, __int16 a2, const void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  if (sub_1B62FACF8(inited)) {
    return sub_1B6BF5098(a2, a3, **(void **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues));
  }
  char v18 = a3;
  uint64_t v19 = v5;
  uint64_t v12 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v12 + 32));
  uint64_t v13 = *v12;
  if (!sub_1B62FACF8(inited))
  {
    v20[0] = inited;
    v20[1] = &off_1F0F796D0;
    char v21 = 0;
    sub_1B63B2A48(v13 + 104, (uint64_t)v20, a2, 0, (uint64_t)a1, v13);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v14 = sub_1B634507C(a1);
  uint64_t v16 = *(void *)(inited - 8);
  if (*(void *)(v16 + 64))
  {
    if (*(uint64_t *)(v16 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v14, v15);
      uint64_t v17[2] = v18;
      sub_1B69ECB08(v22, (uint64_t)sub_1B68794CC, (uint64_t)v17);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v12 + 32));
}

uint64_t sub_1B6864B48(char *a1, __int16 a2, const void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  if (sub_1B62FACF8(updated)) {
    return sub_1B6BF6078(a2, a3, **(void **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues));
  }
  char v18 = a3;
  uint64_t v19 = v5;
  uint64_t v12 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v12 + 32));
  uint64_t v13 = *v12;
  if (!sub_1B62FACF8(updated))
  {
    v20[0] = updated;
    v20[1] = &off_1F0F82FB8;
    char v21 = 0;
    sub_1B63B2A48(v13 + 104, (uint64_t)v20, a2, 0, (uint64_t)a1, v13);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v14 = sub_1B634507C(a1);
  uint64_t v16 = *(void *)(updated - 8);
  if (*(void *)(v16 + 64))
  {
    if (*(uint64_t *)(v16 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v14, v15);
      uint64_t v17[2] = v18;
      sub_1B69ECAC4(v22, (uint64_t)sub_1B6879474, (uint64_t)v17);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v12 + 32));
}

void sub_1B6864D24(uint64_t a1, __int16 a2, long long *a3, uint64_t a4, uint64_t a5)
{
  long long v10 = a3[7];
  long long v26 = a3[6];
  v27[0] = v10;
  *(_OWORD *)((char *)v27 + 12) = *(long long *)((char *)a3 + 124);
  long long v11 = a3[3];
  long long v22 = a3[2];
  long long v23 = v11;
  long long v12 = a3[5];
  long long v24 = a3[4];
  long long v25 = v12;
  long long v13 = a3[1];
  long long v20 = *a3;
  long long v21 = v13;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for ForceField, v18);
  if (LOBYTE(v18[0]) == 1)
  {
    sub_1B6C03DC8(a2, (uint64_t)a3);
  }
  else
  {
    uint64_t v28 = a5;
    uint64_t v14 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v14 + 32));
    uint64_t v15 = *v14;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for ForceField, v18);
    if ((v18[0] & 1) == 0)
    {
      v18[0] = &type metadata for ForceField;
      v18[1] = &off_1F0F525A8;
      char v19 = 0;
      sub_1B63B2A48(v15 + 104, (uint64_t)v18, a2, 0, a1, v15);
      sub_1B6391400((uint64_t)v18);
    }
    uint64_t v16 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v16, v17);
    sub_1B69ECD40(v28, (void (*)(uint64_t))sub_1B6879648);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v14 + 32));
  }
}

uint64_t sub_1B6864EF4(uint64_t a1, __int16 a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  __int16 v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  __int16 v27 = a6 & 0x101;
  char v28 = BYTE2(a6) & 1;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for GraphScriptingConfig, v22);
  if (LOBYTE(v22[0]) == 1) {
    return sub_1B6C03E3C(a2, a3, a4, a5, a6 & 0x10101);
  }
  uint64_t v29 = a8;
  uint64_t v17 = *(uint64_t **)(a7 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v17 + 32));
  uint64_t v18 = *v17;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for GraphScriptingConfig, v22);
  if ((v22[0] & 1) == 0)
  {
    v22[0] = &type metadata for GraphScriptingConfig;
    v22[1] = &off_1F0F80818;
    char v23 = 0;
    sub_1B63B2A48(v18 + 104, (uint64_t)v22, a2, 0, a1, v18);
    sub_1B6391400((uint64_t)v22);
  }
  char v19 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v19, v20);
  v21[2] = &v24;
  sub_1B69ECEE8(v29, (uint64_t)sub_1B6874898, (uint64_t)v21);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v17 + 32));
}

uint64_t sub_1B68650D0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C03F10(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  long long v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ECFF0(v19, (uint64_t)sub_1B68749C8, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B68652F0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, (unint64_t *)&unk_1EB9811A0, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C03F38(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ECFAC(v23, (uint64_t)sub_1B687C9EC, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B68654D0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C03F60(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  uint64_t v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ED078(v19, (uint64_t)sub_1B6874BA0, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B68656F0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97F780, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C03F88(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ED034(v23, (uint64_t)sub_1B687C9EC, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B68658D0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C04074(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  uint64_t v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ED100(v19, (uint64_t)sub_1B6874C44, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6865AF0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97F770, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C0409C(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ED0BC(v23, (uint64_t)sub_1B6874C28, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B6865CD0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C040C4(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  uint64_t v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ED188(v19, (uint64_t)sub_1B6874CCC, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6865EF0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97F7A0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C040EC(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ED144(v23, (uint64_t)sub_1B687C9EC, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B68660D0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C04114(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  uint64_t v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ED210(v19, (uint64_t)sub_1B6874D54, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B68662F0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, (unint64_t *)&unk_1EB981190, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C0413C(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ED1CC(v23, (uint64_t)sub_1B687C9EC, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B68664D0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C04164(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  uint64_t v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ED298(v19, (uint64_t)sub_1B6874DDC, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B68666F0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97F7B0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C0418C(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ED254(v23, (uint64_t)sub_1B687C9EC, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B68668D0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C041B4(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  uint64_t v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ED320(v19, (uint64_t)sub_1B6874E64, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6866AF0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97F790, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C041DC(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ED2DC(v23, (uint64_t)sub_1B687C9EC, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

uint64_t sub_1B6866CD0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D2230(0, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v11 = v10;
  sub_1B6345398(*(void *)(a1 + 40), v10, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C04204(a2, a3);
  }
  uint64_t v19 = a5;
  uint64_t v22 = a4;
  uint64_t v13 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), v11, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v11;
    v20[1] = &off_1F0F61BF0;
    char v21 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v20, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v15 = sub_1B634507C((char *)a1);
  uint64_t v17 = *(void *)(v11 - 8);
  if (*(void *)(v17 + 64))
  {
    if (*(uint64_t *)(v17 + 72) >= 1)
    {
      MEMORY[0x1F4188790](v15, v16);
      v18[2] = a3;
      sub_1B69ED3A8(v19, (uint64_t)sub_1B6874EEC, (uint64_t)v18);
    }
  }
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6866EF0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a3;
  v22[1] = a4;
  sub_1B62D2230(0, &qword_1EB97F7C0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v13 = v12;
  sub_1B6345398(*(void *)(a1 + 40), v12, v20);
  if (LOBYTE(v20[0]) == 1) {
    return sub_1B6C04300(a2, a3, a4);
  }
  uint64_t v23 = a6;
  uint64_t v15 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v15 + 32));
  uint64_t v16 = *v15;
  sub_1B6345398(*(void *)(a1 + 40), v13, v20);
  if ((v20[0] & 1) == 0)
  {
    v20[0] = v13;
    v20[1] = &off_1F0F8E108;
    char v21 = 0;
    sub_1B63B2A48(v16 + 104, (uint64_t)v20, a2, 0, a1, v16);
    sub_1B6391400((uint64_t)v20);
  }
  uint64_t v17 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v17, v18);
  void v19[2] = v22;
  sub_1B69ED364(v23, (uint64_t)sub_1B687C9EC, (uint64_t)v19);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v15 + 32));
}

void sub_1B68670D0(uint64_t a1, __int16 a2, long long *a3, uint64_t a4, uint64_t a5)
{
  long long v10 = a3[3];
  long long v20 = a3[2];
  long long v21 = v10;
  long long v22 = a3[4];
  long long v11 = a3[1];
  long long v18 = *a3;
  long long v19 = v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for SkinnedMeshBinding, v16);
  if (LOBYTE(v16[0]) == 1)
  {
    sub_1B6C04328(a2, (uint64_t)a3);
  }
  else
  {
    uint64_t v23 = a5;
    uint64_t v12 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v12 + 32));
    uint64_t v13 = *v12;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for SkinnedMeshBinding, v16);
    if ((v16[0] & 1) == 0)
    {
      v16[0] = &type metadata for SkinnedMeshBinding;
      v16[1] = &off_1F0F7A8B8;
      char v17 = 0;
      sub_1B63B2A48(v13 + 104, (uint64_t)v16, a2, 0, a1, v13);
      sub_1B6391400((uint64_t)v16);
    }
    uint64_t v14 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v14, v15);
    sub_1B69ED938(v23, (void (*)(uint64_t))sub_1B6879108);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v12 + 32));
  }
}

void sub_1B686727C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v10 = *(_OWORD *)(a3 + 16);
  v18[0] = *(_OWORD *)a3;
  v18[1] = v10;
  uint64_t v19 = *(void *)(a3 + 32);
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Skeleton, v16);
  if (LOBYTE(v16[0]) == 1)
  {
    sub_1B6C0438C(a2, (__n128 *)a3);
  }
  else
  {
    uint64_t v20 = a5;
    long long v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
    uint64_t v12 = *v11;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Skeleton, v16);
    if ((v16[0] & 1) == 0)
    {
      v16[0] = &type metadata for Skeleton;
      v16[1] = &off_1F0FA7750;
      char v17 = 0;
      sub_1B63B2A48(v12 + 104, (uint64_t)v16, a2, 0, a1, v12);
      sub_1B6391400((uint64_t)v16);
    }
    uint64_t v13 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v13, v14);
    v15[2] = v18;
    sub_1B69ED8F8(v20, (uint64_t)sub_1B6879128, (uint64_t)v15);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
  }
}

uint64_t sub_1B6867420(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, __n128 a5)
{
  __n128 v15 = a5;
  __n128 v18 = a5;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Scale3, v16);
  if (LOBYTE(v16[0]) == 1) {
    return sub_1B6C044B0(a2, v15);
  }
  v15.n128_u64[0] = a4;
  long long v10 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v10 + 32));
  uint64_t v11 = *v10;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Scale3, v16);
  if ((v16[0] & 1) == 0)
  {
    v16[0] = &type metadata for Scale3;
    v16[1] = &off_1F0FA10A0;
    char v17 = 0;
    sub_1B63B2A48(v11 + 104, (uint64_t)v16, a2, 0, a1, v11);
    sub_1B6391400((uint64_t)v16);
  }
  uint64_t v12 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v12, v13);
  _DWORD v14[2] = &v18;
  sub_1B69ED70C(v15.n128_i64[0], (uint64_t)sub_1B687CA04, (uint64_t)v14);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v10 + 32));
}

uint64_t sub_1B68675B8(uint64_t a1, __int16 a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v19 = a3;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Parent, v17);
  if (LOBYTE(v17[0]) == 1) {
    return sub_1B6BF77CC(a2, a3);
  }
  uint64_t v16 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Parent, v17);
  if ((v17[0] & 1) == 0)
  {
    v17[0] = &type metadata for Parent;
    v17[1] = &off_1F0FA0430;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = &v19;
  sub_1B69ED6D0(v16, (uint64_t)sub_1B687C9D4, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B6867764(uint64_t a1, __int16 a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  v20[0] = a3;
  v20[1] = a4;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for ModelRenderer, v18);
  if (LOBYTE(v18[0]) == 1) {
    return sub_1B6BF3A40(a2, a3, a4);
  }
  uint64_t v21 = a6;
  uint64_t v13 = *(uint64_t **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for ModelRenderer, v18);
  if ((v18[0] & 1) == 0)
  {
    v18[0] = &type metadata for ModelRenderer;
    v18[1] = &off_1F0F60288;
    char v19 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v18, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v18);
  }
  __n128 v15 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17[2] = v20;
  sub_1B69ED518(v21, (void (*)(long long *))sub_1B6875380, (uint64_t)v17);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6867924(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, float a5)
{
  float v19 = a5;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for AmbientLight, v17);
  if (LOBYTE(v17[0]) == 1) {
    return sub_1B6C044F8(a2, a5);
  }
  uint64_t v16 = a4;
  uint64_t v11 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for AmbientLight, v17);
  if ((v17[0] & 1) == 0)
  {
    v17[0] = &type metadata for AmbientLight;
    v17[1] = &off_1F0F58EE8;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = &v19;
  sub_1B69EC7B4(v16, (uint64_t)sub_1B68753C0, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B6867AC4(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, float a5, float a6, float a7, float a8)
{
  *(float *)__int16 v24 = a5;
  *(float *)&v24[1] = a6;
  *(float *)&v24[2] = a7;
  *(float *)&v24[3] = a8;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for DirectionalLight, v22);
  if (LOBYTE(v22[0]) == 1) {
    return sub_1B6C04540(a2, a5, a6, a7, a8);
  }
  uint64_t v25 = a4;
  char v17 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v17 + 32));
  uint64_t v18 = *v17;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for DirectionalLight, v22);
  if ((v22[0] & 1) == 0)
  {
    v22[0] = &type metadata for DirectionalLight;
    v22[1] = &off_1F0F6BBC0;
    char v23 = 0;
    sub_1B63B2A48(v18 + 104, (uint64_t)v22, a2, 0, a1, v18);
    sub_1B6391400((uint64_t)v22);
  }
  float v19 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v19, v20);
  v21[2] = v24;
  sub_1B69EC72C(v25, (uint64_t)sub_1B687CA04, (uint64_t)v21);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v17 + 32));
}

void sub_1B6867C88(uint64_t a1, __int16 a2, __n128 *a3, uint64_t a4, uint64_t a5)
{
  __n128 v16 = *a3;
  unint64_t v17 = a3[1].n128_u64[0];
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for SpotLight, v14);
  if (LOBYTE(v14[0]) == 1)
  {
    sub_1B6C04590(a2, a3);
  }
  else
  {
    uint64_t v18 = a5;
    long long v10 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v10 + 32));
    uint64_t v11 = *v10;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for SpotLight, v14);
    if ((v14[0] & 1) == 0)
    {
      v14[0] = &type metadata for SpotLight;
      v14[1] = &off_1F0FA9CE8;
      char v15 = 0;
      sub_1B63B2A48(v11 + 104, (uint64_t)v14, a2, 0, a1, v11);
      sub_1B6391400((uint64_t)v14);
    }
    uint64_t v12 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v12, v13);
    sub_1B69EC7FC(v18, (void (*)(uint64_t))sub_1B68753A8);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v10 + 32));
  }
}

uint64_t sub_1B6867E2C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, float a5, float a6, float a7, float a8)
{
  *(float *)__int16 v24 = a5;
  *(float *)&v24[1] = a6;
  *(float *)&v24[2] = a7;
  *(float *)&v24[3] = a8;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for PointLight, v22);
  if (LOBYTE(v22[0]) == 1) {
    return sub_1B6C045EC(a2, a5, a6, a7, a8);
  }
  uint64_t v25 = a4;
  unint64_t v17 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v17 + 32));
  uint64_t v18 = *v17;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for PointLight, v22);
  if ((v22[0] & 1) == 0)
  {
    v22[0] = &type metadata for PointLight;
    v22[1] = &off_1F0F53678;
    char v23 = 0;
    sub_1B63B2A48(v18 + 104, (uint64_t)v22, a2, 0, a1, v18);
    sub_1B6391400((uint64_t)v22);
  }
  float v19 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v19, v20);
  v21[2] = v24;
  sub_1B69EC770(v25, (uint64_t)sub_1B6875380, (uint64_t)v21);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v17 + 32));
}

void sub_1B6867FF0(uint64_t a1, __int16 a2, long long *a3, uint64_t a4, uint64_t a5)
{
  long long v10 = a3[1];
  long long v17 = *a3;
  long long v18 = v10;
  long long v19 = a3[2];
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for PerspectiveCamera, v15);
  if (LOBYTE(v15[0]) == 1)
  {
    sub_1B6C0463C(a2, (uint64_t)a3);
  }
  else
  {
    uint64_t v20 = a5;
    uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
    uint64_t v12 = *v11;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for PerspectiveCamera, v15);
    if ((v15[0] & 1) == 0)
    {
      v15[0] = &type metadata for PerspectiveCamera;
      v15[1] = &off_1F0F73918;
      char v16 = 0;
      sub_1B63B2A48(v12 + 104, (uint64_t)v15, a2, 0, a1, v12);
      sub_1B6391400((uint64_t)v15);
    }
    uint64_t v13 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v13, v14);
    sub_1B69EDADC(v20, (void (*)(uint64_t))sub_1B68753F8);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
  }
}

void sub_1B6868194(uint64_t a1, __int16 a2, __n128 *a3, uint64_t a4, uint64_t a5)
{
  __n128 v16 = *a3;
  unsigned __int8 v17 = a3[1].n128_u8[0];
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for OrthographicCamera, v14);
  if (LOBYTE(v14[0]) == 1)
  {
    sub_1B6C04698(a2, a3);
  }
  else
  {
    uint64_t v18 = a5;
    long long v10 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v10 + 32));
    uint64_t v11 = *v10;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for OrthographicCamera, v14);
    if ((v14[0] & 1) == 0)
    {
      v14[0] = &type metadata for OrthographicCamera;
      v14[1] = &off_1F0F78720;
      char v15 = 0;
      sub_1B63B2A48(v11 + 104, (uint64_t)v14, a2, 0, a1, v11);
      sub_1B6391400((uint64_t)v14);
    }
    uint64_t v12 = sub_1B634507C((char *)a1);
    MEMORY[0x1F4188790](v12, v13);
    sub_1B69EDC80(v18, (void (*)(uint64_t))sub_1B68753D0);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v10 + 32));
  }
}

void sub_1B6868338(uint64_t a1, __int16 a2, uint64_t a3)
{
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for HiddenOrHasHiddenAncestor, v8);
  if (LOBYTE(v8[0]) == 1)
  {
    sub_1B6BF7EA8();
  }
  else
  {
    char v6 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v6 + 32));
    uint64_t v7 = *v6;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for HiddenOrHasHiddenAncestor, v8);
    if ((v8[0] & 1) == 0)
    {
      v8[0] = &type metadata for HiddenOrHasHiddenAncestor;
      v8[1] = &off_1F0F516E0;
      char v9 = 0;
      sub_1B63B2A48(v7 + 104, (uint64_t)v8, a2, 0, a1, v7);
      sub_1B6391400((uint64_t)v8);
    }
    sub_1B634507C((char *)a1);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v6 + 32));
  }
}

void sub_1B686846C(uint64_t a1, __int16 a2, uint64_t a3)
{
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Hidden, v8);
  if (LOBYTE(v8[0]) == 1)
  {
    j_nullsub_1(a2);
  }
  else
  {
    char v6 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v6 + 32));
    uint64_t v7 = *v6;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Hidden, v8);
    if ((v8[0] & 1) == 0)
    {
      v8[0] = &type metadata for Hidden;
      v8[1] = &off_1F0F9FD68;
      char v9 = 0;
      sub_1B63B2A48(v7 + 104, (uint64_t)v8, a2, 0, a1, v7);
      sub_1B6391400((uint64_t)v8);
    }
    sub_1B634507C((char *)a1);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v6 + 32));
  }
}

uint64_t sub_1B686858C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v24[0] = a3;
  v24[1] = a4;
  v24[2] = a5;
  v24[3] = a6;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for MeshReferenceAsset, v22);
  if (LOBYTE(v22[0]) == 1) {
    return sub_1B6BF4F5C(a2, a3, a4, a5, a6);
  }
  uint64_t v25 = a8;
  unsigned __int8 v17 = *(uint64_t **)(a7 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v17 + 32));
  uint64_t v18 = *v17;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for MeshReferenceAsset, v22);
  if ((v22[0] & 1) == 0)
  {
    v22[0] = &type metadata for MeshReferenceAsset;
    v22[1] = &off_1F0F772A0;
    char v23 = 0;
    sub_1B63B2A48(v18 + 104, (uint64_t)v22, a2, 0, a1, v18);
    sub_1B6391400((uint64_t)v22);
  }
  long long v19 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v19, v20);
  v21[2] = v24;
  sub_1B69EDE24(v25, (void (*)(uint64_t *))sub_1B6875420, (uint64_t)v21);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v17 + 32));
}

void sub_1B6868754(uint64_t a1, __int16 a2, uint64_t a3)
{
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Beamed, v8);
  if (LOBYTE(v8[0]) == 1)
  {
    nullsub_1(a2);
  }
  else
  {
    char v6 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v6 + 32));
    uint64_t v7 = *v6;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Beamed, v8);
    if ((v8[0] & 1) == 0)
    {
      v8[0] = &type metadata for Beamed;
      v8[1] = &off_1F0F9FB50;
      char v9 = 0;
      sub_1B63B2A48(v7 + 104, (uint64_t)v8, a2, 0, a1, v7);
      sub_1B6391400((uint64_t)v8);
    }
    sub_1B634507C((char *)a1);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v6 + 32));
  }
}

uint64_t sub_1B6868874(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, float a5)
{
  float v19 = a5;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Opacity, v17);
  if (LOBYTE(v17[0]) == 1) {
    return sub_1B6C046F4(a2, a5);
  }
  uint64_t v16 = a4;
  uint64_t v11 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Opacity, v17);
  if ((v17[0] & 1) == 0)
  {
    v17[0] = &type metadata for Opacity;
    v17[1] = &off_1F0FA2B98;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = &v19;
  sub_1B69EE3C8(v16, (uint64_t)sub_1B687CA1C, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B6868A14(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, __n128 a5, __n128 a6)
{
  __n128 v16 = a5;
  __n128 v17 = a6;
  v20[0] = a5;
  v20[1] = a6;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for LocalAABB, v18);
  if (LOBYTE(v18[0]) == 1) {
    return sub_1B6C0473C(a2, v16, v17);
  }
  v17.n128_u64[0] = a4;
  uint64_t v11 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for LocalAABB, v18);
  if ((v18[0] & 1) == 0)
  {
    v18[0] = &type metadata for LocalAABB;
    v18[1] = &off_1F0FA8C78;
    char v19 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v18, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v18);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = v20;
  sub_1B69EE5B8(v17.n128_i64[0], (uint64_t)sub_1B6372A10, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B6868BAC(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for NodeVisibilityController, v16);
  if (LOBYTE(v16[0]) == 1) {
    return sub_1B6C04788(a2, a3);
  }
  uint64_t v18 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for NodeVisibilityController, v16);
  if ((v16[0] & 1) == 0)
  {
    v16[0] = &type metadata for NodeVisibilityController;
    v16[1] = &off_1F0F92320;
    char v17 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v16, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v16);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = a3;
  sub_1B69EE7AC(v18, (uint64_t)sub_1B68791D0, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

uint64_t sub_1B6868D3C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for NodeTransformController, v16);
  if (LOBYTE(v16[0]) == 1) {
    return sub_1B6C047DC(a2, a3);
  }
  uint64_t v18 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for NodeTransformController, v16);
  if ((v16[0] & 1) == 0)
  {
    v16[0] = &type metadata for NodeTransformController;
    v16[1] = &off_1F0F8FA38;
    char v17 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v16, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v16);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = a3;
  sub_1B69EE7F0(v18, (uint64_t)sub_1B68792C4, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

void sub_1B6868ECC(uint64_t a1, __int16 a2, uint64_t a3)
{
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Authoring, v8);
  if (LOBYTE(v8[0]) == 1)
  {
    j_nullsub_1(a2);
  }
  else
  {
    char v6 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    ecs_stack_allocator_push_snapshot(*(void *)(*v6 + 32));
    uint64_t v7 = *v6;
    sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for Authoring, v8);
    if ((v8[0] & 1) == 0)
    {
      v8[0] = &type metadata for Authoring;
      v8[1] = &off_1F0FA7FA8;
      char v9 = 0;
      sub_1B63B2A48(v7 + 104, (uint64_t)v8, a2, 0, a1, v7);
      sub_1B6391400((uint64_t)v8);
    }
    sub_1B634507C((char *)a1);
    ecs_stack_allocator_pop_snapshot(*(void *)(*v6 + 32));
  }
}

uint64_t sub_1B6868FEC(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  __n128 v18 = a5;
  v24[0] = a5;
  v24[1] = a6;
  __n128 v19 = a6;
  __n128 v20 = a7;
  v24[2] = a7;
  v24[3] = a8;
  __n128 v21 = a8;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for ProjectionMatrix, v22);
  if (LOBYTE(v22[0]) == 1) {
    return sub_1B6C04830(a2, v18, v19, v20, v21);
  }
  v21.n128_u64[0] = a4;
  uint64_t v13 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for ProjectionMatrix, v22);
  if ((v22[0] & 1) == 0)
  {
    v22[0] = &type metadata for ProjectionMatrix;
    v22[1] = &off_1F0F6EED0;
    char v23 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v22, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v22);
  }
  char v15 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17[2] = v24;
  sub_1B69EE9E4(v21.n128_i64[0], (uint64_t)sub_1B68791B8, (uint64_t)v17);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B68691A0(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  __n128 v18 = a5;
  v24[0] = a5;
  v24[1] = a6;
  __n128 v19 = a6;
  __n128 v20 = a7;
  v24[2] = a7;
  v24[3] = a8;
  __n128 v21 = a8;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for LastFrameWorldTransform, v22);
  if (LOBYTE(v22[0]) == 1) {
    return sub_1B6C04880(a2, v18, v19, v20, v21);
  }
  v21.n128_u64[0] = a4;
  uint64_t v13 = *(uint64_t **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v13 + 32));
  uint64_t v14 = *v13;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for LastFrameWorldTransform, v22);
  if ((v22[0] & 1) == 0)
  {
    v22[0] = &type metadata for LastFrameWorldTransform;
    v22[1] = &off_1F0F8F498;
    char v23 = 0;
    sub_1B63B2A48(v14 + 104, (uint64_t)v22, a2, 0, a1, v14);
    sub_1B6391400((uint64_t)v22);
  }
  char v15 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17[2] = v24;
  sub_1B69EEA28(v21.n128_i64[0], (uint64_t)sub_1B68791B8, (uint64_t)v17);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v13 + 32));
}

uint64_t sub_1B6869354(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a3;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for MetalScriptReflection, v17);
  if (LOBYTE(v17[0]) == 1) {
    return sub_1B6C048D0(a2, a3);
  }
  uint64_t v16 = a5;
  uint64_t v11 = *(uint64_t **)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  ecs_stack_allocator_push_snapshot(*(void *)(*v11 + 32));
  uint64_t v12 = *v11;
  sub_1B6345398(*(void *)(a1 + 40), (uint64_t)&type metadata for MetalScriptReflection, v17);
  if ((v17[0] & 1) == 0)
  {
    v17[0] = &type metadata for MetalScriptReflection;
    v17[1] = &off_1F0F880B8;
    char v18 = 0;
    sub_1B63B2A48(v12 + 104, (uint64_t)v17, a2, 0, a1, v12);
    sub_1B6391400((uint64_t)v17);
  }
  uint64_t v13 = sub_1B634507C((char *)a1);
  MEMORY[0x1F4188790](v13, v14);
  v15[2] = &v19;
  sub_1B69EDFD0(v16, (uint64_t)sub_1B6875368, (uint64_t)v15);
  return ecs_stack_allocator_pop_snapshot(*(void *)(*v11 + 32));
}

void *sub_1B68694EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = swift_bridgeObjectRetain() + 80;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v4 = *(void *)(v3 - 48);
    uint64_t v5 = *(void *)(v3 - 40);
    uint64_t v7 = *(void *)(v3 - 32);
    unint64_t v6 = *(void *)(v3 - 24);
    sub_1B62D7710(a2, (uint64_t)&v21, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
    if (v21)
    {
      uint64_t v8 = v22;
      if (*(void *)(v22 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1B629C9E8(v7, v6);
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1B62B2CE0(v4, v5);
        if (v10)
        {
          uint64_t v11 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
          uint64_t v12 = *v11;
          uint64_t v13 = v11[1];
          swift_retain();
          swift_bridgeObjectRelease_n();
          sub_1B629DCAC(v7, v6);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v14 = v19;
          }
          else {
            uint64_t v14 = sub_1B68C3F64(0, v19[2] + 1, 1, v19);
          }
          unint64_t v16 = v14[2];
          unint64_t v15 = v14[3];
          if (v16 >= v15 >> 1) {
            uint64_t v14 = sub_1B68C3F64(v15 > 1, v16 + 1, 1, v14);
          }
          _DWORD v14[2] = v16 + 1;
          uint64_t v19 = v14;
          char v17 = &v14[2 * v16];
          void v17[4] = v12;
          void v17[5] = v13;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_1B629DCAC(v7, v6);
        }
      }
    }
    v3 += 56;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1B68696DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = 0;
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t result = a1 + 56;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(result - 24);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  uint64_t v32 = result;
  int64_t v33 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v30 = result + 48;
LABEL_10:
  while (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v3 << 6);
LABEL_26:
    uint64_t v15 = *(void *)(a2 + 16);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      char v17 = (int *)(*(void *)(a1 + 48) + 8 * v12);
      int v18 = *v17;
      int v19 = v17[1];
      uint64_t v20 = v15 + 32;
      while (1)
      {
        uint64_t v21 = v16 - 1;
        uint64_t v22 = *(void *)(v20 + 32 * (v16 - 1) + 16);
        if (*(void *)(v22 + 16))
        {
          sub_1B6E33918();
          sub_1B6E33958();
          sub_1B6E33958();
          uint64_t result = sub_1B6E33988();
          uint64_t v23 = -1 << *(unsigned char *)(v22 + 32);
          unint64_t v24 = result & ~v23;
          if ((*(void *)(v22 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24)) {
            break;
          }
        }
LABEL_28:
        --v16;
        if (!v21) {
          goto LABEL_10;
        }
      }
      uint64_t v25 = ~v23;
      while (1)
      {
        uint64_t v26 = (int *)(*(void *)(v22 + 48) + 8 * v24);
        int v28 = *v26;
        int v27 = v26[1];
        if (v28 == v18 && v27 == v19) {
          break;
        }
        unint64_t v24 = (v24 + 1) & v25;
        if (((*(void *)(v22 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          goto LABEL_28;
        }
      }
      uint64_t v10 = *a3;
      if (*((unsigned char *)a3 + 8)) {
        uint64_t v10 = v16;
      }
      if (v16 > v10) {
        uint64_t v10 = v16;
      }
      *a3 = v10;
      *((unsigned char *)a3 + 8) = 0;
    }
  }
  uint64_t v13 = v3 + 1;
  if (v3 + 1 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 2;
  if (v3 + 2 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 3;
  if (v3 + 3 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14)
  {
LABEL_25:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v3 = v13;
    goto LABEL_26;
  }
  while (v33 - 6 != v3)
  {
    unint64_t v14 = *(void *)(v30 + 8 * v3++);
    if (v14)
    {
      uint64_t v13 = v3 + 5;
      goto LABEL_25;
    }
  }
  return result;
}

uint64_t sub_1B6869950(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = 0;
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t result = a1 + 56;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(result - 24);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  uint64_t v32 = result;
  int64_t v33 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v30 = result + 48;
LABEL_10:
  while (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v3 << 6);
LABEL_26:
    uint64_t v15 = *(void *)(a2 + 16);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = 0;
      int v18 = (int *)(*(void *)(a1 + 48) + 8 * v12);
      int v19 = *v18;
      int v20 = v18[1];
      uint64_t v21 = v15 + 32;
      while (1)
      {
        uint64_t v22 = *(void *)(v21 + 32 * v17 + 24);
        if (*(void *)(v22 + 16))
        {
          sub_1B6E33918();
          sub_1B6E33958();
          sub_1B6E33958();
          uint64_t result = sub_1B6E33988();
          uint64_t v23 = -1 << *(unsigned char *)(v22 + 32);
          unint64_t v24 = result & ~v23;
          if ((*(void *)(v22 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24)) {
            break;
          }
        }
LABEL_28:
        if (++v17 == v16) {
          goto LABEL_10;
        }
      }
      uint64_t v25 = ~v23;
      while (1)
      {
        uint64_t v26 = (int *)(*(void *)(v22 + 48) + 8 * v24);
        int v28 = *v26;
        int v27 = v26[1];
        if (v28 == v19 && v27 == v20) {
          break;
        }
        unint64_t v24 = (v24 + 1) & v25;
        if (((*(void *)(v22 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          goto LABEL_28;
        }
      }
      uint64_t v10 = *a3;
      if (*((unsigned char *)a3 + 8)) {
        uint64_t v10 = v17;
      }
      if (v17 < v10) {
        uint64_t v10 = v17;
      }
      *a3 = v10;
      *((unsigned char *)a3 + 8) = 0;
    }
  }
  uint64_t v13 = v3 + 1;
  if (v3 + 1 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 2;
  if (v3 + 2 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 3;
  if (v3 + 3 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14) {
    goto LABEL_25;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v33) {
    return result;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  if (v14)
  {
LABEL_25:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v3 = v13;
    goto LABEL_26;
  }
  while (v33 - 6 != v3)
  {
    unint64_t v14 = *(void *)(v30 + 8 * v3++);
    if (v14)
    {
      uint64_t v13 = v3 + 5;
      goto LABEL_25;
    }
  }
  return result;
}

uint64_t sub_1B6869BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    unint64_t v14 = (void *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v15 = v14[1];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v11);
    v18[0] = *v14;
    v18[1] = v15;
    _OWORD v18[2] = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B685D480((uint64_t)v18, a2);
    if (v2)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v12 = v9 + 1;
    if (v9 + 1 >= v8) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v19 + 8 * v12);
    if (!v13)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v8) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v19 + 8 * v12);
      if (!v13)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v8) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v19 + 8 * v12);
        if (!v13)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v8) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v19 + 8 * v12);
          if (!v13)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v8) {
              return swift_release();
            }
            unint64_t v13 = *(void *)(v19 + 8 * v12);
            if (!v13)
            {
              while (v8 - 6 != v9)
              {
                unint64_t v13 = *(void *)(a1 + 8 * v9++ + 112);
                if (v13)
                {
                  uint64_t v12 = v9 + 5;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    uint64_t v9 = v12;
  }
}

uint64_t sub_1B6869DAC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8, v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1E4FBC840];
  if (!*(void *)(a4 + 16)) {
    goto LABEL_11;
  }
  unint64_t v17 = sub_1B69FAA7C(a1 | ((HIDWORD(a1) & 1) << 32));
  if ((v18 & 1) == 0) {
    goto LABEL_11;
  }
  sub_1B6366C08(*(void *)(a4 + 56) + *(void *)(v12 + 72) * v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  uint64_t v19 = *((void *)v15 + 2);
  swift_bridgeObjectRetain();
  sub_1B62BFF14((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  if (!*(void *)(v19 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1B62B2CE0(a6, a7);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    long long v40 = 0u;
    long long v41 = 0u;
LABEL_12:
    sub_1B68736D8((uint64_t)&v40, (uint64_t)&qword_1EB980F60, v16 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
    return 5;
  }
  uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23 && *(void *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1B62B2CE0(0xD000000000000012, 0x80000001B6F30940);
    if (v25)
    {
      sub_1B66459A4(*(void *)(v23 + 56) + 88 * v24, (uint64_t)&v34);
    }
    else
    {
      uint64_t v39 = 0;
      long long v37 = 0u;
      long long v38 = 0u;
      long long v35 = 0u;
      long long v36 = 0u;
      long long v34 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (!*((void *)&v34 + 1)) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v39 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v34 = 0u;
    swift_release();
    if (!*((void *)&v34 + 1))
    {
LABEL_22:
      sub_1B68736D8((uint64_t)&v34, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
      goto LABEL_11;
    }
  }
  sub_1B6366948((uint64_t)&v37 + 8, (uint64_t)&v40, (uint64_t)&qword_1EB980F60, v16 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D85D4);
  sub_1B666BD18((uint64_t)&v34);
  if (!*((void *)&v41 + 1)) {
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 5;
  }
  uint64_t v28 = sub_1B6E31828();
  uint64_t v29 = v27;
  if (v28 == 0x6C61636F6CLL && v27 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v28 == 0x656E656373 && v29 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v28 == 0x646C726F77 && v29 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      return 1;
    }
    char v30 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_33;
    }
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v34 = 0;
    *((void *)&v34 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v31 = v34;
    int v32 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v34 = 0;
    swift_retain();
    sub_1B6B33E34(v32, (uint64_t *)&v34, v31, *((uint64_t *)&v31 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return 2;
}

uint64_t sub_1B686A348(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8, v13);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a4 + 16)) {
    return 4;
  }
  unint64_t v16 = sub_1B69FAA7C(a1 | ((HIDWORD(a1) & 1) << 32));
  if ((v17 & 1) == 0) {
    return 4;
  }
  sub_1B6366C08(*(void *)(a4 + 56) + *(void *)(v12 + 72) * v16, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  uint64_t v18 = *((void *)v15 + 2);
  swift_bridgeObjectRetain();
  sub_1B62BFF14((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  if (!*(void *)(v18 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B62B2CE0(a6, a7);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    return 4;
  }
  uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22 || !*(void *)(v22 + 16))
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v36 = 0u;
LABEL_12:
    swift_release();
    sub_1B68736D8((uint64_t)&v36, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
    return 4;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1B62B2CE0(0x4D73736572646441, 0xEB0000000065646FLL);
  if (v24)
  {
    sub_1B66459A4(*(void *)(v22 + 56) + 88 * v23, (uint64_t)&v36);
  }
  else
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v36 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v36 + 1)) {
    goto LABEL_12;
  }
  v42[2] = v38;
  v43[0] = v39;
  v43[1] = v40;
  uint64_t v44 = v41;
  v42[0] = v36;
  v42[1] = v37;
  sub_1B6366948((uint64_t)v43 + 8, (uint64_t)v35, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D85D4);
  sub_1B62B57A8(v35, &v36);
  swift_dynamicCast();
  uint64_t v27 = v34[0];
  uint64_t v28 = v34[1];
  uint64_t v29 = (void *)sub_1B6851F00();
  uint64_t v30 = sub_1B69EFB10(v27, v28, v29);
  char v32 = v31;
  swift_bridgeObjectRelease();
  if (v32) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = v30;
  }
  uint64_t v25 = byte_1F0F54180[v33 + 32];
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B666BD18((uint64_t)v42);
  return v25;
}

uint64_t sub_1B686A6A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8, v13);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a4 + 16)) {
    return 2;
  }
  unint64_t v16 = sub_1B69FAA7C(a1 | ((HIDWORD(a1) & 1) << 32));
  if ((v17 & 1) == 0) {
    return 2;
  }
  sub_1B6366C08(*(void *)(a4 + 56) + *(void *)(v12 + 72) * v16, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  uint64_t v18 = *((void *)v15 + 2);
  swift_bridgeObjectRetain();
  sub_1B62BFF14((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  if (!*(void *)(v18 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B62B2CE0(a6, a7);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    return 2;
  }
  uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22 || !*(void *)(v22 + 16))
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v36 = 0u;
LABEL_12:
    swift_release();
    sub_1B68736D8((uint64_t)&v36, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
    return 2;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1B62B2CE0(0x6F4D7265746C6946, 0xEA00000000006564);
  if (v24)
  {
    sub_1B66459A4(*(void *)(v22 + 56) + 88 * v23, (uint64_t)&v36);
  }
  else
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v36 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v36 + 1)) {
    goto LABEL_12;
  }
  v42[2] = v38;
  v43[0] = v39;
  v43[1] = v40;
  uint64_t v44 = v41;
  v42[0] = v36;
  v42[1] = v37;
  sub_1B6366948((uint64_t)v43 + 8, (uint64_t)v35, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D85D4);
  sub_1B62B57A8(v35, &v36);
  swift_dynamicCast();
  uint64_t v27 = v34[0];
  uint64_t v28 = v34[1];
  uint64_t v29 = (void *)sub_1B6851FD4();
  uint64_t v30 = sub_1B69EFB10(v27, v28, v29);
  char v32 = v31;
  swift_bridgeObjectRelease();
  if (v32) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = v30;
  }
  uint64_t v25 = byte_1F0F80088[v33 + 32];
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B666BD18((uint64_t)v42);
  return v25;
}

uint64_t sub_1B686A9FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v14 = HIDWORD(a5) & 1;
  uint64_t v15 = a5;
  uint64_t v16 = a4 & 0x10101;
  uint64_t v52 = *a8;
  uint64_t v53 = a8[1];
  char v17 = sub_1B6869DAC(a5 | (unint64_t)(v14 << 32), a1, a2, a3, v16, *a8, v53);
  if (v17 != 5)
  {
    char v26 = v17;
    unint64_t v27 = HIDWORD(a6);
    int v28 = a6;
    if (*(void *)(a7 + 216)) {
      a7 = *(void *)(a7 + 216);
    }
    else {
      swift_retain();
    }
    uint64_t v29 = swift_allocObject();
    *(_DWORD *)(v29 + 16) = v28;
    *(_DWORD *)(v29 + 20) = v27;
    uint64_t v31 = *(void *)(a7 + 16);
    uint64_t v30 = *(void *)(a7 + 24);
    uint64_t v32 = *(void *)(a7 + 48);
    char v33 = *(unsigned char *)(a7 + 56);
    __int16 v34 = *(_WORD *)(a7 + 58);
    swift_retain();
    swift_bridgeObjectRetain();
    long long v54 = *(_OWORD *)(a7 + 32);
    swift_retain();
    swift_release();
    *(void *)(v29 + 24) = v31;
    *(void *)(v29 + 32) = v30;
    *(_OWORD *)(v29 + 40) = v54;
    *(void *)(v29 + 56) = v32;
    *(unsigned char *)(v29 + 64) = v33;
    *(_WORD *)(v29 + 66) = v34;
    uint64_t result = v29 | 0x4000000000000000;
    *(unsigned char *)(v29 + 68) = v26;
    return result;
  }
  sub_1B629C37C((uint64_t)(a8 + 2), (uint64_t)v58);
  unint64_t v18 = a8[3];
  uint64_t result = 0xF000000000000007;
  if (v18 > 0x26 || ((1 << v18) & 0x43A0000000) == 0) {
    return result;
  }
  sub_1B6E32738();
  if (!swift_conformsToProtocol2())
  {
    __break(1u);
    goto LABEL_50;
  }
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    LOBYTE(v55[0]) = v14;
    char v20 = sub_1B686A348(v15 | ((unint64_t)v14 << 32), a1, a2, a3, v16, v52, v53);
    if (v20 == 4) {
      char v21 = 1;
    }
    else {
      char v21 = v20;
    }
    LOBYTE(v55[0]) = v14;
    char v22 = sub_1B686A6A4(v15 | ((unint64_t)v14 << 32), a1, a2, a3, v16, v52, v53);
    char v23 = (v22 == 2) | v22;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v24;
    *(void *)(v24 + 16) = a6;
    *(void *)(v24 + 24) = 0;
    *(_WORD *)(v24 + 32) = 0;
LABEL_11:
    *(unsigned char *)(v24 + 34) = v21;
    uint64_t result = v24 | 0x7000000000000000;
    *(unsigned char *)(v25 + 35) = v23 & 1;
    return result;
  }
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype())
  {
    LOBYTE(v55[0]) = v14;
    char v35 = sub_1B686A348(v15 | ((unint64_t)v14 << 32), a1, a2, a3, v16, v52, v53);
    if (v35 == 4) {
      char v21 = 2;
    }
    else {
      char v21 = v35;
    }
    LOBYTE(v55[0]) = v14;
    char v36 = sub_1B686A6A4(v15 | ((unint64_t)v14 << 32), a1, a2, a3, v16, v52, v53);
    char v23 = (v36 == 2) | v36;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v24;
    *(void *)(v24 + 16) = a6;
    *(void *)(v24 + 24) = 0;
    *(_WORD *)(v24 + 32) = 256;
    goto LABEL_11;
  }
  if (!swift_dynamicCastMetatype()) {
    return 0xF000000000000007;
  }
  LOBYTE(v55[0]) = v14;
  char v37 = sub_1B686A348(v15 | ((unint64_t)v14 << 32), a1, a2, a3, v16, v52, v53);
  if (v37 == 4) {
    char v38 = 2;
  }
  else {
    char v38 = v37;
  }
  LOBYTE(v55[0]) = v14;
  char v39 = sub_1B686A6A4(v15 | ((unint64_t)v14 << 32), a1, a2, a3, v16, v52, v53);
  if (sub_1B6A3D8B8() == 0xD000000000000010 && v40 == 0x80000001B6F39D80) {
    goto LABEL_32;
  }
  char v41 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
  {
    if (sub_1B6A3D8B8() == 0xD000000000000010 && v42 == 0x80000001B6F39DA0)
    {
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    char v43 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      if (qword_1EB9852D0 == -1)
      {
LABEL_45:
        v55[0] = 0;
        v55[1] = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        uint64_t v56 = 0;
        unint64_t v57 = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B629C37C((uint64_t)v58, (uint64_t)v55);
        sub_1B6E32B18();
        uint64_t v49 = v56;
        uint64_t v50 = v57;
        int v51 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        v55[0] = 0;
        swift_retain();
        sub_1B6B33E34(v51, v55, v49, v50);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return 0xF000000000000007;
      }
LABEL_50:
      swift_once();
      goto LABEL_45;
    }
  }
LABEL_37:
  char v44 = (v39 == 2) | v39;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = a6;
  *(void *)(v45 + 24) = 0;
  *(unsigned char *)(v45 + 32) = 0;
  if (sub_1B6A3D8B8() == 0xD000000000000010 && v46 == 0x80000001B6F39D80)
  {
    swift_bridgeObjectRelease();
    char v47 = 1;
  }
  else
  {
    char v48 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v48) {
      char v47 = 1;
    }
    else {
      char v47 = 2;
    }
  }
  *(unsigned char *)(v45 + 33) = v47;
  *(unsigned char *)(v45 + 34) = v38;
  *(unsigned char *)(v45 + 35) = v44 & 1;
  return v45 | 0x7000000000000000;
}

uint64_t sub_1B686B0C8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7, void **a8)
{
  sub_1B62D7710(a2, (uint64_t)v101, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
  uint64_t v12 = v103;
  uint64_t v94 = v102;
  uint64_t v13 = v104;
  long long v14 = *(_OWORD *)(a1 + 16);
  v109[0] = *(_OWORD *)a1;
  v109[1] = v14;
  v109[2] = *(_OWORD *)(a1 + 32);
  uint64_t v110 = *(void *)(a1 + 48);
  sub_1B62D7710(a2, (uint64_t)&v107, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
  if (v107)
  {
    uint64_t v15 = v108;
    long long v16 = v109[0];
    uint64_t v17 = v12;
    if (*(void *)(v108 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1B62B2CE0(v16, *((uint64_t *)&v16 + 1));
      if (v19)
      {
        uint64_t v20 = *(void *)(v15 + 56);
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v94 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1B62B2CE0(v16, *((uint64_t *)&v16 + 1));
      if (v34)
      {
        char v35 = *(void **)(*(void *)(v94 + 56) + 8 * v33);
        swift_retain();
        swift_bridgeObjectRelease();
        if (qword_1EB97F2F0 != -1) {
          swift_once();
        }
        uint64_t v36 = qword_1EB997D88;
        swift_bridgeObjectRetain();
        char v37 = sub_1B69EEFB4(v35, v36);
        swift_bridgeObjectRelease();
        if ((v37 & 1) == 0) {
          return swift_release();
        }
        if (v35[27])
        {
          char v38 = (void *)v35[27];
        }
        else
        {
          swift_retain();
          char v38 = v35;
        }
        uint64_t v74 = v38[2];
        uint64_t v73 = v38[3];
        uint64_t v75 = v38[6];
        char v76 = *((unsigned char *)v38 + 56);
        __int16 v77 = *((_WORD *)v38 + 29);
        swift_retain();
        swift_bridgeObjectRetain();
        long long v95 = *((_OWORD *)v38 + 2);
        swift_retain();
        swift_release();
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = v74;
        *(void *)(v78 + 24) = v73;
        *(_OWORD *)(v78 + 32) = v95;
        *(void *)(v78 + 48) = v75;
        *(unsigned char *)(v78 + 56) = v76;
        *(_WORD *)(v78 + 58) = v77;
        *(unsigned char *)(v78 + 60) = 5;
        unint64_t v79 = 0x9000000000000000;
        goto LABEL_72;
      }
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v12 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1B62B2CE0(v16, *((uint64_t *)&v16 + 1));
      if (v44)
      {
        uint64_t v45 = *(void **)(*(void *)(v12 + 56) + 8 * v43);
        swift_retain();
        swift_bridgeObjectRelease();
        if (qword_1EB97F2F8 != -1) {
          swift_once();
        }
        uint64_t v46 = qword_1EB997D90;
        swift_bridgeObjectRetain();
        char v47 = sub_1B69EEFB4(v45, v46);
        swift_bridgeObjectRelease();
        if ((v47 & 1) == 0) {
          return swift_release();
        }
        if (v45[27])
        {
          char v48 = (void *)v45[27];
        }
        else
        {
          swift_retain();
          char v48 = v45;
        }
        uint64_t v81 = v48[2];
        uint64_t v80 = v48[3];
        uint64_t v82 = v48[6];
        char v83 = *((unsigned char *)v48 + 56);
        __int16 v84 = *((_WORD *)v48 + 29);
        swift_retain();
        swift_bridgeObjectRetain();
        long long v96 = *((_OWORD *)v48 + 2);
        swift_retain();
        swift_release();
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = v81;
        *(void *)(v78 + 24) = v80;
        *(_OWORD *)(v78 + 32) = v96;
        *(void *)(v78 + 48) = v82;
        *(unsigned char *)(v78 + 56) = v83;
        *(_WORD *)(v78 + 58) = v84;
        unint64_t v79 = 0xA000000000000000;
LABEL_72:
        long long v54 = *a8;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a8 = v54;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          long long v54 = sub_1B68C0FD8(0, v54[2] + 1, 1, v54);
          *a8 = v54;
        }
        unint64_t v53 = v78 | v79;
LABEL_75:
        unint64_t v87 = v54[2];
        unint64_t v86 = v54[3];
        if (v87 >= v86 >> 1) {
          long long v54 = sub_1B68C0FD8(v86 > 1, v87 + 1, 1, v54);
        }
        v54[2] = v87 + 1;
        int64_t v88 = &v54[4 * v87];
        v88[4] = v53;
        *((unsigned char *)v88 + 40) = 1;
        v88[6] = 0;
        *((unsigned char *)v88 + 56) = 1;
        *a8 = v54;
        return swift_release();
      }
      swift_bridgeObjectRelease();
    }
    if (!*(void *)(v13 + 16))
    {
LABEL_46:
      uint64_t v105 = 0;
      unint64_t v106 = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E32B18();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v99 = v105;
      unint64_t v100 = v106;
      sub_1B62D7710(a2, (uint64_t)&v105, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
      if (v105)
      {
        uint64_t v97 = 0x3A737475706E690ALL;
        unint64_t v98 = 0xE900000000000020;
        swift_bridgeObjectRetain();
        sub_1B6E314D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        if (*(void *)(v94 + 16))
        {
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          uint64_t v97 = 0xD00000000000001ALL;
          unint64_t v98 = 0x80000001B6F39D00;
          swift_bridgeObjectRetain();
          sub_1B6E314D8();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v17 + 16))
        {
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          uint64_t v97 = 0xD00000000000001FLL;
          unint64_t v98 = 0x80000001B6F39D20;
          swift_bridgeObjectRetain();
          sub_1B6E314D8();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
        }
        if (!*(void *)(v13 + 16)) {
          goto LABEL_55;
        }
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        uint64_t v97 = 0xD000000000000010;
        unint64_t v98 = 0x80000001B6F39D40;
        swift_bridgeObjectRetain();
        sub_1B6E314D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      else
      {
        uint64_t v97 = 0x7374757074756F0ALL;
        unint64_t v98 = 0xEA0000000000203ALL;
        swift_bridgeObjectRetain();
        sub_1B6E314D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      swift_bridgeObjectRelease();
LABEL_55:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v56 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v97 = 0;
      swift_retain();
      sub_1B6B33E34(v56, &v97, v99, v100);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1B62B2CE0(v16, *((uint64_t *)&v16 + 1));
    if (v50)
    {
      uint64_t v51 = *(void *)(*(void *)(v13 + 56) + 16 * v49);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v51;
      *(void *)(v52 + 24) = 0;
      *(unsigned char *)(v52 + 32) = 0;
      unint64_t v53 = v52 | 0x8000000000000000;
      long long v54 = *a8;
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      *a8 = v54;
      if ((v55 & 1) == 0)
      {
        long long v54 = sub_1B68C0FD8(0, v54[2] + 1, 1, v54);
        *a8 = v54;
      }
      goto LABEL_75;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  long long v21 = v109[0];
  if (!*(void *)(a4 + 16))
  {
    uint64_t v17 = v12;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1B62B2CE0(v21, *((uint64_t *)&v21 + 1));
  if ((v22 & 1) == 0)
  {
    uint64_t v17 = v12;
    goto LABEL_45;
  }
  uint64_t v20 = *(void *)(a4 + 56);
LABEL_8:
  char v23 = (unsigned int *)(v20 + 16 * v18);
  uint64_t v24 = *((void *)v23 + 1);
  uint64_t v25 = *v23;
  uint64_t v26 = v23[1];
  swift_retain_n();
  swift_bridgeObjectRelease();
  if (v25 != -1 || v26 != 0)
  {
    uint64_t v28 = sub_1B686A9FC(a3, a4, a5, a6 & 0x10101, a7 | ((HIDWORD(a7) & 1) << 32), v25 | (v26 << 32), v24, (uint64_t *)v109);
    if ((~v28 & 0xF000000000000007) != 0)
    {
      unint64_t v57 = v28;
      char v58 = v29;
      uint64_t v59 = v30;
      char v60 = v31 & 1;
      uint64_t v61 = a8;
    }
    else
    {
      if (*(void *)(v24 + 216))
      {
        uint64_t v32 = *(void *)(v24 + 216);
      }
      else
      {
        swift_retain();
        uint64_t v32 = v24;
      }
      uint64_t v61 = a8;
      uint64_t v62 = swift_allocObject();
      *(_DWORD *)(v62 + 16) = v25;
      *(_DWORD *)(v62 + 20) = v26;
      uint64_t v64 = *(void *)(v32 + 16);
      uint64_t v63 = *(void *)(v32 + 24);
      uint64_t v65 = *(void *)(v32 + 48);
      char v66 = *(unsigned char *)(v32 + 56);
      __int16 v67 = *(_WORD *)(v32 + 58);
      swift_retain();
      swift_bridgeObjectRetain();
      long long v93 = *(_OWORD *)(v32 + 32);
      swift_retain();
      swift_release();
      uint64_t v59 = 0;
      *(void *)(v62 + 24) = v64;
      *(void *)(v62 + 32) = v63;
      *(_OWORD *)(v62 + 40) = v93;
      *(void *)(v62 + 56) = v65;
      *(unsigned char *)(v62 + 64) = v66;
      unint64_t v57 = v62 | 0x3000000000000000;
      char v58 = 1;
      char v60 = 1;
      *(_WORD *)(v62 + 66) = v67;
    }
    uint64_t v68 = *v61;
    sub_1B62C6AA8(v57);
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v61 = v68;
    if ((v69 & 1) == 0)
    {
      uint64_t v68 = sub_1B68C0FD8(0, v68[2] + 1, 1, v68);
      *uint64_t v61 = v68;
    }
    unint64_t v71 = v68[2];
    unint64_t v70 = v68[3];
    if (v71 >= v70 >> 1) {
      uint64_t v68 = sub_1B68C0FD8(v70 > 1, v71 + 1, 1, v68);
    }
    v68[2] = v71 + 1;
    uint64_t v72 = &v68[4 * v71];
    v72[4] = v57;
    *((unsigned char *)v72 + 40) = v58;
    v72[6] = v59;
    *((unsigned char *)v72 + 56) = v60;
    *uint64_t v61 = v68;
    swift_release();
    sub_1B62C6A70(v57);
    return swift_release();
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v105 = 0;
  unint64_t v106 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  LOBYTE(v99) = a3;
  sub_1B6E32B18();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v40 = v105;
  uint64_t v39 = v106;
  int v41 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v105 = 0;
  swift_retain();
  sub_1B6B33E34(v41, &v105, v40, v39);
  swift_release_n();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B686BDA8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int64_t v125 = *(void *)(a4 + 16);
  if (!v125) {
    return v125 != 0;
  }
  uint64_t v5 = a4;
  unint64_t v124 = a2;
  unint64_t v121 = a1;
  if (a3)
  {
    int64_t v7 = *(void *)(a3 + 16);
    if (v7)
    {
      unint64_t v163 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B6C3D5DC(0, v7, 0);
      unint64_t v131 = v163;
      int64_t v8 = (void *)(a3 + 40);
      do
      {
        uint64_t v9 = *(v8 - 1);
        unint64_t v10 = (void *)*v8;
        swift_retain();
        uint64_t v11 = sub_1B6E32738();
        uint64_t result = swift_conformsToProtocol2();
        if (!result) {
          goto LABEL_198;
        }
        uint64_t result = swift_conformsToProtocol2();
        if (!result) {
          goto LABEL_199;
        }
        uint64_t v13 = result;
        uint64_t v14 = v10[5];
        uint64_t v15 = v10[3];
        uint64_t v159 = v10[2];
        if (v10[27])
        {
          long long v16 = (void *)v10[27];
        }
        else
        {
          swift_retain();
          long long v16 = v10;
        }
        uint64_t v17 = v16[4];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        swift_release();
        unint64_t v18 = v131;
        unint64_t v163 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B6C3D5DC(0, *(void *)(v131 + 16) + 1, 1);
          unint64_t v18 = v163;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        unint64_t v19 = *(void *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1B6C3D5DC(v19 > 1, v20 + 1, 1);
          unint64_t v18 = v163;
        }
        *(void *)(v18 + 16) = v20 + 1;
        unint64_t v131 = v18;
        long long v21 = (void *)(v18 + 56 * v20);
        void v21[4] = v9;
        void v21[5] = v11;
        v21[6] = v13;
        v21[7] = v14;
        v21[8] = v159;
        v21[9] = v15;
        v21[10] = v17;
        v8 += 2;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      a2 = v124;
      a1 = v121;
      uint64_t v5 = a4;
    }
    else
    {
      unint64_t v131 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    unint64_t v131 = 0;
  }
  unint64_t v119 = HIDWORD(a1);
  unint64_t v122 = HIDWORD(a2);
  unint64_t v163 = MEMORY[0x1E4FBC860];
  int64_t v22 = v125;
  sub_1B6C3D5DC(0, v125, 0);
  unint64_t v23 = v163;
  uint64_t v24 = (void *)(v5 + 40);
  do
  {
    uint64_t v25 = *(v24 - 1);
    uint64_t v26 = (void *)*v24;
    swift_retain();
    uint64_t v27 = sub_1B6E32738();
    uint64_t result = swift_conformsToProtocol2();
    if (!result)
    {
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
      return result;
    }
    uint64_t result = swift_conformsToProtocol2();
    if (!result) {
      goto LABEL_197;
    }
    uint64_t v28 = result;
    uint64_t v29 = v26[3];
    uint64_t v156 = v26[2];
    uint64_t v160 = v26[5];
    if (v26[27])
    {
      uint64_t v30 = (void *)v26[27];
    }
    else
    {
      swift_retain();
      uint64_t v30 = v26;
    }
    uint64_t v31 = v30[4];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    swift_release();
    unint64_t v163 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B6C3D5DC(0, *(void *)(v23 + 16) + 1, 1);
      unint64_t v23 = v163;
    }
    unint64_t v33 = *(void *)(v23 + 16);
    unint64_t v32 = *(void *)(v23 + 24);
    unint64_t v34 = v33 + 1;
    if (v33 >= v32 >> 1)
    {
      sub_1B6C3D5DC(v32 > 1, v33 + 1, 1);
      unint64_t v23 = v163;
    }
    *(void *)(v23 + 16) = v34;
    char v35 = (void *)(v23 + 32 + 56 * v33);
    void *v35 = v25;
    v35[1] = v27;
    _OWORD v35[2] = v28;
    v35[3] = v160;
    v35[4] = v156;
    _OWORD v35[5] = v29;
    v35[6] = v31;
    v24 += 2;
    --v22;
  }
  while (v22);
  if (!v131)
  {
    unint64_t v130 = v23 + 32;
    goto LABEL_100;
  }
  unint64_t v130 = v23 + 32;
  uint64_t v128 = *(void *)(v131 + 16);
  if (!v128)
  {
LABEL_100:
    uint64_t v132 = 0;
    char v133 = 1;
    goto LABEL_101;
  }
  uint64_t v36 = *(void *)(*v126 + 16);
  uint64_t v135 = *v126 + 32;
  swift_bridgeObjectRetain();
  uint64_t v37 = 0;
  uint64_t v132 = 0;
  char v133 = 1;
  uint64_t v127 = v36;
  while (2)
  {
    if (!v36) {
      goto LABEL_34;
    }
    uint64_t v38 = v131 + 32 + 56 * v37;
    int v40 = *(_DWORD *)v38;
    int v39 = *(_DWORD *)(v38 + 4);
    uint64_t v161 = *(ValueMetadata **)(v38 + 8);
    uint64_t v153 = *(void *)(v38 + 24);
    uint64_t v41 = *(void *)(v38 + 40);
    uint64_t v157 = *(void *)(v38 + 32);
    uint64_t v129 = v37;
    uint64_t v42 = *(void *)(v38 + 48);
    swift_bridgeObjectRetain();
    uint64_t v151 = v42;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v145 = v41;
    while (1)
    {
      uint64_t v137 = v36;
      uint64_t v43 = v36 - 1;
      uint64_t v44 = *(void *)(v135 + 40 * (v36 - 1) + 24);
      uint64_t v45 = *(void *)(v44 + 16);
      uint64_t v147 = v36 - 1;
      uint64_t v149 = v44;
      if (v45) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_64:
      if (v161 == &type metadata for WorldTransform)
      {
        uint64_t v54 = v44;
        uint64_t v55 = *(void *)(v44 + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v55)
        {
          uint64_t v56 = 0;
          uint64_t v139 = v54 + 80;
          unint64_t v57 = MEMORY[0x1E4FBC860];
          do
          {
            char v58 = (void *)(v139 + 56 * v56);
            uint64_t v59 = v56;
            while (1)
            {
              if (*((_DWORD *)v58 - 12) == v40 && *((_DWORD *)v58 - 11) == v39)
              {
                uint64_t v61 = *(v58 - 5);
                if (swift_dynamicCastMetatype()
                  || swift_dynamicCastMetatype()
                  || swift_dynamicCastMetatype()
                  || swift_dynamicCastMetatype()
                  || swift_dynamicCastMetatype()
                  || swift_dynamicCastMetatype()
                  || swift_dynamicCastMetatype()
                  || swift_dynamicCastMetatype())
                {
                  break;
                }
              }
              ++v59;
              v58 += 7;
              if (v55 == v59) {
                goto LABEL_89;
              }
            }
            long long v143 = *((_OWORD *)v58 - 2);
            uint64_t v63 = *(v58 - 2);
            uint64_t v62 = *(v58 - 1);
            uint64_t v64 = *v58;
            swift_retain();
            swift_bridgeObjectRetain();
            unint64_t v163 = v57;
            uint64_t v141 = v63;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B6C3D5DC(0, *(void *)(v57 + 16) + 1, 1);
              unint64_t v57 = v163;
            }
            unint64_t v66 = *(void *)(v57 + 16);
            unint64_t v65 = *(void *)(v57 + 24);
            if (v66 >= v65 >> 1)
            {
              sub_1B6C3D5DC(v65 > 1, v66 + 1, 1);
              unint64_t v57 = v163;
            }
            uint64_t v56 = v59 + 1;
            *(void *)(v57 + 16) = v66 + 1;
            unint64_t v67 = v57 + 56 * v66;
            *(_DWORD *)(v67 + 32) = v40;
            *(_DWORD *)(v67 + 36) = v39;
            *(void *)(v67 + 40) = v61;
            *(_OWORD *)(v67 + 48) = v143;
            *(void *)(v67 + 64) = v141;
            *(void *)(v67 + 72) = v62;
            *(void *)(v67 + 80) = v64;
          }
          while (v55 - 1 != v59);
        }
        else
        {
          unint64_t v57 = MEMORY[0x1E4FBC860];
        }
LABEL_89:
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v41 = v145;
        swift_bridgeObjectRelease();
        uint64_t v68 = *(void *)(v57 + 16);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v43 = v147;
        if (v68)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_92;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = v43;
      if (!v43)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    uint64_t v46 = (void *)(v44 + 40);
    uint64_t v47 = v153;
    while (2)
    {
      BOOL v48 = *((_DWORD *)v46 - 2) == v40 && *((_DWORD *)v46 - 1) == v39;
      if (!v48) {
        goto LABEL_42;
      }
      if ((ValueMetadata *)*v46 != v161 || v46[2] != v47) {
        goto LABEL_42;
      }
      unint64_t v50 = v46[5];
      if (v46[3] != v157 || v46[4] != v41)
      {
        char v52 = sub_1B6E334B8();
        uint64_t v47 = v153;
        if ((v52 & 1) == 0) {
          goto LABEL_42;
        }
      }
      if (!v50)
      {
        if (!v151) {
          break;
        }
        goto LABEL_42;
      }
      unint64_t v163 = v50;
      if (!v151) {
        goto LABEL_42;
      }
      sub_1B6E32768();
      swift_retain_n();
      swift_bridgeObjectRetain();
      char v53 = sub_1B6E31708();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v41 = v145;
      swift_release();
      uint64_t v47 = v153;
      if ((v53 & 1) == 0)
      {
LABEL_42:
        v46 += 7;
        if (!--v45)
        {
          uint64_t v44 = v149;
          swift_bridgeObjectRelease_n();
          uint64_t v43 = v147;
          goto LABEL_64;
        }
        continue;
      }
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_92:
    swift_bridgeObjectRelease();
    BOOL v48 = (v133 & 1) == 0;
    char v133 = 0;
    uint64_t v69 = v132;
    if (!v48) {
      uint64_t v69 = v137;
    }
    if (v137 > v69) {
      uint64_t v69 = v137;
    }
    uint64_t v132 = v69;
LABEL_33:
    uint64_t v36 = v127;
    uint64_t v37 = v129;
LABEL_34:
    if (++v37 != v128) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  unint64_t v34 = *(void *)(v23 + 16);
  if (!v34) {
    goto LABEL_170;
  }
LABEL_101:
  uint64_t v70 = *v126;
  uint64_t v140 = *v126 + 32;
  unint64_t v123 = v23;
  swift_retain();
  uint64_t v71 = 0;
  unint64_t v72 = v130;
  uint64_t v134 = v70;
  unint64_t v136 = v34;
  while (2)
  {
    uint64_t v142 = *(void *)(v70 + 16);
    if (!v142) {
      goto LABEL_104;
    }
    uint64_t v73 = (int *)(v72 + 56 * v71);
    int v74 = *v73;
    int v75 = v73[1];
    uint64_t v152 = *((void *)v73 + 3);
    uint64_t v76 = *((void *)v73 + 5);
    uint64_t v158 = *((void *)v73 + 1);
    uint64_t v162 = *((void *)v73 + 4);
    uint64_t v138 = v71;
    uint64_t v77 = *((void *)v73 + 6);
    swift_bridgeObjectRetain();
    uint64_t v154 = v77;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v78 = 0;
    uint64_t v150 = v76;
    while (2)
    {
      uint64_t v80 = *(void *)(v140 + 40 * v78 + 16);
      if (v80)
      {
        uint64_t v81 = *(void *)(v80 + 16);
        if (v81)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v82 = (void *)(v80 + 40);
          uint64_t v83 = v158;
          uint64_t v84 = v152;
          while (1)
          {
            if (*((_DWORD *)v82 - 2) == v74 && *((_DWORD *)v82 - 1) == v75 && *v82 == v83 && v82[2] == v84)
            {
              unint64_t v87 = v82[5];
              BOOL v88 = v82[3] == v162 && v82[4] == v76;
              if (v88 || (v89 = sub_1B6E334B8(), v84 = v152, uint64_t v83 = v158, (v89 & 1) != 0))
              {
                if (v87)
                {
                  unint64_t v163 = v87;
                  if (v154)
                  {
                    sub_1B6E32768();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    char v90 = sub_1B6E31708();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    uint64_t v76 = v150;
                    swift_release();
                    uint64_t v84 = v152;
                    uint64_t v83 = v158;
                    if (v90)
                    {
LABEL_162:
                      swift_release();
                      swift_bridgeObjectRelease();
                      uint64_t v70 = v134;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease_n();
                      goto LABEL_164;
                    }
                  }
                }
                else if (!v154)
                {
                  goto LABEL_162;
                }
              }
            }
            v82 += 7;
            if (!--v81)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_136;
            }
          }
        }
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
LABEL_136:
      if (!swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        || !v80)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_108;
      }
      uint64_t v91 = *(void *)(v80 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v92 = 0;
      uint64_t v93 = v91 + 1;
      unint64_t v94 = MEMORY[0x1E4FBC860];
LABEL_146:
      uint64_t v95 = 56 * v92;
      while (v93 != ++v92)
      {
        uint64_t v96 = v95 + 56;
        uint64_t v97 = v80 + v95;
        int v98 = *(_DWORD *)(v97 + 32);
        int v99 = *(_DWORD *)(v97 + 36);
        unint64_t v100 = *(ValueMetadata **)(v97 + 40);
        BOOL v102 = v98 == v74 && v99 == v75 && v100 == &type metadata for WorldTransform;
        uint64_t v95 = v96;
        if (v102)
        {
          long long v146 = *(_OWORD *)(v80 + v96 - 8);
          uint64_t v103 = *(void *)(v80 + v96 + 16);
          uint64_t v144 = *(void *)(v80 + v96 + 8);
          uint64_t v104 = *(void *)(v80 + v96 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v163 = v94;
          uint64_t v148 = v78;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B6C3D5DC(0, *(void *)(v94 + 16) + 1, 1);
            unint64_t v94 = v163;
          }
          unint64_t v106 = *(void *)(v94 + 16);
          unint64_t v105 = *(void *)(v94 + 24);
          if (v106 >= v105 >> 1)
          {
            sub_1B6C3D5DC(v105 > 1, v106 + 1, 1);
            unint64_t v94 = v163;
          }
          *(void *)(v94 + 16) = v106 + 1;
          unint64_t v107 = v94 + 56 * v106;
          *(_DWORD *)(v107 + 32) = v74;
          *(_DWORD *)(v107 + 36) = v75;
          *(void *)(v107 + 40) = &type metadata for WorldTransform;
          *(_OWORD *)(v107 + 48) = v146;
          *(void *)(v107 + 64) = v144;
          *(void *)(v107 + 72) = v103;
          *(void *)(v107 + 80) = v104;
          uint64_t v78 = v148;
          goto LABEL_146;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v79 = *(void *)(v94 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (!v79)
      {
LABEL_108:
        ++v78;
        uint64_t v76 = v150;
        if (v78 == v142)
        {
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v70 = v134;
          swift_bridgeObjectRelease();
          goto LABEL_103;
        }
        continue;
      }
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v70 = v134;
    swift_bridgeObjectRelease();
LABEL_164:
    BOOL v48 = (v133 & 1) == 0;
    char v133 = 0;
    uint64_t v108 = v132;
    if (!v48) {
      uint64_t v108 = v78;
    }
    if (v78 < v108) {
      uint64_t v108 = v78;
    }
    uint64_t v132 = v108;
LABEL_103:
    unint64_t v72 = v130;
    unint64_t v34 = v136;
    uint64_t v71 = v138;
LABEL_104:
    if (++v71 != v34) {
      continue;
    }
    break;
  }
  unint64_t v23 = v123;
  swift_release();
LABEL_170:
  int v109 = v124;
  if ((v124 != -1 || v122) && (uint64_t v110 = *(void *)(v23 + 16)) != 0)
  {
    unint64_t v111 = v23 + 40;
    while (!swift_dynamicCastMetatype()
         && !swift_dynamicCastMetatype()
         && !swift_dynamicCastMetatype()
         && !swift_dynamicCastMetatype()
         && !swift_dynamicCastMetatype()
         && !swift_dynamicCastMetatype()
         && !swift_dynamicCastMetatype()
         && !swift_dynamicCastMetatype())
    {
      v111 += 56;
      if (!--v110)
      {
        char v112 = 0;
        goto LABEL_192;
      }
    }
    char v112 = 1;
LABEL_192:
    int v109 = v124;
    if ((v133 & 1) == 0)
    {
LABEL_193:
      unint64_t v163 = __PAIR64__(v119, v121);
      int v164 = v109;
      int v165 = v122;
      unint64_t v166 = v131;
      unint64_t v167 = v23;
      char v168 = v112;
      __int16 v169 = 257;
      sub_1B68E8868(v132, v132, (uint64_t)&v163);
      if (a5) {
        goto LABEL_194;
      }
      return v125 != 0;
    }
  }
  else
  {
    char v112 = 0;
    if ((v133 & 1) == 0) {
      goto LABEL_193;
    }
  }
  uint64_t v113 = (void *)*v126;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v113 = sub_1B68C257C(0, v113[2] + 1, 1, v113);
  }
  unint64_t v115 = v113[2];
  unint64_t v114 = v113[3];
  int v116 = v124;
  if (v115 >= v114 >> 1)
  {
    uint64_t v118 = sub_1B68C257C(v114 > 1, v115 + 1, 1, v113);
    int v116 = v124;
    uint64_t v113 = v118;
  }
  v113[2] = v115 + 1;
  uint64_t v117 = &v113[5 * v115];
  *((_DWORD *)v117 + 8) = v121;
  *((_DWORD *)v117 + 9) = v119;
  *((_DWORD *)v117 + 10) = v116;
  *((_DWORD *)v117 + 11) = v122;
  v117[6] = v131;
  v117[7] = v23;
  *((unsigned char *)v117 + 64) = v112;
  *(_WORD *)((char *)v117 + 65) = 257;
  uint64_t *v126 = (uint64_t)v113;
  if (a5)
  {
LABEL_194:
    sub_1B685895C();
    sub_1B6858C08();
  }
  return v125 != 0;
}

uint64_t sub_1B686CDEC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7, void **a8)
{
  sub_1B62D7710(a2, (uint64_t)v61, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
  long long v13 = *(_OWORD *)(a1 + 16);
  v66[0] = *(_OWORD *)a1;
  v66[1] = v13;
  v66[2] = *(_OWORD *)(a1 + 32);
  uint64_t v67 = *(void *)(a1 + 48);
  sub_1B62D7710(a2, (uint64_t)&v64, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
  if (v64)
  {
    uint64_t v14 = v65;
    uint64_t v15 = *(void *)&v66[0];
    if (*(void *)(v65 + 16))
    {
      uint64_t v16 = *((void *)&v66[0] + 1);
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1B62B2CE0(v15, v16);
      if (v18)
      {
        uint64_t v19 = *(void *)(v14 + 56);
        goto LABEL_8;
      }
LABEL_15:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v20 = *(void *)&v66[0];
    if (*(void *)(a4 + 16))
    {
      uint64_t v21 = *((void *)&v66[0] + 1);
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1B62B2CE0(v20, v21);
      if (v22)
      {
        uint64_t v19 = *(void *)(a4 + 56);
LABEL_8:
        unint64_t v23 = (unsigned int *)(v19 + 16 * v17);
        uint64_t v24 = *((void *)v23 + 1);
        uint64_t v26 = *v23;
        uint64_t v25 = v23[1];
        swift_retain_n();
        swift_bridgeObjectRelease();
        if (v26 == -1 && v25 == 0)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v62 = 0;
          unint64_t v63 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          LOBYTE(v59) = a3;
          sub_1B6E32B18();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v35 = v62;
          uint64_t v36 = v63;
          int v37 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v62 = 0;
          swift_retain();
          sub_1B6B33E34(v37, &v62, v35, v36);
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v28 = sub_1B686A9FC(a3, a4, a5, a6 & 0x10101, a7 | ((HIDWORD(a7) & 1) << 32), v26 | (v25 << 32), v24, (uint64_t *)v66);
          if ((~v28 & 0xF000000000000007) != 0)
          {
            unint64_t v38 = v28;
            char v39 = v29;
            uint64_t v40 = v30;
            char v41 = v31 & 1;
          }
          else
          {
            if (*(void *)(v24 + 216))
            {
              uint64_t v32 = *(void *)(v24 + 216);
            }
            else
            {
              swift_retain();
              uint64_t v32 = v24;
            }
            uint64_t v42 = swift_allocObject();
            *(_DWORD *)(v42 + 16) = v26;
            *(_DWORD *)(v42 + 20) = v25;
            uint64_t v44 = *(void *)(v32 + 16);
            uint64_t v43 = *(void *)(v32 + 24);
            uint64_t v45 = *(void *)(v32 + 48);
            char v46 = *(unsigned char *)(v32 + 56);
            __int16 v47 = *(_WORD *)(v32 + 58);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            long long v56 = *(_OWORD *)(v32 + 32);
            swift_retain();
            swift_release();
            *(void *)(v42 + 24) = v44;
            *(void *)(v42 + 32) = v43;
            *(_OWORD *)(v42 + 40) = v56;
            *(void *)(v42 + 56) = v45;
            *(unsigned char *)(v42 + 64) = v46;
            *(_WORD *)(v42 + 66) = v47;
            swift_release();
            uint64_t v40 = 0;
            unint64_t v38 = v42 | 0x3000000000000000;
            char v39 = 1;
            char v41 = 1;
          }
          BOOL v48 = *a8;
          sub_1B62C6AA8(v38);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a8 = v48;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            BOOL v48 = sub_1B68C0FD8(0, v48[2] + 1, 1, v48);
            *a8 = v48;
          }
          unint64_t v51 = v48[2];
          unint64_t v50 = v48[3];
          if (v51 >= v50 >> 1) {
            BOOL v48 = sub_1B68C0FD8(v50 > 1, v51 + 1, 1, v48);
          }
          v48[2] = v51 + 1;
          char v52 = &v48[4 * v51];
          v52[4] = v38;
          *((unsigned char *)v52 + 40) = v39;
          v52[6] = v40;
          *((unsigned char *)v52 + 56) = v41;
          *a8 = v48;
          swift_release();
          sub_1B62C6A70(v38);
        }
        return swift_release();
      }
      goto LABEL_15;
    }
  }
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v59 = v62;
  unint64_t v60 = v63;
  sub_1B62D7710(a2, (uint64_t)&v62, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
  if (v62)
  {
    uint64_t v57 = 0x3A737475706E690ALL;
    unint64_t v58 = 0xE900000000000020;
  }
  else
  {
    uint64_t v57 = 0x7374757074756F0ALL;
    unint64_t v58 = 0xEA0000000000203ALL;
  }
  swift_bridgeObjectRetain();
  sub_1B6E314D8();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v33 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v57 = 0;
  swift_retain();
  sub_1B6B33E34(v33, &v57, v59, v60);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B686D50C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void **a7, unint64_t a8, uint64_t a9)
{
  unint64_t v66 = a7;
  uint64_t v67 = a4;
  int v63 = a6;
  uint64_t v69 = a3;
  uint64_t v61 = a2;
  unint64_t v64 = HIDWORD(a1);
  uint64_t v65 = a1;
  uint64_t v11 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v19 = (void *)((char *)v60 - v18);
  unint64_t v20 = sub_1B69FAA7C(a8 | ((HIDWORD(a8) & 1) << 32));
  uint64_t v21 = v12;
  char v22 = (void **)a9;
  sub_1B6366C08(*(void *)(a5 + 56) + *(void *)(v21 + 72) * v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  sub_1B68737A8((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
  uint64_t v23 = *(void *)(a9 + 16);
  if (v19[1])
  {
    uint64_t v24 = *v19;
    uint64_t v25 = v19[1];
  }
  else
  {
    uint64_t v24 = *(void *)(a9 + 8);
    swift_bridgeObjectRetain();
    uint64_t v25 = v23;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a9 + 8) = v24;
  *(void *)(a9 + 16) = v25;
  sub_1B62D85D4(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1B6E77050;
  unint64_t v27 = 0xE400000000000000;
  uint64_t v28 = 1852399949;
  uint64_t v29 = v26;
  switch((char)v69)
  {
    case 1:
      unint64_t v27 = 0xE500000000000000;
      uint64_t v28 = 0x6E77617053;
      break;
    case 2:
      uint64_t v28 = 1953066569;
      break;
    case 3:
      unint64_t v27 = 0xEC00000074696E49;
      goto LABEL_10;
    case 4:
      unint64_t v27 = 0xE600000000000000;
      uint64_t v28 = 0x657461647055;
      break;
    case 5:
      unint64_t v27 = 0xEE00657461647055;
LABEL_10:
      uint64_t v28 = 0x656C636974726150;
      break;
    case 6:
      unint64_t v27 = 0xE600000000000000;
      uint64_t v28 = 0x7265646E6552;
      break;
    default:
      break;
  }
  uint64_t v68 = a5;
  unsigned int v30 = v69 >> 8;
  *(void *)(v26 + 32) = v28;
  *(void *)(v26 + 40) = v27;
  swift_bridgeObjectRelease();
  *(void *)(a9 + 32) = v29;
  *(unsigned char *)(a9 + 24) = v30;
  swift_bridgeObjectRelease();
  *(void *)a9 = &unk_1F0F80040;
  uint64_t v31 = a9 + *(int *)(type metadata accessor for GraphScript(0) + 40);
  sub_1B6873658(v31, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex);
  sub_1B6366C08((uint64_t)v66, v31, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  uint64_t v32 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  *(unsigned char *)(a9 + 40) = (a8 & 0x1FFFFFFFFLL) == 0x100000000;
  if (v63)
  {
    uint64_t v33 = swift_allocObject();
    int v34 = v64;
    *(_DWORD *)(v33 + 16) = v65;
    *(_DWORD *)(v33 + 20) = v34;
    uint64_t v35 = *(void **)a9;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v35 = sub_1B68C0FD8(0, v35[2] + 1, 1, v35);
    }
    unint64_t v37 = v35[2];
    unint64_t v36 = v35[3];
    if (v37 >= v36 >> 1) {
      uint64_t v35 = sub_1B68C0FD8(v36 > 1, v37 + 1, 1, v35);
    }
    _OWORD v35[2] = v37 + 1;
    unint64_t v38 = &v35[4 * v37];
    v38[4] = v33 | 0xB000000000000000;
    *((unsigned char *)v38 + 40) = 1;
    v38[6] = 0;
    *((unsigned char *)v38 + 56) = 1;
    *(void *)a9 = v35;
  }
  uint64_t v39 = *(void *)(v19[3] + 16);
  uint64_t v62 = v19;
  if (v39)
  {
    LODWORD(v65) = v63 & 0x10101;
    uint64_t v40 = swift_bridgeObjectRetain();
    unint64_t v66 = (void **)a9;
    v60[1] = v40;
    char v41 = (uint64_t *)(v40 + 80);
    unint64_t v64 = a8 | ((HIDWORD(a8) & 1) << 32);
    uint64_t v42 = v61;
    do
    {
      uint64_t v43 = *(v41 - 6);
      uint64_t v44 = *(v41 - 5);
      uint64_t v46 = *(v41 - 4);
      unint64_t v45 = *(v41 - 3);
      uint64_t v47 = *(v41 - 2);
      uint64_t v48 = *(v41 - 1);
      uint64_t v49 = *v41;
      v41 += 7;
      uint64_t v70 = v43;
      uint64_t v71 = v44;
      uint64_t v72 = v46;
      unint64_t v73 = v45;
      uint64_t v74 = v47;
      uint64_t v75 = v48;
      uint64_t v76 = v49;
      swift_bridgeObjectRetain();
      sub_1B629C9E8(v46, v45);
      sub_1B686CDEC((uint64_t)&v70, v42, v69, v67, v68, v65, v64, v66);
      swift_bridgeObjectRelease();
      sub_1B629DCAC(v46, v45);
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
    char v22 = v66;
    uint64_t v19 = v62;
  }
  uint64_t v50 = *(void *)(v19[4] + 16);
  if (v50)
  {
    LODWORD(v66) = v63 & 0x10101;
    uint64_t v65 = swift_bridgeObjectRetain();
    unint64_t v51 = (uint64_t *)(v65 + 80);
    do
    {
      uint64_t v52 = *(v51 - 6);
      uint64_t v53 = *(v51 - 5);
      uint64_t v54 = *(v51 - 4);
      unint64_t v55 = *(v51 - 3);
      uint64_t v56 = *(v51 - 2);
      uint64_t v57 = *(v51 - 1);
      uint64_t v58 = *v51;
      v51 += 7;
      uint64_t v70 = v52;
      uint64_t v71 = v53;
      uint64_t v72 = v54;
      unint64_t v73 = v55;
      uint64_t v74 = v56;
      uint64_t v75 = v57;
      uint64_t v76 = v58;
      swift_bridgeObjectRetain();
      sub_1B629C9E8(v54, v55);
      sub_1B6858150(&v70, v69, v67, v68, v66, v22);
      swift_bridgeObjectRelease();
      sub_1B629DCAC(v54, v55);
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
    uint64_t v19 = v62;
  }
  return sub_1B62BFF14((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
}

uint64_t sub_1B686DAE4(uint64_t a1, unsigned __int16 *a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v33 = a1;
  unint64_t v34 = a7;
  sub_1B62B5820();
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ScriptIndex();
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v19 = (void **)((char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*((unsigned char *)a2 + 25) == 1)
  {
    *uint64_t v19 = a3;
    int v20 = 256;
  }
  else
  {
    uint64_t v21 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
    sub_1B6366C08(a4 + *(int *)(v21 + 40), (uint64_t)v15, (uint64_t (*)(void))sub_1B62B5820);
    uint64_t v22 = sub_1B6E31118();
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v32 = a5;
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22);
    (*(void (**)(void **, char *, uint64_t))(v24 + 32))(v19, v15, v22);
    a5 = v32;
    int v20 = 0;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = *((void *)a2 + 1);
  uint64_t v26 = *((void *)a2 + 2);
  if (*((unsigned char *)a2 + 26)) {
    int v27 = 0x10000;
  }
  else {
    int v27 = 0;
  }
  int v28 = v20 | *((unsigned __int8 *)a2 + 24) | v27;
  uint64_t v29 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B686D50C(a5, a6, v29, v25, v26, v28, v19, v34 | ((HIDWORD(v34) & 1) << 32), v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B62BFF14((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
}

void sub_1B686DD60(unsigned int *a1, uint64_t a2, unsigned char *a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, char **a9)
{
  uint64_t v127 = a8;
  uint64_t v128 = a4;
  uint64_t v124 = a7;
  unint64_t v125 = a6;
  unint64_t v131 = a3;
  uint64_t v132 = a5;
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v11 - 8, v12);
  unint64_t v130 = (char *)v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62B5820();
  MEMORY[0x1F4188790](v14 - 8, v15);
  unint64_t v122 = (char *)v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v123 = (uint64_t)v120 - v19;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  MEMORY[0x1F4188790](updated, v21);
  uint64_t v23 = (char *)v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  MEMORY[0x1F4188790](inited, v25);
  int v27 = (char *)v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  MEMORY[0x1F4188790](v133, v28);
  unsigned int v30 = (char *)v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31, v32);
  unint64_t v34 = (char *)v120 - v33;
  MEMORY[0x1F4188790](v35, v36);
  unint64_t v38 = (char *)v120 - v37;
  MEMORY[0x1F4188790](v39, v40);
  uint64_t v134 = (uint64_t)v120 - v42;
  char v126 = (unsigned __int16 *)a2;
  uint64_t v43 = a2 + 16;
  uint64_t v44 = *(void *)(a2 + 16);
  if (*(void *)(v44 + 16))
  {
    v120[1] = v43;
    uint64_t v129 = v41;
    uint64_t v45 = *a1;
    unsigned __int8 v46 = *((unsigned char *)a1 + 4);
    v139[0] = v46;
    uint64_t v121 = v45;
    unint64_t v47 = sub_1B69FAA7C(v45 | ((unint64_t)v46 << 32));
    if (v48)
    {
      sub_1B6366C08(*(void *)(v44 + 56) + *(void *)(v129 + 72) * v47, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      uint64_t v49 = (uint64_t)v38;
      uint64_t v50 = v134;
      sub_1B68737A8(v49, v134, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      if (*(unsigned char *)(v50 + 40) != 1) {
        goto LABEL_44;
      }
      *unint64_t v131 = 1;
      if ((*(unsigned char *)(v50 + 41) & 1) == 0)
      {
        sub_1B6366C08(v50, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
        uint64_t v51 = *((void *)v34 + 4);
        if (v51 && *(void *)(v51 + 16))
        {
          sub_1B62BFF14((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
          int v52 = *(unsigned __int8 *)v126;
          if (v52 == 5)
          {
            sub_1B6366C08(v50, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            uint64_t v53 = (int *)v133;
            uint64_t v88 = *(void *)&v30[*(int *)(v133 + 44)];
            sub_1B62BFF14((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            uint64_t v89 = v132;
            if (!v88)
            {
              v23[24] = 0;
              *((void *)v23 + 4) = MEMORY[0x1E4FBC860];
              v23[40] = 0;
              char v90 = &v23[*(int *)(updated + 36)];
              uint64_t v91 = type metadata accessor for ScriptIndex();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 1, 1, v91);
              *(void *)uint64_t v23 = 0xD0000000000000C3;
              *((void *)v23 + 1) = 0x80000001B6F33F20;
              *((void *)v23 + 2) = &unk_1F0F800B0;
              uint64_t v92 = sub_1B6860ECC((uint64_t)v23, (unint64_t)v128, v89, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1F0F82FB8, (void (*)(uint64_t, uint64_t *))sub_1B68749B0, (void (*)(unsigned char *))sub_1B687CA38);
              sub_1B62BFF14((uint64_t)v23, type metadata accessor for ParticleUpdateScript);
              uint64_t v93 = v53[11];
              swift_release();
              *(void *)(v50 + v93) = v92;
              if (*(unsigned char *)(v89 + 48) == 1)
              {
                uint64_t v94 = MEMORY[0x1E4FBC860];
                uint64_t v95 = sub_1B67DDDC8(MEMORY[0x1E4FBC860]);
                uint64_t v96 = sub_1B67DDDE8(v94);
                sub_1B6860C94((uint64_t)v95, (uint64_t)v96, (unint64_t)v128, v89);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
              }
            }
            unint64_t v97 = *(void *)(*(void *)(v50 + v53[11]) + 24);
            uint64_t v64 = v124;
            sub_1B68747C8(v124, (void (*)(void, void, void, void, void, void, void, void))sub_1B6874738);
            v139[0] = v46;
            sub_1B6C076C8(v97, v89, v125, v64, (uint64_t)v126, v50, v121 | ((unint64_t)v46 << 32));
          }
          else
          {
            uint64_t v53 = (int *)v133;
            if (v52 != 3)
            {
              uint64_t v98 = v50 + *(int *)(v133 + 48);
              unint64_t v99 = *(void *)v98;
              uint64_t v100 = v132;
              if (*(unsigned char *)(v98 + 8) == 1 && (BOOL v101 = *(unsigned char **)(v50 + 32)) != 0)
              {
                uint64_t v102 = **(void **)(v132 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
                unint64_t v103 = sub_1B69DE4C4(v125);
                swift_bridgeObjectRetain();
                unint64_t v104 = v103 | ((HIDWORD(v103) & 1) << 32);
                uint64_t v105 = v135;
                uint64_t v106 = sub_1B6D7C72C(v104, v102);
                uint64_t v135 = v105;
                *(void *)uint64_t v98 = v106;
                *(unsigned char *)(v98 + 8) = 0;
                uint64_t v107 = v50 + v53[10];
                uint64_t v108 = v123;
                sub_1B6366C08(v107, v123, (uint64_t (*)(void))sub_1B62B5820);
                uint64_t v109 = sub_1B6E31118();
                uint64_t v110 = *(void *)(v109 - 8);
                int v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109);
                sub_1B62BFF14(v108, (uint64_t (*)(void))sub_1B62B5820);
                if (v111 == 1)
                {
                  uint64_t v112 = (uint64_t)v122;
                  sub_1B6E31108();
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v112, 0, 1, v109);
                  sub_1B63BDCC4(v112, v107);
                }
                unint64_t v131 = v101;
                unint64_t v99 = *(void *)v98;
                uint64_t v113 = v132;
                sub_1B6C31078(*(void *)v98, (uint64_t)&type metadata for IsSubEntityOf, (uint64_t)&off_1F0F5FCE0, v125);
                if (*(unsigned char *)(v113 + 48) == 1) {
                  sub_1B62E364C((uint64_t)&type metadata for GraphDebuggingComponent, (uint64_t)&off_1F0F8F2C8, v99);
                }
                uint64_t v50 = v134;
                uint64_t v114 = v135;
                uint64_t v79 = (uint64_t)v130;
                if (*(void *)(v134 + 24))
                {
                  uint64_t v115 = v124;
                  sub_1B68747C8(v124, (void (*)(void, void, void, void, void, void, void, void))sub_1B6874738);
                  uint64_t v116 = swift_bridgeObjectRetain();
                  uint64_t v117 = sub_1B68694EC(v116, v115);
                  sub_1B68747C8(v115, (void (*)(void, void, void, void, void, void, void, void))sub_1B687480C);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v117 = 0;
                }
                uint64_t v118 = sub_1B6851A7C((uint64_t)v131, (uint64_t)v126);
                uint64_t v135 = v114;
                swift_bridgeObjectRelease();
                sub_1B686BDA8(v125, v99, (uint64_t)v117, (uint64_t)v118, 0);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v100 = v132;
              }
              else
              {
                uint64_t v79 = (uint64_t)v130;
              }
              uint64_t v119 = v124;
              sub_1B68747C8(v124, (void (*)(void, void, void, void, void, void, void, void))sub_1B6874738);
              v139[0] = v46;
              sub_1B6C07AD4(v99, v100, v126, v128, v50, v125, v119, v121 | ((unint64_t)v46 << 32));
              sub_1B68747C8(v119, (void (*)(void, void, void, void, void, void, void, void))sub_1B687480C);
              goto LABEL_43;
            }
            sub_1B6366C08(v50, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            uint64_t v54 = *(void *)&v30[v53[11]];
            sub_1B62BFF14((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            uint64_t v55 = v132;
            if (!v54)
            {
              *int v27 = 0;
              *((void *)v27 + 4) = MEMORY[0x1E4FBC860];
              unsigned char v27[40] = 0;
              uint64_t v56 = &v27[*(int *)(inited + 36)];
              uint64_t v57 = type metadata accessor for ScriptIndex();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
              *((void *)v27 + 1) = 0xD0000000000000BFLL;
              *((void *)v27 + 2) = 0x80000001B6F33DE0;
              *((void *)v27 + 3) = &unk_1F0F800E0;
              uint64_t v58 = sub_1B6860ECC((uint64_t)v27, (unint64_t)v128, v55, type metadata accessor for ParticleInitScript, (uint64_t)&off_1F0F796D0, (void (*)(uint64_t, uint64_t *))sub_1B6874968, (void (*)(unsigned char *))sub_1B6874980);
              sub_1B62BFF14((uint64_t)v27, type metadata accessor for ParticleInitScript);
              uint64_t v59 = v53[11];
              swift_release();
              *(void *)(v50 + v59) = v58;
              if (*(unsigned char *)(v55 + 48) == 1)
              {
                uint64_t v60 = MEMORY[0x1E4FBC860];
                uint64_t v61 = sub_1B67DDDC8(MEMORY[0x1E4FBC860]);
                uint64_t v62 = sub_1B67DDDE8(v60);
                sub_1B6860C94((uint64_t)v61, (uint64_t)v62, (unint64_t)v128, v55);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
              }
            }
            unint64_t v63 = *(void *)(*(void *)(v50 + v53[11]) + 24);
            uint64_t v64 = v124;
            sub_1B68747C8(v124, (void (*)(void, void, void, void, void, void, void, void))sub_1B6874738);
            v139[0] = v46;
            sub_1B6C06CC4(v63, v55, v125, v64, (uint64_t)v126, v50, v121 | ((unint64_t)v46 << 32));
          }
          sub_1B68747C8(v64, (void (*)(void, void, void, void, void, void, void, void))sub_1B687480C);
          uint64_t v79 = (uint64_t)v130;
LABEL_43:
          *(unsigned char *)(v50 + 40) = 0;
          sub_1B6366C08(v50, v79, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
          (*(void (**)(uint64_t, void, uint64_t, int *))(v129 + 56))(v79, 0, 1, v53);
          v139[0] = v46;
          sub_1B6CE10FC(v79, v121 | ((unint64_t)v46 << 32));
LABEL_44:
          sub_1B62BFF14(v50, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
          return;
        }
        sub_1B62BFF14((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
      }
      uint64_t v53 = (int *)v133;
      uint64_t v65 = *(int *)(v133 + 44);
      uint64_t v66 = *(void *)(v50 + v65);
      if (v66)
      {
        uint64_t v67 = *(void *)(v66 + 32);
        uint64_t v68 = swift_conformsToProtocol2();
        if (v68) {
          uint64_t v69 = v68;
        }
        else {
          uint64_t v69 = 0;
        }
        if (v68) {
          uint64_t v70 = v67;
        }
        else {
          uint64_t v70 = 0;
        }
        if (v70)
        {
          uint64_t v71 = *(void *)(v132 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
          swift_retain();
          if (v71)
          {
            int v72 = *(unsigned __int8 *)(v71 + 80);
            MEMORY[0x1BA9B8670](v71 + 48);
            uint64_t v71 = *(void *)(v71 + 56);
          }
          else
          {
            int v72 = 0;
          }
          uint64_t v137 = 0;
          swift_unknownObjectUnownedInit();
          uint64_t v136 = v132;
          uint64_t v137 = v71;
          swift_unknownObjectUnownedAssign();
          swift_retain();
          swift_unownedRetain();
          swift_unknownObjectRelease();
          char v138 = v72;
          sub_1B636C4E0((uint64_t)&v136, (uint64_t)v139);
          sub_1B6A61F04(v70, v69, (unint64_t)v128);
          sub_1B636C450((uint64_t)v139);
          if (v72) {
            sub_1B6A667F0(1);
          }
          swift_release();
          uint64_t v53 = (int *)v133;
          uint64_t v50 = v134;
        }
        else
        {
          swift_retain();
        }
        swift_release();
        *(void *)(v50 + v65) = 0;
        unint64_t v73 = *a9;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a9 = v73;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v73 = sub_1B68C42D4(0, *((void *)v73 + 2) + 1, 1, v73);
          *a9 = v73;
        }
        unint64_t v76 = *((void *)v73 + 2);
        unint64_t v75 = *((void *)v73 + 3);
        if (v76 >= v75 >> 1) {
          unint64_t v73 = sub_1B68C42D4(v75 > 1, v76 + 1, 1, v73);
        }
        *((void *)v73 + 2) = v76 + 1;
        uint64_t v77 = &v73[8 * v76];
        *((_DWORD *)v77 + 8) = v121;
        v77[36] = v46;
        *a9 = v73;
        swift_release();
      }
      uint64_t v78 = v50 + v53[12];
      uint64_t v79 = (uint64_t)v130;
      if ((*(unsigned char *)(v78 + 8) & 1) == 0)
      {
        unint64_t v80 = *(void *)v78;
        sub_1B69DE144(*(void *)v78);
        *(void *)uint64_t v78 = 0;
        *(unsigned char *)(v78 + 8) = 1;
        uint64_t v81 = v50 + v53[10];
        sub_1B62BFF14(v81, (uint64_t (*)(void))sub_1B62B5820);
        uint64_t v82 = sub_1B6E31118();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 1, 1, v82);
        sub_1B6857F20(v80);
        uint64_t v83 = *a9;
        char v84 = swift_isUniquelyReferenced_nonNull_native();
        *a9 = v83;
        if ((v84 & 1) == 0)
        {
          uint64_t v83 = sub_1B68C42D4(0, *((void *)v83 + 2) + 1, 1, v83);
          *a9 = v83;
        }
        unint64_t v86 = *((void *)v83 + 2);
        unint64_t v85 = *((void *)v83 + 3);
        if (v86 >= v85 >> 1) {
          uint64_t v83 = sub_1B68C42D4(v85 > 1, v86 + 1, 1, v83);
        }
        *((void *)v83 + 2) = v86 + 1;
        unint64_t v87 = &v83[8 * v86];
        *((_DWORD *)v87 + 8) = v121;
        v87[36] = v46;
        *a9 = v83;
      }
      *(unsigned char *)(v50 + 41) = 0;
      goto LABEL_43;
    }
  }
}

uint64_t sub_1B686EBCC(uint64_t a1, uint64_t a2, unsigned char *a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, char **a9)
{
  uint64_t v10 = v9;
  uint64_t v28 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  while (v18)
  {
    unint64_t v21 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v22 = v21 | (v20 << 6);
LABEL_5:
    uint64_t v23 = *(void *)(a1 + 48) + 8 * v22;
    unsigned int v24 = *(_DWORD *)v23;
    LOBYTE(v23) = *(unsigned char *)(v23 + 4);
    unsigned int v32 = v24;
    char v33 = v23;
    sub_1B686DD60(&v32, a2, a3, a4, a5, a6, a7, a8, a9);
    if (v10) {
      return swift_release();
    }
  }
  uint64_t v25 = v20 + 1;
  if (v20 + 1 >= v19) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v28 + 8 * v25);
  if (v26) {
    goto LABEL_20;
  }
  uint64_t v25 = v20 + 2;
  if (v20 + 2 >= v19) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v28 + 8 * v25);
  if (v26) {
    goto LABEL_20;
  }
  uint64_t v25 = v20 + 3;
  if (v20 + 3 >= v19) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v28 + 8 * v25);
  if (v26) {
    goto LABEL_20;
  }
  uint64_t v25 = v20 + 4;
  if (v20 + 4 >= v19) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v28 + 8 * v25);
  if (v26) {
    goto LABEL_20;
  }
  uint64_t v25 = v20 + 5;
  if (v20 + 5 >= v19) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v28 + 8 * v25);
  if (v26)
  {
LABEL_20:
    unint64_t v18 = (v26 - 1) & v26;
    unint64_t v22 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v20 = v25;
    goto LABEL_5;
  }
  while (v19 - 6 != v20)
  {
    unint64_t v26 = *(void *)(a1 + 8 * v20++ + 112);
    if (v26)
    {
      uint64_t v25 = v20 + 5;
      goto LABEL_20;
    }
  }
  return swift_release();
}

uint64_t sub_1B686EDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *(void *)(a3 + 48);
  uint64_t v45 = *(void *)(result + 16);
  if (!v45) {
    return result;
  }
  uint64_t v6 = a4;
  uint64_t v50 = (uint64_t *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v44 = result + 32;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v46 = a1;
  uint64_t v47 = v6;
  uint64_t v43 = a2;
  while (1)
  {
    uint64_t v48 = v8;
    uint64_t v9 = (uint64_t *)(v44 + 24 * v8);
    uint64_t v10 = *v9;
    uint64_t v12 = v9[1];
    uint64_t v11 = v9[2];
    uint64_t v13 = *(void *)(a1 + 16);
    swift_retain();
    if (*(unsigned char *)(a1 + 184)) {
      goto LABEL_79;
    }
    uint64_t v14 = *(int *)(*(void *)(a1 + 168) + 4 * a2);
    int v15 = *(_DWORD *)(*(void *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v14 + 8);
    uint64_t v49 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    BOOL v16 = v14 == -1 && v15 == 0;
    if (v16 || (v14 & 0x80000000) != 0 || v50[1] <= v14)
    {
      if ((*(unsigned char *)(*(void *)(*(void *)(v6 + 80) + 16) + 200) & 1) == 0) {
        goto LABEL_70;
      }
LABEL_20:
      char v18 = 1;
      goto LABEL_21;
    }
    if (v15 == -1 || *(_DWORD *)(*v50 + 12 * (int)v14 + 8) == v15) {
      uint64_t v35 = *(__int16 *)(*v50 + 12 * (int)v14 + 6);
    }
    else {
      uint64_t v35 = -2;
    }
    if ((*(unsigned char *)(*(void *)(*(void *)(v6 + 80) + 8 * v35 + 32) + 200) & 1) == 0)
    {
LABEL_70:
      uint64_t v37 = qword_1EB97D6C0++;
      uint64_t v51 = MEMORY[0x1E4FBC860];
      uint64_t v52 = v37;
      uint64_t v53 = MEMORY[0x1E4FBC870];
      uint64_t v54 = MEMORY[0x1E4FBC870];
      char v38 = *(unsigned char *)(a1 + 184);
      uint64_t v39 = swift_retain();
      if (v38) {
        goto LABEL_79;
      }
      uint64_t v40 = *(unsigned int *)(*(void *)(a1 + 168) + 4 * a2);
      uint64_t v41 = *(unsigned int *)(*(void *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v40 + 8);
      swift_release();
      sub_1B62D85D4(0, (unint64_t *)&unk_1EB980C20, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
      *(void *)(inited + 32) = v10;
      *(void *)(inited + 40) = v49;
      swift_retain();
      LOBYTE(v40) = sub_1B686BDA8(v40 | (v41 << 32), 0xFFFFFFFFuLL, inited, v11, 1);
      swift_setDeallocating();
      swift_arrayDestroy();
      if (v40)
      {
        sub_1B6855854(v51, v52, v53, v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      a1 = v46;
      uint64_t v6 = v47;
      goto LABEL_5;
    }
    if (v15 != -1 && *(_DWORD *)(*v50 + 12 * (int)v14 + 8) != v15) {
      goto LABEL_20;
    }
    char v18 = *(unsigned char *)(*(void *)(*(void *)(v6 + 136) + 8 * *(int *)(*v50 + 12 * (int)v14) + 32) + 120);
LABEL_21:
    uint64_t v19 = *(void *)(v11 + 16);
    if (v19) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_release();
    a2 = v43;
LABEL_5:
    uint64_t v8 = v48 + 1;
    if (v48 + 1 == v45) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)(v11 + 40);
  unint64_t v21 = v50;
  while (1)
  {
    int v22 = *((_DWORD *)v20 - 1);
    uint64_t v23 = *((int *)v20 - 2);
    uint64_t v24 = *v20;
    BOOL v25 = v23 == -1 && v22 == 0;
    char v26 = v25;
    if (v25)
    {
LABEL_33:
      uint64_t v27 = -2;
      goto LABEL_34;
    }
    uint64_t v27 = -2;
    if ((v23 & 0x80000000) == 0 && v21[1] > v23)
    {
      uint64_t v32 = *v21;
      if (v22 != -1 && *(_DWORD *)(v32 + 12 * (int)v23 + 8) != v22) {
        goto LABEL_33;
      }
      uint64_t v27 = *(__int16 *)(v32 + 12 * (int)v23 + 6);
    }
LABEL_34:
    if ((*(unsigned char *)(*(void *)(*(void *)(v6 + 80) + 8 * v27 + 32) + 200) & 1) == 0) {
      goto LABEL_60;
    }
    if (v18)
    {
      if (v26) {
        goto LABEL_60;
      }
      uint64_t v28 = v21[1];
      if ((v23 & 0x80000000) != 0 || v28 <= v23)
      {
        if ((v23 & 0x80000000) != 0) {
          goto LABEL_60;
        }
LABEL_53:
        if (v28 <= v23
          || (uint64_t v33 = *v21, v22 != -1) && *(_DWORD *)(v33 + 12 * (int)v23 + 8) != v22
          || *(unsigned char *)(*(void *)(*(void *)(v6 + 136) + 8 * *(int *)(v33 + 12 * (int)v23) + 32) + 120) == 1)
        {
LABEL_60:
          swift_bridgeObjectRelease();
LABEL_61:
          a2 = v43;
          a1 = v46;
          goto LABEL_70;
        }
        goto LABEL_24;
      }
      uint64_t v29 = *v21;
      if (v22 != -1 && *(_DWORD *)(v29 + 12 * (int)v23 + 8) != v22
        || (*(unsigned char *)(*(void *)(*(void *)(v6 + 136) + 8 * *(int *)(v29 + 12 * (int)v23) + 32) + 120) & 1) != 0)
      {
        goto LABEL_53;
      }
    }
    swift_retain();
    unsigned int v30 = (ValueMetadata *)sub_1B6E32738();
    if (!swift_conformsToProtocol2()) {
      break;
    }
    if (v30 == &type metadata for SetActive) {
      goto LABEL_74;
    }
    uint64_t v31 = (ValueMetadata *)sub_1B6E32738();
    if (!swift_conformsToProtocol2()) {
      goto LABEL_78;
    }
    uint64_t v6 = v47;
    if (v31 == &type metadata for NodeVisibilityController)
    {
      if (*(void *)(v24 + 16) == *(void *)aVisible_0 && *(void *)(v24 + 24) == unk_1E9DD6588)
      {
LABEL_74:
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_61;
      }
      char v34 = sub_1B6E334B8();
      swift_release();
      unint64_t v21 = v50;
      if (v34) {
        goto LABEL_60;
      }
    }
    else
    {
      swift_release();
      unint64_t v21 = v50;
    }
LABEL_24:
    v20 += 2;
    if (!--v19)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      a2 = v43;
      a1 = v46;
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B686F3EC(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v203 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_mainGraphScriptGroup);
  *(void *)(v203 + 16) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  if (qword_1EB97F2D0 != -1) {
    swift_once();
  }
  v252[0] = xmmword_1EB9979A8;
  v252[1] = *(_OWORD *)&qword_1EB9979B8;
  uint64_t v253 = qword_1EB9979C8;
  sub_1B62C9DA8(v1, (uint64_t)v252, 0x200000000, v216);
  sub_1B62D7710((uint64_t)v216, (uint64_t)v228, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v215 = v1;
  if (*(void *)&v228[0])
  {
    long long v235 = v228[0];
    long long v236 = v228[1];
    uint64_t v237 = v229;
    if (v234 >= 1)
    {
      uint64_t v186 = v231;
      if (v231)
      {
        uint64_t v185 = v230;
        int v190 = *(unsigned __int8 *)(v232 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v189 = v233[4];
        v213 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        v191 = v233;
        v183 = v233 + 8;
        uint64_t v184 = (uint64_t)(v233 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v2 = 0;
        while (1)
        {
          uint64_t v188 = v2;
          uint64_t v3 = (unsigned int *)(v185 + 48 * v2);
          unint64_t v4 = *v3;
          v193 = (void *)v3[1];
          uint64_t v5 = (uint64_t *)*((void *)v3 + 2);
          uint64_t v6 = *((void *)v3 + 3);
          uint64_t v8 = *((void *)v3 + 4);
          uint64_t v7 = *((void *)v3 + 5);
          if (v190)
          {
            uint64_t v9 = *(os_unfair_lock_s **)(v7 + 376);
            swift_retain();
            os_unfair_lock_lock(v9);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v189);
          sub_1B62D7710(v184, (uint64_t)v247, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v10 = v191[4];
          uint64_t v11 = *(void *)(*(void *)(*(void *)(*(void *)(v7 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v191[6] = ecs_stack_allocator_allocate(v10, 48 * v11, 8);
          v191[7] = v11;
          v183[1] = 0;
          v183[2] = 0;
          void *v183 = 0;
          swift_release();
          v187 = (char *)v7;
          uint64_t v199 = sub_1B62C9024((uint64_t)&type metadata for GraphScriptGroup, (uint64_t)&off_1F0F6C620, v5, v6, v8, (uint64_t)v191);
          if (v5)
          {
            if (v8)
            {
              v192 = (void *)v8;
              uint64_t v12 = 0;
              uint64_t v13 = MEMORY[0x1E4FBC860];
              uint64_t v1 = v215;
              while (1)
              {
                v201 = v12;
                uint64_t v14 = *(void *)(v199 + 32 * (void)v12);
                *(void *)v218 = v13;
                uint64_t v208 = *(void *)(v14 + 16);
                if (!v208)
                {
                  uint64_t v40 = v13;
                  uint64_t v41 = *(void *)(v13 + 16);
                  if (!v41) {
                    goto LABEL_14;
                  }
                  goto LABEL_64;
                }
                uint64_t v204 = v14 + 32;
                swift_bridgeObjectRetain();
                for (uint64_t i = 0; i != v208; ++i)
                {
                  char v18 = (long long *)(v204 + 40 * i);
                  long long v19 = *v18;
                  long long v20 = v18[1];
                  *(_DWORD *)((char *)v249 + 15) = *(_DWORD *)((char *)v18 + 31);
                  long long v248 = v19;
                  v249[0] = v20;
                  uint64_t v21 = *((void *)&v20 + 1);
                  BOOL v22 = v19 == -1 && DWORD1(v19) == 0;
                  if (v22 || (v19 & 0x80000000) != 0 || v213[1] <= (int)v19)
                  {
                    if ((*(unsigned char *)(*(void *)(*(void *)(v1 + 80) + 16) + 200) & 1) == 0) {
                      goto LABEL_18;
                    }
LABEL_30:
                    int v25 = 1;
                    goto LABEL_31;
                  }
                  uint64_t v23 = *v213;
                  if (DWORD1(v19) == -1 || *(_DWORD *)(v23 + 12 * (int)v19 + 8) == DWORD1(v19)) {
                    uint64_t v24 = *(__int16 *)(v23 + 12 * (int)v19 + 6);
                  }
                  else {
                    uint64_t v24 = -2;
                  }
                  if ((*(unsigned char *)(*(void *)(*(void *)(v1 + 80) + 8 * v24 + 32) + 200) & 1) == 0) {
                    goto LABEL_18;
                  }
                  uint64_t v39 = *v213;
                  if (DWORD1(v19) != -1 && *(_DWORD *)(v39 + 12 * (int)v19 + 8) != DWORD1(v19)) {
                    goto LABEL_30;
                  }
                  int v25 = *(unsigned __int8 *)(*(void *)(*(void *)(v1 + 136)
                                                       + 8 * *(int *)(v39 + 12 * (int)v19)
                                                       + 32)
                                           + 120);
LABEL_31:
                  uint64_t v26 = sub_1B6355ED4(*((uint64_t *)&v249[0] + 1));
                  if (v26)
                  {
                    uint64_t v27 = v26;
                    uint64_t v28 = (unsigned int *)(v21 + 36);
                    while (1)
                    {
                      uint64_t v29 = (int)*(v28 - 1);
                      uint64_t v30 = *v28;
                      uint64_t v31 = *(ValueMetadata **)(v28 + 1);
                      uint64_t v32 = *(void *)(v28 + 7);
                      uint64_t v33 = *(void *)(v28 + 9);
                      int v34 = -2;
                      BOOL v35 = v29 == -1 && v30 == 0;
                      if (!v35
                        && (v29 & 0x80000000) == 0
                        && v213[1] > v29
                        && (v30 == -1 || *(_DWORD *)(*v213 + 12 * (int)v29 + 8) == v30))
                      {
                        int v34 = sub_1B69DE2C4(*(void *)(*v213 + 12 * (int)v29));
                      }
                      if (*(unsigned char *)(*(void *)(*(void *)(v215 + 80) + 8 * v34 + 32) + 200) != 1) {
                        break;
                      }
                      if (v25
                        && (unint64_t v37 = v29 | (unint64_t)(v30 << 32), (sub_1B69DE438(v37) & 1) != 0))
                      {
                        if (sub_1B69DE438(v37)) {
                          break;
                        }
                      }
                      else
                      {
                        if (v31 == &type metadata for SetActive) {
                          break;
                        }
                        if (v31 == &type metadata for NodeVisibilityController)
                        {
                          char v38 = sub_1B6B72414();
                          if (v32 == *(void *)v38 && v33 == *((void *)v38 + 1)) {
                            break;
                          }
                          if (sub_1B6E334B8()) {
                            break;
                          }
                        }
                      }
                      v28 += 14;
                      if (!--v27) {
                        goto LABEL_19;
                      }
                    }
LABEL_18:
                    sub_1B68709B0((uint64_t)&v248);
                    sub_1B691D9A4();
                    uint64_t v16 = *(void *)(*(void *)v218 + 16);
                    sub_1B691DA60(v16);
                    sub_1B691DAE8(v16, (uint64_t)&v248);
                    nullsub_1(v17);
                  }
LABEL_19:
                  uint64_t v1 = v215;
                }
                swift_bridgeObjectRelease();
                uint64_t v40 = *(void *)v218;
                uint64_t v13 = MEMORY[0x1E4FBC860];
                uint64_t v41 = *(void *)(*(void *)v218 + 16);
                if (!v41)
                {
LABEL_14:
                  swift_release();
                  goto LABEL_15;
                }
LABEL_64:
                uint64_t v197 = qword_1EB97D6C0++;
                *(void *)v218 = v13;
                uint64_t v205 = v40;
                uint64_t v209 = v40 + 32;
                swift_retain_n();
                for (uint64_t j = 0; j != v41; ++j)
                {
                  uint64_t v44 = *(void *)(v209 + 40 * j + 24);
                  int64_t v45 = *(void *)(v44 + 16);
                  if (v45)
                  {
                    v217[0] = MEMORY[0x1E4FBC860];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain_n();
                    sub_1B62E1D20(0, v45, 0);
                    uint64_t v46 = 32;
                    do
                    {
                      uint64_t v47 = *(void *)(v44 + v46);
                      sub_1B691D98C();
                      uint64_t v48 = *(void *)(v217[0] + 16);
                      sub_1B691DA48(v48);
                      uint64_t v49 = sub_1B691DACC(v48, v47);
                      nullsub_1(v49);
                      v46 += 56;
                      --v45;
                    }
                    while (v45);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    uint64_t v50 = v217[0];
                  }
                  else
                  {
                    uint64_t v50 = MEMORY[0x1E4FBC860];
                  }
                  uint64_t v51 = *(void *)(v50 + 16);
                  uint64_t v52 = *(char **)v218;
                  uint64_t v53 = *(void *)(*(void *)v218 + 16);
                  uint64_t v7 = v53 + v51;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v7 > *((void *)v52 + 3) >> 1)
                  {
                    if (v53 <= v7) {
                      uint64_t v55 = v53 + v51;
                    }
                    else {
                      uint64_t v55 = v53;
                    }
                    uint64_t v52 = sub_1B633F784(isUniquelyReferenced_nonNull_native, v55, 1, v52);
                    *(void *)v218 = v52;
                  }
                  uint64_t v56 = *((void *)v52 + 2);
                  if (sub_1B6355ED4(v50))
                  {
                    uint64_t v57 = &v52[8 * v56 + 32];
                    if (v50 + 32 < (unint64_t)&v57[8 * v51] && (unint64_t)v57 < v50 + 32 + 8 * v51) {
                      goto LABEL_239;
                    }
                    memcpy(v57, (const void *)(v50 + 32), 8 * v51);
                    if (v51) {
                      *((void *)v52 + 2) += v51;
                    }
                  }
                  uint64_t v43 = swift_bridgeObjectRelease();
                  nullsub_1(v43);
                }
                swift_release_n();
                uint64_t v59 = *(void *)v218;
                sub_1B6355ED4(*(uint64_t *)v218);
                sub_1B67CB1A4();
                uint64_t v60 = sub_1B6E31EF8();
                uint64_t v61 = sub_1B6355ED4(v59);
                if (v61)
                {
                  uint64_t v62 = v61;
                  uint64_t v63 = 0;
                  uint64_t v210 = v59 + 32;
                  uint64_t v64 = v60 + 56;
                  do
                  {
                    while (1)
                    {
                      uint64_t v65 = (unsigned int *)(v210 + 8 * v63);
                      uint64_t v7 = *v65;
                      uint64_t v66 = v65[1];
                      ++v63;
                      sub_1B6E33918();
                      sub_1B6E33958();
                      sub_1B6E33958();
                      uint64_t v67 = sub_1B6E33988();
                      uint64_t v68 = -1 << *(unsigned char *)(v60 + 32);
                      unint64_t v69 = v67 & ~v68;
                      if ((*(void *)(v64 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69)) {
                        break;
                      }
LABEL_95:
                      char v75 = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)v218 = v60;
                      sub_1B67EE918(v7 | (v66 << 32), v69, v75);
                      uint64_t v60 = *(void *)v218;
                      swift_bridgeObjectRelease();
                      if (v63 == v62) {
                        goto LABEL_97;
                      }
                      uint64_t v64 = v60 + 56;
                    }
                    uint64_t v70 = ~v68;
                    while (1)
                    {
                      uint64_t v71 = (int *)(*(void *)(v60 + 48) + 8 * v69);
                      int v73 = *v71;
                      int v72 = v71[1];
                      if (v73 == v7 && v72 == v66) {
                        break;
                      }
                      unint64_t v69 = (v69 + 1) & v70;
                      if (((*(void *)(v64 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69) & 1) == 0) {
                        goto LABEL_95;
                      }
                    }
                  }
                  while (v63 != v62);
                }
LABEL_97:
                swift_bridgeObjectRelease();
                swift_retain();
                *(void *)v218 = sub_1B6964C50(0);
                swift_retain();
                uint64_t v76 = v205 + 56;
                do
                {
                  uint64_t v78 = *(void *)(v76 - 8);
                  if (v78)
                  {
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain();
                    uint64_t v79 = sub_1B684FDC4(v78);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    uint64_t v79 = sub_1B6964C50(0);
                  }
                  uint64_t v80 = sub_1B6355ED4(v79);
                  uint64_t v81 = *(char **)v218;
                  uint64_t v82 = sub_1B6355ED4(*(uint64_t *)v218) + v80;
                  int v83 = swift_isUniquelyReferenced_nonNull_native();
                  if (!v83 || v82 > *((void *)v81 + 3) >> 1)
                  {
                    if (*((void *)v81 + 2) <= v82) {
                      uint64_t v84 = v82;
                    }
                    else {
                      uint64_t v84 = *((void *)v81 + 2);
                    }
                    uint64_t v81 = sub_1B633F784(v83, v84, 1, v81);
                    *(void *)v218 = v81;
                  }
                  uint64_t v85 = *((void *)v81 + 2);
                  if (sub_1B6355ED4(v79))
                  {
                    if (v80 < 0) {
                      goto LABEL_239;
                    }
                    unint64_t v86 = &v81[8 * v85 + 32];
                    if (v79 + 32 < (unint64_t)&v86[8 * v80] && (unint64_t)v86 < v79 + 32 + 8 * v80) {
                      goto LABEL_239;
                    }
                    memcpy(v86, (const void *)(v79 + 32), 8 * v80);
                    if (v80) {
                      *((void *)v81 + 2) += v80;
                    }
                  }
                  uint64_t v77 = swift_bridgeObjectRelease();
                  nullsub_1(v77);
                  v76 += 40;
                  --v41;
                }
                while (v41);
                swift_release_n();
                uint64_t v88 = *(void *)v218;
                sub_1B6355ED4(*(uint64_t *)v218);
                uint64_t v89 = sub_1B6E31EF8();
                *(void *)v218 = v89;
                uint64_t v90 = sub_1B6355ED4(v88);
                if (v90)
                {
                  uint64_t v91 = v90;
                  uint64_t v92 = v88 + 36;
                  do
                  {
                    sub_1B67E9ED4(v217, *(void *)(v92 - 4));
                    v92 += 8;
                    --v91;
                  }
                  while (v91);
                  swift_bridgeObjectRelease();
                  uint64_t v89 = *(void *)v218;
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
                sub_1B6855854(v205, v197, v60, v89);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v13 = MEMORY[0x1E4FBC860];
                uint64_t v1 = v215;
LABEL_15:
                uint64_t v12 = (void *)((char *)v201 + 1);
                if ((void *)((char *)v201 + 1) == v192) {
                  goto LABEL_125;
                }
              }
            }
          }
          else if (v4 != v193)
          {
            uint64_t v93 = MEMORY[0x1E4FBC860];
            uint64_t v1 = v215;
            while (1)
            {
              uint64_t v95 = *(void *)(v199 + 32 * v4);
              v217[0] = v93;
              uint64_t v96 = *(void *)(v95 + 16);
              if (v96) {
                break;
              }
              uint64_t v115 = v93;
              uint64_t v116 = *(void *)(v93 + 16);
              if (!v116) {
                goto LABEL_129;
              }
LABEL_158:
              v201 = (void *)v4;
              uint64_t v195 = qword_1EB97D6C0++;
              *(void *)v218 = v93;
              uint64_t v206 = v115;
              uint64_t v211 = v115 + 32;
              swift_retain_n();
              for (uint64_t k = 0; k != v116; ++k)
              {
                uint64_t v119 = v211 + 40 * k;
                uint64_t v120 = *(void *)(v119 + 24);
                uint64_t v121 = *(void *)(v120 + 16);
                if (v121)
                {
                  uint64_t v7 = *(void *)(v119 + 16);
                  v217[0] = sub_1B666EF30();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain_n();
                  sub_1B691D8B4(v121);
                  uint64_t v122 = 32;
                  do
                  {
                    uint64_t v123 = *(void *)(v120 + v122);
                    sub_1B691D98C();
                    uint64_t v124 = *(void *)(v217[0] + 16);
                    sub_1B691DA48(v124);
                    uint64_t v125 = sub_1B691DACC(v124, v123);
                    nullsub_1(v125);
                    v122 += 56;
                    --v121;
                  }
                  while (v121);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  uint64_t v126 = v217[0];
                }
                else
                {
                  uint64_t v126 = sub_1B6964C50(0);
                }
                uint64_t v127 = sub_1B6355ED4(v126);
                uint64_t v128 = *(char **)v218;
                uint64_t v129 = sub_1B6355ED4(*(uint64_t *)v218) + v127;
                char v130 = swift_isUniquelyReferenced_nonNull_native();
                if ((v130 & 1) == 0 || v129 > *((void *)v128 + 3) >> 1)
                {
                  if (*((void *)v128 + 2) <= v129) {
                    uint64_t v131 = v129;
                  }
                  else {
                    uint64_t v131 = *((void *)v128 + 2);
                  }
                  uint64_t v128 = sub_1B633F784(v130, v131, 1, v128);
                  *(void *)v218 = v128;
                }
                uint64_t v132 = *((void *)v128 + 2);
                if (sub_1B6355ED4(v126))
                {
                  if (v127 < 0
                    || ((uint64_t v133 = &v128[8 * v132 + 32], v126 + 32 < (unint64_t)&v133[8 * v127])
                      ? (BOOL v134 = (unint64_t)v133 >= v126 + 32 + 8 * v127)
                      : (BOOL v134 = 1),
                        !v134))
                  {
LABEL_239:
                    sub_1B6E32C88();
                    __break(1u);
                    swift_release();
                    __break(1u);

                    v242[0] = v225;
                    v242[1] = v226;
                    uint64_t v243 = v227;
                    sub_1B6345178(v201, (unsigned __int16 **)v242, (uint64_t)v244);
                    sub_1B634507C((char *)v7);
                    ecs_stack_allocator_pop_snapshot((uint64_t)v213);
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 344));
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 376));
                    __break(1u);
                    return;
                  }
                  memcpy(v133, (const void *)(v126 + 32), 8 * v127);
                  if (v127) {
                    *((void *)v128 + 2) += v127;
                  }
                }
                uint64_t v118 = swift_bridgeObjectRelease();
                nullsub_1(v118);
              }
              swift_release_n();
              uint64_t v135 = *(void *)v218;
              sub_1B6355ED4(*(uint64_t *)v218);
              sub_1B67CB1A4();
              uint64_t v136 = sub_1B6E31EF8();
              uint64_t v137 = sub_1B6355ED4(v135);
              if (v137)
              {
                uint64_t v138 = v137;
                uint64_t v139 = 0;
                uint64_t v140 = v136 + 56;
                do
                {
                  while (1)
                  {
                    uint64_t v141 = (unsigned int *)(v135 + 32 + 8 * v139);
                    uint64_t v142 = *v141;
                    uint64_t v143 = v141[1];
                    ++v139;
                    sub_1B6E33918();
                    sub_1B6E33958();
                    sub_1B6E33958();
                    uint64_t v144 = sub_1B6E33988();
                    uint64_t v145 = -1 << *(unsigned char *)(v136 + 32);
                    unint64_t v146 = v144 & ~v145;
                    if ((*(void *)(v140 + ((v146 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v146)) {
                      break;
                    }
LABEL_190:
                    char v152 = swift_isUniquelyReferenced_nonNull_native();
                    *(void *)v218 = v136;
                    sub_1B67EE918(v142 | (v143 << 32), v146, v152);
                    uint64_t v136 = *(void *)v218;
                    swift_bridgeObjectRelease();
                    if (v139 == v138) {
                      goto LABEL_192;
                    }
                    uint64_t v140 = v136 + 56;
                  }
                  uint64_t v147 = ~v145;
                  while (1)
                  {
                    uint64_t v148 = (int *)(*(void *)(v136 + 48) + 8 * v146);
                    int v150 = *v148;
                    int v149 = v148[1];
                    if (v150 == v142 && v149 == v143) {
                      break;
                    }
                    unint64_t v146 = (v146 + 1) & v147;
                    if (((*(void *)(v140 + ((v146 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v146) & 1) == 0) {
                      goto LABEL_190;
                    }
                  }
                }
                while (v139 != v138);
              }
LABEL_192:
              swift_bridgeObjectRelease();
              swift_retain();
              *(void *)v218 = sub_1B6964C50(0);
              swift_retain();
              uint64_t v153 = v206 + 56;
              unint64_t v4 = (unint64_t)v201;
              do
              {
                uint64_t v155 = *(void *)(v153 - 8);
                if (v155)
                {
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain();
                  uint64_t v156 = sub_1B684FDC4(v155);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  uint64_t v156 = sub_1B6964C50(0);
                }
                uint64_t v157 = sub_1B6355ED4(v156);
                uint64_t v7 = *(void *)v218;
                uint64_t v158 = sub_1B6355ED4(*(uint64_t *)v218) + v157;
                int v159 = swift_isUniquelyReferenced_nonNull_native();
                if (!v159 || v158 > *(void *)(v7 + 24) >> 1)
                {
                  if (*(void *)(v7 + 16) <= v158) {
                    uint64_t v160 = v158;
                  }
                  else {
                    uint64_t v160 = *(void *)(v7 + 16);
                  }
                  uint64_t v7 = (uint64_t)sub_1B633F784(v159, v160, 1, (char *)v7);
                  *(void *)v218 = v7;
                }
                uint64_t v161 = *(void *)(v7 + 16);
                if (sub_1B6355ED4(v156))
                {
                  if (v157 < 0) {
                    goto LABEL_239;
                  }
                  uint64_t v162 = (char *)(v7 + 8 * v161 + 32);
                  if (v156 + 32 < (unint64_t)&v162[8 * v157] && (unint64_t)v162 < v156 + 32 + 8 * v157) {
                    goto LABEL_239;
                  }
                  memcpy(v162, (const void *)(v156 + 32), 8 * v157);
                  if (v157) {
                    *(void *)(v7 + 16) += v157;
                  }
                }
                uint64_t v154 = swift_bridgeObjectRelease();
                nullsub_1(v154);
                v153 += 40;
                --v116;
              }
              while (v116);
              swift_release_n();
              uint64_t v94 = sub_1B6B67918(*(uint64_t *)v218);
              swift_bridgeObjectRelease();
              sub_1B6855854(v206, v195, v136, v94);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v93 = MEMORY[0x1E4FBC860];
              uint64_t v1 = v215;
LABEL_129:
              ++v4;
              swift_release();
              if ((void *)v4 == v193) {
                goto LABEL_125;
              }
            }
            uint64_t v7 = v95 + 32;
            swift_bridgeObjectRetain();
            uint64_t v97 = 0;
            while (2)
            {
              uint64_t v100 = (char *)(v7 + 40 * v97);
              long long v101 = *(_OWORD *)v100;
              long long v102 = *((_OWORD *)v100 + 1);
              *(_DWORD *)((char *)v251 + 15) = *(_DWORD *)(v100 + 31);
              long long v250 = v101;
              v251[0] = v102;
              uint64_t v103 = *((void *)&v102 + 1);
              BOOL v104 = v101 == -1 && DWORD1(v101) == 0;
              if (v104 || (v101 & 0x80000000) != 0 || v213[1] <= (int)v101)
              {
                if ((*(unsigned char *)(*(void *)(*(void *)(v1 + 80) + 16) + 200) & 1) == 0) {
                  goto LABEL_132;
                }
              }
              else
              {
                uint64_t v105 = *v213;
                if (DWORD1(v101) == -1 || *(_DWORD *)(v105 + 12 * (int)v101 + 8) == DWORD1(v101)) {
                  uint64_t v106 = *(__int16 *)(v105 + 12 * (int)v101 + 6);
                }
                else {
                  uint64_t v106 = -2;
                }
                if ((*(unsigned char *)(*(void *)(*(void *)(v1 + 80) + 8 * v106 + 32) + 200) & 1) == 0) {
                  goto LABEL_132;
                }
                uint64_t v114 = *v213;
                if (DWORD1(v101) == -1 || *(_DWORD *)(v114 + 12 * (int)v101 + 8) == DWORD1(v101))
                {
                  char v107 = *(unsigned char *)(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v114 + 12 * (int)v101) + 32)
                                  + 120);
LABEL_145:
                  uint64_t v108 = sub_1B6355ED4(*((uint64_t *)&v251[0] + 1));
                  if (v108)
                  {
                    uint64_t v109 = v108;
                    uint64_t v110 = (uint64_t *)(v103 + 80);
                    while (1)
                    {
                      long long v111 = *(_OWORD *)(v110 - 3);
                      uint64_t v112 = *(v110 - 1);
                      uint64_t v113 = *v110;
                      *(void *)v218 = *(v110 - 6);
                      *(_OWORD *)&v218[8] = *(_OWORD *)(v110 - 5);
                      *(_OWORD *)&v218[24] = v111;
                      uint64_t v219 = v112;
                      uint64_t v220 = v113;
                      if (sub_1B6855770((unint64_t *)v218, v1, v107)) {
                        break;
                      }
                      v110 += 7;
                      if (!--v109) {
                        goto LABEL_133;
                      }
                    }
LABEL_132:
                    sub_1B68709B0((uint64_t)&v250);
                    sub_1B691D9A4();
                    uint64_t v98 = *(void *)(v217[0] + 16);
                    sub_1B691DA60(v98);
                    sub_1B691DAE8(v98, (uint64_t)&v250);
                    nullsub_1(v99);
                  }
LABEL_133:
                  if (++v97 == v96)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v115 = v217[0];
                    uint64_t v93 = MEMORY[0x1E4FBC860];
                    uint64_t v116 = *(void *)(v217[0] + 16);
                    if (!v116) {
                      goto LABEL_129;
                    }
                    goto LABEL_158;
                  }
                  continue;
                }
              }
              break;
            }
            char v107 = 1;
            goto LABEL_145;
          }
          uint64_t v1 = v215;
LABEL_125:
          v238[0] = v235;
          v238[1] = v236;
          uint64_t v239 = v237;
          sub_1B6345178(v191, (unsigned __int16 **)v238, (uint64_t)v247);
          sub_1B634507C(v187);
          ecs_stack_allocator_pop_snapshot(v189);
          if (v190)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v187 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v187 + 47));
          }
          swift_release();
          uint64_t v2 = v188 + 1;
          if (v188 + 1 == v186)
          {
            sub_1B632F170(v216);
            break;
          }
        }
      }
    }
    sub_1B632F170(v216);
  }
  if (qword_1EB97F2D8 != -1) {
    swift_once();
  }
  v245[0] = xmmword_1EB997D38;
  v245[1] = *(_OWORD *)&qword_1EB997D48;
  uint64_t v246 = qword_1EB997D58;
  sub_1B62C9DA8(v1, (uint64_t)v245, 0x200000000, v217);
  sub_1B62D7710((uint64_t)v217, (uint64_t)v218, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)v218)
  {
    long long v225 = *(_OWORD *)v218;
    long long v226 = *(_OWORD *)&v218[16];
    uint64_t v227 = *(void *)&v218[32];
    if (v224 >= 1)
    {
      uint64_t v207 = v221;
      if (v221)
      {
        uint64_t v200 = v219;
        int v164 = v223;
        uint64_t v214 = v223[4];
        int m = *(unsigned __int8 *)(v222 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v194 = v223 + 8;
        uint64_t v196 = (uint64_t)(v223 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v166 = 0;
        int v198 = m;
        v202 = v164;
        do
        {
          unint64_t v167 = (unsigned int *)(v200 + 48 * v166);
          uint64_t v169 = *v167;
          uint64_t v168 = v167[1];
          uint64_t v170 = (uint64_t *)*((void *)v167 + 2);
          uint64_t v172 = *((void *)v167 + 4);
          uint64_t v171 = *((void *)v167 + 5);
          uint64_t v212 = *((void *)v167 + 3);
          if (m)
          {
            uint64_t v173 = *(os_unfair_lock_s **)(v171 + 376);
            swift_retain();
            os_unfair_lock_lock(v173);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v171 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v214);
          sub_1B62D7710(v196, (uint64_t)v244, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v174 = v164[4];
          uint64_t v175 = *(void *)(*(void *)(*(void *)(*(void *)(v171 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          int v164 = v202;
          v202[6] = ecs_stack_allocator_allocate(v174, 48 * v175, 8);
          v202[7] = v175;
          v194[1] = 0;
          v194[2] = 0;
          void *v194 = 0;
          swift_release();
          uint64_t v176 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v170, v212, v172, (uint64_t)v202);
          uint64_t v177 = v176;
          if (v170)
          {
            for (int m = v198; v172; --v172)
            {
              uint64_t v178 = *v170++;
              sub_1B686EDB0(v171, v178, v177, v215);
              v177 += 64;
            }
          }
          else
          {
            int m = v198;
            if (v169 != v168)
            {
              uint64_t v179 = v176 + (v169 << 6);
              do
              {
                sub_1B686EDB0(v171, v169++, v179, v215);
                v179 += 64;
              }
              while (v168 != v169);
            }
          }
          v240[0] = v225;
          v240[1] = v226;
          uint64_t v241 = v227;
          sub_1B6345178(v202, (unsigned __int16 **)v240, (uint64_t)v244);
          sub_1B634507C((char *)v171);
          ecs_stack_allocator_pop_snapshot(v214);
          if (m)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 376));
          }
          swift_release();
          ++v166;
        }
        while (v166 != v207);
        sub_1B632F170(v217);
      }
    }
    uint64_t v180 = MEMORY[0x1E4FBC860];
    sub_1B632F170(v217);
  }
  else
  {
    uint64_t v180 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v242[0] = v180;
  uint64_t v181 = swift_bridgeObjectRetain();
  uint64_t v182 = sub_1B684FC58(v181, (uint64_t *)v242);
  swift_bridgeObjectRelease();
  *(void *)(v203 + 16) = v182;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1B68709B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B68709E8(uint64_t a1, char a2)
{
  if (a2)
  {
    if (qword_1EB97F2E8 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_1EB997D60;
  }
  else
  {
    if (qword_1E9DCC4E0 != -1) {
      swift_once();
    }
    uint64_t v3 = (uint64_t *)&xmmword_1E9E49390;
  }
  uint64_t v4 = *v3;
  int v5 = *((_DWORD *)v3 + 2);
  char v6 = *((unsigned char *)v3 + 12);
  uint64_t v7 = v3[2];
  char v8 = *((unsigned char *)v3 + 24);
  uint64_t v9 = v3[4];
  swift_retain();
  uint64_t v71 = v4;
  int v72 = v5;
  char v73 = v6;
  uint64_t v74 = v7;
  char v75 = v8;
  uint64_t v76 = v9;
  sub_1B62C9DA8(a1, (uint64_t)&v71, 0x200000000, v57);
  sub_1B62D7710((uint64_t)v57, (uint64_t)v58, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v58[0])
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  long long v65 = v58[0];
  long long v66 = v58[1];
  uint64_t v67 = v59;
  if (v64 <= 0 || (uint64_t v54 = v61) == 0)
  {
    swift_release();
    sub_1B632F170(v57);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v53 = v60;
  uint64_t v10 = v63;
  uint64_t v11 = v63[4];
  int v12 = *(unsigned __int8 *)(v62 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v48 = v63 + 13;
  uint64_t v49 = v63 + 8;
  uint64_t v50 = (uint64_t)(v63 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  int v15 = (char *)MEMORY[0x1E4FBC860];
  int v51 = v12;
  uint64_t v52 = v11;
  while (1)
  {
    uint64_t v55 = v14;
    uint64_t v56 = v13;
    uint64_t v16 = (unsigned int *)(v53 + 48 * v13);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    long long v19 = (uint64_t *)*((void *)v16 + 2);
    uint64_t v21 = *((void *)v16 + 4);
    uint64_t v20 = *((void *)v16 + 5);
    if (v12)
    {
      BOOL v22 = *(os_unfair_lock_s **)(v20 + 376);
      swift_retain();
      os_unfair_lock_lock(v22);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v20 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v11);
    sub_1B62D7710(v50, (uint64_t)v70, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v23 = v10[4];
    uint64_t v24 = *(void *)(*(void *)(*(void *)(*(void *)(v20 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v10[6] = ecs_stack_allocator_allocate(v23, 48 * v24, 8);
    v10[7] = v24;
    v49[1] = 0;
    void v49[2] = 0;
    *uint64_t v49 = 0;
    swift_release();
    if (!v19) {
      break;
    }
    if (v21)
    {
      do
      {
        uint64_t v26 = *v19++;
        uint64_t v25 = v26;
        uint64_t v27 = swift_retain();
        if (*(unsigned char *)(v20 + 184)) {
          goto LABEL_52;
        }
        int v28 = *(_DWORD *)(*(void *)(v20 + 168) + 4 * v25);
        int v29 = *(_DWORD *)(*(void *)(v27 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v28 + 8);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v15 = sub_1B633F784(0, *((void *)v15 + 2) + 1, 1, v15);
        }
        unint64_t v31 = *((void *)v15 + 2);
        unint64_t v30 = *((void *)v15 + 3);
        if (v31 >= v30 >> 1) {
          int v15 = sub_1B633F784(v30 > 1, v31 + 1, 1, v15);
        }
        *((void *)v15 + 2) = v31 + 1;
        uint64_t v32 = &v15[8 * v31];
        *((_DWORD *)v32 + 8) = v28;
        *((_DWORD *)v32 + 9) = v29;
      }
      while (--v21);
    }
LABEL_26:
    v68[0] = v65;
    v68[1] = v66;
    uint64_t v69 = v67;
    uint64_t v14 = v55;
    sub_1B6345178(v10, (unsigned __int16 **)v68, (uint64_t)v70);
    if (*(void *)(v10[13] + 16))
    {
      uint64_t v33 = swift_bridgeObjectRetain();
      sub_1B639147C(v33, v20);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = v10[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v35 + 16));
      }
      else
      {
        uint64_t v42 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v35 + 24) >= 2uLL)
        {
          sub_1B63BCE6C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          uint64_t v42 = (void *)swift_allocObject();
          size_t v43 = j__malloc_size(v42);
          v42[2] = 0;
          _OWORD v42[3] = 2 * ((uint64_t)(v43 - 32) / 72);
        }
        *uint64_t v48 = v42;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v10[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        uint64_t v44 = *(char **)(v20 + 232);
        int64_t v45 = *(char **)(v20 + 256);
        if (v44 == v45)
        {
          uint64_t v46 = *(char **)(v20 + 240);
        }
        else
        {
          sub_1B666018C(v45, v44);
          int64_t v45 = *(char **)(v20 + 232);
          uint64_t v46 = *(char **)(v20 + 240);
          if (v46 == v45)
          {
            uint64_t v46 = 0;
            int64_t v45 = 0;
            *(void *)(v20 + 232) = 0;
            *(void *)(v20 + 240) = 0;
          }
        }
        *(void *)(v20 + 248) = v46;
        *(void *)(v20 + 256) = v45;
      }
    }
    uint64_t v11 = v52;
    ecs_stack_allocator_pop_snapshot(v52);
    int v12 = v51;
    if (v51)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 376));
    }
    swift_release();
    uint64_t v13 = v56 + 1;
    if (v56 + 1 == v54)
    {
      swift_release();
      sub_1B632F170(v57);
      sub_1B632F170(v57);
      return (uint64_t)v15;
    }
  }
  if (v18 == v17) {
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v36 = swift_retain();
    if (*(unsigned char *)(v20 + 184)) {
      break;
    }
    int v37 = *(_DWORD *)(*(void *)(v20 + 168) + 4 * v18);
    int v38 = *(_DWORD *)(*(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v37 + 8);
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v15 = sub_1B633F784(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v40 = *((void *)v15 + 2);
    unint64_t v39 = *((void *)v15 + 3);
    if (v40 >= v39 >> 1) {
      int v15 = sub_1B633F784(v39 > 1, v40 + 1, 1, v15);
    }
    ++v18;
    *((void *)v15 + 2) = v40 + 1;
    uint64_t v41 = &v15[8 * v40];
    *((_DWORD *)v41 + 8) = v37;
    *((_DWORD *)v41 + 9) = v38;
    if (v17 == v18) {
      goto LABEL_26;
    }
  }
LABEL_52:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B687103C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  uint64_t v27 = a3 + 64;
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v25 = a3 + 104;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v6 << 6);
LABEL_19:
    if (*(void *)(*(void *)(a4 + 264) + 16))
    {
      uint64_t v14 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(v15, v16);
      if (v17)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t Strong = swift_weakLoadStrong();
        swift_release();
        if (Strong)
        {
          if (*(void *)(Strong + 24) == *(void *)(a5 + 24) && *(void *)(Strong + 32) == *(void *)(a5 + 32))
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_30;
          }
          char v20 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if (v20)
          {
LABEL_30:
            *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
            ++v24;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v12 = v6 + 1;
  if (v6 + 1 >= v28) {
    return sub_1B685EAF8(a1, a2, v24, a3);
  }
  unint64_t v13 = *(void *)(v27 + 8 * v12);
  if (v13) {
    goto LABEL_18;
  }
  uint64_t v12 = v6 + 2;
  if (v6 + 2 >= v28) {
    return sub_1B685EAF8(a1, a2, v24, a3);
  }
  unint64_t v13 = *(void *)(v27 + 8 * v12);
  if (v13) {
    goto LABEL_18;
  }
  uint64_t v12 = v6 + 3;
  if (v6 + 3 >= v28) {
    return sub_1B685EAF8(a1, a2, v24, a3);
  }
  unint64_t v13 = *(void *)(v27 + 8 * v12);
  if (v13) {
    goto LABEL_18;
  }
  uint64_t v12 = v6 + 4;
  if (v6 + 4 >= v28) {
    return sub_1B685EAF8(a1, a2, v24, a3);
  }
  unint64_t v13 = *(void *)(v27 + 8 * v12);
  if (v13)
  {
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    uint64_t v6 = v12;
    goto LABEL_19;
  }
  while (v28 - 5 != v6)
  {
    unint64_t v13 = *(void *)(v25 + 8 * v6++);
    if (v13)
    {
      uint64_t v12 = v6 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B685EAF8(a1, a2, v24, a3);
}

uint64_t sub_1B6871320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v17[1] = *MEMORY[0x1E4F143B8];
  char v8 = *(unsigned char *)(a1 + 32);
  unsigned int v9 = v8 & 0x3F;
  unint64_t v10 = (unint64_t)((1 << v8) + 63) >> 6;
  size_t v11 = 8 * v10;
  swift_retain_n();
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v9 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, v13);
    bzero((char *)v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_1B687103C((void *)((char *)v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, a1, a2, a3);
    swift_release();
    swift_release();
    if (v4) {
      swift_willThrow();
    }
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v11);
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_1B687103C((unint64_t *)v15, v10, a1, a2, a3);
    swift_release();
    swift_release();
    MEMORY[0x1BA9B84C0](v15, -1, -1);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_1B6871544(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = 0;
  uint64_t v4 = 0;
  uint64_t v7 = *(void *)(a3 + 64);
  uint64_t v5 = a3 + 64;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  uint64_t v67 = v5;
  int64_t v68 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v63 = v5 + 40;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  uint64_t v12 = MEMORY[0x1E4FBC840];
  uint64_t v69 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    if (v10)
    {
      uint64_t v73 = (v10 - 1) & v10;
      uint64_t v74 = v4;
      unint64_t v13 = __clz(__rbit64(v10)) | (v4 << 6);
      goto LABEL_19;
    }
    uint64_t v14 = v4 + 1;
    if (v4 + 1 >= v68) {
      return sub_1B685EAF8(a1, a2, v66, a3);
    }
    unint64_t v15 = *(void *)(v67 + 8 * v14);
    if (!v15)
    {
      uint64_t v14 = v4 + 2;
      if (v4 + 2 >= v68) {
        return sub_1B685EAF8(a1, a2, v66, a3);
      }
      unint64_t v15 = *(void *)(v67 + 8 * v14);
      if (!v15)
      {
        uint64_t v14 = v4 + 3;
        if (v4 + 3 >= v68) {
          return sub_1B685EAF8(a1, a2, v66, a3);
        }
        unint64_t v15 = *(void *)(v67 + 8 * v14);
        if (!v15)
        {
          uint64_t v14 = v4 + 4;
          if (v4 + 4 >= v68) {
            return sub_1B685EAF8(a1, a2, v66, a3);
          }
          unint64_t v15 = *(void *)(v67 + 8 * v14);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_18:
    uint64_t v73 = (v15 - 1) & v15;
    uint64_t v74 = v14;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
LABEL_19:
    uint64_t v16 = (uint64_t *)(*(void *)(a3 + 56) + 24 * v13);
    uint64_t v17 = v16[1];
    uint64_t v18 = *(void *)(a4 + 264);
    unint64_t v70 = v13;
    if (*(void *)(v18 + 16))
    {
      uint64_t v19 = *v16;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1B62B2CE0(v19, v17);
      if (v21)
      {
        uint64_t v22 = *(void *)(*(void *)(v18 + 56) + 8 * v20);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v22 = 0;
LABEL_25:
    v91[7] = v22;
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v87 = v11;
    uint64_t v85 = 0;
    unint64_t v86 = 0xE000000000000000;
    uint64_t v24 = *(void *)(Strong + 16);
    if (v24)
    {
      if (!*(void *)(v24 + 16)) {
        goto LABEL_27;
      }
    }
    else
    {
      *(void *)(Strong + 16) = sub_1B67DD080(MEMORY[0x1E4FBC860]);
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(Strong + 16);
      if (!*(void *)(v24 + 16))
      {
LABEL_27:
        if (v24) {
          goto LABEL_28;
        }
LABEL_33:
        *(void *)(Strong + 16) = sub_1B67DD080(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRetain();
    sub_1B62B2CE0(1701667182, 0xE400000000000000);
    char v27 = v26;
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_40;
    }
    if (!*(void *)(Strong + 16)) {
      goto LABEL_33;
    }
LABEL_28:
    sub_1B62CAAD8((uint64_t)&v85, (uint64_t)&v88);
    memset((char *)v78 + 8, 0, 32);
    *(void *)&long long v75 = 1701667182;
    *((void *)&v75 + 1) = 0xE400000000000000;
    sub_1B6A4943C(&v88, v90);
    sub_1B629C37C((uint64_t)v90, (uint64_t)&v76);
    sub_1B68736D8((uint64_t)v78 + 8, (uint64_t)&qword_1EB980F60, v69, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
    sub_1B62B57A8(&v88, (_OWORD *)((char *)v78 + 8));
    long long v81 = v77;
    long long v82 = v78[0];
    long long v83 = v78[1];
    uint64_t v84 = *(void *)&v78[2];
    long long v79 = v75;
    long long v80 = v76;
    if (*((void *)&v75 + 1))
    {
      long long v77 = v81;
      v78[0] = v82;
      v78[1] = v83;
      *(void *)&v78[2] = v84;
      long long v75 = v79;
      long long v76 = v80;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v88 = *(void *)(Strong + 16);
      *(void *)(Strong + 16) = 0x8000000000000000;
      sub_1B67E3A2C((uint64_t)&v75, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
      *(void *)(Strong + 16) = v88;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B68736D8((uint64_t)&v79, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1B62B2CE0(1701667182, 0xE400000000000000);
      char v30 = v29;
      swift_bridgeObjectRelease();
      if (v30)
      {
        char v31 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v32 = *(void *)(Strong + 16);
        *(void *)&long long v88 = v32;
        *(void *)(Strong + 16) = 0x8000000000000000;
        if ((v31 & 1) == 0)
        {
          sub_1B6ACB8DC();
          uint64_t v32 = v88;
        }
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void *)(v32 + 56) + 88 * v28;
        long long v34 = *(_OWORD *)(v33 + 16);
        long long v75 = *(_OWORD *)v33;
        long long v76 = v34;
        long long v36 = *(_OWORD *)(v33 + 48);
        long long v35 = *(_OWORD *)(v33 + 64);
        long long v37 = *(_OWORD *)(v33 + 32);
        *(void *)&v78[2] = *(void *)(v33 + 80);
        v78[0] = v36;
        v78[1] = v35;
        long long v77 = v37;
        sub_1B6AC8328(v28, v32);
        *(void *)(Strong + 16) = v32;
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v78, 0, 40);
        long long v76 = 0u;
        long long v77 = 0u;
        long long v75 = 0u;
      }
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      sub_1B68736D8((uint64_t)&v75, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
    }
LABEL_40:
    uint64_t v38 = *(void *)(Strong + 16);
    if (!v38) {
      goto LABEL_48;
    }
    if (!*(void *)(v38 + 16))
    {
      uint64_t v84 = 0;
      long long v82 = 0u;
      long long v83 = 0u;
      long long v80 = 0u;
      long long v81 = 0u;
      long long v79 = 0u;
      swift_bridgeObjectRetain();
LABEL_47:
      sub_1B68736D8((uint64_t)&v79, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
      swift_bridgeObjectRelease();
LABEL_48:
      long long v88 = 0u;
      long long v89 = 0u;
      goto LABEL_49;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1B62B2CE0(1701667182, 0xE400000000000000);
    if ((v40 & 1) == 0)
    {
      uint64_t v84 = 0;
      long long v82 = 0u;
      long long v83 = 0u;
      long long v80 = 0u;
      long long v81 = 0u;
      long long v79 = 0u;
      goto LABEL_47;
    }
    sub_1B66459A4(*(void *)(v38 + 56) + 88 * v39, (uint64_t)&v79);
    if (!*((void *)&v79 + 1)) {
      goto LABEL_47;
    }
    sub_1B66459A4((uint64_t)&v79, (uint64_t)&v75);
    uint64_t v41 = MEMORY[0x1E4FBB718];
    sub_1B68736D8((uint64_t)&v79, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
    swift_bridgeObjectRelease();
    sub_1B6366948((uint64_t)v78 + 8, (uint64_t)&v88, (uint64_t)&qword_1EB980F60, v12 + 8, v41, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D85D4);
    sub_1B666BD18((uint64_t)&v75);
LABEL_49:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v85);
    sub_1B62B57A8(&v88, &v79);
    swift_dynamicCast();
    long long v79 = v75;
    *(void *)&long long v75 = 0x657461756C617645;
    *((void *)&v75 + 1) = 0xE90000000000005FLL;
    sub_1B666BDC4();
    sub_1B666BE18();
    char v42 = sub_1B6E31618();
    swift_bridgeObjectRelease();
    if (v42)
    {
      uint64_t v87 = v11;
      uint64_t v85 = 0;
      unint64_t v86 = 0xE000000000000000;
      uint64_t v43 = *(void *)(Strong + 16);
      if (!v43)
      {
        *(void *)(Strong + 16) = sub_1B67DD080(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void *)(Strong + 16);
      }
      if (!*(void *)(v43 + 16))
      {
        if (v43) {
          goto LABEL_58;
        }
LABEL_57:
        *(void *)(Strong + 16) = sub_1B67DD080(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(1701667182, 0xE400000000000000);
      char v45 = v44;
      swift_bridgeObjectRelease();
      if (v45) {
        goto LABEL_60;
      }
      if (!*(void *)(Strong + 16)) {
        goto LABEL_57;
      }
LABEL_58:
      sub_1B62CAAD8((uint64_t)&v85, (uint64_t)&v88);
      memset((char *)v78 + 8, 0, 32);
      *(void *)&long long v75 = 1701667182;
      *((void *)&v75 + 1) = 0xE400000000000000;
      sub_1B6A4943C(&v88, v91);
      sub_1B629C37C((uint64_t)v91, (uint64_t)&v76);
      sub_1B68736D8((uint64_t)v78 + 8, (uint64_t)&qword_1EB980F60, v12 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
      sub_1B62B57A8(&v88, (_OWORD *)((char *)v78 + 8));
      long long v81 = v77;
      long long v82 = v78[0];
      long long v83 = v78[1];
      uint64_t v84 = *(void *)&v78[2];
      long long v79 = v75;
      long long v80 = v76;
      if (*((void *)&v75 + 1))
      {
        long long v77 = v81;
        v78[0] = v82;
        v78[1] = v83;
        *(void *)&v78[2] = v84;
        long long v75 = v79;
        long long v76 = v80;
        char v46 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v88 = *(void *)(Strong + 16);
        *(void *)(Strong + 16) = 0x8000000000000000;
        sub_1B67E3A2C((uint64_t)&v75, 1701667182, 0xE400000000000000, v46);
        *(void *)(Strong + 16) = v88;
        swift_bridgeObjectRelease();
LABEL_60:
        uint64_t v47 = *(void *)(Strong + 16);
        if (!v47) {
          goto LABEL_75;
        }
        goto LABEL_68;
      }
      sub_1B68736D8((uint64_t)&v79, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_1B62B2CE0(1701667182, 0xE400000000000000);
      char v50 = v49;
      swift_bridgeObjectRelease();
      if (v50)
      {
        char v51 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v52 = *(void *)(Strong + 16);
        *(void *)&long long v88 = v52;
        *(void *)(Strong + 16) = 0x8000000000000000;
        if ((v51 & 1) == 0)
        {
          sub_1B6ACB8DC();
          uint64_t v52 = v88;
        }
        swift_bridgeObjectRelease();
        uint64_t v53 = *(void *)(v52 + 56) + 88 * v48;
        long long v54 = *(_OWORD *)(v53 + 16);
        long long v75 = *(_OWORD *)v53;
        long long v76 = v54;
        long long v56 = *(_OWORD *)(v53 + 48);
        long long v55 = *(_OWORD *)(v53 + 64);
        long long v57 = *(_OWORD *)(v53 + 32);
        *(void *)&v78[2] = *(void *)(v53 + 80);
        v78[0] = v56;
        v78[1] = v55;
        long long v77 = v57;
        sub_1B6AC8328(v48, v52);
        *(void *)(Strong + 16) = v52;
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v78, 0, 40);
        long long v76 = 0u;
        long long v77 = 0u;
        long long v75 = 0u;
      }
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      sub_1B68736D8((uint64_t)&v75, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
      uint64_t v47 = *(void *)(Strong + 16);
      if (!v47) {
        goto LABEL_75;
      }
LABEL_68:
      if (!*(void *)(v47 + 16))
      {
        uint64_t v84 = 0;
        long long v82 = 0u;
        long long v83 = 0u;
        long long v80 = 0u;
        long long v81 = 0u;
        long long v79 = 0u;
        swift_bridgeObjectRetain();
LABEL_74:
        sub_1B68736D8((uint64_t)&v79, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
        swift_bridgeObjectRelease();
LABEL_75:
        long long v88 = 0u;
        long long v89 = 0u;
        goto LABEL_76;
      }
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1B62B2CE0(1701667182, 0xE400000000000000);
      if ((v59 & 1) == 0)
      {
        uint64_t v84 = 0;
        long long v82 = 0u;
        long long v83 = 0u;
        long long v80 = 0u;
        long long v81 = 0u;
        long long v79 = 0u;
        goto LABEL_74;
      }
      sub_1B66459A4(*(void *)(v47 + 56) + 88 * v58, (uint64_t)&v79);
      if (!*((void *)&v79 + 1)) {
        goto LABEL_74;
      }
      sub_1B66459A4((uint64_t)&v79, (uint64_t)&v75);
      uint64_t v60 = MEMORY[0x1E4FBB718];
      sub_1B68736D8((uint64_t)&v79, (uint64_t)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
      swift_bridgeObjectRelease();
      sub_1B6366948((uint64_t)v78 + 8, (uint64_t)&v88, (uint64_t)&qword_1EB980F60, v12 + 8, v60, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D85D4);
      sub_1B666BD18((uint64_t)&v75);
LABEL_76:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v85);
      sub_1B62B57A8(&v88, &v79);
      swift_dynamicCast();
      char v61 = sub_1B6E31A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      unint64_t v10 = v73;
      uint64_t v4 = v74;
      if (v61)
      {
        *(unint64_t *)((char *)a1 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
        ++v66;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      unint64_t v10 = v73;
      uint64_t v4 = v74;
    }
  }
  while (v68 - 5 != v4)
  {
    unint64_t v15 = *(void *)(v63 + 8 * v4++);
    if (v15)
    {
      uint64_t v14 = v4 + 4;
      goto LABEL_18;
    }
  }
  return sub_1B685EAF8(a1, a2, v66, a3);
}

uint64_t sub_1B68721F0(uint64_t a1, uint64_t a2)
{
  v14[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  swift_retain_n();
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, v10);
    bzero((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1B6871544((void *)((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1B6871544((unint64_t *)v12, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B84C0](v12, -1, -1);
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return v11;
}

uint64_t sub_1B6872428(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1B6C3D64C(0, v2 & ~(v2 >> 63), 0);
    uint64_t v3 = v31;
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      uint64_t v29 = v2;
      unint64_t v26 = v1;
      do
      {
        char v5 = (void *)MEMORY[0x1BA9B4580](v4, v1);
        uint64_t v6 = v5[6];
        uint64_t v27 = v5[5];
        uint64_t v7 = v5[7];
        unint64_t v8 = v5[8];
        uint64_t v9 = v5[9];
        uint64_t v10 = v5[10];
        uint64_t v11 = v5[11];
        swift_bridgeObjectRetain();
        sub_1B629C9E8(v7, v8);
        swift_unknownObjectRelease();
        unint64_t v13 = *(void *)(v31 + 16);
        unint64_t v12 = *(void *)(v31 + 24);
        if (v13 >= v12 >> 1) {
          sub_1B6C3D64C(v12 > 1, v13 + 1, 1);
        }
        ++v4;
        *(void *)(v31 + 16) = v13 + 1;
        uint64_t v14 = (void *)(v31 + 56 * v13);
        void v14[4] = v27;
        void v14[5] = v6;
        v14[6] = v7;
        v14[7] = v8;
        v14[8] = v9;
        v14[9] = v10;
        v14[10] = v11;
        unint64_t v1 = v26;
      }
      while (v29 != v4);
    }
    else
    {
      unint64_t v15 = v1 + 32;
      do
      {
        uint64_t v16 = *(void *)(*(void *)v15 + 48);
        uint64_t v28 = *(void *)(*(void *)v15 + 40);
        uint64_t v30 = v2;
        uint64_t v17 = *(void *)(*(void *)v15 + 56);
        unint64_t v18 = *(void *)(*(void *)v15 + 64);
        uint64_t v19 = *(void *)(*(void *)v15 + 72);
        uint64_t v20 = *(void *)(*(void *)v15 + 80);
        uint64_t v21 = *(void *)(*(void *)v15 + 88);
        swift_bridgeObjectRetain();
        sub_1B629C9E8(v17, v18);
        unint64_t v23 = *(void *)(v31 + 16);
        unint64_t v22 = *(void *)(v31 + 24);
        if (v23 >= v22 >> 1) {
          sub_1B6C3D64C(v22 > 1, v23 + 1, 1);
        }
        *(void *)(v31 + 16) = v23 + 1;
        uint64_t v24 = (void *)(v31 + 56 * v23);
        void v24[4] = v28;
        _OWORD v24[5] = v16;
        v24[6] = v17;
        v24[7] = v18;
        v24[8] = v19;
        v24[9] = v20;
        v24[10] = v21;
        v15 += 8;
        uint64_t v2 = v30 - 1;
      }
      while (v30 != 1);
    }
  }
  return v3;
}

uint64_t sub_1B6872640(uint64_t a1, char a2)
{
  uint64_t v3 = sub_1B68709E8(a1, a2);
  uint64_t v5 = v3;
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    uint64_t v7 = 0;
    uint64_t v121 = 0;
    uint64_t v8 = v3 + 32;
    uint64_t v120 = OBJC_IVAR____TtC3VFX13EntityManager_replicationStream;
    uint64_t v119 = (char *)&v130 + 8;
    uint64_t v115 = &v127;
    uint64_t v118 = &v138;
    uint64_t v9 = &unk_1EB97E000;
    while (1)
    {
      *(void *)&long long v4 = *(void *)(v8 + 8 * v7);
      long long v122 = v4;
      uint64_t v10 = v4;
      if (v4 == -1) {
        break;
      }
      uint64_t v11 = v9[142];
      swift_retain();
      if ((v10 & 0x80000000) != 0) {
        goto LABEL_4;
      }
      if (*(void *)(a1 + v11 + 8) > (int)v10
        && ((uint64_t v12 = *(void *)(a1 + v11), v13 = DWORD1(v122), DWORD1(v122) != -1)
          ? (BOOL v14 = *(_DWORD *)(v12 + 12 * (int)v10 + 8) == DWORD1(v122))
          : (BOOL v14 = 1),
            v14
         && (uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(v12 + 12 * (int)v10 + 6) + 32)
                             + 16),
             uint64_t v16 = *(void *)(v15 + 128),
             *(void *)(v16 + 16))
         && (unint64_t v17 = sub_1B62C1A30((uint64_t)&type metadata for EmitterDescription), (v18 & 1) != 0)))
      {
        uint64_t v19 = *(ValueMetadata **)(*(void *)(v15 + 24) + 16 * *(void *)(*(void *)(v16 + 56) + 8 * v17) + 32);
        swift_retain();
        if (v19 == &type metadata for EmitterDescription)
        {
          uint64_t v133 = &off_1F0F53E58;
          *(void *)&long long v130 = v122;
          uint64_t v132 = &type metadata for VFXEmitter;
          *((void *)&v130 + 1) = a1;
          sub_1B62C15C4(&v130, (uint64_t)&v137);
          uint64_t v20 = sub_1B62C14BC(&v137, v139);
          uint64_t v21 = sub_1B685E064(*v20, v20[1]);
          uint64_t v22 = *(void *)(v21 + 16);
          if (v22)
          {
            uint64_t v116 = v8;
            uint64_t v117 = v5;
            uint64_t v23 = 0;
            uint64_t v113 = v21;
            uint64_t v24 = v21 + 32;
            uint64_t v112 = v10 | (v13 << 32);
            *(void *)&long long v122 = v22;
            uint64_t v114 = v21 + 32;
            while (1)
            {
              uint64_t v25 = v24 + 16 * v23;
              unsigned int v27 = *(_DWORD *)v25;
              unsigned int v26 = *(_DWORD *)(v25 + 4);
              uint64_t v28 = *(void *)(v25 + 8);
              swift_retain();
              BOOL v29 = v27 == -1 && v26 == 0;
              if (!v29
                && (v27 & 0x80000000) == 0
                && *(void *)(v28 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v27
                && ((uint64_t v30 = *(void *)(v28 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v26 == -1)
                 || *(_DWORD *)(v30 + 12 * (int)v27 + 8) == v26))
              {
                uint64_t v31 = *(void *)(*(void *)(*(void *)(v28 + 80) + 8 * *(__int16 *)(v30 + 12 * (int)v27 + 6) + 32)
                                + 16);
                uint64_t v32 = *(void *)(v31 + 128);
                if (*(void *)(v32 + 16)
                  && (unint64_t v33 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig), (v34 & 1) != 0))
                {
                  long long v35 = *(ValueMetadata **)(*(void *)(v31 + 24)
                                          + 16 * *(void *)(*(void *)(v32 + 56) + 8 * v33)
                                          + 32);
                  swift_release();
                  if (v35 == &type metadata for GraphScriptingConfig)
                  {
                    swift_retain();
                    swift_unownedRetain();
                    swift_release();
                    swift_weakInit();
                    uint64_t v36 = *(void *)(a1 + v120);
                    if (v36)
                    {
                      LODWORD(v111) = *(unsigned __int8 *)(v36 + 80);
                      MEMORY[0x1BA9B8670](v36 + 48);
                      uint64_t v36 = *(void *)(v36 + 56);
                    }
                    else
                    {
                      LODWORD(v111) = 0;
                    }
                    uint64_t v131 = 0;
                    swift_unknownObjectUnownedInit();
                    *(void *)&long long v130 = a1;
                    uint64_t v131 = v36;
                    swift_unknownObjectUnownedAssign();
                    swift_unownedRetain();
                    swift_unknownObjectRelease();
                    LOBYTE(v132) = v111;
                    sub_1B636C4E0((uint64_t)&v130, (uint64_t)&v126);
                    uint64_t v37 = v126;
                    swift_unownedRetainStrong();
                    uint64_t v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
                    if (*(void *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= (int)v27)
                    {
                      swift_release();
                      char v46 = 0;
                      unint64_t v109 = 0;
                      uint64_t v110 = 0;
                      uint64_t v107 = 0;
                      int v108 = 0;
                      uint64_t v24 = v114;
                    }
                    else
                    {
                      uint64_t v39 = *v38;
                      uint64_t v40 = *v38 + 12 * (int)v27;
                      uint64_t v41 = *(__int16 *)(v40 + 4);
                      uint64_t v24 = v114;
                      if ((v26 == -1 || *(_DWORD *)(v40 + 8) == v26)
                        && (uint64_t v42 = *(void *)(*(void *)(v37 + 136) + 8 * *(int *)(v39 + 12 * (int)v27) + 32),
                            uint64_t v43 = *(void *)(v42 + 48),
                            (uint64_t v44 = *(void *)(v43 + 16)) != 0))
                      {
                        char v45 = (void *)(v43 + 56);
                        while ((ValueMetadata *)*(v45 - 3) != &type metadata for GraphScriptingConfig)
                        {
                          v45 += 5;
                          if (!--v44) {
                            goto LABEL_46;
                          }
                        }
                        uint64_t v66 = *(void *)(v42 + 128) + *v45 + 32 * v41;
                        sub_1B6855E74((__int16 *)v66, (uint64_t)v129, v112);
                        if (v128 == 1)
                        {
                          uint64_t v67 = (unsigned __int8 *)v66;
                          uint64_t v68 = *(void *)(v66 + 8);
                          uint64_t v69 = *(void *)(v66 + 16);
                          int v70 = v67[24];
                          int v71 = v67[25];
                          int v72 = v67[26];
                          unint64_t v109 = *(unsigned __int16 *)v67;
                          if (v71) {
                            int v73 = 256;
                          }
                          else {
                            int v73 = 0;
                          }
                          int v74 = v73 | v70;
                          if (v72) {
                            int v75 = 0x10000;
                          }
                          else {
                            int v75 = 0;
                          }
                          int v108 = v74 | v75;
                          uint64_t v110 = v68;
                          swift_bridgeObjectRetain();
                          uint64_t v107 = v69;
                          swift_bridgeObjectRetain();
                          swift_release();
                          char v46 = 1;
                        }
                        else
                        {
                          swift_release();
                          unint64_t v109 = 0;
                          uint64_t v110 = 0;
                          uint64_t v107 = 0;
                          int v108 = 0;
                          char v46 = 1;
                        }
                      }
                      else
                      {
LABEL_46:
                        swift_release();
                        char v46 = 0;
                        unint64_t v109 = 0;
                        uint64_t v110 = 0;
                        uint64_t v107 = 0;
                        int v108 = 0;
                      }
                    }
                    swift_unownedRetainStrong();
                    uint64_t v106 = v37;
                    swift_release();
                    if (v46)
                    {
                      if (swift_unknownObjectUnownedLoadStrong()) {
                        swift_unknownObjectRelease();
                      }
                      char v47 = v111;
                      if (v128 != 1)
                      {
                        sub_1B677C3D4(v109, v110);
LABEL_78:
                        sub_1B636C450((uint64_t)&v126);
                        if (v47) {
                          sub_1B6A667F0(1);
                        }
                        swift_weakDestroy();
                        swift_unownedRelease();
                        uint64_t v22 = v122;
                        goto LABEL_29;
                      }
                      uint64_t v48 = v110;
                      if (!v110) {
                        goto LABEL_78;
                      }
                      unint64_t v105 = v109 >> 8;
                      uint64_t v49 = v106;
                      swift_unownedRetainStrong();
                      *(void *)&long long v130 = __PAIR64__(v26, v27);
                      *((void *)&v130 + 1) = v49;
                      sub_1B68795FC(0, &qword_1E9DD1648);
                      uint64_t v134 = v50;
                      uint64_t v135 = &off_1F0F68360;
                      uint64_t v51 = swift_allocObject();
                      uint64_t v131 = v51;
                      *(unsigned char *)(v51 + 16) = v109;
                      *(unsigned char *)(v51 + 17) = v105;
                      uint64_t v52 = v107;
                      *(void *)(v51 + 24) = v48;
                      *(void *)(v51 + 32) = v52;
                      int v53 = v108;
                      *(unsigned char *)(v51 + 40) = v108 & 1;
                      *(unsigned char *)(v51 + 41) = BYTE1(v53) & 1;
                      *(unsigned char *)(v51 + 42) = BYTE2(v53);
                      *(unsigned char *)(v51 + 43) = 0;
                      char v136 = 12;
                      uint64_t v54 = *(void *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
                      uint64_t v110 = v48;
                      if (v54
                        && (uint64_t v55 = v52, (*(unsigned char *)(v54 + 81) & 1) != 0)
                        && (unint64_t v56 = *(void *)(v54 + 24)) != 0
                        && (uint64_t Strong = swift_weakLoadStrong()) != 0)
                      {
                        uint64_t v58 = v109;
                        v103[9] = Strong;
                        unint64_t v105 = v56;
                        uint64_t v59 = v110;
                        uint64_t v107 = v55;
                        sub_1B62B2DF0(v109, v110);
                        sub_1B62B2DF0(v58, v59);
                        swift_retain();
                        swift_unknownObjectRetain();
                        swift_release();
                        sub_1B6873570((uint64_t)&v130, (uint64_t)&v123);
                        uint64_t v60 = *(void **)(v54 + 16);
                        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                        *(void *)(v54 + 16) = v60;
                        uint64_t v104 = v54;
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                        {
                          uint64_t v60 = sub_1B68C0B2C(0, v60[2] + 1, 1, v60);
                          *(void *)(v54 + 16) = v60;
                        }
                        unint64_t v63 = v60[2];
                        unint64_t v62 = v60[3];
                        if (v63 >= v62 >> 1)
                        {
                          uint64_t v60 = sub_1B68C0B2C(v62 > 1, v63 + 1, 1, v60);
                          *(void *)(v104 + 16) = v60;
                        }
                        void v60[2] = v63 + 1;
                        sub_1B68735CC((uint64_t)&v123, (uint64_t)&v60[8 * v63 + 4]);
                        swift_release();
                        swift_unknownObjectRelease();
                        swift_release();
                      }
                      else
                      {
                        swift_bridgeObjectRetain_n();
                        swift_bridgeObjectRetain_n();
                        swift_release();
                      }
                      sub_1B67421B0((uint64_t)&v130);
                      unint64_t v76 = v109;
                      uint64_t v77 = v110;
                      sub_1B677C3D4(v109, v110);
                      uint64_t v64 = v76;
                      uint64_t v65 = v77;
                    }
                    else
                    {
                      uint64_t v64 = v109;
                      uint64_t v65 = v110;
                    }
                    sub_1B677C3D4(v64, v65);
                    char v47 = v111;
                    goto LABEL_78;
                  }
                }
                else
                {
                  swift_release();
                }
                uint64_t v22 = v122;
                uint64_t v24 = v114;
              }
              else
              {
                swift_release();
              }
LABEL_29:
              if (++v23 == v22)
              {
                swift_bridgeObjectRelease();
                uint64_t v5 = v117;
                uint64_t v8 = v116;
                uint64_t v9 = (void *)&unk_1EB97E000;
                goto LABEL_95;
              }
            }
          }
          swift_bridgeObjectRelease();
LABEL_95:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v137);
LABEL_96:
          swift_release_n();
          goto LABEL_6;
        }
      }
      else
      {
        swift_retain();
      }
      uint64_t v78 = (void *)(a1 + v9[142]);
      uint64_t v79 = v78[1];
      swift_retain();
      if (v79 > v10)
      {
        uint64_t v80 = DWORD1(v122);
        if (DWORD1(v122) == -1 || *(_DWORD *)(*v78 + 12 * v10 + 8) == DWORD1(v122))
        {
          uint64_t v82 = *(void *)(*(void *)(*(void *)(a1 + 80)
                                      + 8 * *(__int16 *)(*v78 + 12 * v10 + 6)
                                      + 32)
                          + 16);
          uint64_t v83 = *(void *)(v82 + 128);
          if (*(void *)(v83 + 16))
          {
            unint64_t v84 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig);
            if (v85)
            {
              unint64_t v86 = *(ValueMetadata **)(*(void *)(v82 + 24) + 16 * *(void *)(*(void *)(v83 + 56) + 8 * v84) + 32);
              swift_release();
              if (v86 == &type metadata for GraphScriptingConfig)
              {
                uint64_t v116 = v8;
                uint64_t v117 = v5;
                swift_retain();
                swift_unownedRetain();
                swift_release();
                uint64_t v87 = swift_allocObject();
                swift_weakInit();
                uint64_t v88 = swift_allocObject();
                *(void *)(v88 + 16) = v87;
                *(void *)(v88 + 24) = v122;
                uint64_t v89 = *(void *)(a1 + v120);
                if (v89)
                {
                  int v90 = *(unsigned __int8 *)(v89 + 80);
                  MEMORY[0x1BA9B8670](v89 + 48);
                  uint64_t v89 = *(void *)(v89 + 56);
                }
                else
                {
                  int v90 = 0;
                }
                uint64_t v131 = 0;
                swift_unknownObjectUnownedInit();
                *(void *)&long long v130 = a1;
                uint64_t v131 = v89;
                swift_unknownObjectUnownedAssign();
                swift_retain();
                swift_unownedRetain();
                swift_unknownObjectRelease();
                LODWORD(v114) = v90;
                LOBYTE(v132) = v90;
                sub_1B636C4E0((uint64_t)&v130, (uint64_t)&v137);
                uint64_t v124 = 0;
                unint64_t v123 = 0;
                *(_DWORD *)((char *)v125 + 7) = 0;
                v125[0] = 0;
                LOBYTE(v126) = 0;
                uint64_t v91 = swift_unownedRetainStrong();
                MEMORY[0x1F4188790](v91, v92);
                v103[2] = sub_1B6873528;
                v103[3] = v88;
                v103[4] = &v126;
                v103[5] = &v137;
                v103[6] = &v123;
                uint64_t v93 = v10 | (v80 << 32);
                uint64_t v94 = v121;
                sub_1B66C7734(v93, (uint64_t)sub_1B6873530, (uint64_t)v103);
                uint64_t v121 = v94;
                swift_release();
                uint64_t v95 = v137;
                swift_unownedRetainStrong();
                swift_release();
                if (v126 == 1)
                {
                  if (swift_unknownObjectUnownedLoadStrong()) {
                    swift_unknownObjectRelease();
                  }
                  if (v139 == 1)
                  {
                    uint64_t v96 = v124;
                    if (v124)
                    {
                      LODWORD(v112) = BYTE2(v125[1]);
                      __int16 v97 = v125[1];
                      LODWORD(v113) = LOWORD(v125[1]) | (BYTE2(v125[1]) << 16);
                      uint64_t v98 = v125[0];
                      uint64_t v99 = v123;
                      unint64_t v111 = v123 >> 8;
                      swift_unownedRetainStrong();
                      *(void *)&long long v130 = v122;
                      *((void *)&v130 + 1) = v95;
                      sub_1B68795FC(0, &qword_1E9DD1648);
                      uint64_t v134 = v100;
                      uint64_t v135 = &off_1F0F68360;
                      uint64_t v101 = swift_allocObject();
                      uint64_t v131 = v101;
                      *(unsigned char *)(v101 + 16) = v99;
                      *(unsigned char *)(v101 + 17) = v111;
                      *(void *)(v101 + 24) = v96;
                      *(void *)(v101 + 32) = v98;
                      *(unsigned char *)(v101 + 40) = v97 & 1;
                      *(unsigned char *)(v101 + 41) = HIBYTE(v97) & 1;
                      *(unsigned char *)(v101 + 42) = v112 & 1;
                      *(unsigned char *)(v101 + 43) = 0;
                      char v136 = 12;
                      swift_bridgeObjectRetain_n();
                      swift_bridgeObjectRetain_n();
                      sub_1B6A62610((uint64_t)&v130);
                      swift_release();
                      sub_1B67421B0((uint64_t)&v130);
                      sub_1B677C3D4(v99, v96);
                    }
                  }
                }
                sub_1B677C3D4(v123, v124);
                sub_1B636C450((uint64_t)&v137);
                if (v114) {
                  sub_1B6A667F0(1);
                }
                swift_release();
                swift_release();
                swift_unownedRelease();
                swift_release_n();
                uint64_t v5 = v117;
                uint64_t v8 = v116;
                uint64_t v9 = (void *)&unk_1EB97E000;
                goto LABEL_6;
              }
            }
          }
          goto LABEL_96;
        }
      }
LABEL_5:
      swift_release_n();
      swift_release();
LABEL_6:
      if (++v7 == v6) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_retain();
LABEL_4:
    swift_retain();
    swift_retain();
    goto LABEL_5;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68734B8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B68734F0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6873528(__int16 *a1)
{
  return sub_1B6856410(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B6873530(unsigned __int16 *a1)
{
  return sub_1B685DEB0(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(unsigned char **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1B6873554()
{
  return sub_1B68748FC(MEMORY[0x1E4FBC898], 44);
}

uint64_t sub_1B6873570(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B68735CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B6873628(uint64_t a1)
{
}

uint64_t sub_1B6873658(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B63BCE6C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B68736C8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B68736D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1B6873738(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1B68737A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B6873810()
{
  if (!qword_1E9DD3A80)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD3A80);
    }
  }
}

unint64_t sub_1B687387C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1B685D380(a1, a2 | ((HIDWORD(a2) & 1) << 32), a3, *(void *)(v3 + 16));
}

void sub_1B6873898()
{
  if (!qword_1EB97F380)
  {
    type metadata accessor for GraphScriptingConfig.ScriptInfo();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB97F380);
    }
  }
}

uint64_t sub_1B6873900(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B6873910(uint64_t a1, uint64_t a2, char a3, unsigned char *a4, unint64_t a5, uint64_t a6)
{
  sub_1B63B2040(0);
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *(_DWORD *)(a1 + 28);
  uint64_t v17 = *(int *)(a1 + 24);
  BOOL v18 = v17 == -1 && v16 == 0;
  uint64_t v56 = a2;
  uint64_t v55 = a4;
  if (!v18)
  {
    uint64_t v19 = 0;
    unsigned int v20 = 0;
    if ((v17 & 0x80000000) != 0 || *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v17)
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      goto LABEL_12;
    }
    uint64_t v21 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v16 == -1 || *(_DWORD *)(v21 + 12 * (int)v17 + 8) == v16)
    {
      uint64_t v24 = (unsigned int *)(v21 + 12 * (int)v17);
      sub_1B6963C10(*(void *)(*(void *)(a2 + 136) + 8 * (int)*v24 + 32), *v24 | ((unint64_t)*((unsigned __int16 *)v24 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v24+ 2) << 32), 32, a2, (uint64_t)v65);
      uint64_t v23 = v65[0];
      uint64_t v22 = v65[1];
      uint64_t v19 = v65[2];
      unsigned int v20 = v66 | (v67 << 16);
      goto LABEL_12;
    }
  }
  unsigned int v20 = 0;
  uint64_t v19 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
LABEL_12:
  unsigned __int16 v60 = v23;
  uint64_t v61 = v22;
  uint64_t v62 = v19;
  __int16 v63 = v20 & 0x101;
  char v64 = BYTE2(v20) & 1;
  if ((a3 & 1) != 0 || (v20 & 0x10000) != 0)
  {
    uint64_t v54 = a6;
    unsigned int v26 = *(void **)(a1 + 24);
    if (*(void *)(v19 + 16))
    {
      char v59 = 0;
      uint64_t v58 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v27 = v56;
      sub_1B695E154(a5, v57);
      sub_1B62D7710((uint64_t)v57, (uint64_t)v65, &qword_1EB97FC08, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences);
      swift_retain();
      sub_1B68747C8((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void))sub_1B6874738);
      uint64_t v28 = swift_bridgeObjectRetain();
      sub_1B686EBCC(v28, (uint64_t)&v60, &v59, v26, v27, a5, (uint64_t)v65, v54, &v58);
      sub_1B68747C8((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void))sub_1B687480C);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B68747C8((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void))sub_1B687480C);
      BOOL v29 = v58;
      uint64_t v30 = *((void *)v58 + 2);
      if (v30)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v31 = v29 + 36;
        do
        {
          uint64_t v33 = *((unsigned int *)v31 - 1);
          uint64_t v34 = v62;
          LOBYTE(v57[0]) = *v31;
          unint64_t v35 = sub_1B69FAA7C(v33 | ((unint64_t)LOBYTE(v57[0]) << 32));
          if (v36)
          {
            unint64_t v37 = v35;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v57[0] = v34;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1B6AD135C();
              uint64_t v34 = *(void *)&v57[0];
            }
            uint64_t v39 = *(void *)(v34 + 56);
            uint64_t v40 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
            uint64_t v41 = *(void *)(v40 - 8);
            sub_1B68737A8(v39 + *(void *)(v41 + 72) * v37, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GraphScriptingConfig.ScriptInfo);
            sub_1B6AC9C7C(v37, v34);
            uint64_t v62 = v34;
            swift_bridgeObjectRelease();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v15, 0, 1, v40);
          }
          else
          {
            uint64_t v32 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 1, 1, v32);
          }
          sub_1B62BFF14((uint64_t)v15, (uint64_t (*)(void))sub_1B63B2040);
          v31 += 8;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
      char v42 = *v55 | v59;
      *uint64_t v55 = v42 & 1;
      if (v42)
      {
        sub_1B685895C();
        sub_1B6858C08();
      }
      uint64_t v43 = v61;
      uint64_t v44 = v62;
      uint64_t v45 = *(void *)(a1 + 24);
      if (HIBYTE(v63)) {
        int v46 = 256;
      }
      else {
        int v46 = 0;
      }
      int v47 = v46 | v63;
      if (v64) {
        int v48 = 0x10000;
      }
      else {
        int v48 = 0;
      }
      int v49 = v47 | v48;
      unsigned int v50 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B68504C0(v50, v43, v44, v49, v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v51 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B68504C0(v50, v43, v44, v47, v51);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      int v52 = v20 & 1 | (((v20 >> 8) & 1) << 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B68504C0(v23, v22, v19, v52, (uint64_t)v26);
      swift_bridgeObjectRelease_n();
    }
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    return sub_1B677C3D4(v23, v22);
  }
}

uint64_t sub_1B6873ED0(unint64_t a1, uint64_t a2, uint64_t a3, char a4, unsigned char *a5, unint64_t a6, uint64_t a7)
{
  unint64_t v14 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    BOOL v15 = sub_1B62EC0CC((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76688, a1);
    swift_retain();
    swift_release();
    if (v15)
    {
      uint64_t v23 = &type metadata for VFXEmitter;
      uint64_t v24 = &off_1F0F53E58;
      *(void *)&long long v22 = __PAIR64__(v14, a1);
      *((void *)&v22 + 1) = a2;
      sub_1B62C15C4(&v22, (uint64_t)v25);
      int v16 = sub_1B62C14BC(v25, v25[3]);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      swift_retain();
      sub_1B6CCF0C0((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, 5, v17, v18, a3, a4 & 1, a5, a6, a7);
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v25);
      return swift_release();
    }
  }
  swift_retain();
  BOOL v19 = sub_1B62EC0CC((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80890, a1);
  swift_release();
  if (v19)
  {
    type metadata accessor for VFXAttribute();
    swift_retain();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a2;
    swift_unownedRetain();
    swift_release();
    *(_DWORD *)(inited + 24) = a1;
    *(_DWORD *)(inited + 28) = v14;
    *(void *)(inited + 32) = &type metadata for GraphScriptingConfig;
    *(void *)(inited + 40) = &off_1F0F80890;
    sub_1B6873910(inited, a3, a4 & 1, a5, a6, a7);
    swift_release();
    return swift_release();
  }

  return swift_release();
}

uint64_t sub_1B68740E0(uint64_t a1, char a2, char a3)
{
  uint64_t v5 = sub_1B68709E8(a1, a2);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    int v28 = 0;
    goto LABEL_40;
  }
  uint64_t v7 = 0;
  char v8 = 0;
  long long v57 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v9 = v5 + 32;
  char v55 = a3 & 1;
  do
  {
    while (1)
    {
      uint64_t v10 = (int *)(v9 + 8 * v7);
      uint64_t v11 = v10[1];
      uint64_t v12 = *v10;
      LOBYTE(v60[0]) = 0;
      BOOL v13 = v12 == -1 && v11 == 0;
      if (v13)
      {
        sub_1B62E364C((uint64_t)&type metadata for GraphScriptGroup, (uint64_t)&off_1F0F6C620, 0xFFFFFFFFLL);
LABEL_32:
        LODWORD(v19) = 0;
        goto LABEL_33;
      }
      if ((v12 & 0x80000000) != 0
        || v57[1] <= v12
        || (v11 != -1 ? (BOOL v14 = *(_DWORD *)(*v57 + 12 * (int)v12 + 8) == v11) : (BOOL v14 = 1),
            !v14
         || (uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(*v57 + 12 * (int)v12 + 6) + 32)
                             + 16),
             uint64_t v16 = *(void *)(v15 + 128),
             !*(void *)(v16 + 16))
         || (unint64_t v17 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptGroup), (v18 & 1) == 0)
         || *(ValueMetadata **)(*(void *)(v15 + 24) + 16 * *(void *)(*(void *)(v16 + 56) + 8 * v17) + 32) != &type metadata for GraphScriptGroup))
      {
        sub_1B62E364C((uint64_t)&type metadata for GraphScriptGroup, (uint64_t)&off_1F0F6C620, v12 | ((unint64_t)v11 << 32));
      }
      LODWORD(v19) = 0;
      if ((v12 & 0x80000000) == 0 && v57[1] > v12) {
        break;
      }
LABEL_33:
      ++v7;
      if ((v8 & 1) == 0) {
        goto LABEL_3;
      }
LABEL_34:
      char v8 = 1;
      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        int v28 = 1;
        goto LABEL_40;
      }
    }
    uint64_t v20 = *v57 + 12 * (int)v12;
    if (v11 != -1 && *(_DWORD *)(v20 + 8) != v11) {
      goto LABEL_32;
    }
    uint64_t v22 = *(void *)(*(void *)(a1 + 136) + 8 * *(int *)(*v57 + 12 * (int)v12) + 32);
    uint64_t v23 = *(void *)(v22 + 48);
    uint64_t v19 = *(void *)(v23 + 16);
    if (!v19) {
      goto LABEL_33;
    }
    uint64_t v24 = *(__int16 *)(v20 + 4);
    uint64_t v25 = (void *)(v23 + 56);
    while ((ValueMetadata *)*(v25 - 3) != &type metadata for GraphScriptGroup)
    {
      v25 += 5;
      if (!--v19) {
        goto LABEL_33;
      }
    }
    uint64_t v26 = *(void *)(v22 + 128) + *v25 + 32 * v24;
    swift_retain();
    sub_1B6873ED0(v12 | (unint64_t)(v11 << 32), a1, a1, v55, v60, v12 | (unint64_t)(v11 << 32), v26);
    swift_release();
    LODWORD(v19) = LOBYTE(v60[0]);
    ++v7;
    if (v8) {
      goto LABEL_34;
    }
LABEL_3:
    char v8 = v19;
  }
  while (v7 != v6);
  int v27 = v19;
  swift_bridgeObjectRelease();
  int v28 = v27;
LABEL_40:
  int v49 = v28;
  if (qword_1EB97F2D8 != -1) {
    swift_once();
  }
  v70[0] = xmmword_1EB997D38;
  v70[1] = *(_OWORD *)&qword_1EB997D48;
  uint64_t v71 = qword_1EB997D58;
  sub_1B62C9DA8(a1, (uint64_t)v70, 0x200000000, v59);
  uint64_t result = sub_1B62D7710((uint64_t)v59, (uint64_t)v60, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v60[0])
  {
    if (v66 > 0 && (uint64_t v54 = v63) != 0)
    {
      uint64_t v30 = v65;
      uint64_t v58 = v65[4];
      int v31 = *(unsigned __int8 *)(v64 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v67[0] = v60[0];
      v67[1] = v60[1];
      uint64_t v68 = v61;
      uint64_t v51 = (uint64_t)(v65 + 6);
      uint64_t v52 = v62;
      unsigned int v50 = v65 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v32 = 0;
      int v53 = v31;
      do
      {
        uint64_t v33 = (unsigned int *)(v52 + 48 * v32);
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        char v36 = (uint64_t *)*((void *)v33 + 2);
        uint64_t v56 = *((void *)v33 + 3);
        uint64_t v38 = *((void *)v33 + 4);
        uint64_t v37 = *((void *)v33 + 5);
        if (v31)
        {
          uint64_t v39 = *(os_unfair_lock_s **)(v37 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v39);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v37 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v58);
        sub_1B62D7710(v51, (uint64_t)v69, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v40 = v30[4];
        uint64_t v41 = *(void *)(*(void *)(*(void *)(*(void *)(v37 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v30[6] = ecs_stack_allocator_allocate(v40, 48 * v41, 8);
        v30[7] = v41;
        v50[1] = 0;
        v50[2] = 0;
        *unsigned int v50 = 0;
        swift_release();
        uint64_t v42 = sub_1B62C9024((uint64_t)&type metadata for GraphEntityComponentPropertyReferences, (uint64_t)&off_1F0F9DA30, v36, v56, v38, (uint64_t)v30);
        if (v36)
        {
          int v31 = v53;
          if (v38)
          {
            uint64_t v43 = 0;
            do
            {
              uint64_t v44 = (unsigned char *)(v42 + 56 + (v43 << 6));
              uint64_t v45 = v43;
              while (*v44 != 1)
              {
                ++v45;
                v44 += 64;
                if (v38 == v45) {
                  goto LABEL_60;
                }
              }
              unsigned char *v44 = 0;
              uint64_t v43 = v45 + 1;
              LOBYTE(v49) = 1;
            }
            while (v38 - 1 != v45);
          }
        }
        else
        {
          int v31 = v53;
          if (v35 != v34)
          {
            do
            {
              int v46 = (unsigned char *)(v42 + 56 + (v35 << 6));
              while (1)
              {
                uint64_t v47 = v35 + 1;
                if (*v46 == 1) {
                  break;
                }
                v46 += 64;
                ++v35;
                if (v34 == v47) {
                  goto LABEL_60;
                }
              }
              unsigned char *v46 = 0;
              LOBYTE(v49) = 1;
              BOOL v13 = v34 - 1 == v35++;
            }
            while (!v13);
          }
        }
LABEL_60:
        sub_1B6345178(v30, (unsigned __int16 **)v67, (uint64_t)v69);
        sub_1B634507C((char *)v37);
        ecs_stack_allocator_pop_snapshot(v58);
        if (v31)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 376));
        }
        swift_release();
        ++v32;
      }
      while (v32 != v54);
      sub_1B632F170(v59);
      uint64_t result = (uint64_t)sub_1B632F170(v59);
      if (v49)
      {
LABEL_74:
        swift_retain();
        uint64_t v48 = sub_1B6852144((void (*)(void))type metadata accessor for GraphScriptRunner);
        uint64_t result = swift_release();
        if (v48)
        {
          *(unsigned char *)(v48 + 16) = 1;
          return swift_release();
        }
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_1B632F170(v59);
      if (v49) {
        goto LABEL_74;
      }
    }
  }
  else if (v49)
  {
    goto LABEL_74;
  }
  return result;
}

uint64_t sub_1B6874738(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B68747C8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B687480C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6874898(uint64_t a1)
{
  return sub_1B6860C04(a1, *(__int16 **)(v1 + 16));
}

uint64_t sub_1B68748B4()
{
  return sub_1B66547A0(68);
}

uint64_t sub_1B68748BC()
{
  return sub_1B6654748(33);
}

uint64_t sub_1B68748C4()
{
  return sub_1B68748FC(MEMORY[0x1E4FBC8D0], 60);
}

uint64_t sub_1B68748E0()
{
  return sub_1B68748FC(MEMORY[0x1E4FBC8D0], 61);
}

uint64_t sub_1B68748FC(void (*a1)(void), uint64_t a2)
{
  swift_bridgeObjectRelease();
  a1(*(void *)(v2 + 32));

  return MEMORY[0x1F4186498](v2, a2, 7);
}

uint64_t sub_1B6874958()
{
  return sub_1B6654748(36);
}

uint64_t sub_1B6874960()
{
  return sub_1B66547A0(69);
}

uint64_t sub_1B6874968(uint64_t a1, uint64_t a2)
{
  return sub_1B6366C08(a1, a2, type metadata accessor for ParticleInitScript);
}

void *sub_1B6874980(uint64_t a1)
{
  return sub_1B6C12ED8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

double sub_1B68749A0(void *a1)
{
  uint64_t v2 = *(double **)(v1 + 16);
  double result = *v2;
  *a1 = *(void *)v2;
  return result;
}

uint64_t sub_1B68749B0(uint64_t a1, uint64_t a2)
{
  return sub_1B6366C08(a1, a2, type metadata accessor for ParticleUpdateScript);
}

uint64_t sub_1B68749C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
  return sub_1B6874AC0(v3, a1, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8);
}

uint64_t sub_1B6874A50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_1B62D2230(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B6874AC0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  sub_1B62D2230(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B6874B44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6874BA0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
  return sub_1B6874AC0(v3, a1, &qword_1EB97E710, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100);
}

uint64_t sub_1B6874C28(void *a1)
{
  return sub_1B6861100(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1B6874C44(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
  return sub_1B6874AC0(v3, a1, &qword_1EB97E700, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10);
}

uint64_t sub_1B6874CCC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10);
  return sub_1B6874AC0(v3, a1, (unint64_t *)&qword_1EB97E730, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10);
}

uint64_t sub_1B6874D54(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8);
  return sub_1B6874AC0(v3, a1, (unint64_t *)&qword_1EB981060, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8);
}

uint64_t sub_1B6874DDC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
  return sub_1B6874AC0(v3, a1, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058);
}

uint64_t sub_1B6874E64(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
  return sub_1B6874AC0(v3, a1, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
}

uint64_t sub_1B6874EEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6874A50(a1, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
  return sub_1B6874AC0(v3, a1, (unint64_t *)&unk_1EB97E750, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298);
}

uint64_t sub_1B6874F74(uint64_t a1, char a2, char a3)
{
  if (qword_1EB97D700 != -1) {
    swift_once();
  }
  v53[0] = xmmword_1EB997D10;
  v53[1] = unk_1EB997D20;
  uint64_t v54 = qword_1EB997D30;
  sub_1B62C9DA8(a1, (uint64_t)v53, 0x200000000, v42);
  sub_1B62D7710((uint64_t)v42, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v43[0])
  {
    if (v49 >= 1)
    {
      uint64_t v36 = v46;
      if (v46)
      {
        char v30 = a3;
        uint64_t v31 = a1;
        uint64_t v6 = v48[4];
        int v7 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v50[0] = v43[0];
        v50[1] = v43[1];
        uint64_t v51 = v44;
        uint64_t v34 = (uint64_t)(v48 + 6);
        uint64_t v35 = v45;
        uint64_t v41 = v48;
        uint64_t v33 = v48 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        int v32 = v7;
        while (1)
        {
          uint64_t v10 = (unsigned int *)(v35 + 48 * v8);
          uint64_t v37 = *v10;
          uint64_t v38 = v10[1];
          uint64_t v39 = v9;
          uint64_t v11 = (uint64_t *)*((void *)v10 + 2);
          uint64_t v40 = *((void *)v10 + 3);
          uint64_t v13 = *((void *)v10 + 4);
          uint64_t v12 = *((void *)v10 + 5);
          if (v7)
          {
            BOOL v14 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          sub_1B62D7710(v34, (uint64_t)v52, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v15 = v41[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v41[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v41[7] = v16;
          v33[1] = 0;
          v33[2] = 0;
          *uint64_t v33 = 0;
          swift_release();
          uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for Bindings, (uint64_t)&off_1F0FA3490, v11, v40, v13, (uint64_t)v41);
          if (v11)
          {
            if (!v13) {
              goto LABEL_16;
            }
            uint64_t v9 = v39;
            if (v13 == 1)
            {
              unint64_t v18 = 0;
              int v7 = v32;
            }
            else
            {
              unint64_t v18 = v13 & 0xFFFFFFFFFFFFFFFELL;
              uint64_t v19 = (unsigned char *)(v17 + 32);
              unint64_t v20 = v13 & 0xFFFFFFFFFFFFFFFELL;
              int v7 = v32;
              do
              {
                *(v19 - 24) = 1;
                *uint64_t v19 = 1;
                v19 += 48;
                v20 -= 2;
              }
              while (v20);
              if (v13 == v18) {
                goto LABEL_30;
              }
            }
            unint64_t v21 = v13 - v18;
            uint64_t v22 = (unsigned char *)(v17 + 24 * v18 + 8);
            do
            {
              *uint64_t v22 = 1;
              v22 += 24;
              --v21;
            }
            while (v21);
          }
          else
          {
            if (v37 == v38)
            {
LABEL_16:
              int v7 = v32;
              uint64_t v9 = v39;
              goto LABEL_30;
            }
            uint64_t v23 = v38 - v37;
            uint64_t v9 = v39;
            if ((unint64_t)(v38 - v37) >= 2)
            {
              uint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFFELL) + v37;
              uint64_t v25 = (unsigned char *)(v17 + 24 * v37 + 32);
              unint64_t v26 = v23 & 0xFFFFFFFFFFFFFFFELL;
              int v7 = v32;
              do
              {
                *(v25 - 24) = 1;
                *uint64_t v25 = 1;
                v25 += 48;
                v26 -= 2;
              }
              while (v26);
              if (v23 == (v23 & 0xFFFFFFFFFFFFFFFELL)) {
                goto LABEL_30;
              }
            }
            else
            {
              uint64_t v24 = v37;
              int v7 = v32;
            }
            int v27 = (unsigned char *)(v17 + 24 * v24 + 8);
            uint64_t v28 = v38 - v24;
            do
            {
              *int v27 = 1;
              v27 += 24;
              --v28;
            }
            while (v28);
          }
LABEL_30:
          sub_1B6345178(v41, (unsigned __int16 **)v50, (uint64_t)v52);
          sub_1B634507C((char *)v12);
          ecs_stack_allocator_pop_snapshot(v6);
          if (v7)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          if (++v8 == v36)
          {
            sub_1B632F170(v42);
            a1 = v31;
            a3 = v30;
            break;
          }
        }
      }
    }
    sub_1B632F170(v42);
  }
  return sub_1B68740E0(a1, a2 & 1, a3 & 1);
}

uint64_t sub_1B6875368(void *a1)
{
  return sub_1B6786E80(a1);
}

__n128 sub_1B6875380(__n128 *a1)
{
  uint64_t v2 = *(__n128 **)(v1 + 16);
  __n128 result = *v2;
  *a1 = *v2;
  return result;
}

uint64_t sub_1B6875390(void *a1)
{
  return sub_1B68790BC(a1);
}

double sub_1B68753A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  double result = *(double *)(v2 + 16);
  *(double *)(a1 + 16) = result;
  return result;
}

float sub_1B68753C0(_DWORD *a1)
{
  uint64_t v2 = *(float **)(v1 + 16);
  float result = *v2;
  *a1 = *(_DWORD *)v2;
  return result;
}

double sub_1B68753D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  char v3 = *(unsigned char *)(v2 + 4);
  char v4 = *(unsigned char *)(v2 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v2;
  *(unsigned char *)(a1 + 4) = v3;
  double result = *(double *)(v2 + 8);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

double sub_1B68753F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  char v3 = *(unsigned char *)(v2 + 32);
  char v4 = *(unsigned char *)(v2 + 33);
  double result = *(double *)(v2 + 40);
  long long v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 33) = v4;
  *(double *)(a1 + 40) = result;
  return result;
}

uint64_t sub_1B6875420(void *a1)
{
  return sub_1B6861200(a1, *(uint64_t **)(v1 + 16));
}

uint64_t *sub_1B687543C(uint64_t a1)
{
  uint64_t v366 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v307 = qword_1EB997A18;
  int v308 = 0;
  char v309 = 2;
  uint64_t v310 = 0;
  char v311 = 2;
  uint64_t v312 = 0;
  swift_retain();
  sub_1B6A6E6E8(3, (uint64_t)v265);
  swift_release();
  v287[0] = v265[0];
  v287[1] = v265[1];
  uint64_t v288 = v266;
  sub_1B62C9DA8(a1, (uint64_t)v287, 0x200000000, v330);
  sub_1B62D7710((uint64_t)v330, (uint64_t)v355, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v355[0])
  {
    if (v361 >= 1)
    {
      uint64_t v244 = v358;
      if (v358)
      {
        uint64_t v2 = v360;
        uint64_t v259 = v360[4];
        int v3 = *(unsigned __int8 *)(v359 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v273[0] = v355[0];
        v273[1] = v355[1];
        uint64_t v274 = v356;
        uint64_t v237 = (uint64_t)(v360 + 6);
        uint64_t v240 = v357;
        v233 = v360 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v4 = 0;
        int v229 = v3;
        while (1)
        {
          uint64_t v5 = (unsigned int *)(v240 + 48 * v4);
          long long v6 = (uint64_t *)*((void *)v5 + 2);
          uint64_t v8 = *((void *)v5 + 4);
          uint64_t v7 = *((void *)v5 + 5);
          uint64_t v247 = *v5;
          uint64_t v251 = v5[1];
          uint64_t v255 = *((void *)v5 + 3);
          if (v3)
          {
            uint64_t v9 = *(os_unfair_lock_s **)(v7 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v9);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v259);
          sub_1B62D7710(v237, (uint64_t)v365, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v10 = v2[4];
          uint64_t v11 = *(void *)(*(void *)(*(void *)(*(void *)(v7 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v2[6] = ecs_stack_allocator_allocate(v10, 48 * v11, 8);
          v2[7] = v11;
          v233[1] = 0;
          v233[2] = 0;
          void *v233 = 0;
          swift_release();
          uint64_t v12 = sub_1B62C9024((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, v6, v255, v8, (uint64_t)v2);
          if (v6)
          {
            int v3 = v229;
            if (v8)
            {
              if (v8 == 1)
              {
                unint64_t v13 = 0;
              }
              else
              {
                unint64_t v13 = v8 & 0xFFFFFFFFFFFFFFFELL;
                uint64_t v16 = (unsigned char *)(v12 + 58);
                unint64_t v17 = v8 & 0xFFFFFFFFFFFFFFFELL;
                do
                {
                  *(v16 - 32) = 1;
                  unsigned char *v16 = 1;
                  v16 += 64;
                  v17 -= 2;
                }
                while (v17);
                if (v8 == v13) {
                  goto LABEL_29;
                }
              }
              unint64_t v18 = v8 - v13;
              uint64_t v19 = (unsigned char *)(v12 + 32 * v13 + 26);
              do
              {
                *uint64_t v19 = 1;
                v19 += 32;
                --v18;
              }
              while (v18);
            }
          }
          else
          {
            int v3 = v229;
            if (v247 != v251)
            {
              uint64_t v14 = v251 - v247;
              if ((unint64_t)(v251 - v247) >= 2)
              {
                uint64_t v15 = (v14 & 0xFFFFFFFFFFFFFFFELL) + v247;
                unint64_t v20 = (unsigned char *)(v12 + 32 * v247 + 58);
                unint64_t v21 = v14 & 0xFFFFFFFFFFFFFFFELL;
                do
                {
                  *(v20 - 32) = 1;
                  *unint64_t v20 = 1;
                  v20 += 64;
                  v21 -= 2;
                }
                while (v21);
                if (v14 == (v14 & 0xFFFFFFFFFFFFFFFELL)) {
                  goto LABEL_29;
                }
              }
              else
              {
                uint64_t v15 = v247;
              }
              uint64_t v22 = (unsigned char *)(v12 + 32 * v15 + 26);
              uint64_t v23 = v251 - v15;
              do
              {
                *uint64_t v22 = 1;
                v22 += 32;
                --v23;
              }
              while (v23);
            }
          }
LABEL_29:
          sub_1B6345178(v2, (unsigned __int16 **)v273, (uint64_t)v365);
          sub_1B634507C((char *)v7);
          ecs_stack_allocator_pop_snapshot(v259);
          if (v3)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 376));
          }
          swift_release();
          if (++v4 == v244)
          {
            sub_1B632F170(v330);
            break;
          }
        }
      }
    }
    sub_1B632F170(v330);
  }
  uint64_t v301 = qword_1EB997A18;
  int v302 = 0;
  char v303 = 2;
  uint64_t v304 = 0;
  char v305 = 2;
  uint64_t v306 = 0;
  swift_retain();
  sub_1B62A068C(1, (uint64_t)v267);
  swift_release();
  v285[0] = v267[0];
  v285[1] = v267[1];
  uint64_t v286 = v268;
  sub_1B62C9DA8(a1, (uint64_t)v285, 0x200000000, v331);
  sub_1B62D7710((uint64_t)v331, (uint64_t)v348, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v348[0])
  {
    if (v354 < 1) {
      goto LABEL_83;
    }
    uint64_t v241 = v351;
    if (!v351) {
      goto LABEL_83;
    }
    uint64_t v260 = v353[4];
    int v256 = *(unsigned __int8 *)(v352 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v275[0] = v348[0];
    v275[1] = v348[1];
    uint64_t v234 = v350;
    uint64_t v238 = (uint64_t)(v353 + 6);
    uint64_t v276 = v349;
    v252 = v353;
    uint64_t v230 = v353 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = (unsigned int *)(v234 + 48 * v24);
      uint64_t v26 = *v25;
      uint64_t v27 = v25[1];
      uint64_t v28 = (uint64_t *)*((void *)v25 + 2);
      uint64_t v30 = *((void *)v25 + 4);
      uint64_t v29 = *((void *)v25 + 5);
      uint64_t v245 = *((void *)v25 + 3);
      uint64_t v248 = v24;
      if (v256)
      {
        uint64_t v31 = *(os_unfair_lock_s **)(v29 + 376);
        swift_retain();
        os_unfair_lock_lock(v31);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v260);
      sub_1B62D7710(v238, (uint64_t)v364, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v32 = v252[4];
      uint64_t v33 = *(void *)(*(void *)(*(void *)(*(void *)(v29 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v252[6] = ecs_stack_allocator_allocate(v32, 48 * v33, 8);
      v252[7] = v33;
      v230[1] = 0;
      v230[2] = 0;
      *uint64_t v230 = 0;
      swift_release();
      sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v28, v245, v30, (uint64_t)v252);
      if (v28)
      {
        if (!v30) {
          goto LABEL_68;
        }
        while (1)
        {
          while (1)
          {
            uint64_t v35 = *v28++;
            uint64_t v34 = v35;
            uint64_t v36 = swift_retain();
            if (*(unsigned char *)(v29 + 184)) {
              goto LABEL_297;
            }
            uint64_t v37 = *(unsigned int *)(*(void *)(v29 + 168) + 4 * v34);
            uint64_t v38 = *(unsigned int *)(*(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v37 + 8);
            swift_release();
            if (v37 != -1 || v38 != 0) {
              break;
            }
            swift_retain();
LABEL_47:
            swift_release();
            if (!--v30) {
              goto LABEL_68;
            }
          }
          swift_retain();
          if (sub_1B62EC0CC((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76688, v37 | (v38 << 32)))
          {
            *(void *)&long long v336 = &off_1F0F53E58;
            *(void *)&long long v334 = __PAIR64__(v38, v37);
            *((void *)&v335 + 1) = &type metadata for VFXEmitter;
            *((void *)&v334 + 1) = a1;
            sub_1B62C15C4(&v334, (uint64_t)&v340);
            uint64_t v40 = sub_1B62C14BC(&v340, *((uint64_t *)&v341 + 1));
            uint64_t v42 = *v40;
            uint64_t v41 = v40[1];
            swift_retain();
            sub_1B6CCF8F4((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, 5, v42, v41, a1);
            swift_release();
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v340);
            goto LABEL_47;
          }
          uint64_t v43 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
          swift_retain();
          if ((v37 & 0x80000000) == 0 && *(void *)(a1 + v43 + 8) > (int)v37)
          {
            uint64_t v44 = *(void *)(a1 + v43);
            if (v38 == -1 || *(_DWORD *)(v44 + 12 * (int)v37 + 8) == v38)
            {
              sub_1B6345398(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(v44 + 12 * (int)v37 + 6) + 32), (uint64_t)&type metadata for GraphScriptingConfig, &v340);
              swift_release();
              if (v340)
              {
                type metadata accessor for VFXAttribute();
                uint64_t v46 = swift_allocObject();
                *(void *)(v46 + 16) = a1;
                swift_retain();
                swift_unownedRetain();
                swift_release();
                *(_DWORD *)(v46 + 24) = v37;
                *(_DWORD *)(v46 + 28) = v38;
                *(void *)(v46 + 32) = &type metadata for GraphScriptingConfig;
                *(void *)(v46 + 40) = &off_1F0F80890;
                sub_1B6855D84(v46, a1);
                swift_setDeallocating();
                sub_1B6662468();
              }
              goto LABEL_47;
            }
          }
          swift_release_n();
          if (!--v30) {
            goto LABEL_68;
          }
        }
      }
      uint64_t v47 = (void *)&unk_1EB97E000;
      if (v26 != v27) {
        break;
      }
LABEL_68:
      sub_1B6345178(v252, (unsigned __int16 **)v275, (uint64_t)v364);
      sub_1B634507C((char *)v29);
      ecs_stack_allocator_pop_snapshot(v260);
      if (v256)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 376));
      }
      swift_release();
      uint64_t v24 = v248 + 1;
      if (v248 + 1 == v241)
      {
        sub_1B632F170(v331);
LABEL_83:
        sub_1B632F170(v331);
        goto LABEL_84;
      }
    }
    while (1)
    {
      uint64_t v51 = swift_retain();
      if (*(unsigned char *)(v29 + 184))
      {
LABEL_297:
        sub_1B6E32BE8();
        __break(1u);
        JUMPOUT(0x1B68779E8);
      }
      unsigned int v52 = *(_DWORD *)(*(void *)(v29 + 168) + 4 * v26);
      uint64_t v53 = *(unsigned int *)(*(void *)(v51 + v47[142]) + 12 * (int)v52 + 8);
      swift_release();
      if (v52 == -1 && v53 == 0) {
        break;
      }
      uint64_t v55 = v52 | (unint64_t)(v53 << 32);
      swift_retain();
      if (!sub_1B62EC0CC((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76688, v55)) {
        goto LABEL_80;
      }
      *(void *)&long long v336 = &off_1F0F53E58;
      *(void *)&long long v334 = __PAIR64__(v53, v52);
      *((void *)&v335 + 1) = &type metadata for VFXEmitter;
      *((void *)&v334 + 1) = a1;
      sub_1B62C15C4(&v334, (uint64_t)&v340);
      uint64_t v48 = sub_1B62C14BC(&v340, *((uint64_t *)&v341 + 1));
      uint64_t v50 = *v48;
      uint64_t v49 = v48[1];
      swift_retain();
      sub_1B6CCF8F4((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, 5, v50, v49, a1);
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v340);
LABEL_71:
      swift_release();
      uint64_t v47 = &unk_1EB97E000;
      if (v27 == ++v26) {
        goto LABEL_68;
      }
    }
    swift_retain();
    uint64_t v55 = 0xFFFFFFFFLL;
LABEL_80:
    swift_retain();
    BOOL v56 = sub_1B62EC0CC((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80890, v55);
    swift_release();
    if (v56)
    {
      type metadata accessor for VFXAttribute();
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = a1;
      swift_retain();
      swift_unownedRetain();
      swift_release();
      *(_DWORD *)(v57 + 24) = v52;
      *(_DWORD *)(v57 + 28) = v53;
      *(void *)(v57 + 32) = &type metadata for GraphScriptingConfig;
      *(void *)(v57 + 40) = &off_1F0F80890;
      sub_1B6855D84(v57, a1);
      swift_setDeallocating();
      sub_1B6662468();
    }
    goto LABEL_71;
  }
LABEL_84:
  uint64_t v58 = sub_1B68709E8(a1, 0);
  uint64_t v59 = *(void *)(v58 + 16);
  if (v59)
  {
    unsigned __int16 v60 = (uint64_t *)(v58 + 32);
    while (1)
    {
      uint64_t v61 = *v60;
      if (v61 == -1) {
        break;
      }
      uint64_t v261 = *v60;
      uint64_t v62 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
      swift_retain();
      if ((v61 & 0x80000000) != 0) {
        goto LABEL_108;
      }
      if (*(void *)(a1 + v62 + 8) > (int)v61)
      {
        uint64_t v63 = *(void *)(a1 + v62);
        if (HIDWORD(v261) == -1 || *(_DWORD *)(v63 + 12 * (int)v61 + 8) == HIDWORD(v261))
        {
          uint64_t v65 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(v63 + 12 * (int)v61 + 6) + 32) + 16);
          uint64_t v66 = *(void *)(v65 + 128);
          if (*(void *)(v66 + 16))
          {
            unint64_t v67 = sub_1B62C1A30((uint64_t)&type metadata for EmitterDescription);
            if ((v68 & 1) != 0
              && *(ValueMetadata **)(*(void *)(v65 + 24) + 16 * *(void *)(*(void *)(v66 + 56) + 8 * v67) + 32) == &type metadata for EmitterDescription)
            {
              *(void *)&long long v336 = &off_1F0F53E58;
              *(void *)&long long v334 = v261;
              *((void *)&v335 + 1) = &type metadata for VFXEmitter;
              *((void *)&v334 + 1) = a1;
              sub_1B62C15C4(&v334, (uint64_t)&v340);
              uint64_t v78 = sub_1B62C14BC(&v340, *((uint64_t *)&v341 + 1));
              uint64_t v80 = *v78;
              uint64_t v79 = v78[1];
              swift_retain();
              sub_1B6CCF8F4((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, 5, v80, v79, a1);
              swift_release();
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v340);
LABEL_113:
              swift_release();
              goto LABEL_110;
            }
          }
        }
      }
      uint64_t v69 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v70 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
      swift_retain();
      if (v70 > v61 && (HIDWORD(v261) == -1 || *(_DWORD *)(*v69 + 12 * v61 + 8) == HIDWORD(v261)))
      {
        uint64_t v72 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8 * *(__int16 *)(*v69 + 12 * v61 + 6) + 32)
                        + 16);
        uint64_t v73 = *(void *)(v72 + 128);
        if (*(void *)(v73 + 16))
        {
          unint64_t v74 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptingConfig);
          if (v75)
          {
            unint64_t v76 = *(ValueMetadata **)(*(void *)(v72 + 24) + 16 * *(void *)(*(void *)(v73 + 56) + 8 * v74) + 32);
            swift_release();
            if (v76 == &type metadata for GraphScriptingConfig)
            {
              type metadata accessor for VFXAttribute();
              uint64_t v77 = (void *)swift_allocObject();
              v77[2] = a1;
              swift_retain();
              swift_unownedRetain();
              swift_release();
              v77[3] = v261;
              v77[4] = &type metadata for GraphScriptingConfig;
              v77[5] = &off_1F0F80890;
              sub_1B6855D84((uint64_t)v77, a1);
              swift_setDeallocating();
              sub_1B6662468();
            }
            goto LABEL_113;
          }
        }
      }
LABEL_109:
      swift_release_n();
LABEL_110:
      ++v60;
      if (!--v59) {
        goto LABEL_114;
      }
    }
    swift_retain();
LABEL_108:
    swift_retain();
    goto LABEL_109;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  uint64_t v295 = qword_1EB997A18;
  int v296 = 0;
  char v297 = 2;
  uint64_t v298 = 0;
  char v299 = 2;
  uint64_t v300 = 0;
  swift_retain();
  sub_1B6A6E2D8(3, (uint64_t)v269);
  swift_release();
  v283[0] = v269[0];
  v283[1] = v269[1];
  uint64_t v284 = v270;
  sub_1B62C9DA8(a1, (uint64_t)v283, 0x200000000, v332);
  sub_1B62D7710((uint64_t)v332, (uint64_t)&v340, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v340)
  {
    if (v347 >= 1)
    {
      uint64_t v235 = v344;
      if (v344)
      {
        uint64_t v81 = v346[4];
        int v246 = *(unsigned __int8 *)(v345 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v277[0] = v340;
        v277[1] = v341;
        uint64_t v278 = v342;
        uint64_t v225 = (uint64_t)(v346 + 6);
        uint64_t v227 = v343;
        v249 = v346 + 13;
        uint64_t v253 = v346;
        uint64_t v224 = v346 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v82 = 0;
        uint64_t v231 = v81;
        do
        {
          uint64_t v83 = (unsigned int *)(v227 + 48 * v82);
          uint64_t v84 = *v83;
          uint64_t v262 = v83[1];
          uint64_t v85 = *((void *)v83 + 3);
          v257 = (uint64_t *)*((void *)v83 + 2);
          uint64_t v86 = *((void *)v83 + 4);
          uint64_t v87 = *((void *)v83 + 5);
          uint64_t v242 = v82;
          if (v246)
          {
            uint64_t v88 = *(os_unfair_lock_s **)(v87 + 376);
            swift_retain();
            os_unfair_lock_lock(v88);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v87 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v81);
          sub_1B62D7710(v225, (uint64_t)v363, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v89 = v253[4];
          uint64_t v90 = *(void *)(*(void *)(*(void *)(*(void *)(v87 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v253[6] = ecs_stack_allocator_allocate(v89, 48 * v90, 8);
          v253[7] = v90;
          v224[1] = 0;
          v224[2] = 0;
          *uint64_t v224 = 0;
          swift_release();
          sub_1B62C9024((uint64_t)&type metadata for GraphScriptGroup, (uint64_t)&off_1F0F6C620, v257, v85, v86, (uint64_t)v253);
          if (v257)
          {
            if (v86)
            {
              uint64_t v91 = 0;
              uint64_t v92 = v257;
              do
              {
                uint64_t v94 = *(void *)(*(void *)(v87 + 40) + 16);
                uint64_t v95 = *(void *)(v94 + 128);
                if (*(void *)(v95 + 16))
                {
                  uint64_t v263 = v92[v91];
                  unint64_t v96 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptGroup);
                  if ((v97 & 1) != 0
                    && *(ValueMetadata **)(*(void *)(v94 + 24)
                                         + 16 * *(void *)(*(void *)(v95 + 56) + 8 * v96)
                                         + 32) == &type metadata for GraphScriptGroup)
                  {
                    *(void *)&long long v318 = &type metadata for GraphScriptGroup;
                    *((void *)&v318 + 1) = &off_1F0F6C620;
                    BYTE8(v320) = 1;
                    uint64_t v98 = *(void *)(*v249 + 16);
                    if (v98)
                    {
                      uint64_t v99 = *v249 + 32;
                      swift_retain();
                      swift_bridgeObjectRetain();
                      uint64_t v100 = 0;
                      while (2)
                      {
                        sub_1B6366C08(v99, (uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                        sub_1B639192C((uint64_t)v333, (uint64_t)&v334);
                        sub_1B639192C((uint64_t)&v318, (uint64_t)v337);
                        switch(BYTE8(v336))
                        {
                          case 1:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 != 1) {
                              goto LABEL_137;
                            }
                            goto LABEL_151;
                          case 2:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 != 2) {
                              goto LABEL_136;
                            }
                            goto LABEL_148;
                          case 3:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 == 3)
                            {
LABEL_148:
                              sub_1B62C15C4(v324, (uint64_t)&v325);
                              sub_1B62C15C4((long long *)v337, (uint64_t)v317);
                              uint64_t v103 = v327;
                              uint64_t v104 = v328;
                              sub_1B62C14BC(&v325, v327);
                              LOBYTE(v103) = sub_1B6B3D86C(v317, v103, v104);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v317);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v325);
                              sub_1B6391400((uint64_t)&v334);
                              sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                              if (v103)
                              {
LABEL_156:
                                swift_bridgeObjectRelease();
                                unint64_t v109 = sub_1B6B1B930();
                                uint64_t v110 = *(void *)(v108 + 48);
                                if (v110)
                                {
                                  uint64_t v111 = *(void *)(v108 + 64);
                                  *(void *)(v110 + 8 * v111) = v263;
                                  *(void *)(v108 + 64) = v111 + 1;
                                }
                                ((void (*)(long long *, void))v109)(&v334, 0);
                                uint64_t v92 = v257;
                                goto LABEL_129;
                              }
                            }
                            else
                            {
LABEL_136:
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v324);
LABEL_137:
                              sub_1B68736D8((uint64_t)&v334, (uint64_t)&qword_1E9DD2A20, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t (*)(void))sub_1B67FB8C0);
                              sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            }
LABEL_138:
                            ++v100;
                            v99 += 72;
                            if (v98 != v100) {
                              continue;
                            }
                            swift_bridgeObjectRelease();
                            break;
                          case 4:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 != 4) {
                              goto LABEL_137;
                            }
                            int v101 = LOBYTE(v324[0]);
                            int v102 = v337[0];
                            sub_1B6391400((uint64_t)&v334);
                            sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v101 == v102) {
                              goto LABEL_156;
                            }
                            goto LABEL_138;
                          case 5:
                            if (v339 != 5) {
                              goto LABEL_137;
                            }
                            int8x16_t v107 = vorrq_s8(*(int8x16_t *)&v337[8], v338);
                            if (*(void *)&vorr_s8(*(int8x8_t *)v107.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v107, v107, 8uLL)) | *(void *)v337)goto LABEL_137; {
                            sub_1B6391400((uint64_t)&v334);
                            }
                            sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            goto LABEL_156;
                          default:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339) {
                              goto LABEL_137;
                            }
LABEL_151:
                            uint64_t v105 = *(void *)&v324[0];
                            uint64_t v106 = *(void *)v337;
                            sub_1B6391400((uint64_t)&v334);
                            sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v105 == v106) {
                              goto LABEL_156;
                            }
                            goto LABEL_138;
                        }
                        break;
                      }
                    }
                    else
                    {
                      swift_retain();
                    }
                    uint64_t v112 = *(void *)(v87 + 240) - *(void *)(v87 + 232);
                    uint64_t v113 = ecs_stack_allocator_allocate(v253[4], 8 * v112, 8);
                    *uint64_t v113 = v263;
                    sub_1B639192C((uint64_t)&v318, (uint64_t)&v334);
                    *(void *)v337 = v113;
                    *(void *)&v337[8] = v112;
                    *(void *)&v337[16] = 1;
                    uint64_t v114 = (void *)v253[13];
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v253[13] = v114;
                    uint64_t v92 = v257;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      uint64_t v114 = sub_1B68C0C6C(0, v114[2] + 1, 1, v114);
                      void *v249 = v114;
                    }
                    unint64_t v117 = v114[2];
                    unint64_t v116 = v114[3];
                    if (v117 >= v116 >> 1)
                    {
                      uint64_t v114 = sub_1B68C0C6C(v116 > 1, v117 + 1, 1, v114);
                      void *v249 = v114;
                    }
                    v114[2] = v117 + 1;
                    uint64_t v118 = &v114[9 * v117];
                    *((_OWORD *)v118 + 2) = v334;
                    long long v119 = v335;
                    long long v120 = v336;
                    long long v121 = *(_OWORD *)v337;
                    v118[12] = *(void *)&v337[16];
                    *((_OWORD *)v118 + 4) = v120;
                    *((_OWORD *)v118 + 5) = v121;
                    *((_OWORD *)v118 + 3) = v119;
LABEL_129:
                    sub_1B6391400((uint64_t)&v318);
                    swift_release();
                  }
                }
                ++v91;
              }
              while (v91 != v86);
            }
          }
          else
          {
            uint64_t v93 = v262;
            if (v84 != v262)
            {
              do
              {
                uint64_t v122 = v84 + 1;
                uint64_t v123 = *(void *)(*(void *)(v87 + 40) + 16);
                uint64_t v124 = *(void *)(v123 + 128);
                if (*(void *)(v124 + 16))
                {
                  unint64_t v125 = sub_1B62C1A30((uint64_t)&type metadata for GraphScriptGroup);
                  if ((v126 & 1) != 0
                    && *(ValueMetadata **)(*(void *)(v123 + 24)
                                         + 16 * *(void *)(*(void *)(v124 + 56) + 8 * v125)
                                         + 32) == &type metadata for GraphScriptGroup)
                  {
                    *(void *)&long long v318 = &type metadata for GraphScriptGroup;
                    *((void *)&v318 + 1) = &off_1F0F6C620;
                    BYTE8(v320) = 1;
                    uint64_t v127 = *(void *)(*v249 + 16);
                    if (v127)
                    {
                      uint64_t v128 = *v249 + 32;
                      swift_retain();
                      swift_bridgeObjectRetain();
                      uint64_t v129 = 0;
                      while (2)
                      {
                        sub_1B6366C08(v128, (uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                        sub_1B639192C((uint64_t)v333, (uint64_t)&v334);
                        sub_1B639192C((uint64_t)&v318, (uint64_t)v337);
                        switch(BYTE8(v336))
                        {
                          case 1:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 != 1) {
                              goto LABEL_174;
                            }
                            goto LABEL_188;
                          case 2:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 != 2) {
                              goto LABEL_173;
                            }
                            goto LABEL_185;
                          case 3:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 == 3)
                            {
LABEL_185:
                              sub_1B62C15C4(v324, (uint64_t)&v325);
                              sub_1B62C15C4((long long *)v337, (uint64_t)v317);
                              uint64_t v132 = v327;
                              uint64_t v133 = v328;
                              sub_1B62C14BC(&v325, v327);
                              LOBYTE(v132) = sub_1B6B3D86C(v317, v132, v133);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v317);
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v325);
                              sub_1B6391400((uint64_t)&v334);
                              sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                              if (v132)
                              {
LABEL_193:
                                swift_bridgeObjectRelease();
                                char v138 = sub_1B6B1B930();
                                uint64_t v139 = *(void *)(v137 + 48);
                                if (v139)
                                {
                                  uint64_t v140 = *(void *)(v137 + 64);
                                  *(void *)(v139 + 8 * v140) = v84;
                                  *(void *)(v137 + 64) = v140 + 1;
                                }
                                ((void (*)(long long *, void))v138)(&v334, 0);
                                uint64_t v93 = v262;
                                goto LABEL_166;
                              }
                            }
                            else
                            {
LABEL_173:
                              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v324);
LABEL_174:
                              sub_1B68736D8((uint64_t)&v334, (uint64_t)&qword_1E9DD2A20, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t (*)(void))sub_1B67FB8C0);
                              sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            }
LABEL_175:
                            ++v129;
                            v128 += 72;
                            if (v127 != v129) {
                              continue;
                            }
                            swift_bridgeObjectRelease();
                            uint64_t v93 = v262;
                            break;
                          case 4:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339 != 4) {
                              goto LABEL_174;
                            }
                            int v130 = LOBYTE(v324[0]);
                            int v131 = v337[0];
                            sub_1B6391400((uint64_t)&v334);
                            sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v130 == v131) {
                              goto LABEL_193;
                            }
                            goto LABEL_175;
                          case 5:
                            if (v339 != 5) {
                              goto LABEL_174;
                            }
                            int8x16_t v136 = vorrq_s8(*(int8x16_t *)&v337[8], v338);
                            if (*(void *)&vorr_s8(*(int8x8_t *)v136.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL)) | *(void *)v337)goto LABEL_174; {
                            sub_1B6391400((uint64_t)&v334);
                            }
                            sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            goto LABEL_193;
                          default:
                            sub_1B639192C((uint64_t)&v334, (uint64_t)v324);
                            if (v339) {
                              goto LABEL_174;
                            }
LABEL_188:
                            uint64_t v134 = *(void *)&v324[0];
                            uint64_t v135 = *(void *)v337;
                            sub_1B6391400((uint64_t)&v334);
                            sub_1B62BFF14((uint64_t)v333, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v134 == v135) {
                              goto LABEL_193;
                            }
                            goto LABEL_175;
                        }
                        break;
                      }
                    }
                    else
                    {
                      swift_retain();
                    }
                    uint64_t v141 = *(void *)(v87 + 240) - *(void *)(v87 + 232);
                    uint64_t v142 = ecs_stack_allocator_allocate(v253[4], 8 * v141, 8);
                    *uint64_t v142 = v84;
                    sub_1B639192C((uint64_t)&v318, (uint64_t)&v334);
                    *(void *)v337 = v142;
                    *(void *)&v337[8] = v141;
                    *(void *)&v337[16] = 1;
                    uint64_t v143 = (void *)v253[13];
                    char v144 = swift_isUniquelyReferenced_nonNull_native();
                    v253[13] = v143;
                    if ((v144 & 1) == 0)
                    {
                      uint64_t v143 = sub_1B68C0C6C(0, v143[2] + 1, 1, v143);
                      void *v249 = v143;
                    }
                    unint64_t v146 = v143[2];
                    unint64_t v145 = v143[3];
                    if (v146 >= v145 >> 1)
                    {
                      uint64_t v143 = sub_1B68C0C6C(v145 > 1, v146 + 1, 1, v143);
                      void *v249 = v143;
                    }
                    v143[2] = v146 + 1;
                    uint64_t v147 = &v143[9 * v146];
                    *((_OWORD *)v147 + 2) = v334;
                    long long v148 = v335;
                    long long v149 = v336;
                    long long v150 = *(_OWORD *)v337;
                    v147[12] = *(void *)&v337[16];
                    *((_OWORD *)v147 + 4) = v149;
                    *((_OWORD *)v147 + 5) = v150;
                    *((_OWORD *)v147 + 3) = v148;
LABEL_166:
                    sub_1B6391400((uint64_t)&v318);
                    swift_release();
                  }
                }
                ++v84;
              }
              while (v122 != v93);
            }
          }
          sub_1B6345178(v253, (unsigned __int16 **)v277, (uint64_t)v363);
          sub_1B634507C((char *)v87);
          uint64_t v81 = v231;
          ecs_stack_allocator_pop_snapshot(v231);
          if (v246)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v87 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v87 + 376));
          }
          swift_release();
          uint64_t v82 = v242 + 1;
        }
        while (v242 + 1 != v235);
        sub_1B632F170(v332);
      }
    }
    sub_1B632F170(v332);
  }
  uint64_t v289 = qword_1EB997A18;
  int v290 = 0;
  char v291 = 2;
  uint64_t v292 = 0;
  char v293 = 2;
  uint64_t v294 = 0;
  swift_retain();
  sub_1B6A6E8F0(3, (uint64_t)v271);
  swift_release();
  v281[0] = v271[0];
  v281[1] = v271[1];
  uint64_t v282 = v272;
  sub_1B62C9DA8(a1, (uint64_t)v281, 0x200000000, v333);
  sub_1B62D7710((uint64_t)v333, (uint64_t)&v334, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v334)
  {
    if (v338.i64[1] > 0 && (uint64_t v243 = *(void *)&v337[8]) != 0)
    {
      uint64_t v151 = *(void *)(v338.i64[0] + 32);
      char v152 = *(unsigned char *)(*(void *)&v337[16] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v279[0] = v334;
      v279[1] = v335;
      uint64_t v280 = v336;
      uint64_t v228 = v338.i64[0] + 48;
      uint64_t v232 = *((void *)&v336 + 1);
      uint64_t v254 = v338.i64[0] + 104;
      v264 = (void *)v338.i64[0];
      long long v226 = (void *)(v338.i64[0] + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v153 = 0;
      char v236 = v152;
      uint64_t v239 = v151;
      do
      {
        uint64_t v154 = (unsigned int *)(v232 + 48 * v153);
        uint64_t v155 = *v154;
        uint64_t v156 = v154[1];
        uint64_t v157 = *((void *)v154 + 3);
        v258 = (uint64_t *)*((void *)v154 + 2);
        uint64_t v158 = *((void *)v154 + 4);
        uint64_t v159 = *((void *)v154 + 5);
        uint64_t v250 = v153;
        if (v152)
        {
          uint64_t v160 = *(os_unfair_lock_s **)(v159 + 376);
          swift_retain();
          os_unfair_lock_lock(v160);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v159 + 344));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v151);
        sub_1B62D7710(v228, (uint64_t)v362, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v161 = v264[4];
        uint64_t v162 = *(void *)(*(void *)(*(void *)(*(void *)(v159 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v264[6] = ecs_stack_allocator_allocate(v161, 48 * v162, 8);
        v264[7] = v162;
        v226[1] = 0;
        v226[2] = 0;
        *long long v226 = 0;
        swift_release();
        sub_1B62C9024((uint64_t)&type metadata for GraphDebuggingComponent, (uint64_t)&off_1F0F8F2C8, v258, v157, v158, (uint64_t)v264);
        if (v258)
        {
          if (v158)
          {
            uint64_t v163 = 0;
            int v164 = v258;
            do
            {
              uint64_t v165 = *(void *)(*(void *)(v159 + 40) + 16);
              uint64_t v166 = *(void *)(v165 + 128);
              if (*(void *)(v166 + 16))
              {
                uint64_t v167 = v164[v163];
                unint64_t v168 = sub_1B62C1A30((uint64_t)&type metadata for GraphDebuggingComponent);
                if ((v169 & 1) != 0
                  && *(ValueMetadata **)(*(void *)(v165 + 24)
                                       + 16 * *(void *)(*(void *)(v166 + 56) + 8 * v168)
                                       + 32) == &type metadata for GraphDebuggingComponent)
                {
                  v325 = &type metadata for GraphDebuggingComponent;
                  v326 = &off_1F0F8F2C8;
                  char v329 = 1;
                  uint64_t v170 = *(void *)(*(void *)v254 + 16);
                  if (v170)
                  {
                    uint64_t v171 = *(void *)v254 + 32;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v172 = 0;
                    while (2)
                    {
                      sub_1B6366C08(v171, (uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                      sub_1B639192C((uint64_t)v324, (uint64_t)&v318);
                      sub_1B639192C((uint64_t)&v325, (uint64_t)v321);
                      switch(BYTE8(v320))
                      {
                        case 1:
                          sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                          if (v323 != 1) {
                            goto LABEL_229;
                          }
                          goto LABEL_243;
                        case 2:
                          sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                          if (v323 != 2) {
                            goto LABEL_228;
                          }
                          goto LABEL_240;
                        case 3:
                          sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                          if (v323 == 3)
                          {
LABEL_240:
                            sub_1B62C15C4(v317, (uint64_t)v314);
                            sub_1B62C15C4((long long *)v321, (uint64_t)v313);
                            uint64_t v175 = v315;
                            uint64_t v176 = v316;
                            sub_1B62C14BC(v314, v315);
                            LOBYTE(v175) = sub_1B6B3D86C(v313, v175, v176);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v313);
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v314);
                            sub_1B6391400((uint64_t)&v318);
                            sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                            if (v175)
                            {
LABEL_248:
                              swift_bridgeObjectRelease();
                              uint64_t v181 = sub_1B6B1B930();
                              uint64_t v182 = *(void *)(v180 + 48);
                              if (v182)
                              {
                                uint64_t v183 = *(void *)(v180 + 64);
                                *(void *)(v182 + 8 * v183) = v167;
                                *(void *)(v180 + 64) = v183 + 1;
                              }
                              ((void (*)(long long *, void))v181)(&v318, 0);
                              int v164 = v258;
                              goto LABEL_221;
                            }
                          }
                          else
                          {
LABEL_228:
                            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v317);
LABEL_229:
                            sub_1B68736D8((uint64_t)&v318, (uint64_t)&qword_1E9DD2A20, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t (*)(void))sub_1B67FB8C0);
                            sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                          }
LABEL_230:
                          ++v172;
                          v171 += 72;
                          if (v170 != v172) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          int v164 = v258;
                          break;
                        case 4:
                          sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                          if (v323 != 4) {
                            goto LABEL_229;
                          }
                          int v173 = LOBYTE(v317[0]);
                          int v174 = v321[0];
                          sub_1B6391400((uint64_t)&v318);
                          sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v173 == v174) {
                            goto LABEL_248;
                          }
                          goto LABEL_230;
                        case 5:
                          if (v323 != 5) {
                            goto LABEL_229;
                          }
                          int8x16_t v179 = vorrq_s8(*(int8x16_t *)&v321[8], v322);
                          if (*(void *)&vorr_s8(*(int8x8_t *)v179.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v179, v179, 8uLL)) | *(void *)v321)goto LABEL_229; {
                          sub_1B6391400((uint64_t)&v318);
                          }
                          sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                          goto LABEL_248;
                        default:
                          sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                          if (v323) {
                            goto LABEL_229;
                          }
LABEL_243:
                          uint64_t v177 = *(void *)&v317[0];
                          uint64_t v178 = *(void *)v321;
                          sub_1B6391400((uint64_t)&v318);
                          sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v177 == v178) {
                            goto LABEL_248;
                          }
                          goto LABEL_230;
                      }
                      break;
                    }
                  }
                  else
                  {
                    swift_retain();
                  }
                  uint64_t v184 = *(void *)(v159 + 240) - *(void *)(v159 + 232);
                  uint64_t v185 = ecs_stack_allocator_allocate(v264[4], 8 * v184, 8);
                  *uint64_t v185 = v167;
                  sub_1B639192C((uint64_t)&v325, (uint64_t)&v318);
                  *(void *)v321 = v185;
                  *(void *)&v321[8] = v184;
                  *(void *)&v321[16] = 1;
                  uint64_t v186 = (void *)v264[13];
                  char v187 = swift_isUniquelyReferenced_nonNull_native();
                  v264[13] = v186;
                  if ((v187 & 1) == 0)
                  {
                    uint64_t v186 = sub_1B68C0C6C(0, v186[2] + 1, 1, v186);
                    *(void *)uint64_t v254 = v186;
                  }
                  unint64_t v189 = v186[2];
                  unint64_t v188 = v186[3];
                  if (v189 >= v188 >> 1)
                  {
                    uint64_t v186 = sub_1B68C0C6C(v188 > 1, v189 + 1, 1, v186);
                    *(void *)uint64_t v254 = v186;
                  }
                  v186[2] = v189 + 1;
                  int v190 = &v186[9 * v189];
                  *((_OWORD *)v190 + 2) = v318;
                  long long v191 = v319;
                  long long v192 = v320;
                  long long v193 = *(_OWORD *)v321;
                  v190[12] = *(void *)&v321[16];
                  *((_OWORD *)v190 + 4) = v192;
                  *((_OWORD *)v190 + 5) = v193;
                  *((_OWORD *)v190 + 3) = v191;
LABEL_221:
                  sub_1B6391400((uint64_t)&v325);
                  swift_release();
                }
              }
              ++v163;
            }
            while (v163 != v158);
          }
        }
        else if (v155 != v156)
        {
          do
          {
            uint64_t v194 = v155 + 1;
            uint64_t v195 = *(void *)(*(void *)(v159 + 40) + 16);
            uint64_t v196 = *(void *)(v195 + 128);
            if (*(void *)(v196 + 16))
            {
              unint64_t v197 = sub_1B62C1A30((uint64_t)&type metadata for GraphDebuggingComponent);
              if ((v198 & 1) != 0
                && *(ValueMetadata **)(*(void *)(v195 + 24)
                                     + 16 * *(void *)(*(void *)(v196 + 56) + 8 * v197)
                                     + 32) == &type metadata for GraphDebuggingComponent)
              {
                v325 = &type metadata for GraphDebuggingComponent;
                v326 = &off_1F0F8F2C8;
                char v329 = 1;
                uint64_t v199 = *(void *)(*(void *)v254 + 16);
                if (v199)
                {
                  uint64_t v200 = *(void *)v254 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v201 = 0;
                  while (2)
                  {
                    sub_1B6366C08(v200, (uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                    sub_1B639192C((uint64_t)v324, (uint64_t)&v318);
                    sub_1B639192C((uint64_t)&v325, (uint64_t)v321);
                    switch(BYTE8(v320))
                    {
                      case 1:
                        sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                        if (v323 != 1) {
                          goto LABEL_266;
                        }
                        goto LABEL_280;
                      case 2:
                        sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                        if (v323 != 2) {
                          goto LABEL_265;
                        }
                        goto LABEL_277;
                      case 3:
                        sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                        if (v323 == 3)
                        {
LABEL_277:
                          sub_1B62C15C4(v317, (uint64_t)v314);
                          sub_1B62C15C4((long long *)v321, (uint64_t)v313);
                          uint64_t v204 = v315;
                          uint64_t v205 = v316;
                          sub_1B62C14BC(v314, v315);
                          LOBYTE(v204) = sub_1B6B3D86C(v313, v204, v205);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v313);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v314);
                          sub_1B6391400((uint64_t)&v318);
                          sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v204)
                          {
LABEL_285:
                            swift_bridgeObjectRelease();
                            uint64_t v210 = sub_1B6B1B930();
                            uint64_t v211 = *(void *)(v209 + 48);
                            if (v211)
                            {
                              uint64_t v212 = *(void *)(v209 + 64);
                              *(void *)(v211 + 8 * v212) = v155;
                              *(void *)(v209 + 64) = v212 + 1;
                            }
                            ((void (*)(long long *, void))v210)(&v318, 0);
                            goto LABEL_258;
                          }
                        }
                        else
                        {
LABEL_265:
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v317);
LABEL_266:
                          sub_1B68736D8((uint64_t)&v318, (uint64_t)&qword_1E9DD2A20, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t)&type metadata for PrivateCommandQueue.Operation, (uint64_t (*)(void))sub_1B67FB8C0);
                          sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                        }
LABEL_267:
                        ++v201;
                        v200 += 72;
                        if (v199 != v201) {
                          continue;
                        }
                        swift_bridgeObjectRelease();
                        break;
                      case 4:
                        sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                        if (v323 != 4) {
                          goto LABEL_266;
                        }
                        int v202 = LOBYTE(v317[0]);
                        int v203 = v321[0];
                        sub_1B6391400((uint64_t)&v318);
                        sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v202 == v203) {
                          goto LABEL_285;
                        }
                        goto LABEL_267;
                      case 5:
                        if (v323 != 5) {
                          goto LABEL_266;
                        }
                        int8x16_t v208 = vorrq_s8(*(int8x16_t *)&v321[8], v322);
                        if (*(void *)&vorr_s8(*(int8x8_t *)v208.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v208, v208, 8uLL)) | *(void *)v321) {
                          goto LABEL_266;
                        }
                        sub_1B6391400((uint64_t)&v318);
                        sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                        goto LABEL_285;
                      default:
                        sub_1B639192C((uint64_t)&v318, (uint64_t)v317);
                        if (v323) {
                          goto LABEL_266;
                        }
LABEL_280:
                        uint64_t v206 = *(void *)&v317[0];
                        uint64_t v207 = *(void *)v321;
                        sub_1B6391400((uint64_t)&v318);
                        sub_1B62BFF14((uint64_t)v324, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v206 == v207) {
                          goto LABEL_285;
                        }
                        goto LABEL_267;
                    }
                    break;
                  }
                }
                else
                {
                  swift_retain();
                }
                uint64_t v213 = *(void *)(v159 + 240) - *(void *)(v159 + 232);
                uint64_t v214 = ecs_stack_allocator_allocate(v264[4], 8 * v213, 8);
                *uint64_t v214 = v155;
                sub_1B639192C((uint64_t)&v325, (uint64_t)&v318);
                *(void *)v321 = v214;
                *(void *)&v321[8] = v213;
                *(void *)&v321[16] = 1;
                uint64_t v215 = (void *)v264[13];
                char v216 = swift_isUniquelyReferenced_nonNull_native();
                v264[13] = v215;
                if ((v216 & 1) == 0)
                {
                  uint64_t v215 = sub_1B68C0C6C(0, v215[2] + 1, 1, v215);
                  *(void *)uint64_t v254 = v215;
                }
                unint64_t v218 = v215[2];
                unint64_t v217 = v215[3];
                if (v218 >= v217 >> 1)
                {
                  uint64_t v215 = sub_1B68C0C6C(v217 > 1, v218 + 1, 1, v215);
                  *(void *)uint64_t v254 = v215;
                }
                v215[2] = v218 + 1;
                uint64_t v219 = &v215[9 * v218];
                *((_OWORD *)v219 + 2) = v318;
                long long v220 = v319;
                long long v221 = v320;
                long long v222 = *(_OWORD *)v321;
                v219[12] = *(void *)&v321[16];
                *((_OWORD *)v219 + 4) = v221;
                *((_OWORD *)v219 + 5) = v222;
                *((_OWORD *)v219 + 3) = v220;
LABEL_258:
                sub_1B6391400((uint64_t)&v325);
                swift_release();
              }
            }
            ++v155;
          }
          while (v194 != v156);
        }
        sub_1B6345178(v264, (unsigned __int16 **)v279, (uint64_t)v362);
        sub_1B634507C((char *)v159);
        uint64_t v151 = v239;
        ecs_stack_allocator_pop_snapshot(v239);
        char v152 = v236;
        if (v236)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v159 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v159 + 376));
        }
        swift_release();
        uint64_t v153 = v250 + 1;
      }
      while (v250 + 1 != v243);
    }
    else
    {
      swift_retain();
      swift_retain();
      swift_retain();
    }
    sub_1B62CA064((uint64_t)v271);
    sub_1B62CA064((uint64_t)v269);
    sub_1B62CA064((uint64_t)v267);
    sub_1B62CA064((uint64_t)v265);
    sub_1B632F170(v333);
    return sub_1B632F170(v333);
  }
  else
  {
    sub_1B62CA064((uint64_t)v271);
    sub_1B62CA064((uint64_t)v269);
    sub_1B62CA064((uint64_t)v267);
    return (uint64_t *)sub_1B62CA064((uint64_t)v265);
  }
}

uint64_t sub_1B6877A48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    BOOL v9 = sub_1B62EC0CC((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76688, a1);
    swift_retain();
    swift_release();
    if (v9)
    {
      unint64_t v17 = &type metadata for VFXEmitter;
      unint64_t v18 = &off_1F0F53E58;
      *(void *)&long long v16 = __PAIR64__(v8, a1);
      *((void *)&v16 + 1) = a2;
      sub_1B62C15C4(&v16, (uint64_t)v19);
      uint64_t v10 = sub_1B62C14BC(v19, v19[3]);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      swift_retain();
      sub_1B6CCFBE0((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, 5, v11, v12, a3, a4);
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v19);
      return swift_release();
    }
  }
  swift_retain();
  BOOL v13 = sub_1B62EC0CC((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80890, a1);
  swift_release();
  if (v13)
  {
    type metadata accessor for VFXAttribute();
    swift_retain();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a2;
    swift_unownedRetain();
    swift_release();
    *(_DWORD *)(inited + 24) = a1;
    *(_DWORD *)(inited + 28) = v8;
    *(void *)(inited + 32) = &type metadata for GraphScriptingConfig;
    *(void *)(inited + 40) = &off_1F0F80890;
    sub_1B6CA00E8(inited, a3, a4);
    swift_release();
    return swift_release();
  }

  return swift_release();
}

uint64_t sub_1B6877C28(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  unint64_t v10 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    BOOL v11 = sub_1B62EC0CC((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76688, a1);
    swift_retain();
    swift_release();
    if (v11)
    {
      uint64_t v19 = &type metadata for VFXEmitter;
      unint64_t v20 = &off_1F0F53E58;
      *(void *)&long long v18 = __PAIR64__(v10, a1);
      *((void *)&v18 + 1) = a2;
      sub_1B62C15C4(&v18, (uint64_t)v21);
      uint64_t v12 = sub_1B62C14BC(v21, v21[3]);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      swift_retain();
      sub_1B6CCFDF0((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, 5, v13, v14, a3, a4, a5);
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v21);
      return swift_release();
    }
  }
  swift_retain();
  BOOL v15 = sub_1B62EC0CC((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80890, a1);
  swift_release();
  if (v15)
  {
    type metadata accessor for VFXAttribute();
    swift_retain();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a2;
    swift_unownedRetain();
    swift_release();
    *(_DWORD *)(inited + 24) = a1;
    *(_DWORD *)(inited + 28) = v10;
    *(void *)(inited + 32) = &type metadata for GraphScriptingConfig;
    *(void *)(inited + 40) = &off_1F0F80890;
    sub_1B6CA0568(inited, a3, a4, a5);
    swift_release();
    return swift_release();
  }

  return swift_release();
}

uint64_t sub_1B6877E20(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v27 = 0;
  uint64_t i = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  uint64_t v33 = &v31;
  uint64_t v28 = a3 + 64;
  int64_t v29 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v24 = a3 + 104;
  uint64_t v26 = a4 + 7;
  if (v9) {
    goto LABEL_6;
  }
LABEL_7:
  while (2)
  {
    uint64_t v12 = i + 1;
    if (i + 1 < v29)
    {
      unint64_t v13 = *(void *)(v28 + 8 * v12);
      if (v13) {
        goto LABEL_18;
      }
      uint64_t v12 = i + 2;
      if (i + 2 >= v29) {
        return sub_1B685E1C0(a1, a2, v27, a3);
      }
      unint64_t v13 = *(void *)(v28 + 8 * v12);
      if (v13) {
        goto LABEL_18;
      }
      uint64_t v12 = i + 3;
      if (i + 3 >= v29) {
        return sub_1B685E1C0(a1, a2, v27, a3);
      }
      unint64_t v13 = *(void *)(v28 + 8 * v12);
      if (v13)
      {
LABEL_18:
        unint64_t v9 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
        for (i = v12; ; unint64_t v11 = v10 | (i << 6))
        {
          uint64_t v14 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
          uint64_t v16 = *v14;
          uint64_t v15 = v14[1];
          sub_1B66459A4(*(void *)(a3 + 56) + 88 * v11, (uint64_t)v32);
          v30[0] = v16;
          v30[1] = v15;
          sub_1B66459A4((uint64_t)v32, (uint64_t)v33);
          uint64_t v17 = a4[2];
          if (!v17) {
            break;
          }
          BOOL v18 = a4[4] == v16 && a4[5] == v15;
          if (!v18 && (sub_1B6E334B8() & 1) == 0)
          {
            uint64_t v19 = v17 - 1;
            if (!v19) {
              break;
            }
            unint64_t v20 = v26;
            while (1)
            {
              BOOL v21 = *(v20 - 1) == v16 && *v20 == v15;
              if (v21 || (sub_1B6E334B8() & 1) != 0) {
                break;
              }
              v20 += 2;
              if (!--v19) {
                goto LABEL_5;
              }
            }
          }
          swift_bridgeObjectRetain_n();
          sub_1B62BFF14((uint64_t)v30, (uint64_t (*)(void))sub_1B6873810);
          sub_1B666BD18((uint64_t)v32);
          swift_bridgeObjectRelease();
          *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
          ++v27;
          if (!v9) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v10 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
        }
LABEL_5:
        swift_bridgeObjectRetain_n();
        sub_1B62BFF14((uint64_t)v30, (uint64_t (*)(void))sub_1B6873810);
        sub_1B666BD18((uint64_t)v32);
        swift_bridgeObjectRelease();
        if (!v9) {
          continue;
        }
        goto LABEL_6;
      }
      uint64_t v12 = i + 4;
      if (i + 4 < v29)
      {
        unint64_t v13 = *(void *)(v28 + 8 * v12);
        if (!v13)
        {
          do
          {
            if (v29 - 5 == i) {
              return sub_1B685E1C0(a1, a2, v27, a3);
            }
            unint64_t v13 = *(void *)(v24 + 8 * i++);
          }
          while (!v13);
          uint64_t v12 = i + 4;
        }
        goto LABEL_18;
      }
    }
    return sub_1B685E1C0(a1, a2, v27, a3);
  }
}

uint64_t sub_1B68780F0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v51 = a1 + 64;
  uint64_t v49 = MEMORY[0x1E4FBC868];
  uint64_t v56 = MEMORY[0x1E4FBC868];
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  uint64_t v46 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = 0;
  int64_t v50 = (unint64_t)(63 - v6) >> 6;
  uint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v47 = v55 + 112;
  int64_t v48 = v50 - 6;
  while (1)
  {
    do
    {
      if (v8)
      {
        unint64_t v10 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        uint64_t v12 = v9 + 1;
        if (v9 + 1 >= v50) {
          goto LABEL_42;
        }
        unint64_t v13 = *(void *)(v51 + 8 * v12);
        if (!v13)
        {
          uint64_t v12 = v9 + 2;
          if (v9 + 2 >= v50) {
            goto LABEL_42;
          }
          unint64_t v13 = *(void *)(v51 + 8 * v12);
          if (!v13)
          {
            uint64_t v12 = v9 + 3;
            if (v9 + 3 >= v50) {
              goto LABEL_42;
            }
            unint64_t v13 = *(void *)(v51 + 8 * v12);
            if (!v13)
            {
              uint64_t v12 = v9 + 4;
              if (v9 + 4 >= v50) {
                goto LABEL_42;
              }
              unint64_t v13 = *(void *)(v51 + 8 * v12);
              if (!v13)
              {
                uint64_t v12 = v9 + 5;
                if (v9 + 5 >= v50) {
                  goto LABEL_42;
                }
                unint64_t v13 = *(void *)(v51 + 8 * v12);
                if (!v13)
                {
                  uint64_t v14 = v9;
                  while (v48 != v14)
                  {
                    unint64_t v13 = *(void *)(v47 + 8 * v14++);
                    if (v13)
                    {
                      uint64_t v12 = v14 + 5;
                      goto LABEL_21;
                    }
                  }
LABEL_42:
                  sub_1B62BB588();
                  return v49;
                }
              }
            }
          }
        }
LABEL_21:
        unint64_t v8 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
        uint64_t v9 = v12;
      }
      uint64_t v15 = *(void *)(*(void *)(*(void *)(v55 + 56) + 8 * v11) + 16);
    }
    while (!v15);
    uint64_t v54 = v3;
    uint64_t v16 = *(void *)(v55 + 48) + 16 * v11;
    uint64_t v52 = *(void *)v16;
    uint64_t v17 = a2;
    uint64_t v18 = *(void *)(v16 + 8);
    LOBYTE(v16) = *(unsigned char *)(v15 + 32);
    unsigned int v19 = v16 & 0x3F;
    unint64_t v20 = (unint64_t)((1 << v16) + 63) >> 6;
    size_t v21 = 8 * v20;
    uint64_t v22 = v17;
    swift_bridgeObjectRetain_n();
    uint64_t v53 = v18;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v19 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v27 = (void *)swift_slowAlloc();
    bzero(v27, v21);
    a2 = v22;
    swift_bridgeObjectRetain();
    uint64_t v28 = v54;
    uint64_t v29 = sub_1B6877E20((unint64_t *)v27, v20, v15, v22);
    if (v28) {
      goto LABEL_44;
    }
    uint64_t v26 = v29;
    uint64_t v3 = 0;
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B84C0](v27, -1, -1);
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v30 = v53;
    if (*(void *)(v26 + 16))
    {
      _s11MetadataSetCMa();
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v26;
      uint64_t v32 = v49;
      unint64_t v33 = *(void *)(v49 + 16);
      if (*(void *)(v49 + 24) <= v33)
      {
        sub_1B6ABF960(v33 + 1, 1);
        uint64_t v32 = v56;
      }
      uint64_t v49 = v32;
      sub_1B6E33918();
      uint64_t v34 = v52;
      sub_1B6E318B8();
      uint64_t v35 = sub_1B6E33988();
      uint64_t v36 = (void *)v49;
      uint64_t v37 = v49 + 64;
      uint64_t v38 = -1 << *(unsigned char *)(v49 + 32);
      unint64_t v39 = v35 & ~v38;
      unint64_t v40 = v39 >> 6;
      if (((-1 << v39) & ~*(void *)(v49 + 64 + 8 * (v39 >> 6))) != 0)
      {
        unint64_t v41 = __clz(__rbit64((-1 << v39) & ~*(void *)(v49 + 64 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v42 = (unint64_t)(63 - v38) >> 6;
        do
        {
          if (v40 + 1 == v42) {
            unint64_t v40 = 0;
          }
          else {
            ++v40;
          }
          uint64_t v43 = *(void *)(v37 + 8 * v40);
        }
        while (v43 == -1);
        unint64_t v41 = __clz(__rbit64(~v43)) + (v40 << 6);
      }
      *(void *)(v37 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v41;
      uint64_t v44 = (void *)(v36[6] + 16 * v41);
      void *v44 = v34;
      v44[1] = v30;
      *(void *)(v36[7] + 8 * v41) = v31;
      ++v36[2];
      swift_release();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe, v24);
  bzero((char *)&v46 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v21);
  swift_bridgeObjectRetain();
  uint64_t v25 = v54;
  uint64_t v26 = sub_1B6877E20((unint64_t *)((char *)&v46 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0)), v20, v15, v22);
  uint64_t v3 = v25;
  uint64_t v27 = v22;
  swift_bridgeObjectRelease();
  if (!v25)
  {
    a2 = v22;
    goto LABEL_29;
  }
  swift_willThrow();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_44:
  swift_bridgeObjectRelease();
  MEMORY[0x1BA9B84C0](v27, -1, -1);
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B68785E0(void *a1)
{
  sub_1B62BAC28(0, &qword_1E9DD1720, (uint64_t (*)(void))sub_1B687B414, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  unint64_t v8 = &v11[-v7];
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B687B414();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  else
  {
    v11[31] = 0;
    uint64_t v9 = sub_1B6E32D98();
    sub_1B62D85D4(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    v11[30] = 1;
    sub_1B687B4FC((unint64_t *)&qword_1EB980308);
    swift_bridgeObjectRetain();
    sub_1B6E32DF8();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

unint64_t sub_1B6878884()
{
  unint64_t result = qword_1EB97DB88;
  if (!qword_1EB97DB88)
  {
    sub_1B62BAC28(255, (unint64_t *)&unk_1EB97DB90, (uint64_t (*)(void))sub_1B62A2730, (uint64_t)&type metadata for EntityComponentProperty, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DecodeOrNil);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DB88);
  }
  return result;
}

unint64_t sub_1B6878914()
{
  unint64_t result = qword_1EB97DB80;
  if (!qword_1EB97DB80)
  {
    sub_1B62BAC28(255, (unint64_t *)&unk_1EB97DB90, (uint64_t (*)(void))sub_1B62A2730, (uint64_t)&type metadata for EntityComponentProperty, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DecodeOrNil);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DB80);
  }
  return result;
}

unint64_t sub_1B68789A4()
{
  unint64_t result = qword_1EB97ED50;
  if (!qword_1EB97ED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED50);
  }
  return result;
}

unint64_t sub_1B68789F8()
{
  unint64_t result = qword_1EB9802A8;
  if (!qword_1EB9802A8)
  {
    sub_1B62D85D4(255, &qword_1EB9802A0, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment, MEMORY[0x1E4FBB320]);
    sub_1B6878A8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9802A8);
  }
  return result;
}

unint64_t sub_1B6878A8C()
{
  unint64_t result = qword_1EB97FBE8;
  if (!qword_1EB97FBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBE8);
  }
  return result;
}

unint64_t sub_1B6878AE0()
{
  unint64_t result = qword_1EB97FBE0;
  if (!qword_1EB97FBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBE0);
  }
  return result;
}

void sub_1B6878B34()
{
  if (!qword_1E9DD1678)
  {
    sub_1B62BAC28(255, (unint64_t *)&unk_1EB97DB90, (uint64_t (*)(void))sub_1B62A2730, (uint64_t)&type metadata for EntityComponentProperty, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DecodeOrNil);
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1678);
    }
  }
}

unint64_t sub_1B6878BD4()
{
  unint64_t result = qword_1E9DD1680;
  if (!qword_1E9DD1680)
  {
    sub_1B6878B34();
    sub_1B6878884();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1680);
  }
  return result;
}

unint64_t sub_1B6878C4C()
{
  unint64_t result = qword_1E9DD1690;
  if (!qword_1E9DD1690)
  {
    sub_1B62BACD8(255, &qword_1E9DD1688, (uint64_t)&type metadata for ComponentProperty, MEMORY[0x1E4FBAEA0]);
    sub_1B62B1EFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1690);
  }
  return result;
}

unint64_t sub_1B6878CE8()
{
  unint64_t result = qword_1EB97F7F0;
  if (!qword_1EB97F7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F7F0);
  }
  return result;
}

unint64_t sub_1B6878D3C()
{
  unint64_t result = qword_1E9DD16A0;
  if (!qword_1E9DD16A0)
  {
    sub_1B62BB5E4(255, &qword_1EB97E578, (void (*)(void))sub_1B62A2730, (void (*)(void))sub_1B6878CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD16A0);
  }
  return result;
}

unint64_t sub_1B6878DCC()
{
  unint64_t result = qword_1E9DD16A8;
  if (!qword_1E9DD16A8)
  {
    sub_1B62BB5E4(255, &qword_1EB97E568, (void (*)(void))sub_1B62B1EFC, (void (*)(void))sub_1B68789A4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD16A8);
  }
  return result;
}

uint64_t sub_1B6878E5C(uint64_t a1, uint64_t a2)
{
  sub_1B62BAE70(0, &qword_1EB9802B0, &qword_1EB9802A0, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment, MEMORY[0x1E4FBB320]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B6878EEC()
{
  unint64_t result = qword_1E9DD16B0;
  if (!qword_1E9DD16B0)
  {
    sub_1B62D85D4(255, &qword_1EB980290, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment, MEMORY[0x1E4FBB320]);
    sub_1B6878F80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD16B0);
  }
  return result;
}

unint64_t sub_1B6878F80()
{
  unint64_t result = qword_1E9DD16B8;
  if (!qword_1E9DD16B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD16B8);
  }
  return result;
}

unint64_t sub_1B6878FD4()
{
  unint64_t result = qword_1E9DD16D0;
  if (!qword_1E9DD16D0)
  {
    sub_1B62D85D4(255, &qword_1EB9802A0, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment, MEMORY[0x1E4FBB320]);
    sub_1B6879068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD16D0);
  }
  return result;
}

unint64_t sub_1B6879068()
{
  unint64_t result = qword_1E9DD16D8;
  if (!qword_1E9DD16D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD16D8);
  }
  return result;
}

uint64_t sub_1B68790BC(void *a1)
{
  uint64_t v3 = *(uint64_t **)(v1 + 16);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  swift_bridgeObjectRelease();
  *a1 = v5;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

__n128 sub_1B6879108(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __n128 result = *(__n128 *)(v2 + 16);
  long long v4 = *(_OWORD *)(v2 + 32);
  long long v5 = *(_OWORD *)(v2 + 48);
  long long v6 = *(_OWORD *)(v2 + 64);
  *(void *)a1 = *(void *)v2;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

uint64_t sub_1B6879128(void *a1)
{
  return sub_1B6861158(a1, *(uint64_t **)(v1 + 16));
}

void sub_1B6879144(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x1E4FBB1A0], v7, MEMORY[0x1E4FBB1B0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_1B68791B8(_OWORD *a1)
{
  *(void *)&double result = sub_1B68793C8(a1).n128_u64[0];
  return result;
}

uint64_t sub_1B68791D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6879214(a1);
  return sub_1B6879268(v3, a1);
}

uint64_t sub_1B6879214(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6879268(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B68792C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B6879308(a1);
  return sub_1B687935C(v3, a1);
}

uint64_t sub_1B6879308(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B687935C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B68793B8()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

__n128 sub_1B68793C8(_OWORD *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  long long v5 = *(_OWORD *)(v2 + 32);
  long long v6 = *(_OWORD *)(v2 + 48);
  *a1 = *(_OWORD *)v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

id sub_1B68793E0(id *a1)
{
  uint64_t v3 = **(void ***)(v1 + 16);

  *a1 = v3;
  return v3;
}

uint64_t sub_1B6879428(void *a1)
{
  uint64_t v3 = **(void **)(v1 + 16);
  swift_unknownObjectRelease();
  *a1 = v3;
  return swift_unknownObjectRetain();
}

uint64_t sub_1B6879474(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B62BFF14(a1, type metadata accessor for ParticleUpdateScript);
  return sub_1B68749B0(v3, a1);
}

uint64_t sub_1B68794CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B62BFF14(a1, type metadata accessor for ParticleInitScript);
  return sub_1B6874968(v3, a1);
}

uint64_t sub_1B6879524(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B62BFF14(a1, type metadata accessor for GraphScript);
  return sub_1B6366C08(v3, a1, type metadata accessor for GraphScript);
}

uint64_t sub_1B6879590(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1B62BFF14(a1, type metadata accessor for TriggerScript);
  return sub_1B6366C08(v3, a1, type metadata accessor for TriggerScript);
}

void sub_1B68795FC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for ComponentWriter();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

__n128 sub_1B6879648(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  long long v3 = *(_OWORD *)(v2 + 16);
  long long v4 = *(_OWORD *)(v2 + 32);
  long long v5 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  __n128 result = *(__n128 *)(v2 + 80);
  long long v7 = *(_OWORD *)(v2 + 96);
  long long v8 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(a1 + 124) = *(_OWORD *)(v2 + 124);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = v8;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GraphEntityComponentPropertyReferences.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GraphEntityComponentPropertyReferences.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68797DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphEntityComponentPropertyReferences.CodingKeys()
{
  return &type metadata for GraphEntityComponentPropertyReferences.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GraphScriptingConfig.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68798E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphScriptingConfig.Mode()
{
  return &type metadata for GraphScriptingConfig.Mode;
}

ValueMetadata *type metadata accessor for CodeGenerationInitialized()
{
  return &type metadata for CodeGenerationInitialized;
}

void *assignWithCopy for CodeGenerationComponent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for CodeGenerationComponent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CodeGenerationComponent()
{
  return &type metadata for CodeGenerationComponent;
}

unint64_t destroy for GraphScriptingConfig.ScriptArg(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 24);
  if (result >= 0x3B)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for GraphScriptingConfig.ScriptArg(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >= 0x3B)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v6;
    a1[6] = a2[6];
  }
  return a1;
}

void *assignWithCopy for GraphScriptingConfig.ScriptArg(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  unint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  if (a1[3] >= 0x3BuLL)
  {
    if (v6 >= 0x3B)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B6879BE0((uint64_t)(a1 + 2));
      uint64_t v9 = a2[6];
      long long v10 = *((_OWORD *)a2 + 2);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 2) = v10;
      a1[6] = v9;
    }
  }
  else if (v6 >= 0x3B)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *v5;
    long long v8 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *uint64_t v4 = v7;
    *((_OWORD *)a1 + 2) = v8;
  }
  return a1;
}

uint64_t sub_1B6879BE0(uint64_t a1)
{
  return a1;
}

void *assignWithTake for GraphScriptingConfig.ScriptArg(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  if (a1[3] >= 0x3BuLL)
  {
    unint64_t v5 = a2[3];
    if (v5 >= 0x3B)
    {
      a1[2] = a2[2];
      a1[3] = v5;
      swift_bridgeObjectRelease();
      uint64_t v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B6879BE0((uint64_t)(a1 + 2));
  }
  long long v6 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v6;
  a1[6] = a2[6];
  return a1;
}

ValueMetadata *type metadata accessor for GraphScriptingConfig.ScriptArg()
{
  return &type metadata for GraphScriptingConfig.ScriptArg;
}

void *sub_1B6879CF4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    uint64_t v10 = a3[10];
    __dst = (void *)(a1 + v10);
    unint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 32) = v9;
    uint64_t v12 = sub_1B6E31118();
    uint64_t v19 = *(void *)(v12 - 8);
    unint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v11, 1, v12))
    {
      sub_1B62B5820();
      memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v15 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = *(unsigned char *)(v17 + 8);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1B6879EE4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1B62B5820();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  uint64_t v15 = a3[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  *(unsigned char *)(v16 + 8) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  return a1;
}

uint64_t sub_1B687A110(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B62B5820();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  return a1;
}

uint64_t sub_1B687A26C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1B6E31118();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1B62B5820();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t sub_1B687A468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B62B5820();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1B687A518(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1B62B5820();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B687A5C0()
{
  sub_1B62B5820();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for Scope(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Scope(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_1B687A6D4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B687A6F0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphScriptingConfig.EvaluationMode()
{
  return &type metadata for GraphScriptingConfig.EvaluationMode;
}

uint64_t assignWithCopy for GraphScriptingConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphScriptingConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 27)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphScriptingConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 27) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphScriptingConfig()
{
  return &type metadata for GraphScriptingConfig;
}

uint64_t destroy for EntityComponentPropertyLite()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for EntityComponentPropertyLite(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EntityComponentPropertyLite(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for EntityComponentPropertyLite(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for EntityComponentPropertyLite()
{
  return &type metadata for EntityComponentPropertyLite;
}

uint64_t destroy for GraphScriptGroup.Reference()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GraphScriptGroup.Reference(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GraphScriptGroup.Reference(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

__n128 initializeWithTake for GraphScriptGroup.Reference(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GraphScriptGroup.Reference(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphScriptGroup.Reference(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 35)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphScriptGroup.Reference(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 35) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphScriptGroup.Reference()
{
  return &type metadata for GraphScriptGroup.Reference;
}

uint64_t destroy for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment(uint64_t a1, uint64_t a2)
{
  return sub_1B638F35C(a1, a2, MEMORY[0x1E4FBC8D0]);
}

void *_s3VFX38GraphEntityComponentPropertyReferencesV32ExportedDirectPropertyAssignmentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment()
{
  return &type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment;
}

void *sub_1B687AD2C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Bindings.Value.EnumInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Bindings.Value.EnumInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Bindings.Value.EnumInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Bindings.Value.EnumInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphEntityComponentPropertyReferences.DirectPropertyAssignment()
{
  return &type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment;
}

uint64_t destroy for GraphDebuggingComponent.DebugValuesKey()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GraphDebuggingComponent.DebugValuesKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  int v7 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GraphDebuggingComponent.DebugValuesKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v4;
  return a1;
}

__n128 initializeWithTake for GraphDebuggingComponent.DebugValuesKey(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 61) = *(void *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for GraphDebuggingComponent.DebugValuesKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphDebuggingComponent.DebugValuesKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 69)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphDebuggingComponent.DebugValuesKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 69) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 69) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphDebuggingComponent.DebugValuesKey()
{
  return &type metadata for GraphDebuggingComponent.DebugValuesKey;
}

unint64_t sub_1B687B188()
{
  unint64_t result = qword_1E9DD16F8;
  if (!qword_1E9DD16F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD16F8);
  }
  return result;
}

unint64_t sub_1B687B1E0()
{
  unint64_t result = qword_1E9DD1700;
  if (!qword_1E9DD1700)
  {
    sub_1B62D85D4(255, &qword_1E9DD1708, (uint64_t)&type metadata for GraphScriptingConfig.Mode, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1700);
  }
  return result;
}

unint64_t sub_1B687B260()
{
  unint64_t result = qword_1E9DD1710;
  if (!qword_1E9DD1710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1710);
  }
  return result;
}

unint64_t sub_1B687B2B8()
{
  unint64_t result = qword_1E9DD1718;
  if (!qword_1E9DD1718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1718);
  }
  return result;
}

unint64_t sub_1B687B310()
{
  unint64_t result = qword_1EB97FC00;
  if (!qword_1EB97FC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FC00);
  }
  return result;
}

unint64_t sub_1B687B368()
{
  unint64_t result = qword_1EB97FBF8;
  if (!qword_1EB97FBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBF8);
  }
  return result;
}

unint64_t sub_1B687B3C0()
{
  unint64_t result = qword_1EB97F368;
  if (!qword_1EB97F368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F368);
  }
  return result;
}

unint64_t sub_1B687B414()
{
  unint64_t result = qword_1E9DD1728;
  if (!qword_1E9DD1728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1728);
  }
  return result;
}

unint64_t sub_1B687B468()
{
  unint64_t result = qword_1E9DD1738;
  if (!qword_1E9DD1738)
  {
    sub_1B62D85D4(255, &qword_1EB980280, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBB320]);
    sub_1B6878CE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1738);
  }
  return result;
}

uint64_t sub_1B687B4FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D85D4(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B687B580(void *a1)
{
  sub_1B62BAC28(0, &qword_1E9DD1758, (uint64_t (*)(void))sub_1B687B8A0, (uint64_t)&type metadata for CodeGenerationComponent.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = sub_1B62C14BC(a1, a1[3]);
  sub_1B687B8A0();
  int v13 = v12;
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    LODWORD(v14) = *(unsigned __int8 *)(sub_1B62BE764(v14, v15) + 80);
    swift_release();
    uint64_t v16 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v7, v11, v4);
    if (v14 == 1 && (uint64_t v17 = *(void *)(sub_1B6E32E88() + 16), swift_bridgeObjectRelease(), v17))
    {
      uint64_t v18 = *(void (**)(char *, uint64_t))(v16 + 8);
      v18(v7, v4);
      _s7ContextCMa();
      sub_1B62BAC90(&qword_1E9DD1768, (void (*)(uint64_t))_s7ContextCMa);
      sub_1B6E32DF8();
      v18(v11, v4);
      int v13 = v23;
    }
    else
    {
      uint64_t v19 = *(void (**)(char *, uint64_t))(v16 + 8);
      v19(v7, v4);
      v19(v11, v4);
      int v13 = 0;
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v13;
}

unint64_t sub_1B687B84C()
{
  unint64_t result = qword_1E9DD1750;
  if (!qword_1E9DD1750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1750);
  }
  return result;
}

unint64_t sub_1B687B8A0()
{
  unint64_t result = qword_1E9DD1760;
  if (!qword_1E9DD1760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1760);
  }
  return result;
}

unint64_t sub_1B687B904()
{
  unint64_t result = qword_1EB97F398;
  if (!qword_1EB97F398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F398);
  }
  return result;
}

unint64_t sub_1B687B958()
{
  unint64_t result = qword_1EB97F3B0[0];
  if (!qword_1EB97F3B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB97F3B0);
  }
  return result;
}

unint64_t sub_1B687B9AC()
{
  unint64_t result = qword_1E9DD1788;
  if (!qword_1E9DD1788)
  {
    sub_1B6879144(255, &qword_1E9DD1780, (uint64_t (*)(uint64_t))_s11MetadataSetCMa, MEMORY[0x1E4FBAEA0]);
    sub_1B62BAC90(&qword_1EB981158, (void (*)(uint64_t))_s11MetadataSetCMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1788);
  }
  return result;
}

unint64_t sub_1B687BA84()
{
  unint64_t result = qword_1E9DD17A8;
  if (!qword_1E9DD17A8)
  {
    sub_1B62BAE70(255, &qword_1E9DD17A0, &qword_1EB980260, (uint64_t)&type metadata for GraphScriptingConfig.ScriptArg, MEMORY[0x1E4FBB320]);
    sub_1B687BB20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD17A8);
  }
  return result;
}

unint64_t sub_1B687BB20()
{
  unint64_t result = qword_1E9DD17B0;
  if (!qword_1E9DD17B0)
  {
    sub_1B62D85D4(255, &qword_1EB980260, (uint64_t)&type metadata for GraphScriptingConfig.ScriptArg, MEMORY[0x1E4FBB320]);
    sub_1B687BBB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD17B0);
  }
  return result;
}

unint64_t sub_1B687BBB4()
{
  unint64_t result = qword_1E9DD17B8;
  if (!qword_1E9DD17B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD17B8);
  }
  return result;
}

unint64_t sub_1B687BC08()
{
  unint64_t result = qword_1E9DD17C0;
  if (!qword_1E9DD17C0)
  {
    sub_1B62B5820();
    sub_1B62BAC90(&qword_1E9DD17C8, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD17C0);
  }
  return result;
}

unint64_t sub_1B687BCA8()
{
  unint64_t result = qword_1EB97F370;
  if (!qword_1EB97F370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F370);
  }
  return result;
}

unint64_t sub_1B687BCFC()
{
  unint64_t result = qword_1EB97F358;
  if (!qword_1EB97F358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F358);
  }
  return result;
}

unint64_t sub_1B687BD50()
{
  unint64_t result = qword_1E9DD17D8;
  if (!qword_1E9DD17D8)
  {
    sub_1B6396740(255, &qword_1E9DD17D0, MEMORY[0x1E4FBAEA0]);
    sub_1B687BCA8();
    sub_1B62BAC90(&qword_1EB97F338, (void (*)(uint64_t))type metadata accessor for GraphScriptingConfig.ScriptInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD17D8);
  }
  return result;
}

unint64_t sub_1B687BE14()
{
  unint64_t result = qword_1E9DD17E8;
  if (!qword_1E9DD17E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD17E8);
  }
  return result;
}

unint64_t sub_1B687BE68()
{
  unint64_t result = qword_1E9DD17F0;
  if (!qword_1E9DD17F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD17F0);
  }
  return result;
}

void *sub_1B687BEBC(void *a1)
{
  return sub_1B66CF788(a1, **(unsigned char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

unsigned char *storeEnumTagSinglePayload for GraphScriptingConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B687BFACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphScriptingConfig.CodingKeys()
{
  return &type metadata for GraphScriptingConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GraphScriptingConfig.ScriptInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B687C0B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphScriptingConfig.ScriptInfo.CodingKeys()
{
  return &type metadata for GraphScriptingConfig.ScriptInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for GraphScriptingConfig.ScriptArg.CodingKeys()
{
  return &type metadata for GraphScriptingConfig.ScriptArg.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CodeGenerationComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B687C198);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodeGenerationComponent.CodingKeys()
{
  return &type metadata for CodeGenerationComponent.CodingKeys;
}

ValueMetadata *type metadata accessor for CodeGenerationInitialized.CodingKeys()
{
  return &type metadata for CodeGenerationInitialized.CodingKeys;
}

ValueMetadata *type metadata accessor for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment.CodingKeys()
{
  return &type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment.CodingKeys;
}

unsigned char *_s3VFX20GraphScriptingConfigV9ScriptArgV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B687C2BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphEntityComponentPropertyReferences.DirectPropertyAssignment.CodingKeys()
{
  return &type metadata for GraphEntityComponentPropertyReferences.DirectPropertyAssignment.CodingKeys;
}

unint64_t sub_1B687C2F8()
{
  unint64_t result = qword_1E9DD1800;
  if (!qword_1E9DD1800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1800);
  }
  return result;
}

unint64_t sub_1B687C350()
{
  unint64_t result = qword_1E9DD1808;
  if (!qword_1E9DD1808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1808);
  }
  return result;
}

unint64_t sub_1B687C3A8()
{
  unint64_t result = qword_1E9DD1810;
  if (!qword_1E9DD1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1810);
  }
  return result;
}

unint64_t sub_1B687C400()
{
  unint64_t result = qword_1E9DD1818;
  if (!qword_1E9DD1818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1818);
  }
  return result;
}

unint64_t sub_1B687C458()
{
  unint64_t result = qword_1E9DD1820;
  if (!qword_1E9DD1820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1820);
  }
  return result;
}

unint64_t sub_1B687C4B0()
{
  unint64_t result = qword_1E9DD1828;
  if (!qword_1E9DD1828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1828);
  }
  return result;
}

unint64_t sub_1B687C508()
{
  unint64_t result = qword_1EB97F310;
  if (!qword_1EB97F310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F310);
  }
  return result;
}

unint64_t sub_1B687C560()
{
  unint64_t result = qword_1EB97F308;
  if (!qword_1EB97F308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F308);
  }
  return result;
}

unint64_t sub_1B687C5B8()
{
  unint64_t result = qword_1EB97F328;
  if (!qword_1EB97F328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F328);
  }
  return result;
}

unint64_t sub_1B687C610()
{
  unint64_t result = qword_1EB97F320;
  if (!qword_1EB97F320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F320);
  }
  return result;
}

unint64_t sub_1B687C668()
{
  unint64_t result = qword_1EB97F3A8;
  if (!qword_1EB97F3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F3A8);
  }
  return result;
}

unint64_t sub_1B687C6C0()
{
  unint64_t result = qword_1EB97F3A0;
  if (!qword_1EB97F3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F3A0);
  }
  return result;
}

unint64_t sub_1B687C718()
{
  unint64_t result = qword_1E9DD1830;
  if (!qword_1E9DD1830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1830);
  }
  return result;
}

unint64_t sub_1B687C770()
{
  unint64_t result = qword_1E9DD1838;
  if (!qword_1E9DD1838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1838);
  }
  return result;
}

unint64_t sub_1B687C7C8()
{
  unint64_t result = qword_1E9DD1840;
  if (!qword_1E9DD1840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1840);
  }
  return result;
}

unint64_t sub_1B687C820()
{
  unint64_t result = qword_1E9DD1848;
  if (!qword_1E9DD1848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1848);
  }
  return result;
}

unint64_t sub_1B687C878()
{
  unint64_t result = qword_1EB97FBD8;
  if (!qword_1EB97FBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBD8);
  }
  return result;
}

unint64_t sub_1B687C8D0()
{
  unint64_t result = qword_1EB97FBD0;
  if (!qword_1EB97FBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FBD0);
  }
  return result;
}

unint64_t sub_1B687C928()
{
  unint64_t result = qword_1E9DD1850;
  if (!qword_1E9DD1850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1850);
  }
  return result;
}

unint64_t sub_1B687C980()
{
  unint64_t result = qword_1E9DD1858;
  if (!qword_1E9DD1858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1858);
  }
  return result;
}

double sub_1B687C9D4(void *a1)
{
  return sub_1B68749A0(a1);
}

uint64_t sub_1B687C9EC(void *a1)
{
  return sub_1B6874C28(a1);
}

double sub_1B687CA04(__n128 *a1)
{
  *(void *)&double result = sub_1B6875380(a1).n128_u64[0];
  return result;
}

float sub_1B687CA1C(_DWORD *a1)
{
  return sub_1B68753C0(a1);
}

void *sub_1B687CA38(uint64_t a1)
{
  return sub_1B6874980(a1);
}

ValueMetadata *_s10ChangeKindVMa()
{
  return &_s10ChangeKindVN;
}

uint64_t sub_1B687CA64(char a1, char a2)
{
  unsigned int v4 = (void *)*v2;
  if (a2) {
    sub_1B687D644();
  }
  if (a1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    type metadata accessor for GraphTypeInference();
    uint64_t inited = (uint64_t (*)(uint64_t *))swift_initStackObject();
    uint64_t v7 = MEMORY[0x1E4FBC870];
    *((void *)inited + 3) = v5;
    *((void *)inited + 4) = v7;
    swift_retain();
    *((void *)inited + 5) = sub_1B67DE98C(v5);
    uint64_t v8 = (uint64_t)sub_1B67DE98C(v5);
    *((void *)inited + 6) = v8;
    *((void *)inited + 2) = v2;
    if (qword_1E9DCC4A0 != -1) {
      uint64_t v8 = swift_once();
    }
    MEMORY[0x1F4188790](v8, v9);
    unint64_t v20 = inited;
    uint64_t v21 = v4;
    sub_1B68B708C((uint64_t)sub_1B687E21C, (uint64_t)v19, v10, v11, v12, MEMORY[0x1E4FBC860]);
    uint64_t v13 = sub_1B68C70AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2[3] = v13;
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v14 = MEMORY[0x1E4FBC860];
  v2[6] = sub_1B67DD1F0(MEMORY[0x1E4FBC860]);
  uint64_t v15 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v15, v16);
  unint64_t v20 = sub_1B687E1F8;
  uint64_t v21 = v2;
  v22[0] = sub_1B68C967C(v14);
  v22[1] = v17;
  sub_1B68B96F0((uint64_t)sub_1B687E200, (uint64_t)v19, 1, 0x1000000000000000uLL, 0, v14, (uint64_t)v22);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B687CCEC(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  sub_1B63BDD8C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)v14 - v6;
  long long v8 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v8;
  void v14[2] = *(_OWORD *)(a1 + 32);
  if (a2(v14))
  {
    uint64_t v9 = *(void *)(a1 + 8);
    swift_retain();
  }
  else
  {
    _s11DeletedNodeCMa_0(0);
    swift_allocObject();
    _s11DeletedNodeCMa(0);
    char v10 = (void *)swift_allocObject();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    v10[3] = 0;
    v10[4] = 0;
    _OWORD v10[2] = v11;
    sub_1B6E31108();
    uint64_t v12 = sub_1B6E31118();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
    uint64_t v9 = sub_1B6CE3580((uint64_t)v10, v11, (uint64_t)v7, 0, 0xF000000000000000);
    swift_release();
  }
  return v9;
}

unint64_t sub_1B687CE80()
{
  unint64_t result = qword_1E9DD1860;
  if (!qword_1E9DD1860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1860);
  }
  return result;
}

unint64_t sub_1B687CED8()
{
  unint64_t result = qword_1E9DD1868;
  if (!qword_1E9DD1868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1868);
  }
  return result;
}

unint64_t sub_1B687CF30()
{
  unint64_t result = qword_1E9DD1870;
  if (!qword_1E9DD1870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1870);
  }
  return result;
}

unint64_t sub_1B687CF88()
{
  unint64_t result = qword_1E9DD1878;
  if (!qword_1E9DD1878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1878);
  }
  return result;
}

uint64_t sub_1B687CFDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void (*v12)(void *__return_ptr, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t i;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char isUniquelyReferenced_nonNull_native;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void v48[5];
  void *v49;
  void v50[6];
  void v51[5];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  uint64_t v3 = v2;
  sub_1B63BDD8C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v45 = (char *)&v42 - v8;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v46 = OBJC_IVAR____TtC3VFX13AuthoringNode_raw;
  if (**(__objc2_class ***)(v9 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) == _TtC3VFX24InspectorSetECSValueNode
    || (uint64_t v10 = **(void **)(v9 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw),
        type metadata accessor for InspectorSetWorldValueNode(0),
        swift_dynamicCastClass()))
  {
    uint64_t result = swift_retain();
LABEL_4:
    *a2 = v9;
    return result;
  }
  uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t))(v10 + 152);
  uint64_t v13 = swift_retain();
  v12(v50, v13);
  unint64_t v14 = v50[0];
  uint64_t v64 = v50[0];
  uint64_t v63 = v50[1];
  sub_1B62D8C3C((uint64_t)&v63);
  uint64_t v62 = v50[2];
  sub_1B62D8C3C((uint64_t)&v62);
  uint64_t v61 = v50[3];
  sub_1B62D8C3C((uint64_t)&v61);
  unsigned __int16 v60 = v50[4];
  sub_1B62D8C3C((uint64_t)&v60);
  uint64_t v59 = v50[5];
  sub_1B62D8C3C((uint64_t)&v59);
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
    uint64_t result = sub_1B62D8C3C((uint64_t)&v64);
    goto LABEL_4;
  }
  unint64_t v42 = a2;
  uint64_t v16 = 0;
  uint64_t v17 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
  uint64_t v44 = v15;
  uint64_t v43 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
  while (*(void *)(*(void *)(v9 + v17) + 16 * v16 + 32))
  {
LABEL_8:
    if (++v16 == v15)
    {
      uint64_t result = sub_1B62D8C3C((uint64_t)&v64);
      a2 = v42;
      goto LABEL_4;
    }
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v49 = sub_1B67F4EA0(MEMORY[0x1E4FBC860]);
  MEMORY[0x1F4188790](v49, v19);
  *(&v42 - 2) = (uint64_t *)0x1000000000000000;
  *(&v42 - 1) = (uint64_t *)&v49;
  MEMORY[0x1F4188790](v20, v21);
  *(&v42 - 2) = (uint64_t *)sub_1B687E2D4;
  *(&v42 - 1) = v22;
  v48[0] = sub_1B68C967C(v18);
  v48[1] = v23;
  sub_1B68B96F0((uint64_t)sub_1B687EAA4, (uint64_t)(&v42 - 4), 1, 0x1000000000000000uLL, 0, v18, (uint64_t)v48);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_1B6808A2C(v24);
    swift_bridgeObjectRelease_n();
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_1B687E2DC(v26, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = 0;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1B6E32C18();
      if (v28)
      {
LABEL_13:
        for (uint64_t i = 0; i != v28; ++i)
        {
          if ((v27 & 0xC000000000000001) != 0) {
            MEMORY[0x1BA9B4580](i, v27);
          }
          else {
            swift_retain();
          }
          sub_1B683C54C();
          swift_release();
        }
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v28) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v30 = sub_1B683C228(v9, v16);
    uint64_t v31 = v30;
    if ((~v30 & 0xF000000000000007) != 0) {
      uint64_t v32 = v30;
    }
    else {
      uint64_t v32 = 0x8000000000000060;
    }
    (*(void (**)(void *__return_ptr))(**(void **)(v9 + v46) + 152))(v51);
    unint64_t v33 = v52;
    uint64_t v57 = v51[0];
    uint64_t v58 = v52;
    swift_bridgeObjectRetain();
    sub_1B62D8C3C((uint64_t)&v57);
    uint64_t v56 = v51[1];
    sub_1B62D8C3C((uint64_t)&v56);
    uint64_t v55 = v51[2];
    sub_1B62D8C3C((uint64_t)&v55);
    uint64_t v54 = v51[3];
    sub_1B62D8C3C((uint64_t)&v54);
    uint64_t v53 = v51[4];
    sub_1B62D8C3C((uint64_t)&v53);
    sub_1B62D8C3C((uint64_t)&v58);
    if (v16 >= *(void *)(v33 + 16)) {
      memset(v48, 0, sizeof(v48));
    }
    else {
      sub_1B66506CC(v33 + 40 * v16 + 32, (uint64_t)v48);
    }
    sub_1B62D8C3C((uint64_t)&v58);
    uint64_t v34 = sub_1B687E420(v32, (uint64_t)v48);
    if (v34)
    {
      uint64_t v35 = (uint64_t)v34;
      uint64_t v36 = sub_1B6E31118();
      uint64_t v37 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v45, 1, 1, v36);
      type metadata accessor for AuthoringNode();
      swift_allocObject();
      uint64_t v38 = sub_1B6CE3580(v35, MEMORY[0x1E4FBC860], v37, 0, 0xF000000000000000);
      uint64_t v17 = v43;
      unint64_t v39 = *(void **)(v9 + v43);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v9 + v17) = v39;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v39 = sub_1B6C16864(v39);
        *(void *)(v9 + v17) = v39;
      }
      unint64_t v41 = &v39[2 * v16];
      v41[4] = v38;
      v41[5] = 0;
      swift_release();
      sub_1B6827B68(v31);
      swift_release();
      swift_release();
      sub_1B687E8BC((uint64_t)v48);
      uint64_t v3 = v47;
      uint64_t v15 = v44;
    }
    else
    {
      sub_1B687E8BC((uint64_t)v48);
      sub_1B6827B68(v31);
      uint64_t v3 = v47;
      uint64_t v15 = v44;
      uint64_t v17 = v43;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B687D644()
{
  uint64_t v21 = MEMORY[0x1E4FBC870];
  uint64_t v22 = MEMORY[0x1E4FBC870];
  uint64_t v18 = &v22;
  uint64_t v19 = &v21;
  uint64_t v15 = sub_1B687E238;
  uint64_t v16 = &v17;
  unint64_t v1 = MEMORY[0x1E4FBC860];
  v20[0] = sub_1B68C967C(MEMORY[0x1E4FBC860]);
  v20[1] = v2;
  sub_1B68B96F0((uint64_t)sub_1B687EAA4, (uint64_t)v14, 1, 0x1000000000000000uLL, 0, v1, (uint64_t)v20);
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v3, v4);
  v13[10] = &v21;
  v13[11] = &v22;
  MEMORY[0x1F4188790](v5, v6);
  v13[6] = sub_1B687E240;
  v13[7] = v7;
  MEMORY[0x1F4188790](v8, v9);
  _DWORD v13[2] = sub_1B687E248;
  v13[3] = v10;
  sub_1B68B708C((uint64_t)sub_1B687E288, (uint64_t)v13, 0, 0x1000000000000000uLL, 0, MEMORY[0x1E4FBC860]);
  uint64_t v11 = sub_1B68C70AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B687D834(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B6E31118();
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v36 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v35 = (uint64_t)&v27 - v12;
  uint64_t v34 = *a1;
  uint64_t result = *(void *)(v34 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs);
  uint64_t v14 = *(void *)(result + 16);
  if (v14)
  {
    uint64_t v27 = a3;
    unint64_t v33 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v31 = OBJC_IVAR____TtC3VFX13AuthoringNode_raw;
    uint64_t v32 = (void (**)(uint64_t, uint64_t))(v11 + 8);
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = 32;
    uint64_t v28 = v6;
    uint64_t v29 = a2;
    uint64_t v30 = v15;
    uint64_t v17 = v35;
    do
    {
      uint64_t v18 = *(void *)(v15 + v16);
      if (v18)
      {
        uint64_t v19 = v18 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
        unint64_t v20 = *v33;
        uint64_t v21 = v36;
        (*v33)(v36, v18 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v6);
        swift_retain();
        sub_1B67EACC8(v17, v21);
        uint64_t v22 = *v32;
        (*v32)(v17, v6);
        uint64_t v23 = *(__objc2_class ***)(v34 + v31);
        type metadata accessor for ImplicitNilNode(0);
        if (swift_dynamicCastClass())
        {
          swift_release();
        }
        else if (*v23 == _TtC3VFX20ImplicitConstantNode {
               || (uint64_t v24 = *v23, type metadata accessor for ImplicitEnumConstantNode(0), swift_dynamicCastClass())
        }
               || (type metadata accessor for ImplicitStateNode(0), swift_dynamicCastClass())
               || v24 == _TtC3VFX19ImplicitComposeNode
               || v24 == _TtC3VFX21ImplicitDecomposeNode
               || (type metadata accessor for ImplicitPartialComposeNode(0), swift_dynamicCastClass())
               || (type metadata accessor for ImplicitEntityAssetNode(0), swift_dynamicCastClass())
               || (type metadata accessor for ImplicitWorldReferenceNode(0), swift_dynamicCastClass())
               || v24 == _TtC3VFX24InspectorSetECSValueNode
               || (type metadata accessor for InspectorSetWorldValueNode(0), swift_dynamicCastClass()))
        {
          swift_release();
          uint64_t v6 = v28;
        }
        else
        {
          uint64_t v25 = v36;
          uint64_t v6 = v28;
          v20(v36, v19, v28);
          uint64_t v26 = v35;
          sub_1B67EACC8(v35, v25);
          swift_release();
          v22(v26, v6);
        }
        uint64_t v15 = v30;
      }
      v16 += 16;
      --v14;
    }
    while (v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B687DB84(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1B6E31118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v56 = OBJC_IVAR____TtC3VFX13AuthoringNode_raw;
  uint64_t v12 = *(__objc2_class ***)(v11 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw);
  type metadata accessor for ImplicitNilNode(0);
  if (!swift_dynamicCastClass() && *v12 != _TtC3VFX20ImplicitConstantNode)
  {
    uint64_t v34 = *v12;
    type metadata accessor for ImplicitEnumConstantNode(0);
    if (!swift_dynamicCastClass())
    {
      type metadata accessor for ImplicitStateNode(0);
      uint64_t v35 = swift_dynamicCastClass();
      BOOL v36 = v34 == _TtC3VFX21ImplicitDecomposeNode || v34 == _TtC3VFX19ImplicitComposeNode;
      if (!v36 && v35 == 0)
      {
        type metadata accessor for ImplicitPartialComposeNode(0);
        if (!swift_dynamicCastClass())
        {
          type metadata accessor for ImplicitEntityAssetNode(0);
          if (!swift_dynamicCastClass())
          {
            type metadata accessor for ImplicitWorldReferenceNode(0);
            uint64_t v38 = swift_dynamicCastClass();
            if (v34 != _TtC3VFX24InspectorSetECSValueNode && v38 == 0)
            {
              type metadata accessor for InspectorSetWorldValueNode(0);
              if (!swift_dynamicCastClass()) {
                return 1;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v53 = a3;
  uint64_t v13 = *a2;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v54 = v11 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
  uint64_t v55 = v14;
  ((void (*)(char *))v14)(v10);
  swift_bridgeObjectRetain();
  char v15 = sub_1B677FC18((uint64_t)v10, v13);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v17 = v16(v10, v6);
  if (v15) {
    return 1;
  }
  uint64_t v52 = v6;
  uint64_t v19 = v56;
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(v11 + v56) + 152))(v57, v17);
  uint64_t v20 = v57[0];
  uint64_t v74 = v57[1];
  uint64_t v75 = v57[0];
  sub_1B62D8C3C((uint64_t)&v74);
  uint64_t v73 = v57[2];
  sub_1B62D8C3C((uint64_t)&v73);
  uint64_t v72 = v57[3];
  sub_1B62D8C3C((uint64_t)&v72);
  uint64_t v71 = v57[4];
  sub_1B62D8C3C((uint64_t)&v71);
  uint64_t v70 = v57[5];
  sub_1B62D8C3C((uint64_t)&v70);
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = sub_1B62D8C3C((uint64_t)&v75);
  if (!v21)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v11 + v19) + 152))(&v58, v22);
    uint64_t v45 = v59;
    uint64_t v68 = v58;
    uint64_t v69 = v59;
    sub_1B62D8C3C((uint64_t)&v68);
    uint64_t v67 = v60;
    sub_1B62D8C3C((uint64_t)&v67);
    uint64_t v66 = v61;
    sub_1B62D8C3C((uint64_t)&v66);
    uint64_t v65 = v62;
    sub_1B62D8C3C((uint64_t)&v65);
    uint64_t v64 = v63;
    sub_1B62D8C3C((uint64_t)&v64);
    uint64_t v46 = *(void *)(v45 + 16);
    sub_1B62D8C3C((uint64_t)&v69);
    if (v46)
    {
      uint64_t v47 = *a2;
      uint64_t v48 = v52;
      v55(v10, v54, v52);
      swift_bridgeObjectRetain();
      char v49 = sub_1B677FC18((uint64_t)v10, v47);
      swift_bridgeObjectRelease();
      v16(v10, v48);
      if ((v49 & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  uint64_t v51 = (void (*)(char *, uint64_t))v16;
  uint64_t v23 = *(void *)(v11 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(v23 + 32);
    uint64_t v26 = OBJC_IVAR____TtC3VFX13AuthoringNode_raw;
    do
    {
      uint64_t v28 = *v25;
      v25 += 2;
      uint64_t v27 = v28;
      if (v28)
      {
        uint64_t v29 = *(__objc2_class ***)(v27 + v26);
        type metadata accessor for ImplicitPartialComposeNode(0);
        if (swift_dynamicCastClass()) {
          return 1;
        }
        uint64_t v22 = swift_dynamicCastClass();
        if (!v22 && *v29 != _TtC3VFX20ImplicitConstantNode)
        {
          uint64_t v30 = *v29;
          type metadata accessor for ImplicitEnumConstantNode(0);
          uint64_t v22 = swift_dynamicCastClass();
          if (!v22)
          {
            type metadata accessor for ImplicitStateNode(0);
            uint64_t v22 = swift_dynamicCastClass();
            BOOL v31 = v30 == _TtC3VFX21ImplicitDecomposeNode
               || v30 == _TtC3VFX19ImplicitComposeNode;
            if (!v31 && v22 == 0)
            {
              type metadata accessor for ImplicitEntityAssetNode(0);
              uint64_t v22 = swift_dynamicCastClass();
              if (!v22)
              {
                type metadata accessor for ImplicitWorldReferenceNode(0);
                uint64_t v22 = swift_dynamicCastClass();
                if (v30 != _TtC3VFX24InspectorSetECSValueNode && v22 == 0)
                {
                  type metadata accessor for InspectorSetWorldValueNode(0);
                  uint64_t v22 = swift_dynamicCastClass();
                  if (!v22) {
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
    while (--v24);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v11 + v56) + 152))(&v58, v22);
  uint64_t v40 = v59;
  uint64_t v68 = v58;
  uint64_t v69 = v59;
  sub_1B62D8C3C((uint64_t)&v68);
  uint64_t v67 = v60;
  sub_1B62D8C3C((uint64_t)&v67);
  uint64_t v66 = v61;
  sub_1B62D8C3C((uint64_t)&v66);
  uint64_t v65 = v62;
  sub_1B62D8C3C((uint64_t)&v65);
  uint64_t v64 = v63;
  sub_1B62D8C3C((uint64_t)&v64);
  uint64_t v41 = *(void *)(v40 + 16);
  sub_1B62D8C3C((uint64_t)&v69);
  if (v41)
  {
    uint64_t v42 = *v53;
    uint64_t v43 = v52;
    v55(v10, v54, v52);
    swift_bridgeObjectRetain();
    char v44 = sub_1B677FC18((uint64_t)v10, v42);
    swift_bridgeObjectRelease();
    v51(v10, v43);
    if (v44) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B687E1F8(uint64_t *a1)
{
  return sub_1B6D416F8(a1, v1);
}

uint64_t sub_1B687E200(uint64_t a1)
{
  return sub_1B683D18C(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1B687E21C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B687CFDC(a1, a2);
}

uint64_t sub_1B687E238(uint64_t *a1)
{
  return sub_1B687D834(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B687E240(uint64_t *a1)
{
  return sub_1B687DB84(a1, *(uint64_t **)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1B687E248(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  return v2(&v4) & 1;
}

uint64_t sub_1B687E288@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(_OWORD *))(v2 + 16);
  long long v6 = a1[1];
  v8[0] = *a1;
  v8[1] = v6;
  _OWORD v8[2] = a1[2];
  uint64_t result = sub_1B687CCEC((uint64_t)v8, v5);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B687E2D4(uint64_t *a1)
{
  return sub_1B6C4B2A8(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1B687E2DC(unint64_t a1, uint64_t a2)
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    uint64_t v4 = sub_1B6E32C18();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = MEMORY[0x1BA9B4580](v5, a1);
          if (!*(void *)(a2 + 16)) {
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
          swift_retain();
          if (!*(void *)(a2 + 16)) {
            goto LABEL_4;
          }
        }
        unint64_t v7 = sub_1B62C1A30(v6);
        if ((v8 & 1) != 0 && *(void *)(*(void *)(*(void *)(a2 + 56) + 8 * v7) + 16))
        {
          swift_release();
          goto LABEL_5;
        }
LABEL_4:
        sub_1B6E32A08();
        sub_1B6E32A68();
        sub_1B6E32A78();
        sub_1B6E32A28();
LABEL_5:
        if (v4 == ++v5) {
          return v10;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

void *sub_1B687E420(unint64_t a1, uint64_t a2)
{
  if ((sub_1B69B18E4(a1, 0x8000000000000060) & 1) == 0
    && (sub_1B69B18E4(a1, 0x80000000000000B0) & 1) == 0
    && (sub_1B69B18E4(a1, 0x8000000000000010) & 1) == 0
    && (sub_1B69B18E4(a1, 0x8000000000000068) & 1) == 0
    && (sub_1B69B18E4(a1, 0x8000000000000020) & 1) == 0
    && (sub_1B69B18E4(a1, 0x8000000000000090) & 1) == 0
    && (sub_1B69B18E4(a1, 0x80000000000000B8) & 1) == 0)
  {
    uint64_t v4 = 0;
    unint64_t v5 = a1 >> 60;
    if ((a1 >> 60) > 8) {
      return v4;
    }
    if (((1 << v5) & 0x35) == 0)
    {
      if (v5 == 1)
      {
        unint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        unint64_t v15 = v14 >> 60;
        if (v14 >> 60 == 1
          || v15 == 8 && (unint64_t v16 = v14 + 0x7FFFFFFFFFFFFFD0, v16 <= 0x10) && ((1 << v16) & 0x10101) != 0)
        {
          if (v15 != 1) {
            return 0;
          }
        }
      }
      else
      {
        if (v5 != 8) {
          return v4;
        }
        uint64_t v4 = 0;
        *((void *)&v13 + 1) = a1;
        *(void *)&long long v13 = a1 + 0x7FFFFFFFFFFFFFD0;
        unint64_t v12 = v13 >> 3;
        if (v12 > 5 || v12 == 3) {
          return v4;
        }
      }
    }
  }
  sub_1B687E970(a2, (uint64_t)v25);
  if (!v26)
  {
LABEL_28:
    sub_1B687E8BC((uint64_t)v25);
    return sub_1B6D49898(1, a1);
  }
  sub_1B687E970((uint64_t)v25, (uint64_t)v24);
  char v6 = sub_1B69B18E4(v24[0], 0x8000000000000000);
  sub_1B66506CC((uint64_t)v24, (uint64_t)&v22);
  if (v6)
  {
    sub_1B62CAAD8((uint64_t)v23, (uint64_t)v20);
    sub_1B6650728((uint64_t)&v22);
    if (swift_dynamicCast() && *(void *)&v18[0] == 1)
    {
      sub_1B6650728((uint64_t)v24);
      sub_1B687E8BC((uint64_t)v25);
      return 0;
    }
  }
  else
  {
    sub_1B6650728((uint64_t)&v22);
  }
  sub_1B66506CC((uint64_t)v24, (uint64_t)&v22);
  char v7 = sub_1B69B18E4(v22, 0x8000000000000000);
  sub_1B66506CC((uint64_t)&v22, (uint64_t)v20);
  if (v7)
  {
    sub_1B62CAAD8((uint64_t)&v21, (uint64_t)v18);
    sub_1B6650728((uint64_t)v20);
    if (swift_dynamicCast() && !v17[0])
    {
      sub_1B6650728((uint64_t)&v22);
      char v8 = sub_1B69B18E4(v24[0], 0x8000000000000000);
      sub_1B66506CC((uint64_t)v24, (uint64_t)&v22);
      if (v8)
      {
        sub_1B62CAAD8((uint64_t)v23, (uint64_t)v20);
        sub_1B6650728((uint64_t)&v22);
        swift_dynamicCast();
      }
      else
      {
        sub_1B6650728((uint64_t)&v22);
      }
      sub_1B6650728((uint64_t)v24);
      goto LABEL_28;
    }
  }
  else
  {
    sub_1B6650728((uint64_t)v20);
  }
  sub_1B62CAAD8((uint64_t)v23, (uint64_t)v17);
  sub_1B687E9D4();
  if (swift_dynamicCast())
  {
    sub_1B62C15C4(v18, (uint64_t)v20);
    sub_1B62C1550((uint64_t)v20, (uint64_t)v18);
    type metadata accessor for ImplicitEnumConstantNode(0);
    uint64_t v4 = (void *)swift_allocObject();
    sub_1B62C1550((uint64_t)v18, (uint64_t)v17);
    sub_1B62C1550((uint64_t)v17, (uint64_t)v4 + OBJC_IVAR____TtC3VFX16EnumConstantNode_value);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    v4[3] = 0;
    v4[4] = 0;
    v4[2] = v9;
    sub_1B6E31108();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v17);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v20);
  }
  else
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_1B687EA2C((uint64_t)v18);
    sub_1B66506CC((uint64_t)&v22, (uint64_t)v20);
    type metadata accessor for ImplicitConstantNode(0);
    uint64_t v4 = (void *)swift_allocObject();
    sub_1B66506CC((uint64_t)v20, (uint64_t)v18);
    uint64_t v10 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
    sub_1B66506CC((uint64_t)v18, (uint64_t)v4 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
    *(_OWORD *)((char *)v4 + v10) = xmmword_1B6E50D30;
    v4[2] = MEMORY[0x1E4FBC860];
    v4[3] = 0;
    v4[4] = 0;
    sub_1B6E31108();
    sub_1B6650728((uint64_t)v18);
    sub_1B6650728((uint64_t)v20);
  }
  sub_1B6650728((uint64_t)&v22);
  sub_1B6650728((uint64_t)v24);
  sub_1B687E8BC((uint64_t)v25);
  return v4;
}

uint64_t sub_1B687E8BC(uint64_t a1)
{
  sub_1B687E918();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B687E918()
{
  if (!qword_1E9DD1880)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1880);
    }
  }
}

uint64_t sub_1B687E970(uint64_t a1, uint64_t a2)
{
  sub_1B687E918();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B687E9D4()
{
  unint64_t result = qword_1E9DD1888;
  if (!qword_1E9DD1888)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD1888);
  }
  return result;
}

uint64_t sub_1B687EA2C(uint64_t a1)
{
  sub_1B63BDD8C(0, &qword_1E9DD1890, (void (*)(uint64_t))sub_1B687E9D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B687EAA4(uint64_t a1)
{
  return sub_1B687E200(a1);
}

void sub_1B687EABC()
{
}

uint64_t sub_1B687EB10()
{
  return type metadata accessor for GraphicsNode(0);
}

uint64_t type metadata accessor for GraphicsNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1898);
}

uint64_t sub_1B687EB38()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t sub_1B687EB5C(char a1)
{
  return (*(uint64_t (**)(void))(*(void *)v1 + 248))(a1 & 1);
}

uint64_t sub_1B687EB84()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t sub_1B687EBB0@<X0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76B30;
  *(void *)(v2 + 32) = 0x8000000000000038;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000050;
  *(void *)(v2 + 40) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000050;
  *(void *)(v4 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v4;
  a1[2] = (uint64_t)&unk_1F0F70B08;
  a1[3] = (uint64_t)&unk_1F0F70AC8;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v6;
  return result;
}

uint64_t sub_1B687ECAC()
{
  return 0x657461756C617645;
}

unint64_t sub_1B687ECD0(char a1)
{
  unint64_t v3 = 0xD000000000000021;
  uint64_t v4 = *(void *)(v1 + 24);
  unint64_t v5 = *(void *)(v4 + 32);
  sub_1B68289A0(v4);
  sub_1B67C52A4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (sub_1B69B18E4(v5, 0x8000000000000088))
  {
    sub_1B678FC34(v5);
    if (a1) {
      return 0xD000000000000023;
    }
    else {
      return 0xD000000000000025;
    }
  }
  else
  {
    sub_1B678FC34(v5);
  }
  return v3;
}

uint64_t sub_1B687EDA8()
{
  return type metadata accessor for EvaluateCurveNode(0);
}

uint64_t type metadata accessor for EvaluateCurveNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD18A8);
}

double sub_1B687EDD4@<D0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76B30;
  *(void *)(v2 + 32) = 0x8000000000000040;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000050;
  *(void *)(v2 + 40) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v6 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v5 + 16) = v6 | 0x1000000000000000;
  *(void *)(v4 + 32) = v5 | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v4;
  a1[2] = (uint64_t)&unk_1F0F84EE8;
  a1[3] = (uint64_t)&unk_1F0F84EA8;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v8;
  return result;
}

unint64_t sub_1B687EEF8()
{
  return 0xD000000000000012;
}

unint64_t sub_1B687EF14(char a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = *(void *)(v3 + 32);
  sub_1B68289A0(v3);
  sub_1B67C52A4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (sub_1B69B18E4(v4, 0x8000000000000078))
  {
    sub_1B678FC34(v4);
    if (a1) {
      return 0xD000000000000021;
    }
    else {
      return 0xD000000000000023;
    }
  }
  else
  {
    sub_1B678FC34(v4);
    return 0xD000000000000026;
  }
}

uint64_t sub_1B687EFE4()
{
  return type metadata accessor for EvaluateColorRampNode(0);
}

uint64_t type metadata accessor for EvaluateColorRampNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD18B8);
}

uint64_t sub_1B687F00C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77D10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0x8000000000000070;
  *(void *)(v2 + 32) = v3 | 0x6000000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0x8000000000000050;
  *(void *)(v2 + 40) = v4 | 0x6000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000038;
  *(void *)(v2 + 48) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000070;
  *(void *)(v6 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v6;
  a1[2] = (uint64_t)&unk_1F0F5BDA0;
  a1[3] = (uint64_t)&unk_1F0F5BD50;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[4] = MEMORY[0x1E4FBC860];
  a1[5] = v8;
  return result;
}

unint64_t sub_1B687F140()
{
  return 0xD0000000000000A1;
}

uint64_t sub_1B687F15C()
{
  return type metadata accessor for SetColorNode(0);
}

uint64_t type metadata accessor for SetColorNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD18C8);
}

double sub_1B687F184@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F65030, a1, (__n128)xmmword_1B6E8DAD0).n128_u64[0];
  return result;
}

uint64_t sub_1B687F198()
{
  return 0x206F742041424752;
}

uint64_t sub_1B687F1B8()
{
  return type metadata accessor for RGBAToHSBANode(0);
}

uint64_t type metadata accessor for RGBAToHSBANode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD18D8);
}

double sub_1B687F1E0@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F5AFF0, a1, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

__n128 sub_1B687F1F4@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_allocObject();
  *(__n128 *)(v7 + 16) = a3;
  *(void *)(v6 + 16) = v7 | 0x1000000000000000;
  *(void *)(v5 + 32) = v6 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = swift_allocObject();
  __n128 result = a3;
  *(__n128 *)(v10 + 16) = a3;
  *(void *)(v9 + 16) = v10 | 0x1000000000000000;
  *(void *)(v8 + 32) = v9 | 0x6000000000000000;
  *a2 = v5;
  a2[1] = v8;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  a2[2] = a1;
  a2[3] = v12;
  a2[4] = v12;
  a2[5] = v12;
  return result;
}

uint64_t sub_1B687F330()
{
  return 0x48206F7420424752;
}

unint64_t sub_1B687F34C()
{
  return 0xD000000000000012;
}

uint64_t sub_1B687F368()
{
  return type metadata accessor for RGBToHSBNode(0);
}

uint64_t type metadata accessor for RGBToHSBNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD18E8);
}

double sub_1B687F390@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F64380, a1, (__n128)xmmword_1B6E8DAD0).n128_u64[0];
  return result;
}

uint64_t sub_1B687F3A4()
{
  return 0x206F742041425348;
}

uint64_t sub_1B687F3C4()
{
  return type metadata accessor for HSBAToRGBANode(0);
}

uint64_t type metadata accessor for HSBAToRGBANode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD18F8);
}

double sub_1B687F3EC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F5A420, a1, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

uint64_t sub_1B687F400()
{
  return 0x52206F7420425348;
}

unint64_t sub_1B687F41C()
{
  return 0xD000000000000012;
}

uint64_t sub_1B687F438()
{
  return type metadata accessor for HSBToRGBNode(0);
}

uint64_t type metadata accessor for HSBToRGBNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1908);
}

double sub_1B687F460@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F753B8, a1, (__n128)xmmword_1B6E8DAD0).n128_u64[0];
  return result;
}

uint64_t sub_1B687F474()
{
  return 0x6F74204142475273;
}

unint64_t sub_1B687F498()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_1B687F4B4()
{
  return type metadata accessor for sRGBAToLinearNode(0);
}

uint64_t type metadata accessor for sRGBAToLinearNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1918);
}

double sub_1B687F4DC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F70148, a1, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

uint64_t sub_1B687F4F0()
{
  return 0x206F742042475273;
}

unint64_t sub_1B687F514()
{
  return 0xD000000000000016;
}

uint64_t sub_1B687F530()
{
  return type metadata accessor for sRGBToLinearNode(0);
}

uint64_t type metadata accessor for sRGBToLinearNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1928);
}

double sub_1B687F558@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F71AD8, a1, (__n128)xmmword_1B6E8DAD0).n128_u64[0];
  return result;
}

uint64_t sub_1B687F56C()
{
  return 0x74207261656E694CLL;
}

unint64_t sub_1B687F590()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_1B687F5AC()
{
  return type metadata accessor for LinearTosRGBANode(0);
}

uint64_t type metadata accessor for LinearTosRGBANode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1938);
}

double sub_1B687F5D4@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F6CA48, a1, (__n128)xmmword_1B6E8DAE0).n128_u64[0];
  return result;
}

unint64_t sub_1B687F5E8()
{
  return 0xD000000000000016;
}

uint64_t sub_1B687F604()
{
  return type metadata accessor for LinearTosRGBNode(0);
}

uint64_t type metadata accessor for LinearTosRGBNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1948);
}

double sub_1B687F62C@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1B687F1F4((uint64_t)&unk_1F0F8C178, a1, (__n128)xmmword_1B6E8DAD0).n128_u64[0];
  return result;
}

unint64_t sub_1B687F640()
{
  return 0xD000000000000013;
}

unint64_t sub_1B687F65C()
{
  return 0xD000000000000024;
}

uint64_t sub_1B687F678()
{
  return type metadata accessor for AlphaPremultipliedNode(0);
}

uint64_t type metadata accessor for AlphaPremultipliedNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1958);
}

uint64_t sub_1B687F6A0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B687F6D8()
{
  unint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX11SamplerNode_textureType);
  if (v1 < 3) {
    return (v1 << 56) + 0x3165727574786554;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B687F774@<X0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77D10;
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)(v4 + 16) = v5 | 0x4000000000000000;
  *(void *)(v3 + 32) = v4 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0x8000000000000020;
  *(void *)(v3 + 40) = v6 | 0x6000000000000000;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0x8000000000000020;
  *(void *)(v3 + 48) = v7 | 0x6000000000000000;
  sub_1B68805E0(0, &qword_1E9DD1998);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 64) = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77D10;
  *(_OWORD *)(v8 + 32) = xmmword_1B6E8DAF0;
  uint64_t v19 = &type metadata for AddressMode;
  LOBYTE(v18[0]) = 2;
  sub_1B62C14BC(v18, (uint64_t)&type metadata for AddressMode);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v10 = sub_1B69B1CC4(DynamicType);
  if ((~v10 & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  unint64_t v11 = v10;
  sub_1B62CAAD8((uint64_t)v18, v8 + 80);
  *(void *)(v8 + 72) = v11;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);
  uint64_t v19 = &type metadata for FilterMode;
  LOBYTE(v18[0]) = 1;
  sub_1B62C14BC(v18, (uint64_t)&type metadata for FilterMode);
  uint64_t v12 = swift_getDynamicType();
  unint64_t v13 = sub_1B69B1CC4(v12);
  if ((~v13 & 0xF000000000000007) != 0)
  {
    unint64_t v14 = v13;
    sub_1B62CAAD8((uint64_t)v18, v8 + 120);
    *(void *)(v8 + 112) = v14;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1B6E77050;
    uint64_t v16 = swift_allocObject();
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = *(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX11SamplerNode_textureType);
    *(void *)(v16 + 16) = result | 0x6000000000000000;
    *(void *)(v15 + 32) = v16 | 0x6000000000000000;
    *a1 = v3;
    a1[1] = v15;
    a1[2] = (uint64_t)&unk_1F0F573C0;
    a1[3] = (uint64_t)&unk_1F0F57340;
    a1[4] = (uint64_t)&unk_1F0F57390;
    a1[5] = v8;
  }
  else
  {
LABEL_4:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void *sub_1B687FA94(void *a1)
{
  return sub_1B6880154(a1, &OBJC_IVAR____TtC3VFX11SamplerNode_textureType);
}

uint64_t sub_1B687FAA0()
{
  return 0x306D6172617025;
}

uint64_t sub_1B687FAB8()
{
  uint64_t v1 = v0;
  swift_retain();
  uint64_t v2 = sub_1B6C7EB80();
  swift_release();
  sub_1B68805E0(0, &qword_1EB980BA8);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 33) = *(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX11SamplerNode_textureType);
  *(_WORD *)(v4 + 34) = 258;
  *(void *)(v3 + 32) = v4 | 0x7000000000000000;
  *(unsigned char *)(v3 + 40) = 1;
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = 1;
  return v3;
}

void sub_1B687FB84()
{
}

uint64_t sub_1B687FBB4()
{
  return type metadata accessor for SamplerNode(0);
}

uint64_t type metadata accessor for SamplerNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1968);
}

uint64_t sub_1B687FBE0(void *a1)
{
  return sub_1B688038C(a1);
}

uint64_t sub_1B687FC00(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688042C(a1, a2, a3, &OBJC_IVAR____TtC3VFX11SamplerNode_textureType);
}

uint64_t sub_1B687FC20()
{
  unint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX10SampleNode_textureType);
  if (v1 < 3) {
    return (v1 << 48) + 0x4431656C706D6153;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B687FCB8@<X0>(uint64_t *a1@<X8>)
{
  sub_1B68805E0(0, (unint64_t *)&qword_1E9DD1D50);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E85730;
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = *(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX10SampleNode_textureType);
  *(void *)(v4 + 16) = v5 | 0x6000000000000000;
  *(void *)(v3 + 32) = v4 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1B6880080();
  *(void *)(v3 + 40) = v6 | 0x6000000000000000;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1B6880080();
  *(void *)(v3 + 48) = v7 | 0x6000000000000000;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1B6880080();
  *(void *)(v3 + 56) = v8 | 0x6000000000000000;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E8DAD0;
  *(void *)(v10 + 16) = v11 | 0x1000000000000000;
  *(void *)(v9 + 32) = v10 | 0x6000000000000000;
  sub_1B68805E0(0, &qword_1E9DD1998);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 64) = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v12 + 16) = xmmword_1B6E85730;
  *(_OWORD *)(v12 + 32) = xmmword_1B6E8DB00;
  unint64_t v13 = sub_1B6880080();
  sub_1B69AFB0C(v13, (uint64_t)v26, 0.5);
  sub_1B678FC34(v13);
  sub_1B62C14BC(v26, v27);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v15 = sub_1B69B1CC4(DynamicType);
  if ((~v15 & 0xF000000000000007) == 0) {
    goto LABEL_5;
  }
  unint64_t v16 = v15;
  sub_1B62CAAD8((uint64_t)v26, v12 + 80);
  *(void *)(v12 + 72) = v16;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
  unint64_t v17 = sub_1B6880080();
  sub_1B69AFB0C(v17, (uint64_t)v26, 1.0);
  sub_1B678FC34(v17);
  sub_1B62C14BC(v26, v27);
  uint64_t v18 = swift_getDynamicType();
  unint64_t v19 = sub_1B69B1CC4(v18);
  if ((~v19 & 0xF000000000000007) == 0) {
    goto LABEL_5;
  }
  unint64_t v20 = v19;
  sub_1B62CAAD8((uint64_t)v26, v12 + 120);
  *(void *)(v12 + 112) = v20;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
  unint64_t v21 = sub_1B6880080();
  sub_1B69AFB0C(v21, (uint64_t)v26, 0.0);
  sub_1B678FC34(v21);
  sub_1B62C14BC(v26, v27);
  uint64_t v22 = swift_getDynamicType();
  unint64_t v23 = sub_1B69B1CC4(v22);
  if ((~v23 & 0xF000000000000007) != 0)
  {
    unint64_t v24 = v23;
    sub_1B62CAAD8((uint64_t)v26, v12 + 160);
    *(void *)(v12 + 152) = v24;
    uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v26);
    *a1 = v3;
    a1[1] = v9;
    a1[2] = (uint64_t)&unk_1F0F53A30;
    a1[3] = (uint64_t)&unk_1F0F539A0;
    a1[4] = (uint64_t)&unk_1F0F53A00;
    a1[5] = v12;
  }
  else
  {
LABEL_5:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6880080()
{
  unint64_t v1 = 0x8000000000000050;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX10SampleNode_textureType);
  if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX10SampleNode_textureType)) {
    return v1;
  }
  if (v2 == 1)
  {
    uint64_t v3 = 2;
LABEL_6:
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = 0x8000000000000050;
    return v4 | 0x1000000000000000;
  }
  if (v2 == 2)
  {
    uint64_t v3 = 3;
    goto LABEL_6;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void *sub_1B6880148(void *a1)
{
  return sub_1B6880154(a1, &OBJC_IVAR____TtC3VFX10SampleNode_textureType);
}

void *sub_1B6880154(void *a1, void *a2)
{
  *(unsigned char *)(swift_allocObject() + *a2) = *((unsigned char *)a1 + *a2);
  return sub_1B682A2AC(a1);
}

uint64_t sub_1B68801A8(char a1)
{
  if (a1) {
    return 0xD000000000000035;
  }
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC3VFX10SampleNode_textureType);
  if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX10SampleNode_textureType) || v2 == 2 || v2 == 1)
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    return 0xD00000000000001BLL;
  }
  else
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void sub_1B68802D0()
{
}

uint64_t sub_1B6880300()
{
  return type metadata accessor for SampleNode(0);
}

uint64_t type metadata accessor for SampleNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1978);
}

uint64_t sub_1B6880328()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B688036C(void *a1)
{
  return sub_1B688038C(a1);
}

uint64_t sub_1B688038C(void *a1)
{
  return sub_1B6C0C6E4();
}

uint64_t sub_1B688040C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688042C(a1, a2, a3, &OBJC_IVAR____TtC3VFX10SampleNode_textureType);
}

uint64_t sub_1B688042C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68804B8();
  uint64_t result = sub_1B6C0C780();
  if (!v5) {
    *(unsigned char *)(v4 + *a4) = v8;
  }
  return result;
}

unint64_t sub_1B68804B8()
{
  unint64_t result = qword_1E9DD1988;
  if (!qword_1E9DD1988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1988);
  }
  return result;
}

unint64_t sub_1B688050C()
{
  unint64_t result = qword_1E9DD1990;
  if (!qword_1E9DD1990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1990);
  }
  return result;
}

uint64_t sub_1B6880560()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6880598()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1B68805A8()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B68805E0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B6E330A8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1B6880628()
{
  sub_1B6654718(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return MEMORY[0x1F4186498](v0, 36, 7);
}

uint64_t PixelFormatDepth.init(rawValue:)(unsigned __int8 a1)
{
  if (a1 <= 2u) {
    unsigned __int8 v1 = a1;
  }
  else {
    unsigned __int8 v1 = 0;
  }
  return v1 | ((a1 > 2u) << 8);
}

void *static PixelFormatDepth.allCases.getter()
{
  return &unk_1F0F6ECF0;
}

unsigned __int8 *sub_1B68806A0@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = *result;
  BOOL v3 = v2 > 2;
  if (v2 > 2) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  a2[1] = v3;
  return result;
}

void sub_1B68806BC(void *a1@<X8>)
{
  *a1 = &unk_1F0F6ED18;
}

uint64_t sub_1B68806CC()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B688072C()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B68807EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B688088C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene__version);
  if (v1 <= 0)
  {
    unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_effects);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v3 = sub_1B6E32C18();
      if (v3)
      {
LABEL_4:
        if ((v2 & 0xC000000000000001) != 0)
        {
          uint64_t v1 = 0;
          uint64_t v4 = 0;
          do
          {
            uint64_t v5 = MEMORY[0x1BA9B4580](v4++, v2);
            uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC3VFX9VFXEffect_version);
            swift_unknownObjectRelease();
            if (v1 <= v6) {
              uint64_t v1 = v6;
            }
          }
          while (v3 != v4);
        }
        else
        {
          if (v3 >= 2)
          {
            uint64_t v8 = 0;
            uint64_t v9 = 0;
            unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFFELL;
            uint64_t v10 = (void *)(v2 + 40);
            unint64_t v11 = v3 & 0xFFFFFFFFFFFFFFFELL;
            do
            {
              if (v8 <= *(void *)(*(v10 - 1) + OBJC_IVAR____TtC3VFX9VFXEffect_version)) {
                uint64_t v8 = *(void *)(*(v10 - 1) + OBJC_IVAR____TtC3VFX9VFXEffect_version);
              }
              if (v9 <= *(void *)(*v10 + OBJC_IVAR____TtC3VFX9VFXEffect_version)) {
                uint64_t v9 = *(void *)(*v10 + OBJC_IVAR____TtC3VFX9VFXEffect_version);
              }
              v10 += 2;
              v11 -= 2;
            }
            while (v11);
            if (v8 <= v9) {
              uint64_t v1 = v9;
            }
            else {
              uint64_t v1 = v8;
            }
            if (v3 == v7) {
              goto LABEL_26;
            }
          }
          else
          {
            uint64_t v1 = 0;
            unint64_t v7 = 0;
          }
          unint64_t v12 = v3 - v7;
          unint64_t v13 = (uint64_t *)(v2 + 8 * v7 + 32);
          do
          {
            uint64_t v14 = *v13++;
            uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC3VFX9VFXEffect_version);
            if (v1 <= v15) {
              uint64_t v1 = v15;
            }
            --v12;
          }
          while (v12);
        }
LABEL_26:
        swift_bridgeObjectRelease();
        return v1;
      }
    }
    else
    {
      unint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v3) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v1;
}

uint64_t sub_1B6880A1C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_isAuthoringWorld);
}

uint64_t sub_1B6880A3C(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_isAuthoringWorld) = result;
  return result;
}

double (*sub_1B6880A4C())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880A84()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_isVFX2);
}

uint64_t sub_1B6880AA4(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_isVFX2) = result;
  return result;
}

double (*sub_1B6880AB4())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880AEC()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_enableRuntimeScriptCompilation);
}

uint64_t sub_1B6880B0C(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_enableRuntimeScriptCompilation) = result;
  return result;
}

double (*sub_1B6880B1C())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880B54()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_allowLoadingFromFuture);
}

uint64_t sub_1B6880B74(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_allowLoadingFromFuture) = result;
  return result;
}

double (*sub_1B6880B84())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880BBC()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_setupAsTemplate);
}

double (*sub_1B6880BDC())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880C14()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_automaticallyPrepareScene);
}

uint64_t sub_1B6880C34(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_automaticallyPrepareScene) = result;
  return result;
}

double (*sub_1B6880C44())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880C7C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_setupAsyncRuntime);
}

uint64_t sub_1B6880C9C(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_setupAsyncRuntime) = result;
  return result;
}

double (*sub_1B6880CAC())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880D04()
{
  return *(void *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_asyncRuntimeLock);
}

uint64_t sub_1B6880D24(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_asyncRuntimeLock) = result;
  return result;
}

double (*sub_1B6880D34())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880D6C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_loadBindingsMetadata);
}

double (*sub_1B6880D8C())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880DC4()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_enableParallelDecoding);
}

uint64_t sub_1B6880DE4(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_enableParallelDecoding) = result;
  return result;
}

double (*sub_1B6880DF4())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880E2C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_setupRenderer);
}

uint64_t sub_1B6880E4C(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_setupRenderer) = result;
  return result;
}

double (*sub_1B6880E5C())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880E94()
{
  return *(void *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_colorPixelFormat);
}

uint64_t sub_1B6880EB4(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_colorPixelFormat) = result;
  return result;
}

double (*sub_1B6880EC4())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880EFC()
{
  return *(void *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_depthPixelFormat);
}

uint64_t sub_1B6880F1C(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_depthPixelFormat) = result;
  return result;
}

double (*sub_1B6880F2C())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880F54()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering);
}

uint64_t sub_1B6880F64(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering) = result;
  return result;
}

double (*sub_1B6880F74())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6880FBC()
{
  return (*(unsigned char *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering) == 2) | *(unsigned char *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering) & 1u;
}

uint64_t (*sub_1B6880FEC(uint64_t a1))(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering);
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = (v3 == 2) | v3 & 1;
  return sub_1B6881030;
}

uint64_t sub_1B6881030(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(void *)(result + 8)) = *(unsigned char *)(result + 16);
  return result;
}

uint64_t sub_1B6881050()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_internalPixelFormatDepth);
}

uint64_t sub_1B6881070(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_internalPixelFormatDepth) = result;
  return result;
}

double (*sub_1B6881080())(void)
{
  return nullsub_1;
}

uint64_t sub_1B68810B8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_useGammaBlending);
}

uint64_t sub_1B68810D8(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_useGammaBlending) = result;
  return result;
}

double (*sub_1B68810E8())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6881120()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_doNotClearRenderOutput);
}

uint64_t sub_1B6881140(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_doNotClearRenderOutput) = result;
  return result;
}

double (*sub_1B6881150())(void)
{
  return nullsub_1;
}

uint64_t sub_1B68811AC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B68811C8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_device) = a1;
  return swift_unknownObjectRelease();
}

double (*sub_1B68811E0())(void)
{
  return nullsub_1;
}

uint64_t sub_1B688123C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B6881258(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)(a1 + *a4) = a3;
  swift_unknownObjectRetain();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B688129C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_commandQueue) = a1;
  return swift_unknownObjectRelease();
}

double (*sub_1B68812B4())(void)
{
  return nullsub_1;
}

uint64_t sub_1B688134C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_clientID);
  swift_bridgeObjectRetain();
  return v1;
}

double (*sub_1B68813E8())(void)
{
  return nullsub_1;
}

uint64_t sub_1B688141C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B663AB08(v1 + OBJC_IVAR___VFXSceneLoadOptions_metalLibraryURL, a1);
}

double (*sub_1B688143C())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6881494()
{
  return *(unsigned int *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_peerPid);
}

uint64_t sub_1B68814B4(uint64_t result)
{
  *(_DWORD *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_peerPid) = result;
  return result;
}

double (*sub_1B68814C4())(void)
{
  return nullsub_1;
}

uint64_t sub_1B68814FC()
{
  return *(unsigned int *)(v0 + OBJC_IVAR___VFXSceneLoadOptions_peerTaskIdentity);
}

uint64_t sub_1B688151C(uint64_t result)
{
  *(_DWORD *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_peerTaskIdentity) = result;
  return result;
}

double (*sub_1B688152C())(void)
{
  return nullsub_1;
}

id VFXScene.LoadOptions.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id VFXScene.LoadOptions.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VFXScene.LoadOptions(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B6881630(uint64_t a1)
{
  objc_super v2 = self;
  objc_msgSend(v2, sel_setCurrentThreadImmediateMode_, 1);
  int v3 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_loadOptions) + OBJC_IVAR___VFXSceneLoadOptions_world);
  id v4 = v3;
  if (v3)
  {
    id v5 = v4;
    objc_msgSend(v2, sel_setImmediateModeRestrictedContext_);
  }
}

id VFXScene.__allocating_init(options:)(unsigned char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return VFXScene.init(options:)(a1);
}

id VFXScene.init()()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC3VFX8VFXScene_loader;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B639AB38();
  *(void *)&v0[v2] = v3;
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = 0;
  v0[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_effects] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityObjects] = v4;
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene__version] = 0;
  v0[OBJC_IVAR____TtC3VFX8VFXScene_isInsideRE] = 0;
  v0[OBJC_IVAR____TtC3VFX8VFXScene_isREAssetScene] = 0;
  uint64_t v5 = OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall;
  id v6 = objc_allocWithZone((Class)type metadata accessor for VFXREDrawCall());
  unint64_t v7 = v1;
  *(void *)&v1[v5] = objc_msgSend(v6, sel_init);
  v7[OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager] = 0;
  *(void *)&v7[OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL];
  uint64_t v9 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)&v7[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat] = 115;
  v7[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth] = 1;
  v7[OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending] = 0;
  *(void *)&v7[OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions] = 0;
  type metadata accessor for EntityManager();
  swift_allocObject();
  *(void *)&v7[OBJC_IVAR____TtC3VFX8VFXScene_entityManager] = sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
  *(void *)&v7[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFXScene.LoadOptions(0)), sel_init);

  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for VFXScene(0);
  id v10 = objc_msgSendSuper2(&v13, sel_init);
  uint64_t v11 = swift_retain();
  sub_1B628ACE0(v11);
  swift_release();
  if (qword_1EB97F010 != -1) {
    swift_once();
  }

  return v10;
}

char *VFXScene.__allocating_init(contentsOf:options:)(unint64_t a1, void *a2)
{
  uint64_t v24 = type metadata accessor for BundleInfo();
  MEMORY[0x1F4188790](v24, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  unint64_t v12 = (char *)&v24 - v11;
  id v13 = objc_allocWithZone(v2);
  id v25 = a2;
  id v14 = objc_msgSend(v13, sel_initWithOptions_, a2);
  uint64_t v15 = qword_1EB97F010;
  unint64_t v16 = (char *)v14;
  if (v15 != -1) {
    swift_once();
  }
  unint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  char v26 = 1;
  unint64_t v18 = a1;
  unint64_t v19 = sub_1B639AB54((uint64_t)v8, a1, 0, v17, 0x100000000uLL);
  if (v3)
  {
  }
  else
  {
    unint64_t v20 = v19;
    sub_1B6887628((uint64_t)v8, (uint64_t)v12);
    v20(v17, 7, 0);
    *(void *)&v16[OBJC_IVAR____TtC3VFX8VFXScene__version] = *(void *)&v12[*(int *)(v24 + 24)];
    *(void *)(v17 + 16) = sub_1B6E30E58();
    *(void *)(v17 + 24) = v23;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B67E9670((uint64_t)v12);
  }
  uint64_t v21 = sub_1B6E30F48();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v18, v21);
  return v16;
}

char *VFXScene.init(contentsOf:options:)(unint64_t a1, void *a2)
{
  uint64_t v24 = type metadata accessor for BundleInfo();
  MEMORY[0x1F4188790](v24, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = MEMORY[0x1F4188790](v9, v10);
  id v13 = (char *)&v24 - v12;
  id v25 = a2;
  id v14 = objc_msgSend(v2, sel_initWithOptions_, a2, v11);
  uint64_t v15 = qword_1EB97F010;
  unint64_t v16 = (char *)v14;
  if (v15 != -1) {
    swift_once();
  }
  unint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  char v26 = 1;
  unint64_t v18 = a1;
  unint64_t v19 = sub_1B639AB54((uint64_t)v8, a1, 0, v17, 0x100000000uLL);
  if (v3)
  {
  }
  else
  {
    unint64_t v20 = v19;
    sub_1B6887628((uint64_t)v8, (uint64_t)v13);
    v20(v17, 7, 0);
    *(void *)&v16[OBJC_IVAR____TtC3VFX8VFXScene__version] = *(void *)&v13[*(int *)(v24 + 24)];
    *(void *)(v17 + 16) = sub_1B6E30E58();
    *(void *)(v17 + 24) = v23;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B67E9670((uint64_t)v13);
  }
  uint64_t v21 = sub_1B6E30F48();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v18, v21);
  return v16;
}

char *VFXScene.__allocating_init(contentsOf:)(unint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return VFXScene.init(contentsOf:)(a1);
}

char *VFXScene.init(contentsOf:)(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v35 = type metadata accessor for BundleInfo();
  MEMORY[0x1F4188790](v35, v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v36 = (uint64_t)&v35 - v9;
  uint64_t v10 = OBJC_IVAR____TtC3VFX8VFXScene_loader;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B639AB38();
  *(void *)&v1[v10] = v11;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_effects] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityObjects] = v12;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene__version] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isInsideRE] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isREAssetScene] = 0;
  uint64_t v13 = OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall;
  id v14 = objc_allocWithZone((Class)type metadata accessor for VFXREDrawCall());
  uint64_t v15 = v2;
  *(void *)&v2[v13] = objc_msgSend(v14, sel_init);
  v15[OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager] = 0;
  *(void *)&v15[OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs] = 0;
  unint64_t v16 = &v15[OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL];
  uint64_t v17 = sub_1B6E30F48();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 56);
  uint64_t v37 = v17;
  v19(v16, 1, 1);
  *(void *)&v15[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat] = 115;
  v15[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth] = 1;
  v15[OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending] = 0;
  *(void *)&v15[OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions] = 0;
  uint64_t v20 = sub_1B6E30E58();
  uint64_t v22 = v21;
  type metadata accessor for EntityManager();
  swift_allocObject();
  *(void *)&v15[OBJC_IVAR____TtC3VFX8VFXScene_entityManager] = sub_1B6299098(v20, v22, 1, 0);
  *(void *)&v15[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFXScene.LoadOptions(0)), sel_init);

  uint64_t v23 = (objc_class *)type metadata accessor for VFXScene(0);
  v39.receiver = v15;
  v39.super_class = v23;
  uint64_t v24 = (char *)objc_msgSendSuper2(&v39, sel_init);
  uint64_t v25 = OBJC_IVAR____TtC3VFX8VFXScene_entityManager;
  char v26 = v24;
  uint64_t v27 = swift_retain();
  sub_1B628ACE0(v27);
  swift_release();
  if (qword_1EB97F010 != -1) {
    swift_once();
  }
  unint64_t v28 = *(void *)&v24[v25];
  char v40 = 1;
  uint64_t v29 = v38;
  uint64_t v30 = sub_1B639AB54((uint64_t)v6, a1, 0, v28, 0x100000000uLL);
  if (v29)
  {
    (*(void (**)(unint64_t, uint64_t))(v18 + 8))(a1, v37);
  }
  else
  {
    BOOL v31 = v30;
    uint64_t v32 = v36;
    sub_1B6887628((uint64_t)v6, v36);
    v31(v28, 7, 0);
    *(void *)&v26[OBJC_IVAR____TtC3VFX8VFXScene__version] = *(void *)(v32 + *(int *)(v35 + 24));
    *(void *)(v28 + 16) = sub_1B6E30E58();
    *(void *)(v28 + 24) = v34;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B67E9670(v32);
    (*(void (**)(unint64_t, uint64_t))(v18 + 8))(a1, v37);
  }

  return v26;
}

void VFXScene.__allocating_init(forEngineNamed:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = OBJC_IVAR____TtC3VFX8VFXScene_loader;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B639AB38();
  *(void *)&v1[v2] = v3;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_effects] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityObjects] = v4;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene__version] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isInsideRE] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isREAssetScene] = 0;
  uint64_t v5 = OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFXREDrawCall()), sel_init);
  v1[OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs] = 0;
  uint64_t v6 = &v1[OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL];
  uint64_t v7 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat] = 115;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth] = 1;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions] = 0;

  sub_1B6E32BE8();
  __break(1u);
}

id VFXScene.__allocating_init(entityManager:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = objc_allocWithZone(v1);
  uint64_t v5 = OBJC_IVAR____TtC3VFX8VFXScene_loader;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B639AB38();
  *(void *)&v4[v5] = v6;
  *(void *)&v4[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = 0;
  v4[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC3VFX8VFXScene_effects] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC3VFX8VFXScene_entityObjects] = v7;
  *(void *)&v4[OBJC_IVAR____TtC3VFX8VFXScene__version] = 0;
  v4[OBJC_IVAR____TtC3VFX8VFXScene_isInsideRE] = 0;
  v4[OBJC_IVAR____TtC3VFX8VFXScene_isREAssetScene] = 0;
  uint64_t v8 = OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall;
  id v9 = objc_allocWithZone((Class)type metadata accessor for VFXREDrawCall());
  uint64_t v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_init);
  uint64_t v11 = OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager;
  *(void *)&v10[OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs] = 0;
  uint64_t v12 = &v10[OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL];
  uint64_t v13 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)&v10[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat] = 115;
  v10[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth] = 1;
  v10[OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending] = 0;
  *(void *)&v10[OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions] = 0;
  v10[v11] = 1;
  *(void *)&v10[OBJC_IVAR____TtC3VFX8VFXScene_entityManager] = a1;
  id v14 = objc_allocWithZone((Class)type metadata accessor for VFXScene.LoadOptions(0));
  swift_unknownObjectRetain();
  id v15 = objc_msgSend(v14, sel_init);
  *(void *)&v10[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions] = v15;

  v18.receiver = v10;
  v18.super_class = v2;
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  swift_unknownObjectRelease();
  return v16;
}

id VFXScene.init(entityManager:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC3VFX8VFXScene_loader;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B639AB38();
  *(void *)&v1[v4] = v5;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_effects] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityObjects] = v6;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene__version] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isInsideRE] = 0;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_isREAssetScene] = 0;
  uint64_t v7 = OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall;
  id v8 = objc_allocWithZone((Class)type metadata accessor for VFXREDrawCall());
  id v9 = v1;
  *(void *)&v2[v7] = objc_msgSend(v8, sel_init);
  uint64_t v10 = OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager;
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs] = 0;
  uint64_t v11 = &v9[OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL];
  uint64_t v12 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat] = 115;
  v9[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth] = 1;
  v9[OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending] = 0;
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions] = 0;
  v9[v10] = 1;
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_entityManager] = a1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for VFXScene.LoadOptions(0));
  swift_unknownObjectRetain();
  id v14 = objc_msgSend(v13, sel_init);
  *(void *)&v9[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions] = v14;

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for VFXScene(0);
  id v15 = objc_msgSendSuper2(&v17, sel_init);
  swift_unknownObjectRelease();
  return v15;
}

id VFXScene.__deallocating_deinit()
{
  if ((v0[OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager] & 1) == 0)
  {
    swift_retain();
    sub_1B69DEDF8();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VFXScene(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B6882C88()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6882D00(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs) = a1;
  return swift_bridgeObjectRelease();
}

double (*sub_1B6882D18())(void)
{
  return nullsub_1;
}

id sub_1B6882D4C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B638BFE4(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  id v8 = (char *)&v13 - v7;
  sub_1B663AB08(a1 + *a3, (uint64_t)&v13 - v7);
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    uint64_t v11 = (void *)sub_1B6E30E78();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }

  return v11;
}

uint64_t sub_1B6882E80@<X0>(uint64_t a1@<X8>)
{
  return sub_1B663AB08(v1 + OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL, a1);
}

uint64_t sub_1B6882EA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1B638BFE4(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v14 - v9;
  if (a3)
  {
    sub_1B6E30EE8();
    uint64_t v11 = sub_1B6E30F48();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = sub_1B6E30F48();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  }
  return sub_1B63BE06C((uint64_t)v10, a1 + *a4);
}

uint64_t sub_1B6882FC4(uint64_t a1)
{
  return sub_1B63BE06C(a1, v1 + OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL);
}

uint64_t sub_1B6882FD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1B638BFE4(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = (char *)&v13 - v10;
  sub_1B663AB08(a1, (uint64_t)&v13 - v10);
  return sub_1B63BE06C((uint64_t)v11, *a2 + *a5);
}

double (*sub_1B6883084())(void)
{
  return nullsub_1;
}

uint64_t sub_1B68830BC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat);
}

uint64_t sub_1B68830DC(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat) = result;
  return result;
}

double (*sub_1B68830EC())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6883124()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth);
}

uint64_t sub_1B6883144(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth) = result;
  return result;
}

double (*sub_1B6883154())(void)
{
  return nullsub_1;
}

uint64_t sub_1B688318C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending);
}

uint64_t sub_1B68831AC(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending) = result;
  return result;
}

double (*sub_1B68831BC())(void)
{
  return nullsub_1;
}

uint64_t sub_1B68831E4()
{
  uint64_t v1 = sub_1B6E30F48();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v48 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B638BFE4(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v50 = (char *)v42 - v10;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t result = *(void *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (result)
  {
    uint64_t v43 = v9;
    uint64_t v49 = swift_retain();
    sub_1B6290AF0(v49);
    swift_getKeyPath();
    uint64_t v13 = *(void *)(v11 + 176);
    swift_retain();
    uint64_t v14 = sub_1B6B3A580((uint64_t)&type metadata for SceneAssetRegistryInstance, (uint64_t)&off_1F0F96FB0, v13, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0);
    swift_release();
    swift_release();
    swift_release();
    if (!v14)
    {
      type metadata accessor for SceneAssetRegistry();
      uint64_t v15 = swift_allocObject();
      swift_retain();
      uint64_t v16 = MEMORY[0x1E4FBC860];
      *(void *)(v15 + 16) = sub_1B639A2B4(MEMORY[0x1E4FBC860]);
      *(void *)(v15 + 24) = sub_1B639A78C(v16);
      swift_weakInit();
      swift_weakAssign();
      uint64_t v17 = swift_release();
      MEMORY[0x1F4188790](v17, v18);
      v42[-2] = v15;
      unint64_t v19 = *(void **)(v11 + 176);
      swift_retain();
      sub_1B636E6CC((uint64_t)&type metadata for SceneAssetRegistryInstance, (uint64_t)&off_1F0F96FB0, v19, (void (*)(uint64_t))sub_1B63BAD88);
      swift_release();
      swift_release();
    }
    uint64_t v44 = v0;
    if (*(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs)) {
      uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs);
    }
    else {
      uint64_t v20 = MEMORY[0x1E4FBC860];
    }
    uint64_t v21 = *(void *)(v20 + 16);
    v42[1] = v20;
    if (v21)
    {
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
      uint64_t v22 = v2 + 16;
      uint64_t v24 = v20 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
      uint64_t v45 = *(void *)(v22 + 56);
      uint64_t v46 = v23;
      uint64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 40);
      char v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 32);
      uint64_t v27 = (void (**)(char *, char *, uint64_t))(v22 + 16);
      uint64_t v47 = v22;
      unint64_t v28 = (void (**)(char *, uint64_t))(v22 - 8);
      swift_bridgeObjectRetain();
      v42[0] = (unint64_t)v25 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v29 = v50;
      uint64_t v30 = v48;
      while (1)
      {
        v46(v29, v24, v1);
        BOOL v31 = *v25;
        (*v25)(v29, 0, 1, v1);
        if ((*v26)(v29, 1, v1) == 1) {
          break;
        }
        (*v27)(v30, v29, v1);
        sub_1B679397C();
        uint64_t v29 = v50;
        (*v28)(v30, v1);
        v24 += v45;
        if (!--v21) {
          goto LABEL_13;
        }
      }
    }
    else
    {
      BOOL v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      swift_bridgeObjectRetain();
      uint64_t v29 = v50;
LABEL_13:
      v31(v29, 1, 1, v1);
    }
    swift_bridgeObjectRelease();
    uint64_t v32 = v43;
    uint64_t v33 = v44;
    sub_1B663AB08(v44 + OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL, v43);
    uint64_t v34 = v49;
    sub_1B63BE06C(v32, *(void *)(v49 + 232) + OBJC_IVAR____TtC3VFX11ShaderCache_urlToSaveBinaryArchiveTo);
    int v35 = *(unsigned __int8 *)(v33 + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth);
    if (v35 != 1)
    {
      *(unsigned char *)(v34 + 585) = v35;
      sub_1B6382348();
    }
    if (*(unsigned char *)(v33 + OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending) != 1) {
      return swift_release();
    }
    *(unsigned char *)(v34 + 600) = 1;
    sub_1B63823F4();
    sub_1B6382D68();
    uint64_t v36 = *(void *)(v34 + 272);
    sub_1B63830F8(*(void *)(v34 + 592));
    if (*(void *)(v34 + 608)) {
      return swift_release();
    }
    int v37 = *(unsigned __int8 *)(v34 + 585);
    int v38 = *(unsigned __int8 *)(v34 + 600);
    if (v37 == 2)
    {
      BOOL v40 = v38 == 0;
      uint64_t v41 = 552;
    }
    else
    {
      if (v37 == 1)
      {
        uint64_t v39 = 115;
LABEL_27:
        *(void *)(v36 + 48) = v39;
        sub_1B63831C8(v39);
        return swift_release();
      }
      if (*(unsigned char *)(v34 + 585))
      {
        char v51 = *(unsigned char *)(v34 + 585);
        uint64_t result = sub_1B6E337C8();
        __break(1u);
        return result;
      }
      BOOL v40 = v38 == 0;
      uint64_t v41 = 70;
    }
    if (v40) {
      uint64_t v39 = v41 + 1;
    }
    else {
      uint64_t v39 = v41;
    }
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_1B68837E0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager) + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  if (*(unsigned char *)(v1 + 96) == 1) {
    return (*(unsigned __int8 *)(v1 + 99) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B6883844(uint64_t result)
{
  *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
           + OBJC_IVAR____TtC3VFX13EntityManager_clock
           + 96) = result;
  return result;
}

uint64_t (*sub_1B6883868(uint64_t a1))(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v3 = OBJC_IVAR____TtC3VFX13EntityManager_clock;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = v2 + v3;
  if (*(unsigned char *)(v4 + 96) == 1) {
    char v5 = *(unsigned char *)(v4 + 99) ^ 1;
  }
  else {
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 16) = v5 & 1;
  return sub_1B68838CC;
}

uint64_t sub_1B68838CC(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(void *)(result + 8) + 96) = *(unsigned char *)(result + 16);
  return result;
}

uint64_t sub_1B6883904()
{
  return *(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                            + OBJC_IVAR____TtC3VFX13EntityManager_clock
                            + 97);
}

uint64_t sub_1B6883954(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager) + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  *(unsigned char *)(v2 + 97) = result;
  if (result) {
    *(unsigned char *)(v2 + 98) = 0;
  }
  return result;
}

uint64_t (*sub_1B6883980(uint64_t a1))(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v3 = OBJC_IVAR____TtC3VFX13EntityManager_clock;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v2 + v3 + 97);
  return sub_1B68839C8;
}

uint64_t sub_1B68839C8(uint64_t result)
{
  uint64_t v1 = *(void *)result + *(void *)(result + 8);
  int v2 = *(unsigned __int8 *)(result + 16);
  *(unsigned char *)(v1 + 97) = v2;
  if (v2 == 1) {
    *(unsigned char *)(v1 + 98) = 0;
  }
  return result;
}

float sub_1B6883A0C()
{
  return *(float *)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                              + OBJC_IVAR____TtC3VFX13EntityManager_scheduler)
                  + 208);
}

void sub_1B6883A54(float a1)
{
  *(float *)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                       + OBJC_IVAR____TtC3VFX13EntityManager_scheduler)
           + 208) = a1;
}

float (*sub_1B6883A78(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v3 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)(v2 + v3) + 208);
  return sub_1B6883AC0;
}

float sub_1B6883AC0(uint64_t a1)
{
  float result = *(float *)(a1 + 16);
  *(float *)(*(void *)(*(void *)a1 + *(void *)(a1 + 8)) + 208) = result;
  return result;
}

uint64_t sub_1B6883B8C()
{
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v0 = sub_1B6E32148();
  uint64_t v2 = 1;
  sub_1B6B33B70(v0, 0xD000000000000057, 0x80000001B6F3A600, &v2);

  return swift_release();
}

uint64_t (*sub_1B6883C30(unsigned char *a1))()
{
  *a1 = 0;
  return sub_1B6883C54;
}

uint64_t sub_1B6883C54()
{
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v0 = sub_1B6E32148();
  uint64_t v2 = 1;
  sub_1B6B33B70(v0, 0xD000000000000057, 0x80000001B6F3A600, &v2);
  return swift_release();
}

double (*sub_1B6883CF8(unsigned char *a1))(void)
{
  *a1 = 0;
  return nullsub_1;
}

uint64_t sub_1B6883D4C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1) {
    return *(unsigned __int8 *)(v1 + 321);
  }
  else {
    return 0;
  }
}

uint64_t *sub_1B6883DD0(char a1)
{
  float result = *(uint64_t **)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v4 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v4)
  {
    int v5 = a1 & 1;
    if (*(unsigned __int8 *)(v4 + 321) == v5) {
      return result;
    }
    *(unsigned char *)(v4 + 321) = v5;
  }
  return sub_1B696E534((uint64_t)result);
}

uint64_t *(*sub_1B6883E14(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t v2 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2) {
    LOBYTE(v2) = *(unsigned char *)(v2 + 321);
  }
  *(unsigned char *)(a1 + 8) = v2;
  return sub_1B6883E60;
}

uint64_t *sub_1B6883E60(uint64_t a1)
{
  return sub_1B6883DD0(*(unsigned char *)(a1 + 8));
}

uint64_t sub_1B6883E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1B6C0A538(a1, a2, 0x200000000, 1);
  if ((v9 & 1) != 0 || v8 == 0xFFFFFFFFLL) {
    return 0;
  }
  else {
    return sub_1B6B64914(v8, a1, a2, a3, a4);
  }
}

uint64_t sub_1B6883FF4(uint64_t a1, uint64_t a2)
{
  return sub_1B6B5AD30(a1, a2, 0x200000000);
}

uint64_t sub_1B6884120()
{
  return sub_1B6B5B228(0x200000000, 0, 0);
}

void sub_1B6884158(double a1)
{
  sub_1B69D6BB8(*(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], v1, a1);
}

void sub_1B688422C()
{
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_effects];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1B6E32C18();
    if (!v2) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v2) {
      goto LABEL_9;
    }
  }
  uint64_t v3 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v4 = (id)MEMORY[0x1BA9B4580](v3, v1);
    }
    else {
      id v4 = *(id *)(v1 + 8 * v3 + 32);
    }
    int v5 = v4;
    ++v3;
    sub_1B688783C();
    sub_1B68878A8();
    sub_1B6E31398();
  }
  while (v2 != v3);
LABEL_9:
  swift_bridgeObjectRelease_n();
  sub_1B69D6D60(*(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], v0);
}

void sub_1B68843A8()
{
  sub_1B69D6EE4(*(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], v0);
}

void sub_1B688440C()
{
  sub_1B69D72A8(*(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], v0);
}

uint64_t sub_1B6884470(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  _OWORD v7[3] = a1;
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  v7[4] = a2;
  if (*(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1B6A8CC84((uint64_t)sub_1B6887978, (uint64_t)v7);
    swift_release();
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    sub_1B69D72FC(v8, v6, a1, a2);
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1B68845AC(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v4 = sub_1B6E312C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B6E31288();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x1F4188790](v14, v15);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = MEMORY[0x1BA9B8670](a1 + 16, v16);
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    uint64_t v21 = *(void *)(v19 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
    swift_retain();

    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v21 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v9);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v13, v9);
  }
  else
  {
    sub_1B6E31298();
  }
  uint64_t v35 = v10;
  uint64_t v36 = v9;
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1B6385660(v4, (uint64_t)qword_1EB997E68);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v22, v4);
  uint64_t v23 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v23 = 0;
  uint64_t v24 = sub_1B6E312A8();
  os_signpost_type_t v25 = sub_1B6E322B8();
  os_signpost_id_t v26 = sub_1B6E31278();
  uint64_t v32 = v8;
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v24, v25, v26, "transaction", "", v23, 2u);
  v34();
  uint64_t v27 = v4;
  os_signpost_type_t v28 = sub_1B6E322A8();
  os_signpost_id_t v29 = sub_1B6E31278();
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v24, v28, v29, "transaction", "", v23, 2u);

  MEMORY[0x1BA9B84C0](v23, -1, -1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v36);
}

uint64_t sub_1B6884978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B69DDA0C(v11, v11, a1, a2, 0x200000000, a3, a4, a5);
}

id sub_1B6884BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v7[2] = *(void *)(v5 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  _OWORD v7[3] = a1;
  v7[4] = a2;
  int v8 = 0;
  char v9 = 2;
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  return sub_1B63BA2B0((void (*)(void))sub_1B6887984, (uint64_t)v7);
}

uint64_t sub_1B6884D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a7;
  uint64_t v31 = a6;
  uint64_t v14 = sub_1B6E324B8();
  uint64_t v28 = *(void *)(v14 - 8);
  uint64_t v29 = v14;
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v8;
  uint64_t v23 = *(void *)(v8 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = a1;
  uint64_t v34 = a3;
  sub_1B69DDA0C(v23, v23, a1, a2, 0x200000000, a3, a4, (uint64_t)v35);
  sub_1B62F7DD8(0, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  int v24 = swift_dynamicCast();
  os_signpost_type_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (v24)
  {
    v25(v17, 0, 1, a8);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v17, a8);
    v31(v22);
    sub_1B6884FE0(v33, v32, a2, v34, a4, (uint64_t)v22, a8);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, a8);
  }
  else
  {
    v25(v17, 1, 1, a8);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v17, v29);
  }
}

uint64_t sub_1B6884FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v22[3] = a7;
  uint64_t v14 = sub_1B62C12C4(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(v14, a6, a7);
  v16[2] = *(void *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  v16[3] = a2;
  v16[4] = a3;
  int v17 = 0;
  char v18 = 2;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v21 = v22;
  sub_1B63BA2B0((void (*)(void))sub_1B6887984, (uint64_t)v16);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v22);
}

uint64_t sub_1B68850C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B69DDA0C(v11, v11, a1, a2, 0x200000000, a3, a4, (uint64_t)&v30);
  if (!v31) {
    return sub_1B62B32CC((uint64_t)&v30);
  }
  sub_1B62B57A8(&v30, v33);
  uint64_t v28 = &type metadata for Extensions;
  uint64_t v29 = &off_1F0F59030;
  sub_1B67DCBF4((uint64_t *)&v27, v33);
  sub_1B62C15C4(&v27, (uint64_t)&v30);
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  sub_1B62C550C((uint64_t)&v30, v31);
  uint64_t v14 = sub_1B6B19120(v12, v13);
  a5(v14);
  uint64_t v15 = v31;
  uint64_t v16 = sub_1B62C14BC(&v30, v31);
  uint64_t v28 = (ValueMetadata *)v15;
  int v17 = sub_1B62C12C4((uint64_t *)&v27);
  uint64_t v18 = (*(uint64_t (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v17, v16, v15);
  MEMORY[0x1F4188790](v18, v19);
  v21[2] = v11;
  v21[3] = a1;
  void v21[4] = a2;
  int v22 = 0;
  char v23 = 2;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  os_signpost_id_t v26 = &v27;
  sub_1B63BA2B0((void (*)(void))sub_1B6887984, (uint64_t)v21);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v27);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v30);
}

id sub_1B68853A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  return sub_1B63BA2B0((void (*)(void))sub_1B688799C, (uint64_t)v4);
}

uint64_t sub_1B6885408(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, double a5)
{
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v9 = *(void *)(*(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                 + 8 * *(void *)thread_worker_index(&thread_worker_index, a5)
                 + 8);
  uint64_t v10 = *(void *)(v9 + 32);
  ecs_stack_allocator_push_snapshot(v10);
  v19[0] = 1;
  sub_1B6A04C28(a3, a4, v8, 0x100000000uLL, (uint64_t)v18);
  uint64_t v11 = v18[0];
  uint64_t v12 = v18[3];
  sub_1B688A978((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    ecs_stack_allocator_pop_snapshot(v10);
    uint64_t v13 = sub_1B6E32738();
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      sub_1B633D2DC(a2, v11, v13, result, v12);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    v17[1] = 0x80000001B6F3B020;
    sub_1B6E31948();
    uint64_t v16 = sub_1B6E32148();
    v17[0] = 0;
    (*(void (**)(uint64_t, void *, unint64_t, unint64_t))(*(void *)v15 + 88))(v16, v17, 0xD000000000000017, 0x80000001B6F3B020);
    swift_release();
    swift_bridgeObjectRelease();
    return ecs_stack_allocator_pop_snapshot(*(void *)(v9 + 32));
  }
  return result;
}

void sub_1B68856F4(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  uint64_t v8 = v3;
  swift_bridgeObjectRetain();
  sub_1B69DDD00(v7, v8, a1, a2, a3);
}

uint64_t sub_1B688576C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>, double a5@<D0>)
{
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v9 = *(void *)(*(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                 + 8 * *(void *)thread_worker_index(&thread_worker_index, a5)
                 + 8);
  uint64_t v10 = *(void *)(v9 + 32);
  ecs_stack_allocator_push_snapshot(v10);
  v19[0] = 1;
  sub_1B6A04C28(a2, a3, v8, 0x100000000uLL, (uint64_t)v18);
  uint64_t v11 = v18[0];
  uint64_t v12 = v18[3];
  sub_1B688A978((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    ecs_stack_allocator_pop_snapshot(v10);
    uint64_t v13 = sub_1B6E32738();
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      sub_1B62CD2F0(v11, v13, v12, a4);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    v17[1] = 0x80000001B6F3B020;
    sub_1B6E31948();
    uint64_t v16 = sub_1B6E32148();
    v17[0] = 0;
    (*(void (**)(uint64_t, void *, unint64_t, unint64_t))(*(void *)v15 + 88))(v16, v17, 0xD000000000000017, 0x80000001B6F3B020);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = ecs_stack_allocator_pop_snapshot(*(void *)(v9 + 32));
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1B6885B18(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a5;
  long long v27 = a4;
  uint64_t v10 = sub_1B6E324B8();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)&v6[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  uint64_t v20 = v6;
  swift_bridgeObjectRetain();
  sub_1B69DDD00(v19, v20, a1, a2, &v28);
  sub_1B62F7DD8(0, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  int v21 = swift_dynamicCast();
  int v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v21)
  {
    v22(v13, 0, 1, a6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v13, a6);
    v27(v18);
    sub_1B6885DA4((uint64_t)v20, (uint64_t)v18, (uint64_t)a1, a2, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, a6);
  }
  else
  {
    v22(v13, 1, 1, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v25);
  }
}

uint64_t sub_1B6885DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[3] = a5;
  uint64_t v10 = sub_1B62C12C4(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v10, a2, a5);
  v12[2] = a1;
  v12[3] = v13;
  v12[4] = a3;
  v12[5] = a4;
  sub_1B63BA2B0((void (*)(void))sub_1B688AAD8, (uint64_t)v12);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v13);
}

uint64_t sub_1B6885E70()
{
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v0 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v2 = 0;
  swift_retain();
  sub_1B6B33E34(v0, &v2, 0xD00000000000003DLL, 0x80000001B6F3A660);
  swift_release();

  return swift_release();
}

uint64_t sub_1B6886090(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1B69D750C(v7, v7, a1, a2, 0x200000000, a3);
}

uint64_t sub_1B68861AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1B69E39D8(v5, v5, a1, a2, 0x200000000);
  swift_release();
  swift_bridgeObjectRelease();
  return a1 & 1;
}

id sub_1B688643C(uint64_t a1)
{
  id v3 = 0;
  sub_1B69D7818(*(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], &v3, v1, a1);
  return v3;
}

uint64_t sub_1B688649C(id *a1, void *a2, int a3)
{
  objc_allocWithZone((Class)type metadata accessor for VFXEffect());
  uint64_t v6 = a2;
  id v7 = sub_1B6B5CEE4(v6, a3, 0, 0xE000000000000000);
  id v8 = *a1;
  *a1 = v7;

  uint64_t v9 = &v6[OBJC_IVAR____TtC3VFX8VFXScene_effects];
  id v10 = *a1;
  MEMORY[0x1BA9B3870]();
  if (*(void *)((*(void *)v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v9 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  return sub_1B6E31C48();
}

id sub_1B68865E8(void *a1)
{
  id v3 = 0;
  sub_1B69D79C8(*(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], a1, v1, &v3);
  return v3;
}

uint64_t sub_1B688664C(uint64_t a1, char *a2, id *a3)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared)) {
    char v5 = 0;
  }
  else {
    char v5 = *(unsigned char *)(*(void *)&a2[OBJC_IVAR____TtC3VFX8VFXScene_loadOptions]
  }
                  + OBJC_IVAR___VFXSceneLoadOptions_automaticallyPrepareScene);
  int v6 = sub_1B6914964(*(void *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager), v5, 0);
  *(void *)&a2[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = v7;
  swift_bridgeObjectRelease();
  id v8 = a2;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E32B18();
  id v9 = objc_allocWithZone((Class)type metadata accessor for VFXEffect());
  id v10 = sub_1B6B5CEE4(v8, v6, 0, 0xE000000000000000);
  id v11 = *a3;
  *a3 = v10;

  uint64_t v12 = &v8[OBJC_IVAR____TtC3VFX8VFXScene_effects];
  id v13 = *a3;
  MEMORY[0x1BA9B3870]();
  if (*(void *)((*(void *)v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v12 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  return sub_1B6E31C48();
}

void sub_1B688688C(void *a1)
{
  sub_1B69D7BEC(*(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], v1, a1);
}

void sub_1B688696C()
{
  sub_1B69D7F28(*(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityManager], v0);
}

uint64_t sub_1B68869B8(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC3VFX8VFXScene_effects;
  unint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC3VFX8VFXScene_effects);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1B6E32C18();
    if (!v4) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_9;
    }
  }
  uint64_t v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      int v6 = (char *)MEMORY[0x1BA9B4580](v5, v3);
    }
    else {
      int v6 = (char *)*(id *)(v3 + 8 * v5 + 32);
    }
    uint64_t v7 = v6;
    ++v5;
    sub_1B67CAB18(*(unsigned int *)&v6[OBJC_IVAR____TtC3VFX9VFXEffect_effectID] | ((unint64_t)v6[OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4] << 32), 0, 1);
  }
  while (v4 != v5);
LABEL_9:
  swift_bridgeObjectRelease();
  *(void *)(a1 + v2) = MEMORY[0x1E4FBC860];
  return swift_bridgeObjectRelease();
}

void sub_1B6886AFC(char *a1, uint64_t a2, void (*a3)(uint64_t, char *))
{
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  uint64_t v5 = a1;
  a3(v4, v5);
}

uint64_t sub_1B6886B6C()
{
  return sub_1B6B5B228(0x200000000, 1, 1);
}

id sub_1B6886BA4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  uint64_t v2 = **(void **)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  char v11 = 1;
  unint64_t v3 = sub_1B6D7CF58(0x100000000uLL, v2);
  int v4 = v3;
  unint64_t v5 = HIDWORD(v3);
  int v6 = (objc_class *)type metadata accessor for VFXCoreCamera();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  id v8 = &v7[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
  *(_DWORD *)id v8 = v4;
  *((_DWORD *)v8 + 1) = v5;
  *((void *)v8 + 1) = v1;
  v10.receiver = v7;
  v10.super_class = v6;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t VFXScene.ScriptFunction.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VFXScene.ScriptFunction.pointer.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t VFXScene.ScriptFunction.init(name:function:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

Swift::Void __swiftcall VFXScene.LoadOptions.registerVFX2AuthoringSystems(_:)(Swift::Bool a1)
{
  uint64_t v2 = 2147517449;
  if (a1) {
    uint64_t v2 = 0x1008000840FLL;
  }
  *(void *)(v1 + OBJC_IVAR___VFXSceneLoadOptions_systemRegistrationOptions) = v2;
}

uint64_t VFXScene.assetManager.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_getKeyPath();
  uint64_t v2 = *(void *)(v1 + 176);
  swift_retain();
  uint64_t v3 = sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v2, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0);
  swift_release();
  swift_release();
  return v3;
}

void VFXScene.assetManager.setter(void *a1, uint64_t a2)
{
  sub_1B6887BDC(a1, a2);
}

uint64_t VFXScene.initializeAssetManagerWithBundleURL(_:)()
{
  uint64_t v1 = sub_1B6E30F48();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  unint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v7);
  id v9 = (char *)v16 - v8;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_getKeyPath();
  uint64_t v11 = *(void *)(v10 + 176);
  swift_retain();
  uint64_t v12 = (char *)sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v11, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0);
  swift_release();
  swift_release();
  if (!v12)
  {
    sub_1B6E30EA8();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v9, v1);
  }
  if (!*(void *)&v12[OBJC_IVAR____TtC3VFX12AssetManager_authoringFileManager])
  {
    sub_1B6E30EA8();
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v9, v1);
    type metadata accessor for AssetFileManager();
    swift_allocObject();
    uint64_t v15 = v12;
    *(void *)&v15[OBJC_IVAR____TtC3VFX12AssetManager_authoringFileManager] = sub_1B6993888(v5);

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v9, v1);
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v13 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v16[0] = 0;
  swift_retain();
  sub_1B6B33E34(v13, v16, 0xD000000000000027, 0x80000001B6F3A6A0);
  swift_release();

  return swift_release();
}

Swift::Int64 __swiftcall VFXScene.entity(withTag:)(Swift::String_optional withTag)
{
  if (!withTag.value._object) {
    return 0;
  }
  object = withTag.value._object;
  uint64_t countAndFlagsBits = withTag.value._countAndFlagsBits;
  uint64_t v8 = 0xFFFFFFFFLL;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  unint64_t v5 = v1;
  swift_bridgeObjectRetain();
  sub_1B69D7F7C(v4, &v8, v5, countAndFlagsBits, (uint64_t)object);
  if (HIDWORD(v8)) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v8 == 0xFFFFFFFFLL;
  }
  if (v6) {
    return 0;
  }
  else {
    return v8 | ((unint64_t)HIDWORD(v8) << 32);
  }
}

uint64_t sub_1B6887414(uint64_t a1, unsigned char *a2, BOOL *a3)
{
  if (a1) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = 0xFFFFFFFFLL;
  }
  char v9 = 0;
  uint64_t v6 = sub_1B62EBE70(v5, &v9);
  if (a2) {
    *a2 = v9;
  }
  if (a3)
  {
    BOOL v7 = sub_1B62EC0CC((uint64_t)&type metadata for MovieFileAsset, (uint64_t)&off_1F0F64908, v5)
      || sub_1B62EC0CC((uint64_t)&type metadata for RenderGraphTextureTarget, (uint64_t)&off_1F0F93FD8, v5);
    *a3 = v7;
  }
  return v6;
}

uint64_t sub_1B688753C(void (*a1)(uint64_t))
{
  pthread_mutex_lock(*(pthread_mutex_t **)(v1 + 64));
  uint64_t v3 = runtime_thread_is_locked;
  is_locked = (_DWORD *)runtime_thread_is_locked(&runtime_thread_is_locked);
  ++*is_locked;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B63BADF0();
    uint64_t Strong = swift_release();
  }
  a1(Strong);
  if (swift_weakLoadStrong())
  {
    sub_1B69E090C();
    swift_release();
  }
  uint64_t v6 = (_DWORD *)v3(&runtime_thread_is_locked);
  --*v6;
  return pthread_mutex_unlock(*(pthread_mutex_t **)(v1 + 64));
}

uint64_t sub_1B6887628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BundleInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void _s3VFX8VFXSceneC14forEngineNamedACSS_tcfc_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC3VFX8VFXScene_loader;
  type metadata accessor for VFXLoader();
  swift_allocObject();
  sub_1B639AB38();
  *(void *)&v0[v2] = v3;
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_templateRemapTable] = 0;
  v0[OBJC_IVAR____TtC3VFX8VFXScene_templateWasPrepared] = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_effects] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene_entityObjects] = v4;
  *(void *)&v0[OBJC_IVAR____TtC3VFX8VFXScene__version] = 0;
  v0[OBJC_IVAR____TtC3VFX8VFXScene_isInsideRE] = 0;
  v0[OBJC_IVAR____TtC3VFX8VFXScene_isREAssetScene] = 0;
  uint64_t v5 = OBJC_IVAR____TtC3VFX8VFXScene_transientDrawCall;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFXREDrawCall()), sel_init);
  v1[OBJC_IVAR____TtC3VFX8VFXScene_hasSharedEntityManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs] = 0;
  uint64_t v6 = &v1[OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL];
  uint64_t v7 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat] = 115;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth] = 1;
  v1[OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending] = 0;
  *(void *)&v1[OBJC_IVAR____TtC3VFX8VFXScene_debugUIOptions] = 0;

  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B688783C()
{
  if (!qword_1EB980098)
  {
    unint64_t v0 = sub_1B6E31388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980098);
    }
  }
}

unint64_t sub_1B68878A8()
{
  unint64_t result = qword_1EB97D950;
  if (!qword_1EB97D950)
  {
    sub_1B688783C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D950);
  }
  return result;
}

uint64_t sub_1B6887900()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6887938()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B6887978()
{
  return sub_1B68845AC(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B6887984()
{
  return sub_1B688AA60();
}

uint64_t sub_1B688799C(double a1)
{
  return sub_1B6885408(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1B68879BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *(void *)(a5 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B69DDA0C(v11, v11, a1, a2, 0x200000000, a3, a4, (uint64_t)&v30);
  if (!v31) {
    return sub_1B62B32CC((uint64_t)&v30);
  }
  sub_1B62B57A8(&v30, v33);
  long long v28 = &type metadata for Extensions;
  uint64_t v29 = &off_1F0F59030;
  sub_1B67DCBF4((uint64_t *)&v27, v33);
  sub_1B62C15C4(&v27, (uint64_t)&v30);
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  sub_1B62C550C((uint64_t)&v30, v31);
  uint64_t v14 = sub_1B6B19120(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(a6 + 16))(a6, v14);
  uint64_t v15 = v31;
  uint64_t v16 = sub_1B62C14BC(&v30, v31);
  long long v28 = (ValueMetadata *)v15;
  uint64_t v17 = sub_1B62C12C4((uint64_t *)&v27);
  uint64_t v18 = (*(uint64_t (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v17, v16, v15);
  MEMORY[0x1F4188790](v18, v19);
  v21[2] = v11;
  v21[3] = a1;
  void v21[4] = a2;
  int v22 = 0;
  char v23 = 2;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = &v27;
  sub_1B63BA2B0((void (*)(void))sub_1B6887984, (uint64_t)v21);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v27);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v30);
}

void sub_1B6887BDC(id a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  if (a1)
  {
    uint64_t v4 = a1;
    type metadata accessor for AssetManager();
    a1 = (id)swift_dynamicCastClass();
    uint64_t v5 = a1;
    if (a1) {
      a1 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v6 = *(void **)(v3 + 176);
  swift_retain();
  sub_1B636E6CC((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v6, (void (*)(uint64_t))sub_1B63BB008);
  swift_release();
}

unint64_t sub_1B6887CB8()
{
  unint64_t result = qword_1E9DD1AC0;
  if (!qword_1E9DD1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1AC0);
  }
  return result;
}

unint64_t sub_1B6887D10()
{
  unint64_t result = qword_1E9DD1AC8;
  if (!qword_1E9DD1AC8)
  {
    sub_1B62F7DD8(255, &qword_1E9DD1AD0, (uint64_t)&type metadata for PixelFormatDepth, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1AC8);
  }
  return result;
}

uint64_t sub_1B6887D8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC3VFX8VFXScene_effects);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6887DA4(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC3VFX8VFXScene_effects) = *a1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

void *sub_1B6887DF0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_isAuthoringWorld);
  return result;
}

unsigned char *sub_1B6887E08(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_isAuthoringWorld) = *result;
  return result;
}

void *sub_1B6887E20@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_isVFX2);
  return result;
}

unsigned char *sub_1B6887E38(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_isVFX2) = *result;
  return result;
}

void *sub_1B6887E50@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_enableRuntimeScriptCompilation);
  return result;
}

unsigned char *sub_1B6887E68(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_enableRuntimeScriptCompilation) = *result;
  return result;
}

void *sub_1B6887E80@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_allowLoadingFromFuture);
  return result;
}

unsigned char *sub_1B6887E98(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_allowLoadingFromFuture) = *result;
  return result;
}

void *sub_1B6887EB0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_setupAsTemplate);
  return result;
}

unsigned char *sub_1B6887EC8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_setupAsTemplate) = *result;
  return result;
}

void *sub_1B6887EE0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_automaticallyPrepareScene);
  return result;
}

unsigned char *sub_1B6887EF8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_automaticallyPrepareScene) = *result;
  return result;
}

void *sub_1B6887F10@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_setupAsyncRuntime);
  return result;
}

unsigned char *sub_1B6887F28(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_setupAsyncRuntime) = *result;
  return result;
}

void *sub_1B6887F40@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR___VFXSceneLoadOptions_asyncRuntimeLock);
  return result;
}

void *sub_1B6887F58(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_asyncRuntimeLock) = *result;
  return result;
}

void *sub_1B6887F70@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_loadBindingsMetadata);
  return result;
}

unsigned char *sub_1B6887F88(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_loadBindingsMetadata) = *result;
  return result;
}

void *sub_1B6887FA0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_enableParallelDecoding);
  return result;
}

unsigned char *sub_1B6887FB8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_enableParallelDecoding) = *result;
  return result;
}

void *sub_1B6887FD0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_setupRenderer);
  return result;
}

unsigned char *sub_1B6887FE8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_setupRenderer) = *result;
  return result;
}

void *sub_1B6888000@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR___VFXSceneLoadOptions_colorPixelFormat);
  return result;
}

void *sub_1B6888018(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_colorPixelFormat) = *result;
  return result;
}

void *sub_1B6888030@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR___VFXSceneLoadOptions_depthPixelFormat);
  return result;
}

void *sub_1B6888048(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_depthPixelFormat) = *result;
  return result;
}

void *sub_1B6888060@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering);
  return result;
}

unsigned char *sub_1B6888078(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering) = *result;
  return result;
}

void *sub_1B6888090@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = (*(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering) == 2) | *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering) & 1;
  return result;
}

unsigned char *sub_1B68880B8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_enableDeferredRendering) = *result;
  return result;
}

void *sub_1B68880D0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_internalPixelFormatDepth);
  return result;
}

unsigned char *sub_1B68880E8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_internalPixelFormatDepth) = *result;
  return result;
}

void *sub_1B6888100@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_useGammaBlending);
  return result;
}

unsigned char *sub_1B6888118(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_useGammaBlending) = *result;
  return result;
}

void *sub_1B6888130@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR___VFXSceneLoadOptions_doNotClearRenderOutput);
  return result;
}

unsigned char *sub_1B6888148(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_doNotClearRenderOutput) = *result;
  return result;
}

uint64_t sub_1B6888160@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B688832C(a1, &OBJC_IVAR___VFXSceneLoadOptions_device, MEMORY[0x1E4FBC900], a2);
}

uint64_t sub_1B6888180(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6888378(a1, a2, a3, a4, &OBJC_IVAR___VFXSceneLoadOptions_device, MEMORY[0x1E4FBC900], MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1B68881B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B688832C(a1, &OBJC_IVAR___VFXSceneLoadOptions_commandQueue, MEMORY[0x1E4FBC900], a2);
}

uint64_t sub_1B68881D4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6888378(a1, a2, a3, a4, &OBJC_IVAR___VFXSceneLoadOptions_commandQueue, MEMORY[0x1E4FBC900], MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1B6888208@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = (void *)(*a1 + OBJC_IVAR___VFXSceneLoadOptions_clientID);
  uint64_t v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6888224(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_clientID);
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6888274@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B663AB08(*a1 + OBJC_IVAR___VFXSceneLoadOptions_metalLibraryURL, a2);
}

uint64_t sub_1B688828C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6882FD4(a1, a2, a3, a4, &OBJC_IVAR___VFXSceneLoadOptions_metalLibraryURL);
}

void *sub_1B68882AC@<X0>(void *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(_DWORD *)(*result + OBJC_IVAR___VFXSceneLoadOptions_peerPid);
  return result;
}

_DWORD *sub_1B68882C4(_DWORD *result, void *a2)
{
  *(_DWORD *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_peerPid) = *result;
  return result;
}

void *sub_1B68882DC@<X0>(void *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(_DWORD *)(*result + OBJC_IVAR___VFXSceneLoadOptions_peerTaskIdentity);
  return result;
}

_DWORD *sub_1B68882F4(_DWORD *result, void *a2)
{
  *(_DWORD *)(*a2 + OBJC_IVAR___VFXSceneLoadOptions_peerTaskIdentity) = *result;
  return result;
}

uint64_t sub_1B688830C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B688832C(a1, &OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs, MEMORY[0x1E4FBC8A8], a2);
}

uint64_t sub_1B688832C@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t (*a3)(void)@<X4>, void *a4@<X8>)
{
  *a4 = *(void *)(*a1 + *a2);
  return a3();
}

uint64_t sub_1B6888344(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6888378(a1, a2, a3, a4, &OBJC_IVAR____TtC3VFX8VFXScene_metalBinaryArchiveURLs, MEMORY[0x1E4FBC8A8], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B6888378(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v7 = *(void *)(*a2 + *a5);
  *(void *)(*a2 + *a5) = *a1;
  a6();

  return a7(v7);
}

uint64_t sub_1B68883D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B663AB08(*a1 + OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL, a2);
}

uint64_t sub_1B68883F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6882FD4(a1, a2, a3, a4, &OBJC_IVAR____TtC3VFX8VFXScene_recordedMetalBinaryArchiveURL);
}

void *sub_1B6888410@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat);
  return result;
}

void *sub_1B6888428(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormat) = *result;
  return result;
}

void *sub_1B6888440@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth);
  return result;
}

unsigned char *sub_1B6888458(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC3VFX8VFXScene_internalPixelFormatDepth) = *result;
  return result;
}

void *sub_1B6888470@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending);
  return result;
}

unsigned char *sub_1B6888488(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC3VFX8VFXScene_useGammaBlending) = *result;
  return result;
}

void *sub_1B68884A0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *(void *)(*result + OBJC_IVAR____TtC3VFX8VFXScene_entityManager) + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  if (*(unsigned char *)(v2 + 96) == 1) {
    char v3 = *(unsigned char *)(v2 + 99) ^ 1;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3 & 1;
  return result;
}

unsigned char *sub_1B68884E8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*(void *)(*a2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
           + OBJC_IVAR____TtC3VFX13EntityManager_clock
           + 96) = *result;
  return result;
}

void *sub_1B6888514@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)(*result + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_clock
                 + 97);
  return result;
}

unsigned __int8 *sub_1B6888540(unsigned __int8 *result, void *a2)
{
  int v2 = *result;
  uint64_t v3 = *(void *)(*a2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager) + OBJC_IVAR____TtC3VFX13EntityManager_clock;
  *(unsigned char *)(v3 + 97) = v2;
  if (v2 == 1) {
    *(unsigned char *)(v3 + 98) = 0;
  }
  return result;
}

float sub_1B6888578@<S0>(void *a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(*(void *)(*(void *)(*a1 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                                + OBJC_IVAR____TtC3VFX13EntityManager_scheduler)
                    + 208);
  *a2 = result;
  return result;
}

float sub_1B68885A4(float *a1, void *a2)
{
  float result = *a1;
  *(float *)(*(void *)(*(void *)(*a2 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                       + OBJC_IVAR____TtC3VFX13EntityManager_scheduler)
           + 208) = *a1;
  return result;
}

void sub_1B68885D0(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1B68885DC(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1B68885E8@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)(*result + OBJC_IVAR____TtC3VFX8VFXScene_entityManager)
                 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2) {
    LOBYTE(v2) = *(unsigned char *)(v2 + 321);
  }
  *a2 = v2;
  return result;
}

uint64_t *sub_1B6888618(char *a1)
{
  return sub_1B6883DD0(*a1);
}

char *sub_1B6888640()
{
  return sel_assetManager;
}

id sub_1B688864C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_assetManager);
  *a2 = result;
  return result;
}

id sub_1B6888688(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAssetManager_, *a1);
}

ValueMetadata *type metadata accessor for PixelFormatDepth()
{
  return &type metadata for PixelFormatDepth;
}

uint64_t sub_1B68886AC()
{
  return type metadata accessor for VFXScene(0);
}

uint64_t method lookup function for VFXScene(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXScene);
}

uint64_t dispatch thunk of VFXScene.effects.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of VFXScene.version.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VFXScene.__allocating_init(options:)()
{
  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t dispatch thunk of VFXScene.__allocating_init(contentsOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of VFXScene.__allocating_init(forEngineNamed:)()
{
  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t dispatch thunk of VFXScene.__allocating_init(entityManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 488))();
}

uint64_t dispatch thunk of VFXScene.metalBinaryArchiveURLs.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of VFXScene.metalBinaryArchiveURLs.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of VFXScene.metalBinaryArchiveURLs.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of VFXScene.recordedMetalBinaryArchiveURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of VFXScene.recordedMetalBinaryArchiveURL.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of VFXScene.recordedMetalBinaryArchiveURL.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of VFXScene.internalPixelFormat.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of VFXScene.internalPixelFormat.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of VFXScene.internalPixelFormat.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of VFXScene.internalPixelFormatDepth.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of VFXScene.internalPixelFormatDepth.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of VFXScene.internalPixelFormatDepth.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of VFXScene.useGammaBlending.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of VFXScene.useGammaBlending.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of VFXScene.useGammaBlending.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of VFXScene.isPlaying.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of VFXScene.isPlaying.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of VFXScene.isPlaying.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of VFXScene.isFrozen.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of VFXScene.isFrozen.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of VFXScene.isFrozen.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of VFXScene.timeScale.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of VFXScene.timeScale.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of VFXScene.timeScale.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of VFXScene.allowsCameraControl.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of VFXScene.allowsCameraControl.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of VFXScene.allowsCameraControl.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of VFXScene.showStatistics.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of VFXScene.showStatistics.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of VFXScene.showStatistics.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of VFXScene.additiveWritesToAlpha.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of VFXScene.additiveWritesToAlpha.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of VFXScene.additiveWritesToAlpha.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of VFXScene.binding(of:named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of VFXScene.firstBinding(named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of VFXScene.bindings.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of VFXScene.update(deltaTime:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of VFXScene.restart()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of VFXScene.prepare()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x350))();
}

uint64_t dispatch thunk of VFXScene.clearCaches()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of VFXScene.performTransaction(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of VFXScene.parameter(of:named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of VFXScene.setParameter(of:named:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of VFXScene.withParameter<A>(of:named:type:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of VFXScene.withPointerToParameter(of:named:block:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of VFXScene.setValue(_:atPath:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of VFXScene.value(atPath:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of VFXScene.withValue<A>(atPath:type:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of VFXScene.withPointerToValue(atPath:block:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of VFXScene.setEnabled(_:enabled:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of VFXScene.isEnabled(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of VFXScene.addEffect(withEffectID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8))();
}

uint64_t dispatch thunk of VFXScene.addEffect(fromTemplate:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of VFXScene.removeEffect(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D8))();
}

uint64_t dispatch thunk of VFXScene.removeAllEffects()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E0))();
}

uint64_t dispatch thunk of VFXScene.authoringBindings.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F0))();
}

uint64_t dispatch thunk of VFXScene.makeDefaultCamera()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F8))();
}

uint64_t sub_1B688952C()
{
  return type metadata accessor for VFXScene.LoadOptions(0);
}

void sub_1B6889534()
{
  sub_1B638BFE4(319, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for VFXScene.LoadOptions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXScene.LoadOptions);
}

uint64_t dispatch thunk of VFXScene.LoadOptions.isAuthoringWorld.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.isAuthoringWorld.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.isAuthoringWorld.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.isVFX2.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.isVFX2.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.isVFX2.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableRuntimeScriptCompilation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableRuntimeScriptCompilation.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableRuntimeScriptCompilation.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.allowLoadingFromFuture.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.allowLoadingFromFuture.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.allowLoadingFromFuture.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupAsTemplate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupAsTemplate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.automaticallyPrepareScene.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.automaticallyPrepareScene.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.automaticallyPrepareScene.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupAsyncRuntime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupAsyncRuntime.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupAsyncRuntime.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.asyncRuntimeLock.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.asyncRuntimeLock.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.asyncRuntimeLock.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.loadBindingsMetadata.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.loadBindingsMetadata.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableParallelDecoding.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableParallelDecoding.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableParallelDecoding.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupRenderer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupRenderer.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.setupRenderer.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.colorPixelFormat.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.colorPixelFormat.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.colorPixelFormat.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.depthPixelFormat.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.depthPixelFormat.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.depthPixelFormat.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableDeferredRendering.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableDeferredRendering.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.enableDeferredRendering.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions._enableDeferredRendering.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions._enableDeferredRendering.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions._enableDeferredRendering.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.internalPixelFormatDepth.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.internalPixelFormatDepth.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.internalPixelFormatDepth.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.useGammaBlending.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.useGammaBlending.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.useGammaBlending.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.doNotClearRenderOutput.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.doNotClearRenderOutput.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.doNotClearRenderOutput.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.device.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.device.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.device.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.commandQueue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.commandQueue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.commandQueue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.clientID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x320))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.clientID.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.metalLibraryURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.metalLibraryURL.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.peerPid.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.peerPid.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.peerPid.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.peerTaskIdentity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.peerTaskIdentity.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of VFXScene.LoadOptions.peerTaskIdentity.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8))();
}

void *assignWithCopy for VFXScene.ScriptFunction(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for VFXScene.ScriptFunction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for VFXScene.ScriptFunction()
{
  return &type metadata for VFXScene.ScriptFunction;
}

ValueMetadata *type metadata accessor for DebugUIOptions()
{
  return &type metadata for DebugUIOptions;
}

unint64_t sub_1B688A730()
{
  unint64_t result = qword_1E9DD1AD8;
  if (!qword_1E9DD1AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1AD8);
  }
  return result;
}

unint64_t sub_1B688A788()
{
  unint64_t result = qword_1E9DD1AE0;
  if (!qword_1E9DD1AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1AE0);
  }
  return result;
}

unint64_t sub_1B688A7E0()
{
  unint64_t result = qword_1E9DD1AE8;
  if (!qword_1E9DD1AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1AE8);
  }
  return result;
}

unint64_t sub_1B688A838()
{
  unint64_t result = qword_1E9DD1AF0;
  if (!qword_1E9DD1AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1AF0);
  }
  return result;
}

uint64_t sub_1B688A88C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B688A8C4()
{
  return sub_1B6A7307C(*(void *)(v0 + 16));
}

unint64_t sub_1B688A8CC()
{
  unint64_t result = qword_1E9DD3A90;
  if (!qword_1E9DD3A90)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD3A90);
  }
  return result;
}

unint64_t sub_1B688A924()
{
  unint64_t result = qword_1E9DD1B00;
  if (!qword_1E9DD1B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B00);
  }
  return result;
}

uint64_t sub_1B688A978(uint64_t a1, uint64_t a2)
{
  sub_1B638BFE4(0, &qword_1E9DD4DA0, (void (*)(uint64_t))sub_1B688A9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B688A9F8()
{
  if (!qword_1E9DD1B10)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1B10);
    }
  }
}

uint64_t sub_1B688AA60()
{
  return sub_1B6B63998(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 44) << 32), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1B688AA94()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1B688AACC()
{
  sub_1B6881630(*(void *)(v0 + 16));
}

uint64_t sub_1B688AAD8(double a1)
{
  return sub_1B688799C(a1);
}

double sub_1B688AAF0(float32x4_t a1, float32x4_t a2)
{
  a1.i32[3] = 0;
  a1.i64[0] = vmulq_n_f32(a2, vmaxnmq_f32(a1, (float32x4_t)xmmword_1B6E4FCD0).f32[0]).u64[0];
  return *(double *)a1.i64;
}

double sub_1B688AB14(double a1, double a2, double a3, double a4)
{
  return a4;
}

void sub_1B688AB1C(void *a1@<X8>)
{
  *a1 = &unk_1F0F7EB70;
}

uint64_t sub_1B688AB2C()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B688AB8C()
{
  return sub_1B6E31B28();
}

float32x4_t sub_1B688ABDC(float32x4_t a1)
{
  a1.i32[3] = 0;
  float32x4_t v2 = vmaxnmq_f32(a1, (float32x4_t)xmmword_1B6E4FCD0);
  float32x4_t v3 = vmulq_lane_f32(v1[1], *(float32x2_t *)v2.f32, 1);
  *uint64_t v1 = vmulq_n_f32(*v1, v2.f32[0]);
  v1[1] = v3;
  float32x4_t result = vmulq_laneq_f32(v1[2], v2, 2);
  _OWORD v1[2] = result;
  return result;
}

void sub_1B688AC0C(float32x4_t *a1@<X8>, float32x4_t a2@<Q0>, float32x4_t a3@<Q1>, float32x4_t a4@<Q2>)
{
  int8x16_t v4 = (int8x16_t)vabsq_f32(a2);
  if (*(float *)v4.i32 > 0.00000011921
    || (v4.i32[0] = vextq_s8(v4, v4, 8uLL).u32[0],
        *(int32x2_t *)v4.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v4.i8),
        (v4.i8[4] & 1) == 0)
    || (__int8 v5 = v4.i8[0], v6 = 0uLL, (v5 & 1) == 0))
  {
    int32x4_t v7 = (int32x4_t)vmulq_f32(a2, a2);
    v7.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v7, 2), vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v7.i8, 1))).u32[0];
    float32x2_t v8 = vrsqrte_f32((float32x2_t)v7.u32[0]);
    float32x2_t v9 = vmul_f32(v8, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(v8, v8)));
    float32x4_t v6 = vmulq_n_f32(a2, vmul_f32(v9, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(v9, v9))).f32[0]);
  }
  int8x16_t v10 = (int8x16_t)vabsq_f32(a3);
  if (*(float *)v10.i32 > 0.00000011921
    || (v10.i32[0] = vextq_s8(v10, v10, 8uLL).u32[0],
        *(int32x2_t *)v10.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v10.i8),
        (v10.i8[4] & 1) == 0)
    || (__int8 v11 = v10.i8[0], v12 = 0uLL, (v11 & 1) == 0))
  {
    int32x4_t v13 = (int32x4_t)vmulq_f32(a3, a3);
    v13.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v13, 2), vadd_f32(*(float32x2_t *)v13.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v13.i8, 1))).u32[0];
    float32x2_t v14 = vrsqrte_f32((float32x2_t)v13.u32[0]);
    float32x2_t v15 = vmul_f32(v14, vrsqrts_f32((float32x2_t)v13.u32[0], vmul_f32(v14, v14)));
    float32x4_t v12 = vmulq_n_f32(a3, vmul_f32(v15, vrsqrts_f32((float32x2_t)v13.u32[0], vmul_f32(v15, v15))).f32[0]);
  }
  int8x16_t v16 = (int8x16_t)vabsq_f32(a4);
  if (*(float *)v16.i32 > 0.00000011921
    || (v16.i32[0] = vextq_s8(v16, v16, 8uLL).u32[0],
        *(int32x2_t *)v16.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v16.i8),
        (v16.i8[4] & 1) == 0)
    || (__int8 v17 = v16.i8[0], v18 = 0uLL, (v17 & 1) == 0))
  {
    int32x4_t v19 = (int32x4_t)vmulq_f32(a4, a4);
    v19.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v19, 2), vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1))).u32[0];
    float32x2_t v20 = vrsqrte_f32((float32x2_t)v19.u32[0]);
    float32x2_t v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v20, v20)));
    float32x4_t v18 = vmulq_n_f32(a4, vmul_f32(v21, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v21, v21))).f32[0]);
  }
  *a1 = v6;
  a1[1] = v12;
  a1[2] = v18;
}

uint64_t sub_1B688AD5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB7790(*a1, *a2);
}

uint64_t sub_1B688AD68()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688ADCC()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B688AE14()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688AE74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B688CEE0();
  *a1 = result;
  return result;
}

void sub_1B688AEA4(void *a1@<X8>)
{
  *a1 = ((unint64_t)*v1 << 48) + 0x306E6D756C6F63;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1B688AEC8()
{
  return ((unint64_t)*v0 << 48) + 0x306E6D756C6F63;
}

uint64_t sub_1B688AEE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B688CEE0();
  *a1 = result;
  return result;
}

uint64_t sub_1B688AF10(uint64_t a1)
{
  unint64_t v2 = sub_1B688FA08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B688AF4C(uint64_t a1)
{
  unint64_t v2 = sub_1B688FA08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t simd_float2x2.hash(into:)()
{
  return sub_1B6E33958();
}

uint64_t simd_float2x3.hash(into:)()
{
  sub_1B688CDF4();

  return sub_1B688CDF4();
}

uint64_t simd_float2x4.hash(into:)()
{
  sub_1B688CD7C();

  return sub_1B688CD7C();
}

uint64_t sub_1B688B098(void *a1, double a2, double a3)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  double v10 = a2;
  sub_1B62C550C((uint64_t)v8, v9);
  float32x4_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v6);
  sub_1B6E332B8();
  if (!v3)
  {
    double v10 = a3;
    sub_1B62C550C((uint64_t)v8, v9);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
}

void sub_1B688B200(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1B688D728(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

uint64_t sub_1B688B22C(void *a1)
{
  return sub_1B688B098(a1, *v1, v1[1]);
}

uint64_t sub_1B688B248()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688B2A4()
{
  sub_1B688CE58();

  return sub_1B688CE58();
}

uint64_t sub_1B688B2EC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688B344(float32x2_t *a1, float32x2_t *a2)
{
  return sub_1B688FA5C(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1B688B364(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1D8, (unint64_t *)&qword_1EB980EB0, v2);
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

__n128 sub_1B688B4D8@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B688DB08(a1);
  if (!v2)
  {
    DWORD2(v6) = v7;
    DWORD2(v4) = v5;
    *a2 = v4;
    a2[1] = v6;
  }
  result.n128_u64[0] = v4;
  result.n128_u32[2] = DWORD2(v4);
  return result;
}

uint64_t sub_1B688B50C(void *a1)
{
  return sub_1B688B364(a1);
}

uint64_t sub_1B688B530(uint64_t a1, uint64_t a2)
{
  return sub_1B688B754(a1, a2, (void (*)(unsigned char *, __n128))sub_1B688CDF4);
}

uint64_t sub_1B688B548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688B7D4(a1, a2, a3, (void (*)(__n128))sub_1B688CDF4);
}

uint64_t sub_1B688B560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688B84C(a1, a2, a3, (void (*)(unsigned char *, __n128))sub_1B688CDF4);
}

uint64_t sub_1B688B578(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B688B8C8(a1, a2, a3, a4, (uint64_t (*)(__n128, __n128, __n128, __n128))sub_1B688FA78);
}

uint64_t sub_1B688B590(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v2);
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B688B6F4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B688DEF4(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1B688B720(void *a1)
{
  return sub_1B688B590(a1);
}

uint64_t sub_1B688B73C(uint64_t a1, uint64_t a2)
{
  return sub_1B688B754(a1, a2, (void (*)(unsigned char *, __n128))sub_1B688CD7C);
}

uint64_t sub_1B688B754(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, __n128))
{
  __n128 v6 = *v3;
  __n128 v7 = v3[1];
  sub_1B6E33918();
  a3(v8, v6);
  a3(v8, v7);
  return sub_1B6E33988();
}

uint64_t sub_1B688B7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688B7D4(a1, a2, a3, (void (*)(__n128))sub_1B688CD7C);
}

uint64_t sub_1B688B7D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__n128))
{
  __n128 v7 = v4[1];
  a4(*v4);

  return ((uint64_t (*)(uint64_t, __n128))a4)(a1, v7);
}

uint64_t sub_1B688B834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688B84C(a1, a2, a3, (void (*)(unsigned char *, __n128))sub_1B688CD7C);
}

uint64_t sub_1B688B84C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, __n128))
{
  __n128 v7 = *v4;
  __n128 v8 = v4[1];
  sub_1B6E33918();
  a4(v9, v7);
  a4(v9, v8);
  return sub_1B6E33988();
}

uint64_t sub_1B688B8B0(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B688B8C8(a1, a2, a3, a4, (uint64_t (*)(__n128, __n128, __n128, __n128))sub_1B688FA98);
}

uint64_t sub_1B688B8C8(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(__n128, __n128, __n128, __n128))
{
  return a5(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1B688B8EC(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v2);
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

void sub_1B688BA9C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1B688E2D8(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
}

uint64_t sub_1B688BACC(void *a1)
{
  return sub_1B688B8EC(a1);
}

uint64_t sub_1B688BAEC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688BB60()
{
  sub_1B688CE58();
  sub_1B688CE58();

  return sub_1B688CE58();
}

uint64_t sub_1B688BBB8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688BC28(float32x2_t *a1, float32x2_t *a2)
{
  return sub_1B688FAB4(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1B688BC50(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1D8, (unint64_t *)&qword_1EB980EB0, v2);
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

double sub_1B688BDFC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B688E73C(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1B688BE40(void *a1)
{
  return sub_1B688BC50(a1);
}

uint64_t sub_1B688BE58(uint64_t a1, uint64_t a2)
{
  return sub_1B688C0C8(a1, a2, (void (*)(unsigned char *, __n128))sub_1B688CDF4);
}

uint64_t sub_1B688BE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688C160(a1, a2, a3, (void (*)(__n128))sub_1B688CDF4);
}

uint64_t sub_1B688BE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688C1F0(a1, a2, a3, (void (*)(unsigned char *, __n128))sub_1B688CDF4);
}

uint64_t sub_1B688BEA0(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B688C284(a1, a2, a3, a4, (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))sub_1B688FAD8);
}

uint64_t sub_1B688BEB8(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v2);
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B688C060@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1B688EBBC(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1B688C090(void *a1)
{
  return sub_1B688BEB8(a1);
}

uint64_t sub_1B688C0B0(uint64_t a1, uint64_t a2)
{
  return sub_1B688C0C8(a1, a2, (void (*)(unsigned char *, __n128))sub_1B688CD7C);
}

uint64_t sub_1B688C0C8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, __n128))
{
  __n128 v6 = *v3;
  __n128 v7 = v3[1];
  __n128 v8 = v3[2];
  sub_1B6E33918();
  a3(v9, v6);
  a3(v9, v7);
  a3(v9, v8);
  return sub_1B6E33988();
}

uint64_t sub_1B688C148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688C160(a1, a2, a3, (void (*)(__n128))sub_1B688CD7C);
}

uint64_t sub_1B688C160(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__n128))
{
  __n128 v7 = v4[1];
  __n128 v8 = v4[2];
  a4(*v4);
  ((void (*)(uint64_t, __n128))a4)(a1, v7);

  return ((uint64_t (*)(uint64_t, __n128))a4)(a1, v8);
}

uint64_t sub_1B688C1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688C1F0(a1, a2, a3, (void (*)(unsigned char *, __n128))sub_1B688CD7C);
}

uint64_t sub_1B688C1F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, __n128))
{
  __n128 v7 = *v4;
  __n128 v8 = v4[1];
  __n128 v9 = v4[2];
  sub_1B6E33918();
  a4(v10, v7);
  a4(v10, v8);
  a4(v10, v9);
  return sub_1B6E33988();
}

uint64_t sub_1B688C26C(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B688C284(a1, a2, a3, a4, (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))sub_1B688FB00);
}

uint64_t sub_1B688C284(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(__n128, __n128, __n128, __n128, __n128, __n128))
{
  return a5(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1B688C2B0(void *a1, double a2, double a3, double a4, double a5)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  double v14 = a2;
  sub_1B62C550C((uint64_t)v12, v13);
  double v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
  sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v10);
  sub_1B6E332B8();
  if (!v5)
  {
    double v14 = a3;
    sub_1B62C550C((uint64_t)v12, v13);
    sub_1B6E332B8();
    double v14 = a4;
    sub_1B62C550C((uint64_t)v12, v13);
    sub_1B6E332B8();
    double v14 = a5;
    sub_1B62C550C((uint64_t)v12, v13);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
}

void sub_1B688C4A0(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1B688F024(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
}

uint64_t sub_1B688C4D0(void *a1)
{
  return sub_1B688C2B0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1B688C4F0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688C570()
{
  sub_1B688CE58();
  sub_1B688CE58();
  sub_1B688CE58();

  return sub_1B688CE58();
}

uint64_t sub_1B688C5DC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B688C658(float32x2_t *a1, float32x2_t *a2)
{
  return sub_1B688FB24(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1B688C680(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1D8, (unint64_t *)&qword_1EB980EB0, v2);
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

double sub_1B688C874@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B688F504(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1B688C8B8(void *a1)
{
  return sub_1B688C680(a1);
}

uint64_t sub_1B688C8D0(uint64_t a1, uint64_t a2)
{
  return sub_1B688CB50(a1, a2, (void (*)(unsigned char *, __n128))sub_1B688CDF4);
}

uint64_t sub_1B688C8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688CBFC(a1, a2, a3, (void (*)(__n128))sub_1B688CDF4);
}

uint64_t sub_1B688C900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688CCA8(a1, a2, a3, (void (*)(unsigned char *, __n128))sub_1B688CDF4);
}

uint64_t sub_1B688C918(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B688CD50(a1, a2, a3, a4, (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))sub_1B688FB50);
}

uint64_t sub_1B688C930(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1F8, (unint64_t *)&qword_1EB980EF0, v2);
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

uint64_t sub_1B688CB18(void *a1)
{
  return sub_1B688C930(a1);
}

uint64_t sub_1B688CB38(uint64_t a1, uint64_t a2)
{
  return sub_1B688CB50(a1, a2, (void (*)(unsigned char *, __n128))sub_1B688CD7C);
}

uint64_t sub_1B688CB50(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, __n128))
{
  __n128 v6 = *v3;
  __n128 v7 = v3[1];
  __n128 v8 = v3[2];
  __n128 v9 = v3[3];
  sub_1B6E33918();
  a3(v10, v6);
  a3(v10, v7);
  a3(v10, v8);
  a3(v10, v9);
  return sub_1B6E33988();
}

uint64_t sub_1B688CBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688CBFC(a1, a2, a3, (void (*)(__n128))sub_1B688CD7C);
}

uint64_t sub_1B688CBFC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__n128))
{
  __n128 v7 = v4[1];
  __n128 v8 = v4[2];
  __n128 v9 = v4[3];
  a4(*v4);
  ((void (*)(uint64_t, __n128))a4)(a1, v7);
  ((void (*)(uint64_t, __n128))a4)(a1, v8);

  return ((uint64_t (*)(uint64_t, __n128))a4)(a1, v9);
}

uint64_t sub_1B688CC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B688CCA8(a1, a2, a3, (void (*)(unsigned char *, __n128))sub_1B688CD7C);
}

uint64_t sub_1B688CCA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, __n128))
{
  __n128 v7 = *v4;
  __n128 v8 = v4[1];
  __n128 v9 = v4[2];
  __n128 v10 = v4[3];
  sub_1B6E33918();
  a4(v11, v7);
  a4(v11, v8);
  a4(v11, v9);
  a4(v11, v10);
  return sub_1B6E33988();
}

uint64_t sub_1B688CD38(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B688CD50(a1, a2, a3, a4, (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))sub_1B688FB80);
}

uint64_t sub_1B688CD50(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1B688CD7C()
{
  return sub_1B6E33958();
}

uint64_t sub_1B688CDF4()
{
  return sub_1B6E33958();
}

uint64_t sub_1B688CE58()
{
  return sub_1B6E33958();
}

float32_t sub_1B688CEA8(float32x4_t a1)
{
  a1.i32[3] = 0;
  a1.i32[0] = vmaxnmq_f32(a1, (float32x4_t)xmmword_1B6E4FCD0).u32[0];
  return a1.f32[0];
}

uint64_t sub_1B688CEE0()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B688CF2C()
{
  unint64_t result = qword_1EB97F208;
  if (!qword_1EB97F208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F208);
  }
  return result;
}

float32x4_t sub_1B688CF80@<Q0>(float32x4_t *a1@<X8>, double a2@<D0>, float a3@<S1>, double a4@<D2>)
{
  unint64_t v5 = (unint64_t)__sincosf_stret(a3);
  LODWORD(v6) = HIDWORD(v5);
  *((float *)&v6 + 1) = -*(float *)&v5;
  float32x4_t v7 = vaddq_f32(vmlaq_f32(vmulq_n_f32((float32x4_t)v6, *(float *)&a2), (float32x4_t)0, (float32x4_t)v5), (float32x4_t)0);
  float32x4_t v8 = vmulq_f32((float32x4_t)v6, (float32x4_t)0);
  float32x4_t v9 = vaddq_f32(vmlaq_lane_f32(v8, (float32x4_t)v5, *(float32x2_t *)&a2, 1), (float32x4_t)0);
  float32x4_t v10 = vaddq_f32(vmlaq_f32(v8, (float32x4_t)0, (float32x4_t)v5), (float32x4_t)xmmword_1B6E4F2E0);
  float32x4_t result = vaddq_f32(v10, vmlaq_lane_f32(vmulq_n_f32(v7, *(float *)&a4), v9, *(float32x2_t *)&a4, 1));
  *a1 = vmlaq_f32(vmlaq_f32(v7, (float32x4_t)0, v9), (float32x4_t)0, v10);
  a1[1] = vmlaq_f32(vaddq_f32(v9, vmulq_f32(v7, (float32x4_t)0)), (float32x4_t)0, v10);
  a1[2] = result;
  return result;
}

double sub_1B688D02C(char a1, float a2, float a3, double a4, float a5, float a6, float a7)
{
  float v7 = fmaxf(a6, 0.0001);
  if ((float)(v7 + 0.0001) < a7) {
    float v8 = a7;
  }
  else {
    float v8 = v7 + 0.0001;
  }
  *(float *)&unsigned int v9 = 2.0 / (float)(a3 - a2);
  v10.i32[0] = 0;
  *(float *)&v10.i32[1] = 2.0 / (float)(a5 - *(float *)&v9);
  __asm { FMOV            V4.4S, #-1.0 }
  v10.i64[1] = COERCE_UNSIGNED_INT((float)(*(float *)&v9 + a5) / (float)(a5 - *(float *)&v9));
  int32x4_t v16 = vzip2q_s32(v10, (int32x4_t)xmmword_1B6E4F340);
  *(float *)v16.i32 = v7;
  return sub_1B6333D80(a1, *(double *)v16.i64, COERCE_DOUBLE((unint64_t)LODWORD(v8)), (float32x4_t)v9);
}

float sub_1B688D0B8(float a1, float a2)
{
  __asm { FMOV            V3.2S, #1.0 }
  return 2.0 / (float)(a2 - a1);
}

ValueMetadata *type metadata accessor for Float2x2Coder()
{
  return &type metadata for Float2x2Coder;
}

ValueMetadata *type metadata accessor for Float2x3Coder()
{
  return &type metadata for Float2x3Coder;
}

ValueMetadata *type metadata accessor for Float2x4Coder()
{
  return &type metadata for Float2x4Coder;
}

ValueMetadata *type metadata accessor for Float3x2Coder()
{
  return &type metadata for Float3x2Coder;
}

ValueMetadata *type metadata accessor for Float3x3Coder()
{
  return &type metadata for Float3x3Coder;
}

ValueMetadata *type metadata accessor for Float3x4Coder()
{
  return &type metadata for Float3x4Coder;
}

ValueMetadata *type metadata accessor for Float4x2Coder()
{
  return &type metadata for Float4x2Coder;
}

ValueMetadata *type metadata accessor for Float4x3Coder()
{
  return &type metadata for Float4x3Coder;
}

ValueMetadata *type metadata accessor for Float4x4Coder()
{
  return &type metadata for Float4x4Coder;
}

unsigned char *storeEnumTagSinglePayload for ProjectionDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *float32x4_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B688D2CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *float32x4_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProjectionDirection()
{
  return &type metadata for ProjectionDirection;
}

unint64_t sub_1B688D308()
{
  unint64_t result = qword_1E9DD1B18;
  if (!qword_1E9DD1B18)
  {
    sub_1B688D360();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B18);
  }
  return result;
}

void sub_1B688D360()
{
  if (!qword_1E9DD1B20)
  {
    unint64_t v0 = sub_1B6E31D18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1B20);
    }
  }
}

unint64_t sub_1B688D3BC()
{
  unint64_t result = qword_1E9DD1B28;
  if (!qword_1E9DD1B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B28);
  }
  return result;
}

unint64_t sub_1B688D414()
{
  unint64_t result = qword_1E9DD1B30;
  if (!qword_1E9DD1B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B30);
  }
  return result;
}

unint64_t sub_1B688D46C()
{
  unint64_t result = qword_1E9DD1B38;
  if (!qword_1E9DD1B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B38);
  }
  return result;
}

unint64_t sub_1B688D4C4()
{
  unint64_t result = qword_1E9DD1B40;
  if (!qword_1E9DD1B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B40);
  }
  return result;
}

unint64_t sub_1B688D51C()
{
  unint64_t result = qword_1E9DD1B48;
  if (!qword_1E9DD1B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B48);
  }
  return result;
}

unint64_t sub_1B688D574()
{
  unint64_t result = qword_1E9DD1B50;
  if (!qword_1E9DD1B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B50);
  }
  return result;
}

unint64_t sub_1B688D5CC()
{
  unint64_t result = qword_1E9DD1B58;
  if (!qword_1E9DD1B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B58);
  }
  return result;
}

unint64_t sub_1B688D624()
{
  unint64_t result = qword_1E9DD1B60;
  if (!qword_1E9DD1B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B60);
  }
  return result;
}

unint64_t sub_1B688D67C()
{
  unint64_t result = qword_1E9DD1B68;
  if (!qword_1E9DD1B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B68);
  }
  return result;
}

unint64_t sub_1B688D6D4()
{
  unint64_t result = qword_1E9DD1B70;
  if (!qword_1E9DD1B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B70);
  }
  return result;
}

double sub_1B688D728(void *a1)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  unsigned int v9 = (char *)&v16[-1] - v8;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1B62C14BC(a1, v10);
  if (sub_1B62BF5E0(2005, v10, v11))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B688FA08();
    sub_1B6E33A48();
    if (!v1)
    {
      float32x4_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
      sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      LOBYTE(v15) = 0;
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v12);
      sub_1B6E32DF8();
      double v2 = *(double *)v16;
      LOBYTE(v15) = 1;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
      sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v13);
      sub_1B6E33168();
      double v2 = v15;
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B6E33168();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B688DB08(void *a1)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62BF5E0(2005, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B688FA08();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      LOBYTE(v16) = 0;
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v11);
      sub_1B6E32DF8();
      long long v15 = v17;
      LOBYTE(v16) = 1;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      long long v14 = v17;
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      float32x4_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      sub_1B62C550C((uint64_t)&v17, v18);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v12);
      sub_1B6E33168();
      long long v15 = v16;
      sub_1B62C550C((uint64_t)&v17, v18);
      sub_1B6E33168();
      long long v14 = v16;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v17);
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

uint64_t sub_1B688DEF4(void *a1)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62BF5E0(2005, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B688FA08();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      LOBYTE(v16) = 0;
      sub_1B62B11C0((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v11);
      sub_1B6E32DF8();
      long long v15 = v17;
      LOBYTE(v16) = 1;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      long long v14 = v17;
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      float32x4_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      sub_1B62C550C((uint64_t)&v17, v18);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v12);
      sub_1B6E33168();
      long long v15 = v16;
      sub_1B62C550C((uint64_t)&v17, v18);
      sub_1B6E33168();
      long long v14 = v16;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v17);
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

double sub_1B688E2D8(void *a1)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v16[-1] - v8;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1B62C14BC(a1, v10);
  if (sub_1B62BF5E0(2005, v10, v11))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B688FA08();
    sub_1B6E33A48();
    if (!v1)
    {
      float32x4_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
      sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      LOBYTE(v18) = 0;
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v12);
      sub_1B6E32DF8();
      double v2 = *(double *)v16;
      LOBYTE(v18) = 1;
      sub_1B6E32DF8();
      LOBYTE(v18) = 2;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
      sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v13);
      sub_1B6E33168();
      double v2 = v18;
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B6E33168();
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B6E33168();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B688E73C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_1B62C14BC(a1, v11);
  if (!sub_1B62BF5E0(2005, v11, v12))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v2)
    {
      long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      sub_1B62C550C((uint64_t)&v21, v22);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v14);
      sub_1B6E33168();
      long long v19 = v20;
      sub_1B62C550C((uint64_t)&v21, v22);
      sub_1B6E33168();
      long long v18 = v20;
      sub_1B62C550C((uint64_t)&v21, v22);
      sub_1B6E33168();
      long long v17 = v20;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v21);
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B688FA08();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  LOBYTE(v20) = 0;
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v13);
  sub_1B6E32DF8();
  long long v19 = v21;
  LOBYTE(v20) = 1;
  sub_1B6E32DF8();
  long long v18 = v21;
  LOBYTE(v20) = 2;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  long long v17 = v21;
LABEL_7:
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  long long v16 = v18;
  *a2 = v19;
  a2[1] = v16;
  a2[2] = v17;
  return result;
}

uint64_t sub_1B688EBBC(void *a1)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (sub_1B62BF5E0(2005, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B688FA08();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      LOBYTE(v17) = 0;
      sub_1B62B11C0((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v11);
      sub_1B6E32DF8();
      long long v16 = v18;
      LOBYTE(v17) = 1;
      sub_1B6E32DF8();
      long long v15 = v18;
      LOBYTE(v17) = 2;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      long long v14 = v18;
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
      sub_1B62C550C((uint64_t)&v18, v19);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v12);
      sub_1B6E33168();
      long long v16 = v17;
      sub_1B62C550C((uint64_t)&v18, v19);
      sub_1B6E33168();
      long long v15 = v17;
      sub_1B62C550C((uint64_t)&v18, v19);
      sub_1B6E33168();
      long long v14 = v17;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v18);
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
}

double sub_1B688F024(void *a1)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v16[-1] - v8;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1B62C14BC(a1, v10);
  if (sub_1B62BF5E0(2005, v10, v11))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B688FA08();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
      sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      LOBYTE(v15) = 0;
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v12);
      sub_1B6E32DF8();
      double v2 = *(double *)v16;
      LOBYTE(v15) = 1;
      sub_1B6E32DF8();
      LOBYTE(v15) = 2;
      sub_1B6E32DF8();
      LOBYTE(v15) = 3;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  else
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v1)
    {
      uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
      sub_1B62B1158(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v13);
      sub_1B6E33168();
      double v2 = v15;
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B6E33168();
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B6E33168();
      sub_1B62C550C((uint64_t)v16, v17);
      sub_1B6E33168();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B688F504@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B62B1158(0, &qword_1EB980A48, (uint64_t (*)(void))sub_1B688FA08, (uint64_t)&type metadata for MatrixCodingKeys_pre2005, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_1B62C14BC(a1, v11);
  if (!sub_1B62BF5E0(2005, v11, v12))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A18();
    if (!v2)
    {
      long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      sub_1B62C550C((uint64_t)&v23, v24);
      sub_1B62B11C0((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v14);
      sub_1B6E33168();
      long long v21 = v22;
      sub_1B62C550C((uint64_t)&v23, v24);
      sub_1B6E33168();
      long long v20 = v22;
      sub_1B62C550C((uint64_t)&v23, v24);
      sub_1B6E33168();
      long long v19 = v22;
      sub_1B62C550C((uint64_t)&v23, v24);
      sub_1B6E33168();
      long long v18 = v22;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v23);
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B688FA08();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
  sub_1B62B1158(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  LOBYTE(v22) = 0;
  sub_1B62B11C0((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v13);
  sub_1B6E32DF8();
  long long v21 = v23;
  LOBYTE(v22) = 1;
  sub_1B6E32DF8();
  long long v20 = v23;
  LOBYTE(v22) = 2;
  sub_1B6E32DF8();
  long long v19 = v23;
  LOBYTE(v22) = 3;
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  long long v18 = v23;
LABEL_7:
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  long long v16 = v20;
  *a2 = v21;
  a2[1] = v16;
  long long v17 = v18;
  a2[2] = v19;
  a2[3] = v17;
  return result;
}

unint64_t sub_1B688FA08()
{
  unint64_t result = qword_1EB97F928;
  if (!qword_1EB97F928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F928);
  }
  return result;
}

uint64_t sub_1B688FA5C(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4)
{
  uint32x2_t v4 = (uint32x2_t)vand_s8((int8x8_t)vceq_f32(a1, a3), (int8x8_t)vceq_f32(a2, a4));
  return vpmin_u32(v4, v4).u32[0] >> 31;
}

uint64_t sub_1B688FA78(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4)
{
  uint32x4_t v4 = (uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(a1, a3), (int8x16_t)vceqq_f32(a2, a4));
  v4.i32[3] = v4.i32[2];
  return vminvq_u32(v4) >> 31;
}

uint64_t sub_1B688FA98(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4)
{
  return vminvq_u32((uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(a1, a3), (int8x16_t)vceqq_f32(a2, a4))) >> 31;
}

uint64_t sub_1B688FAB4(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, float32x2_t a5, float32x2_t a6)
{
  uint32x2_t v6 = (uint32x2_t)vand_s8(vand_s8((int8x8_t)vceq_f32(a1, a4), (int8x8_t)vceq_f32(a2, a5)), (int8x8_t)vceq_f32(a3, a6));
  return vpmin_u32(v6, v6).u32[0] >> 31;
}

uint64_t sub_1B688FAD8(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  uint32x4_t v6 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a4), (int8x16_t)vceqq_f32(a2, a5)), (int8x16_t)vceqq_f32(a3, a6));
  v6.i32[3] = v6.i32[2];
  return vminvq_u32(v6) >> 31;
}

uint64_t sub_1B688FB00(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a4), (int8x16_t)vceqq_f32(a2, a5)), (int8x16_t)vceqq_f32(a3, a6))) >> 31;
}

uint64_t sub_1B688FB24(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, float32x2_t a5, float32x2_t a6, float32x2_t a7, float32x2_t a8)
{
  uint32x2_t v8 = (uint32x2_t)vand_s8(vand_s8((int8x8_t)vceq_f32(a1, a5), (int8x8_t)vceq_f32(a2, a6)), vand_s8((int8x8_t)vceq_f32(a3, a7), (int8x8_t)vceq_f32(a4, a8)));
  return vpmin_u32(v8, v8).u32[0] >> 31;
}

uint64_t sub_1B688FB50(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  uint32x4_t v8 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a5), (int8x16_t)vceqq_f32(a2, a6)), vandq_s8((int8x16_t)vceqq_f32(a3, a7), (int8x16_t)vceqq_f32(a4, a8)));
  v8.i32[3] = v8.i32[2];
  return vminvq_u32(v8) >> 31;
}

uint64_t sub_1B688FB80(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a5), (int8x16_t)vceqq_f32(a2, a6)), vandq_s8((int8x16_t)vceqq_f32(a3, a7), (int8x16_t)vceqq_f32(a4, a8)))) >> 31;
}

unsigned char *storeEnumTagSinglePayload for MatrixCodingKeys_pre2005(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B688FC78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatrixCodingKeys_pre2005()
{
  return &type metadata for MatrixCodingKeys_pre2005;
}

unint64_t sub_1B688FCB4()
{
  unint64_t result = qword_1E9DD1B78;
  if (!qword_1E9DD1B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B78);
  }
  return result;
}

unint64_t sub_1B688FD0C()
{
  unint64_t result = qword_1EB97F938;
  if (!qword_1EB97F938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F938);
  }
  return result;
}

unint64_t sub_1B688FD64()
{
  unint64_t result = qword_1EB97F930;
  if (!qword_1EB97F930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F930);
  }
  return result;
}

uint64_t sub_1B688FDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)(result + 8) + 32))(a1);
    unint64_t v6 = v5;
    if (v5 >> 62)
    {
      if (sub_1B6E32C18())
      {
LABEL_4:
        if ((v6 & 0xC000000000000001) == 0)
        {
          uint64_t v7 = *(void *)(v6 + 32);
          swift_retain();
LABEL_6:
          swift_bridgeObjectRelease();
          uint64_t v9 = *(void *)(v7 + 16);
          uint64_t v8 = *(void *)(v7 + 24);
          uint64_t v10 = *(void *)(v7 + 48);
          char v11 = *(unsigned char *)(v7 + 56);
          __int16 v12 = *(_WORD *)(v7 + 58);
          swift_bridgeObjectRetain();
          long long v13 = *(_OWORD *)(v7 + 32);
          swift_retain();
          uint64_t result = swift_release();
          *(void *)a2 = v9;
          *(void *)(a2 + 8) = v8;
          *(_OWORD *)(a2 + 16) = v13;
          *(void *)(a2 + 32) = v10;
          *(unsigned char *)(a2 + 40) = v11;
          *(_WORD *)(a2 + 42) = v12;
          return result;
        }
LABEL_9:
        uint64_t v7 = MEMORY[0x1BA9B4580](0, v6);
        goto LABEL_6;
      }
    }
    else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B688FEE8@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B62F23B8(*a1);
  *a2 = result;
  return result;
}

void sub_1B688FF14(void *a1@<X8>)
{
  *a1 = &unk_1F0F79BA8;
}

unint64_t sub_1B688FF24(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 < 0x40 && ((1 << v2) & v1) != 0) {
        v1 &= ~(1 << v2);
      }
      int v4 = sub_1B62F23B8(v2);
      uint64_t result = 0;
      if (v4 == 28) {
        break;
      }
      sub_1B6E31818();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      if (!v1) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_1B689000C()
{
  return sub_1B688FF24(*v0);
}

uint64_t sub_1B6890014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4 = a1 == 1936941421 && a2 == 0xE400000000000000;
  if (v4 || (sub_1B6E334B8() & 1) != 0)
  {
    uint64_t v7 = &type metadata for Mass;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    uint64_t v7 = &type metadata for Color;
  }
  else
  {
    if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0) {
      goto LABEL_16;
    }
    if (a1 == 0x6431657A6973 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for Scale1;
      goto LABEL_7;
    }
    if (a1 == 0x6432657A6973 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for Scale2;
      goto LABEL_7;
    }
    if (a1 == 0x6433657A6973 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
LABEL_16:
      uint64_t v7 = &type metadata for Scale3;
    }
    else if (a1 == 0x746567726174 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleTarget;
    }
    else if (a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for Velocity;
    }
    else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for Position;
    }
    else if (a1 == 0x7461645F72657375 && a2 == 0xEA00000000003161 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for UserData1;
    }
    else if (a1 == 0x7461645F72657375 && a2 == 0xEA00000000003261 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for UserData2;
    }
    else if (a1 == 0x7461645F72657375 && a2 == 0xEA00000000003361 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for UserData3;
    }
    else if (a1 == 0x7461645F72657375 && a2 == 0xEA00000000003461 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for UserData4;
    }
    else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleID;
    }
    else if (a1 == 0x695F746E65726170 && a2 == 0xE900000000000064 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleParentID;
    }
    else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleAge;
    }
    else if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for Orientation;
    }
    else if (a1 == 0x73656E6867756F72 && a2 == 0xE900000000000073 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleRoughness;
    }
    else if (a1 == 0x73656E6C6174656DLL && a2 == 0xE900000000000073 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleMetalness;
    }
    else if (a1 == 0x6E6F697373696D65 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleEmission;
    }
    else if (a1 == 0x665F7261656E696CLL && a2 == 0xED0000726F746361 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for LinearFactor;
    }
    else if (a1 == 0x5F72616C75676E61 && a2 == 0xEE00726F74636166 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for AngularFactor;
    }
    else if (a1 == 0x746F766970 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticlePivot;
    }
    else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleAngle;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001B6F3B060 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for AngularVelocity;
    }
    else if (a1 == 0x5F65727574786574 && a2 == 0xED0000656D617266 || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleTextureFrame;
    }
    else if (a1 == 0x65765F656C676E61 && a2 == 0xEE00797469636F6CLL || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for ParticleAngleVelocity;
    }
    else if (a1 == 0x726F66736E617274 && a2 == 0xE90000000000006DLL || (sub_1B6E334B8() & 1) != 0)
    {
      uint64_t v7 = &type metadata for WorldTransform;
    }
    else
    {
      if (a1 != 1684366707 || a2 != 0xE400000000000000)
      {
        uint64_t result = sub_1B6E334B8();
        if ((result & 1) == 0)
        {
          uint64_t v9 = 0;
          uint64_t v11 = 0;
          uint64_t v12 = 0;
          int v13 = 0;
          long long v10 = 0uLL;
          goto LABEL_8;
        }
      }
      uint64_t v7 = &type metadata for Seed;
    }
  }
LABEL_7:
  uint64_t result = sub_1B688FDB8((uint64_t)v7, (uint64_t)&v14);
  uint64_t v9 = v14;
  long long v10 = v15;
  uint64_t v11 = v16;
  uint64_t v12 = v17;
  int v13 = v18 | (v19 << 16);
LABEL_8:
  *(void *)a3 = v9;
  *(_OWORD *)(a3 + 8) = v10;
  *(void *)(a3 + 24) = v11;
  *(void *)(a3 + 32) = v12;
  *(_DWORD *)(a3 + 40) = v13;
  return result;
}

uint64_t sub_1B6890B0C()
{
  if (swift_dynamicCastMetatype()) {
    return 0x7373616D5F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6F6C6F635F746567;
  }
  unint64_t v0 = 0x657A69735F746567;
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype() || swift_dynamicCastMetatype()) {
    return v0;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x677261745F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return v0;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6F6C65765F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x69736F705F746567;
  }
  unint64_t v0 = 0x726573755F746567;
  if (swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype())
  {
    return v0;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x64695F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x657261705F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6567615F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6569726F5F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x67756F725F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6174656D5F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x73696D655F746567;
  }
  unint64_t v0 = 0xD000000000000011;
  if (swift_dynamicCastMetatype()) {
    return v0;
  }
  if (swift_dynamicCastMetatype()) {
    return 0xD000000000000012;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6F7669705F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6C676E615F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0xD000000000000014;
  }
  if (swift_dynamicCastMetatype()) {
    return v0;
  }
  if (swift_dynamicCastMetatype()) {
    return 0xD000000000000012;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x6E6172745F746567;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x646565735F746567;
  }
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ParticleStoredDataSet()
{
  return &type metadata for ParticleStoredDataSet;
}

unint64_t sub_1B6891240()
{
  unint64_t result = qword_1E9DD1B80;
  if (!qword_1E9DD1B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B80);
  }
  return result;
}

unint64_t sub_1B6891298()
{
  unint64_t result = qword_1E9DD1B88;
  if (!qword_1E9DD1B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B88);
  }
  return result;
}

unint64_t sub_1B68912F0()
{
  unint64_t result = qword_1E9DD1B90;
  if (!qword_1E9DD1B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B90);
  }
  return result;
}

unint64_t sub_1B6891348()
{
  unint64_t result = qword_1E9DD1B98;
  if (!qword_1E9DD1B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1B98);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleStoredData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ParticleStoredData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68914F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleStoredData()
{
  return &type metadata for ParticleStoredData;
}

unint64_t sub_1B6891534()
{
  unint64_t result = qword_1E9DD1BA0;
  if (!qword_1E9DD1BA0)
  {
    sub_1B689158C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1BA0);
  }
  return result;
}

void sub_1B689158C()
{
  if (!qword_1E9DD1BA8)
  {
    unint64_t v0 = sub_1B6E31D18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1BA8);
    }
  }
}

unint64_t sub_1B68915E8()
{
  unint64_t result = qword_1E9DD1BB0;
  if (!qword_1E9DD1BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1BB0);
  }
  return result;
}

double sub_1B689163C()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B6781A04(1, 1, (uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1E9E493D0 = v1[0];
  unk_1E9E493E0 = v1[1];
  qword_1E9E493F0 = v2;
  return result;
}

float sub_1B68916F0()
{
  return *(float *)(v0 + 12);
}

void sub_1B68916F8(float a1)
{
  *(float *)(v1 + 12) = a1;
}

void sub_1B6891700(float a1)
{
  *(float *)(v1 + 8) = a1;
}

float sub_1B6891708()
{
  return *(float *)(v0 + 4);
}

void sub_1B6891710(float a1)
{
  *(float *)(v1 + 4) = a1;
}

double sub_1B6891718@<D0>(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 4) = xmmword_1B6E4F370;
  *(void *)(a1 + 20) = 0xFF00000000;
  return result;
}

uint64_t sub_1B689173C(void *a1)
{
  sub_1B689406C(0, &qword_1E9DD1BC0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = &v10[-v7];
  uint64_t result = sub_1B68918AC(a1, (uint64_t)&v10[-v7]);
  if (!v1)
  {
    v10[15] = 6;
    sub_1B6E32F58();
    v10[14] = 7;
    sub_1B6E32F58();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t sub_1B68918AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6893F78();
  sub_1B6E33A88();
  sub_1B689406C(0, &qword_1E9DD1BC0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  sub_1B6E32F78();
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B67AAAB4();
  return sub_1B6E32FA8();
}

uint64_t sub_1B6891AB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6893F78();
  sub_1B6E33A88();
  sub_1B689406C(0, &qword_1E9DD1BC0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  sub_1B6E32F78();
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B67AAAB4();
  return sub_1B6E32FA8();
}

uint64_t sub_1B6891CB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6893F78();
  sub_1B6E33A88();
  sub_1B689406C(0, &qword_1E9DD1BC0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  sub_1B6E32F78();
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B67AAAB4();
  return sub_1B6E32FA8();
}

uint64_t sub_1B6891EB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6891EE8(a1, a2);
}

uint64_t sub_1B6891ED0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6891CB4(a1, a2);
}

uint64_t sub_1B6891EE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6893F78();
  sub_1B6E33A88();
  sub_1B689406C(0, &qword_1E9DD1BC0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  sub_1B6E32F78();
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B6E32F78();
  sub_1B67AAAB4();
  return sub_1B6E32FA8();
}

uint64_t sub_1B6892100(void *a1, char a2)
{
  uint64_t v4 = v2;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6893F78();
  uint64_t result = sub_1B6E33A48();
  if (!v3)
  {
    sub_1B689406C(0, (unint64_t *)&unk_1E9DD6DA0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDC0]);
    uint64_t v8 = sub_1B6E32D58();
    float v9 = *(float *)&v8;
    if ((v8 & 0x100000000) != 0) {
      float v9 = 0.0;
    }
    v2[1] = v9;
    uint64_t v10 = sub_1B6E32D58();
    float v11 = *(float *)&v10;
    if ((v10 & 0x100000000) != 0) {
      float v11 = 0.0;
    }
    v2[2] = v11;
    sub_1B6E32DC8();
    float v13 = v12;
    v2[3] = v12;
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62BF5E0(1039, v14, v15) && (a2 & 1) == 0) {
      v4[3] = v13 + 1.0;
    }
    sub_1B6E32DC8();
    *((_DWORD *)v4 + 4) = v16;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62B8F14(2024, v17, v18))
    {
      sub_1B6E32DC8();
      *((_DWORD *)v4 + 5) = v19;
    }
    sub_1B67AAA60();
    uint64_t result = sub_1B6E32D78();
    int v20 = v21;
    if (v22) {
      int v20 = 255;
    }
    *((_DWORD *)v4 + 6) = v20;
  }
  return result;
}

uint64_t sub_1B68923B4(void *a1, char a2)
{
  uint64_t v4 = v2;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6893F78();
  uint64_t result = sub_1B6E33A48();
  if (!v3)
  {
    sub_1B689406C(0, (unint64_t *)&unk_1E9DD6DA0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDC0]);
    uint64_t v8 = sub_1B6E32D58();
    float v9 = *(float *)&v8;
    if ((v8 & 0x100000000) != 0) {
      float v9 = 0.0;
    }
    *uint64_t v2 = v9;
    uint64_t v10 = sub_1B6E32D58();
    float v11 = *(float *)&v10;
    if ((v10 & 0x100000000) != 0) {
      float v11 = 0.0;
    }
    v2[1] = v11;
    sub_1B6E32DC8();
    float v13 = v12;
    v2[2] = v12;
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62BF5E0(1039, v14, v15) && (a2 & 1) == 0) {
      v4[2] = v13 + 1.0;
    }
    sub_1B6E32DC8();
    *((_DWORD *)v4 + 3) = v16;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62B8F14(2024, v17, v18))
    {
      sub_1B6E32DC8();
      *((_DWORD *)v4 + 7) = v19;
    }
    sub_1B67AAA60();
    uint64_t result = sub_1B6E32D78();
    int v20 = v21;
    if (v22) {
      int v20 = 255;
    }
    *((_DWORD *)v4 + 4) = v20;
  }
  return result;
}

uint64_t sub_1B6892668(void *a1, char a2)
{
  uint64_t v4 = v2;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6893F78();
  uint64_t result = sub_1B6E33A48();
  if (!v3)
  {
    sub_1B689406C(0, (unint64_t *)&unk_1E9DD6DA0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDC0]);
    uint64_t v8 = sub_1B6E32D58();
    float v9 = *(float *)&v8;
    if ((v8 & 0x100000000) != 0) {
      float v9 = 0.0;
    }
    *uint64_t v2 = v9;
    uint64_t v10 = sub_1B6E32D58();
    float v11 = *(float *)&v10;
    if ((v10 & 0x100000000) != 0) {
      float v11 = 0.0;
    }
    v2[1] = v11;
    sub_1B6E32DC8();
    float v13 = v12;
    v2[2] = v12;
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62BF5E0(1039, v14, v15) && (a2 & 1) == 0) {
      v4[2] = v13 + 1.0;
    }
    sub_1B6E32DC8();
    *((_DWORD *)v4 + 3) = v16;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62B8F14(2024, v17, v18))
    {
      sub_1B6E32DC8();
      *((_DWORD *)v4 + 4) = v19;
    }
    sub_1B67AAA60();
    uint64_t result = sub_1B6E32D78();
    int v20 = v21;
    if (v22) {
      int v20 = 255;
    }
    *((_DWORD *)v4 + 5) = v20;
  }
  return result;
}

uint64_t sub_1B689291C(void *a1, char a2)
{
  return sub_1B6892668(a1, a2);
}

double sub_1B6892934@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6893B7C(a1, (uint64_t)v5);
  if (!v2)
  {
    *a2 = *(_OWORD *)v5;
    double result = *(double *)&v5[12];
    *(_OWORD *)((char *)a2 + 12) = *(_OWORD *)&v5[12];
  }
  return result;
}

uint64_t sub_1B6892978(void *a1)
{
  return sub_1B689173C(a1);
}

uint64_t *sub_1B68929B4(uint64_t a1, uint64_t a2)
{
  if (qword_1E9DCC4F0 != -1) {
    swift_once();
  }
  v47[0] = xmmword_1E9E493D0;
  v47[1] = unk_1E9E493E0;
  uint64_t v48 = qword_1E9E493F0;
  uint64_t v4 = a2 & 0xFFFFFFFFFFLL;
  sub_1B62C9DA8(a1, (uint64_t)v47, a2 & 0xFFFFFFFFFFLL, v33);
  double result = (uint64_t *)sub_1B62D7410((uint64_t)v33, (uint64_t)v34, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v34[0])
  {
    long long v41 = v34[0];
    long long v42 = v34[1];
    uint64_t v43 = v35;
    if (v40 >= 1)
    {
      uint64_t v26 = v37;
      if (v37)
      {
        uint64_t v24 = v36;
        uint64_t v6 = v39[4];
        int v31 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v32 = v39;
        char v22 = v39 + 8;
        uint64_t v23 = (uint64_t)(v39 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v7 = 0;
        uint64_t v25 = v6;
        do
        {
          uint64_t v8 = (unsigned int *)(v24 + 48 * v7);
          uint64_t v9 = *v8;
          uint64_t v10 = (uint64_t *)*((void *)v8 + 2);
          uint64_t v11 = *((void *)v8 + 4);
          uint64_t v12 = *((void *)v8 + 5);
          uint64_t v30 = v7;
          uint64_t v28 = v8[1];
          uint64_t v29 = *((void *)v8 + 3);
          if (v31)
          {
            float v13 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain();
            os_unfair_lock_lock(v13);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          sub_1B62D7410(v23, (uint64_t)v46, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v14 = v32[4];
          uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v32[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
          v32[7] = v15;
          v22[1] = 0;
          void v22[2] = 0;
          *char v22 = 0;
          swift_release();
          uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for ParticlePlaneCollider, (uint64_t)&off_1F0F895A0, v10, v29, v11, (uint64_t)v32);
          uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v10, v29, v11, (uint64_t)v32);
          uint64_t v18 = (float32x4_t *)v17;
          if (v10)
          {
            for (; v11; --v11)
            {
              uint64_t v19 = *v10++;
              sub_1B68940D4(v12, v19, v16, v18, v27, v4, a1);
              v18 += 4;
              v16 += 28;
            }
          }
          else if (v9 != v28)
          {
            int v20 = (float32x4_t *)(v17 + (v9 << 6));
            uint64_t v21 = v16 + 28 * v9;
            do
            {
              sub_1B68940D4(v12, v9++, v21, v20, v27, v4, a1);
              v20 += 4;
              v21 += 28;
            }
            while (v28 != v9);
          }
          v44[0] = v41;
          v44[1] = v42;
          uint64_t v45 = v43;
          sub_1B6345178(v32, (unsigned __int16 **)v44, (uint64_t)v46);
          sub_1B634507C((char *)v12);
          uint64_t v6 = v25;
          ecs_stack_allocator_pop_snapshot(v25);
          if (v31)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          uint64_t v7 = v30 + 1;
        }
        while (v30 + 1 != v26);
        sub_1B632F170(v33);
      }
    }
    return sub_1B632F170(v33);
  }
  return result;
}

uint64_t sub_1B6892DC4(long long *a1, long long *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, char a7, char a8, float a9)
{
  uint64_t v184 = *MEMORY[0x1E4F143B8];
  float v13 = (uint64_t *)*((void *)a1 + 11);
  uint64_t v14 = *((void *)a1 + 12);
  uint64_t v15 = *((void *)a1 + 13);
  uint64_t v16 = *((void *)a1 + 1);
  uint64_t v17 = *((void *)a1 + 2);
  uint64_t v161 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v13, v14, v15, v17);
  uint64_t v160 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v13, v14, v15, v17);
  uint64_t v147 = sub_1B67A819C();
  char v156 = v18;
  uint64_t v149 = sub_1B63459F8();
  unsigned int v152 = v19;
  long long v163 = *a2;
  long long v167 = *(_OWORD *)(a3 + 32);
  long long v20 = a1[3];
  long long v173 = a1[2];
  long long v21 = *a1;
  long long v172 = a1[1];
  long long v171 = v21;
  long long v177 = a1[6];
  long long v22 = a1[4];
  long long v176 = a1[5];
  long long v175 = v22;
  uint64_t v165 = &type metadata for CollisionProperties;
  uint64_t v166 = &off_1F0F7C560;
  uint64_t v164 = *((void *)a2 + 2);
  uint64_t v23 = *(void *)(a4 + 16);
  long long v174 = v20;
  uint64_t v25 = *((void *)a1 + 6);
  uint64_t v24 = *((void *)a1 + 7);
  uint64_t v26 = *(void *)(v17 + 32);
  swift_retain();
  uint64_t v178 = ecs_stack_allocator_allocate(v26, 8 * (v24 - v25), 8);
  uint64_t v179 = v24 - v25;
  uint64_t v180 = 0;
  sub_1B62C1550((uint64_t)&v163, (uint64_t)v168);
  float v169 = a9;
  v168[5] = v23;
  sub_1B6345398(*(void *)(v16 + 40), (uint64_t)&type metadata for Anchored, &v162);
  char v170 = v162;
  swift_retain();
  uint64_t v27 = ecs_stack_allocator_allocate(v26, 80 * (v24 - v25), 16);
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v163);
  uint64_t v32 = v152;
  float v33 = a9;
  uint64_t v181 = v27;
  uint64_t v182 = v24 - v25;
  uint64_t v183 = 0;
  if (v24 != v25)
  {
    int v35 = v156 & 1;
    float v36 = *(float *)(a4 + 80) * 0.5;
    float32x4_t v37 = *(float32x4_t *)a3;
    LODWORD(v38) = HIDWORD(*(_OWORD *)a3);
    uint64_t v39 = 16 * v25;
    v31.i32[0] = 1.0;
    v40.i64[0] = 0x8000000080000000;
    v40.i64[1] = 0x8000000080000000;
    float32x4_t v41 = 0uLL;
    __asm { FMOV            V0.4S, #-1.0 }
    int8x16_t v157 = _Q0;
    __asm { FMOV            V15.4S, #1.0 }
    float32x4_t v47 = (float32x4_t)xmmword_1B6E4FCD0;
    v48.i64[0] = 0x8000000080000000;
    v48.i64[1] = 0x8000000080000000;
    float32x4_t v144 = _Q15;
    float32x4_t v145 = *(float32x4_t *)a3;
    do
    {
      if (v32)
      {
        float32x4_t v49 = _Q15;
        v49.i32[3] = v30.i32[3];
        float32x4_t v30 = v49;
      }
      else
      {
        float32x4_t v49 = *(float32x4_t *)(v149 + 16 * v25);
      }
      float32x4_t v50 = vmulq_n_f32(*(float32x4_t *)(v160 + 16 * v25), v33);
      float32x4_t v51 = vmulq_f32(v37, v50);
      v28.f32[0] = v51.f32[2] + vaddv_f32(*(float32x2_t *)v51.f32);
      unsigned __int32 v52 = vbslq_s8(v40, v31, (int8x16_t)v28).u32[0];
      if (v28.f32[0] == 0.0) {
        float v53 = 0.0;
      }
      else {
        float v53 = *(float *)&v52;
      }
      if ((*(unsigned char *)(a6 + 1) & 1) == 0 && v53 >= 0.0) {
        goto LABEL_5;
      }
      float32x4_t v54 = vsubq_f32(*(float32x4_t *)(v161 + 16 * v25), v50);
      v49.f32[0] = v36 * fmaxf(fmaxf(v49.f32[0], v49.f32[2]), v49.f32[1]);
      if (*(unsigned char *)(a6 + 1))
      {
        float32x4_t v55 = v37;
        v55.f32[3] = v38 + (float)(v53 * v49.f32[0]);
        int8x16_t v56 = (int8x16_t)vmulq_f32(v50, v55);
        float v57 = vaddv_f32(vadd_f32(*(float32x2_t *)v56.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v56, v56, 8uLL)));
        if (v57 == 0.0) {
          goto LABEL_29;
        }
        int8x16_t v58 = (int8x16_t)vmulq_f32(v54, v55);
        float v59 = vaddv_f32(vadd_f32(*(float32x2_t *)v58.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL)));
      }
      else
      {
        float v57 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v51, 2), vaddq_f32(v51, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v51.f32, 1))).f32[0];
        if (v57 >= 0.0)
        {
LABEL_29:
          if ((*(_DWORD *)(a4 + 80) & 0x7FFFFFFF) == 0 || (a7 & 1) == 0) {
            goto LABEL_5;
          }
LABEL_31:
          float32x4_t v72 = *(float32x4_t *)(a3 + 48);
          float32x4_t v73 = *(float32x4_t *)(a3 + 64);
          float32x4_t v74 = *(float32x4_t *)(a3 + 80);
          float32x4_t v75 = *(float32x4_t *)(a3 + 96);
          float32x4_t v76 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v54.f32[0]), v73, *(float32x2_t *)v54.f32, 1), v74, v54, 2), v75, v54, 3);
          float32x4_t v77 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v50.f32[0]), v73, *(float32x2_t *)v50.f32, 1), v74, v50, 2), v75, v50, 3);
          v72.i64[0] = *(void *)(a3 + 160);
          float32x4_t v28 = (float32x4_t)vextq_s8((int8x16_t)vzip1q_s32((int32x4_t)v41, (int32x4_t)v72), (int8x16_t)v41, 4uLL);
          v28.i32[3] = v29.i32[3];
          float32x4_t v78 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v49.f32, 0), v28);
          int32x4_t v79 = vcgezq_f32(v77);
          v79.i32[3] = 0;
          float32x4_t v80 = vabsq_f32(v77);
          v80.i32[3] = 0;
          float32x4_t v81 = vdivq_f32(_Q15, vmaxnmq_f32(v80, v47));
          float32x4_t v82 = vmulq_f32(v81, v78);
          float32x4_t v83 = vmulq_f32(v76, vmulq_f32(v81, vnegq_f32((float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v79), (int8x16_t)_Q15, v157))));
          float32x4_t v84 = vsubq_f32(v83, v82);
          float32x4_t v85 = vaddq_f32(v82, v83);
          float v61 = fmaxf(fmaxf(v84.f32[0], v84.f32[2]), v84.f32[1]);
          float v86 = fminf(fminf(v85.f32[0], v85.f32[2]), v85.f32[1]);
          if (v61 <= v86 && v86 >= 0.0)
          {
            float32x4_t v91 = vmlaq_n_f32(v76, v77, v61);
            float32x4_t v87 = (float32x4_t)vbslq_s8(vorrq_s8((int8x16_t)vcltzq_f32(v91), (int8x16_t)vcgtzq_f32(v91)), vorrq_s8(vandq_s8((int8x16_t)v91, v48), (int8x16_t)_Q15), (int8x16_t)v41);
            float32x4_t v88 = vmulq_f32(v76, v87);
            _Q7 = vmulq_f32(v77, v87);
            float32x4_t v90 = vmulq_f32(v91, v87);
            v91.f32[0] = fminf(v49.f32[0], fminf(fminf(v78.f32[0], v78.f32[2]), v78.f32[1]));
            float32x4_t v92 = vsubq_f32(v78, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v91.f32, 0));
            float32x4_t v93 = vsubq_f32(v90, v92);
            float32x4_t v94 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v93, (int8x16_t)v93, 0xCuLL), (int8x16_t)v93, 8uLL);
            v93.i32[3] = 0;
            v94.i32[3] = 0;
            float32x4_t v95 = vmaxnmq_f32(v93, v94);
            if (fminf(fminf(v95.f32[0], v95.f32[2]), v95.f32[1]) < 0.0 && v61 >= 0.0 && v61 <= *(float *)v31.i32) {
              goto LABEL_67;
            }
            float32x4_t v97 = vmulq_f32(_Q7, _Q7);
            float v98 = vaddv_f32(*(float32x2_t *)v97.f32);
            float v99 = v97.f32[2] + v98;
            if ((float)(v97.f32[2] + v98) >= 0.00000011921)
            {
              float v100 = v91.f32[0] * v91.f32[0];
              float32x4_t v101 = vsubq_f32(v88, v92);
              float32x4_t v102 = vmulq_f32(_Q7, v101);
              float32x4_t v103 = vmulq_f32(v101, v101);
              float v104 = vaddv_f32(*(float32x2_t *)v102.f32);
              float v105 = v102.f32[2] + v104;
              float v106 = vaddv_f32(*(float32x2_t *)v103.f32);
              float v107 = (float)(v105 * v105) - (float)(v99 * (float)((float)(v103.f32[2] + v106) - v100));
              if (v107 <= 0.0) {
                float v61 = 1.0e10;
              }
              else {
                float v61 = (float)((float)-v105 - sqrtf(v107)) / v99;
              }
              float v108 = v102.f32[1] + v102.f32[2];
              float v109 = (float)(v108 * v108)
                   - (float)((float)(v97.f32[1] + v97.f32[2]) * (float)((float)(v103.f32[1] + v103.f32[2]) - v100));
              if (v109 > 0.0)
              {
                float v110 = (float)((float)-v108 - sqrtf(v109)) / (float)(v97.f32[1] + v97.f32[2]);
                _NF = fabsf(vmlas_n_f32(v88.f32[0], v110, _Q7.f32[0])) < v92.f32[0] && v110 < v61;
                if (_NF && v110 >= 0.0) {
                  float v61 = v110;
                }
              }
              float v113 = v97.f32[2] + v97.f32[0];
              float v114 = v102.f32[2] + v102.f32[0];
              float v115 = (float)(v114 * v114) - (float)(v113 * (float)((float)(v103.f32[2] + v103.f32[0]) - v100));
              if (v115 <= 0.0)
              {
                float32x4_t v47 = (float32x4_t)xmmword_1B6E4FCD0;
                v48.i64[0] = 0x8000000080000000;
                v48.i64[1] = 0x8000000080000000;
              }
              else
              {
                _S20 = (float)((float)-v114 - sqrtf(v115)) / v113;
                __asm { FMLA            S21, S20, V7.S[1] }
                float v118 = fabsf(_S21);
                BOOL v119 = _NF && v118 < v92.f32[1];
                float32x4_t v47 = (float32x4_t)xmmword_1B6E4FCD0;
                v48.i64[0] = 0x8000000080000000;
                v48.i64[1] = 0x8000000080000000;
                if (v119) {
                  float v61 = _S20;
                }
              }
              float v120 = (float)(v104 * v104) - (float)(v98 * (float)(v106 - v100));
              if (v120 <= 0.0) {
                goto LABEL_65;
              }
              _S16 = (float)((float)-v104 - sqrtf(v120)) / v98;
              __asm { FMLA            S17, S16, V7.S[2] }
              float v123 = fabsf(_S17);
              if (_NF && v123 < v92.f32[2])
              {
                float v61 = _S16;
                if (_S16 >= 0.0) {
                  goto LABEL_66;
                }
              }
              else
              {
LABEL_65:
                if (v61 >= 0.0)
                {
LABEL_66:
                  if (v61 <= *(float *)v31.i32)
                  {
LABEL_67:
                    float32x4_t v125 = vmlaq_f32(vmulq_n_f32(_Q7, v61), v87, v88);
                    int8x16_t v126 = vorrq_s8(vandq_s8((int8x16_t)v125, v48), (int8x16_t)_Q15);
                    int8x16_t v127 = vorrq_s8((int8x16_t)vcltzq_f32(v125), (int8x16_t)vcgtzq_f32(v125));
                    float32x4_t v128 = vsubq_f32(vabsq_f32(v125), v92);
                    v128.i32[3] = 0;
                    float32x4_t v129 = vmaxnmq_f32(v128, v41);
                    int32x4_t v130 = (int32x4_t)vmulq_f32(v129, v129);
                    float32x4_t v131 = (float32x4_t)vbslq_s8(v127, v126, (int8x16_t)v41);
                    v127.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v130, 2), vadd_f32(*(float32x2_t *)v130.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v130.i8, 1))).u32[0];
                    *(float32x2_t *)v130.i8 = vrsqrte_f32((float32x2_t)v127.u32[0]);
                    *(float32x2_t *)v130.i8 = vmul_f32(*(float32x2_t *)v130.i8, vrsqrts_f32((float32x2_t)v127.u32[0], vmul_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v130.i8)));
                    LODWORD(v132) = vmul_f32(*(float32x2_t *)v130.i8, vrsqrts_f32((float32x2_t)v127.u32[0], vmul_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v130.i8))).u32[0];
                    if (v61 >= 0.0)
                    {
                      float32x4_t v133 = vmulq_f32(v131, vmulq_n_f32(v129, v132));
                      float32x4_t v134 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*(float32x4_t *)(a3 + 112), v133.f32[0]), *(float32x4_t *)(a3 + 128), *(float32x2_t *)v133.f32, 1), *(float32x4_t *)(a3 + 144), v133, 2);
                      v134.i32[3] = v141;
                      float32x4_t v62 = vmlaq_n_f32(v54, v77, v61);
                      float32x4_t v29 = v28;
                      goto LABEL_74;
                    }
                  }
                }
              }
            }
          }
          float32x4_t v29 = v28;
          goto LABEL_5;
        }
        float32x4_t v60 = vmulq_f32(v37, v54);
        float v59 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v60, 2), vaddq_f32(v60, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v60.f32, 1))).f32[0]+ (float)(v38 + (float)(v53 * v49.f32[0]));
      }
      float v61 = (float)-v59 / v57;
      if (v61 > *(float *)v31.i32) {
        goto LABEL_5;
      }
      if (*(_DWORD *)(a4 + 80) & 0x7FFFFFFF) != 0 && (a7) {
        goto LABEL_31;
      }
      if (v61 >= 0.0)
      {
        float32x4_t v62 = vmlaq_n_f32(v54, v50, v61);
        if ((a7 & 1) == 0)
        {
          float32x4_t v63 = v143;
LABEL_73:
          float32x4_t v134 = vmulq_n_f32(v37, -v53);
          v134.i32[3] = v142;
          float32x4_t v143 = v63;
LABEL_74:
          float32x4_t v153 = v30;
          float32x4_t v148 = v29;
          uint64_t v137 = v32;
          if (v35)
          {
            uint64_t v139 = 0;
            uint64_t v140 = 0;
          }
          else
          {
            char v138 = (uint64_t *)(v147 + 16 * v25);
            uint64_t v139 = *v138;
            uint64_t v140 = v138[1];
          }
          v62.i32[3] = HIDWORD(v9);
          sub_1B6C323C0(v25, (float32x4_t *)(v161 + v39), (float32x4_t *)(v160 + v39), v139, v140, v35, v62, v134, v61);
          float32x4_t v29 = v148;
          float v33 = a9;
          uint64_t v32 = v137;
          _Q15 = v144;
          float32x4_t v37 = v145;
          v31.i32[0] = 1.0;
          v40.i64[0] = 0x8000000080000000;
          v40.i64[1] = 0x8000000080000000;
          float32x4_t v41 = 0uLL;
          float32x4_t v47 = (float32x4_t)xmmword_1B6E4FCD0;
          v48.i64[0] = 0x8000000080000000;
          v48.i64[1] = 0x8000000080000000;
          float32x4_t v30 = v153;
          goto LABEL_5;
        }
        float32x4_t v63 = v62;
        v63.i32[3] = v143.i32[3];
        float32x4_t v64 = vsubq_f32(v63, *(float32x4_t *)(a3 + 16));
        float32x2_t v65 = *(float32x2_t *)(a3 + 112);
        float32x2_t v66 = *(float32x2_t *)(a3 + 120);
        float32x2_t v67 = *(float32x2_t *)(a3 + 116);
        v67.i32[1] = *(_DWORD *)(a3 + 144);
        v65.i32[1] = *(_DWORD *)(a3 + 148);
        v66.i32[1] = *(_DWORD *)(a3 + 152);
        float32x2_t v68 = vabs_f32(vadd_f32(vmul_laneq_f32(v66, v64, 2), vadd_f32(vmul_f32(v67, (float32x2_t)vrev64_s32(*(int32x2_t *)v64.f32)), vmul_f32(v65, *(float32x2_t *)v64.f32))));
        float32x2_t v69 = *(float32x2_t *)(a3 + 160);
        if (a8)
        {
          int32x2_t v70 = vcgt_f32(v68, v69);
          __int32 v71 = v70.i32[1];
          if (v70.i32[1] >= v70.i32[0]) {
            __int32 v71 = v70.i32[0];
          }
          if ((v71 & 0x80000000) == 0) {
            goto LABEL_73;
          }
        }
        else
        {
          int32x2_t v135 = vcge_f32(v69, v68);
          __int32 v136 = v135.i32[1];
          if (v135.i32[1] <= v135.i32[0]) {
            __int32 v136 = v135.i32[0];
          }
          if ((v136 & 0x80000000) == 0) {
            goto LABEL_73;
          }
        }
        float32x4_t v143 = v63;
      }
LABEL_5:
      ++v25;
      v39 += 16;
    }
    while (v24 != v25);
  }
  sub_1B689368C((uint64_t)&v167, a5 | ((HIDWORD(a5) & 1) << 32));
  return sub_1B6894710((uint64_t)&v167);
}

uint64_t sub_1B689368C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_1B6894764(a1, (uint64_t)v9);
  if (v9[28])
  {
    MEMORY[0x1F4188790](v3, v9[7]);
    _OWORD v8[2] = v9;
    sub_1B6B2150C(0, v4, 1, a2 | ((HIDWORD(a2) & 1) << 32), v5, (void (*)(void *))sub_1B68947C0, (uint64_t)v8, v6);
    ecs_stack_allocator_deallocate(*(void **)(v9[11] + 32), v9[26], 80 * v9[27]);
  }
  sub_1B6C33184(v9);
  return sub_1B6894710((uint64_t)v9);
}

float32x2_t sub_1B6893768@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float32x4_t a3@<Q0>, float32x4_t a4@<Q1>, float32x4_t a5@<Q2>, float32x4_t a6@<Q3>, float32x4_t a7@<Q4>, float32x4_t a8@<Q5>, float32x4_t a9@<Q6>, float32x4_t a10@<Q7>)
{
  sub_1B633C598(a1, (uint64_t)v83);
  uint64_t v13 = v84;
  uint64_t v12 = v85;
  float32x4_t v82 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, a3.f32[0]), a8, *(float32x2_t *)a3.f32, 1), a9, a3, 2), a10, a3, 3);
  float32x4_t v80 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, a4.f32[0]), a8, *(float32x2_t *)a4.f32, 1), a9, a4, 2), a10, a4, 3);
  float32x4_t v78 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, a5.f32[0]), a8, *(float32x2_t *)a5.f32, 1), a9, a5, 2), a10, a5, 3);
  float32x4_t v74 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, a6.f32[0]), a8, *(float32x2_t *)a6.f32, 1), a9, a6, 2), a10, a6, 3);
  sub_1B633C598(a1, (uint64_t)v86);
  int8x16_t v14 = (int8x16_t)vmulq_f32(v82, v82);
  int8x16_t v15 = (int8x16_t)vmulq_f32(v80, v80);
  int8x16_t v16 = (int8x16_t)vmulq_f32(v78, v78);
  float32x4_t v17 = (float32x4_t)vtrn2q_s32((int32x4_t)v14, (int32x4_t)v15);
  v17.i32[2] = v16.i32[1];
  float32x4_t v18 = vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32((int32x4_t)v14, (int32x4_t)v16), vdupq_laneq_s32((int32x4_t)v15, 2)), vaddq_f32((float32x4_t)vzip1q_s32(vzip1q_s32((int32x4_t)v14, (int32x4_t)v16), (int32x4_t)v15), v17));
  __asm { FMOV            V1.4S, #1.0 }
  int32x4_t v24 = vceqzq_f32(v18);
  v24.i32[3] = 0;
  float32x4_t v25 = 0uLL;
  float32x4_t v67 = v18;
  float32x4_t v26 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v24), (int8x16_t)v18, (int8x16_t)vdivq_f32(_Q1, v18));
  float32x4_t v27 = vmlaq_f32(vaddq_f32(vmulq_lane_f32(v80, *(float32x2_t *)v26.f32, 1), vmulq_f32(vmulq_laneq_f32(v78, v26, 2), (float32x4_t)0)), (float32x4_t)0, vmulq_n_f32(v82, v26.f32[0]));
  int8x16_t v28 = (int8x16_t)vabsq_f32(v27);
  if (*(float *)v28.i32 > 0.00000011921
    || (v28.i32[0] = vextq_s8(v28, v28, 8uLL).u32[0],
        *(int32x2_t *)v28.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v28.i8),
        (v28.i8[4] & 1) == 0)
    || (v28.i8[0] & 1) == 0)
  {
    int32x4_t v29 = (int32x4_t)vmulq_f32(v27, v27);
    v29.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v29, 2), vadd_f32(*(float32x2_t *)v29.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v29.i8, 1))).u32[0];
    float32x2_t v30 = vrsqrte_f32((float32x2_t)v29.u32[0]);
    float32x2_t v31 = vmul_f32(v30, vrsqrts_f32((float32x2_t)v29.u32[0], vmul_f32(v30, v30)));
    float32x4_t v25 = vmulq_n_f32(v27, vmul_f32(v31, vrsqrts_f32((float32x2_t)v29.u32[0], vmul_f32(v31, v31))).f32[0]);
  }
  float32x4_t v68 = v25;
  float32x4_t v69 = (float32x4_t)v14;
  int32x2_t v32 = (int32x2_t)vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL));
  int v33 = v86[64];
  v32.i32[0] = vadd_f32((float32x2_t)v32, (float32x2_t)vdup_lane_s32(v32, 1)).u32[0];
  float32x2_t v34 = vrsqrte_f32((float32x2_t)v32.u32[0]);
  float32x2_t v35 = vmul_f32(v34, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v34, v34)));
  v32.i32[0] = vmul_f32(v35, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v35, v35))).u32[0];
  int32x2_t v36 = (int32x2_t)vadd_f32(*(float32x2_t *)v15.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
  v35.i32[0] = vadd_f32((float32x2_t)v36, (float32x2_t)vdup_lane_s32(v36, 1)).u32[0];
  v87.columns[0] = (simd_float4)vmulq_n_f32(v82, *(float *)v32.i32);
  float32x2_t v37 = vrsqrte_f32((float32x2_t)v35.u32[0]);
  float32x2_t v38 = vmul_f32(v37, vrsqrts_f32((float32x2_t)v35.u32[0], vmul_f32(v37, v37)));
  v38.i32[0] = vmul_f32(v38, vrsqrts_f32((float32x2_t)v35.u32[0], vmul_f32(v38, v38))).u32[0];
  float32x4_t v70 = (float32x4_t)v16;
  int32x2_t v39 = (int32x2_t)vadd_f32(*(float32x2_t *)v16.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL));
  v87.columns[1] = (simd_float4)vmulq_n_f32(v80, v38.f32[0]);
  v39.i32[0] = vadd_f32((float32x2_t)v39, (float32x2_t)vdup_lane_s32(v39, 1)).u32[0];
  float32x2_t v40 = vrsqrte_f32((float32x2_t)v39.u32[0]);
  float32x2_t v41 = vmul_f32(v40, vrsqrts_f32((float32x2_t)v39.u32[0], vmul_f32(v40, v40)));
  v87.columns[2] = (simd_float4)vmulq_n_f32(v78, vmul_f32(v41, vrsqrts_f32((float32x2_t)v39.u32[0], vmul_f32(v41, v41))).f32[0]);
  v87.columns[3] = (simd_float4)v74;
  simd_float4x4 v88 = __invert_f4(v87);
  v42.i64[0] = 0x80000000800000;
  v42.i64[1] = 0x80000000800000;
  float32x4_t v43 = v67;
  int32x4_t v44 = vcgeq_f32(v42, v67);
  v43.i32[3] = 0;
  float32x4_t v45 = vrsqrteq_f32(v43);
  float32x4_t v46 = vmulq_f32(v45, vrsqrtsq_f32(v43, vmulq_f32(v45, v45)));
  int32x4_t v47 = v44;
  v47.i32[3] = 0;
  float32x4_t v48 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v47), (int8x16_t)v43, (int8x16_t)vmulq_f32(v46, vrsqrtsq_f32(v43, vmulq_f32(v46, v46))));
  float32x4_t v49 = vmulq_n_f32(v82, v48.f32[0]);
  float32x4_t v50 = vmulq_lane_f32(v80, *(float32x2_t *)v48.f32, 1);
  float32x4_t v51 = vmulq_laneq_f32(v78, v48, 2);
  int8x16_t v52 = (int8x16_t)vuzp1q_s32((int32x4_t)v51, (int32x4_t)v51);
  int8x16_t v53 = (int8x16_t)vuzp1q_s32((int32x4_t)v50, (int32x4_t)v50);
  int8x16_t v54 = (int8x16_t)v49;
  if (v44.i32[0])
  {
    int8x16_t v55 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v52, (int8x16_t)v51, 0xCuLL), vnegq_f32(v50)), v51, (float32x4_t)vextq_s8(v53, (int8x16_t)v50, 0xCuLL));
    int8x16_t v54 = vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v55, (int32x4_t)v55), v55, 0xCuLL);
  }
  int8x16_t v56 = (int8x16_t)vuzp1q_s32((int32x4_t)v49, (int32x4_t)v49);
  int8x16_t v57 = (int8x16_t)v50;
  if (v44.i32[1])
  {
    int8x16_t v58 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v56, (int8x16_t)v49, 0xCuLL), vnegq_f32(v51)), v49, (float32x4_t)vextq_s8(v52, (int8x16_t)v51, 0xCuLL));
    int8x16_t v57 = vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v58, (int32x4_t)v58), v58, 0xCuLL);
  }
  if (v44.i32[2])
  {
    int8x16_t v59 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v53, (int8x16_t)v50, 0xCuLL), vnegq_f32(v49)), v50, (float32x4_t)vextq_s8(v56, (int8x16_t)v49, 0xCuLL));
    float32x4_t v51 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v59, (int32x4_t)v59), v59, 0xCuLL);
  }
  v60.i64[0] = v13;
  v60.i64[1] = v12;
  if (v33) {
    unsigned int v61 = -1;
  }
  else {
    unsigned int v61 = 0;
  }
  float32x4_t v62 = (float32x4_t)vbslq_s8((int8x16_t)vdupq_n_s32(v61), (int8x16_t)a6, v60);
  v63.i64[0] = 0x8000000080000000;
  v63.i64[1] = 0x8000000080000000;
  float32x4_t v64 = v68;
  float32x4_t v65 = vmulq_f32(vmlaq_f32(vmlaq_f32(vmlaq_f32(v74, v63, v78), v63, v80), v63, v82), v68);
  v64.f32[3] = -vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v65, 2), vaddq_f32(v65, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v65.f32, 1))).f32[0];
  v65.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v69, 2), vaddq_f32(v69, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v69.f32, 1))).f32[0]);
  v65.i32[1] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v70, 2), vaddq_f32(v70, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v70.f32, 1))).f32[0]);
  *(float32x4_t *)a2 = v64;
  *(float32x4_t *)(a2 + 16) = v74;
  *(float32x4_t *)(a2 + 32) = vsubq_f32(v74, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, v62.f32[0]), a8, *(float32x2_t *)v62.f32, 1), a9, v62, 2), a10, v62, 3));
  *(simd_float4x4 *)(a2 + 48) = v88;
  *(int8x16_t *)(a2 + 112) = v54;
  float32x2_t result = vmul_f32(*(float32x2_t *)v65.f32, (float32x2_t)0x3F0000003F000000);
  *(int8x16_t *)(a2 + 128) = v57;
  *(float32x4_t *)(a2 + 144) = v51;
  *(float32x2_t *)(a2 + 160) = result;
  return result;
}

uint64_t sub_1B6893B7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B689406C(0, (unint64_t *)&unk_1E9DD6DA0, (uint64_t (*)(void))sub_1B6893F78, (uint64_t)&type metadata for ParticleCollidableCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v28.i8[-v9];
  __int16 v34 = 0;
  char v35 = 1;
  long long v36 = xmmword_1B6E4F370;
  uint64_t v37 = 0xFF00000000;
  sub_1B6892100(a1, 0);
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v30) = 6;
  LOBYTE(v34) = sub_1B6E32D38() & 1;
  sub_1B689406C(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  char v33 = 8;
  sub_1B6893FCC();
  sub_1B6E32D78();
  if ((BYTE8(v30) & 1) == 0)
  {
    v11.i64[0] = v30;
    int32x4_t v28 = v11;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_1B62C14BC(a1, v13);
    uint64_t v15 = sub_1B62BE764(v13, v14);
    int32x4_t v28 = vzip1q_s32((int32x4_t)0, v28);
    int8x16_t v16 = *(void **)(v15 + 72);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v15 + 72) = v16;
    uint64_t v29 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      int8x16_t v16 = sub_1B62C5898(0, v16[2] + 1, 1, v16);
      *(void *)(v15 + 72) = v16;
    }
    unint64_t v19 = v16[2];
    unint64_t v18 = v16[3];
    int32x4_t v28 = vtrn2q_s32(v28, (int32x4_t)0);
    if (v19 >= v18 >> 1)
    {
      int8x16_t v16 = sub_1B62C5898(v18 > 1, v19 + 1, 1, v16);
      *(void *)(v29 + 72) = v16;
    }
    float32x2_t v31 = &type metadata for Scale3;
    int32x2_t v32 = &off_1F0FA10A0;
    *(void *)&long long v30 = swift_allocObject();
    *(int32x4_t *)(v30 + 16) = v28;
    uint64_t v16[2] = v19 + 1;
    sub_1B62C15C4(&v30, (uint64_t)&v16[5 * v19 + 4]);
    swift_release();
  }
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  sub_1B62C14BC(a1, v20);
  if (sub_1B62B8F14(2024, v20, v21))
  {
    LOBYTE(v30) = 7;
    char v22 = sub_1B6E32DA8();
    (*(void (**)(__int8 *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    (*(void (**)(__int8 *, uint64_t))(v7 + 8))(v10, v6);
    char v22 = HIBYTE(v34);
  }
  char v23 = v34;
  char v24 = v35;
  int v25 = v37;
  int v26 = HIDWORD(v37);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  long long v27 = v36;
  *(unsigned char *)a2 = v23;
  *(unsigned char *)(a2 + 1) = v22 & 1;
  *(unsigned char *)(a2 + 2) = v24;
  *(_OWORD *)(a2 + 4) = v27;
  *(_DWORD *)(a2 + 20) = v25;
  *(_DWORD *)(a2 + 24) = v26;
  return result;
}

unint64_t sub_1B6893F78()
{
  unint64_t result = qword_1E9DD1BB8;
  if (!qword_1E9DD1BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1BB8);
  }
  return result;
}

unint64_t sub_1B6893FCC()
{
  unint64_t result = qword_1EB97D1D0;
  if (!qword_1EB97D1D0)
  {
    sub_1B689406C(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D1D0);
  }
  return result;
}

uint64_t sub_1B689405C()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

void sub_1B689406C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B68940D4(uint64_t a1, uint64_t a2, uint64_t a3, float32x4_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7 = *(_DWORD *)(a5 + 84) & *(_DWORD *)(a3 + 24);
  if (v7)
  {
    float v14 = *(float *)(a3 + 20) + *(float *)(a5 + 80);
    *(float *)&unsigned int v15 = 1.0 - fminf(fmaxf(*(float *)(a3 + 16) + *(float *)(a5 + 76), 0.0), 1.0);
    *(float *)&unsigned int v16 = fminf(fmaxf(*(float *)(a3 + 12) + *(float *)(a5 + 72), 0.0), 1.0);
    __asm { FMOV            V4.2S, #1.0 }
    *(float32x2_t *)&long long v129 = vminnm_f32(vmaxnm_f32(vadd_f32(*(float32x2_t *)(a3 + 4), *(float32x2_t *)(a5 + 64)), 0), _D4);
    *((void *)&v129 + 1) = __PAIR64__(v15, v16);
    float v130 = v14;
    int v131 = v7;
    uint64_t v21 = sub_1B62C91B8((uint64_t)&type metadata for LastFrameWorldTransform);
    if (v22)
    {
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
    }
    else
    {
      float32x2_t v31 = (uint64_t *)(v21 + (a2 << 6));
      uint64_t v23 = *v31;
      uint64_t v24 = v31[1];
      uint64_t v25 = v31[2];
      uint64_t v26 = v31[3];
      uint64_t v27 = v31[4];
      uint64_t v28 = v31[5];
      uint64_t v29 = v31[6];
      uint64_t v30 = v31[7];
    }
    v134[0] = v23;
    v134[1] = v24;
    uint64_t v32 = (a6 & 0xFE00000000) != 0 ? 0 : a6;
    uint64_t v95 = v32;
    v134[2] = v25;
    v134[3] = v26;
    v134[4] = v27;
    v134[5] = v28;
    v134[6] = v29;
    v134[7] = v30;
    char v135 = v22 & 1;
    char v33 = *(unsigned char *)a3;
    char v94 = *(unsigned char *)(a3 + 2);
    BOOL v34 = !a6 || (a6 & 0xFE00000000) != 0;
    BOOL v93 = v34;
    sub_1B6893768((uint64_t)v134, (uint64_t)v109, *a4, a4[1], a4[2], a4[3], *(float32x4_t *)(a5 + 96), *(float32x4_t *)(a5 + 112), *(float32x4_t *)(a5 + 128), *(float32x4_t *)(a5 + 144));
    float v35 = *(float *)(a5 + 160);
    v132[0] = *(_OWORD *)(a5 + 24);
    v132[1] = *(_OWORD *)(a5 + 40);
    uint64_t v133 = *(void *)(a5 + 56);
    sub_1B62C9DA8(a7, (uint64_t)v132, 0x200000000, v110);
    sub_1B62D7410((uint64_t)v110, (uint64_t)v111, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    float v105 = (unsigned __int16 *)v111[0];
    if (v111[0])
    {
      uint64_t v91 = v115;
      uint64_t v92 = a3;
      if (v115 >= 1)
      {
        uint64_t v90 = v112;
        if (v112)
        {
          uint64_t v36 = 0;
          uint64_t v88 = v111[5];
          uint64_t v37 = v114[4];
          uint64_t v86 = v37;
          uint64_t v87 = v113;
          int v103 = *(unsigned __int8 *)(v113 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v85 = v114 + 8;
          uint64_t v104 = v111[0] + 41;
          char v84 = (v33 ^ 1) & 1;
          uint64_t v89 = a5;
          float v108 = v114;
          do
          {
            float32x2_t v38 = (unsigned int *)(v88 + 48 * v36);
            uint64_t v39 = *v38;
            uint64_t v40 = v38[1];
            uint64_t v41 = v38[2];
            uint64_t v42 = *((void *)v38 + 2);
            uint64_t v43 = *((void *)v38 + 4);
            uint64_t v44 = *((void *)v38 + 5);
            uint64_t v100 = v36;
            uint64_t v106 = *((void *)v38 + 3);
            if (v103)
            {
              float32x4_t v45 = *(os_unfair_lock_s **)(v44 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v45);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v44 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v37);
            float32x4_t v46 = v108;
            uint64_t v96 = v108[6];
            uint64_t v98 = v108[8];
            uint64_t v99 = v108[7];
            uint64_t v101 = v108[10];
            uint64_t v102 = v108[9];
            uint64_t v47 = v108[4];
            uint64_t v48 = *(void *)(*(void *)(*(void *)(*(void *)(v44 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v108[6] = ecs_stack_allocator_allocate(v47, 48 * v48, 8);
            v108[7] = v48;
            v85[1] = 0;
            v85[2] = 0;
            void *v85 = 0;
            swift_release();
            *(void *)&long long v116 = v87;
            *((void *)&v116 + 1) = v44;
            uint64_t v97 = v44;
            unint64_t v117 = v108;
            uint64_t v118 = v41;
            uint64_t v119 = (v40 - v39 + v41);
            uint64_t v120 = v91;
            uint64_t v121 = v39;
            uint64_t v122 = v40;
            uint64_t v123 = 0;
            uint64_t v124 = 0;
            char v125 = 1;
            uint64_t v126 = v42;
            uint64_t v127 = v106;
            uint64_t v128 = v43;
            sub_1B6892DC4(&v116, &v129, (uint64_t)v109, v89, v95 | ((unint64_t)v93 << 32), v92, v84, v94, v35);
            unint64_t v49 = v108[6];
            uint64_t v107 = v108[8];
            if (!v107)
            {
              uint64_t v76 = v108[7];
              float32x4_t v77 = (void *)v108[4];
              uint64_t v79 = v99;
              uint64_t v78 = v100;
              uint64_t v83 = v96;
              uint64_t v82 = v44;
              uint64_t v80 = v98;
              goto LABEL_57;
            }
            for (uint64_t i = 0; i != v107; ++i)
            {
              unint64_t v52 = v49;
              int8x16_t v53 = (uint64_t *)(v49 + 48 * i);
              uint64_t v54 = *v53;
              int8x16_t v55 = (void (*)(uint64_t))v53[4];
              uint64_t v56 = v46[9];
              if (v56) {
                _ZF = v54 == v56;
              }
              else {
                _ZF = 0;
              }
              if (_ZF || !v105[11]) {
                goto LABEL_21;
              }
              unint64_t v58 = v105[9];
              int8x16_t v59 = (void *)(v104 + v105[8]);
              uint64_t v60 = v53[2];
              unsigned int v61 = v59;
              unint64_t v62 = v58 >> 4;
              uint64_t v63 = v104;
              if (v58 >= 0x10)
              {
                while (*v61 != v54)
                {
                  ++v63;
                  v61 += 2;
                  if (!--v62) {
                    goto LABEL_36;
                  }
                }
                unsigned int v64 = *(unsigned __int8 *)(v63 + v105[10]);
                BOOL v65 = v64 > 5;
                int v66 = (1 << v64) & 0x23;
                if (v65 || v66 == 0)
                {
LABEL_21:
                  uint64_t v51 = swift_retain();
                  v55(v51);
                  swift_release();
                  goto LABEL_22;
                }
              }
LABEL_36:
              if (swift_conformsToProtocol2()) {
                uint64_t v68 = v60;
              }
              else {
                uint64_t v68 = 0;
              }
              if (v68)
              {
                if (v58 < 0x10) {
                  goto LABEL_21;
                }
                float32x4_t v69 = v59;
                unint64_t v70 = v58 >> 4;
                uint64_t v71 = v104;
                while (*v69 != v68)
                {
                  ++v71;
                  v69 += 2;
                  if (!--v70) {
                    goto LABEL_49;
                  }
                }
                unsigned int v72 = *(unsigned __int8 *)(v71 + v105[10]);
                BOOL v65 = v72 > 5;
                int v73 = (1 << v72) & 0x23;
                if (v65 || v73 == 0) {
                  goto LABEL_21;
                }
LABEL_49:
                uint64_t v75 = 16 * (v58 >> 4);
                while (*v59 != v68)
                {
                  v59 += 2;
                  v75 -= 16;
                  if (!v75) {
                    goto LABEL_21;
                  }
                }
              }
LABEL_22:
              float32x4_t v46 = v108;
              unint64_t v49 = v52;
            }
            uint64_t v76 = v108[7];
            unint64_t v49 = v108[6];
            float32x4_t v77 = (void *)v108[4];
            uint64_t v79 = v99;
            uint64_t v78 = v100;
            uint64_t v80 = v98;
            if ((uint64_t)v108[8] >= 1)
            {
              unint64_t v81 = v108[6];
              swift_arrayDestroy();
              unint64_t v49 = v81;
            }
            uint64_t v83 = v96;
            uint64_t v82 = v97;
LABEL_57:
            ecs_stack_allocator_deallocate(v77, v49, 48 * v76);
            v46[6] = v83;
            v46[7] = v79;
            v46[8] = v80;
            v46[9] = v102;
            v46[10] = v101;
            sub_1B634507C((char *)v82);
            uint64_t v37 = v86;
            ecs_stack_allocator_pop_snapshot(v86);
            if (v103)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v82 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v82 + 376));
            }
            swift_release();
            uint64_t v36 = v78 + 1;
          }
          while (v36 != v90);
        }
      }
      sub_1B632F170(v110);
    }
  }
}

uint64_t sub_1B6894710(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6894764(uint64_t a1, uint64_t a2)
{
  return a2;
}

double sub_1B68947C0(uint64_t a1)
{
  *(void *)&double result = sub_1B6C332D4(a1, *(void *)(v1 + 16)).n128_u64[0];
  return result;
}

void sub_1B68947DC()
{
  if (!qword_1EB97D810)
  {
    type metadata accessor for simd_float4x4(255);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D810);
    }
  }
}

uint64_t *sub_1B6894834(int a1, uint64_t a2, _OWORD *a3, float a4, float a5, float a6, float a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11)
{
  uint64_t v164 = *MEMORY[0x1E4F143B8];
  if (qword_1E9DCC4F0 != -1) {
    swift_once();
  }
  v147[0] = xmmword_1E9E493D0;
  v147[1] = unk_1E9E493E0;
  uint64_t v148 = qword_1E9E493F0;
  long long v16 = a3[6];
  v145[2] = a3[5];
  v145[3] = v16;
  long long v17 = a3[8];
  v145[4] = a3[7];
  v145[5] = v17;
  long long v18 = a3[2];
  long long v143 = a3[1];
  long long v144 = v18;
  long long v19 = a3[4];
  uint64_t v116 = (uint64_t)a3;
  v145[0] = a3[3];
  v145[1] = v19;
  sub_1B62EA708((uint64_t)v145 + 8, (uint64_t)v146);
  sub_1B62EA708((uint64_t)v146, (uint64_t)&v149);
  if (v150) {
    uint64_t v20 = 0x200000000;
  }
  else {
    uint64_t v20 = v149;
  }
  sub_1B62C9DA8(a2, (uint64_t)v147, v20, v151);
  double result = (uint64_t *)sub_1B62D7410((uint64_t)v151, (uint64_t)v152, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v152[0])
  {
    if (v158 >= 1)
    {
      uint64_t v107 = v155;
      if (v155)
      {
        char v22 = v157;
        uint64_t v23 = v157[4];
        int v24 = *(unsigned __int8 *)(v156 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v141[0] = v152[0];
        v141[1] = v152[1];
        uint64_t v142 = v153;
        uint64_t v102 = (uint64_t)(v157 + 6);
        uint64_t v103 = v154;
        uint64_t v101 = v157 + 8;
        BOOL v110 = a7 > 0.0;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v25 = 0;
        uint64_t v105 = v23;
        uint64_t v106 = v22;
        int v104 = v24;
        do
        {
          uint64_t v26 = (unsigned int *)(v103 + 48 * v25);
          uint64_t v27 = *v26;
          uint64_t v108 = v26[1];
          uint64_t v109 = v25;
          uint64_t v29 = (uint64_t *)*((void *)v26 + 2);
          uint64_t v28 = *((void *)v26 + 3);
          uint64_t v31 = *((void *)v26 + 4);
          uint64_t v30 = *((void *)v26 + 5);
          if (v24)
          {
            uint64_t v32 = *(os_unfair_lock_s **)(v30 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v32);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v30 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v23);
          sub_1B62D7410(v102, (uint64_t)v159, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v33 = v22[4];
          uint64_t v34 = *(void *)(*(void *)(*(void *)(*(void *)(v30 + 40) + 16) + 32) + 16) + 1;
          uint64_t v35 = v30;
          swift_retain();
          v22[6] = ecs_stack_allocator_allocate(v33, 48 * v34, 8);
          v22[7] = v34;
          v101[1] = 0;
          v101[2] = 0;
          *uint64_t v101 = 0;
          swift_release();
          uint64_t v36 = sub_1B62C9024((uint64_t)&type metadata for ParticlePlaneCollider, (uint64_t)&off_1F0F895A0, v29, v28, v31, (uint64_t)v22);
          uint64_t v117 = v35;
          uint64_t v118 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v29, v28, v31, (uint64_t)v22);
          if (v29)
          {
            if (v31)
            {
              uint64_t v37 = v36 + 12;
              float32x2_t v38 = (float32x4_t *)(v118 + 32);
              uint64_t v39 = (uint64_t *)v116;
              do
              {
                uint64_t v47 = *v29++;
                uint64_t v46 = v47;
                if ((*(_DWORD *)(v37 + 12) & a1) != 0)
                {
                  uint64_t v119 = v29;
                  float v49 = *(float *)(v37 - 4);
                  float v48 = *(float *)v37;
                  float v50 = *(float *)(v37 + 4);
                  uint64_t v51 = sub_1B62C91B8((uint64_t)&type metadata for LastFrameWorldTransform);
                  if (v52)
                  {
                    uint64_t v53 = 0;
                    uint64_t v54 = 0;
                    uint64_t v55 = 0;
                    uint64_t v56 = 0;
                    uint64_t v57 = 0;
                    uint64_t v58 = 0;
                    uint64_t v59 = 0;
                    uint64_t v60 = 0;
                  }
                  else
                  {
                    unsigned int v61 = (uint64_t *)(v51 + (v46 << 6));
                    uint64_t v53 = *v61;
                    uint64_t v54 = v61[1];
                    uint64_t v55 = v61[2];
                    uint64_t v56 = v61[3];
                    uint64_t v57 = v61[4];
                    uint64_t v58 = v61[5];
                    uint64_t v59 = v61[6];
                    uint64_t v60 = v61[7];
                  }
                  v160[0] = v53;
                  v160[1] = v54;
                  v160[2] = v55;
                  v160[3] = v56;
                  v160[4] = v57;
                  v160[5] = v58;
                  v160[6] = v59;
                  v160[7] = v60;
                  char v161 = v52 & 1;
                  sub_1B6893768((uint64_t)v160, (uint64_t)v121, v38[-2], v38[-1], *v38, v38[1], a8, a9, a10, a11);
                  sub_1B62F46E8();
                  int v125 = v62;
                  float v126 = fminf(fmaxf(v48 + a5, 0.0), 1.0);
                  float v127 = 1.0 - fminf(fmaxf(v50 + a6, 0.0), 1.0);
                  long long v128 = v121[0];
                  long long v129 = v121[1];
                  long long v130 = v121[2];
                  long long v131 = v121[3];
                  long long v132 = v121[4];
                  long long v133 = v121[5];
                  long long v134 = v121[6];
                  long long v135 = v121[7];
                  long long v136 = v121[8];
                  long long v137 = v121[9];
                  uint64_t v138 = v122;
                  float v139 = fminf(fmaxf(v49 + a4, 0.0), 1.0);
                  float v140 = a7 * 0.5;
                  uint64_t v63 = *v39;
                  if (*v39)
                  {
                    uint64_t ObjectType = swift_getObjectType();
                    type metadata accessor for particle_plane_collider_uniforms(0);
                    sub_1B6B594A8((uint64_t)&v125, 1, ObjectType, v65, v66, v67, v68, v69);
                  }
                  char v40 = v63 == 0;
                  sub_1B62D8328(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
                  uint64_t v41 = swift_allocObject();
                  *(_OWORD *)(v41 + 16) = xmmword_1B6E77D10;
                  uint64_t v42 = *(unsigned __int8 *)(v37 - 12);
                  *(_OWORD *)(v41 + 32) = xmmword_1B6E8EE90;
                  *(unsigned char *)(v41 + 48) = 0;
                  *(void *)(v41 + 64) = v42;
                  *(void *)(v41 + 120) = 0;
                  *(_OWORD *)(v41 + 104) = 0u;
                  *(_OWORD *)(v41 + 88) = 0u;
                  *(_OWORD *)(v41 + 72) = 0u;
                  *(unsigned char *)(v41 + 128) = 13;
                  *(_OWORD *)(v41 + 144) = xmmword_1B6E8EEA0;
                  *(unsigned char *)(v41 + 160) = 0;
                  *(void *)(v41 + 176) = v110;
                  *(void *)(v41 + 232) = 0;
                  *(_OWORD *)(v41 + 216) = 0u;
                  *(_OWORD *)(v41 + 200) = 0u;
                  *(_OWORD *)(v41 + 184) = 0u;
                  *(unsigned char *)(v41 + 240) = 13;
                  uint64_t v43 = *(unsigned __int8 *)(v37 - 11);
                  *(_OWORD *)(v41 + 256) = xmmword_1B6E8EEB0;
                  *(unsigned char *)(v41 + 272) = 0;
                  *(void *)(v41 + 288) = v43;
                  *(_OWORD *)(v41 + 296) = 0u;
                  *(_OWORD *)(v41 + 312) = 0u;
                  *(_OWORD *)(v41 + 328) = 0u;
                  *(void *)(v41 + 344) = 0;
                  *(unsigned char *)(v41 + 352) = 13;
                  uint64_t v44 = v143;
                  swift_retain();
                  uint64_t v45 = *(void *)&v145[0];
                  uint64_t v39 = (uint64_t *)v116;
                  sub_1B6786A24(v116);
                  sub_1B6BFF388(v45, v44, v40, v41, v116, 0xD000000000000017, 0x80000001B6F3B1E0, 0);
                  sub_1B6786A7C(v116);
                  swift_release();
                  swift_setDeallocating();
                  swift_arrayDestroy();
                  swift_deallocClassInstance();
                  uint64_t v29 = v119;
                }
                v37 += 28;
                v38 += 4;
                --v31;
              }
              while (v31);
            }
          }
          else if (v27 != v108)
          {
            uint64_t v70 = v36 + 28 * v27 + 12;
            uint64_t v71 = v27 << 6;
            uint64_t v72 = v108 - v27;
            int v73 = (uint64_t *)v116;
            do
            {
              if ((*(_DWORD *)(v70 + 12) & a1) != 0)
              {
                float v81 = *(float *)(v70 - 4);
                float v80 = *(float *)v70;
                float v82 = *(float *)(v70 + 4);
                uint64_t v83 = sub_1B62C91B8((uint64_t)&type metadata for LastFrameWorldTransform);
                if (v84)
                {
                  uint64_t v85 = 0;
                  uint64_t v86 = 0;
                  uint64_t v87 = 0;
                  uint64_t v88 = 0;
                  uint64_t v89 = 0;
                  uint64_t v90 = 0;
                  uint64_t v91 = 0;
                  uint64_t v92 = 0;
                }
                else
                {
                  uint64_t v85 = *(void *)(v83 + v71);
                  uint64_t v86 = *(void *)(v83 + v71 + 8);
                  uint64_t v87 = *(void *)(v83 + v71 + 16);
                  uint64_t v88 = *(void *)(v83 + v71 + 24);
                  uint64_t v89 = *(void *)(v83 + v71 + 32);
                  uint64_t v90 = *(void *)(v83 + v71 + 40);
                  uint64_t v91 = *(void *)(v83 + v71 + 48);
                  uint64_t v92 = *(void *)(v83 + v71 + 56);
                }
                v162[0] = v85;
                v162[1] = v86;
                v162[2] = v87;
                v162[3] = v88;
                v162[4] = v89;
                v162[5] = v90;
                v162[6] = v91;
                v162[7] = v92;
                char v163 = v84 & 1;
                sub_1B6893768((uint64_t)v162, (uint64_t)v123, *(float32x4_t *)(v118 + v71), *(float32x4_t *)(v118 + v71 + 16), *(float32x4_t *)(v118 + v71 + 32), *(float32x4_t *)(v118 + v71 + 48), a8, a9, a10, a11);
                sub_1B62F46E8();
                int v125 = v93;
                float v126 = fminf(fmaxf(v80 + a5, 0.0), 1.0);
                float v127 = 1.0 - fminf(fmaxf(v82 + a6, 0.0), 1.0);
                long long v128 = v123[0];
                long long v129 = v123[1];
                long long v130 = v123[2];
                long long v131 = v123[3];
                long long v132 = v123[4];
                long long v133 = v123[5];
                long long v134 = v123[6];
                long long v135 = v123[7];
                long long v136 = v123[8];
                long long v137 = v123[9];
                uint64_t v138 = v124;
                float v139 = fminf(fmaxf(v81 + a4, 0.0), 1.0);
                float v140 = a7 * 0.5;
                uint64_t v94 = *v73;
                if (*v73)
                {
                  uint64_t v95 = swift_getObjectType();
                  type metadata accessor for particle_plane_collider_uniforms(0);
                  sub_1B6B594A8((uint64_t)&v125, 1, v95, v96, v97, v98, v99, v100);
                }
                char v74 = v94 == 0;
                sub_1B62D8328(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
                uint64_t v75 = swift_allocObject();
                *(_OWORD *)(v75 + 16) = xmmword_1B6E77D10;
                uint64_t v76 = *(unsigned __int8 *)(v70 - 12);
                *(_OWORD *)(v75 + 32) = xmmword_1B6E8EE90;
                *(unsigned char *)(v75 + 48) = 0;
                *(void *)(v75 + 64) = v76;
                *(void *)(v75 + 120) = 0;
                *(_OWORD *)(v75 + 104) = 0u;
                *(_OWORD *)(v75 + 88) = 0u;
                *(_OWORD *)(v75 + 72) = 0u;
                *(unsigned char *)(v75 + 128) = 13;
                *(_OWORD *)(v75 + 144) = xmmword_1B6E8EEA0;
                *(unsigned char *)(v75 + 160) = 0;
                *(void *)(v75 + 176) = v110;
                *(void *)(v75 + 232) = 0;
                *(_OWORD *)(v75 + 216) = 0u;
                *(_OWORD *)(v75 + 200) = 0u;
                *(_OWORD *)(v75 + 184) = 0u;
                *(unsigned char *)(v75 + 240) = 13;
                uint64_t v77 = *(unsigned __int8 *)(v70 - 11);
                *(_OWORD *)(v75 + 256) = xmmword_1B6E8EEB0;
                *(unsigned char *)(v75 + 272) = 0;
                *(void *)(v75 + 288) = v77;
                *(_OWORD *)(v75 + 296) = 0u;
                *(_OWORD *)(v75 + 312) = 0u;
                *(_OWORD *)(v75 + 328) = 0u;
                *(void *)(v75 + 344) = 0;
                *(unsigned char *)(v75 + 352) = 13;
                uint64_t v78 = v143;
                swift_retain();
                uint64_t v79 = *(void *)&v145[0];
                int v73 = (uint64_t *)v116;
                sub_1B6786A24(v116);
                sub_1B6BFF388(v79, v78, v74, v75, v116, 0xD000000000000017, 0x80000001B6F3B1E0, 0);
                sub_1B6786A7C(v116);
                swift_release();
                swift_setDeallocating();
                swift_arrayDestroy();
                swift_deallocClassInstance();
              }
              v70 += 28;
              v71 += 64;
              --v72;
            }
            while (v72);
          }
          char v22 = v106;
          sub_1B6345178(v106, (unsigned __int16 **)v141, (uint64_t)v159);
          sub_1B634507C((char *)v117);
          uint64_t v23 = v105;
          ecs_stack_allocator_pop_snapshot(v105);
          int v24 = v104;
          if (v104)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 376));
          }
          swift_release();
          uint64_t v25 = v109 + 1;
        }
        while (v109 + 1 != v107);
        sub_1B632F170(v151);
      }
    }
    return sub_1B632F170(v151);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ParticlePlaneCollider(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[28]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticlePlaneCollider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 28) = 0;
    }
    if (a2) {
      *(unsigned char *)double result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticlePlaneCollider()
{
  return &type metadata for ParticlePlaneCollider;
}

unint64_t sub_1B68952E0(uint64_t a1, unsigned __int8 a2)
{
  sub_1B629C37C(a1, (uint64_t)v14);
  if (v15 >= 0x3B)
  {
    uint64_t v5 = v16;
    if (*(void *)(v16 + 16) && (unint64_t v6 = sub_1B69FA7C0(a2), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 16 * v6);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      uint64_t v12 = 0xD00000000000001BLL;
      uint64_t v13 = 0x80000001B6F31700;
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v9 = v12;
      int v10 = sub_1B6E32158();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v12 = 0;
      swift_retain();
      sub_1B6B33E34(v10, &v12, v9, v13);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
  }
  else
  {
    if (!a2) {
      return sub_1B68A2434(a1);
    }
    if (a2 == 1) {
      return sub_1B68A1DAC(a1);
    }
    return sub_1B68A163C(a1);
  }
  return v8;
}

uint64_t sub_1B689554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 == 2)
  {
    uint64_t v7 = 544499052;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B68952E0(a1, 2u);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0x2074736E6F63;
    sub_1B68952E0(a1, a5);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  return v7;
}

uint64_t sub_1B689568C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11)
{
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_1B6641518(v12);
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1B6641518(v13);
  if (a10) {
    sub_1B6E31948();
  }
  if (a11 == 2)
  {
    if (a7)
    {
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6646D3C();
    sub_1B6E31638();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6646D3C();
    sub_1B6E31638();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B6895AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9, char a10)
{
  if (a10 == 2) {
    return sub_1B689568C(a1, a2, a3, a4, a5, a6, a7, a8 & 1, a9 & 1, 0, 2);
  }
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B689568C(6516326, 0xE300000000000000, a3, a4, a5, a6, a7, 0, a9 & 1, 0, a10);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return 0x20746375727473;
}

uint64_t sub_1B6895C5C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v4 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    return a1;
  }
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return a1;
}

uint64_t sub_1B6895D40(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a2 == 1)
    {
      sub_1B6A3D8B8();
      char v2 = sub_1B6E31A08();
LABEL_4:
      char v3 = v2;
      swift_bridgeObjectRelease();
      return v3 & 1;
    }
    if (sub_1B6A3D8B8() == 0x6D6152726F6C6F43 && v13 == 0xE900000000000070) {
      goto LABEL_24;
    }
    char v14 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      if (sub_1B6A3D8B8() == 0x466576727543 && v15 == 0xE600000000000000)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_26:
      char v2 = sub_1B6E334B8();
      goto LABEL_4;
    }
  }
  else
  {
    if (sub_1B6A3D8B8() == 0x6D6152726F6C6F43 && v5 == 0xE900000000000070) {
      goto LABEL_24;
    }
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      if (sub_1B6A3D8B8() == 0x466576727543 && v7 == 0xE600000000000000) {
        goto LABEL_24;
      }
      char v8 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 1;
      }
      sub_1B6A3D8B8();
      char v9 = sub_1B6E31A08();
      swift_bridgeObjectRelease();
      if (v9) {
        return 1;
      }
      if (sub_1B6A3D8B8() == 0x676E69727453 && v10 == 0xE600000000000000) {
        goto LABEL_24;
      }
      char v11 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        if (sub_1B6A3D8B8() == 5001813 && v12 == 0xE300000000000000) {
          goto LABEL_24;
        }
        goto LABEL_26;
      }
    }
  }
  return 1;
}

uint64_t sub_1B6895FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 2)
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v8 = 544370534;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v8 = 0x20746E6928726F66;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
  }
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  return v8;
}

uint64_t sub_1B68961CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (!a9)
  {
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_1B6A3D574(v30);
    sub_1B6A3C6F4(v30, 1, (uint64_t)&v26);
    sub_1B68A8EE0(v30, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    uint64_t v17 = sub_1B689B45C(&v26, a8, 0, 0, 0);
    uint64_t v19 = v18;
    sub_1B666BD18((uint64_t)&v26);
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1B6640EBC(v17, v19, a4);
    if (a7)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = 123;
      unint64_t v27 = 0xE100000000000000;
      v31[0] = v20;
      sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1B6646D3C();
      sub_1B6E31638();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v26 = 8201;
    unint64_t v27 = 0xE200000000000000;
    sub_1B6A3D574(v31);
    sub_1B68952E0((uint64_t)v31, 0);
    sub_1B68A8EE0(v31, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6A3D574(&v26);
    sub_1B68952E0((uint64_t)&v26, 0);
    sub_1B68A8EE0(&v26, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    goto LABEL_16;
  }
  if (a9 == 1)
  {
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_1B6A3D574(v30);
    sub_1B6A3C6F4(v30, 1, (uint64_t)&v26);
    sub_1B68A8EE0(v30, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    uint64_t v13 = sub_1B68A3024((uint64_t)&v26, a8);
    uint64_t v15 = v14;
    sub_1B666BD18((uint64_t)&v26);
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1B6640EBC(v13, v15, a4);
    if (a7)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = 123;
      unint64_t v27 = 0xE100000000000000;
      v31[0] = v16;
      sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1B6646D3C();
      sub_1B6E31638();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v26 = 0x6461657268742009;
    unint64_t v27 = 0xE900000000000020;
    sub_1B6A3D574(v31);
    sub_1B68952E0((uint64_t)v31, 1u);
    sub_1B68A8EE0(v31, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6A3D574(&v26);
    sub_1B68952E0((uint64_t)&v26, 1u);
    sub_1B68A8EE0(&v26, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
LABEL_16:
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    return v28;
  }
  if (a5)
  {
    sub_1B689554C(a1, a2, a3, 0, 2u);
  }
  else
  {
    uint64_t v26 = 544366966;
    unint64_t v27 = 0xE400000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B68952E0(a1, 2u);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  sub_1B6A3D574(v31);
  sub_1B6A3C6F4(v31, 1, (uint64_t)&v26);
  sub_1B68A8EE0(v31, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  unint64_t v21 = sub_1B6896AAC(&v26, a8, 0, 0, 2);
  uint64_t v23 = v22;
  sub_1B666BD18((uint64_t)&v26);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1B6640EBC(v21, v23, a4);
  if (a7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = 91;
    unint64_t v27 = 0xE100000000000000;
    v30[0] = v24;
    sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6646D3C();
    sub_1B6E31638();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  uint64_t v26 = 8201;
  unint64_t v27 = 0xE200000000000000;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v26;
}

void sub_1B6896A70()
{
  qword_1E9E493F8 = (uint64_t)&unk_1F0FA50D0;
}

void sub_1B6896A84()
{
  qword_1E9DD1BC8 = (uint64_t)&unk_1F0FA59D8;
}

void sub_1B6896A98()
{
  qword_1E9DD1BD0 = (uint64_t)&unk_1F0FA4838;
}

unint64_t sub_1B6896AAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10 = sub_1B6E30F48();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62B31E8((uint64_t)(a1 + 7), (uint64_t)&v143);
  if (*((void *)&v144 + 1))
  {
    *(void *)&long long v140 = a3;
    *(void *)&long long v142 = a4;
    LODWORD(v141) = a5;
    sub_1B62B57A8(&v143, v149);
    uint64_t v16 = a1[2];
    uint64_t v17 = a1[3];
    uint64_t v15 = a1 + 2;
    uint64_t v18 = v15[2];
    uint64_t v19 = v15[3];
    uint64_t v20 = v15[4];
    switch(v17)
    {
      case 0:
        *(void *)&long long v150 = 0;
        *((void *)&v150 + 1) = 0xE000000000000000;
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_113;
      case 1:
      case 5:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        LOBYTE(v148) = v150;
        goto LABEL_19;
      case 2:
      case 6:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        LOWORD(v148) = v150;
        goto LABEL_19;
      case 3:
      case 7:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        LODWORD(v148) = v150;
        goto LABEL_19;
      case 4:
      case 8:
      case 9:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        *(void *)&long long v148 = v150;
LABEL_19:
        uint64_t v22 = sub_1B6E33098();
        goto LABEL_251;
      case 10:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B63959C0(0, &qword_1EB980EA0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC280]);
        swift_dynamicCast();
        *(void *)&long long v29 = v150;
        long long v142 = v29;
        *(void *)&long long v148 = 0;
        *((void *)&v148 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v81 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v96 = v147;
            int v97 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v97, (uint64_t *)&v147, v96, *((uint64_t *)&v96 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = v142;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = DWORD1(v142);
        goto LABEL_170;
      case 11:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B63959C0(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
        swift_dynamicCast();
        long long v142 = v150;
        *(void *)&long long v148 = 0;
        *((void *)&v148 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v82 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v98 = v147;
            int v99 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v99, (uint64_t *)&v147, v98, *((uint64_t *)&v98 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = v142;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = DWORD1(v142);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = DWORD2(v142);
        goto LABEL_170;
      case 12:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B63959C0(0, &qword_1EB980F08, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2F8]);
        swift_dynamicCast();
        long long v142 = v150;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v83 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v100 = v147;
            int v101 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v101, (uint64_t *)&v147, v100, *((uint64_t *)&v100 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = v142;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = DWORD1(v142);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = DWORD2(v142);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v147) = HIDWORD(v142);
LABEL_170:
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_250;
      case 13:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        if (swift_dynamicCast())
        {
          *(void *)&long long v143 = 0;
          *((void *)&v143 + 1) = 0xE000000000000000;
          sub_1B6E31EA8();
LABEL_75:
          uint64_t v22 = v143;
        }
        else
        {
          *(void *)&long long v150 = 0;
          *((void *)&v150 + 1) = 0xE000000000000000;
          sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
          swift_dynamicCast();
          sub_1B6E31EA8();
LABEL_113:
          uint64_t v22 = v150;
        }
        goto LABEL_251;
      case 14:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        swift_dynamicCast();
        *(void *)&long long v30 = v150;
        long long v142 = v30;
        *(void *)&long long v148 = 0;
        *((void *)&v148 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v84 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v102 = v147;
            int v103 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v103, (uint64_t *)&v147, v102, *((uint64_t *)&v102 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_189;
      case 15:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        swift_dynamicCast();
        long long v142 = v150;
        *(void *)&long long v148 = 0;
        *((void *)&v148 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v85 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v104 = v147;
            int v105 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v105, (uint64_t *)&v147, v104, *((uint64_t *)&v104 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_189;
      case 16:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        swift_dynamicCast();
        long long v142 = v150;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v86 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v106 = v147;
            int v107 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v107, (uint64_t *)&v147, v106, *((uint64_t *)&v106 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
LABEL_189:
        sub_1B6E31EA8();
        goto LABEL_250;
      case 17:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        type metadata accessor for simd_float2x2(0);
        swift_dynamicCast();
        long long v31 = v150;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v87 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v108 = v147;
            int v109 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v109, (uint64_t *)&v147, v108, *((uint64_t *)&v108 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v147 = v31;
        BOOL v110 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        sub_1B68A83D0(&qword_1E9DCFE30, &qword_1EB980E90, v110);
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v147 = *((void *)&v31 + 1);
        goto LABEL_249;
      case 18:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        type metadata accessor for simd_float2x3(0);
        swift_dynamicCast();
        long long v141 = v150;
        long long v142 = v151;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v88 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v111 = v147;
            int v112 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v112, (uint64_t *)&v147, v111, *((uint64_t *)&v111 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v141;
        uint64_t v113 = &qword_1EB980EB0;
        float v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        uint64_t v115 = (unint64_t *)&unk_1E9DCFE28;
        goto LABEL_208;
      case 19:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        type metadata accessor for simd_float2x4(0);
        swift_dynamicCast();
        long long v141 = v150;
        long long v142 = v151;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v89 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v116 = v147;
            int v117 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v117, (uint64_t *)&v147, v116, *((uint64_t *)&v116 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v141;
        uint64_t v113 = &qword_1EB980EF0;
        float v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        uint64_t v115 = (unint64_t *)&unk_1E9DCFE20;
LABEL_208:
        sub_1B68A83D0(v115, (unint64_t *)v113, v114);
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v142;
        goto LABEL_249;
      case 20:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        type metadata accessor for simd_float3x2(0);
        swift_dynamicCast();
        uint64_t v32 = *((void *)&v150 + 1);
        uint64_t v33 = v150;
        uint64_t v34 = v151;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v90 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v118 = v147;
            int v119 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v119, (uint64_t *)&v147, v118, *((uint64_t *)&v118 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v147 = v33;
        uint64_t v120 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        sub_1B68A83D0(&qword_1E9DCFE30, &qword_1EB980E90, v120);
        goto LABEL_234;
      case 21:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v150);
        type metadata accessor for simd_float3x3(0);
        swift_dynamicCast();
        long long v140 = v143;
        long long v141 = v144;
        long long v142 = v145;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v91 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v121 = v147;
            int v122 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v122, (uint64_t *)&v147, v121, *((uint64_t *)&v121 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v140;
        uint64_t v123 = &qword_1EB980EB0;
        uint64_t v124 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        int v125 = (unint64_t *)&unk_1E9DCFE28;
        goto LABEL_227;
      case 22:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v150);
        type metadata accessor for simd_float3x4(0);
        swift_dynamicCast();
        long long v140 = v143;
        long long v141 = v144;
        long long v142 = v145;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v92 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v126 = v147;
            int v127 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v127, (uint64_t *)&v147, v126, *((uint64_t *)&v126 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v140;
        uint64_t v123 = &qword_1EB980EF0;
        uint64_t v124 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        int v125 = (unint64_t *)&unk_1E9DCFE20;
LABEL_227:
        sub_1B68A83D0(v125, (unint64_t *)v123, v124);
        goto LABEL_248;
      case 23:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        type metadata accessor for simd_float4x2(0);
        swift_dynamicCast();
        long long v35 = v150;
        uint64_t v34 = *((void *)&v151 + 1);
        uint64_t v32 = v151;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v93 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v128 = v147;
            int v129 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v129, (uint64_t *)&v147, v128, *((uint64_t *)&v128 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v147 = v35;
        long long v130 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        sub_1B68A83D0(&qword_1E9DCFE30, &qword_1EB980E90, v130);
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v147 = *((void *)&v35 + 1);
LABEL_234:
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v147 = v32;
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v147 = v34;
        goto LABEL_249;
      case 24:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v150);
        type metadata accessor for simd_float4x3(0);
        swift_dynamicCast();
        long long v139 = v143;
        long long v140 = v144;
        long long v141 = v145;
        long long v142 = v146;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v94 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v131 = v147;
            int v132 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v132, (uint64_t *)&v147, v131, *((uint64_t *)&v131 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v139;
        long long v133 = &qword_1EB980EB0;
        long long v134 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        long long v135 = (unint64_t *)&unk_1E9DCFE28;
        goto LABEL_247;
      case 25:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v150);
        type metadata accessor for simd_float4x4(0);
        swift_dynamicCast();
        long long v139 = v143;
        long long v140 = v144;
        long long v141 = v145;
        long long v142 = v146;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v148 = v143;
        sub_1B629C37C((uint64_t)v15, (uint64_t)&v150);
        sub_1B629C37C((uint64_t)&v150, (uint64_t)&v143);
        if (*((void *)&v143 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v145 + 16) && (sub_1B69FA7C0(2u), (v95 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            *((void *)&v147 + 1) = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            *(void *)&long long v147 = 0xD00000000000001BLL;
            *((void *)&v147 + 1) = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            long long v136 = v147;
            int v137 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v147 = 0;
            swift_retain();
            sub_1B6B33E34(v137, (uint64_t *)&v147, v136, *((uint64_t *)&v136 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)&v150);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v139;
        long long v133 = &qword_1EB980EF0;
        long long v134 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        long long v135 = (unint64_t *)&unk_1E9DCFE20;
LABEL_247:
        sub_1B68A83D0(v135, (unint64_t *)v133, v134);
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v140;
LABEL_248:
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v141;
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        long long v147 = v142;
LABEL_249:
        sub_1B6E33808();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
LABEL_250:
        sub_1B6E31948();
        uint64_t v22 = v148;
        goto LABEL_251;
      case 26:
        *(void *)&long long v150 = 0;
        *((void *)&v150 + 1) = 0xE000000000000000;
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        sub_1B6E31E58();
        goto LABEL_113;
      case 27:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        int v36 = v150;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v143 = 0x283855726F6C6F43;
        *((void *)&v143 + 1) = 0xE800000000000000;
        LOBYTE(v150) = v36;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LOBYTE(v150) = BYTE1(v36);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LOBYTE(v150) = BYTE2(v36);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LOBYTE(v150) = HIBYTE(v36);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 28:
        *(void *)&long long v139 = a2;
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        uint64_t v37 = *((void *)&v150 + 1);
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        uint64_t v38 = MEMORY[0x1E4FBB470];
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        uint64_t v40 = v39;
        uint64_t v41 = swift_bridgeObjectRetain();
        MEMORY[0x1BA9B38A0](v41, v40);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v42 = swift_bridgeObjectRetain();
        MEMORY[0x1BA9B38A0](v42, v38);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v43 = *(void *)(v37 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v150 = v43;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v22 = v143;
        if (!(void)v142) {
          goto LABEL_251;
        }
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6BDE8D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        goto LABEL_67;
      case 34:
      case 35:
        *(void *)&long long v150 = 34;
        *((void *)&v150 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        swift_dynamicCast();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        goto LABEL_113;
      case 36:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        type metadata accessor for simd_quatf(0);
        swift_dynamicCast();
        long long v142 = v150;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        goto LABEL_74;
      case 37:
        *(void *)&long long v139 = a2;
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v46 = MEMORY[0x1E4FBB470];
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
        swift_dynamicCast();
        uint64_t v47 = *((void *)&v150 + 1);
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v143 = 0xD000000000000027;
        *((void *)&v143 + 1) = 0x80000001B6F3B3F0;
        uint64_t v48 = swift_bridgeObjectRetain();
        MEMORY[0x1BA9B38A0](v48, v46);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v49 = swift_bridgeObjectRetain();
        MEMORY[0x1BA9B38A0](v49, v46);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v50 = *(void *)(v47 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v150 = v50;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v22 = v143;
        if (!(void)v142) {
          goto LABEL_251;
        }
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v143 = 0xD00000000000002ALL;
        *((void *)&v143 + 1) = 0x80000001B6F3B420;
        sub_1B6BDE8D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
LABEL_67:
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        long long v51 = v143;
        uint64_t v52 = v139;
        uint64_t v53 = *(void **)(v139 + 168);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v52 + 168) = v53;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v53 = sub_1B6335858(0, v53[2] + 1, 1, v53);
          *(void *)(v139 + 168) = v53;
        }
        unint64_t v56 = v53[2];
        unint64_t v55 = v53[3];
        if (v56 >= v55 >> 1)
        {
          uint64_t v53 = sub_1B6335858(v55 > 1, v56 + 1, 1, v53);
          *(void *)(v139 + 168) = v53;
        }
        _OWORD v53[2] = v56 + 1;
        *(_OWORD *)&v53[2 * v56 + 4] = v51;
        goto LABEL_251;
      case 39:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
        swift_dynamicCast();
        long long v57 = v150;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v143 = 0xD00000000000001DLL;
        *((void *)&v143 + 1) = 0x80000001B6F3B3D0;
        *(void *)&long long v150 = v57;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v150 = *((void *)&v57 + 1);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 40:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
        swift_dynamicCast();
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
LABEL_74:
        sub_1B6E31948();
        goto LABEL_75;
      case 43:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1E9DD1C08;
        uint64_t v59 = MEMORY[0x1E4FBB390];
        goto LABEL_92;
      case 44:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1EB980370;
        uint64_t v59 = MEMORY[0x1E4FBC358];
        goto LABEL_92;
      case 45:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1EB980388;
        uint64_t v59 = MEMORY[0x1E4FBC450];
        goto LABEL_92;
      case 46:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1E9DD1C00;
        uint64_t v59 = MEMORY[0x1E4FBC4C0];
        goto LABEL_92;
      case 47:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1E9DD1BF8;
        uint64_t v59 = MEMORY[0x1E4FBC538];
        goto LABEL_92;
      case 48:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1E9DD1BF0;
        uint64_t v59 = MEMORY[0x1E4FBC098];
        goto LABEL_92;
      case 49:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1E9DD1BE8;
        uint64_t v59 = MEMORY[0x1E4FBC0F8];
        goto LABEL_92;
      case 50:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1E9DD1BE0;
        uint64_t v59 = MEMORY[0x1E4FBC150];
        goto LABEL_92;
      case 51:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1E9DD1BD8;
        uint64_t v59 = MEMORY[0x1E4FBC1C8];
        goto LABEL_92;
      case 52:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = &qword_1EB980330;
        uint64_t v59 = MEMORY[0x1E4FBB550];
        goto LABEL_92;
      case 53:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = (unint64_t *)&qword_1EB980320;
        uint64_t v59 = MEMORY[0x1E4FBB470];
        goto LABEL_92;
      case 54:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v60 = &qword_1E9DD0638;
        unsigned int v61 = &qword_1EB980E90;
        int v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
        goto LABEL_90;
      case 55:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v60 = &qword_1E9DD0628;
        unsigned int v61 = (unint64_t *)&qword_1EB980EB0;
        int v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
        goto LABEL_90;
      case 56:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v60 = &qword_1EB980360;
        unsigned int v61 = (unint64_t *)&qword_1EB980EF0;
        int v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
LABEL_90:
        uint64_t v63 = v62;
        sub_1B68A835C(0, (unint64_t *)v60, v61, v62);
        swift_dynamicCast();
        uint64_t v64 = v150;
        sub_1B63959C0(0, v61, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], v63);
        uint64_t v22 = MEMORY[0x1BA9B38A0](v64, v65);
        swift_bridgeObjectRelease();
        goto LABEL_251;
      case 57:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        uint64_t v58 = (unint64_t *)&qword_1EB9802F0;
        uint64_t v59 = MEMORY[0x1E4FBB1A0];
LABEL_92:
        sub_1B6385FA0(0, v58, v59, MEMORY[0x1E4FBB320]);
        swift_dynamicCast();
        uint64_t v66 = v150;
        uint64_t v67 = v59;
        goto LABEL_93;
      case 58:
        sub_1B62CAAD8((uint64_t)v149, (uint64_t)&v143);
        sub_1B67517E0(0);
        swift_dynamicCast();
        uint64_t v68 = v150;
        int64_t v69 = *(void *)(v150 + 16);
        if (v69)
        {
          *(void *)&long long v143 = MEMORY[0x1E4FBC860];
          sub_1B6C3C3B8(0, v69, 0);
          uint64_t v71 = *(void *)(v11 + 16);
          uint64_t v70 = v11 + 16;
          *(void *)&long long v142 = v71;
          unint64_t v72 = (*(unsigned __int8 *)(v70 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 64);
          *(void *)&long long v139 = v68;
          uint64_t v73 = v68 + v72;
          *(void *)&long long v141 = *(void *)(v70 + 56);
          *(void *)&long long v140 = v70 - 8;
          do
          {
            ((void (*)(char *, uint64_t, uint64_t))v142)(v14, v73, v10);
            uint64_t v74 = sub_1B6E30E18();
            uint64_t v76 = v75;
            (*(void (**)(char *, uint64_t))v140)(v14, v10);
            uint64_t v77 = v143;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B6C3C3B8(0, *(void *)(v77 + 16) + 1, 1);
              uint64_t v77 = v143;
            }
            unint64_t v79 = *(void *)(v77 + 16);
            unint64_t v78 = *(void *)(v77 + 24);
            if (v79 >= v78 >> 1)
            {
              sub_1B6C3C3B8(v78 > 1, v79 + 1, 1);
              uint64_t v77 = v143;
            }
            *(void *)(v77 + 16) = v79 + 1;
            uint64_t v80 = v77 + 16 * v79;
            *(void *)(v80 + 32) = v74;
            *(void *)(v80 + 40) = v76;
            v73 += v141;
            --v69;
          }
          while (v69);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v77 = MEMORY[0x1E4FBC860];
        }
        uint64_t v67 = MEMORY[0x1E4FBB1A0];
        uint64_t v66 = v77;
LABEL_93:
        uint64_t v22 = MEMORY[0x1BA9B38A0](v66, v67);
        swift_bridgeObjectRelease();
LABEL_251:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v149);
        break;
      default:
        if (*(unsigned char *)(a2 + 64) == 1)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          *(void *)&long long v143 = 0;
          *((void *)&v143 + 1) = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          long long v150 = v143;
          sub_1B6E31948();
          *(void *)&long long v143 = v16;
          *((void *)&v143 + 1) = v17;
          *(void *)&long long v144 = v18;
          *((void *)&v144 + 1) = v19;
          *(void *)&long long v145 = v20;
          sub_1B6E32B18();
          long long v44 = v150;
          int v45 = sub_1B6E32158();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          *(void *)&long long v143 = 0;
          swift_retain();
          sub_1B6B33E34(v45, (uint64_t *)&v143, v44, *((uint64_t *)&v44 + 1));
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v22 = 0x3E524F5252453CLL;
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v149);
        break;
    }
  }
  else
  {
    sub_1B62B32CC((uint64_t)&v143);
    unint64_t v21 = a1[3];
    if (v21 > 0x3A)
    {
      return 0xD00000000000001FLL;
    }
    else if (((1 << v21) & 0x7FFFFBC5FFFFFFFLL) != 0)
    {
      uint64_t v22 = 0x3E524F5252453CLL;
      if (*(unsigned char *)(a2 + 64) == 1)
      {
        uint64_t v23 = a1[2];
        uint64_t v24 = a1[4];
        uint64_t v25 = a1[5];
        uint64_t v26 = a1[6];
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        long long v150 = v143;
        sub_1B6E31948();
        *(void *)&long long v143 = v23;
        *((void *)&v143 + 1) = v21;
        *(void *)&long long v144 = v24;
        *((void *)&v144 + 1) = v25;
        *(void *)&long long v145 = v26;
        sub_1B6E32B18();
        sub_1B6E31948();
        long long v27 = v150;
        int v28 = sub_1B6E32158();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        *(void *)&long long v143 = 0;
        swift_retain();
        sub_1B6B33E34(v28, (uint64_t *)&v143, v27, *((uint64_t *)&v27 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      return 0xD00000000000001BLL;
    }
  }
  return v22;
}

uint64_t sub_1B689B45C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  sub_1B62B31E8((uint64_t)(a1 + 7), (uint64_t)&v248);
  if (*((void *)&v249 + 1))
  {
    unsigned int v240 = a5;
    *(void *)&long long v241 = a2;
    sub_1B62B57A8(&v248, v256);
    uint64_t v11 = a1[2];
    uint64_t v10 = a1[3];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v13 = a1[4];
    uint64_t v12 = a1[5];
    uint64_t v14 = a1[6];
    switch(v10)
    {
      case 0:
        *(void *)&long long v242 = 0;
        *((void *)&v242 + 1) = 0xE000000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_97;
      case 1:
      case 5:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        LOBYTE(v246) = v242;
        goto LABEL_20;
      case 2:
      case 6:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        LOWORD(v246) = v242;
        goto LABEL_20;
      case 3:
      case 7:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        LODWORD(v246) = v242;
        goto LABEL_20;
      case 4:
      case 8:
      case 9:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        *(void *)&long long v246 = v242;
LABEL_20:
        uint64_t v15 = sub_1B6E33098();
        goto LABEL_224;
      case 10:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B63959C0(0, &qword_1EB980EA0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC280]);
        swift_dynamicCast();
        *(void *)&long long v22 = v242;
        long long v241 = v22;
        *(void *)&long long v246 = 40;
        *((void *)&v246 + 1) = 0xE100000000000000;
        sub_1B629C37C((uint64_t)(a1 + 2), (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v150 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v159 = v254;
            uint64_t v160 = v255;
            int v161 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v161, &v254, v159, v160);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = v241;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = DWORD1(v241);
        goto LABEL_178;
      case 11:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B63959C0(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
        swift_dynamicCast();
        long long v241 = v242;
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 40;
        *((void *)&v246 + 1) = 0xE100000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v151 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v162 = v254;
            uint64_t v163 = v255;
            int v164 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v164, &v254, v162, v163);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = v241;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = DWORD1(v241);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = DWORD2(v241);
        goto LABEL_178;
      case 12:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B63959C0(0, &qword_1EB980F08, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2F8]);
        swift_dynamicCast();
        long long v241 = v242;
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 40;
        *((void *)&v246 + 1) = 0xE100000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v152 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v165 = v254;
            uint64_t v166 = v255;
            int v167 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v167, &v254, v165, v166);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = v241;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = DWORD1(v241);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = DWORD2(v241);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v254) = HIDWORD(v241);
LABEL_178:
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_223;
      case 13:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        if (swift_dynamicCast())
        {
          *(void *)&long long v248 = 0;
          *((void *)&v248 + 1) = 0xE000000000000000;
          sub_1B6E31EA8();
LABEL_78:
          sub_1B6E31948();
          uint64_t v15 = v248;
        }
        else
        {
          *(void *)&long long v242 = 0;
          *((void *)&v242 + 1) = 0xE000000000000000;
          sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
          swift_dynamicCast();
          sub_1B6E31EA8();
LABEL_96:
          sub_1B6E31948();
LABEL_97:
          uint64_t v15 = v242;
        }
LABEL_224:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v256);
        break;
      case 14:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        swift_dynamicCast();
        *(void *)&long long v23 = v242;
        long long v241 = v23;
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v246 = v248;
        sub_1B6E31948();
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v153 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v168 = v254;
            uint64_t v169 = v255;
            int v170 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v170, &v254, v168, v169);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v171 = sub_1B6A04144();
          uint64_t v173 = v172;
          uint64_t v175 = v174;
          uint64_t v177 = v176;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v171, v173, v175, v177);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_203;
      case 15:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        swift_dynamicCast();
        long long v241 = v242;
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v246 = v248;
        sub_1B6E31948();
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v154 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v178 = v254;
            uint64_t v179 = v255;
            int v180 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v180, &v254, v178, v179);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v181 = sub_1B6A04144();
          uint64_t v183 = v182;
          uint64_t v185 = v184;
          uint64_t v187 = v186;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v181, v183, v185, v187);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_203;
      case 16:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        swift_dynamicCast();
        long long v241 = v242;
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v246 = v248;
        sub_1B6E31948();
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v155 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v188 = v254;
            uint64_t v189 = v255;
            int v190 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v190, &v254, v188, v189);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v191 = sub_1B6A04144();
          uint64_t v193 = v192;
          uint64_t v195 = v194;
          uint64_t v197 = v196;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v191, v193, v195, v197);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
LABEL_203:
        sub_1B6E31EA8();
        goto LABEL_223;
      case 17:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        type metadata accessor for simd_float2x2(0);
        swift_dynamicCast();
        uint64_t v24 = *((void *)&v242 + 1);
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        uint64_t v26 = v25;
        uint64_t v247 = v25;
        *(void *)&long long v246 = v242;
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v239 = xmmword_1B6E8EFB0;
        memset(v245, 0, 40);
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v26;
        *(void *)&long long v246 = v24;
        *(void *)&long long v242 = 829189987;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = xmmword_1B6E8EFB0;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 7890550;
        *((void *)&v246 + 1) = 0xE300000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v156 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v198 = v254;
            uint64_t v199 = v255;
            int v200 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v200, &v254, v198, v199);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v201 = sub_1B6A04144();
          uint64_t v203 = v202;
          uint64_t v205 = v204;
          uint64_t v207 = v206;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v201, v203, v205, v207);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_211;
      case 18:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        type metadata accessor for simd_float2x3(0);
        swift_dynamicCast();
        long long v238 = v243;
        long long v239 = v242;
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        uint64_t v28 = v27;
        uint64_t v247 = v27;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v242;
        memset((char *)v245 + 8, 0, 32);
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v29 = xmmword_1B6E8EFA0;
        goto LABEL_39;
      case 19:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        type metadata accessor for simd_float2x4(0);
        swift_dynamicCast();
        long long v238 = v243;
        long long v239 = v242;
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        uint64_t v28 = v30;
        uint64_t v247 = v30;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v242;
        memset((char *)v245 + 8, 0, 32);
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v29 = xmmword_1B6E8EF90;
LABEL_39:
        long long v237 = v29;
        long long v243 = v29;
        *(void *)&v245[0] = 0;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        uint64_t v31 = v241;
        uint64_t v32 = v240;
        *(void *)&long long v239 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v28;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v238;
        *(void *)&long long v242 = 829189987;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = v237;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v237;
        sub_1B689B45C(&v248, v31, 0, 0, v32);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 7890550;
        *((void *)&v246 + 1) = 0xE300000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v117 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v120 = v254;
            uint64_t v121 = v255;
            int v122 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v122, &v254, v120, v121);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v123 = sub_1B6A04144();
          uint64_t v125 = v124;
          uint64_t v127 = v126;
          uint64_t v129 = v128;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v123, v125, v127, v129);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_211:
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        goto LABEL_220;
      case 20:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        type metadata accessor for simd_float3x2(0);
        swift_dynamicCast();
        uint64_t v33 = *((void *)&v242 + 1);
        uint64_t v34 = v243;
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        uint64_t v36 = v35;
        uint64_t v247 = v35;
        *(void *)&long long v246 = v242;
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v239 = xmmword_1B6E8EFB0;
        memset(v245, 0, 40);
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        *(void *)&long long v238 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v36;
        *(void *)&long long v246 = v33;
        *(void *)&long long v242 = 829189987;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = xmmword_1B6E8EFB0;
        memset(v245, 0, 40);
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        *(void *)&long long v237 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v36;
        *(void *)&long long v246 = v34;
        *(void *)&long long v242 = 845967203;
        *((void *)&v242 + 1) = 0xE400000000000000;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        sub_1B689B45C(&v248, v241, 0, 0, v240);
        uint64_t v38 = v37;
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 7890550;
        *((void *)&v246 + 1) = 0xE300000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v157 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v209 = v254;
            uint64_t v208 = v255;
            int v210 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v210, &v254, v209, v208);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v211 = sub_1B6A04144();
          uint64_t v213 = v212;
          uint64_t v215 = v214;
          *(void *)&long long v241 = v38;
          uint64_t v217 = v216;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v211, v213, v215, v217);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_219;
      case 21:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v242);
        type metadata accessor for simd_float3x3(0);
        swift_dynamicCast();
        long long v239 = v248;
        long long v235 = v250;
        long long v236 = v249;
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        uint64_t v40 = v39;
        uint64_t v247 = v39;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v239;
        memset((char *)v245 + 8, 0, 32);
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v41 = xmmword_1B6E8EFA0;
        goto LABEL_45;
      case 22:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v242);
        type metadata accessor for simd_float3x4(0);
        swift_dynamicCast();
        long long v239 = v248;
        long long v235 = v250;
        long long v236 = v249;
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        uint64_t v40 = v42;
        uint64_t v247 = v42;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v239;
        memset((char *)v245 + 8, 0, 32);
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v41 = xmmword_1B6E8EF90;
LABEL_45:
        long long v239 = v41;
        long long v243 = v41;
        *(void *)&v245[0] = 0;
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = v244;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        uint64_t v43 = v241;
        uint64_t v44 = v240;
        *(void *)&long long v237 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        *(void *)&long long v238 = v45;
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v40;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v236;
        *(void *)&long long v242 = 829189987;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = v239;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = v244;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        *(void *)&long long v236 = sub_1B689B45C(&v248, v43, 0, 0, v44);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v40;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v235;
        *(void *)&long long v242 = 845967203;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = v239;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = v244;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        sub_1B689B45C(&v248, v43, 0, 0, v44);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 7890550;
        *((void *)&v246 + 1) = 0xE300000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v118 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v130 = v254;
            uint64_t v131 = v255;
            int v132 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v132, &v254, v130, v131);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v133 = sub_1B6A04144();
          uint64_t v135 = v134;
          uint64_t v137 = v136;
          uint64_t v139 = v138;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v133, v135, v137, v139);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_219:
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
LABEL_220:
        sub_1B6E31948();
        goto LABEL_221;
      case 23:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        type metadata accessor for simd_float4x2(0);
        swift_dynamicCast();
        uint64_t v46 = *((void *)&v242 + 1);
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        uint64_t v48 = v47;
        uint64_t v247 = v47;
        *(void *)&long long v246 = v242;
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v239 = xmmword_1B6E8EFB0;
        memset(v245, 0, 40);
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        *(void *)&long long v237 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        *(void *)&long long v238 = v49;
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v48;
        *(void *)&long long v246 = v46;
        *(void *)&long long v242 = 829189987;
        *((void *)&v242 + 1) = 0xE400000000000000;
        memset(v245, 0, 40);
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        *(void *)&long long v236 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v48;
        *(void *)&long long v246 = v243;
        *(void *)&long long v242 = 845967203;
        *((void *)&v242 + 1) = 0xE400000000000000;
        memset(v245, 0, 40);
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        *(void *)&long long v235 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v48;
        *(void *)&long long v246 = *((void *)&v243 + 1);
        *(void *)&long long v242 = 862744419;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = xmmword_1B6E8EFB0;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EFB0;
        sub_1B689B45C(&v248, v241, 0, 0, v240);
        uint64_t v51 = v50;
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 7890550;
        *((void *)&v246 + 1) = 0xE300000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v158 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v219 = v254;
            uint64_t v220 = v255;
            int v221 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v221, &v254, v219, v220);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v222 = sub_1B6A04144();
          uint64_t v224 = v223;
          uint64_t v226 = v225;
          *(void *)&long long v241 = v51;
          uint64_t v228 = v227;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v222, v224, v226, v228);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        goto LABEL_222;
      case 24:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v242);
        type metadata accessor for simd_float4x3(0);
        swift_dynamicCast();
        long long v239 = v248;
        long long v235 = v250;
        long long v236 = v249;
        long long v234 = v251;
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        uint64_t v53 = v52;
        uint64_t v247 = v52;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v239;
        memset((char *)v245 + 8, 0, 32);
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v54 = xmmword_1B6E8EFA0;
        goto LABEL_51;
      case 25:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v242);
        type metadata accessor for simd_float4x4(0);
        swift_dynamicCast();
        long long v239 = v248;
        long long v235 = v250;
        long long v236 = v249;
        long long v234 = v251;
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        uint64_t v53 = v55;
        uint64_t v247 = v55;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v239;
        memset((char *)v245 + 8, 0, 32);
        *(void *)&long long v242 = 812412771;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v54 = xmmword_1B6E8EF90;
LABEL_51:
        long long v239 = v54;
        long long v243 = v54;
        *(void *)&v245[0] = 0;
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = v244;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        uint64_t v56 = v241;
        uint64_t v57 = v240;
        *(void *)&long long v237 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        *(void *)&long long v238 = v58;
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v53;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v236;
        *(void *)&long long v242 = 829189987;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = v239;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = v244;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        *(void *)&long long v236 = sub_1B689B45C(&v248, v56, 0, 0, v57);
        uint64_t v233 = v59;
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v53;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v235;
        *(void *)&long long v242 = 845967203;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = v239;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = v244;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        *(void *)&long long v235 = sub_1B689B45C(&v248, v56, 0, 0, v57);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v53;
        *(void *)&long long v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = v234;
        *(void *)&long long v242 = 862744419;
        *((void *)&v242 + 1) = 0xE400000000000000;
        long long v243 = v239;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = v244;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = v243;
        sub_1B689B45C(&v248, v56, 0, 0, v57);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v246 = 7890550;
        *((void *)&v246 + 1) = 0xE300000000000000;
        sub_1B629C37C(v9, (uint64_t)&v242);
        sub_1B629C37C((uint64_t)&v242, (uint64_t)&v248);
        if (*((void *)&v248 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v250 + 16) && (sub_1B69FA7C0(0), (v119 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            unint64_t v255 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v254 = 0xD00000000000001BLL;
            unint64_t v255 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v140 = v254;
            uint64_t v141 = v255;
            int v142 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v254 = 0;
            swift_retain();
            sub_1B6B33E34(v142, &v254, v140, v141);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A2434((uint64_t)&v242);
        }
        if (sub_1B6E319F8())
        {
          swift_bridgeObjectRetain();
          sub_1B6E318C8();
          uint64_t v143 = sub_1B6A04144();
          uint64_t v145 = v144;
          uint64_t v147 = v146;
          uint64_t v149 = v148;
          swift_bridgeObjectRelease();
          MEMORY[0x1BA9B34C0](v143, v145, v147, v149);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
LABEL_221:
        swift_bridgeObjectRelease();
        sub_1B6E31948();
LABEL_222:
        sub_1B6E31948();
        swift_bridgeObjectRelease();
LABEL_223:
        sub_1B6E31948();
        uint64_t v15 = v246;
        goto LABEL_224;
      case 26:
        *(void *)&long long v242 = 0;
        *((void *)&v242 + 1) = 0xE000000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        sub_1B6E31E58();
        goto LABEL_97;
      case 28:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        uint64_t v61 = *((void *)&v242 + 1);
        sub_1B68A835C(0, (unint64_t *)&qword_1EB980360, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
        uint64_t v247 = v62;
        *(void *)&long long v239 = v242;
        *(void *)&long long v246 = v242;
        *(void *)&long long v242 = 0;
        *((void *)&v242 + 1) = 0xE000000000000000;
        memset(v245, 0, 40);
        swift_bridgeObjectRetain();
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EF80;
        *(void *)&long long v238 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        sub_1B6385FA0(0, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
        uint64_t v247 = v63;
        *(void *)&long long v246 = v61;
        *(void *)&long long v242 = 0;
        *((void *)&v242 + 1) = 0xE000000000000000;
        long long v243 = xmmword_1B6E8EF70;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        swift_bridgeObjectRetain();
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EF70;
        sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v64 = *(void *)(v61 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v242 = v64;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LOBYTE(v242) = 1;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v15 = v248;
        if (!a4) {
          goto LABEL_224;
        }
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6BDE8D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        goto LABEL_63;
      case 34:
      case 35:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        swift_dynamicCast();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0xD000000000000029;
        *((void *)&v248 + 1) = 0x80000001B6F3B590;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v15 = v248;
        if (!a4) {
          goto LABEL_224;
        }
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0xD00000000000002BLL;
        *((void *)&v248 + 1) = 0x80000001B6F3B5C0;
        sub_1B6BDE8D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
LABEL_63:
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v66 = *((void *)&v248 + 1);
        uint64_t v65 = v248;
        uint64_t v67 = *(void **)(v241 + 168);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v241 + 168) = v67;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v67 = sub_1B6335858(0, v67[2] + 1, 1, v67);
          *(void *)(v241 + 168) = v67;
        }
        unint64_t v70 = v67[2];
        unint64_t v69 = v67[3];
        if (v70 >= v69 >> 1)
        {
          uint64_t v67 = sub_1B6335858(v69 > 1, v70 + 1, 1, v67);
          *(void *)(v241 + 168) = v67;
        }
        _OWORD v67[2] = v70 + 1;
        uint64_t v71 = &v67[2 * v70];
        v71[4] = v65;
        goto LABEL_75;
      case 36:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        type metadata accessor for simd_quatf(0);
        swift_dynamicCast();
        long long v241 = v242;
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        goto LABEL_78;
      case 37:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        uint64_t v72 = MEMORY[0x1E4FBB470];
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
        swift_dynamicCast();
        uint64_t v73 = *((void *)&v242 + 1);
        *(void *)&long long v239 = v243;
        sub_1B6385FA0(0, (unint64_t *)&qword_1EB980320, v72, MEMORY[0x1E4FBB320]);
        uint64_t v75 = v74;
        uint64_t v247 = v74;
        *(void *)&long long v238 = v242;
        *(void *)&long long v246 = v242;
        *(void *)&long long v242 = 0;
        *((void *)&v242 + 1) = 0xE000000000000000;
        long long v236 = xmmword_1B6E8EF70;
        memset(v245, 0, 40);
        swift_bridgeObjectRetain();
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EF70;
        *(void *)&long long v237 = sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        uint64_t v247 = v75;
        *(void *)&long long v246 = v73;
        *(void *)&long long v242 = 0;
        *((void *)&v242 + 1) = 0xE000000000000000;
        long long v243 = xmmword_1B6E8EF70;
        memset(v245, 0, 40);
        long long v244 = 0uLL;
        swift_bridgeObjectRetain();
        sub_1B68A86AC((uint64_t)&v246, (uint64_t)v245 + 8);
        long long v250 = 0u;
        long long v251 = v245[0];
        long long v252 = v245[1];
        uint64_t v253 = *(void *)&v245[2];
        long long v248 = v242;
        long long v249 = xmmword_1B6E8EF70;
        sub_1B689B45C(&v248, v241, 0, 0, v240);
        sub_1B666BD18((uint64_t)&v248);
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v76 = *(void *)(v73 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v242 = v76;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v15 = v248;
        if (!a4) {
          goto LABEL_224;
        }
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0xD00000000000002ALL;
        *((void *)&v248 + 1) = 0x80000001B6F3B420;
        sub_1B6BDE8D8();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v66 = *((void *)&v248 + 1);
        uint64_t v77 = v248;
        unint64_t v78 = *(void **)(v241 + 168);
        char v79 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v241 + 168) = v78;
        if ((v79 & 1) == 0)
        {
          unint64_t v78 = sub_1B6335858(0, v78[2] + 1, 1, v78);
          *(void *)(v241 + 168) = v78;
        }
        unint64_t v81 = v78[2];
        unint64_t v80 = v78[3];
        if (v81 >= v80 >> 1)
        {
          unint64_t v78 = sub_1B6335858(v80 > 1, v81 + 1, 1, v78);
          *(void *)(v241 + 168) = v78;
        }
        v78[2] = v81 + 1;
        uint64_t v71 = &v78[2 * v81];
        v71[4] = v77;
LABEL_75:
        v71[5] = v66;
        goto LABEL_224;
      case 39:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
        swift_dynamicCast();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = 0xD000000000000011;
        *((void *)&v248 + 1) = 0x80000001B6F3B520;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v242 = *((void *)&v242 + 1);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_78;
      case 40:
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
        swift_dynamicCast();
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        goto LABEL_78;
      case 43:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1E9DD1C08, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB320]);
        uint64_t v83 = swift_dynamicCast();
        MEMORY[0x1F4188790](v83, v84);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803E6C((void (*)(void *__return_ptr, char *))sub_1B68A8688, (uint64_t)v229, v246);
        goto LABEL_90;
      case 44:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1EB980370, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBB320]);
        uint64_t v86 = swift_dynamicCast();
        MEMORY[0x1F4188790](v86, v87);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803F7C((void (*)(void *__return_ptr, char *))sub_1B68A865C, (uint64_t)v229, v246);
        goto LABEL_90;
      case 45:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1EB980388, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBB320]);
        uint64_t v88 = swift_dynamicCast();
        MEMORY[0x1F4188790](v88, v89);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803F94((void (*)(void *__return_ptr, __int16 *))sub_1B68A8630, (uint64_t)v229, v246);
        goto LABEL_90;
      case 46:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1E9DD1C00, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBB320]);
        uint64_t v90 = swift_dynamicCast();
        MEMORY[0x1F4188790](v90, v91);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803FAC((void (*)(void *__return_ptr, int *))sub_1B68A8604, (uint64_t)v229, v246);
        goto LABEL_90;
      case 47:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1E9DD1BF8, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBB320]);
        uint64_t v92 = swift_dynamicCast();
        MEMORY[0x1F4188790](v92, v93);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803FC4((void (*)(void *__return_ptr, uint64_t *))sub_1B68A85D8, (uint64_t)v229, v246);
        goto LABEL_90;
      case 48:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1E9DD1BF0, MEMORY[0x1E4FBC098], MEMORY[0x1E4FBB320]);
        uint64_t v94 = swift_dynamicCast();
        MEMORY[0x1F4188790](v94, v95);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803F7C((void (*)(void *__return_ptr, char *))sub_1B68A85AC, (uint64_t)v229, v246);
        goto LABEL_90;
      case 49:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1E9DD1BE8, MEMORY[0x1E4FBC0F8], MEMORY[0x1E4FBB320]);
        uint64_t v96 = swift_dynamicCast();
        MEMORY[0x1F4188790](v96, v97);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803F94((void (*)(void *__return_ptr, __int16 *))sub_1B68A8580, (uint64_t)v229, v246);
        goto LABEL_90;
      case 50:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1E9DD1BE0, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB320]);
        uint64_t v98 = swift_dynamicCast();
        MEMORY[0x1F4188790](v98, v99);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803FAC((void (*)(void *__return_ptr, int *))sub_1B68A8554, (uint64_t)v229, v246);
        goto LABEL_90;
      case 51:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1E9DD1BD8, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBB320]);
        uint64_t v100 = swift_dynamicCast();
        MEMORY[0x1F4188790](v100, v101);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803FC4((void (*)(void *__return_ptr, uint64_t *))sub_1B68A8528, (uint64_t)v229, v246);
        goto LABEL_90;
      case 52:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, &qword_1EB980330, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
        uint64_t v102 = swift_dynamicCast();
        MEMORY[0x1F4188790](v102, v103);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B6803FC4((void (*)(void *__return_ptr, uint64_t *))sub_1B68A84FC, (uint64_t)v229, v246);
        goto LABEL_90;
      case 53:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        char v82 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
        sub_1B6385FA0(0, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
        uint64_t v104 = swift_dynamicCast();
        MEMORY[0x1F4188790](v104, v105);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v85 = sub_1B680440C((void (*)(void *__return_ptr, int *))sub_1B68A84D8, (uint64_t)v229, v246);
LABEL_90:
        uint64_t v106 = v85;
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = v106;
        uint64_t v107 = MEMORY[0x1E4FBB1A0];
        long long v108 = v82;
        goto LABEL_95;
      case 54:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B68A835C(0, (unint64_t *)&qword_1E9DD0638, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
        uint64_t v109 = swift_dynamicCast();
        MEMORY[0x1F4188790](v109, v110);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v111 = sub_1B680451C((void (*)(void *__return_ptr, uint64_t *))sub_1B68A84B4, (uint64_t)v229, v246);
        goto LABEL_94;
      case 55:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B68A835C(0, (unint64_t *)&qword_1E9DD0628, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
        uint64_t v112 = swift_dynamicCast();
        MEMORY[0x1F4188790](v112, v113);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v111 = sub_1B680462C((void (*)(void *__return_ptr, long long *))sub_1B68A8474, (uint64_t)v229, v246);
        goto LABEL_94;
      case 56:
        *(void *)&long long v242 = 123;
        *((void *)&v242 + 1) = 0xE100000000000000;
        sub_1B62CAAD8((uint64_t)v256, (uint64_t)&v248);
        sub_1B68A835C(0, (unint64_t *)&qword_1EB980360, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
        uint64_t v114 = swift_dynamicCast();
        MEMORY[0x1F4188790](v114, v115);
        char v230 = v240;
        uint64_t v231 = a1;
        uint64_t v232 = v241;
        uint64_t v111 = sub_1B680462C((void (*)(void *__return_ptr, long long *))sub_1B68A8434, (uint64_t)v229, v246);
LABEL_94:
        uint64_t v116 = v111;
        swift_bridgeObjectRelease();
        *(void *)&long long v248 = v116;
        uint64_t v107 = MEMORY[0x1E4FBB1A0];
        long long v108 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
LABEL_95:
        sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, v107, v108);
        sub_1B6646D3C();
        sub_1B6E31638();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_96;
      default:
        if (*(unsigned char *)(v241 + 64) == 1)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          *(void *)&long long v248 = 0;
          *((void *)&v248 + 1) = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          long long v242 = v248;
          sub_1B6E31948();
          *(void *)&long long v248 = v11;
          *((void *)&v248 + 1) = v10;
          *(void *)&long long v249 = v13;
          *((void *)&v249 + 1) = v12;
          *(void *)&long long v250 = v14;
          sub_1B6E32B18();
          int v60 = sub_1B6E32158();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          *(void *)&long long v248 = 0;
          swift_retain();
          sub_1B6B33E34(v60, (uint64_t *)&v248, v242, *((uint64_t *)&v242 + 1));
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v15 = 0x3E524F5252453CLL;
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v256);
        return v15;
    }
  }
  else
  {
    sub_1B62B32CC((uint64_t)&v248);
    unint64_t v16 = a1[3];
    if (v16 > 0x3A)
    {
      return 0xD00000000000001FLL;
    }
    else if (((1 << v16) & 0x7FFFFBC5FFFFFFFLL) != 0)
    {
      uint64_t v15 = 0x3E524F5252453CLL;
      if (*(unsigned char *)(a2 + 64) == 1)
      {
        uint64_t v17 = a1[2];
        uint64_t v18 = a1[4];
        uint64_t v19 = a1[5];
        uint64_t v20 = a1[6];
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        *(void *)&long long v248 = 0;
        *((void *)&v248 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        long long v242 = v248;
        sub_1B6E31948();
        *(void *)&long long v248 = v17;
        *((void *)&v248 + 1) = v16;
        *(void *)&long long v249 = v18;
        *((void *)&v249 + 1) = v19;
        *(void *)&long long v250 = v20;
        sub_1B6E32B18();
        sub_1B6E31948();
        int v21 = sub_1B6E32158();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        *(void *)&long long v248 = 0;
        swift_retain();
        sub_1B6B33E34(v21, (uint64_t *)&v248, v242, *((uint64_t *)&v242 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      return 48;
    }
  }
  return v15;
}

uint64_t sub_1B68A0D50@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  char v8 = *a1;
  uint64_t v17 = MEMORY[0x1E4FBB390];
  v16[0] = v8;
  sub_1B629C37C(a3 + 16, (uint64_t)v21);
  sub_1B6A3D574(v20);
  memset(&v15[8], 0, 32);
  *(void *)&long long v13 = 0;
  *((void *)&v13 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v20, (uint64_t)v14);
  sub_1B68A86AC((uint64_t)v16, (uint64_t)&v15[8]);
  void v18[3] = *(_OWORD *)v15;
  v18[4] = *(_OWORD *)&v15[16];
  uint64_t v19 = *(void *)&v15[32];
  v18[0] = v13;
  v18[1] = v14[0];
  long long v18[2] = v14[1];
  uint64_t v9 = sub_1B689B45C(v18, a4, 0, 0, a2);
  uint64_t v11 = v10;
  sub_1B666BD18((uint64_t)v18);
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v9;
  a5[1] = v11;
  return result;
}

uint64_t sub_1B68A0E60@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  char v9 = *a1;
  uint64_t v18 = a5;
  v17[0] = v9;
  sub_1B629C37C(a3 + 16, (uint64_t)v22);
  sub_1B6A3D574(v21);
  memset(&v16[8], 0, 32);
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v21, (uint64_t)v15);
  sub_1B68A86AC((uint64_t)v17, (uint64_t)&v16[8]);
  v19[3] = *(_OWORD *)v16;
  void v19[4] = *(_OWORD *)&v16[16];
  uint64_t v20 = *(void *)&v16[32];
  v19[0] = v14;
  v19[1] = v15[0];
  void v19[2] = v15[1];
  uint64_t v10 = sub_1B689B45C(v19, a4, 0, 0, a2);
  uint64_t v12 = v11;
  sub_1B666BD18((uint64_t)v19);
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v10;
  a6[1] = v12;
  return result;
}

uint64_t sub_1B68A0F68@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  __int16 v9 = *a1;
  uint64_t v18 = a5;
  v17[0] = v9;
  sub_1B629C37C(a3 + 16, (uint64_t)v22);
  sub_1B6A3D574(v21);
  memset(&v16[8], 0, 32);
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v21, (uint64_t)v15);
  sub_1B68A86AC((uint64_t)v17, (uint64_t)&v16[8]);
  v19[3] = *(_OWORD *)v16;
  void v19[4] = *(_OWORD *)&v16[16];
  uint64_t v20 = *(void *)&v16[32];
  v19[0] = v14;
  v19[1] = v15[0];
  void v19[2] = v15[1];
  uint64_t v10 = sub_1B689B45C(v19, a4, 0, 0, a2);
  uint64_t v12 = v11;
  sub_1B666BD18((uint64_t)v19);
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v10;
  a6[1] = v12;
  return result;
}

uint64_t sub_1B68A1070@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  int v9 = *a1;
  uint64_t v18 = a5;
  v17[0] = v9;
  sub_1B629C37C(a3 + 16, (uint64_t)v22);
  sub_1B6A3D574(v21);
  memset(&v16[8], 0, 32);
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v21, (uint64_t)v15);
  sub_1B68A86AC((uint64_t)v17, (uint64_t)&v16[8]);
  v19[3] = *(_OWORD *)v16;
  void v19[4] = *(_OWORD *)&v16[16];
  uint64_t v20 = *(void *)&v16[32];
  v19[0] = v14;
  v19[1] = v15[0];
  void v19[2] = v15[1];
  uint64_t v10 = sub_1B689B45C(v19, a4, 0, 0, a2);
  uint64_t v12 = v11;
  sub_1B666BD18((uint64_t)v19);
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v10;
  a6[1] = v12;
  return result;
}

uint64_t sub_1B68A1178@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v9 = *a1;
  void v17[3] = a5;
  v17[0] = v9;
  sub_1B629C37C(a3 + 16, (uint64_t)v21);
  sub_1B6A3D574(v20);
  memset(&v16[8], 0, 32);
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v20, (uint64_t)v15);
  sub_1B68A86AC((uint64_t)v17, (uint64_t)&v16[8]);
  void v18[3] = *(_OWORD *)v16;
  v18[4] = *(_OWORD *)&v16[16];
  uint64_t v19 = *(void *)&v16[32];
  v18[0] = v14;
  v18[1] = v15[0];
  long long v18[2] = v15[1];
  uint64_t v10 = sub_1B689B45C(v18, a4, 0, 0, a2);
  uint64_t v12 = v11;
  sub_1B666BD18((uint64_t)v18);
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v10;
  a6[1] = v12;
  return result;
}

uint64_t sub_1B68A1280@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  int v8 = *a1;
  uint64_t v17 = MEMORY[0x1E4FBB470];
  v16[0] = v8;
  sub_1B629C37C(a3 + 16, (uint64_t)v21);
  sub_1B6A3D574(v20);
  memset(&v15[8], 0, 32);
  *(void *)&long long v13 = 0;
  *((void *)&v13 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v20, (uint64_t)v14);
  sub_1B68A86AC((uint64_t)v16, (uint64_t)&v15[8]);
  void v18[3] = *(_OWORD *)v15;
  v18[4] = *(_OWORD *)&v15[16];
  uint64_t v19 = *(void *)&v15[32];
  v18[0] = v13;
  v18[1] = v14[0];
  long long v18[2] = v14[1];
  uint64_t v9 = sub_1B689B45C(v18, a4, 0, 0, a2);
  uint64_t v11 = v10;
  sub_1B666BD18((uint64_t)v18);
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v9;
  a5[1] = v11;
  return result;
}

uint64_t sub_1B68A1390@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  void v18[3] = v10;
  v18[0] = v9;
  sub_1B629C37C(a3 + 16, (uint64_t)v22);
  sub_1B6A3D574(v21);
  memset(&v17[8], 0, 32);
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v21, (uint64_t)v16);
  sub_1B68A86AC((uint64_t)v18, (uint64_t)&v17[8]);
  v19[3] = *(_OWORD *)v17;
  void v19[4] = *(_OWORD *)&v17[16];
  uint64_t v20 = *(void *)&v17[32];
  v19[0] = v15;
  v19[1] = v16[0];
  void v19[2] = v16[1];
  uint64_t v11 = sub_1B689B45C(v19, a4, 0, 0, a2);
  uint64_t v13 = v12;
  sub_1B666BD18((uint64_t)v19);
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v11;
  a5[1] = v13;
  return result;
}

uint64_t sub_1B68A14E4@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X5>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t)@<X6>, uint64_t *a7@<X8>)
{
  long long v16 = *a1;
  sub_1B63959C0(0, a5, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a6);
  v20[3] = v11;
  v20[0] = swift_allocObject();
  *(_OWORD *)(v20[0] + 16) = v16;
  sub_1B629C37C(a3 + 16, (uint64_t)v24);
  sub_1B6A3D574(v23);
  memset(&v19[8], 0, 32);
  *(void *)&long long v17 = 0;
  *((void *)&v17 + 1) = 0xE000000000000000;
  sub_1B629C37C((uint64_t)v23, (uint64_t)v18);
  sub_1B68A86AC((uint64_t)v20, (uint64_t)&v19[8]);
  v21[3] = *(_OWORD *)v19;
  void v21[4] = *(_OWORD *)&v19[16];
  uint64_t v22 = *(void *)&v19[32];
  v21[0] = v17;
  v21[1] = v18[0];
  v21[2] = v18[1];
  uint64_t v12 = sub_1B689B45C(v21, a4, 0, 0, a2);
  uint64_t v14 = v13;
  sub_1B666BD18((uint64_t)v21);
  uint64_t result = swift_bridgeObjectRelease();
  *a7 = v12;
  a7[1] = v14;
  return result;
}

unint64_t sub_1B68A163C(uint64_t a1)
{
  sub_1B629C37C(a1, (uint64_t)v9);
  unint64_t result = 1819242306;
  switch(v10)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x38746E4955;
      break;
    case 2:
      unint64_t result = 0x3631746E4955;
      break;
    case 3:
      unint64_t result = 0x3233746E4955;
      break;
    case 4:
      unint64_t result = 0x3436746E4955;
      break;
    case 5:
      unint64_t result = 947154505;
      break;
    case 6:
      unint64_t result = 0x3631746E49;
      break;
    case 7:
      unint64_t result = 0x3233746E49;
      break;
    case 8:
      unint64_t result = 0x3436746E49;
      break;
    case 9:
    case 41:
      unint64_t result = 7630409;
      break;
    case 10:
      unint64_t result = 0x6E69755F646D6973;
      break;
    case 11:
      unint64_t result = 0x6E69755F646D6973;
      break;
    case 12:
      unint64_t result = 0x6E69755F646D6973;
      break;
    case 13:
      unint64_t result = 0x74616F6C46;
      break;
    case 14:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 15:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 16:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 17:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 18:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 19:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 20:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 21:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 22:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 23:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 24:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 25:
      unint64_t result = 0x6F6C665F646D6973;
      break;
    case 26:
      unint64_t result = 0x656C62756F44;
      break;
    case 27:
      unint64_t result = 0x3855726F6C6F43;
      break;
    case 28:
    case 29:
    case 31:
    case 32:
    case 33:
    case 37:
    case 38:
      unint64_t result = 0xD000000000000010;
      break;
    case 34:
    case 35:
      unint64_t result = 0x676E69727453;
      break;
    case 36:
      unint64_t result = 0x6175715F646D6973;
      break;
    case 39:
      unint64_t result = 0x6E493C65676E6152;
      break;
    case 40:
      unint64_t result = 0x6C463C65676E6152;
      break;
    case 43:
      unint64_t result = 0x5D6C6F6F425BLL;
      break;
    case 44:
      unint64_t result = 0x5D38746E49555BLL;
      break;
    case 45:
      unint64_t result = 0x5D3631746E49555BLL;
      break;
    case 46:
      unint64_t result = 0x5D3233746E49555BLL;
      break;
    case 47:
      unint64_t result = 0x5D3436746E49555BLL;
      break;
    case 48:
      unint64_t result = 0x5D38746E495BLL;
      break;
    case 49:
      unint64_t result = 0x5D3631746E495BLL;
      break;
    case 50:
      unint64_t result = 0x5D3233746E495BLL;
      break;
    case 51:
      unint64_t result = 0x5D3436746E495BLL;
      break;
    case 52:
      unint64_t result = 0x5D746E495BLL;
      break;
    case 53:
      unint64_t result = 0x5D74616F6C465BLL;
      break;
    case 54:
    case 55:
    case 56:
      unint64_t result = 0x6C665F646D69735BLL;
      break;
    case 57:
    case 58:
      unint64_t result = 0x5D676E697274535BLL;
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      uint64_t v7 = 0;
      unint64_t v8 = 0xE000000000000000;
      sub_1B6E31948();
      sub_1B629C37C(a1, (uint64_t)v6);
      sub_1B6E32B18();
      uint64_t v3 = v7;
      uint64_t v4 = v8;
      int v5 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v6[0] = 0;
      swift_retain();
      sub_1B6B33E34(v5, v6, v3, v4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t result = 0xD000000000000013;
      break;
  }
  return result;
}

uint64_t sub_1B68A1DAC(uint64_t a1)
{
  sub_1B629C37C(a1, (uint64_t)v12);
  uint64_t v2 = 1819242338;
  switch(v13)
  {
    case 0:
      return v2;
    case 1:
      return 0x745F38746E6975;
    case 2:
      return 0x745F3631746E6975;
    case 3:
      return 0x745F3233746E6975;
    case 4:
      return 0x745F3436746E6975;
    case 5:
      return 0x745F38746E69;
    case 6:
      return 0x745F3631746E69;
    case 7:
      return 0x745F3233746E69;
    case 8:
    case 9:
      return 0x745F3436746E69;
    case 10:
      return 0x32746E6975;
    case 11:
      return 0x33746E6975;
    case 12:
      return 0x34746E6975;
    case 13:
    case 26:
      return 0x74616F6C66;
    case 14:
      return 0x3274616F6C66;
    case 15:
      return 0x3374616F6C66;
    case 16:
    case 36:
      return 0x3474616F6C66;
    case 17:
      return 0x32783274616F6C66;
    case 18:
      return 0x33783274616F6C66;
    case 19:
      return 0x34783274616F6C66;
    case 20:
      return 0x32783374616F6C66;
    case 21:
      return 0x33783374616F6C66;
    case 22:
      return 0x34783374616F6C66;
    case 23:
      return 0x32783474616F6C66;
    case 24:
      return 0x33783474616F6C66;
    case 25:
      return 0x34783474616F6C66;
    case 29:
    case 31:
    case 38:
      return 0x706D61735F786676;
    case 32:
    case 33:
      return 0x706D61735F786676;
    case 39:
      return 0x5F746E695F786676;
    case 40:
      return 0x616F6C665F786676;
    case 41:
      return 0x745F657A6973;
    case 43:
      return 0x2A6C6F6F62;
    case 44:
      return 0x2A745F38746E6975;
    case 45:
      uint64_t v6 = 0x3631746E6975;
      return v6 & 0xFFFFFFFFFFFFLL | 0x745F000000000000;
    case 46:
      uint64_t v6 = 0x3233746E6975;
      return v6 & 0xFFFFFFFFFFFFLL | 0x745F000000000000;
    case 47:
      uint64_t v6 = 0x3436746E6975;
      return v6 & 0xFFFFFFFFFFFFLL | 0x745F000000000000;
    case 48:
      uint64_t v7 = 0x745F38746E69;
      goto LABEL_50;
    case 49:
      return 0x2A745F3631746E69;
    case 50:
      return 0x2A745F3233746E69;
    case 51:
    case 52:
      return 0x2A745F3436746E69;
    case 53:
      return 0x2A74616F6C66;
    case 54:
      uint64_t v7 = 0x3274616F6C66;
      goto LABEL_50;
    case 55:
      uint64_t v7 = 0x3374616F6C66;
      goto LABEL_50;
    case 56:
      uint64_t v7 = 0x3474616F6C66;
LABEL_50:
      uint64_t v2 = v7 & 0xFFFFFFFFFFFFLL | 0x2A000000000000;
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v2 = 0xD000000000000013;
      v9[0] = 0;
      v9[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      uint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_1B6E31948();
      sub_1B629C37C(a1, (uint64_t)v9);
      sub_1B6E32B18();
      uint64_t v3 = v10;
      uint64_t v4 = v11;
      int v5 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v9[0] = 0;
      swift_retain();
      sub_1B6B33E34(v5, v9, v3, v4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      break;
  }
  return v2;
}

uint64_t sub_1B68A2434(uint64_t a1)
{
  sub_1B629C37C(a1, (uint64_t)v11);
  uint64_t result = 1819242338;
  switch(v12)
  {
    case 0:
      return result;
    case 1:
      return 0x745F38746E6975;
    case 2:
      return 0x745F3631746E6975;
    case 3:
      return 0x745F3233746E6975;
    case 4:
      return 0x745F3436746E6975;
    case 5:
      return 0x745F38746E69;
    case 6:
      return 0x745F3631746E69;
    case 7:
      return 0x745F3233746E69;
    case 8:
    case 9:
      return 0x745F3436746E69;
    case 10:
      return 0x6E69755F646D6973;
    case 11:
      return 0x6E69755F646D6973;
    case 12:
      return 0x6E69755F646D6973;
    case 13:
      return 0x74616F6C66;
    case 14:
      return 0x6F6C665F646D6973;
    case 15:
      return 0x6F6C665F646D6973;
    case 16:
      return 0x6F6C665F646D6973;
    case 17:
      return 0x6F6C665F646D6973;
    case 18:
      return 0x6F6C665F646D6973;
    case 19:
      return 0x6F6C665F646D6973;
    case 20:
      return 0x6F6C665F646D6973;
    case 21:
      return 0x6F6C665F646D6973;
    case 22:
      return 0x6F6C665F646D6973;
    case 23:
      return 0x6F6C665F646D6973;
    case 24:
      return 0x6F6C665F646D6973;
    case 25:
      return 0x6F6C665F646D6973;
    case 26:
      return 0x656C62756F64;
    case 28:
    case 29:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 37:
    case 38:
      uint64_t v3 = 1684631414;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x2A00000000;
    case 36:
      return 0x6175715F646D6973;
    case 39:
      return 0x5F746E695F786676;
    case 40:
      return 0x616F6C665F786676;
    case 41:
      return 0x745F657A6973;
    case 43:
      uint64_t v3 = 1819242338;
      return v3 & 0xFFFF0000FFFFFFFFLL | 0x2A00000000;
    case 44:
      return 0x2A745F38746E6975;
    case 45:
      uint64_t v7 = 0x3631746E6975;
      goto LABEL_46;
    case 46:
      uint64_t v7 = 0x3233746E6975;
      goto LABEL_46;
    case 47:
      uint64_t v7 = 0x3436746E6975;
LABEL_46:
      uint64_t result = v7 & 0xFFFFFFFFFFFFLL | 0x745F000000000000;
      break;
    case 48:
      uint64_t result = 0x2A745F38746E69;
      break;
    case 49:
      uint64_t result = 0x2A745F3631746E69;
      break;
    case 50:
      uint64_t result = 0x2A745F3233746E69;
      break;
    case 51:
    case 52:
      uint64_t result = 0x2A745F3436746E69;
      break;
    case 53:
      uint64_t result = 0x2A74616F6C66;
      break;
    case 54:
      uint64_t result = 0x6F6C665F646D6973;
      break;
    case 55:
      uint64_t result = 0x6F6C665F646D6973;
      break;
    case 56:
      uint64_t result = 0x6F6C665F646D6973;
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v8[0] = 0;
      v8[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      sub_1B6E31948();
      sub_1B629C37C(a1, (uint64_t)v8);
      sub_1B6E32B18();
      uint64_t v4 = v9;
      uint64_t v5 = v10;
      int v6 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v8[0] = 0;
      swift_retain();
      sub_1B6B33E34(v6, v8, v4, v5);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = 0x5F4E574F4E4B4E55;
      break;
  }
  return result;
}

uint64_t sub_1B68A2B8C(uint64_t a1)
{
  return sub_1B68A2BD4(a1, &qword_1E9DCC500, &qword_1E9DD1BC8);
}

uint64_t sub_1B68A2BB0(uint64_t a1)
{
  return sub_1B68A2BD4(a1, qword_1E9DCC508, &qword_1E9DD1BD0);
}

uint64_t sub_1B68A2BD4(uint64_t a1, void *a2, uint64_t *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v4 = *a3;
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    int v6 = v28;
    sub_1B629C37C(v4 + 32, (uint64_t)v28);
    swift_bridgeObjectRetain_n();
    sub_1B68A8EE0(v28, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    uint64_t v7 = sub_1B6A3D8B8();
    uint64_t v9 = v8;
    if (v7 == sub_1B6A3D8B8() && v9 == v10) {
      goto LABEL_6;
    }
    char v12 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B68A8EE0(v28, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    if (v12) {
      goto LABEL_9;
    }
    if (v5 != 1)
    {
      int v6 = v27;
      sub_1B629C37C(v4 + 72, (uint64_t)v27);
      sub_1B68A8EE0(v27, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      uint64_t v14 = sub_1B6A3D8B8();
      uint64_t v16 = v15;
      if (v14 == sub_1B6A3D8B8() && v16 == v17)
      {
LABEL_6:
        swift_bridgeObjectRelease_n();
        sub_1B68A8EE0(v6, (void (*)(void, void, void, void, void))sub_1B629DCAC);
LABEL_9:
        uint64_t v11 = 1;
LABEL_10:
        swift_bridgeObjectRelease_n();
        return v11;
      }
      char v18 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B68A8EE0(v27, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      if (v18) {
        goto LABEL_9;
      }
      uint64_t v19 = v5 - 2;
      if (v5 != 2)
      {
        uint64_t v20 = v4 + 112;
        while (1)
        {
          int v6 = v26;
          sub_1B629C37C(v20, (uint64_t)v26);
          sub_1B68A8EE0(v26, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          uint64_t v21 = sub_1B6A3D8B8();
          uint64_t v23 = v22;
          if (v21 == sub_1B6A3D8B8() && v23 == v24) {
            goto LABEL_6;
          }
          char v25 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B68A8EE0(v26, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          if (v25) {
            goto LABEL_9;
          }
          uint64_t v11 = 0;
          v20 += 40;
          if (!--v19) {
            goto LABEL_10;
          }
        }
      }
    }
    uint64_t v11 = 0;
    goto LABEL_10;
  }
  return 0;
}

uint64_t sub_1B68A2EB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1B629C37C(a3, (uint64_t)v12);
  if (a4)
  {
    if (a4 != 1)
    {
      uint64_t v11 = 8287;
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B68952E0(a3, 2u);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      return v11;
    }
    BOOL v6 = v13 > 0x26 || ((1 << v13) & 0x43A0000000) == 0;
    uint64_t v7 = 0x20646165726874;
    if (v6) {
      uint64_t v7 = 0;
    }
    uint64_t v11 = v7;
    uint64_t v8 = a3;
    unsigned __int8 v9 = 1;
  }
  else
  {
    uint64_t v11 = 0x2074736E6F63;
    uint64_t v8 = a3;
    unsigned __int8 v9 = 0;
  }
  sub_1B68952E0(v8, v9);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  return v11;
}

uint64_t sub_1B68A3000(uint64_t a1)
{
  return sub_1B68A2BD4(a1, &qword_1E9DCC4F8, &qword_1E9E493F8);
}

uint64_t sub_1B68A3024(uint64_t a1, uint64_t a2)
{
  sub_1B62B31E8(a1 + 56, (uint64_t)&v67);
  if (v69)
  {
    sub_1B62B57A8(&v67, v75);
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v5 = *(void *)(a1 + 24);
    uint64_t v4 = (void *)(a1 + 16);
    switch(v5)
    {
      case 0:
        *(void *)&long long v76 = 0;
        *((void *)&v76 + 1) = 0xE000000000000000;
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        swift_dynamicCast();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_107;
      case 1:
      case 5:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        swift_dynamicCast();
        LOBYTE(v73) = v76;
        goto LABEL_18;
      case 2:
      case 6:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        swift_dynamicCast();
        LOWORD(v73) = v76;
        goto LABEL_18;
      case 3:
      case 7:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        swift_dynamicCast();
        LODWORD(v73) = v76;
        goto LABEL_18;
      case 4:
      case 8:
      case 9:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        swift_dynamicCast();
        *(void *)&long long v73 = v76;
LABEL_18:
        uint64_t v12 = sub_1B6E33098();
        goto LABEL_157;
      case 10:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B63959C0(0, &qword_1EB980EA0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC280]);
        swift_dynamicCast();
        uint64_t v64 = v76;
        *(void *)&long long v73 = 0;
        *((void *)&v73 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v39 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v45 = v71;
            uint64_t v46 = v72;
            int v47 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v47, &v71, v45, v46);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = v64;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = HIDWORD(v64);
        goto LABEL_135;
      case 11:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B63959C0(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
        swift_dynamicCast();
        long long v65 = v76;
        *(void *)&long long v73 = 0;
        *((void *)&v73 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v40 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v48 = v71;
            uint64_t v49 = v72;
            int v50 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v50, &v71, v48, v49);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = v65;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = DWORD1(v65);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = DWORD2(v65);
        goto LABEL_135;
      case 12:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B63959C0(0, &qword_1EB980F08, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2F8]);
        swift_dynamicCast();
        long long v66 = v76;
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v73 = v67;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v41 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v51 = v71;
            uint64_t v52 = v72;
            int v53 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v53, &v71, v51, v52);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = v66;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = DWORD1(v66);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = DWORD2(v66);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        LODWORD(v71) = HIDWORD(v66);
LABEL_135:
        sub_1B6E33098();
        sub_1B6E31948();
        goto LABEL_136;
      case 13:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        if (!swift_dynamicCast()) {
          goto LABEL_106;
        }
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31EA8();
        goto LABEL_79;
      case 14:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B63959C0(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
        swift_dynamicCast();
        *(void *)&long long v73 = 0;
        *((void *)&v73 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v42 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v54 = v71;
            uint64_t v55 = v72;
            int v56 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v56, &v71, v54, v55);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_155;
      case 15:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
        swift_dynamicCast();
        *(void *)&long long v73 = 0;
        *((void *)&v73 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v43 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v57 = v71;
            uint64_t v58 = v72;
            int v59 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v59, &v71, v57, v58);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_155;
      case 16:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B63959C0(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v73 = v67;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v44 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v60 = v71;
            uint64_t v61 = v72;
            int v62 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v62, &v71, v60, v61);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
LABEL_155:
        sub_1B6E31EA8();
        goto LABEL_156;
      case 17:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        type metadata accessor for simd_float2x2(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_36;
      case 18:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        type metadata accessor for simd_float2x3(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_36;
      case 19:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        type metadata accessor for simd_float2x4(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
LABEL_36:
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v73 = 0;
        *((void *)&v73 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v13 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v14 = v71;
            uint64_t v15 = v72;
            int v16 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v16, &v71, v14, v15);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        goto LABEL_136;
      case 20:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        type metadata accessor for simd_float3x2(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_50;
      case 21:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v76);
        type metadata accessor for simd_float3x3(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_50;
      case 22:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v76);
        type metadata accessor for simd_float3x4(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
LABEL_50:
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v73 = 0;
        *((void *)&v73 + 1) = 0xE000000000000000;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v17 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v18 = v71;
            uint64_t v19 = v72;
            int v20 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v20, &v71, v18, v19);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        goto LABEL_136;
      case 23:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        type metadata accessor for simd_float4x2(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_64;
      case 24:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v76);
        type metadata accessor for simd_float4x3(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        goto LABEL_64;
      case 25:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v76);
        type metadata accessor for simd_float4x4(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
LABEL_64:
        sub_1B6E31EA8();
        sub_1B6E31948();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        long long v73 = v67;
        sub_1B629C37C((uint64_t)v4, (uint64_t)&v76);
        sub_1B629C37C((uint64_t)&v76, (uint64_t)&v67);
        if (*((void *)&v67 + 1) >= 0x3BuLL)
        {
          if (*(void *)(v70 + 16) && (sub_1B69FA7C0(1u), (v21 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            unint64_t v72 = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v71 = 0xD00000000000001BLL;
            unint64_t v72 = 0x80000001B6F31700;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v23 = v71;
            uint64_t v22 = v72;
            int v24 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v71 = 0;
            swift_retain();
            sub_1B6B33E34(v24, &v71, v23, v22);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1B68A1DAC((uint64_t)&v76);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
LABEL_136:
        swift_bridgeObjectRelease();
LABEL_156:
        sub_1B6E31948();
        uint64_t v12 = v73;
        goto LABEL_157;
      case 26:
LABEL_106:
        *(void *)&long long v76 = 0;
        *((void *)&v76 + 1) = 0xE000000000000000;
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        swift_dynamicCast();
        sub_1B6E31EA8();
LABEL_107:
        uint64_t v12 = v76;
        goto LABEL_157;
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 37:
      case 38:
      case 41:
      case 42:
      case 57:
      case 58:
        if (*(unsigned char *)(a2 + 64) == 1)
        {
          uint64_t v7 = v4[2];
          uint64_t v8 = v4[3];
          uint64_t v9 = v4[4];
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          *(void *)&long long v67 = 0;
          *((void *)&v67 + 1) = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          long long v76 = v67;
          sub_1B6E31948();
          *(void *)&long long v67 = v6;
          *((void *)&v67 + 1) = v5;
          uint64_t v68 = v7;
          uint64_t v69 = v8;
          *(void *)&long long v70 = v9;
          sub_1B6E32B18();
          long long v10 = v76;
          int v11 = sub_1B6E32158();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          *(void *)&long long v67 = 0;
          swift_retain();
          sub_1B6B33E34(v11, (uint64_t *)&v67, v10, *((uint64_t *)&v10 + 1));
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v75);
        return 0x3E524F5252453CLL;
      case 36:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        type metadata accessor for simd_quatf(0);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        goto LABEL_78;
      case 39:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
        swift_dynamicCast();
        long long v25 = v76;
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v67 = 0xD000000000000011;
        *((void *)&v67 + 1) = 0x80000001B6F3B520;
        *(void *)&long long v76 = v25;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        *(void *)&long long v76 = *((void *)&v25 + 1);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_78;
      case 40:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
        swift_dynamicCast();
        *(void *)&long long v67 = 0;
        *((void *)&v67 + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31EA8();
        sub_1B6E31948();
        sub_1B6E31EA8();
LABEL_78:
        sub_1B6E31948();
LABEL_79:
        uint64_t v12 = v67;
        goto LABEL_157;
      case 43:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1E9DD1C08;
        uint64_t v27 = MEMORY[0x1E4FBB390];
        goto LABEL_91;
      case 44:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1EB980370;
        uint64_t v27 = MEMORY[0x1E4FBC358];
        goto LABEL_91;
      case 45:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1EB980388;
        uint64_t v27 = MEMORY[0x1E4FBC450];
        goto LABEL_91;
      case 46:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1E9DD1C00;
        uint64_t v27 = MEMORY[0x1E4FBC4C0];
        goto LABEL_91;
      case 47:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1E9DD1BF8;
        uint64_t v27 = MEMORY[0x1E4FBC538];
        goto LABEL_91;
      case 48:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1E9DD1BF0;
        uint64_t v27 = MEMORY[0x1E4FBC098];
        goto LABEL_91;
      case 49:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1E9DD1BE8;
        uint64_t v27 = MEMORY[0x1E4FBC0F8];
        goto LABEL_91;
      case 50:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1E9DD1BE0;
        uint64_t v27 = MEMORY[0x1E4FBC150];
        goto LABEL_91;
      case 51:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1E9DD1BD8;
        uint64_t v27 = MEMORY[0x1E4FBC1C8];
        goto LABEL_91;
      case 52:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = &qword_1EB980330;
        uint64_t v27 = MEMORY[0x1E4FBB550];
        goto LABEL_91;
      case 53:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v26 = (unint64_t *)&qword_1EB980320;
        uint64_t v27 = MEMORY[0x1E4FBB470];
LABEL_91:
        sub_1B6385FA0(0, v26, v27, MEMORY[0x1E4FBB320]);
        swift_dynamicCast();
        uint64_t v28 = MEMORY[0x1BA9B38A0](v74, v27);
        uint64_t v30 = v29;
        goto LABEL_96;
      case 54:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v31 = &qword_1E9DD0638;
        uint64_t v32 = &qword_1EB980E90;
        uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
        goto LABEL_95;
      case 55:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v31 = &qword_1E9DD0628;
        uint64_t v32 = (unint64_t *)&qword_1EB980EB0;
        uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
        goto LABEL_95;
      case 56:
        sub_1B62CAAD8((uint64_t)v75, (uint64_t)&v67);
        uint64_t v31 = &qword_1EB980360;
        uint64_t v32 = (unint64_t *)&qword_1EB980EF0;
        uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
LABEL_95:
        uint64_t v34 = v33;
        sub_1B68A835C(0, (unint64_t *)v31, v32, v33);
        swift_dynamicCast();
        uint64_t v35 = v74;
        sub_1B63959C0(0, v32, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], v34);
        uint64_t v28 = MEMORY[0x1BA9B38A0](v35, v36);
        uint64_t v30 = v37;
LABEL_96:
        swift_bridgeObjectRelease();
        *(void *)&long long v76 = v28;
        *((void *)&v76 + 1) = v30;
        *(void *)&long long v73 = 91;
        *((void *)&v73 + 1) = 0xE100000000000000;
        uint64_t v71 = 123;
        unint64_t v72 = 0xE100000000000000;
        sub_1B633AF88();
        *(void *)&long long v76 = sub_1B6E32618();
        *((void *)&v76 + 1) = v38;
        *(void *)&long long v73 = 93;
        *((void *)&v73 + 1) = 0xE100000000000000;
        uint64_t v71 = 125;
        unint64_t v72 = 0xE100000000000000;
        uint64_t v12 = sub_1B6E32618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_157:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v75);
        break;
      default:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v75);
        uint64_t v12 = 0xD00000000000001FLL;
        break;
    }
  }
  else
  {
    sub_1B62B32CC((uint64_t)&v67);
    return 0x3E524F5252453CLL;
  }
  return v12;
}

uint64_t sub_1B68A6BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, char a11)
{
  if (!a11)
  {
    unint64_t v33 = 0xE200000000000000;
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B633AF88();
    sub_1B6E32618();
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v26 = 544501353;
    unint64_t v27 = 0xE400000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t v32 = a9;
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v28 = 544501353;
    unint64_t v29 = 0xE400000000000000;
    if (a8)
    {
      sub_1B6A3D574(&v30);
      sub_1B6A3C6F4(&v30, 1, (uint64_t)&v26);
      sub_1B68A8EE0(&v30, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      uint64_t v17 = sub_1B689B45C(&v26, a10, 0, 0, 0);
      uint64_t v19 = v18;
      sub_1B666BD18((uint64_t)&v26);
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_1B6640EBC(v17, v19, a9);
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
      sub_1B6E328C8();
      unint64_t v22 = v26;
      unint64_t v23 = v27;
      sub_1B6E31948();
      sub_1B6A3D574(&v32);
      sub_1B629C37C((uint64_t)&v32, (uint64_t)&v26);
      sub_1B6E32B18();
      sub_1B68A8EE0(&v32, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      uint64_t v26 = v20;
      sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1B6646D3C();
      sub_1B6E31638();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
      sub_1B6E328C8();
      uint64_t v24 = v26;
      unint64_t v25 = v27;
      goto LABEL_7;
    }
LABEL_8:
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000015;
    unint64_t v23 = 0x80000001B6F3B300;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    unint64_t v22 = 2099465;
    unint64_t v23 = 0xE300000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    return v28;
  }
  if (a11 == 1)
  {
    unint64_t v33 = 0xE200000000000000;
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B633AF88();
    sub_1B6E32618();
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v26 = 544501353;
    unint64_t v27 = 0xE400000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t v32 = a9;
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v28 = 544501353;
    unint64_t v29 = 0xE400000000000000;
    if (a8)
    {
      sub_1B6A3D574(&v30);
      sub_1B6A3C6F4(&v30, 1, (uint64_t)&v26);
      sub_1B68A8EE0(&v30, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      uint64_t v13 = sub_1B68A3024((uint64_t)&v26, a10);
      uint64_t v15 = v14;
      sub_1B666BD18((uint64_t)&v26);
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_1B6640EBC(v13, v15, a9);
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
      sub_1B6E328C8();
      unint64_t v22 = v26;
      unint64_t v23 = v27;
      sub_1B6E31948();
      sub_1B6A3D574(&v32);
      sub_1B629C37C((uint64_t)&v32, (uint64_t)&v26);
      sub_1B6E32B18();
      sub_1B68A8EE0(&v32, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      uint64_t v26 = v16;
      sub_1B6385FA0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1B6646D3C();
      sub_1B6E31638();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
      sub_1B6E328C8();
      uint64_t v24 = v26;
      unint64_t v25 = v27;
LABEL_7:
      sub_1B6E31948();
      sub_1B6A3D574(&v26);
      sub_1B629C37C((uint64_t)&v26, (uint64_t)&v22);
      sub_1B6E32B18();
      sub_1B68A8EE0(&v26, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  if (a8)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v32 = 544499052;
    unint64_t v33 = 0xE400000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6A3D574(&v26);
    sub_1B68952E0((uint64_t)&v26, 2u);
    sub_1B68A8EE0(&v26, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    return v32;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    return a4;
  }
}

uint64_t sub_1B68A7674(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, char a9, unsigned __int8 a10)
{
  sub_1B629C37C((uint64_t)a4, (uint64_t)v49);
  if (a9)
  {
    uint64_t v16 = sub_1B689554C((uint64_t)a4, a5, a6, 0, a10);
    unint64_t v18 = v17;
    int v19 = a10;
    if (a10)
    {
LABEL_3:
      if (v19 == 1)
      {
        uint64_t v50 = v16;
        unint64_t v51 = v18;
        sub_1B6E31948();
        sub_1B6E31948();
        return v50;
      }
      sub_1B629C37C(a1, (uint64_t)&v50);
      if (v51 == 37)
      {
        uint64_t v33 = HIBYTE(a8) & 0xF;
        if ((a8 & 0x2000000000000000) == 0) {
          uint64_t v33 = a7 & 0xFFFFFFFFFFFFLL;
        }
        if (v33)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          unint64_t v41 = 0;
          unint64_t v42 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          uint64_t v47 = 0;
          unint64_t v48 = 0xE000000000000000;
          sub_1B6E31948();
          sub_1B629C37C(a1, (uint64_t)&v41);
          sub_1B6E32B18();
          sub_1B6E31948();
          sub_1B6E31948();
          uint64_t v34 = v47;
          uint64_t v35 = v48;
          int v36 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          unint64_t v41 = 0;
          swift_retain();
          sub_1B6B33E34(v36, (uint64_t *)&v41, v34, v35);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        unint64_t v41 = 0;
        unint64_t v42 = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        unint64_t v31 = 0xD000000000000016;
        uint64_t v32 = "vfx_script_curve_copy(";
        goto LABEL_40;
      }
      if (v51 == 28)
      {
        uint64_t v27 = HIBYTE(a8) & 0xF;
        if ((a8 & 0x2000000000000000) == 0) {
          uint64_t v27 = a7 & 0xFFFFFFFFFFFFLL;
        }
        if (v27)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          unint64_t v41 = 0;
          unint64_t v42 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          uint64_t v47 = 0;
          unint64_t v48 = 0xE000000000000000;
          sub_1B6E31948();
          sub_1B629C37C(a1, (uint64_t)&v41);
          sub_1B6E32B18();
          sub_1B6E31948();
          sub_1B6E31948();
          uint64_t v28 = v47;
          uint64_t v29 = v48;
          int v30 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          unint64_t v41 = 0;
          swift_retain();
          sub_1B6B33E34(v30, (uint64_t *)&v41, v28, v29);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        unint64_t v41 = 0;
        unint64_t v42 = 0xE000000000000000;
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        unint64_t v31 = 0xD00000000000001BLL;
        uint64_t v32 = "vfx_script_color_ramp_copy(";
LABEL_40:
        unint64_t v41 = v31;
        unint64_t v42 = (unint64_t)(v32 - 32) | 0x8000000000000000;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        goto LABEL_51;
      }
LABEL_29:
      unint64_t v41 = v16;
      unint64_t v42 = v18;
      sub_1B6E31948();
LABEL_51:
      sub_1B6E31948();
      return v41;
    }
  }
  else
  {
    sub_1B629C9E8(v49[0], v49[1]);
    swift_bridgeObjectRetain();
    sub_1B68A8EE0(a4, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    uint64_t v16 = a5;
    unint64_t v18 = a6;
    int v19 = a10;
    if (a10) {
      goto LABEL_3;
    }
  }
  sub_1B629C37C(a1, (uint64_t)&v50);
  if (v51 - 34 >= 2)
  {
    if (v51 == 37)
    {
      uint64_t v37 = HIBYTE(a8) & 0xF;
      if ((a8 & 0x2000000000000000) == 0) {
        uint64_t v37 = a7 & 0xFFFFFFFFFFFFLL;
      }
      if (v37)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        unint64_t v41 = 0;
        unint64_t v42 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        uint64_t v47 = 0;
        unint64_t v48 = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B629C37C(a1, (uint64_t)&v41);
        sub_1B6E32B18();
        sub_1B6E31948();
        sub_1B6E31948();
        uint64_t v38 = v47;
        uint64_t v39 = v48;
        int v40 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        unint64_t v41 = 0;
        swift_retain();
        sub_1B6B33E34(v40, (uint64_t *)&v41, v38, v39);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      unint64_t v41 = 0;
      unint64_t v42 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v25 = 0xD000000000000016;
      uint64_t v26 = "vfx_script_curve_copy(";
    }
    else
    {
      if (v51 != 28) {
        goto LABEL_29;
      }
      uint64_t v21 = HIBYTE(a8) & 0xF;
      if ((a8 & 0x2000000000000000) == 0) {
        uint64_t v21 = a7 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        unint64_t v41 = 0;
        unint64_t v42 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        uint64_t v47 = 0;
        unint64_t v48 = 0xE000000000000000;
        sub_1B6E31948();
        sub_1B629C37C(a1, (uint64_t)&v41);
        sub_1B6E32B18();
        sub_1B6E31948();
        sub_1B6E31948();
        uint64_t v22 = v47;
        uint64_t v23 = v48;
        int v24 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        unint64_t v41 = 0;
        swift_retain();
        sub_1B6B33E34(v24, (uint64_t *)&v41, v22, v23);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      unint64_t v41 = 0;
      unint64_t v42 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v25 = 0xD00000000000001BLL;
      uint64_t v26 = "vfx_script_color_ramp_copy(";
    }
    unint64_t v41 = v25;
    unint64_t v42 = (unint64_t)(v26 - 32) | 0x8000000000000000;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    goto LABEL_51;
  }
  unint64_t v41 = v16;
  unint64_t v42 = v18;
  sub_1B6E31948();
  uint64_t v47 = a7;
  unint64_t v48 = a8;
  uint64_t v45 = 1953853220;
  unint64_t v46 = 0xE400000000000000;
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  sub_1B633AF88();
  sub_1B6E32618();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1B68A7FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 == 2)
  {
    if (a6)
    {
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6A3D574(&v16);
      sub_1B68952E0((uint64_t)&v16, 2u);
      sub_1B68A8EE0(&v16, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      return 544499052;
    }
    uint64_t v16 = a4;
    unint64_t v17 = a5;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v16 = 544501353;
    unint64_t v17 = 0xE400000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    if (a6)
    {
      sub_1B68961CC(a3, a4, a5, a7, 0, 0, 0, a8, a9);
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  sub_1B6E31948();
  return v16;
}

void sub_1B68A835C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B63959C0(255, a3, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a4);
    unint64_t v5 = sub_1B6E31D18();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B68A83D0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B63959C0(255, a2, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B68A8434@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A14E4(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B68A8474@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A14E4(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B68A84B4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A1390(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1B68A84D8@<X0>(int *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A1280(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1B68A84FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A1178(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBB550], a2);
}

uint64_t sub_1B68A8528@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A1178(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC1C8], a2);
}

uint64_t sub_1B68A8554@<X0>(int *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A1070(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC150], a2);
}

uint64_t sub_1B68A8580@<X0>(__int16 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A0F68(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC0F8], a2);
}

uint64_t sub_1B68A85AC@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A0E60(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC098], a2);
}

uint64_t sub_1B68A85D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A1178(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC538], a2);
}

uint64_t sub_1B68A8604@<X0>(int *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A1070(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC4C0], a2);
}

uint64_t sub_1B68A8630@<X0>(__int16 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A0F68(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC450], a2);
}

uint64_t sub_1B68A865C@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A0E60(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), MEMORY[0x1E4FBC358], a2);
}

uint64_t sub_1B68A8688@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68A0D50(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1B68A86AC(uint64_t a1, uint64_t a2)
{
  sub_1B6385FA0(0, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B68A8738()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

unint64_t sub_1B68A8748(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, unsigned __int8 a8)
{
  sub_1B629C37C((uint64_t)a4, (uint64_t)v22);
  if (a7)
  {
    uint64_t v14 = sub_1B689554C((uint64_t)a4, a5, a6, 0, a8);
    uint64_t v16 = v15;
    int v17 = a8;
    if (a8) {
      goto LABEL_3;
    }
LABEL_7:
    if (a7) {
      goto LABEL_8;
    }
    sub_1B629C37C(a1, (uint64_t)&v23);
    if ((unint64_t)(v24 - 34) < 2)
    {
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000017;
    }
    else if (v24 == 37)
    {
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000016;
    }
    else
    {
      if (v24 != 28)
      {
        unint64_t v21 = v14;
        sub_1B6E31948();
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD00000000000001BLL;
    }
    unint64_t v21 = v20;
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
LABEL_24:
    sub_1B6E31948();
    goto LABEL_25;
  }
  sub_1B629C9E8(v22[0], v22[1]);
  swift_bridgeObjectRetain();
  sub_1B68A8EE0(a4, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  uint64_t v14 = a5;
  uint64_t v16 = a6;
  int v17 = a8;
  if (!a8) {
    goto LABEL_7;
  }
LABEL_3:
  if (v17 == 1)
  {
LABEL_8:
    uint64_t v23 = v14;
    uint64_t v24 = v16;
    sub_1B6E31948();
    sub_1B6E31948();
    goto LABEL_9;
  }
  if (a7)
  {
    uint64_t v23 = v14;
    uint64_t v24 = v16;
    sub_1B6E31948();
LABEL_9:
    sub_1B6E31948();
    return v23;
  }
  sub_1B629C37C(a1, (uint64_t)&v23);
  if (v24 == 37)
  {
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD000000000000016;
  }
  else
  {
    if (v24 != 28)
    {
      unint64_t v21 = v14;
      sub_1B6E31948();
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD00000000000001BLL;
  }
  unint64_t v21 = v19;
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
LABEL_25:
  sub_1B6E31948();
  return v21;
}

uint64_t sub_1B68A8B00(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    if (sub_1B6895D40(a3, 0)) {
      unint64_t v6 = 0xE000000000000000;
    }
    else {
      unint64_t v6 = 0xE100000000000000;
    }
    if ((v6 & 0x100000000000000) != 0) {
      sub_1B6E31948();
    }
    else {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = 0x2074736E6F63;
    if (sub_1B6A3D8B8() == 0x6D6152726F6C6F43 && v10 == 0xE900000000000070) {
      goto LABEL_29;
    }
    char v11 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      if (sub_1B6A3D8B8() == 0x466576727543 && v12 == 0xE600000000000000) {
        goto LABEL_29;
      }
      char v13 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        if (sub_1B6A3D8B8() == 0x676E69727453 && v14 == 0xE600000000000000)
        {
LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
        char v15 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          if (sub_1B6A3D8B8() != 5001813 || v16 != 0xE300000000000000)
          {
            char v17 = sub_1B6E334B8();
            swift_bridgeObjectRelease();
            if ((v17 & 1) == 0) {
              uint64_t v9 = 0;
            }
            goto LABEL_32;
          }
          goto LABEL_29;
        }
      }
    }
LABEL_32:
    uint64_t v19 = v9;
    uint64_t v7 = a3;
    unsigned __int8 v8 = 0;
LABEL_33:
    sub_1B68952E0(v7, v8);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    return v19;
  }
  if (a4 == 1)
  {
    if (sub_1B6895D40(a3, 1)) {
      unint64_t v5 = 0xE000000000000000;
    }
    else {
      unint64_t v5 = 0xE100000000000000;
    }
    if ((v5 & 0x100000000000000) != 0) {
      sub_1B6E31948();
    }
    else {
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = 0x20646165726874;
    uint64_t v7 = a3;
    unsigned __int8 v8 = 1;
    goto LABEL_33;
  }
  sub_1B6895D40(a3, 2);
  uint64_t v19 = 8287;
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B68952E0(a3, 2u);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1B68A8EE0(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

ValueMetadata *type metadata accessor for ParticleQuadRenderer()
{
  return &type metadata for ParticleQuadRenderer;
}

void sub_1B68A8F2C(void *a1@<X8>)
{
  *a1 = &unk_1F0F81B58;
}

uint64_t sub_1B68A8F3C()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B68A8F8C(uint64_t result)
{
  *(void *)(v1 + 28) = result;
  return result;
}

uint64_t sub_1B68A8F94(uint64_t result)
{
  *(void *)(v1 + 36) = result;
  return result;
}

uint64_t sub_1B68A8F9C(uint64_t result)
{
  *(unsigned char *)(v1 + 44) = result;
  return result;
}

uint64_t sub_1B68A8FA4(uint64_t result)
{
  *(unsigned char *)(v1 + 45) = result;
  return result;
}

uint64_t sub_1B68A8FAC(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

double (*sub_1B68A8FBC())(void)
{
  return nullsub_1;
}

uint64_t sub_1B68A8FDC(uint64_t result)
{
  *(_DWORD *)(v1 + 64) = result;
  return result;
}

uint64_t sub_1B68A8FE4(uint64_t result)
{
  *(unsigned char *)(v1 + 68) = result;
  return result;
}

double (*sub_1B68A8FEC())(void)
{
  return nullsub_1;
}

uint64_t sub_1B68A900C(uint64_t result)
{
  *(unsigned char *)(v1 + 69) = result;
  return result;
}

void sub_1B68A9014(float a1)
{
  *(float *)(v1 + 72) = a1;
}

uint64_t sub_1B68A901C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v5 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(a2 + 8);
  v5(v2 + 28, 0, ObjectType, a2);
  v5(v2 + 36, 0, ObjectType, a2);
  v5(v2 + 120, 0, ObjectType, a2);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v5)(v2 + 128, 0, ObjectType, a2);
}

double sub_1B68A90D4@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1;
  *(unsigned char *)(a1 + 4) = 1;
  *(_DWORD *)(a1 + 8) = -1082130432;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)&_Q0 = 0xFFFFFFFFLL;
  *((void *)&_Q0 + 1) = 0xFFFFFFFFLL;
  *(_OWORD *)(a1 + 28) = _Q0;
  *(_WORD *)(a1 + 44) = 256;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(a1 + 48) = _Q0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 256;
  *(_WORD *)(a1 + 68) = 256;
  *(_DWORD *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 76) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_1B6E4F320;
  *(unsigned char *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 100) = 0;
  *(_WORD *)(a1 + 104) = 256;
  *(_DWORD *)(a1 + 108) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 116) = 1065353216;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)(a1 + 120) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 135) = 0;
  *(void *)(a1 + 128) = 0xFFFFFFFFLL;
  return result;
}

uint64_t sub_1B68A9168(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62A7E20(0, (unint64_t *)&unk_1E9DD01B0, (uint64_t (*)(void))sub_1B62A8444, (uint64_t)&type metadata for ParticleDefaultRendererableCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t result = sub_1B67C627C(a1, (uint64_t)&v14 - v9);
  if (!v2)
  {
    *(void *)&long long v14 = *(void *)(v3 + 48);
    char v15 = 11;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
    sub_1B62A7E20(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    sub_1B62AF038((unint64_t *)&qword_1EB97D1B8, &qword_1EB980E90, v12);
    sub_1B6E32FA8();
    *(void *)&long long v14 = *(void *)(v3 + 56);
    char v15 = 12;
    sub_1B6E32FA8();
    LOBYTE(v14) = *(unsigned char *)(v3 + 76);
    char v15 = 13;
    sub_1B66C5BC8();
    sub_1B6E32FA8();
    long long v14 = *(_OWORD *)(v3 + 80);
    char v15 = 14;
    char v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
    sub_1B62A7E20(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    sub_1B62AF038((unint64_t *)&qword_1EB97D1D8, (unint64_t *)&qword_1EB980EB0, v13);
    sub_1B6E32FA8();
    LOBYTE(v14) = *(unsigned char *)(v3 + 96);
    char v15 = 15;
    sub_1B66C5D9C();
    sub_1B6E32FA8();
    LOBYTE(v14) = 16;
    sub_1B6E32F78();
    LOBYTE(v14) = 25;
    sub_1B6E32F58();
    LOBYTE(v14) = 17;
    sub_1B6E32F78();
    LOBYTE(v14) = 18;
    sub_1B6E32F78();
    LOBYTE(v14) = 19;
    sub_1B6E32F58();
    *(void *)&long long v14 = *(void *)(v3 + 120);
    char v15 = 20;
    sub_1B6657A10();
    sub_1B6E32FA8();
    *(void *)&long long v14 = *(void *)(v3 + 128);
    char v15 = 21;
    sub_1B6E32FA8();
    LOBYTE(v14) = 22;
    sub_1B6E32F58();
    LOBYTE(v14) = 23;
    sub_1B6E32F58();
    LOBYTE(v14) = *(unsigned char *)(v3 + 138);
    char v15 = 24;
    sub_1B66C522C();
    sub_1B6E32FA8();
    LOBYTE(v14) = 26;
    sub_1B6E32F58();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_1B68A96A4(void *a1)
{
  return sub_1B68A9168(a1);
}

unsigned char *storeEnumTagSinglePayload for ParticleQuadRenderer.Shape(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68A97C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleQuadRenderer.Shape()
{
  return &type metadata for ParticleQuadRenderer.Shape;
}

unint64_t sub_1B68A9800()
{
  unint64_t result = qword_1E9DD1C10;
  if (!qword_1E9DD1C10)
  {
    sub_1B62D83C0(255, &qword_1E9DD1C18, (uint64_t)&type metadata for ParticleQuadRenderer.Shape, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1C10);
  }
  return result;
}

unint64_t sub_1B68A9880()
{
  unint64_t result = qword_1E9DD1C20;
  if (!qword_1E9DD1C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1C20);
  }
  return result;
}

ValueMetadata *type metadata accessor for FieldRecord()
{
  return &type metadata for FieldRecord;
}

unint64_t sub_1B68A98E4(uint64_t a1)
{
  unint64_t result = sub_1B68A990C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B68A990C()
{
  unint64_t result = qword_1E9DD1C28;
  if (!qword_1E9DD1C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1C28);
  }
  return result;
}

ValueMetadata *type metadata accessor for _FieldRecord()
{
  return &type metadata for _FieldRecord;
}

uint64_t sub_1B68A9970(void *a1, float a2, float a3)
{
  sub_1B68AA57C(0, &qword_1E9DD1C40, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  char v11 = (char *)&v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68AA528();
  sub_1B6E33A88();
  float v14 = a2;
  float v15 = a3;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B68A9AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65676E6172 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B68A9B8C(uint64_t a1)
{
  unint64_t v2 = sub_1B68AA528();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68A9BC8(uint64_t a1)
{
  unint64_t v2 = sub_1B68AA528();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B68A9C04(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B68AA234(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B68A9C30(void *a1)
{
  return sub_1B68A9970(a1, *v1, v1[1]);
}

uint64_t sub_1B68A9C4C()
{
  return type metadata accessor for ParticleMassInit.System();
}

double sub_1B68A9C6C()
{
  sub_1B62D2B64();
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for Mass;
  *(void *)(v0 + 40) = &off_1F0F9E398;
  return result;
}

double sub_1B68A9CB4@<D0>(double *a1@<X8>)
{
  __asm { FMOV            V0.2S, #1.0 }
  *a1 = result;
  return result;
}

uint64_t *sub_1B68A9CC0(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v7 = *(_OWORD *)(a5 + 104);
  v54[0] = *(_OWORD *)(a5 + 88);
  v54[1] = v7;
  uint64_t v55 = *(void *)(a5 + 120);
  sub_1B62C9DA8(a4, (uint64_t)v54, 0x200000000, v44);
  double result = (uint64_t *)sub_1B62CA210((uint64_t)v44, (uint64_t)v45, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v45[0])
  {
    if (v51 >= 1)
    {
      uint64_t v39 = v48;
      if (v48)
      {
        uint64_t v9 = 0;
        uint64_t v10 = v50[4];
        int v11 = *(unsigned __int8 *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v12.i32[1] = DWORD1(v45[0]);
        v52[0] = v45[0];
        v52[1] = v45[1];
        uint64_t v53 = v46;
        uint64_t v35 = (uint64_t)(v50 + 6);
        uint64_t v36 = v47;
        uint64_t v57 = v50;
        uint64_t v34 = v50 + 8;
        *(float *)v12.i32 = 1.0 / a1;
        if (a1 <= 0.001) {
          *(float *)v12.i32 = 1000.0;
        }
        __int32 v43 = v12.i32[0];
        int32x4_t v33 = vdupq_lane_s32(v12, 0);
        int v37 = v11;
        uint64_t v38 = v10;
        do
        {
          uint64_t v13 = (unsigned int *)(v36 + 48 * v9);
          uint64_t v15 = *v13;
          uint64_t v14 = v13[1];
          uint64_t v41 = *((void *)v13 + 3);
          unint64_t v42 = (uint64_t *)*((void *)v13 + 2);
          uint64_t v16 = *((void *)v13 + 5);
          uint64_t v40 = *((void *)v13 + 4);
          if (v11)
          {
            char v17 = *(os_unfair_lock_s **)(v16 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v17);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v10);
          sub_1B62CA210(v35, (uint64_t)v56, &qword_1EB97DE20);
          unint64_t v18 = v57;
          uint64_t v19 = v57[4];
          uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v18[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
          void v18[7] = v20;
          v34[1] = 0;
          _OWORD v34[2] = 0;
          *uint64_t v34 = 0;
          swift_release();
          uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for Mass, (uint64_t)&off_1F0F9E398, v42, v41, v40, (uint64_t)v18);
          uint64_t v22 = v21;
          if (a1 != a2)
          {
            if (v15 != v14)
            {
              do
              {
                do
                  float v25 = (float)((float)(a2 - a1) * (float)((float)(sub_1B6D27950() & 0xFFFFFF) * 0.000000059605)) + a1;
                while (v25 == a2);
                float v26 = 1.0 / v25;
                BOOL v27 = v25 > 0.001;
                float v28 = 1000.0;
                if (v27) {
                  float v28 = v26;
                }
                *(float *)(v22 + 4 * v15++) = v28;
              }
              while (v15 != v14);
            }
            goto LABEL_28;
          }
          if (v15 != v14)
          {
            uint64_t v23 = v14 - v15;
            if ((unint64_t)(v14 - v15) < 8)
            {
              uint64_t v24 = v15;
LABEL_26:
              uint64_t v31 = v14 - v24;
              uint64_t v32 = (__int32 *)(v21 + 4 * v24);
              do
              {
                *v32++ = v43;
                --v31;
              }
              while (v31);
              goto LABEL_28;
            }
            uint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + v15;
            uint64_t v29 = (int32x4_t *)(v21 + 4 * v15 + 16);
            unint64_t v30 = v23 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v29[-1] = v33;
              int32x4_t *v29 = v33;
              v29 += 2;
              v30 -= 8;
            }
            while (v30);
            if (v23 != (v23 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_26;
            }
          }
LABEL_28:
          sub_1B6345178(v57, (unsigned __int16 **)v52, (uint64_t)v56);
          sub_1B634507C((char *)v16);
          uint64_t v10 = v38;
          ecs_stack_allocator_pop_snapshot(v38);
          int v11 = v37;
          if (v37)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
          }
          swift_release();
          ++v9;
        }
        while (v9 != v39);
      }
    }
    return sub_1B632F170(v44);
  }
  return result;
}

uint64_t sub_1B68AA078(float a1, float a2)
{
  float v4 = a2 - a1;
  do
    uint64_t result = sub_1B6D27950();
  while ((float)((float)(v4 * (float)((float)(result & 0xFFFFFF) * 0.000000059605)) + a1) == a2);
  return result;
}

uint64_t type metadata accessor for ParticleMassInit.System()
{
  return self;
}

uint64_t sub_1B68AA100(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  swift_retain_n();
  uint64_t v4 = sub_1B695E21C(v3);
  char v6 = v5;
  swift_release();
  if (v6) {
    float v7 = 1.0;
  }
  else {
    float v7 = *(float *)&v4;
  }
  if (v6) {
    float v8 = 1.0;
  }
  else {
    float v8 = *((float *)&v4 + 1);
  }
  uint64_t v9 = a1[4];
  swift_retain();
  sub_1B62F6B80((uint64_t)a1);
  sub_1B6BFF5FC(v9, v2, v2, (uint64_t)a1, v7, v8);
  sub_1B62F648C((uint64_t)a1);
  return swift_release_n();
}

const char *sub_1B68AA1C4()
{
  return "ParticleMassInit.CPU";
}

uint64_t type metadata accessor for ParticleMassInit.GPUSystem()
{
  return self;
}

const char *sub_1B68AA200()
{
  return "ParticleMassInit.GPU";
}

uint64_t sub_1B68AA214()
{
  return type metadata accessor for ParticleMassInit.GPUSystem();
}

float sub_1B68AA234(void *a1)
{
  sub_1B68AA57C(0, &qword_1E9DD1C30, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68AA528();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62AA858();
    sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    float v2 = *(float *)&v11[2];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B68AA404(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  swift_retain();
  uint64_t v5 = sub_1B695E21C(v3);
  char v7 = v6;
  swift_release();
  float v9 = *((float *)&v5 + 1);
  float v8 = *(float *)&v5;
  if (v7)
  {
    float v8 = 1.0;
    float v9 = 1.0;
  }
  *(float *)unint64_t v18 = v8;
  *(float *)&v18[1] = v9;
  uint64_t v10 = *a1;
  if (*a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_mass_uniforms(0);
    sub_1B6B594A8((uint64_t)v18, 1, ObjectType, v12, v13, v14, v15, v16);
  }
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v2, v10 == 0, 0, (uint64_t)a1, 0xD000000000000011, 0x80000001B6F3B870, 0);
  sub_1B6786A7C((uint64_t)a1);
  return swift_release();
}

ValueMetadata *type metadata accessor for ParticleMassInit()
{
  return &type metadata for ParticleMassInit;
}

unint64_t sub_1B68AA528()
{
  unint64_t result = qword_1E9DD1C38;
  if (!qword_1E9DD1C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1C38);
  }
  return result;
}

void sub_1B68AA57C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B68AA528();
    unint64_t v7 = a3(a1, &type metadata for ParticleMassInit.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleMassInit.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B68AA67CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleMassInit.CodingKeys()
{
  return &type metadata for ParticleMassInit.CodingKeys;
}

unint64_t sub_1B68AA6B8()
{
  unint64_t result = qword_1E9DD1C48;
  if (!qword_1E9DD1C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1C48);
  }
  return result;
}

unint64_t sub_1B68AA710()
{
  unint64_t result = qword_1E9DD1C50;
  if (!qword_1E9DD1C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1C50);
  }
  return result;
}

unint64_t sub_1B68AA768()
{
  unint64_t result = qword_1E9DD1C58;
  if (!qword_1E9DD1C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1C58);
  }
  return result;
}

uint64_t sub_1B68AA7BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v50 = a2;
  uint64_t v6 = sub_1B6E31118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62CAC44(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v51 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  char v17 = (char *)v43 - v16;
  int64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (!v18) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v49 = v10;
  v43[0] = a3;
  v43[1] = v3;
  uint64_t v58 = MEMORY[0x1E4FBC860];
  int64_t v20 = v18;
  sub_1B6C3C530(0, v18, 0);
  int64_t v21 = v20;
  uint64_t result = v58;
  uint64_t v47 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v7 + 24);
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  uint64_t v23 = (uint64_t *)(a1 + 40);
  long long v56 = xmmword_1B6E8B000;
  uint64_t v24 = (uint64_t)v51;
  uint64_t v44 = v17;
  while (1)
  {
    uint64_t v26 = *(v23 - 1);
    uint64_t v25 = *v23;
    if (v26) {
      break;
    }
    uint64_t v32 = 0;
LABEL_15:
    uint64_t v58 = result;
    unint64_t v41 = *(void *)(result + 16);
    unint64_t v40 = *(void *)(result + 24);
    if (v41 >= v40 >> 1)
    {
      int64_t v55 = v21;
      uint64_t v52 = v25;
      sub_1B6C3C530(v40 > 1, v41 + 1, 1);
      uint64_t v25 = v52;
      int64_t v21 = v55;
      uint64_t result = v58;
    }
    v23 += 2;
    *(void *)(result + 16) = v41 + 1;
    uint64_t v42 = result + 16 * v41;
    *(void *)(v42 + 32) = v32;
    *(void *)(v42 + 40) = v25;
    if (!--v21) {
      return result;
    }
  }
  uint64_t v52 = *v23;
  uint64_t v54 = result;
  int64_t v55 = v21;
  uint64_t v27 = *v50;
  if (!*(void *)(*v50 + 16)
    || (unint64_t v28 = sub_1B62C1A30(v26), (v29 & 1) == 0)
    || (*(unsigned char *)(*(void *)(v27 + 56) + v28) & 1) != 0)
  {
    type metadata accessor for _PlaceholderNode(0);
    unint64_t v30 = (void *)swift_allocObject();
    v57[3] = type metadata accessor for AuthoringNode();
    _OWORD v57[4] = &off_1EB94EE38;
    v57[0] = v26;
    sub_1B62C1550((uint64_t)v57, (uint64_t)v30 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
    v30[3] = 0;
    v30[4] = 0;
    void v30[2] = v19;
    uint64_t v31 = (char *)v30 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    swift_retain_n();
    uint64_t v53 = v31;
    sub_1B6E31108();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v57);
    (*v48)(v17, 1, 1, v6);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v56;
    *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) = v30;
    *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) = v19;
    sub_1B678FED0((uint64_t)v17, v24);
    LODWORD(v31) = (*v47)(v24, 1, v6);
    swift_retain();
    if (v31 == 1)
    {
      int32x4_t v33 = v49;
      sub_1B6E31108();
      sub_1B678FF34((uint64_t)v17);
      sub_1B678FF34(v24);
      uint64_t v34 = *v46;
    }
    else
    {
      sub_1B678FF34((uint64_t)v17);
      uint64_t v34 = *v46;
      int32x4_t v33 = v49;
      (*v46)(v49, v24, v6);
    }
    uint64_t v35 = v6;
    uint64_t v36 = v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    v34((char *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID), (uint64_t)v33, v35);
    uint64_t v37 = *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
    unint64_t v38 = *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
    *(_OWORD *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v56;
    sub_1B665D488(v37, v38);
    (*v45)(v53, v36, v35);
    swift_release();
    _s11DeletedNodeCMa_0(0);
    uint64_t v39 = swift_dynamicCastClass();
    swift_release_n();
    uint64_t v6 = v35;
    if (v39)
    {
      swift_release();
      uint64_t v32 = 0;
      uint64_t v25 = 0;
      uint64_t v24 = (uint64_t)v51;
    }
    else
    {
      uint64_t v24 = (uint64_t)v51;
      uint64_t v25 = v52;
    }
    char v17 = v44;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t result = v54;
    int64_t v21 = v55;
    goto LABEL_15;
  }
  uint64_t result = sub_1B68C9868(v26, *(void *)v43[0]);
  __break(1u);
  return result;
}

uint64_t sub_1B68AACA4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v44 = a3;
  uint64_t v52 = a2;
  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62CAC44(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v51 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)v43 - v15;
  int64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v46 = v9;
  v43[1] = v3;
  uint64_t v59 = MEMORY[0x1E4FBC860];
  sub_1B6C3C530(0, v17, 0);
  uint64_t result = v59;
  uint64_t v48 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v47 = (void (**)(char *, uint64_t, uint64_t))(v6 + 24);
  uint64_t v19 = (uint64_t *)(a1 + 40);
  long long v56 = xmmword_1B6E8B000;
  uint64_t v20 = (uint64_t)v51;
  uint64_t v50 = v16;
  do
  {
    uint64_t v22 = *(v19 - 1);
    uint64_t v21 = *v19;
    if (v22)
    {
      uint64_t v53 = *v19;
      uint64_t v57 = result;
      uint64_t v23 = *v52;
      if (*(void *)(*v52 + 16)
        && (unint64_t v24 = sub_1B62C1A30(v22), (v25 & 1) != 0)
        && (*(unsigned char *)(*(void *)(v23 + 56) + v24) & 1) == 0)
      {
        uint64_t v40 = *v44;
        if (*(void *)(*v44 + 16) && (unint64_t v41 = sub_1B62C1A30(v22), (v42 & 1) != 0))
        {
          uint64_t v29 = *(void *)(*(void *)(v40 + 56) + 8 * v41);
          swift_retain();
        }
        else
        {
          uint64_t v29 = 0;
        }
        swift_retain_n();
      }
      else
      {
        type metadata accessor for _PlaceholderNode(0);
        uint64_t v26 = (void *)swift_allocObject();
        v58[3] = type metadata accessor for AuthoringNode();
        v58[4] = &off_1EB94EE38;
        v58[0] = v22;
        sub_1B62C1550((uint64_t)v58, (uint64_t)v26 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
        v26[4] = 0;
        uint64_t v27 = MEMORY[0x1E4FBC860];
        v26[2] = MEMORY[0x1E4FBC860];
        void v26[3] = 0;
        unint64_t v28 = (char *)v26 + OBJC_IVAR____TtC3VFX4Node_authoringID;
        swift_retain_n();
        uint64_t v54 = v28;
        sub_1B6E31108();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
        (*v49)(v16, 1, 1, v5);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v56;
        *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) = v26;
        *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) = v27;
        sub_1B678FED0((uint64_t)v16, v20);
        LODWORD(v28) = (*v48)(v20, 1, v5);
        swift_retain();
        uint64_t v55 = v22;
        if (v28 == 1)
        {
          unint64_t v30 = v46;
          sub_1B6E31108();
          sub_1B678FF34((uint64_t)v16);
          sub_1B678FF34(v20);
          uint64_t v31 = *v45;
        }
        else
        {
          sub_1B678FF34((uint64_t)v16);
          unint64_t v30 = v46;
          uint64_t v31 = *v45;
          (*v45)(v46, v20, v5);
        }
        uint64_t v32 = v5;
        uint64_t v33 = v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
        v31((char *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID), (uint64_t)v30, v32);
        uint64_t v34 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
        unint64_t v35 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
        *(_OWORD *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v56;
        sub_1B665D488(v34, v35);
        (*v47)(v54, v33, v32);
        swift_release();
        uint64_t v5 = v32;
        uint64_t v16 = v50;
        uint64_t v20 = (uint64_t)v51;
      }
      _s11DeletedNodeCMa_0(0);
      uint64_t v36 = swift_dynamicCastClass();
      swift_release_n();
      if (v36)
      {
        swift_release();
        uint64_t v29 = 0;
        uint64_t v21 = 0;
        uint64_t result = v57;
      }
      else
      {
        uint64_t result = v57;
        uint64_t v21 = v53;
      }
    }
    else
    {
      uint64_t v29 = 0;
    }
    uint64_t v59 = result;
    unint64_t v38 = *(void *)(result + 16);
    unint64_t v37 = *(void *)(result + 24);
    if (v38 >= v37 >> 1)
    {
      uint64_t v53 = v21;
      sub_1B6C3C530(v37 > 1, v38 + 1, 1);
      uint64_t v21 = v53;
      uint64_t result = v59;
    }
    v19 += 2;
    *(void *)(result + 16) = v38 + 1;
    uint64_t v39 = result + 16 * v38;
    *(void *)(v39 + 32) = v29;
    *(void *)(v39 + 40) = v21;
    --v17;
  }
  while (v17);
  return result;
}

uint64_t sub_1B68AB1BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v43 = a3;
  uint64_t v51 = a2;
  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62CAC44(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v50 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)v42 - v15;
  int64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v45 = v9;
  v42[1] = v3;
  uint64_t v59 = MEMORY[0x1E4FBC860];
  sub_1B6C3C530(0, v17, 0);
  uint64_t result = v59;
  uint64_t v47 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v6 + 24);
  uint64_t v19 = (uint64_t *)(a1 + 40);
  long long v55 = xmmword_1B6E8B000;
  uint64_t v20 = (uint64_t)v50;
  uint64_t v49 = v16;
  do
  {
    uint64_t v22 = *(v19 - 1);
    uint64_t v21 = *v19;
    if (v22)
    {
      uint64_t v52 = *v19;
      uint64_t v56 = result;
      uint64_t v23 = *v51;
      if (*(void *)(*v51 + 16)
        && (unint64_t v24 = sub_1B62C1A30(v22), (v25 & 1) != 0)
        && (*(unsigned char *)(*(void *)(v23 + 56) + v24) & 1) == 0)
      {
        if (*(void *)(*(void *)v43 + 16) && (sub_1B62C1A30(v22), (v40 & 1) != 0)) {
          uint64_t v41 = swift_retain();
        }
        else {
          uint64_t v41 = 1;
        }
        v58[0] = v41;
        sub_1B68C8EB0(0);
        type metadata accessor for AuthoringNode();
        swift_retain_n();
        swift_dynamicCast();
        uint64_t v29 = v57;
      }
      else
      {
        type metadata accessor for _PlaceholderNode(0);
        uint64_t v26 = (void *)swift_allocObject();
        v58[3] = type metadata accessor for AuthoringNode();
        v58[4] = &off_1EB94EE38;
        v58[0] = v22;
        sub_1B62C1550((uint64_t)v58, (uint64_t)v26 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
        v26[4] = 0;
        uint64_t v27 = MEMORY[0x1E4FBC860];
        v26[2] = MEMORY[0x1E4FBC860];
        void v26[3] = 0;
        unint64_t v28 = (char *)v26 + OBJC_IVAR____TtC3VFX4Node_authoringID;
        swift_retain_n();
        uint64_t v53 = v28;
        sub_1B6E31108();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v58);
        (*v48)(v16, 1, 1, v5);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v55;
        *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) = v26;
        *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) = v27;
        sub_1B678FED0((uint64_t)v16, v20);
        LODWORD(v28) = (*v47)(v20, 1, v5);
        swift_retain();
        uint64_t v54 = v22;
        if (v28 == 1)
        {
          unint64_t v30 = v45;
          sub_1B6E31108();
          sub_1B678FF34((uint64_t)v16);
          sub_1B678FF34(v20);
          uint64_t v31 = *v44;
        }
        else
        {
          sub_1B678FF34((uint64_t)v16);
          unint64_t v30 = v45;
          uint64_t v31 = *v44;
          (*v44)(v45, v20, v5);
        }
        uint64_t v32 = v5;
        uint64_t v33 = v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
        v31((char *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID), (uint64_t)v30, v32);
        uint64_t v34 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
        unint64_t v35 = *(void *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
        *(_OWORD *)(v29 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v55;
        sub_1B665D488(v34, v35);
        (*v46)(v53, v33, v32);
        swift_release();
        uint64_t v5 = v32;
        uint64_t v16 = v49;
        uint64_t v20 = (uint64_t)v50;
      }
      _s11DeletedNodeCMa_0(0);
      uint64_t v36 = swift_dynamicCastClass();
      swift_release_n();
      if (v36)
      {
        swift_release();
        uint64_t v29 = 0;
        uint64_t v21 = 0;
        uint64_t result = v56;
      }
      else
      {
        uint64_t result = v56;
        uint64_t v21 = v52;
      }
    }
    else
    {
      uint64_t v29 = 0;
    }
    uint64_t v59 = result;
    unint64_t v38 = *(void *)(result + 16);
    unint64_t v37 = *(void *)(result + 24);
    if (v38 >= v37 >> 1)
    {
      uint64_t v52 = v21;
      sub_1B6C3C530(v37 > 1, v38 + 1, 1);
      uint64_t v21 = v52;
      uint64_t result = v59;
    }
    v19 += 2;
    *(void *)(result + 16) = v38 + 1;
    uint64_t v39 = result + 16 * v38;
    *(void *)(v39 + 32) = v29;
    *(void *)(v39 + 40) = v21;
    --v17;
  }
  while (v17);
  return result;
}

unint64_t sub_1B68AB708(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v50 = a2;
  uint64_t v6 = sub_1B6E31118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62CAC44(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v51 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  int64_t v17 = (char *)v43 - v16;
  int64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (!v18) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v49 = v10;
  v43[0] = a3;
  v43[1] = v3;
  unint64_t v58 = MEMORY[0x1E4FBC860];
  int64_t v20 = v18;
  sub_1B6C3C530(0, v18, 0);
  int64_t v21 = v20;
  unint64_t result = v58;
  uint64_t v47 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v7 + 24);
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  uint64_t v23 = (uint64_t *)(a1 + 40);
  long long v56 = xmmword_1B6E8B000;
  uint64_t v24 = (uint64_t)v51;
  uint64_t v44 = v17;
  while (1)
  {
    uint64_t v26 = *(v23 - 1);
    uint64_t v25 = *v23;
    if (v26) {
      break;
    }
    uint64_t v32 = 0;
LABEL_15:
    unint64_t v58 = result;
    unint64_t v41 = *(void *)(result + 16);
    unint64_t v40 = *(void *)(result + 24);
    if (v41 >= v40 >> 1)
    {
      int64_t v55 = v21;
      uint64_t v52 = v25;
      sub_1B6C3C530(v40 > 1, v41 + 1, 1);
      uint64_t v25 = v52;
      int64_t v21 = v55;
      unint64_t result = v58;
    }
    v23 += 2;
    *(void *)(result + 16) = v41 + 1;
    unint64_t v42 = result + 16 * v41;
    *(void *)(v42 + 32) = v32;
    *(void *)(v42 + 40) = v25;
    if (!--v21) {
      return result;
    }
  }
  uint64_t v52 = *v23;
  unint64_t v54 = result;
  int64_t v55 = v21;
  uint64_t v27 = *v50;
  if (!*(void *)(*v50 + 16)
    || (unint64_t v28 = sub_1B62C1A30(v26), (v29 & 1) == 0)
    || (*(unsigned char *)(*(void *)(v27 + 56) + v28) & 1) != 0)
  {
    type metadata accessor for _PlaceholderNode(0);
    unint64_t v30 = (void *)swift_allocObject();
    v57[3] = type metadata accessor for AuthoringNode();
    _OWORD v57[4] = &off_1EB94EE38;
    v57[0] = v26;
    sub_1B62C1550((uint64_t)v57, (uint64_t)v30 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
    v30[3] = 0;
    v30[4] = 0;
    void v30[2] = v19;
    uint64_t v31 = (char *)v30 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    swift_retain_n();
    uint64_t v53 = v31;
    sub_1B6E31108();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v57);
    (*v48)(v17, 1, 1, v6);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v56;
    *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) = v30;
    *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) = v19;
    sub_1B678FED0((uint64_t)v17, v24);
    LODWORD(v31) = (*v47)(v24, 1, v6);
    swift_retain();
    if (v31 == 1)
    {
      uint64_t v33 = v49;
      sub_1B6E31108();
      sub_1B678FF34((uint64_t)v17);
      sub_1B678FF34(v24);
      uint64_t v34 = *v46;
    }
    else
    {
      sub_1B678FF34((uint64_t)v17);
      uint64_t v34 = *v46;
      uint64_t v33 = v49;
      (*v46)(v49, v24, v6);
    }
    uint64_t v35 = v6;
    uint64_t v36 = v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    v34((char *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID), (uint64_t)v33, v35);
    uint64_t v37 = *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
    unint64_t v38 = *(void *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
    *(_OWORD *)(v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v56;
    sub_1B665D488(v37, v38);
    (*v45)(v53, v36, v35);
    swift_release();
    _s11DeletedNodeCMa_0(0);
    uint64_t v39 = swift_dynamicCastClass();
    swift_release();
    uint64_t v6 = v35;
    if (v39)
    {
      swift_release();
      uint64_t v32 = 0;
      uint64_t v25 = 0;
      uint64_t v24 = (uint64_t)v51;
    }
    else
    {
      uint64_t v24 = (uint64_t)v51;
      uint64_t v25 = v52;
    }
    int64_t v17 = v44;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    unint64_t result = v54;
    int64_t v21 = v55;
    goto LABEL_15;
  }
  unint64_t result = sub_1B62C1A30(v26);
  __break(1u);
  return result;
}

uint64_t sub_1B68ABBEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v27 = a2;
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1B6C3C5C4(0, v2, 0);
    uint64_t v3 = v35;
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      if (v7)
      {
        uint64_t v8 = *(__objc2_class ***)(v7 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw);
        if (*v8 == _TtC3VFX16_PlaceholderNode)
        {
          uint64_t v30 = *v5;
          uint64_t v10 = *(uint64_t *)((char *)v8 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode + 24);
          uint64_t v9 = *(uint64_t *)((char *)v8 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode + 32);
          uint64_t v28 = (uint64_t)v8 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode;
          uint64_t v11 = sub_1B62C14BC((__objc2_class **)((char *)v8 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode), v10);
          uint64_t v31 = &v26;
          uint64_t v12 = *(void *)(v10 - 8);
          double v13 = MEMORY[0x1F4188790](v11, v11);
          uint64_t v15 = (char *)&v26 - v14;
          (*(void (**)(char *, double))(v12 + 16))((char *)&v26 - v14, v13);
          char v29 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
          swift_retain_n();
          swift_retain();
          uint64_t v16 = v29(v10, v9);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
          uint64_t v17 = *v27;
          if (*(void *)(*v27 + 16) && (unint64_t v18 = sub_1B62C1A30(v16), (v19 & 1) != 0))
          {
            uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
            swift_retain();
            swift_release();
            uint64_t v33 = v20;
          }
          else
          {
            sub_1B62C1550(v28, (uint64_t)v32);
            swift_release();
            sub_1B62C55B0(0, (unint64_t *)&qword_1E9DD1128);
            type metadata accessor for AuthoringNode();
            swift_dynamicCast();
          }
          swift_release();
          uint64_t v6 = v30;
          uint64_t v34 = v30;
        }
        else
        {
          uint64_t v33 = *(v5 - 1);
          uint64_t v34 = v6;
          swift_retain_n();
        }
      }
      else
      {
        uint64_t v33 = 0;
        uint64_t v34 = v6;
      }
      uint64_t v21 = v33;
      swift_release();
      uint64_t v35 = v3;
      unint64_t v23 = *(void *)(v3 + 16);
      unint64_t v22 = *(void *)(v3 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1B6C3C5C4(v22 > 1, v23 + 1, 1);
        uint64_t v3 = v35;
      }
      v5 += 2;
      *(void *)(v3 + 16) = v23 + 1;
      uint64_t v24 = v3 + 16 * v23;
      *(void *)(v24 + 32) = v21;
      *(void *)(v24 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1B68ABF00(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1B6C3C614(0, v3, 0);
    uint64_t v6 = v22;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      uint64_t v10 = *a2;
      if (*(void *)(*a2 + 16))
      {
        unint64_t v11 = sub_1B62C1A30(*(v7 - 1));
        if ((v12 & 1) != 0 && (*(unsigned char *)(*(void *)(v10 + 56) + v11) & 1) == 0) {
          break;
        }
      }
      type metadata accessor for _PlaceholderNode(0);
      double v13 = (void *)swift_allocObject();
      v21[3] = type metadata accessor for Node();
      void v21[4] = &off_1EB96D088;
      v21[0] = v8;
      sub_1B62C1550((uint64_t)v21, (uint64_t)v13 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
      v13[3] = 0;
      uint64_t v13[4] = 0;
      uint64_t v14 = v4;
      _DWORD v13[2] = v4;
      swift_retain_n();
      sub_1B6E31108();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v21);
      swift_release();
      uint64_t v22 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1B6C3C614(v15 > 1, v16 + 1, 1);
        uint64_t v6 = v22;
      }
      v7 += 2;
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 16 * v16;
      *(void *)(v17 + 32) = v13;
      *(void *)(v17 + 40) = v9;
      --v3;
      uint64_t v4 = v14;
      if (!v3) {
        return v6;
      }
    }
    uint64_t result = sub_1B68C9868(v8, *a3);
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B68AC0AC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1B6C3C614(0, v3, 0);
    uint64_t v4 = v23;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      uint64_t v10 = *a2;
      if (*(void *)(*a2 + 16)
        && (unint64_t v11 = sub_1B62C1A30(*(v7 - 1)), (v12 & 1) != 0)
        && (*(unsigned char *)(*(void *)(v10 + 56) + v11) & 1) == 0)
      {
        uint64_t v17 = *a3;
        if (*(void *)(*a3 + 16) && (unint64_t v18 = sub_1B62C1A30(v8), (v19 & 1) != 0))
        {
          double v13 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
          swift_retain();
        }
        else
        {
          double v13 = 0;
        }
      }
      else
      {
        type metadata accessor for _PlaceholderNode(0);
        double v13 = (void *)swift_allocObject();
        v22[3] = type metadata accessor for Node();
        uint64_t v22[4] = &off_1EB96D088;
        v22[0] = v8;
        sub_1B62C1550((uint64_t)v22, (uint64_t)v13 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
        uint64_t v13[4] = 0;
        _DWORD v13[2] = MEMORY[0x1E4FBC860];
        v13[3] = 0;
        swift_retain_n();
        sub_1B6E31108();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v22);
        swift_release();
      }
      uint64_t v23 = v4;
      unint64_t v15 = *(void *)(v4 + 16);
      unint64_t v14 = *(void *)(v4 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1B6C3C614(v14 > 1, v15 + 1, 1);
        uint64_t v4 = v23;
      }
      v7 += 2;
      *(void *)(v4 + 16) = v15 + 1;
      uint64_t v16 = v4 + 16 * v15;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1B68AC274(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1B6C3C614(0, v3, 0);
    uint64_t v6 = v24;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      uint64_t v10 = *a2;
      if (*(void *)(*a2 + 16))
      {
        unint64_t v11 = sub_1B62C1A30(*(v7 - 1));
        if ((v12 & 1) != 0 && (*(unsigned char *)(*(void *)(v10 + 56) + v11) & 1) == 0) {
          break;
        }
      }
      type metadata accessor for _PlaceholderNode(0);
      double v13 = (void *)swift_allocObject();
      v23[3] = type metadata accessor for Node();
      v23[4] = &off_1EB96D088;
      v23[0] = v8;
      sub_1B62C1550((uint64_t)v23, (uint64_t)v13 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
      v13[3] = 0;
      uint64_t v13[4] = 0;
      uint64_t v14 = v4;
      _DWORD v13[2] = v4;
      swift_retain_n();
      sub_1B6E31108();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v23);
      swift_release();
      uint64_t v24 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1B6C3C614(v15 > 1, v16 + 1, 1);
        uint64_t v6 = v24;
      }
      v7 += 2;
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 16 * v16;
      *(void *)(v17 + 32) = v13;
      *(void *)(v17 + 40) = v9;
      --v3;
      uint64_t v4 = v14;
      if (!v3) {
        return v6;
      }
    }
    uint64_t v19 = *a3;
    uint64_t v20 = (uint64_t *)(*(void *)(v19 + 56) + 88 * sub_1B62C1A30(v8));
    uint64_t result = sub_1B67FBA04(*v20);
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B68AC450(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1B6C3C614(0, v3, 0);
    uint64_t v6 = v40;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      uint64_t v10 = *a2;
      if (*(void *)(*a2 + 16))
      {
        unint64_t v11 = sub_1B62C1A30(*(v7 - 1));
        if ((v12 & 1) != 0 && (*(unsigned char *)(*(void *)(v10 + 56) + v11) & 1) == 0) {
          break;
        }
      }
      type metadata accessor for _PlaceholderNode(0);
      double v13 = (void *)swift_allocObject();
      *((void *)&v31 + 1) = type metadata accessor for Node();
      *(void *)&long long v32 = &off_1EB96D088;
      *(void *)&long long v30 = v8;
      sub_1B62C1550((uint64_t)&v30, (uint64_t)v13 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
      v13[3] = 0;
      uint64_t v13[4] = 0;
      uint64_t v14 = v4;
      _DWORD v13[2] = v4;
      swift_retain_n();
      sub_1B6E31108();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v30);
      swift_release();
      uint64_t v40 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1B6C3C614(v15 > 1, v16 + 1, 1);
        uint64_t v6 = v40;
      }
      v7 += 2;
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 16 * v16;
      *(void *)(v17 + 32) = v13;
      *(void *)(v17 + 40) = v9;
      --v3;
      uint64_t v4 = v14;
      if (!v3) {
        return v6;
      }
    }
    uint64_t v19 = *a3;
    unint64_t v20 = *(void *)(v19 + 56) + 152 * sub_1B62C1A30(v8);
    long long v21 = *(_OWORD *)(v20 + 16);
    long long v30 = *(_OWORD *)v20;
    long long v31 = v21;
    long long v22 = *(_OWORD *)(v20 + 80);
    long long v24 = *(_OWORD *)(v20 + 32);
    long long v23 = *(_OWORD *)(v20 + 48);
    long long v34 = *(_OWORD *)(v20 + 64);
    long long v35 = v22;
    long long v32 = v24;
    long long v33 = v23;
    long long v25 = *(_OWORD *)(v20 + 96);
    long long v26 = *(_OWORD *)(v20 + 112);
    long long v27 = *(_OWORD *)(v20 + 128);
    char v39 = *(unsigned char *)(v20 + 144);
    long long v37 = v26;
    long long v38 = v27;
    long long v36 = v25;
    uint64_t result = sub_1B62CA090((uint64_t)&v30);
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B68AC640(uint64_t a1, uint64_t *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1B6C3C614(0, v2, 0);
    uint64_t v5 = v20;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = *a2;
      if (*(void *)(*a2 + 16))
      {
        unint64_t v10 = sub_1B62C1A30(*(v6 - 1));
        if ((v11 & 1) != 0 && (*(unsigned char *)(*(void *)(v9 + 56) + v10) & 1) == 0) {
          break;
        }
      }
      type metadata accessor for _PlaceholderNode(0);
      char v12 = (void *)swift_allocObject();
      v19[3] = type metadata accessor for Node();
      void v19[4] = &off_1EB96D088;
      v19[0] = v7;
      sub_1B62C1550((uint64_t)v19, (uint64_t)v12 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
      v12[3] = 0;
      v12[4] = 0;
      uint64_t v13 = v3;
      v12[2] = v3;
      swift_retain_n();
      sub_1B6E31108();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v19);
      swift_release();
      uint64_t v20 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1B6C3C614(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v20;
      }
      v6 += 2;
      *(void *)(v5 + 16) = v15 + 1;
      uint64_t v16 = v5 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v8;
      --v2;
      uint64_t v3 = v13;
      if (!v2) {
        return v5;
      }
    }
    sub_1B62C1A30(v7);
    uint64_t result = swift_bridgeObjectRetain();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

unint64_t sub_1B68AC7FC(uint64_t a1, uint64_t *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1B6C3C614(0, v2, 0);
    uint64_t v5 = v20;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = *a2;
      if (*(void *)(*a2 + 16))
      {
        unint64_t v10 = sub_1B62C1A30(*(v6 - 1));
        if ((v11 & 1) != 0 && (*(unsigned char *)(*(void *)(v9 + 56) + v10) & 1) == 0) {
          break;
        }
      }
      type metadata accessor for _PlaceholderNode(0);
      char v12 = (void *)swift_allocObject();
      v19[3] = type metadata accessor for Node();
      void v19[4] = &off_1EB96D088;
      v19[0] = v7;
      sub_1B62C1550((uint64_t)v19, (uint64_t)v12 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
      v12[3] = 0;
      v12[4] = 0;
      uint64_t v13 = v3;
      v12[2] = v3;
      swift_retain_n();
      sub_1B6E31108();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v19);
      swift_release();
      uint64_t v20 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1B6C3C614(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v20;
      }
      v6 += 2;
      *(void *)(v5 + 16) = v15 + 1;
      uint64_t v16 = v5 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v8;
      --v2;
      uint64_t v3 = v13;
      if (!v2) {
        return v5;
      }
    }
    unint64_t result = sub_1B62C1A30(v7);
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B68AC9A8(uint64_t a1, uint64_t *a2)
{
  long long v27 = a2;
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1B6C3C644(0, v2, 0);
    uint64_t v3 = v34;
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = (__objc2_class **)*(v5 - 1);
      uint64_t v6 = *v5;
      if (v7)
      {
        if (*v7 == _TtC3VFX16_PlaceholderNode)
        {
          uint64_t v29 = *v5;
          uint64_t v8 = *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode + 24);
          uint64_t v9 = *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode + 32);
          uint64_t v28 = (uint64_t)v7 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode;
          unint64_t v10 = sub_1B62C14BC((__objc2_class **)((char *)v7 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode), v8);
          long long v30 = &v26;
          uint64_t v11 = *(void *)(v8 - 8);
          double v12 = MEMORY[0x1F4188790](v10, v10);
          unint64_t v14 = (char *)&v26 - v13;
          (*(void (**)(char *, double))(v11 + 16))((char *)&v26 - v13, v12);
          unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
          swift_retain_n();
          uint64_t v16 = v15(v8, v9);
          (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
          uint64_t v17 = *v27;
          if (*(void *)(*v27 + 16) && (unint64_t v18 = sub_1B62C1A30(v16), (v19 & 1) != 0))
          {
            uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
            swift_retain();
            swift_release();
            uint64_t v32 = v20;
          }
          else
          {
            sub_1B62C1550(v28, (uint64_t)v31);
            swift_release();
            sub_1B62C55B0(0, (unint64_t *)&qword_1E9DD1128);
            type metadata accessor for Node();
            swift_dynamicCast();
          }
          swift_release();
          uint64_t v6 = v29;
          uint64_t v33 = v29;
        }
        else
        {
          uint64_t v32 = *(v5 - 1);
          uint64_t v33 = v6;
          swift_retain_n();
        }
      }
      else
      {
        uint64_t v32 = 0;
        uint64_t v33 = v6;
      }
      uint64_t v21 = v32;
      swift_release();
      uint64_t v34 = v3;
      unint64_t v23 = *(void *)(v3 + 16);
      unint64_t v22 = *(void *)(v3 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1B6C3C644(v22 > 1, v23 + 1, 1);
        uint64_t v3 = v34;
      }
      v5 += 2;
      *(void *)(v3 + 16) = v23 + 1;
      uint64_t v24 = v3 + 16 * v23;
      *(void *)(v24 + 32) = v21;
      *(void *)(v24 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1B68ACC94(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1B6C3C694(0, v1, 0);
    sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      uint64_t v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3C694(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B6C3C694(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B68ACDF0(uint64_t a1)
{
  return sub_1B637EB2C(a1, &qword_1E9DD2038, (unint64_t *)&unk_1E9DD2040);
}

uint64_t sub_1B68ACE0C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B6C3D358(0, v1, 0);
    sub_1B6761DA0();
    sub_1B67FB8C0(0, (unint64_t *)&qword_1EB9801B0);
    uint64_t v4 = a1 + 72;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      uint64_t v2 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D358(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v2 = v12;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B6C3D358(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v12;
      }
      v4 += 48;
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = (_OWORD *)(v2 + 48 * v6);
      _OWORD v7[3] = v10;
      v7[4] = v11;
      _OWORD v7[2] = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B68ACF90(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B6C3D378(0, v1, 0);
    sub_1B62E98B4(0, (unint64_t *)&qword_1EB9803C8);
    sub_1B6645A00();
    uint64_t v4 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      uint64_t v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D378(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v2 = v13;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B6C3D378(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v13;
      }
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 32 * v6;
      *(void *)(v7 + 32) = v9;
      *(unsigned char *)(v7 + 40) = v10;
      *(void *)(v7 + 48) = v11;
      *(void *)(v7 + 56) = v12;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B68AD108(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1B6E32A48();
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = v4 + 1;
        MEMORY[0x1BA9B4580]();
        type metadata accessor for AuthoringNode();
        sub_1B68C8EB0(0);
        swift_retain();
        swift_dynamicCast();
        swift_release();
        sub_1B6E32A08();
        sub_1B6E32A68();
        sub_1B6E32A78();
        sub_1B6E32A28();
        uint64_t v4 = v5;
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v6 = a1 + 32;
      type metadata accessor for AuthoringNode();
      sub_1B68C8EB0(0);
      do
      {
        v6 += 8;
        swift_retain_n();
        swift_dynamicCast();
        swift_release();
        sub_1B6E32A08();
        sub_1B6E32A68();
        sub_1B6E32A78();
        sub_1B6E32A28();
        --v2;
      }
      while (v2);
    }
    return v7;
  }
  return result;
}

uint64_t sub_1B68AD2DC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1B6C3D7AC(0, v1, 0);
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1B66459A4(v4, (uint64_t)v8);
      sub_1B62CB1E8(0, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718]);
      swift_dynamicCast();
      uint64_t v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D7AC(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B6C3D7AC(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1B68D5DA8((uint64_t)v9, v2 + 88 * v6 + 32, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
      v4 += 88;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B68AD438(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1B6C3D848(0, v1, 0);
    uint64_t v4 = a1 + 32;
    sub_1B62CB1E8(0, &qword_1EB97ED60, (uint64_t)&type metadata for ComponentProperty, MEMORY[0x1E4FBB718]);
    do
    {
      swift_retain_n();
      swift_dynamicCast();
      swift_release();
      uint64_t v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D848(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B6C3D848(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      *(void *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B68AD58C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1B6C3D918(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3D918(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B6C3D918(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1B62B57A8(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_1B68AD6B0(uint64_t a1, char a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  *((void *)&v38 + 1) = a7;
  char v13 = a4;
  uint64_t v17 = a9;
  if (!*(void *)(*(void *)a9 + 16)
    || (v19 = a6, unint64_t result = sub_1B62C1A30(a1), a6 = v19, v17 = a9, v11 = v10, v13 = a4, (v21 & 1) == 0))
  {
    *(void *)&long long v38 = a6;
    if (!*(void *)(*a8 + 16) || (unint64_t result = sub_1B62C1A30(a1), (v22 & 1) == 0))
    {
      char v23 = a2 & 1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v41 = *a8;
      *a8 = 0x8000000000000000;
      sub_1B67E3E8C(1, a1, isUniquelyReferenced_nonNull_native);
      *a8 = v41;
      swift_bridgeObjectRelease();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = a1;
      swift_retain();
      if (a2)
      {
        char v35 = v13;
        sub_1B68B1664(1, a3, v13 & 1, a1, v40, a5, v38, *((uint64_t *)&v38 + 1), (uint64_t)a8, v17, a10);
        if (v11) {
          return swift_release();
        }
        sub_1B68B4580(v40, v36, v38, *((uint64_t *)&v38 + 1), 1, a3, v13 & 1, a5, 0);
        uint64_t v37 = 0;
        type metadata accessor for Node();
        type metadata accessor for AuthoringNode();
        if (swift_dynamicCastMetatype())
        {
          uint64_t v27 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
          swift_retain();
          uint64_t v28 = swift_bridgeObjectRetain();
          uint64_t v25 = v17;
          uint64_t v29 = sub_1B68AA7BC(v28, a8, v17);
          swift_bridgeObjectRelease();
          *(void *)(a1 + v27) = v29;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v25 = v17;
        }
        char v13 = v35;
        char v23 = a2 & 1;
      }
      else
      {
        uint64_t v37 = v11;
        uint64_t v25 = v17;
      }
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v38;
      sub_1B68B7684((void (*)(void *))sub_1B68D4F80, v26, v40, v23, a3, v13 & 1, v25, a5, v38, (uint64_t)a8, a10, (uint64_t *)(v36 + 16));
      if (v37)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      sub_1B68BFBEC(a1);
      char v30 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = *a8;
      *a8 = 0x8000000000000000;
      sub_1B67E3E8C(0, a1, v30);
      *a8 = v42;
      swift_bridgeObjectRelease();
      if (a2) {
        return swift_release();
      }
      sub_1B68B1664(a2 & 1, a3, v13 & 1, a1, v40, a5, v38, *((uint64_t *)&v38 + 1), (uint64_t)a8, v25, a10);
      sub_1B68B4580(v40, v36, v38, *((uint64_t *)&v38 + 1), a2 & 1, a3, v13 & 1, a5, 0);
      type metadata accessor for Node();
      type metadata accessor for AuthoringNode();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v31 = *(void *)(v36 + 16);
        uint64_t v32 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
        swift_retain();
        uint64_t v33 = swift_bridgeObjectRetain();
        uint64_t v34 = sub_1B68AA7BC(v33, a8, v25);
        swift_bridgeObjectRelease();
        *(void *)(v31 + v32) = v34;
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B68ADB30(uint64_t a1, char a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v12 = v11;
  uint64_t v13 = v10;
  uint64_t v19 = a9;
  uint64_t v20 = *a9;
  if (*(void *)(*a9 + 16))
  {
    unint64_t v21 = sub_1B62C1A30(a1);
    if (v22)
    {
      uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
      swift_retain();
      return v23;
    }
  }
  if (!*(void *)(*a8 + 16) || (sub_1B62C1A30(a1), (v24 & 1) == 0))
  {
    uint64_t v47 = a7;
    unsigned int v48 = a2 & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, a1, isUniquelyReferenced_nonNull_native);
    *a8 = v53;
    swift_bridgeObjectRelease();
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = a1;
    char v26 = a4;
    unint64_t v27 = a5;
    if (a4)
    {
      uint64_t v28 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 200);
      swift_retain();
      uint64_t v29 = v28(1);
      swift_release();
      char v26 = a4;
      uint64_t v43 = v29;
      *(void *)(v46 + 16) = v29;
    }
    else
    {
      swift_retain();
      uint64_t v43 = a1;
    }
    uint64_t v44 = (uint64_t *)(v46 + 16);
    uint64_t v23 = a2 & 1;
    uint64_t v45 = v13;
    if (a2)
    {
      uint64_t v23 = v26 & 1;
      sub_1B68B1A80(1, a3, v26 & 1, a1, v13, v27, a6, v47, (uint64_t)a8, (uint64_t)a9, a10);
      if (v12) {
        goto LABEL_17;
      }
      sub_1B68B494C(v13, v46, a6, v47, 1, a3, v23, v27, 1);
      uint64_t v12 = 0;
      uint64_t v34 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
      swift_retain();
      uint64_t v35 = swift_bridgeObjectRetain();
      uint64_t v19 = a9;
      uint64_t v36 = sub_1B68AACA4(v35, a8, a9);
      swift_bridgeObjectRelease();
      *(void *)(v43 + v34) = v36;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v23 = v48;
    }
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a6;
    *(void *)(v30 + 24) = v47;
    *((void *)&v42 + 1) = v47;
    *(void *)&long long v42 = a6;
    uint64_t v31 = sub_1B68B7810((void (*)(uint64_t *__return_ptr, void *))sub_1B68D55AC, v30, v45, v23, a3, a4 & 1, (uint64_t)v19, v27, v42, (uint64_t)a8, a10, v44);
    if (v12)
    {
      swift_release();
    }
    else
    {
      uint64_t v23 = v31;
      swift_release();
      uint64_t v32 = swift_retain();
      sub_1B68BFEB8(v32, a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6BA0A84);
      swift_release();
      swift_release();
      swift_retain();
      swift_release();
      uint64_t *v44 = v23;
      char v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = *a8;
      *a8 = 0x8000000000000000;
      sub_1B67E3E8C(0, a1, v33);
      *a8 = v54;
      swift_bridgeObjectRelease();
      if (!v48)
      {
        int v52 = a4 & 1;
        sub_1B68B1A80(v48, a3, v52, a1, v45, v27, a6, v47, (uint64_t)a8, (uint64_t)v19, a10);
        sub_1B68B494C(v45, v46, a6, v47, 0, a3, v52, v27, 1);
        uint64_t v38 = *(void *)(v46 + 16);
        uint64_t v39 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
        swift_retain();
        uint64_t v40 = swift_bridgeObjectRetain();
        uint64_t v41 = sub_1B68AACA4(v40, a8, v19);
        swift_bridgeObjectRelease();
        *(void *)(v38 + v39) = v41;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v23;
      }
    }
LABEL_17:
    swift_release();
    return v23;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

unint64_t sub_1B68AE06C(void *a1, char a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v12 = v10;
  uint64_t v17 = a9;
  if (!*(void *)(*a9 + 16) || (v18 = a4, unint64_t result = sub_1B62C1A30((uint64_t)a1), a4 = v18, v17 = a9, (v20 & 1) == 0))
  {
    char v35 = a4;
    if (*(void *)(*a8 + 16))
    {
      unint64_t result = sub_1B62C1A30((uint64_t)a1);
      if (v21) {
        return result;
      }
      uint64_t v39 = v11;
    }
    else
    {
      uint64_t v39 = v11;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, (uint64_t)a1, isUniquelyReferenced_nonNull_native);
    *a8 = v40;
    swift_bridgeObjectRelease();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = a1;
    swift_retain();
    if (a2)
    {
      sub_1B68B1EB0(1, a3, v35 & 1, a1, v10, a5, a6, a7, (uint64_t)a8, (uint64_t)v17, a10);
      if (v39) {
        return swift_release();
      }
      int v33 = a2 & 1;
      sub_1B68B4D58(v10, v34, a6, a7, 1, a3, v35 & 1, a5, 0, sub_1B68C967C, (void (*)(uint64_t, uint64_t, void, uint64_t, void, unint64_t, uint64_t *))sub_1B68B9930);
      uint64_t v39 = 0;
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        swift_retain();
        uint64_t v27 = swift_bridgeObjectRetain();
        uint64_t v23 = v17;
        uint64_t v28 = sub_1B68ABF00(v27, a8, v17);
        swift_bridgeObjectRelease();
        a1[2] = v28;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = v17;
        type metadata accessor for AuthoringNode();
      }
      uint64_t v24 = a7;
      uint64_t v12 = v10;
    }
    else
    {
      int v33 = 0;
      uint64_t v23 = v17;
      uint64_t v24 = a7;
    }
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a6;
    *(void *)(v25 + 24) = v24;
    *(void *)&long long v32 = a6;
    *((void *)&v32 + 1) = v24;
    sub_1B68B79A4((void (*)(void *))sub_1B68D4F80, v25, v12, v33, a3, v35 & 1, (uint64_t)v23, a5, v32, (uint64_t)a8, a10, (uint64_t *)(v34 + 16));
    if (v39)
    {
      swift_release();
      return swift_release();
    }
    swift_release();
    sub_1B68BFBEC((uint64_t)a1);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v41 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(0, (uint64_t)a1, v26);
    *a8 = v41;
    swift_bridgeObjectRelease();
    if (v33) {
      return swift_release();
    }
    sub_1B68B1EB0(0, a3, v35 & 1, a1, v12, a5, a6, a7, (uint64_t)a8, (uint64_t)v23, a10);
    sub_1B68B4D58(v12, v34, a6, a7, 0, a3, v35 & 1, a5, 0, sub_1B68C967C, (void (*)(uint64_t, uint64_t, void, uint64_t, void, unint64_t, uint64_t *))sub_1B68B9930);
    type metadata accessor for Node();
    if (swift_dynamicCastMetatype())
    {
      uint64_t v29 = *(void *)(v34 + 16);
      swift_retain();
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = sub_1B68ABF00(v30, a8, v23);
      swift_bridgeObjectRelease();
      *(void *)(v29 + 16) = v31;
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      type metadata accessor for AuthoringNode();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B68AE548(void *a1, char a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v18 = a9;
  uint64_t v19 = *(void *)a9;
  if (*(void *)(*(void *)a9 + 16))
  {
    unint64_t v20 = sub_1B62C1A30((uint64_t)a1);
    if (v21)
    {
      a4 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      swift_retain();
      return a4;
    }
  }
  if (!*(void *)(*a8 + 16) || (sub_1B62C1A30((uint64_t)a1), (v22 & 1) == 0))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, (uint64_t)a1, isUniquelyReferenced_nonNull_native);
    *a8 = v45;
    swift_bridgeObjectRelease();
    sub_1B62CAC44(0, &qword_1E9DD2010, (uint64_t (*)(uint64_t))type metadata accessor for GraphCodeGen.CFGNode, MEMORY[0x1E4FBB718]);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = a1;
    swift_retain();
    if (a2)
    {
      char v26 = a4 & 1;
      int v40 = a4 & 1;
      unsigned int v27 = a4;
      a4 = a6;
      sub_1B68B22A4(1, a3, v26, a1, v44, a5, a6, a7, (uint64_t)a8, a9, a10);
      if (v10)
      {
LABEL_14:
        swift_release();
        return a4;
      }
      sub_1B68B4D58(v44, v41, a6, a7, 1, a3, v40, a5, 0, sub_1B68CB138, (void (*)(uint64_t, uint64_t, void, uint64_t, void, unint64_t, uint64_t *))sub_1B68B9B70);
      uint64_t v11 = 0;
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        swift_retain();
        uint64_t v33 = swift_bridgeObjectRetain();
        uint64_t v18 = a9;
        unint64_t v34 = sub_1B68AC7FC(v33, a8);
        swift_bridgeObjectRelease();
        a1[2] = v34;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        type metadata accessor for AuthoringNode();
        uint64_t v18 = a9;
      }
      a4 = v27;
    }
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a6;
    *(void *)(v24 + 24) = a7;
    *((void *)&v38 + 1) = a7;
    *(void *)&long long v38 = a6;
    uint64_t v25 = sub_1B68B7B30((void (*)(uint64_t *__return_ptr, void *))sub_1B68D6DB4, v24, v44, a2 & 1, a3, a4 & 1, v18, a5, v38, (uint64_t)a8, a10, (uint64_t *)(v41 + 16));
    if (v11)
    {
      swift_release();
    }
    else
    {
      char v28 = a4;
      a4 = v25;
      char v39 = v28;
      swift_release();
      uint64_t v29 = swift_retain();
      uint64_t v30 = sub_1B68C03D0(v29, (uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6BA0BA0);
      sub_1B674DC34(v30);
      swift_release();
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = *a8;
      *a8 = 0x8000000000000000;
      sub_1B67E3E8C(0, (uint64_t)a1, v31);
      *a8 = v46;
      swift_bridgeObjectRelease();
      if ((a2 & 1) == 0)
      {
        sub_1B68B22A4(0, a3, v39 & 1, a1, v44, a5, a6, a7, (uint64_t)a8, v18, a10);
        sub_1B68B4D58(v44, v41, a6, a7, 0, a3, v39 & 1, a5, 0, sub_1B68CB138, (void (*)(uint64_t, uint64_t, void, uint64_t, void, unint64_t, uint64_t *))sub_1B68B9B70);
        type metadata accessor for Node();
        if (swift_dynamicCastMetatype())
        {
          uint64_t v35 = *(void *)(v41 + 16);
          swift_retain();
          uint64_t v36 = swift_bridgeObjectRetain();
          unint64_t v37 = sub_1B68AC7FC(v36, a8);
          swift_bridgeObjectRelease();
          *(void *)(v35 + 16) = v37;
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return a4;
        }
        type metadata accessor for AuthoringNode();
      }
    }
    goto LABEL_14;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void *sub_1B68AEAB4@<X0>(uint64_t *__return_ptr a1@<X8>, void *a2@<X0>, char a3@<W1>, unint64_t a4@<X2>, char a5@<W3>, unint64_t a6@<X4>, uint64_t a7@<X5>, uint64_t a8@<X6>, uint64_t *a9@<X7>, uint64_t *a10, uint64_t a11)
{
  uint64_t v12 = v11;
  unint64_t v58 = a4;
  uint64_t v20 = *a10;
  if (*(void *)(*a10 + 16))
  {
    unint64_t v21 = sub_1B62C1A30((uint64_t)a2);
    if (v22)
    {
      uint64_t v23 = (uint64_t *)(*(void *)(v20 + 56) + 88 * v21);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = v23[2];
      uint64_t v27 = v23[3];
      uint64_t v28 = v23[4];
      uint64_t v29 = v23[5];
      uint64_t v30 = v23[6];
      uint64_t v31 = v23[7];
      uint64_t v32 = v23[8];
      uint64_t v33 = v23[9];
      uint64_t v34 = v23[10];
      *a1 = v24;
      a1[1] = v25;
      a1[2] = v26;
      a1[3] = v27;
      a1[4] = v28;
      a1[5] = v29;
      a1[6] = v30;
      a1[7] = v31;
      a1[8] = v32;
      a1[9] = v33;
      a1[10] = v34;
      return (void *)sub_1B67FBA04(v24);
    }
  }
  uint64_t v50 = a1;
  if (!*(void *)(*a9 + 16) || (sub_1B62C1A30((uint64_t)a2), (v36 & 1) == 0))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v55[0] = *a9;
    *a9 = 0x8000000000000000;
    sub_1B67E3E8C(1, (uint64_t)a2, isUniquelyReferenced_nonNull_native);
    *a9 = *(void *)&v55[0];
    swift_bridgeObjectRelease();
    sub_1B62CB1E8(0, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBB718]);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = a2;
    swift_retain();
    if (a3)
    {
      sub_1B68B26AC(1, v58, a5 & 1, a2, v52, a6, a7, a8, (uint64_t)a9, (uint64_t)a10, a11);
      if (v11) {
        return (void *)swift_release();
      }
      sub_1B68B5120(v52, v51, a7, a8, 1, v58, a5 & 1, a6, 0);
      uint64_t v12 = 0;
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        swift_retain();
        uint64_t v44 = swift_bridgeObjectRetain();
        uint64_t v45 = sub_1B68AC274(v44, a9, a10);
        swift_bridgeObjectRelease();
        a2[2] = v45;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        type metadata accessor for AuthoringNode();
      }
    }
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = a7;
    *(void *)(v38 + 24) = a8;
    *((void *)&v49 + 1) = a8;
    *(void *)&long long v49 = a7;
    sub_1B68B7CC4((void (*)(void *))sub_1B68D56C0, v38, v52, a3 & 1, v58, a5 & 1, (uint64_t)a10, a6, v49, (uint64_t)a9, a11, (uint64_t *)(v51 + 16));
    if (v12)
    {
      swift_release();
      return (void *)swift_release();
    }
    swift_release();
    sub_1B68D5DA8((uint64_t)v55, (uint64_t)v57, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom);
    sub_1B6828A8C(v57, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1B67FBA04);
    sub_1B68BFD00(v57, (uint64_t)a2, &v54);
    sub_1B68288E8(v54);
    sub_1B6828A8C(v57, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1B6828908);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = *a9;
    *a9 = 0x8000000000000000;
    sub_1B67E3E8C(0, (uint64_t)a2, v39);
    *a9 = v54;
    swift_bridgeObjectRelease();
    if ((a3 & 1) == 0)
    {
      uint64_t v40 = v58;
      sub_1B68B26AC(0, v58, a5 & 1, a2, v52, a6, a7, a8, (uint64_t)a9, (uint64_t)a10, a11);
      sub_1B68B5120(v52, v51, a7, a8, 0, v40, a5 & 1, a6, 0);
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v46 = *(void *)(v51 + 16);
        swift_retain();
        uint64_t v47 = swift_bridgeObjectRetain();
        uint64_t v48 = sub_1B68AC274(v47, a9, a10);
        swift_bridgeObjectRelease();
        *(void *)(v46 + 16) = v48;
        swift_release();
        swift_release();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      type metadata accessor for AuthoringNode();
    }
    uint64_t result = (void *)swift_release();
LABEL_15:
    uint64_t v41 = v56;
    long long v42 = v55[1];
    *(_OWORD *)uint64_t v50 = v55[0];
    *((_OWORD *)v50 + 1) = v42;
    long long v43 = v55[3];
    *((_OWORD *)v50 + 2) = v55[2];
    *((_OWORD *)v50 + 3) = v43;
    *((_OWORD *)v50 + 4) = v55[4];
    v50[10] = v41;
    return result;
  }
  uint64_t result = (void *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68AF0EC(uint64_t a1, char a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = a9;
  uint64_t v18 = *(void *)a9;
  if (*(void *)(*(void *)a9 + 16))
  {
    unint64_t v19 = sub_1B62C1A30(a1);
    if (v20)
    {
      unint64_t v21 = *(uint64_t **)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
      return (uint64_t)v21;
    }
  }
  char v46 = a4;
  if (!*(void *)(*a8 + 16))
  {
    uint64_t v23 = a7;
LABEL_8:
    int v24 = a2 & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, a1, isUniquelyReferenced_nonNull_native);
    *a8 = v50;
    swift_bridgeObjectRelease();
    sub_1B68C8EB0(0);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = a1;
    unint64_t v21 = (uint64_t *)(v45 + 16);
    swift_retain();
    unsigned int v43 = v24;
    unint64_t v44 = a3;
    if (v24)
    {
      sub_1B68B2ACC(1, a3, v46 & 1, a1, v48, a5, a6, v23, (uint64_t)a8, a9, a10);
      if (v49) {
        goto LABEL_12;
      }
      sub_1B68B54FC(v48, v45, a6, v23, 1, a3, v46 & 1, a5, 0);
      uint64_t v49 = 0;
      uint64_t v34 = v23;
      type metadata accessor for Node();
      type metadata accessor for AuthoringNode();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v35 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
        swift_retain();
        uint64_t v36 = swift_bridgeObjectRetain();
        uint64_t v17 = a9;
        uint64_t v37 = sub_1B68AB1BC(v36, a8, a9);
        swift_bridgeObjectRelease();
        *(void *)(a1 + v35) = v37;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = a9;
      }
      uint64_t v23 = v34;
    }
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a6;
    *(void *)(v26 + 24) = v23;
    *((void *)&v42 + 1) = v23;
    *(void *)&long long v42 = a6;
    uint64_t v27 = sub_1B68B7E50((void (*)(uint64_t *__return_ptr, void *))sub_1B68D55AC, v26, v48, v43, v44, v46 & 1, v17, a5, v42, (uint64_t)a8, a10, v21);
    if (v49)
    {
      swift_release();
      swift_release();
      return (uint64_t)v21;
    }
    unint64_t v21 = (uint64_t *)v27;
    swift_release();
    uint64_t v28 = swift_retain();
    uint64_t v29 = sub_1B68C03D0(v28, a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6BA0D68);
    sub_1B674DC34(v29);
    swift_release();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(0, a1, v30);
    *a8 = v51;
    swift_bridgeObjectRelease();
    if (!v43)
    {
      uint64_t v31 = a1;
      uint64_t v32 = v17;
      sub_1B68B2ACC(v43, v44, v46 & 1, v31, v48, a5, a6, v23, (uint64_t)a8, v17, a10);
      sub_1B68B54FC(v48, v45, a6, v23, v43, v44, v46 & 1, a5, 0);
      type metadata accessor for Node();
      type metadata accessor for AuthoringNode();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v38 = *(void *)(v45 + 16);
        uint64_t v39 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
        swift_retain();
        uint64_t v40 = swift_bridgeObjectRetain();
        uint64_t v41 = sub_1B68AB1BC(v40, a8, v32);
        swift_bridgeObjectRelease();
        *(void *)(v38 + v39) = v41;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v21;
      }
    }
LABEL_12:
    swift_release();
    return (uint64_t)v21;
  }
  sub_1B62C1A30(a1);
  if ((v22 & 1) == 0)
  {
    uint64_t v23 = a7;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68AF60C(void *a1, char a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v17 = (uint64_t)a9;
  uint64_t v18 = *a9;
  if (*(void *)(*a9 + 16))
  {
    unint64_t v19 = sub_1B62C1A30((uint64_t)a1);
    if (v20)
    {
      a5 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
      return a5;
    }
  }
  if (!*(void *)(*a8 + 16) || (sub_1B62C1A30((uint64_t)a1), (v21 & 1) == 0))
  {
    int v48 = a2 & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, (uint64_t)a1, isUniquelyReferenced_nonNull_native);
    *a8 = v51;
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a1;
    int v24 = (uint64_t *)(v23 + 16);
    swift_retain();
    uint64_t v45 = a1;
    char v25 = a4;
    if (a4)
    {
      uint64_t v26 = sub_1B682A12C(1);
      swift_release();
      char v25 = a4;
      uint64_t v45 = (void *)v26;
      *(void *)(v23 + 16) = v26;
      int v24 = (uint64_t *)(v23 + 16);
    }
    if (v48)
    {
      uint64_t v29 = a7;
      int v30 = v25 & 1;
      uint64_t v31 = v11;
      uint64_t v44 = v29;
      sub_1B68B2EFC(1, a3, v25 & 1, a1, v11, a5, a6, v29, (uint64_t)a8, (uint64_t)a9, a10);
      if (v50) {
        goto LABEL_16;
      }
      sub_1B68B599C(v11, v23, a6, v44, 1, a3, v30, a5, 1);
      swift_retain();
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v38 = sub_1B68AC0AC(v37, a8, a9);
      uint64_t v50 = 0;
      swift_bridgeObjectRelease();
      _OWORD v45[2] = v38;
      swift_release();
      swift_bridgeObjectRelease();
      a7 = v44;
      uint64_t v11 = v31;
      uint64_t v17 = (uint64_t)a9;
    }
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = a6;
    *(void *)(v27 + 24) = a7;
    *(void *)&long long v43 = a6;
    *((void *)&v43 + 1) = a7;
    uint64_t v28 = sub_1B68B7FE4((void (*)(uint64_t *__return_ptr, void *))sub_1B68D6DB4, v27, v11, v48, a3, a4 & 1, v17, a5, v43, (uint64_t)a8, a10, v24);
    if (v50)
    {
      swift_release();
    }
    else
    {
      uint64_t v32 = v11;
      uint64_t v33 = a7;
      unint64_t v34 = a5;
      a5 = v28;
      swift_release();
      uint64_t v35 = swift_retain();
      sub_1B68BFEB8(v35, (uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6BA0DA8);
      swift_release();
      swift_release();
      swift_retain();
      swift_release();
      *int v24 = a5;
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v52 = *a8;
      *a8 = 0x8000000000000000;
      sub_1B67E3E8C(0, (uint64_t)a1, v36);
      *a8 = v52;
      swift_bridgeObjectRelease();
      if (!v48)
      {
        sub_1B68B2EFC(v48, a3, a4 & 1, a1, v32, v34, a6, v33, (uint64_t)a8, (uint64_t)a9, a10);
        sub_1B68B599C(v32, v23, a6, v33, v48, a3, a4 & 1, v34, 1);
        uint64_t v40 = *(void *)(v23 + 16);
        swift_retain();
        uint64_t v41 = swift_bridgeObjectRetain();
        uint64_t v42 = sub_1B68AC0AC(v41, a8, a9);
        swift_bridgeObjectRelease();
        *(void *)(v40 + 16) = v42;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return a5;
      }
    }
LABEL_16:
    swift_release();
    return a5;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68AFB40@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, char a4@<W3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11)
{
  uint64_t v17 = a10;
  uint64_t v18 = *a10;
  if (*(void *)(*a10 + 16))
  {
    unint64_t v19 = sub_1B62C1A30(a1);
    if (v20)
    {
      uint64_t v21 = *(void *)(v18 + 56) + 152 * v19;
      long long v22 = *(_OWORD *)(v21 + 16);
      long long v77 = *(_OWORD *)v21;
      long long v78 = v22;
      long long v23 = *(_OWORD *)(v21 + 80);
      long long v25 = *(_OWORD *)(v21 + 32);
      long long v24 = *(_OWORD *)(v21 + 48);
      long long v81 = *(_OWORD *)(v21 + 64);
      long long v82 = v23;
      long long v79 = v25;
      long long v80 = v24;
      long long v26 = *(_OWORD *)(v21 + 96);
      long long v27 = *(_OWORD *)(v21 + 112);
      long long v28 = *(_OWORD *)(v21 + 128);
      char v86 = *(unsigned char *)(v21 + 144);
      long long v84 = v27;
      long long v85 = v28;
      long long v83 = v26;
      long long v29 = *(_OWORD *)(v21 + 112);
      *(_OWORD *)(a9 + 96) = *(_OWORD *)(v21 + 96);
      *(_OWORD *)(a9 + 112) = v29;
      *(_OWORD *)(a9 + 128) = *(_OWORD *)(v21 + 128);
      *(unsigned char *)(a9 + 144) = *(unsigned char *)(v21 + 144);
      long long v30 = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(a9 + 32) = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(a9 + 48) = v30;
      long long v31 = *(_OWORD *)(v21 + 80);
      *(_OWORD *)(a9 + 64) = *(_OWORD *)(v21 + 64);
      *(_OWORD *)(a9 + 80) = v31;
      long long v32 = *(_OWORD *)(v21 + 16);
      *(_OWORD *)a9 = *(_OWORD *)v21;
      *(_OWORD *)(a9 + 16) = v32;
      return sub_1B62CA090((uint64_t)&v77);
    }
  }
  uint64_t v55 = a6;
  if (!*(void *)(*a8 + 16))
  {
    uint64_t v35 = (void *)a1;
    unint64_t v36 = a5;
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v77 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, (uint64_t)v35, isUniquelyReferenced_nonNull_native);
    *a8 = v77;
    swift_bridgeObjectRelease();
    sub_1B68D60AC();
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = v35;
    swift_retain();
    if (a2)
    {
      sub_1B68B3304(1, a3, a4 & 1, v35, v58, v36, v55, a7, (uint64_t)a8, (uint64_t)a10, a11);
      uint64_t v40 = v87;
      if (v87)
      {
LABEL_13:
        uint64_t result = swift_release();
        uint64_t v87 = v40;
        return result;
      }
      sub_1B68B5D7C(v58, v54, v55, a7, 1, a3, a4 & 1, v36, 0);
      uint64_t v87 = 0;
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        swift_retain();
        uint64_t v47 = swift_bridgeObjectRetain();
        uint64_t v17 = a10;
        uint64_t v48 = sub_1B68AC450(v47, a8, a10);
        swift_bridgeObjectRelease();
        _OWORD v35[2] = v48;
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v38 = v36;
      }
      else
      {
        type metadata accessor for AuthoringNode();
        unint64_t v38 = v36;
        uint64_t v17 = a10;
      }
    }
    else
    {
      unint64_t v38 = v36;
    }
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v55;
    *(void *)(v39 + 24) = a7;
    *((void *)&v53 + 1) = a7;
    *(void *)&long long v53 = v55;
    sub_1B68B8178((void (*)(void *))sub_1B68D56C0, v39, v58, a2 & 1, a3, a4 & 1, (uint64_t)v17, v38, v53, (uint64_t)a8, a11, (uint64_t *)(v54 + 16));
    if (v87)
    {
      swift_release();
      return swift_release();
    }
    swift_release();
    *(_OWORD *)&v74[96] = v83;
    *(_OWORD *)&v74[112] = v84;
    *(_OWORD *)&v74[128] = v85;
    char v75 = v86;
    *(_OWORD *)&v74[32] = v79;
    *(_OWORD *)&v74[48] = v80;
    *(_OWORD *)&v74[64] = v81;
    *(_OWORD *)&v74[80] = v82;
    *(_OWORD *)uint64_t v74 = v77;
    *(_OWORD *)&v74[16] = v78;
    sub_1B62CA090((uint64_t)v74);
    uint64_t v61 = *(void *)v74;
    long long v62 = *(_OWORD *)&v74[8];
    long long v63 = *(_OWORD *)&v74[24];
    long long v64 = *(_OWORD *)&v74[40];
    long long v65 = *(_OWORD *)&v74[56];
    long long v66 = *(_OWORD *)&v74[72];
    long long v67 = *(_OWORD *)&v74[88];
    long long v68 = *(_OWORD *)&v74[104];
    long long v69 = *(_OWORD *)&v74[120];
    uint64_t v70 = *(void *)&v74[136];
    char v71 = v75;
    sub_1B68BFFDC(&v61, (uint64_t)v35, (uint64_t)v72);
    sub_1B634FE58((uint64_t)v72, (uint64_t)v76, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
    sub_1B62CA064((uint64_t)v76);
    sub_1B62CA064((uint64_t)v74);
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v72[0] = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(0, (uint64_t)v35, v41);
    *a8 = *(void *)&v72[0];
    swift_bridgeObjectRelease();
    if ((a2 & 1) == 0)
    {
      int v57 = a4 & 1;
      uint64_t v42 = v87;
      sub_1B68B3304(a2 & 1, a3, v57, v35, v58, v38, v55, a7, (uint64_t)a8, (uint64_t)v17, a11);
      if (v42)
      {
        v72[6] = v83;
        v72[7] = v84;
        v72[8] = v85;
        char v73 = v86;
        v72[2] = v79;
        v72[3] = v80;
        v72[4] = v81;
        v72[5] = v82;
        v72[0] = v77;
        v72[1] = v78;
        uint64_t v40 = v42;
        sub_1B62CA064((uint64_t)v72);
        goto LABEL_13;
      }
      sub_1B68B5D7C(v58, v54, v55, a7, a2 & 1, a3, v57, v38, 0);
      uint64_t v87 = 0;
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v49 = *(void *)(v54 + 16);
        swift_retain();
        uint64_t v50 = swift_bridgeObjectRetain();
        uint64_t v51 = v87;
        uint64_t v52 = sub_1B68AC450(v50, a8, v17);
        uint64_t v87 = v51;
        swift_bridgeObjectRelease();
        *(void *)(v49 + 16) = v52;
        swift_release();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      type metadata accessor for AuthoringNode();
    }
    uint64_t result = swift_release();
LABEL_19:
    long long v43 = v84;
    *(_OWORD *)(a9 + 96) = v83;
    *(_OWORD *)(a9 + 112) = v43;
    *(_OWORD *)(a9 + 128) = v85;
    *(unsigned char *)(a9 + 144) = v86;
    long long v44 = v80;
    *(_OWORD *)(a9 + 32) = v79;
    *(_OWORD *)(a9 + 48) = v44;
    long long v45 = v82;
    *(_OWORD *)(a9 + 64) = v81;
    *(_OWORD *)(a9 + 80) = v45;
    long long v46 = v78;
    *(_OWORD *)a9 = v77;
    *(_OWORD *)(a9 + 16) = v46;
    return result;
  }
  sub_1B62C1A30(a1);
  if ((v34 & 1) == 0)
  {
    uint64_t v35 = (void *)a1;
    unint64_t v36 = a5;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68B020C(void *a1, char a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v18 = *(void *)a9;
  if (*(void *)(*(void *)a9 + 16))
  {
    unint64_t v19 = sub_1B62C1A30((uint64_t)a1);
    if (v20)
    {
      a3 = *(void *)(*(void *)(v18 + 56) + 16 * v19);
      swift_bridgeObjectRetain();
      return a3;
    }
  }
  uint64_t v46 = a6;
  unint64_t v47 = a3;
  if (!*(void *)(*a8 + 16))
  {
    uint64_t v21 = a7;
    uint64_t v24 = v11;
    uint64_t v22 = a9;
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, (uint64_t)a1, isUniquelyReferenced_nonNull_native);
    *a8 = v52;
    swift_bridgeObjectRelease();
    sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = a1;
    swift_retain();
    int v45 = a2 & 1;
    long long v44 = a1;
    if (a2)
    {
      sub_1B68B36E8(1, a3, a4 & 1, a1, v24, a5, v46, v21, (uint64_t)a8, v22, a10);
      if (v51) {
        goto LABEL_13;
      }
      sub_1B68B6188(v24, v48, v46, v21, 1, a3, a4 & 1, a5, 0);
      uint64_t v51 = 0;
      uint64_t v27 = a5;
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        swift_retain();
        uint64_t v38 = swift_bridgeObjectRetain();
        uint64_t v26 = a9;
        uint64_t v39 = sub_1B68AC640(v38, a8);
        swift_bridgeObjectRelease();
        _OWORD v44[2] = v39;
        uint64_t v27 = a5;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        type metadata accessor for AuthoringNode();
        uint64_t v26 = a9;
      }
    }
    else
    {
      uint64_t v26 = v22;
      uint64_t v27 = a5;
    }
    uint64_t v28 = swift_allocObject();
    a3 = a10;
    *(void *)(v28 + 16) = v46;
    *(void *)(v28 + 24) = v21;
    *((void *)&v43 + 1) = v21;
    *(void *)&long long v43 = v46;
    uint64_t v29 = v26;
    uint64_t v30 = sub_1B68B8304((void (*)(void *__return_ptr, void *))sub_1B68D5F20, v28, v24, v45, v47, a4 & 1, v26, v27, v43, (uint64_t)a8, a10, (uint64_t *)(v48 + 16));
    if (v51)
    {
      swift_release();
      swift_release();
      return a3;
    }
    uint64_t v32 = v30;
    uint64_t v33 = v31;
    swift_release();
    swift_bridgeObjectRetain();
    a3 = v32;
    uint64_t v34 = sub_1B68C0294(v32, v33, (uint64_t)v44);
    sub_1B68D5EFC(v34, v35);
    swift_bridgeObjectRelease();
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(0, (uint64_t)v44, v36);
    *a8 = v53;
    swift_bridgeObjectRelease();
    if (!v45)
    {
      sub_1B68B36E8(0, v47, a4 & 1, v44, v24, a5, v46, v21, (uint64_t)a8, v29, a10);
      sub_1B68B6188(v24, v48, v46, v21, 0, v47, a4 & 1, a5, 0);
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v40 = *(void *)(v48 + 16);
        swift_retain();
        uint64_t v41 = swift_bridgeObjectRetain();
        uint64_t v42 = sub_1B68AC640(v41, a8);
        swift_bridgeObjectRelease();
        *(void *)(v40 + 16) = v42;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        type metadata accessor for AuthoringNode();
        swift_release();
      }
      return a3;
    }
LABEL_13:
    swift_release();
    return a3;
  }
  uint64_t v21 = a7;
  sub_1B62C1A30((uint64_t)a1);
  uint64_t v22 = a9;
  if ((v23 & 1) == 0)
  {
    uint64_t v24 = v11;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68B0770(uint64_t a1, char a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = a9;
  uint64_t v18 = *(void *)a9;
  if (*(void *)(*(void *)a9 + 16))
  {
    unint64_t v19 = sub_1B62C1A30(a1);
    if (v20)
    {
      a4 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
      return a4;
    }
  }
  uint64_t v44 = a5;
  if (!*(void *)(*a8 + 16))
  {
    uint64_t v22 = a7;
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, a1, isUniquelyReferenced_nonNull_native);
    *a8 = v49;
    swift_bridgeObjectRelease();
    sub_1B62CB1E8(0, &qword_1E9DD2130, (uint64_t)&type metadata for AuthoringNodeCoder, MEMORY[0x1E4FBB718]);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = a1;
    swift_retain();
    unint64_t v43 = a3;
    if (a2)
    {
      int v26 = a4 & 1;
      char v27 = a4 & 1;
      unsigned int v41 = a4;
      a4 = a6;
      sub_1B68B3A90(1, a3, v27, a1, v47, v44, a6, v22, (uint64_t)a8, a9, a10);
      if (v48)
      {
LABEL_17:
        swift_release();
        return a4;
      }
      sub_1B68B653C(v47, v45, a6, v22, 1, a3, v26, v44, 0);
      uint64_t v48 = 0;
      type metadata accessor for Node();
      type metadata accessor for AuthoringNode();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v32 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
        swift_retain();
        uint64_t v33 = swift_bridgeObjectRetain();
        uint64_t v17 = a9;
        unint64_t v34 = sub_1B68AB708(v33, a8, a9);
        swift_bridgeObjectRelease();
        *(void *)(a1 + v32) = v34;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = a9;
      }
      a4 = v41;
    }
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a6;
    *(void *)(v24 + 24) = v22;
    *((void *)&v40 + 1) = v22;
    *(void *)&long long v40 = a6;
    uint64_t v25 = sub_1B68B8498((void (*)(uint64_t *__return_ptr, void *))sub_1B68D6DB4, v24, v47, a2 & 1, v43, a4 & 1, v17, v44, v40, (uint64_t)a8, a10, (uint64_t *)(v45 + 16));
    if (v48)
    {
      swift_release();
    }
    else
    {
      char v28 = a4;
      a4 = v25;
      char v42 = v28;
      swift_release();
      uint64_t v29 = swift_retain();
      uint64_t v30 = sub_1B68C03D0(v29, a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6BA14D0);
      sub_1B674DC34(v30);
      swift_release();
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v50 = *a8;
      *a8 = 0x8000000000000000;
      sub_1B67E3E8C(0, a1, v31);
      *a8 = v50;
      swift_bridgeObjectRelease();
      if ((a2 & 1) == 0)
      {
        sub_1B68B3A90(a2 & 1, v43, v42 & 1, a1, v47, v44, a6, v22, (uint64_t)a8, v17, a10);
        sub_1B68B653C(v47, v45, a6, v22, a2 & 1, v43, v42 & 1, v44, 0);
        type metadata accessor for Node();
        type metadata accessor for AuthoringNode();
        if (swift_dynamicCastMetatype())
        {
          uint64_t v36 = *(void *)(v45 + 16);
          uint64_t v37 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
          swift_retain();
          uint64_t v38 = swift_bridgeObjectRetain();
          unint64_t v39 = sub_1B68AB708(v38, a8, v17);
          swift_bridgeObjectRelease();
          *(void *)(v36 + v37) = v39;
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return a4;
        }
      }
    }
    goto LABEL_17;
  }
  sub_1B62C1A30(a1);
  if ((v21 & 1) == 0)
  {
    uint64_t v22 = a7;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68B0CA4(void *a1, char a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = a9;
  uint64_t v18 = *(void *)a9;
  if (*(void *)(*(void *)a9 + 16))
  {
    unint64_t v19 = sub_1B62C1A30((uint64_t)a1);
    if (v20) {
      return *(void *)(*(void *)(v18 + 56) + 8 * v19);
    }
  }
  char v43 = a4;
  unint64_t v44 = a3;
  if (!*(void *)(*a8 + 16))
  {
    uint64_t v23 = a7;
LABEL_8:
    int v24 = a2 & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(1, (uint64_t)a1, isUniquelyReferenced_nonNull_native);
    *a8 = v48;
    swift_bridgeObjectRelease();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a1;
    char v27 = (uint64_t *)(v26 + 16);
    swift_retain();
    int v42 = v24;
    if (v24)
    {
      uint64_t v41 = v26;
      sub_1B68B3E4C(1, v44, v43 & 1, a1, v46, a5, a6, v23, (uint64_t)a8, a9, a10);
      if (v47) {
        return swift_release();
      }
      uint64_t v40 = a10;
      sub_1B68B691C(v46, v26, a6, v23, 1, v44, v43 & 1, a5, 0);
      uint64_t v47 = 0;
      uint64_t v28 = v23;
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        swift_retain();
        uint64_t v36 = swift_bridgeObjectRetain();
        uint64_t v17 = a9;
        unint64_t v37 = sub_1B68AC7FC(v36, a8);
        swift_bridgeObjectRelease();
        a1[2] = v37;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        type metadata accessor for AuthoringNode();
        uint64_t v17 = a9;
      }
      uint64_t v26 = v41;
    }
    else
    {
      uint64_t v40 = a10;
      uint64_t v28 = v23;
    }
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a6;
    *(void *)(v29 + 24) = v28;
    *((void *)&v38 + 1) = v28;
    *(void *)&long long v38 = a6;
    uint64_t v30 = sub_1B68B862C((void (*)(uint64_t *__return_ptr, void *))sub_1B68D6DB4, v29, v46, v42, v44, v43 & 1, v17, a5, v38, (uint64_t)a8, v40, v27);
    if (v47)
    {
      swift_release();
      return swift_release();
    }
    uint64_t v39 = v28;
    uint64_t v31 = v30;
    swift_release();
    sub_1B68C04F8(v31, (uint64_t)a1);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(0, (uint64_t)a1, v32);
    *a8 = v49;
    swift_bridgeObjectRelease();
    if (!v42)
    {
      sub_1B68B3E4C(0, v44, v43 & 1, a1, v46, a5, a6, v39, (uint64_t)a8, v17, v40);
      sub_1B68B691C(v46, v26, a6, v39, 0, v44, v43 & 1, a5, 0);
      type metadata accessor for Node();
      if (swift_dynamicCastMetatype())
      {
        uint64_t v33 = *(void *)(v26 + 16);
        swift_retain();
        uint64_t v34 = swift_bridgeObjectRetain();
        unint64_t v35 = sub_1B68AC7FC(v34, a8);
        swift_bridgeObjectRelease();
        *(void *)(v33 + 16) = v35;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v31;
      }
      type metadata accessor for AuthoringNode();
    }
    swift_release();
    return v31;
  }
  sub_1B62C1A30((uint64_t)a1);
  if ((v22 & 1) == 0)
  {
    uint64_t v23 = a7;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68B1174(uint64_t a1, char a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = a9;
  uint64_t v18 = *(void *)a9;
  if (*(void *)(*(void *)a9 + 16))
  {
    unint64_t v19 = sub_1B62C1A30(a1);
    if (v20) {
      return *(void *)(*(void *)(v18 + 56) + 8 * v19);
    }
  }
  char v46 = a4;
  unint64_t v45 = a5;
  unint64_t v47 = a3;
  if (*(void *)(*a8 + 16))
  {
    sub_1B62C1A30(a1);
    if (v22)
    {
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    uint64_t v23 = a7;
  }
  else
  {
    uint64_t v23 = a7;
  }
  int v24 = a2 & 1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v51 = *a8;
  *a8 = 0x8000000000000000;
  sub_1B67E3E8C(1, a1, isUniquelyReferenced_nonNull_native);
  *a8 = v51;
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a1;
  char v27 = (uint64_t *)(v26 + 16);
  swift_retain();
  unsigned int v44 = v24;
  if (v24)
  {
    uint64_t v43 = v26;
    sub_1B68B41D8(1, v47, v46 & 1, a1, v49, a5, a6, v23, (uint64_t)a8, a9, a10);
    if (v50) {
      return swift_release();
    }
    uint64_t v42 = a10;
    sub_1B68B6CC0(v49, v26, a6, v23, 1, v47, v46 & 1, a5, 0);
    uint64_t v50 = 0;
    uint64_t v28 = v23;
    type metadata accessor for Node();
    type metadata accessor for AuthoringNode();
    if (swift_dynamicCastMetatype())
    {
      uint64_t v37 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
      swift_retain();
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v17 = a9;
      unint64_t v39 = sub_1B68AB708(v38, a8, a9);
      swift_bridgeObjectRelease();
      *(void *)(a1 + v37) = v39;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = a9;
    }
    uint64_t v26 = v43;
  }
  else
  {
    uint64_t v42 = a10;
    uint64_t v28 = v23;
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a6;
  *(void *)(v29 + 24) = v28;
  *((void *)&v40 + 1) = v28;
  *(void *)&long long v40 = a6;
  uint64_t v30 = sub_1B68B87C0((void (*)(uint64_t *__return_ptr, void *))sub_1B68D55AC, v29, v49, v44, v47, v46 & 1, v17, v45, v40, (uint64_t)a8, v42, v27);
  if (v50)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v41 = v28;
    uint64_t v31 = v30;
    swift_release();
    sub_1B68C04F8(v31, a1);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = *a8;
    *a8 = 0x8000000000000000;
    sub_1B67E3E8C(0, a1, v32);
    *a8 = v52;
    swift_bridgeObjectRelease();
    if (v44
      || (sub_1B68B41D8(v44, v47, v46 & 1, a1, v49, v45, a6, v41, (uint64_t)a8, v17, v42),
          sub_1B68B6CC0(v49, v26, a6, v41, 0, v47, v46 & 1, v45, 0),
          type metadata accessor for Node(),
          type metadata accessor for AuthoringNode(),
          !swift_dynamicCastMetatype()))
    {
      swift_release();
    }
    else
    {
      uint64_t v33 = *(void *)(v26 + 16);
      uint64_t v34 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
      swift_retain();
      uint64_t v35 = swift_bridgeObjectRetain();
      unint64_t v36 = sub_1B68AB708(v35, a8, v17);
      swift_bridgeObjectRelease();
      *(void *)(v33 + v34) = v36;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return v31;
  }
}

uint64_t sub_1B68B1664(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void v45[6];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v12 = v11;
  int v16 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  BOOL v17 = v16 == 2 && a2 == 0x1000000000000000;
  uint64_t v41 = a1;
  if (v17)
  {
    char v20 = 0;
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a4
                                                                              + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                                + 152);
    unint64_t v19 = swift_retain();
    v18(&v44, v19);
    char v20 = v44;
    a1 = swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                        + 152))(v45, a1);
  char v21 = v45[0];
  uint64_t v51 = v45[0];
  uint64_t v50 = v45[1];
  sub_1B62D8C3C((uint64_t)&v50);
  uint64_t v49 = v45[2];
  sub_1B62D8C3C((uint64_t)&v49);
  uint64_t v48 = v45[3];
  sub_1B62D8C3C((uint64_t)&v48);
  unint64_t v47 = v45[4];
  sub_1B62D8C3C((uint64_t)&v47);
  char v46 = v45[5];
  sub_1B62D8C3C((uint64_t)&v46);
  char v22 = *(void *)(v21 + 16);
  sub_1B62D8C3C((uint64_t)&v51);
  if (*(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16) <= v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = *(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  }
  swift_retain();
  int v24 = sub_1B6D2AEA8(0, v23, a4);
  swift_release();
  uint64_t v43 = *(void *)(v24 + 16);
  if (v43)
  {
    uint64_t v25 = a3;
    uint64_t v26 = 0;
    long long v40 = a2;
    uint64_t v34 = a2 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v35 = v24;
    char v27 = 32;
    unint64_t v36 = v25 & 1;
    uint64_t v42 = v16;
    do
    {
      uint64_t v29 = *(void *)(v24 + v27);
      if (!v29) {
        goto LABEL_15;
      }
      swift_retain();
      if (v20)
      {
        sub_1B68D4F98(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v26 >= *(void *)(v20 + 16))
        {
          uint64_t v30 = 0x8000000000000000;
        }
        else
        {
          uint64_t v30 = *(void *)(v20 + 8 * v26 + 32);
          sub_1B66456F8(v30);
        }
        int v16 = v42;
        int v24 = v35;
        if (!v42)
        {
LABEL_21:
          uint64_t v28 = v40;
          sub_1B66456F8(v40);
          uint64_t v31 = sub_1B697351C(v30, v40);
          sub_1B68D4F20(v40, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v30);
          if (v31) {
            goto LABEL_13;
          }
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v30 = 0x8000000000000000;
        if (!v16) {
          goto LABEL_21;
        }
      }
      if (v16 != 1)
      {
        sub_1B6645740(v30);
        uint64_t v28 = v40;
LABEL_13:
        sub_1B68AD6B0(v29, v41 & 1, v28, v36, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return sub_1B68D4EA0(v20);
        }
        goto LABEL_14;
      }
      sub_1B66456F8(v34);
      char v32 = sub_1B697351C(v30, v34);
      uint64_t v28 = v40;
      sub_1B68D4F20(v40, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v30);
      if ((v32 & 1) == 0) {
        goto LABEL_13;
      }
LABEL_14:
      swift_release();
      int v16 = v42;
LABEL_15:
      ++v26;
      v27 += 16;
    }
    while (v43 != v26);
  }
  swift_bridgeObjectRelease();
  return sub_1B68D4EA0(v20);
}

uint64_t sub_1B68B1A80(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void v45[6];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v12 = v11;
  int v16 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  BOOL v17 = v16 == 2 && a2 == 0x1000000000000000;
  uint64_t v41 = a1;
  if (v17)
  {
    char v20 = 0;
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a4
                                                                              + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                                + 152);
    unint64_t v19 = swift_retain();
    v18(&v44, v19);
    char v20 = v44;
    a1 = swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                        + 152))(v45, a1);
  char v21 = v45[0];
  uint64_t v51 = v45[0];
  uint64_t v50 = v45[1];
  sub_1B62D8C3C((uint64_t)&v50);
  uint64_t v49 = v45[2];
  sub_1B62D8C3C((uint64_t)&v49);
  uint64_t v48 = v45[3];
  sub_1B62D8C3C((uint64_t)&v48);
  unint64_t v47 = v45[4];
  sub_1B62D8C3C((uint64_t)&v47);
  char v46 = v45[5];
  sub_1B62D8C3C((uint64_t)&v46);
  char v22 = *(void *)(v21 + 16);
  sub_1B62D8C3C((uint64_t)&v51);
  if (*(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16) <= v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = *(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  }
  swift_retain();
  int v24 = sub_1B6D2AEA8(0, v23, a4);
  swift_release();
  uint64_t v43 = *(void *)(v24 + 16);
  if (v43)
  {
    uint64_t v25 = a3;
    uint64_t v26 = 0;
    long long v40 = a2;
    uint64_t v34 = a2 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v35 = v24;
    char v27 = 32;
    unint64_t v36 = v25 & 1;
    uint64_t v42 = v16;
    do
    {
      uint64_t v28 = *(void *)(v24 + v27);
      if (!v28) {
        goto LABEL_13;
      }
      swift_retain();
      if (v20)
      {
        sub_1B68D4F98(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v26 >= *(void *)(v20 + 16))
        {
          uint64_t v29 = 0x8000000000000000;
        }
        else
        {
          uint64_t v29 = *(void *)(v20 + 8 * v26 + 32);
          sub_1B66456F8(v29);
        }
        int v16 = v42;
        int v24 = v35;
        if (!v42)
        {
LABEL_19:
          uint64_t v30 = v40;
          sub_1B66456F8(v40);
          uint64_t v31 = sub_1B697351C(v29, v40);
          sub_1B68D4F20(v40, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v29);
          if (v31) {
            goto LABEL_27;
          }
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v29 = 0x8000000000000000;
        if (!v16) {
          goto LABEL_19;
        }
      }
      if (v16 != 1)
      {
        sub_1B6645740(v29);
        uint64_t v30 = v40;
LABEL_27:
        sub_1B68ADB30(v28, v41 & 1, v30, v36, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return sub_1B68D4EA0(v20);
        }
        swift_release();
        goto LABEL_12;
      }
      sub_1B66456F8(v34);
      char v32 = sub_1B697351C(v29, v34);
      uint64_t v30 = v40;
      sub_1B68D4F20(v40, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v29);
      if ((v32 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_12:
      swift_release();
      int v16 = v42;
LABEL_13:
      ++v26;
      v27 += 16;
    }
    while (v43 != v26);
  }
  swift_bridgeObjectRelease();
  return sub_1B68D4EA0(v20);
}

uint64_t sub_1B68B1EB0(char a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v40;
  uint64_t v41;
  unsigned int v43;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v51;
  uint64_t v52;

  uint64_t v12 = v11;
  unint64_t v14 = a2;
  int v15 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  unint64_t v47 = v15;
  if (a2 == 0x1000000000000000 && v15 == 2)
  {
    uint64_t v16 = 0;
  }
  else
  {
    BOOL v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*a4 + 152);
    uint64_t v18 = swift_retain();
    v17(&v51, v18);
    uint64_t v16 = v51;
    swift_release();
  }
  unint64_t v19 = a4[2];
  char v20 = *(void *)(v19 + 16);
  char v21 = MEMORY[0x1E4FBC860];
  uint64_t v48 = v16;
  uint64_t v49 = v14;
  if (v20)
  {
    uint64_t v52 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v20, 0);
    char v22 = 0;
    char v21 = v52;
    uint64_t v23 = *(void *)(v52 + 16);
    int v24 = 16 * v23;
    do
    {
      uint64_t v26 = *(void *)(v19 + v22 + 32);
      uint64_t v25 = *(void *)(v19 + v22 + 40);
      uint64_t v52 = v21;
      char v27 = *(void *)(v21 + 24);
      swift_retain();
      if (v23 >= v27 >> 1)
      {
        sub_1B6C3C644(v27 > 1, v23 + 1, 1);
        char v21 = v52;
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v28 = v21 + v24 + v22;
      *(void *)(v28 + 32) = v26;
      *(void *)(v28 + 40) = v25;
      v22 += 16;
      ++v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v16 = v48;
    unint64_t v14 = v49;
  }
  uint64_t v29 = *(void *)(v21 + 16);
  if (v29)
  {
    uint64_t v30 = 0;
    uint64_t v43 = a1 & 1;
    long long v40 = v14 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v31 = 32;
    uint64_t v41 = *(void *)(v21 + 16);
    do
    {
      uint64_t v33 = *(void *)(v21 + v31);
      if (!v33) {
        goto LABEL_16;
      }
      swift_retain();
      if (v16)
      {
        sub_1B68D4F98(v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30 >= *(void *)(v16 + 16))
        {
          uint64_t v34 = 0x8000000000000000;
        }
        else
        {
          uint64_t v34 = *(void *)(v16 + 8 * v30 + 32);
          sub_1B66456F8(v34);
        }
        uint64_t v35 = v47;
        uint64_t v29 = v41;
        if (!v47)
        {
LABEL_22:
          char v32 = v49;
          sub_1B66456F8(v49);
          unint64_t v36 = sub_1B697351C(v34, v49);
          sub_1B68D4F20(v49, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v34);
          if (v36) {
            goto LABEL_14;
          }
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v34 = 0x8000000000000000;
        uint64_t v35 = v47;
        if (!v47) {
          goto LABEL_22;
        }
      }
      if (v35 != 1)
      {
        sub_1B6645740(v34);
        char v32 = v49;
LABEL_14:
        sub_1B68AE06C(v33, v43, v32, a3 & 1, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v38 = v48;
          return sub_1B68D4EA0(v38);
        }
        goto LABEL_15;
      }
      sub_1B66456F8(v40);
      uint64_t v37 = sub_1B697351C(v34, v40);
      char v32 = v49;
      sub_1B68D4F20(v49, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v34);
      if ((v37 & 1) == 0) {
        goto LABEL_14;
      }
LABEL_15:
      uint64_t v16 = v48;
      swift_release();
LABEL_16:
      ++v30;
      v31 += 16;
    }
    while (v29 != v30);
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v16;
  return sub_1B68D4EA0(v38);
}

uint64_t sub_1B68B22A4(char a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v40;
  uint64_t v41;
  unsigned int v43;
  int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;

  uint64_t v12 = v11;
  unint64_t v14 = a2;
  int v15 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  unint64_t v47 = v15;
  if (a2 == 0x1000000000000000 && v15 == 2)
  {
    uint64_t v16 = 0;
  }
  else
  {
    BOOL v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*a4 + 152);
    uint64_t v18 = swift_retain();
    v17(&v51, v18);
    uint64_t v16 = v51;
    swift_release();
  }
  unint64_t v19 = a4[2];
  char v20 = *(void *)(v19 + 16);
  char v21 = MEMORY[0x1E4FBC860];
  uint64_t v48 = v14;
  uint64_t v49 = v16;
  if (v20)
  {
    uint64_t v52 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v20, 0);
    char v22 = 0;
    char v21 = v52;
    uint64_t v23 = *(void *)(v52 + 16);
    int v24 = 16 * v23;
    do
    {
      uint64_t v26 = *(void *)(v19 + v22 + 32);
      uint64_t v25 = *(void *)(v19 + v22 + 40);
      uint64_t v52 = v21;
      char v27 = *(void *)(v21 + 24);
      swift_retain();
      if (v23 >= v27 >> 1)
      {
        sub_1B6C3C644(v27 > 1, v23 + 1, 1);
        char v21 = v52;
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v28 = v21 + v24 + v22;
      *(void *)(v28 + 32) = v26;
      *(void *)(v28 + 40) = v25;
      v22 += 16;
      ++v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    unint64_t v14 = v48;
    uint64_t v16 = v49;
  }
  uint64_t v29 = *(void *)(v21 + 16);
  if (v29)
  {
    uint64_t v30 = 0;
    uint64_t v43 = a1 & 1;
    long long v40 = v14 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v31 = 32;
    uint64_t v41 = *(void *)(v21 + 16);
    do
    {
      char v32 = *(void *)(v21 + v31);
      if (!v32) {
        goto LABEL_14;
      }
      swift_retain();
      if (v16)
      {
        sub_1B68D4F98(v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30 >= *(void *)(v16 + 16))
        {
          uint64_t v33 = 0x8000000000000000;
        }
        else
        {
          uint64_t v33 = *(void *)(v16 + 8 * v30 + 32);
          sub_1B66456F8(v33);
        }
        uint64_t v34 = v47;
        uint64_t v29 = v41;
        if (!v47)
        {
LABEL_20:
          uint64_t v35 = v48;
          sub_1B66456F8(v48);
          unint64_t v36 = sub_1B697351C(v33, v48);
          sub_1B68D4F20(v48, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v33);
          if (v36) {
            goto LABEL_28;
          }
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v33 = 0x8000000000000000;
        uint64_t v34 = v47;
        if (!v47) {
          goto LABEL_20;
        }
      }
      if (v34 != 1)
      {
        sub_1B6645740(v33);
        uint64_t v35 = v48;
LABEL_28:
        sub_1B68AE548(v32, v43, v35, a3 & 1, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v38 = v49;
          return sub_1B68D4EA0(v38);
        }
        swift_release();
        goto LABEL_13;
      }
      sub_1B66456F8(v40);
      uint64_t v37 = sub_1B697351C(v33, v40);
      uint64_t v35 = v48;
      sub_1B68D4F20(v48, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v33);
      if ((v37 & 1) == 0) {
        goto LABEL_28;
      }
LABEL_13:
      swift_release();
      uint64_t v16 = v49;
LABEL_14:
      ++v30;
      v31 += 16;
    }
    while (v29 != v30);
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v16;
  return sub_1B68D4EA0(v38);
}

uint64_t sub_1B68B26AC(char a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v44;
  int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v52[11];
  uint64_t v53;
  uint64_t v54;

  uint64_t v12 = v11;
  unint64_t v14 = a2;
  int v15 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  uint64_t v48 = v15;
  if (a2 == 0x1000000000000000 && v15 == 2)
  {
    uint64_t v16 = 0;
  }
  else
  {
    BOOL v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*a4 + 152);
    uint64_t v18 = swift_retain();
    v17(&v53, v18);
    uint64_t v16 = v53;
    swift_release();
  }
  unint64_t v19 = a4[2];
  char v20 = *(void *)(v19 + 16);
  char v21 = MEMORY[0x1E4FBC860];
  uint64_t v49 = v14;
  uint64_t v50 = v16;
  if (v20)
  {
    uint64_t v54 = v12;
    v52[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v20, 0);
    char v22 = 0;
    char v21 = v52[0];
    uint64_t v23 = *(void *)(v52[0] + 16);
    int v24 = 16 * v23;
    do
    {
      uint64_t v26 = *(void *)(v19 + v22 + 32);
      uint64_t v25 = *(void *)(v19 + v22 + 40);
      v52[0] = v21;
      char v27 = *(void *)(v21 + 24);
      swift_retain();
      if (v23 >= v27 >> 1)
      {
        sub_1B6C3C644(v27 > 1, v23 + 1, 1);
        char v21 = v52[0];
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v28 = v21 + v24 + v22;
      *(void *)(v28 + 32) = v26;
      *(void *)(v28 + 40) = v25;
      v22 += 16;
      ++v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v12 = v54;
    unint64_t v14 = v49;
    uint64_t v16 = v50;
  }
  uint64_t v29 = *(void *)(v21 + 16);
  if (v29)
  {
    uint64_t v30 = 0;
    unsigned int v44 = a1 & 1;
    uint64_t v41 = v14 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v42 = *(void *)(v21 + 16);
    uint64_t v31 = 32;
    do
    {
      uint64_t v33 = *(void *)(v21 + v31);
      if (!v33) {
        goto LABEL_17;
      }
      swift_retain();
      if (v16)
      {
        uint64_t v54 = v12;
        sub_1B68D4F98(v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30 >= *(void *)(v16 + 16))
        {
          uint64_t v34 = 0x8000000000000000;
        }
        else
        {
          uint64_t v34 = *(void *)(v16 + 8 * v30 + 32);
          sub_1B66456F8(v34);
        }
        uint64_t v35 = v48;
        uint64_t v12 = v54;
        uint64_t v29 = v42;
        if (!v48)
        {
LABEL_23:
          char v32 = v49;
          sub_1B66456F8(v49);
          unint64_t v36 = sub_1B697351C(v34, v49);
          sub_1B68D4F20(v49, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v34);
          if (v36) {
            goto LABEL_14;
          }
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v34 = 0x8000000000000000;
        uint64_t v35 = v48;
        if (!v48) {
          goto LABEL_23;
        }
      }
      if (v35 != 1)
      {
        sub_1B6645740(v34);
        char v32 = v49;
LABEL_14:
        sub_1B68AEAB4(v52, v33, v44, v32, a3 & 1, a6, a7, a8, a9, a10, a11, v40);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v38 = v50;
          return sub_1B68D4EA0(v38);
        }
        long long v40 = v52[10];
        sub_1B6828908(v52[0]);
        goto LABEL_16;
      }
      sub_1B66456F8(v41);
      uint64_t v37 = sub_1B697351C(v34, v41);
      char v32 = v49;
      sub_1B68D4F20(v49, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v34);
      if ((v37 & 1) == 0) {
        goto LABEL_14;
      }
LABEL_16:
      swift_release();
      uint64_t v16 = v50;
LABEL_17:
      ++v30;
      v31 += 16;
    }
    while (v29 != v30);
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v16;
  return sub_1B68D4EA0(v38);
}

uint64_t sub_1B68B2ACC(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void v45[6];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v12 = v11;
  int v16 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  BOOL v17 = v16 == 2 && a2 == 0x1000000000000000;
  uint64_t v41 = a1;
  if (v17)
  {
    char v20 = 0;
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a4
                                                                              + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                                + 152);
    unint64_t v19 = swift_retain();
    v18(&v44, v19);
    char v20 = v44;
    a1 = swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                        + 152))(v45, a1);
  char v21 = v45[0];
  uint64_t v51 = v45[0];
  uint64_t v50 = v45[1];
  sub_1B62D8C3C((uint64_t)&v50);
  uint64_t v49 = v45[2];
  sub_1B62D8C3C((uint64_t)&v49);
  uint64_t v48 = v45[3];
  sub_1B62D8C3C((uint64_t)&v48);
  unint64_t v47 = v45[4];
  sub_1B62D8C3C((uint64_t)&v47);
  char v46 = v45[5];
  sub_1B62D8C3C((uint64_t)&v46);
  char v22 = *(void *)(v21 + 16);
  sub_1B62D8C3C((uint64_t)&v51);
  if (*(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16) <= v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = *(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  }
  swift_retain();
  int v24 = sub_1B6D2AEA8(0, v23, a4);
  swift_release();
  uint64_t v43 = *(void *)(v24 + 16);
  if (v43)
  {
    uint64_t v25 = a3;
    uint64_t v26 = 0;
    long long v40 = a2;
    uint64_t v34 = a2 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v35 = v24;
    char v27 = 32;
    unint64_t v36 = v25 & 1;
    uint64_t v42 = v16;
    do
    {
      uint64_t v28 = *(void *)(v24 + v27);
      if (!v28) {
        goto LABEL_13;
      }
      swift_retain();
      if (v20)
      {
        sub_1B68D4F98(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v26 >= *(void *)(v20 + 16))
        {
          uint64_t v29 = 0x8000000000000000;
        }
        else
        {
          uint64_t v29 = *(void *)(v20 + 8 * v26 + 32);
          sub_1B66456F8(v29);
        }
        int v16 = v42;
        int v24 = v35;
        if (!v42)
        {
LABEL_19:
          uint64_t v30 = v40;
          sub_1B66456F8(v40);
          uint64_t v31 = sub_1B697351C(v29, v40);
          sub_1B68D4F20(v40, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v29);
          if (v31) {
            goto LABEL_27;
          }
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v29 = 0x8000000000000000;
        if (!v16) {
          goto LABEL_19;
        }
      }
      if (v16 != 1)
      {
        sub_1B6645740(v29);
        uint64_t v30 = v40;
LABEL_27:
        sub_1B68AF0EC(v28, v41 & 1, v30, v36, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return sub_1B68D4EA0(v20);
        }
        swift_release();
        goto LABEL_12;
      }
      sub_1B66456F8(v34);
      char v32 = sub_1B697351C(v29, v34);
      uint64_t v30 = v40;
      sub_1B68D4F20(v40, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v29);
      if ((v32 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_12:
      swift_release();
      int v16 = v42;
LABEL_13:
      ++v26;
      v27 += 16;
    }
    while (v43 != v26);
  }
  swift_bridgeObjectRelease();
  return sub_1B68D4EA0(v20);
}

uint64_t sub_1B68B2EFC(char a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v40;
  uint64_t v41;
  unsigned int v43;
  int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;

  uint64_t v12 = v11;
  unint64_t v14 = a2;
  int v15 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  unint64_t v47 = v15;
  if (a2 == 0x1000000000000000 && v15 == 2)
  {
    uint64_t v16 = 0;
  }
  else
  {
    BOOL v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*a4 + 152);
    uint64_t v18 = swift_retain();
    v17(&v51, v18);
    uint64_t v16 = v51;
    swift_release();
  }
  unint64_t v19 = a4[2];
  char v20 = *(void *)(v19 + 16);
  char v21 = MEMORY[0x1E4FBC860];
  uint64_t v48 = v14;
  uint64_t v49 = v16;
  if (v20)
  {
    uint64_t v52 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v20, 0);
    char v22 = 0;
    char v21 = v52;
    uint64_t v23 = *(void *)(v52 + 16);
    int v24 = 16 * v23;
    do
    {
      uint64_t v26 = *(void *)(v19 + v22 + 32);
      uint64_t v25 = *(void *)(v19 + v22 + 40);
      uint64_t v52 = v21;
      char v27 = *(void *)(v21 + 24);
      swift_retain();
      if (v23 >= v27 >> 1)
      {
        sub_1B6C3C644(v27 > 1, v23 + 1, 1);
        char v21 = v52;
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v28 = v21 + v24 + v22;
      *(void *)(v28 + 32) = v26;
      *(void *)(v28 + 40) = v25;
      v22 += 16;
      ++v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    unint64_t v14 = v48;
    uint64_t v16 = v49;
  }
  uint64_t v29 = *(void *)(v21 + 16);
  if (v29)
  {
    uint64_t v30 = 0;
    uint64_t v43 = a1 & 1;
    long long v40 = v14 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v31 = 32;
    uint64_t v41 = *(void *)(v21 + 16);
    do
    {
      char v32 = *(void *)(v21 + v31);
      if (!v32) {
        goto LABEL_14;
      }
      swift_retain();
      if (v16)
      {
        sub_1B68D4F98(v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30 >= *(void *)(v16 + 16))
        {
          uint64_t v33 = 0x8000000000000000;
        }
        else
        {
          uint64_t v33 = *(void *)(v16 + 8 * v30 + 32);
          sub_1B66456F8(v33);
        }
        uint64_t v34 = v47;
        uint64_t v29 = v41;
        if (!v47)
        {
LABEL_20:
          uint64_t v35 = v48;
          sub_1B66456F8(v48);
          unint64_t v36 = sub_1B697351C(v33, v48);
          sub_1B68D4F20(v48, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v33);
          if (v36) {
            goto LABEL_28;
          }
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v33 = 0x8000000000000000;
        uint64_t v34 = v47;
        if (!v47) {
          goto LABEL_20;
        }
      }
      if (v34 != 1)
      {
        sub_1B6645740(v33);
        uint64_t v35 = v48;
LABEL_28:
        sub_1B68AF60C(v32, v43, v35, a3 & 1, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v38 = v49;
          return sub_1B68D4EA0(v38);
        }
        swift_release();
        goto LABEL_13;
      }
      sub_1B66456F8(v40);
      uint64_t v37 = sub_1B697351C(v33, v40);
      uint64_t v35 = v48;
      sub_1B68D4F20(v48, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v33);
      if ((v37 & 1) == 0) {
        goto LABEL_28;
      }
LABEL_13:
      swift_release();
      uint64_t v16 = v49;
LABEL_14:
      ++v30;
      v31 += 16;
    }
    while (v29 != v30);
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v16;
  return sub_1B68D4EA0(v38);
}

uint64_t sub_1B68B3304(char a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v40;
  unsigned int v42;
  char v43;
  int v47;
  unint64_t v48;
  uint64_t v49;
  _OWORD v50[9];
  char v51;
  _OWORD v52[9];
  char v53;
  uint64_t v54;
  uint64_t v55;

  uint64_t v12 = v11;
  unint64_t v14 = a2;
  int v16 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  unint64_t v47 = v16;
  if (a2 == 0x1000000000000000 && v16 == 2)
  {
    uint64_t v49 = 0;
  }
  else
  {
    BOOL v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*a4 + 152);
    uint64_t v18 = swift_retain();
    v17(&v54, v18);
    uint64_t v49 = v54;
    swift_release();
  }
  unint64_t v19 = a4[2];
  char v20 = *(void *)(v19 + 16);
  char v21 = MEMORY[0x1E4FBC860];
  uint64_t v48 = v14;
  if (v20)
  {
    uint64_t v43 = a1;
    uint64_t v55 = v12;
    *(void *)&v52[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v20, 0);
    char v22 = 0;
    char v21 = *(void *)&v52[0];
    uint64_t v23 = *(void *)(*(void *)&v52[0] + 16);
    int v24 = 16 * v23;
    do
    {
      uint64_t v26 = *(void *)(v19 + v22 + 32);
      uint64_t v25 = *(void *)(v19 + v22 + 40);
      *(void *)&v52[0] = v21;
      char v27 = *(void *)(v21 + 24);
      swift_retain();
      if (v23 >= v27 >> 1)
      {
        sub_1B6C3C644(v27 > 1, v23 + 1, 1);
        char v21 = *(void *)&v52[0];
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v28 = v21 + v24 + v22;
      *(void *)(v28 + 32) = v26;
      *(void *)(v28 + 40) = v25;
      v22 += 16;
      ++v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v12 = v55;
    unint64_t v14 = v48;
    a1 = v43;
  }
  uint64_t v29 = v49;
  uint64_t v55 = *(void *)(v21 + 16);
  if (v55)
  {
    uint64_t v30 = 0;
    long long v40 = v14 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v31 = 32;
    uint64_t v42 = a3 & 1;
    do
    {
      uint64_t v33 = *(void *)(v21 + v31);
      if (!v33) {
        goto LABEL_17;
      }
      swift_retain();
      if (v29 && v30 < *(void *)(v29 + 16))
      {
        uint64_t v34 = *(void *)(v49 + 32 + 8 * v30);
        sub_1B66456F8(v34);
        uint64_t v35 = v47;
        if (!v47) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v34 = 0x8000000000000000;
        uint64_t v35 = v47;
        if (!v47)
        {
LABEL_22:
          char v32 = v48;
          sub_1B66456F8(v48);
          unint64_t v36 = sub_1B697351C(v34, v48);
          sub_1B68D4F20(v48, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v34);
          if (v36) {
            goto LABEL_14;
          }
          goto LABEL_16;
        }
      }
      if (v35 != 1)
      {
        sub_1B6645740(v34);
        char v32 = v48;
LABEL_14:
        sub_1B68AFB40(v52, v33, a1 & 1, v32, v42, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v38 = v49;
          return sub_1B68D4EA0(v38);
        }
        v50[6] = v52[6];
        v50[7] = v52[7];
        v50[8] = v52[8];
        uint64_t v51 = v53;
        _OWORD v50[2] = v52[2];
        v50[3] = v52[3];
        v50[4] = v52[4];
        v50[5] = v52[5];
        v50[0] = v52[0];
        v50[1] = v52[1];
        sub_1B62CA064((uint64_t)v50);
        goto LABEL_16;
      }
      sub_1B66456F8(v40);
      uint64_t v37 = sub_1B697351C(v34, v40);
      char v32 = v48;
      sub_1B68D4F20(v48, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v34);
      if ((v37 & 1) == 0) {
        goto LABEL_14;
      }
LABEL_16:
      swift_release();
      uint64_t v29 = v49;
LABEL_17:
      ++v30;
      v31 += 16;
    }
    while (v55 != v30);
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v29;
  return sub_1B68D4EA0(v38);
}

uint64_t sub_1B68B36E8(char a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;
  unsigned int v47;
  int v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  uint64_t v12 = v11;
  unint64_t v15 = a2;
  int v16 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  uint64_t v51 = v16;
  if (a2 == 0x1000000000000000 && v16 == 2)
  {
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*a4 + 152);
    unint64_t v19 = swift_retain();
    v18(&v54, v19);
    uint64_t v17 = v54;
    swift_release();
  }
  char v20 = a4[2];
  char v21 = *(void *)(v20 + 16);
  char v22 = MEMORY[0x1E4FBC860];
  uint64_t v52 = v15;
  uint64_t v53 = v17;
  if (v21)
  {
    unsigned int v44 = a3;
    unint64_t v45 = v12;
    uint64_t v55 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v21, 0);
    uint64_t v23 = 0;
    char v22 = v55;
    int v24 = *(void *)(v55 + 16);
    uint64_t v25 = 16 * v24;
    do
    {
      char v27 = *(void *)(v20 + v23 + 32);
      uint64_t v26 = *(void *)(v20 + v23 + 40);
      uint64_t v55 = v22;
      uint64_t v28 = *(void *)(v22 + 24);
      swift_retain();
      if (v24 >= v28 >> 1)
      {
        sub_1B6C3C644(v28 > 1, v24 + 1, 1);
        char v22 = v55;
      }
      *(void *)(v22 + 16) = v24 + 1;
      uint64_t v29 = v22 + v25 + v23;
      *(void *)(v29 + 32) = v27;
      *(void *)(v29 + 40) = v26;
      v23 += 16;
      ++v24;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v12 = v45;
    unint64_t v15 = v52;
    uint64_t v17 = v53;
    a3 = v44;
  }
  uint64_t v30 = *(void *)(v22 + 16);
  if (v30)
  {
    uint64_t v31 = 0;
    unint64_t v47 = a1 & 1;
    uint64_t v41 = v17 + 32;
    uint64_t v42 = v15 & 0xEFFFFFFFFFFFFFFBLL;
    char v32 = 32;
    uint64_t v43 = a3 & 1;
    do
    {
      uint64_t v33 = *(void *)(v22 + v32);
      if (!v33) {
        goto LABEL_15;
      }
      swift_retain();
      if (v17 && v31 < *(void *)(v17 + 16))
      {
        uint64_t v34 = *(void *)(v41 + 8 * v31);
        sub_1B66456F8(v34);
        uint64_t v35 = v51;
        if (!v51) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v34 = 0x8000000000000000;
        uint64_t v35 = v51;
        if (!v51)
        {
LABEL_20:
          unint64_t v36 = v52;
          sub_1B66456F8(v52);
          uint64_t v37 = sub_1B697351C(v34, v52);
          sub_1B68D4F20(v52, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v34);
          if (v37) {
            goto LABEL_27;
          }
          goto LABEL_13;
        }
      }
      if (v35 != 1)
      {
        sub_1B6645740(v34);
        unint64_t v36 = v52;
LABEL_27:
        sub_1B68B020C(v33, v47, v36, v43, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v39 = v53;
          return sub_1B68D4EA0(v39);
        }
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      sub_1B66456F8(v42);
      uint64_t v38 = sub_1B697351C(v34, v42);
      unint64_t v36 = v52;
      sub_1B68D4F20(v52, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v34);
      if ((v38 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_13:
      swift_release();
LABEL_14:
      uint64_t v17 = v53;
LABEL_15:
      ++v31;
      v32 += 16;
    }
    while (v30 != v31);
  }
  swift_bridgeObjectRelease();
  unint64_t v39 = v17;
  return sub_1B68D4EA0(v39);
}

uint64_t sub_1B68B3A90(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  char v31;
  char v32;
  uint64_t v33;
  unint64_t v35;
  unsigned int v37;
  unsigned int v38;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void v45[6];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v12 = v11;
  char v15 = a1;
  uint64_t v42 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  if (v42 == 2 && a2 == 0x1000000000000000)
  {
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a4
                                                                              + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                                + 152);
    uint64_t v18 = swift_retain();
    v17(&v44, v18);
    uint64_t v43 = v44;
    a1 = swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                        + 152))(v45, a1);
  unint64_t v19 = v45[0];
  uint64_t v51 = v45[0];
  uint64_t v50 = v45[1];
  sub_1B62D8C3C((uint64_t)&v50);
  uint64_t v49 = v45[2];
  sub_1B62D8C3C((uint64_t)&v49);
  uint64_t v48 = v45[3];
  sub_1B62D8C3C((uint64_t)&v48);
  unint64_t v47 = v45[4];
  sub_1B62D8C3C((uint64_t)&v47);
  char v46 = v45[5];
  sub_1B62D8C3C((uint64_t)&v46);
  char v20 = *(void *)(v19 + 16);
  sub_1B62D8C3C((uint64_t)&v51);
  if (*(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16) <= v20) {
    char v21 = v20;
  }
  else {
    char v21 = *(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  }
  swift_retain();
  char v22 = sub_1B6D2AEA8(0, v21, a4);
  uint64_t v23 = v12;
  swift_release();
  int v24 = *(void *)(v22 + 16);
  if (v24)
  {
    uint64_t v25 = 0;
    uint64_t v38 = v15 & 1;
    uint64_t v26 = v43;
    uint64_t v35 = a2 & 0xEFFFFFFFFFFFFFFBLL;
    char v27 = 32;
    uint64_t v37 = a3 & 1;
    while (1)
    {
      uint64_t v28 = *(void *)(v22 + v27);
      if (!v28) {
        goto LABEL_13;
      }
      swift_retain();
      if (v26 && v25 < *(void *)(v26 + 16))
      {
        uint64_t v29 = *(void *)(v43 + 32 + 8 * v25);
        sub_1B66456F8(v29);
        uint64_t v30 = v42;
        if (!v42) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v29 = 0x8000000000000000;
        uint64_t v30 = v42;
        if (!v42)
        {
LABEL_18:
          sub_1B66456F8(a2);
          uint64_t v31 = sub_1B697351C(v29, a2);
          sub_1B68D4F20(a2, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v29);
          if (v31) {
            goto LABEL_25;
          }
          goto LABEL_12;
        }
      }
      if (v30 != 1)
      {
        sub_1B6645740(v29);
LABEL_25:
        sub_1B68B0770(v28, v38, a2, v37, a6, a7, a8, a9, a10, a11);
        if (v23)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v33 = v43;
          return sub_1B68D4EA0(v33);
        }
        swift_release();
        goto LABEL_12;
      }
      sub_1B66456F8(v35);
      char v32 = sub_1B697351C(v29, v35);
      sub_1B68D4F20(a2, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v29);
      if ((v32 & 1) == 0) {
        goto LABEL_25;
      }
LABEL_12:
      swift_release();
      uint64_t v26 = v43;
LABEL_13:
      ++v25;
      v27 += 16;
      if (v24 == v25) {
        goto LABEL_28;
      }
    }
  }
  uint64_t v26 = v43;
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v33 = v26;
  return sub_1B68D4EA0(v33);
}

uint64_t sub_1B68B3E4C(char a1, unint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  unsigned int v43;
  uint64_t v44;
  unsigned int v46;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  uint64_t v12 = v11;
  unint64_t v14 = a2;
  int v15 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  uint64_t v50 = v15;
  if (a2 == 0x1000000000000000 && v15 == 2)
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*a4 + 152);
    uint64_t v18 = swift_retain();
    v17(&v53, v18);
    uint64_t v16 = v53;
    swift_release();
  }
  unint64_t v19 = a4[2];
  char v20 = *(void *)(v19 + 16);
  char v21 = MEMORY[0x1E4FBC860];
  uint64_t v52 = v14;
  uint64_t v51 = v16;
  if (v20)
  {
    unsigned int v44 = v12;
    uint64_t v54 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v20, 0);
    char v22 = 0;
    char v21 = v54;
    uint64_t v23 = *(void *)(v54 + 16);
    int v24 = 16 * v23;
    do
    {
      uint64_t v26 = *(void *)(v19 + v22 + 32);
      uint64_t v25 = *(void *)(v19 + v22 + 40);
      uint64_t v54 = v21;
      char v27 = *(void *)(v21 + 24);
      swift_retain();
      if (v23 >= v27 >> 1)
      {
        sub_1B6C3C644(v27 > 1, v23 + 1, 1);
        char v21 = v54;
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v28 = v21 + v24 + v22;
      *(void *)(v28 + 32) = v26;
      *(void *)(v28 + 40) = v25;
      v22 += 16;
      ++v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v12 = v44;
    unint64_t v14 = v52;
    uint64_t v16 = v51;
  }
  uint64_t v29 = *(void *)(v21 + 16);
  if (v29)
  {
    uint64_t v30 = 0;
    char v46 = a1 & 1;
    long long v40 = v16 + 32;
    uint64_t v41 = v14 & 0xEFFFFFFFFFFFFFFBLL;
    uint64_t v31 = 32;
    uint64_t v43 = a3 & 1;
    do
    {
      uint64_t v33 = *(void *)(v21 + v31);
      if (!v33) {
        goto LABEL_16;
      }
      swift_retain();
      if (v16 && v30 < *(void *)(v16 + 16))
      {
        uint64_t v34 = *(void *)(v40 + 8 * v30);
        sub_1B66456F8(v34);
        uint64_t v35 = v50;
        if (!v50) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v34 = 0x8000000000000000;
        uint64_t v35 = v50;
        if (!v50)
        {
LABEL_21:
          char v32 = v52;
          sub_1B66456F8(v52);
          unint64_t v36 = sub_1B697351C(v34, v52);
          sub_1B68D4F20(v52, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v34);
          if (v36) {
            goto LABEL_14;
          }
          goto LABEL_15;
        }
      }
      if (v35 != 1)
      {
        sub_1B6645740(v34);
        char v32 = v52;
LABEL_14:
        sub_1B68B0CA4(v33, v46, v32, v43, a6, a7, a8, a9, a10, a11);
        if (v12)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v38 = v51;
          return sub_1B68D4EA0(v38);
        }
        goto LABEL_15;
      }
      sub_1B66456F8(v41);
      uint64_t v37 = sub_1B697351C(v34, v41);
      char v32 = v52;
      sub_1B68D4F20(v52, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v34);
      if ((v37 & 1) == 0) {
        goto LABEL_14;
      }
LABEL_15:
      uint64_t v16 = v51;
      swift_release();
LABEL_16:
      ++v30;
      v31 += 16;
    }
    while (v29 != v30);
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v16;
  return sub_1B68D4EA0(v38);
}

uint64_t sub_1B68B41D8(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  char v31;
  char v32;
  uint64_t v33;
  unint64_t v35;
  unsigned int v37;
  unsigned int v38;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void v45[6];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v12 = v11;
  char v15 = a1;
  uint64_t v42 = (a2 >> 59) & 2 | (a2 >> 2) & 1;
  if (v42 == 2 && a2 == 0x1000000000000000)
  {
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a4
                                                                              + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                                + 152);
    uint64_t v18 = swift_retain();
    v17(&v44, v18);
    uint64_t v43 = v44;
    a1 = swift_release();
  }
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                        + 152))(v45, a1);
  unint64_t v19 = v45[0];
  uint64_t v51 = v45[0];
  uint64_t v50 = v45[1];
  sub_1B62D8C3C((uint64_t)&v50);
  uint64_t v49 = v45[2];
  sub_1B62D8C3C((uint64_t)&v49);
  uint64_t v48 = v45[3];
  sub_1B62D8C3C((uint64_t)&v48);
  unint64_t v47 = v45[4];
  sub_1B62D8C3C((uint64_t)&v47);
  char v46 = v45[5];
  sub_1B62D8C3C((uint64_t)&v46);
  char v20 = *(void *)(v19 + 16);
  sub_1B62D8C3C((uint64_t)&v51);
  if (*(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16) <= v20) {
    char v21 = v20;
  }
  else {
    char v21 = *(void *)(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  }
  swift_retain();
  char v22 = sub_1B6D2AEA8(0, v21, a4);
  uint64_t v23 = v12;
  swift_release();
  int v24 = *(void *)(v22 + 16);
  if (v24)
  {
    uint64_t v25 = 0;
    uint64_t v38 = v15 & 1;
    uint64_t v26 = v43;
    uint64_t v35 = a2 & 0xEFFFFFFFFFFFFFFBLL;
    char v27 = 32;
    uint64_t v37 = a3 & 1;
    while (1)
    {
      uint64_t v28 = *(void *)(v22 + v27);
      if (!v28) {
        goto LABEL_15;
      }
      swift_retain();
      if (v26 && v25 < *(void *)(v26 + 16))
      {
        uint64_t v29 = *(void *)(v43 + 32 + 8 * v25);
        sub_1B66456F8(v29);
        uint64_t v30 = v42;
        if (!v42) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v29 = 0x8000000000000000;
        uint64_t v30 = v42;
        if (!v42)
        {
LABEL_20:
          sub_1B66456F8(a2);
          uint64_t v31 = sub_1B697351C(v29, a2);
          sub_1B68D4F20(a2, (uint64_t (*)(unint64_t))sub_1B6645740);
          sub_1B6645740(v29);
          if (v31) {
            goto LABEL_13;
          }
          goto LABEL_14;
        }
      }
      if (v30 != 1)
      {
        sub_1B6645740(v29);
LABEL_13:
        sub_1B68B1174(v28, v38, a2, v37, a6, a7, a8, a9, a10, a11);
        if (v23)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v33 = v43;
          return sub_1B68D4EA0(v33);
        }
        goto LABEL_14;
      }
      sub_1B66456F8(v35);
      char v32 = sub_1B697351C(v29, v35);
      sub_1B68D4F20(a2, (uint64_t (*)(unint64_t))sub_1B6645740);
      sub_1B6645740(v29);
      if ((v32 & 1) == 0) {
        goto LABEL_13;
      }
LABEL_14:
      swift_release();
      uint64_t v26 = v43;
LABEL_15:
      ++v25;
      v27 += 16;
      if (v24 == v25) {
        goto LABEL_27;
      }
    }
  }
  uint64_t v26 = v43;
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v33 = v26;
  return sub_1B68D4EA0(v33);
}

unint64_t sub_1B68B4580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  int v35 = a7;
  uint64_t v40 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  char v21 = (char *)&v33 - v20;
  uint64_t v33 = a2;
  char v22 = *(__objc2_class ***)(a2 + 16);
  unint64_t result = sub_1B6818134(v22);
  if (result)
  {
    unsigned int v34 = a5 & 1;
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v38 = sub_1B68C967C(MEMORY[0x1E4FBC860]);
    uint64_t v39 = v29;
    sub_1B68B96F0(v36, v37, v34, v40, v35 & 1, a8, &v38);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v39;
    if (a9)
    {
      if (*(void *)(v39 + 16))
      {
        uint64_t v38 = v28;
        sub_1B6E32A48();
        unint64_t result = sub_1B62C1A30(*(void *)(v30 + 32));
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v33 + 16);
      type metadata accessor for AuthoringGraph();
      char v32 = (void *)swift_allocObject();
      void v32[2] = 0;
      v32[3] = v28;
      v32[4] = 0;
      v32[5] = 0;
      swift_retain();
      v32[6] = sub_1B67DD1F0(v28);
      v32[3] = v28;
      *(void *)(v31 + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph) = v32;
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B68B494C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  int v43 = a7;
  uint64_t v44 = a6;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  char v21 = (char *)&v40 - v20;
  uint64_t v40 = a2;
  char v22 = *(__objc2_class ***)(a2 + 16);
  uint64_t result = sub_1B6818134(v22);
  uint64_t v45 = result;
  if (result)
  {
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = sub_1B68B708C(v41, v42, a5 & 1, v44, v43 & 1, a8);
    if (!v9)
    {
      uint64_t v30 = v28;
      uint64_t v31 = v29;
      swift_bridgeObjectRelease();
      if (a9)
      {
        uint64_t v32 = *(void *)(v31 + 16);
        uint64_t v33 = MEMORY[0x1E4FBC860];
        if (v32)
        {
          uint64_t v46 = MEMORY[0x1E4FBC860];
          sub_1B6E32A48();
          unsigned int v34 = (uint64_t *)(v31 + 32);
          do
          {
            if (*(void *)(v30 + 16))
            {
              sub_1B62C1A30(*v34);
              if (v35) {
                swift_retain();
              }
            }
            sub_1B6E32A08();
            sub_1B6E32A68();
            sub_1B6E32A78();
            sub_1B6E32A28();
            ++v34;
            --v32;
          }
          while (v32);
          uint64_t v36 = v46;
        }
        else
        {
          uint64_t v36 = MEMORY[0x1E4FBC860];
        }
        uint64_t v37 = v40;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = *(void *)(v37 + 16);
        type metadata accessor for AuthoringGraph();
        uint64_t v39 = (void *)swift_allocObject();
        void v39[2] = 0;
        v39[3] = v33;
        v39[4] = 0;
        v39[5] = 0;
        swift_retain();
        v39[6] = sub_1B67DD1F0(v33);
        v39[3] = v36;
        *(void *)(v38 + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph) = v39;
        swift_release();
        swift_release();
        return swift_release();
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1B68B4D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9, uint64_t (*a10)(void), void (*a11)(uint64_t, uint64_t, void, uint64_t, void, unint64_t, uint64_t *))
{
  int v40 = a7;
  uint64_t v45 = a6;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v15 = sub_1B6E31118();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = (char *)&v35 - v22;
  uint64_t v36 = a2;
  int v24 = *(__objc2_class ***)(a2 + 16);
  unint64_t result = sub_1B6817F40(v24);
  if (result)
  {
    uint64_t v39 = a11;
    uint64_t v37 = a10;
    unsigned int v38 = a5 & 1;
    unint64_t v26 = (char *)v24 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v27(v23, v26, v15);
    v27(v19, v23, v15);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v29 = *(void *)(a8 + 16);
    unint64_t v28 = *(void *)(a8 + 24);
    if (v29 >= v28 >> 1) {
      a8 = sub_1B68C21E0(v28 > 1, v29 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v29 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(a8+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v29, v19, v15);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
    uint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v43 = v37(MEMORY[0x1E4FBC860]);
    uint64_t v44 = v31;
    v39(v41, v42, v38, v45, v40 & 1, a8, &v43);
    if (v11)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v32 = v44;
    if (a9)
    {
      if (*(void *)(v44 + 16))
      {
        uint64_t v43 = v30;
        sub_1B6E32A48();
        unint64_t result = sub_1B62C1A30(*(void *)(v32 + 32));
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(v36 + 16);
      type metadata accessor for Graph();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v30;
      *(void *)(v33 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = v34;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B68B5120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  int v37 = a7;
  uint64_t v42 = a6;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v35 = a2;
  uint64_t v22 = *(__objc2_class ***)(a2 + 16);
  uint64_t result = sub_1B6817F40(v22);
  if (result)
  {
    unsigned int v36 = a5 & 1;
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v40 = sub_1B68CB378(MEMORY[0x1E4FBC860]);
    uint64_t v41 = v29;
    sub_1B68B9F4C(v38, v39, v36, v42, v37 & 1, a8, &v40);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v40;
    uint64_t v31 = v41;
    if (a9)
    {
      if (*(void *)(v41 + 16))
      {
        uint64_t v40 = v28;
        sub_1B6E32A48();
        uint64_t v34 = (uint64_t *)(*(void *)(v30 + 56) + 88 * sub_1B62C1A30(*(void *)(v31 + 32)));
        uint64_t result = sub_1B67FBA04(*v34);
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(v35 + 16);
      type metadata accessor for Graph();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v28;
      *(void *)(v32 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = v33;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B68B54FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, uint64_t a8, char a9)
{
  int v41 = a7;
  uint64_t v43 = a4;
  uint64_t v44 = a6;
  uint64_t v42 = a3;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v39 - v20;
  uint64_t v39 = a2;
  uint64_t v22 = *(__objc2_class ***)(a2 + 16);
  uint64_t result = sub_1B6818134(v22);
  if (result)
  {
    int v40 = a5 & 1;
    int v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v24(v21, (char *)v22 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v13);
    v24(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v26 = *(void *)(a8 + 16);
    unint64_t v25 = *(void *)(a8 + 24);
    if (v26 >= v25 >> 1) {
      a8 = sub_1B68C21E0(v25 > 1, v26 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v26 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v26, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v27 = MEMORY[0x1E4FBC860];
    uint64_t v46 = sub_1B68CABF0(MEMORY[0x1E4FBC860]);
    uint64_t v47 = v28;
    sub_1B68BAE9C(v42, v43, v40, v44, v41 & 1, a8, (uint64_t)&v46, (void (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, unint64_t *))sub_1B68AF0EC);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = v46;
      uint64_t v30 = v47;
      if (a9)
      {
        uint64_t v31 = *(void *)(v47 + 16);
        if (v31)
        {
          uint64_t v46 = v27;
          sub_1B6E32A48();
          uint64_t v32 = 0;
          do
          {
            if (*(void *)(v29 + 16) && (unint64_t v34 = sub_1B62C1A30(*(void *)(v30 + 8 * v32 + 32)), (v35 & 1) != 0))
            {
              uint64_t v33 = *(void *)(*(void *)(v29 + 56) + 8 * v34);
              swift_retain();
            }
            else
            {
              uint64_t v33 = 1;
            }
            ++v32;
            uint64_t v45 = v33;
            sub_1B68C8EB0(0);
            type metadata accessor for AuthoringNode();
            swift_retain();
            swift_dynamicCast();
            sub_1B674DC34(v33);
            sub_1B6E32A08();
            sub_1B6E32A68();
            sub_1B6E32A78();
            sub_1B6E32A28();
          }
          while (v31 != v32);
          uint64_t v27 = v46;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = *(void *)(v39 + 16);
        type metadata accessor for AuthoringGraph();
        int v37 = (void *)swift_allocObject();
        v37[2] = 0;
        uint64_t v38 = MEMORY[0x1E4FBC860];
        v37[3] = MEMORY[0x1E4FBC860];
        v37[4] = 0;
        v37[5] = 0;
        swift_retain();
        v37[6] = sub_1B67DD1F0(v38);
        v37[3] = v27;
        *(void *)(v36 + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph) = v37;
        swift_release();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B68B599C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  uint64_t v43 = a6;
  int v42 = a7;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v12 = sub_1B6E31118();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v39 = a2;
  uint64_t v21 = *(__objc2_class ***)(a2 + 16);
  uint64_t result = sub_1B6817F40(v21);
  if (result)
  {
    uint64_t v23 = (char *)v21 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    int v24 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v24(v20, v23, v12);
    v24(v16, v20, v12);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v26 = *(void *)(a8 + 16);
    unint64_t v25 = *(void *)(a8 + 24);
    if (v26 >= v25 >> 1) {
      a8 = sub_1B68C21E0(v25 > 1, v26 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v26 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(a8+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v26, v16, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    uint64_t v27 = v44;
    uint64_t v28 = sub_1B68B7388(v40, v41, a5 & 1, v43, v42 & 1, a8);
    if (!v27)
    {
      uint64_t v30 = v28;
      uint64_t v31 = v29;
      swift_bridgeObjectRelease();
      if (a9)
      {
        uint64_t v32 = *(void *)(v31 + 16);
        uint64_t v33 = MEMORY[0x1E4FBC860];
        if (v32)
        {
          uint64_t v45 = MEMORY[0x1E4FBC860];
          sub_1B6E32A48();
          unint64_t v34 = (uint64_t *)(v31 + 32);
          do
          {
            if (*(void *)(v30 + 16))
            {
              sub_1B62C1A30(*v34);
              if (v35) {
                swift_retain();
              }
            }
            sub_1B6E32A08();
            sub_1B6E32A68();
            sub_1B6E32A78();
            sub_1B6E32A28();
            ++v34;
            --v32;
          }
          while (v32);
          uint64_t v33 = v45;
        }
        uint64_t v36 = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = *(void *)(v36 + 16);
        type metadata accessor for Graph();
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v33;
        *(void *)(v37 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = v38;
        swift_release();
        return swift_release();
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B68B5D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  int v44 = a7;
  uint64_t v46 = a4;
  uint64_t v47 = a6;
  uint64_t v45 = a3;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v42 = a2;
  uint64_t v22 = *(__objc2_class ***)(a2 + 16);
  uint64_t result = sub_1B6817F40(v22);
  if (result)
  {
    unsigned int v43 = a5 & 1;
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    *(void *)&v48[0] = sub_1B68CDDCC(MEMORY[0x1E4FBC860]);
    *((void *)&v48[0] + 1) = v29;
    sub_1B68BA75C(v45, v46, v43, v47, v44 & 1, a8, v48);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    long long v30 = v48[0];
    if (a9)
    {
      if (*(void *)(*((void *)&v48[0] + 1) + 16))
      {
        uint64_t v50 = v28;
        sub_1B6E32A48();
        unint64_t v33 = *(void *)(v30 + 56) + 152 * sub_1B62C1A30(*(void *)(*((void *)&v30 + 1) + 32));
        long long v34 = *(_OWORD *)(v33 + 16);
        v48[0] = *(_OWORD *)v33;
        v48[1] = v34;
        long long v35 = *(_OWORD *)(v33 + 80);
        long long v37 = *(_OWORD *)(v33 + 32);
        long long v36 = *(_OWORD *)(v33 + 48);
        v48[4] = *(_OWORD *)(v33 + 64);
        void v48[5] = v35;
        v48[2] = v37;
        v48[3] = v36;
        long long v38 = *(_OWORD *)(v33 + 96);
        long long v39 = *(_OWORD *)(v33 + 112);
        long long v40 = *(_OWORD *)(v33 + 128);
        char v49 = *(unsigned char *)(v33 + 144);
        v48[7] = v39;
        v48[8] = v40;
        v48[6] = v38;
        uint64_t result = sub_1B62CA090((uint64_t)v48);
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v42 + 16);
      type metadata accessor for Graph();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v28;
      *(void *)(v31 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = v32;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B68B6188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  int v35 = a7;
  uint64_t v40 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v33 = a2;
  uint64_t v22 = *(__objc2_class ***)(a2 + 16);
  uint64_t result = sub_1B6817F40(v22);
  if (result)
  {
    unsigned int v34 = a5 & 1;
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v38 = sub_1B68CE0B4(MEMORY[0x1E4FBC860]);
    uint64_t v39 = v29;
    sub_1B68BAA60(v36, v37, v34, v40, v35 & 1, a8, &v38);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v39;
    if (a9)
    {
      if (*(void *)(v39 + 16))
      {
        uint64_t v38 = v28;
        sub_1B6E32A48();
        sub_1B62C1A30(*(void *)(v30 + 32));
        uint64_t result = swift_bridgeObjectRetain();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v33 + 16);
      type metadata accessor for Graph();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v28;
      *(void *)(v31 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = v32;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1B68B653C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, uint64_t a8, char a9)
{
  int v35 = a7;
  uint64_t v40 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v33 = a2;
  uint64_t v22 = *(__objc2_class ***)(a2 + 16);
  unint64_t result = sub_1B6818134(v22);
  if (result)
  {
    int v34 = a5 & 1;
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v38 = sub_1B68CA8D0(MEMORY[0x1E4FBC860]);
    uint64_t v39 = v29;
    sub_1B68BAE9C(v36, v37, v34, v40, v35 & 1, a8, (uint64_t)&v38, (void (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, unint64_t *))sub_1B68B0770);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v39;
    if (a9)
    {
      if (*(void *)(v39 + 16))
      {
        uint64_t v38 = v28;
        sub_1B6E32A48();
        unint64_t result = sub_1B62C1A30(*(void *)(v30 + 32));
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v33 + 16);
      type metadata accessor for AuthoringGraph();
      uint64_t v32 = (void *)swift_allocObject();
      void v32[2] = 0;
      v32[3] = v28;
      v32[4] = 0;
      v32[5] = 0;
      swift_retain();
      v32[6] = sub_1B67DD1F0(v28);
      v32[3] = v28;
      *(void *)(v31 + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph) = v32;
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1B68B691C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  int v35 = a7;
  uint64_t v40 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v33 = a2;
  uint64_t v22 = *(__objc2_class ***)(a2 + 16);
  unint64_t result = sub_1B6817F40(v22);
  if (result)
  {
    unsigned int v34 = a5 & 1;
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX4Node_authoringID;
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v38 = sub_1B68CE644(MEMORY[0x1E4FBC860]);
    uint64_t v39 = v29;
    sub_1B68BB144(v36, v37, v34, v40, v35 & 1, a8, &v38);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v39;
    if (a9)
    {
      if (*(void *)(v39 + 16))
      {
        uint64_t v38 = v28;
        sub_1B6E32A48();
        unint64_t result = sub_1B62C1A30(*(void *)(v30 + 32));
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v33 + 16);
      type metadata accessor for Graph();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v28;
      *(void *)(v31 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = v32;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_1B68B6CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, unint64_t a8, char a9)
{
  int v35 = a7;
  uint64_t v40 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v13 = sub_1B6E31118();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v33 = a2;
  uint64_t v22 = *(__objc2_class ***)(a2 + 16);
  unint64_t result = sub_1B6818134(v22);
  if (result)
  {
    unsigned int v34 = a5 & 1;
    int v24 = (char *)v22 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v21, v24, v13);
    v25(v17, v21, v13);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a8 = sub_1B68C21E0(0, *(void *)(a8 + 16) + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    unint64_t v27 = *(void *)(a8 + 16);
    unint64_t v26 = *(void *)(a8 + 24);
    if (v27 >= v26 >> 1) {
      a8 = sub_1B68C21E0(v26 > 1, v27 + 1, 1, a8, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
    }
    *(void *)(a8 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(a8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, v17, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v38 = sub_1B68CE644(MEMORY[0x1E4FBC860]);
    uint64_t v39 = v29;
    sub_1B68BB514(v36, v37, v34, v40, v35 & 1, a8, &v38);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v39;
    if (a9)
    {
      if (*(void *)(v39 + 16))
      {
        uint64_t v38 = v28;
        sub_1B6E32A48();
        unint64_t result = sub_1B62C1A30(*(void *)(v30 + 32));
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v33 + 16);
      type metadata accessor for AuthoringGraph();
      uint64_t v32 = (void *)swift_allocObject();
      void v32[2] = 0;
      v32[3] = v28;
      v32[4] = 0;
      v32[5] = 0;
      swift_retain();
      v32[6] = sub_1B67DD1F0(v28);
      v32[3] = v28;
      *(void *)(v31 + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph) = v32;
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B68B708C(uint64_t a1, uint64_t a2, char a3, unint64_t a4, char a5, unint64_t a6)
{
  char v12 = a3 & 1;
  uint64_t v33 = sub_1B68CAF0C(MEMORY[0x1E4FBC860], (void (*)(void))type metadata accessor for AuthoringNode, (void (*)(void))sub_1B6AB6A6C, (void (*)(void))sub_1B6ACC40C);
  uint64_t v34 = v13;
  sub_1B68B937C(a1, a2, v12, a4, a5, a6, &v33);
  uint64_t v14 = v33;
  if (v6)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a2;
  }
  uint64_t v15 = (char *)v34;
  uint64_t v16 = *(void *)(v34 + 16);
  if (!v16) {
    return v33;
  }
  uint64_t v17 = v34 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  a2 = v14;
  while (1)
  {
    uint64_t v19 = *(void *)(v17 + 8 * v18);
    if (*(void *)(v14 + 16))
    {
      sub_1B62C1A30(*(void *)(v17 + 8 * v18));
      if (v20) {
        swift_retain();
      }
    }
    _s11DeletedNodeCMa_0(0);
    uint64_t v21 = swift_dynamicCastClass();
    swift_release();
    if (!v21) {
      goto LABEL_5;
    }
    unint64_t v22 = sub_1B62C1A30(v19);
    if ((v23 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = a2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6ACC40C();
      a2 = v35;
    }
    sub_1B6AC89D0(v24, a2);
    swift_bridgeObjectRelease();
    uint64_t v26 = *((void *)v15 + 2);
    if (!v26) {
      goto LABEL_21;
    }
    uint64_t v27 = 0;
    if (v26 == 1 || *((void *)v15 + 4) == v19) {
      goto LABEL_22;
    }
    if (*((void *)v15 + 5) != v19)
    {
      uint64_t v28 = 0;
      uint64_t v29 = v26 - 2;
      while (v29 != v28)
      {
        uint64_t v30 = *(void *)&v15[8 * v28++ + 48];
        if (v30 == v19)
        {
          uint64_t v27 = v28 + 1;
          goto LABEL_22;
        }
      }
LABEL_21:
      uint64_t v27 = 0;
      goto LABEL_22;
    }
    uint64_t v27 = 1;
LABEL_22:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_1B6C166F8((uint64_t)v15);
    }
    uint64_t v31 = *((void *)v15 + 2) - 1;
    if (v31 - v27 < 0) {
      break;
    }
    memmove(&v15[8 * v27 + 32], &v15[8 * v27 + 40], 8 * (v31 - v27));
    *((void *)v15 + 2) = v31;
    swift_release();
LABEL_5:
    if (++v18 == v16) {
      goto LABEL_2;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68B7388(uint64_t a1, uint64_t a2, char a3, unint64_t a4, int a5, unint64_t a6)
{
  int v12 = a3 & 1;
  uint64_t v33 = sub_1B68CAF0C(MEMORY[0x1E4FBC860], (void (*)(void))type metadata accessor for Node, (void (*)(void))sub_1B6AB7D08, (void (*)(void))sub_1B6ACCBD0);
  uint64_t v34 = v13;
  sub_1B68BA2B0(a1, a2, v12, a4, a5, a6, &v33);
  uint64_t v14 = v33;
  if (v6)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a2;
  }
  uint64_t v15 = (char *)v34;
  uint64_t v16 = *(void *)(v34 + 16);
  if (!v16) {
    return v33;
  }
  uint64_t v17 = v34 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  a2 = v14;
  while (1)
  {
    uint64_t v19 = *(void *)(v17 + 8 * v18);
    if (*(void *)(v14 + 16))
    {
      sub_1B62C1A30(*(void *)(v17 + 8 * v18));
      if (v20) {
        swift_retain();
      }
    }
    _s11DeletedNodeCMa(0);
    uint64_t v21 = swift_dynamicCastClass();
    swift_release();
    if (!v21) {
      goto LABEL_5;
    }
    unint64_t v22 = sub_1B62C1A30(v19);
    if ((v23 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = a2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6ACCBD0();
      a2 = v35;
    }
    sub_1B6AC89D0(v24, a2);
    swift_bridgeObjectRelease();
    uint64_t v26 = *((void *)v15 + 2);
    if (!v26) {
      goto LABEL_21;
    }
    uint64_t v27 = 0;
    if (v26 == 1 || *((void *)v15 + 4) == v19) {
      goto LABEL_22;
    }
    if (*((void *)v15 + 5) != v19)
    {
      uint64_t v28 = 0;
      uint64_t v29 = v26 - 2;
      while (v29 != v28)
      {
        uint64_t v30 = *(void *)&v15[8 * v28++ + 48];
        if (v30 == v19)
        {
          uint64_t v27 = v28 + 1;
          goto LABEL_22;
        }
      }
LABEL_21:
      uint64_t v27 = 0;
      goto LABEL_22;
    }
    uint64_t v27 = 1;
LABEL_22:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_1B6C166F8((uint64_t)v15);
    }
    uint64_t v31 = *((void *)v15 + 2) - 1;
    if (v31 - v27 < 0) {
      break;
    }
    memmove(&v15[8 * v27 + 32], &v15[8 * v27 + 40], 8 * (v31 - v27));
    *((void *)v15 + 2) = v31;
    swift_release();
LABEL_5:
    if (++v18 == v16) {
      goto LABEL_2;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68B7684(void (*a1)(void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D5708;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v23[0] = a3;
  v23[1] = v20;
  v23[2] = a8;
  v23[3] = sub_1B68D5088;
  v23[4] = v19;
  void v23[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(v23);
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1B68B7810(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D69AC;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D4F6C;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(&v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v23) {
    return v25;
  }
  return result;
}

uint64_t sub_1B68B79A4(void (*a1)(void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D5070;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v23[0] = a3;
  v23[1] = v20;
  v23[2] = a8;
  v23[3] = sub_1B68D5088;
  v23[4] = v19;
  void v23[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(v23);
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1B68B7B30(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D5E88;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D4F6C;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(&v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v23) {
    return v25;
  }
  return result;
}

uint64_t sub_1B68B7CC4(void (*a1)(void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D5E2C;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v23[0] = a3;
  v23[1] = v20;
  v23[2] = a8;
  v23[3] = sub_1B68D576C;
  v23[4] = v19;
  void v23[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(v23);
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1B68B7E50(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D5D10;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D4F6C;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(&v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v23) {
    return v25;
  }
  return result;
}

uint64_t sub_1B68B7FE4(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D6A28;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D4F6C;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(&v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v23) {
    return v25;
  }
  return result;
}

uint64_t sub_1B68B8178(void (*a1)(void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D6180;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v23[0] = a3;
  v23[1] = v20;
  v23[2] = a8;
  v23[3] = sub_1B68D576C;
  v23[4] = v19;
  void v23[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(v23);
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1B68B8304(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D5F40;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D5FD0;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v21 = v25[3];
  a1(v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v21) {
    return v25[0];
  }
  return result;
}

uint64_t sub_1B68B8498(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D6D28;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D4F6C;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(&v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v23) {
    return v25;
  }
  return result;
}

uint64_t sub_1B68B862C(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D4F54;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D4F6C;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(&v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v23) {
    return v25;
  }
  return result;
}

uint64_t sub_1B68B87C0(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, char a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v17 = a4 & 1;
  swift_retain();
  sub_1B68D4F20(a5, (uint64_t (*)(unint64_t))sub_1B66456F8);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a5;
  *(unsigned char *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  *(void *)(v18 + 48) = a3;
  *(void *)(v18 + 56) = a8;
  *(_OWORD *)(v18 + 64) = a9;
  *(void *)(v18 + 80) = a10;
  *(void *)(v18 + 88) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B68D55CC;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = *a12;
  v24[0] = a3;
  v24[1] = v20;
  v24[2] = a8;
  v24[3] = sub_1B68D4F6C;
  void v24[4] = v19;
  unint64_t v24[5] = a11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  a1(&v25, v24);
  swift_release();
  swift_release_n();
  uint64_t result = swift_release();
  if (!v23) {
    return v25;
  }
  return result;
}

uint64_t sub_1B68B8954(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2)
  {
    if (!*(void *)(*(void *)a5 + 16) || (uint64_t result = sub_1B62C1A30(a1), (v19 & 1) == 0))
    {
      swift_retain();
      a12(a1, 1, a3, a4 & 1, a7, a8, a9, a10, a5, a11);
      return swift_release();
    }
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68B8AA4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2)
  {
    uint64_t v16 = *a5;
    if (*(void *)(*a5 + 16) && (unint64_t v17 = sub_1B62C1A30(a1), (v18 & 1) != 0))
    {
      char v19 = (uint64_t *)(*(void *)(v16 + 56) + 88 * v17);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      uint64_t v24 = v19[4];
      uint64_t v25 = v19[5];
      uint64_t v26 = v19[6];
      uint64_t v27 = v19[7];
      uint64_t v28 = v19[8];
      uint64_t v29 = v19[9];
      uint64_t v30 = v19[10];
      *a8 = v20;
      a8[1] = v21;
      a8[2] = v22;
      a8[3] = v23;
      a8[4] = v24;
      a8[5] = v25;
      a8[6] = v26;
      a8[7] = v27;
      a8[8] = v28;
      a8[9] = v29;
      a8[10] = v30;
      return sub_1B67FBA04(v20);
    }
    else
    {
      swift_retain();
      sub_1B68AEAB4(a8, a1, 1, a3, a4 & 1, a6, a7, a9, a10, a5, a11);
      return swift_release();
    }
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68B8C4C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))
{
  if (a2)
  {
    uint64_t v18 = *a5;
    if (*(void *)(*a5 + 16) && (unint64_t v19 = sub_1B62C1A30(a1), (v20 & 1) != 0))
    {
      uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
    }
    else
    {
      swift_retain();
      uint64_t v21 = a12(a1, 1, a3, a4 & 1, a7, a8, a9, a10, a5, a11);
      swift_release();
    }
    return v21;
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68B8DAC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2)
  {
    uint64_t v18 = *a5;
    if (*(void *)(*a5 + 16) && (unint64_t v19 = sub_1B62C1A30(a1), (v20 & 1) != 0))
    {
      uint64_t v21 = *(void *)(v18 + 56) + 152 * v19;
      long long v22 = *(_OWORD *)(v21 + 16);
      v34[0] = *(_OWORD *)v21;
      v34[1] = v22;
      long long v23 = *(_OWORD *)(v21 + 80);
      long long v25 = *(_OWORD *)(v21 + 32);
      long long v24 = *(_OWORD *)(v21 + 48);
      v34[4] = *(_OWORD *)(v21 + 64);
      v34[5] = v23;
      _OWORD v34[2] = v25;
      v34[3] = v24;
      long long v26 = *(_OWORD *)(v21 + 96);
      long long v27 = *(_OWORD *)(v21 + 112);
      long long v28 = *(_OWORD *)(v21 + 128);
      char v35 = *(unsigned char *)(v21 + 144);
      v34[7] = v27;
      v34[8] = v28;
      void v34[6] = v26;
      long long v29 = *(_OWORD *)(v21 + 112);
      *(_OWORD *)(a8 + 96) = *(_OWORD *)(v21 + 96);
      *(_OWORD *)(a8 + 112) = v29;
      *(_OWORD *)(a8 + 128) = *(_OWORD *)(v21 + 128);
      *(unsigned char *)(a8 + 144) = *(unsigned char *)(v21 + 144);
      long long v30 = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(a8 + 32) = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(a8 + 48) = v30;
      long long v31 = *(_OWORD *)(v21 + 80);
      *(_OWORD *)(a8 + 64) = *(_OWORD *)(v21 + 64);
      *(_OWORD *)(a8 + 80) = v31;
      long long v32 = *(_OWORD *)(v21 + 16);
      *(_OWORD *)a8 = *(_OWORD *)v21;
      *(_OWORD *)(a8 + 16) = v32;
      return sub_1B62CA090((uint64_t)v34);
    }
    else
    {
      swift_retain();
      sub_1B68AFB40((void *)a8, a1, 1, a3, a4 & 1, a6, a7, a9, a10, a5, a11);
      return swift_release();
    }
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68B8F68(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2)
  {
    uint64_t v17 = *a5;
    if (*(void *)(*a5 + 16) && (unint64_t v18 = sub_1B62C1A30(a1), (v19 & 1) != 0))
    {
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 16 * v18);
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
      uint64_t v20 = sub_1B68B020C(a1, 1, a3, a4 & 1, a7, a8, a9, a10, a5, a11);
      swift_release();
    }
    return v20;
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68B90C4(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))
{
  if (a2)
  {
    uint64_t v18 = *a5;
    if (*(void *)(*a5 + 16) && (unint64_t v19 = sub_1B62C1A30(a1), (v20 & 1) != 0))
    {
      uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
    }
    else
    {
      swift_retain();
      uint64_t v21 = a12(a1, 1, a3, a4 & 1, a7, a8, a9, a10, a5, a11);
      swift_release();
    }
    return v21;
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68B9224(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))
{
  if (a2)
  {
    uint64_t v18 = *a5;
    if (*(void *)(*a5 + 16))
    {
      unint64_t v19 = sub_1B62C1A30(a1);
      if (v20) {
        return *(void *)(*(void *)(v18 + 56) + 8 * v19);
      }
    }
    swift_retain();
    uint64_t v21 = a12(a1, 1, a3, a4 & 1, a7, a8, a9, a10, a5, a11);
    swift_release();
    return v21;
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68B937C(uint64_t a1, uint64_t a2, char a3, unint64_t a4, char a5, unint64_t a6, uint64_t *a7)
{
  unint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  v41[1] = *MEMORY[0x1E4F143B8];
  unint64_t v12 = *(void *)(v7 + 24);
  swift_bridgeObjectRetain();
  if (a4 != 0x1000000000000000)
  {
    uint64_t v13 = sub_1B68C99A4(v12);
    swift_bridgeObjectRelease();
    unint64_t v12 = v13;
  }
  unint64_t v40 = MEMORY[0x1E4FBC860];
  v41[0] = (uint64_t)sub_1B67F46A8(MEMORY[0x1E4FBC860]);
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v14) {
      goto LABEL_5;
    }
LABEL_14:
    uint64_t v19 = swift_bridgeObjectRelease_n();
    unint64_t v21 = MEMORY[0x1E4FBC860];
LABEL_15:
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1B6E32C18();
      uint64_t v19 = swift_bridgeObjectRelease();
      if (!v31) {
        goto LABEL_18;
      }
    }
    else if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_18:
      long long v23 = v38;
      uint64_t v24 = *v38;
      uint64_t v25 = v38[1];
      MEMORY[0x1F4188790](v19, v20);
      void v32[2] = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1B68CA0B4(v24, v25, sub_1B68D698C, (uint64_t)v32, (uint64_t)v39, (void (*)(BOOL, unint64_t, uint64_t))sub_1B6C3C574);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_1B6BA175C(v26);
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *long long v23 = v27;
      v23[1] = v29;
      goto LABEL_19;
    }
    unint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1B66415C8(v22);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_1B6E32C18();
  if (!v14) {
    goto LABEL_14;
  }
LABEL_5:
  v32[5] = v7 + 24;
  uint64_t v33 = v14;
  uint64_t v15 = 0;
  int v34 = a3 & 1;
  unint64_t v16 = v12 & 0xC000000000000001;
  unint64_t v17 = v12;
  while (1)
  {
    if (v16)
    {
      uint64_t v18 = MEMORY[0x1BA9B4580](v15, v12);
    }
    else
    {
      uint64_t v18 = *(void *)(v12 + 8 * v15 + 32);
      swift_retain();
    }
    sub_1B68ADB30(v18, v34, a4, a5 & 1, v37, v35, v36, v41, v38, (uint64_t)&v40);
    if (v8) {
      break;
    }
    swift_release();
    swift_release();
    ++v15;
    unint64_t v12 = v17;
    if (v33 == v15)
    {
      uint64_t v19 = swift_bridgeObjectRelease_n();
      unint64_t v21 = v40;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68B96F0(uint64_t a1, uint64_t a2, char a3, unint64_t a4, char a5, unint64_t a6, uint64_t a7)
{
  v28[1] = *MEMORY[0x1E4F143B8];
  unint64_t v11 = *(void *)(v7 + 24);
  unint64_t v27 = MEMORY[0x1E4FBC860];
  v28[0] = (uint64_t)sub_1B67F46A8(MEMORY[0x1E4FBC860]);
  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v12) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
    unint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_13:
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_15;
      }
    }
    else if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_15:
      sub_1B66415C8(v19);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1B6E32C18();
  if (!v12) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v13 = 0;
  char v14 = a3 & 1;
  unint64_t v15 = v11 & 0xC000000000000001;
  char v16 = a5 & 1;
  unint64_t v17 = v11;
  while (1)
  {
    if (v15)
    {
      uint64_t v18 = MEMORY[0x1BA9B4580](v13, v11);
    }
    else
    {
      uint64_t v18 = *(void *)(v11 + 8 * v13 + 32);
      swift_retain();
    }
    sub_1B68AD6B0(v18, v14, a4, v16, a6, a1, a2, v28, a7, (uint64_t)&v27);
    if (v8) {
      break;
    }
    swift_release();
    ++v13;
    unint64_t v11 = v17;
    if (v12 == v13)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v19 = v27;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68B9930(uint64_t a1, uint64_t a2, char a3, unint64_t a4, char a5, unint64_t a6, uint64_t *a7)
{
  v28[1] = *MEMORY[0x1E4F143B8];
  unint64_t v11 = *(void *)(v7 + 16);
  unint64_t v27 = MEMORY[0x1E4FBC860];
  v28[0] = (uint64_t)sub_1B67F46A8(MEMORY[0x1E4FBC860]);
  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v12) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
    unint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_13:
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_15;
      }
    }
    else if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_15:
      sub_1B66415E0(v19);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1B6E32C18();
  if (!v12) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v13 = 0;
  char v14 = a3 & 1;
  unint64_t v15 = v11 & 0xC000000000000001;
  char v16 = a5 & 1;
  unint64_t v17 = v11;
  while (1)
  {
    if (v15)
    {
      uint64_t v18 = (void *)MEMORY[0x1BA9B4580](v13, v11);
    }
    else
    {
      uint64_t v18 = *(void **)(v11 + 8 * v13 + 32);
      swift_retain();
    }
    sub_1B68AE06C(v18, v14, a4, v16, a6, a1, a2, v28, a7, (uint64_t)&v27);
    if (v8) {
      break;
    }
    swift_release();
    ++v13;
    unint64_t v11 = v17;
    if (v12 == v13)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v19 = v27;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68B9B70(uint64_t a1, uint64_t a2, int a3, unint64_t a4, char a5, unint64_t a6, uint64_t a7)
{
  uint64_t v9 = v8;
  unint64_t v36 = a6;
  uint64_t v37 = a7;
  char v10 = a5;
  char v12 = a3;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  v40[1] = *MEMORY[0x1E4F143B8];
  uint64_t v38 = v7;
  unint64_t v13 = *(void *)(v7 + 16);
  unint64_t v14 = MEMORY[0x1E4FBC860];
  if (a4 == 0x1000000000000000)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  LODWORD(v33) = a3;
  v40[0] = MEMORY[0x1E4FBC860];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  MEMORY[0x1F4188790](v16, v17);
  void v32[6] = v40;
  MEMORY[0x1F4188790](v18, v19);
  void v32[2] = sub_1B68D6D5C;
  v32[3] = v20;
  swift_bridgeObjectRetain_n();
  v39[0] = sub_1B68C967C(v14);
  v39[1] = v21;
  sub_1B68B9930((uint64_t)sub_1B68D4E40, (uint64_t)v32, 1, 0x1000000000000000uLL, 0, v14, v39);
  if (!v8)
  {
    uint64_t v9 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v13 = v40[0];
    char v10 = a5;
    char v12 = v33;
    unint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_5:
    v39[0] = (uint64_t)sub_1B67F46A8(v14);
    v40[0] = v14;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_1B6E32C18();
      if (v22)
      {
LABEL_7:
        v32[9] = v7 + 16;
        unint64_t v33 = a4;
        uint64_t v23 = 0;
        char v24 = v12 & 1;
        unint64_t v25 = v13 & 0xC000000000000001;
        uint64_t v26 = v10 & 1;
        unint64_t v27 = v13;
        while (1)
        {
          if (v25)
          {
            uint64_t v28 = (void *)MEMORY[0x1BA9B4580](v23, v13);
          }
          else
          {
            uint64_t v28 = *(void **)(v13 + 8 * v23 + 32);
            swift_retain();
          }
          sub_1B68AE548(v28, v24, v33, v26, v36, v34, v35, v39, v37, (uint64_t)v40);
          if (v9) {
            break;
          }
          swift_release();
          swift_release();
          ++v23;
          unint64_t v13 = v27;
          if (v22 == v23)
          {
            swift_bridgeObjectRelease_n();
            unint64_t v29 = v40[0];
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v22) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
    unint64_t v29 = MEMORY[0x1E4FBC860];
LABEL_17:
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_19;
      }
    }
    else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_19:
      sub_1B66415E0(v29);
LABEL_22:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B68B9F4C(uint64_t a1, uint64_t a2, int a3, unint64_t a4, int a5, unint64_t a6, uint64_t *a7)
{
  uint64_t v9 = v8;
  uint64_t v30 = a2;
  uint64_t v31 = a7;
  unint64_t v10 = a6;
  int v32 = a5;
  char v12 = a3;
  uint64_t v13 = a1;
  v35[1] = *MEMORY[0x1E4F143B8];
  uint64_t v14 = *(void *)(v7 + 16);
  v35[0] = v14;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  if (a4 == 0x1000000000000000)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  int v27 = a3;
  uint64_t v28 = a1;
  unint64_t v29 = a6;
  unint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v16 = swift_allocObject();
  uint64_t v26 = (uint64_t)&v26;
  *(void *)(v16 + 16) = v14;
  MEMORY[0x1F4188790](v16, v17);
  void v25[6] = &v34;
  MEMORY[0x1F4188790](v18, v19);
  v25[2] = sub_1B68D6D5C;
  void v25[3] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v33[0] = sub_1B68C967C(v15);
  v33[1] = v21;
  sub_1B68B9930((uint64_t)sub_1B68D4E40, (uint64_t)v25, 1, 0x1000000000000000uLL, 0, v15, v33);
  if (!v9)
  {
    uint64_t v9 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v35[0] = v34;
    uint64_t v13 = v28;
    unint64_t v10 = v29;
    char v12 = v27;
LABEL_5:
    v33[0] = (uint64_t)sub_1B67F46A8(v15);
    unint64_t v34 = v15;
    sub_1B68BB79C((uint64_t)&v34, v35, v7, v12 & 1, a4, v32 & 1, v10, v13, v30, v33, v31);
    unint64_t v22 = v34;
    if (v9)
    {
LABEL_6:
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_6;
      }
    }
    else if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    sub_1B66415E0(v22);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B68BA250(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  return sub_1B68BAE9C(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, unint64_t *))sub_1B68AF0EC);
}

uint64_t sub_1B68BA2B0(uint64_t a1, uint64_t a2, int a3, unint64_t a4, int a5, unint64_t a6, uint64_t *a7)
{
  uint64_t v9 = v8;
  uint64_t v50 = a7;
  uint64_t v47 = a2;
  unint64_t v48 = a6;
  char v10 = a5;
  char v12 = a3;
  uint64_t v46 = a1;
  v53[1] = *MEMORY[0x1E4F143B8];
  uint64_t v49 = v7;
  unint64_t v13 = *(void *)(v7 + 16);
  unint64_t v14 = MEMORY[0x1E4FBC860];
  if (a4 == 0x1000000000000000)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  LODWORD(v45) = a3;
  LODWORD(v44) = a5;
  v53[0] = MEMORY[0x1E4FBC860];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  MEMORY[0x1F4188790](v15, v16);
  unsigned int v43 = v53;
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v41[2] = sub_1B68D6D5C;
  v41[3] = v19;
  swift_bridgeObjectRetain_n();
  v52[0] = sub_1B68C967C(v14);
  v52[1] = v20;
  sub_1B68B9930((uint64_t)sub_1B68D4E40, (uint64_t)v41, 1, 0x1000000000000000uLL, 0, v14, v52);
  if (!v8)
  {
    uint64_t v9 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v13 = v53[0];
    char v10 = v44;
    char v12 = v45;
LABEL_5:
    v52[0] = (uint64_t)sub_1B67F46A8(v14);
    v53[0] = v14;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v21 = sub_1B6E32C18();
      if (v21)
      {
LABEL_7:
        uint64_t v44 = v7 + 16;
        unint64_t v45 = a4;
        uint64_t v22 = 0;
        char v23 = v12 & 1;
        unint64_t v24 = v13;
        unint64_t v25 = v13 & 0xC000000000000001;
        char v26 = v10 & 1;
        while (1)
        {
          if (v25)
          {
            int v27 = (void *)MEMORY[0x1BA9B4580](v22, v24);
          }
          else
          {
            int v27 = *(void **)(v24 + 8 * v22 + 32);
            swift_retain();
          }
          sub_1B68AF60C(v27, v23, v45, v26, v48, v46, v47, v52, v50, (uint64_t)v53);
          if (v9) {
            break;
          }
          swift_release();
          swift_release();
          if (v21 == ++v22)
          {
            uint64_t v28 = swift_bridgeObjectRelease_n();
            unint64_t v30 = v53[0];
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v21) {
        goto LABEL_7;
      }
    }
    uint64_t v28 = swift_bridgeObjectRelease_n();
    unint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_17:
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1B6E32C18();
      uint64_t v28 = swift_bridgeObjectRelease();
      if (!v40) {
        goto LABEL_20;
      }
    }
    else if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_20:
      int v32 = v50;
      uint64_t v33 = *v50;
      uint64_t v34 = v50[1];
      MEMORY[0x1F4188790](v28, v29);
      unsigned int v43 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1B68CA0B4(v33, v34, sub_1B68D6A08, (uint64_t)&v42, (uint64_t)v51, (void (*)(BOOL, unint64_t, uint64_t))sub_1B6C3C748);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = sub_1B6BA1ECC(v35);
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t *v32 = v36;
      v32[1] = v38;
LABEL_21:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    unint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_1B66415E0(v31);
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B68BA75C(uint64_t a1, uint64_t a2, int a3, unint64_t a4, int a5, unint64_t a6, uint64_t *a7)
{
  uint64_t v9 = v8;
  uint64_t v30 = a2;
  unint64_t v31 = a7;
  unint64_t v10 = a6;
  int v32 = a5;
  char v12 = a3;
  uint64_t v13 = a1;
  v35[1] = *MEMORY[0x1E4F143B8];
  uint64_t v14 = *(void *)(v7 + 16);
  v35[0] = v14;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  if (a4 == 0x1000000000000000)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  int v27 = a3;
  uint64_t v28 = a1;
  unint64_t v29 = a6;
  unint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v16 = swift_allocObject();
  uint64_t v26 = (uint64_t)&v26;
  *(void *)(v16 + 16) = v14;
  MEMORY[0x1F4188790](v16, v17);
  void v25[6] = &v34;
  MEMORY[0x1F4188790](v18, v19);
  v25[2] = sub_1B68D6D5C;
  void v25[3] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  v33[0] = sub_1B68C967C(v15);
  v33[1] = v21;
  sub_1B68B9930((uint64_t)sub_1B68D4E40, (uint64_t)v25, 1, 0x1000000000000000uLL, 0, v15, v33);
  if (!v9)
  {
    uint64_t v9 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v35[0] = v34;
    uint64_t v13 = v28;
    unint64_t v10 = v29;
    char v12 = v27;
LABEL_5:
    v33[0] = (uint64_t)sub_1B67F46A8(v15);
    unint64_t v34 = v15;
    sub_1B68BB938((uint64_t)&v34, v35, v7, v12 & 1, a4, v32 & 1, v10, v13, v30, v33, v31);
    unint64_t v22 = v34;
    if (v9)
    {
LABEL_6:
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_6;
      }
    }
    else if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    sub_1B66415E0(v22);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B68BAA60(uint64_t a1, uint64_t a2, int a3, unint64_t a4, char a5, unint64_t a6, uint64_t a7)
{
  uint64_t v9 = v8;
  unint64_t v36 = a6;
  uint64_t v37 = a7;
  char v10 = a5;
  char v12 = a3;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  v40[1] = *MEMORY[0x1E4F143B8];
  uint64_t v38 = v7;
  unint64_t v13 = *(void *)(v7 + 16);
  unint64_t v14 = MEMORY[0x1E4FBC860];
  if (a4 == 0x1000000000000000)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  LODWORD(v33) = a3;
  v40[0] = MEMORY[0x1E4FBC860];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  MEMORY[0x1F4188790](v16, v17);
  void v32[6] = v40;
  MEMORY[0x1F4188790](v18, v19);
  void v32[2] = sub_1B68D6D5C;
  v32[3] = v20;
  swift_bridgeObjectRetain_n();
  v39[0] = sub_1B68C967C(v14);
  v39[1] = v21;
  sub_1B68B9930((uint64_t)sub_1B68D4E40, (uint64_t)v32, 1, 0x1000000000000000uLL, 0, v14, v39);
  if (!v8)
  {
    uint64_t v9 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v13 = v40[0];
    char v10 = a5;
    char v12 = v33;
    unint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_5:
    v39[0] = (uint64_t)sub_1B67F46A8(v14);
    v40[0] = v14;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_1B6E32C18();
      if (v22)
      {
LABEL_7:
        v32[9] = v7 + 16;
        unint64_t v33 = a4;
        uint64_t v23 = 0;
        char v24 = v12 & 1;
        unint64_t v25 = v13 & 0xC000000000000001;
        char v26 = v10 & 1;
        unint64_t v27 = v13;
        while (1)
        {
          if (v25)
          {
            uint64_t v28 = (void *)MEMORY[0x1BA9B4580](v23, v13);
          }
          else
          {
            uint64_t v28 = *(void **)(v13 + 8 * v23 + 32);
            swift_retain();
          }
          sub_1B68B020C(v28, v24, v33, v26, v36, v34, v35, v39, v37, (uint64_t)v40);
          if (v9) {
            break;
          }
          swift_release();
          swift_bridgeObjectRelease();
          ++v23;
          unint64_t v13 = v27;
          if (v22 == v23)
          {
            swift_bridgeObjectRelease_n();
            unint64_t v29 = v40[0];
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v22) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
    unint64_t v29 = MEMORY[0x1E4FBC860];
LABEL_17:
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_19;
      }
    }
    else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_19:
      sub_1B66415E0(v29);
LABEL_22:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B68BAE3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  return sub_1B68BAE9C(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, unint64_t *))sub_1B68B0770);
}

uint64_t sub_1B68BAE9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, unint64_t *))
{
  v31[1] = *MEMORY[0x1E4F143B8];
  unint64_t v13 = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  if (a4 != 0x1000000000000000)
  {
    uint64_t v14 = sub_1B68C99A4(v13);
    swift_bridgeObjectRelease();
    unint64_t v13 = v14;
  }
  unint64_t v30 = MEMORY[0x1E4FBC860];
  v31[0] = sub_1B67F46A8(MEMORY[0x1E4FBC860]);
  if (!(v13 >> 62))
  {
    uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v15) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();
    unint64_t v21 = MEMORY[0x1E4FBC860];
LABEL_15:
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_17;
      }
    }
    else if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_17:
      sub_1B66415C8(v21);
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1B6E32C18();
  if (!v15) {
    goto LABEL_14;
  }
LABEL_5:
  uint64_t v24 = a4;
  uint64_t v16 = 0;
  unint64_t v17 = v13 & 0xC000000000000001;
  uint64_t v18 = a5 & 1;
  unint64_t v19 = v13;
  while (1)
  {
    if (v17)
    {
      uint64_t v20 = MEMORY[0x1BA9B4580](v16, v13);
    }
    else
    {
      uint64_t v20 = *(void *)(v13 + 8 * v16 + 32);
      swift_retain();
    }
    a8(v20, a3 & 1, v24, v18, a6, a1, a2, v31, a7, &v30);
    if (v9) {
      break;
    }
    swift_release();
    swift_release();
    ++v16;
    unint64_t v13 = v19;
    if (v15 == v16)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v21 = v30;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68BB144(uint64_t a1, uint64_t a2, int a3, unint64_t a4, char a5, unint64_t a6, uint64_t a7)
{
  uint64_t v9 = v8;
  unint64_t v36 = a6;
  uint64_t v37 = a7;
  char v10 = a5;
  char v12 = a3;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  v40[1] = *MEMORY[0x1E4F143B8];
  uint64_t v38 = v7;
  unint64_t v13 = *(void *)(v7 + 16);
  unint64_t v14 = MEMORY[0x1E4FBC860];
  if (a4 == 0x1000000000000000)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  LODWORD(v33) = a3;
  v40[0] = MEMORY[0x1E4FBC860];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  MEMORY[0x1F4188790](v16, v17);
  void v32[6] = v40;
  MEMORY[0x1F4188790](v18, v19);
  void v32[2] = sub_1B68D6D5C;
  v32[3] = v20;
  swift_bridgeObjectRetain_n();
  v39[0] = sub_1B68C967C(v14);
  v39[1] = v21;
  sub_1B68B9930((uint64_t)sub_1B68D4E40, (uint64_t)v32, 1, 0x1000000000000000uLL, 0, v14, v39);
  if (!v8)
  {
    uint64_t v9 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v13 = v40[0];
    char v10 = a5;
    char v12 = v33;
    unint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_5:
    v39[0] = (uint64_t)sub_1B67F46A8(v14);
    v40[0] = v14;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_1B6E32C18();
      if (v22)
      {
LABEL_7:
        v32[9] = v7 + 16;
        unint64_t v33 = a4;
        uint64_t v23 = 0;
        char v24 = v12 & 1;
        unint64_t v25 = v13 & 0xC000000000000001;
        char v26 = v10 & 1;
        unint64_t v27 = v13;
        while (1)
        {
          if (v25)
          {
            uint64_t v28 = (void *)MEMORY[0x1BA9B4580](v23, v13);
          }
          else
          {
            uint64_t v28 = *(void **)(v13 + 8 * v23 + 32);
            swift_retain();
          }
          sub_1B68B0CA4(v28, v24, v33, v26, v36, v34, v35, v39, v37, (uint64_t)v40);
          if (v9) {
            break;
          }
          swift_release();
          ++v23;
          unint64_t v13 = v27;
          if (v22 == v23)
          {
            swift_bridgeObjectRelease_n();
            unint64_t v29 = v40[0];
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v22) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
    unint64_t v29 = MEMORY[0x1E4FBC860];
LABEL_17:
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_19;
      }
    }
    else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_19:
      sub_1B66415E0(v29);
LABEL_22:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B68BB514(uint64_t a1, uint64_t a2, char a3, unint64_t a4, char a5, unint64_t a6, uint64_t a7)
{
  v31[1] = *MEMORY[0x1E4F143B8];
  unint64_t v12 = *(void *)(v7 + 24);
  swift_bridgeObjectRetain();
  if (a4 != 0x1000000000000000)
  {
    uint64_t v13 = sub_1B68C99A4(v12);
    swift_bridgeObjectRelease();
    unint64_t v12 = v13;
  }
  unint64_t v30 = MEMORY[0x1E4FBC860];
  v31[0] = (uint64_t)sub_1B67F46A8(MEMORY[0x1E4FBC860]);
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v14) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();
    unint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_15:
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_17;
      }
    }
    else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_17:
      sub_1B66415C8(v22);
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_1B6E32C18();
  if (!v14) {
    goto LABEL_14;
  }
LABEL_5:
  uint64_t v25 = v14;
  unint64_t v15 = a4;
  uint64_t v16 = 0;
  char v17 = a3 & 1;
  unint64_t v18 = v12 & 0xC000000000000001;
  char v19 = a5 & 1;
  unint64_t v20 = v12;
  while (1)
  {
    if (v18)
    {
      uint64_t v21 = MEMORY[0x1BA9B4580](v16, v12);
    }
    else
    {
      uint64_t v21 = *(void *)(v12 + 8 * v16 + 32);
      swift_retain();
    }
    sub_1B68B1174(v21, v17, v15, v19, a6, a1, a2, v31, a7, (uint64_t)&v30);
    if (v8) {
      break;
    }
    swift_release();
    ++v16;
    unint64_t v12 = v20;
    if (v25 == v16)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v22 = v30;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68BB79C(uint64_t a1, uint64_t *a2, uint64_t a3, char a4, unint64_t a5, char a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11)
{
  uint64_t v26 = a8;
  uint64_t v14 = *a2;
  if (!((unint64_t)*a2 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v15) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1B6E32C18();
  if (!v15) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  uint64_t v16 = 0;
  char v21 = a4 & 1;
  char v17 = a6 & 1;
  while (1)
  {
    uint64_t v18 = v15;
    if ((v14 & 0xC000000000000001) != 0)
    {
      char v19 = (void *)MEMORY[0x1BA9B4580](v16, v14);
    }
    else
    {
      char v19 = *(void **)(v14 + 8 * v16 + 32);
      swift_retain();
    }
    sub_1B68AEAB4(&v25, v19, v21, a5, v17, a7, v26, a9, a10, a11, a1);
    if (v11) {
      break;
    }
    ++v16;
    sub_1B6828908(v25);
    swift_release();
    uint64_t v15 = v18;
    if (v18 == v16) {
      return swift_bridgeObjectRelease_n();
    }
  }
  swift_bridgeObjectRelease_n();
  return swift_release();
}

uint64_t sub_1B68BB938(uint64_t a1, uint64_t *a2, uint64_t a3, char a4, unint64_t a5, char a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11)
{
  uint64_t v28 = a8;
  uint64_t v14 = *a2;
  if ((unint64_t)*a2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1B6E32C18();
    if (v15) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v15) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  uint64_t v16 = 0;
  uint64_t v20 = v15 - 1;
  char v17 = a6 & 1;
  if ((v14 & 0xC000000000000001) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v18 = MEMORY[0x1BA9B4580](v16, v14);
  while (1)
  {
    sub_1B68AFB40(v18, a4 & 1, a5, v17, a7, v28, a9, a10, (uint64_t)v26, a11, a1);
    if (v11) {
      break;
    }
    void v24[6] = v26[6];
    v24[7] = v26[7];
    v24[8] = v26[8];
    char v25 = v27;
    v24[2] = v26[2];
    v24[3] = v26[3];
    void v24[4] = v26[4];
    unint64_t v24[5] = v26[5];
    v24[0] = v26[0];
    v24[1] = v26[1];
    sub_1B62CA064((uint64_t)v24);
    swift_release();
    if (v20 == v16) {
      return swift_bridgeObjectRelease_n();
    }
    ++v16;
    if ((v14 & 0xC000000000000001) != 0) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v18 = *(void *)(v14 + 8 * v16 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease_n();
  return swift_release();
}

uint64_t sub_1B68BBAF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void (*v8)(void *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void v30[6];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  uint64_t v8 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a3 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                            + 152);
  uint64_t v9 = swift_retain();
  v8(v30, v9);
  char v10 = v30[0];
  uint64_t v35 = v30[1];
  unint64_t v36 = v30[0];
  sub_1B62D8C3C((uint64_t)&v35);
  uint64_t v34 = v30[2];
  sub_1B62D8C3C((uint64_t)&v34);
  unint64_t v33 = v30[3];
  sub_1B62D8C3C((uint64_t)&v33);
  int v32 = v30[4];
  sub_1B62D8C3C((uint64_t)&v32);
  unint64_t v31 = v30[5];
  sub_1B62D8C3C((uint64_t)&v31);
  uint64_t v11 = *(void *)(v10 + 16);
  sub_1B62D8C3C((uint64_t)&v36);
  unint64_t v12 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
  if (*(void *)(*(void *)(a3 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16) <= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(a3 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  }
  swift_retain();
  uint64_t v14 = sub_1B6D2AEA8(0, v13, a3);
  swift_release();
  uint64_t v15 = sub_1B68ABBEC(v14, a4);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v26 = v12;
    char v27 = a1;
    uint64_t v28 = a2;
    unint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1B6C3C530(0, v16, 0);
    char v17 = 0;
    uint64_t v18 = v29;
    char v19 = *(void *)(v29 + 16);
    uint64_t v20 = 16 * v19;
    do
    {
      char v21 = *(void *)(v15 + v17 + 32);
      if (v21) {
        unint64_t v22 = *(void *)(v15 + v17 + 40);
      }
      else {
        unint64_t v22 = 0;
      }
      uint64_t v23 = *(void *)(v29 + 24);
      swift_retain();
      if (v19 >= v23 >> 1) {
        sub_1B6C3C530(v23 > 1, v19 + 1, 1);
      }
      *(void *)(v29 + 16) = v19 + 1;
      char v24 = v29 + v20 + v17;
      *(void *)(v24 + 32) = v21;
      *(void *)(v24 + 40) = v22;
      v17 += 16;
      ++v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a2 = v28;
    unint64_t v12 = v26;
    a1 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a3 + v12) = v18;
  swift_bridgeObjectRelease();
  *a1 = a3;
  return a2;
}

uint64_t sub_1B68BBD30(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = *(void *)(a3 + 16);
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v6, 0);
    uint64_t v8 = 0;
    uint64_t v9 = v31;
    unint64_t v10 = *(void *)(v31 + 16);
    uint64_t v11 = 16 * v10;
    do
    {
      uint64_t v13 = *(void *)(v5 + v8 + 32);
      uint64_t v12 = *(void *)(v5 + v8 + 40);
      unint64_t v14 = *(void *)(v31 + 24);
      swift_retain();
      if (v10 >= v14 >> 1) {
        sub_1B6C3C644(v14 > 1, v10 + 1, 1);
      }
      *(void *)(v31 + 16) = v10 + 1;
      uint64_t v15 = v31 + v11 + v8;
      *(void *)(v15 + 32) = v13;
      *(void *)(v15 + 40) = v12;
      v8 += 16;
      ++v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v4 = a4;
  }
  else
  {
    swift_retain();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = sub_1B68AC9A8(v9, v4);
  swift_bridgeObjectRelease();
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    sub_1B6C3C614(0, v17, 0);
    uint64_t v18 = 0;
    uint64_t v19 = v7;
    unint64_t v20 = *(void *)(v7 + 16);
    uint64_t v21 = 16 * v20;
    do
    {
      uint64_t v23 = *(void *)(v16 + v18 + 32);
      uint64_t v22 = *(void *)(v16 + v18 + 40);
      unint64_t v24 = *(void *)(v19 + 24);
      swift_retain();
      if (v20 >= v24 >> 1) {
        sub_1B6C3C614(v24 > 1, v20 + 1, 1);
      }
      *(void *)(v19 + 16) = v20 + 1;
      uint64_t v25 = v19 + v21 + v18;
      *(void *)(v25 + 32) = v23;
      *(void *)(v25 + 40) = v22;
      v18 += 16;
      ++v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a3 + 16) = v19;
  swift_bridgeObjectRelease();
  *a1 = a3;
  return a2;
}

__n128 sub_1B68BBF54@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X5>, uint64_t *a6@<X6>, uint64_t a7@<X8>)
{
  type metadata accessor for ConstantNode(0);
  uint64_t v13 = swift_dynamicCastClass();
  uint64_t v41 = a3;
  if (v13)
  {
    sub_1B62CAAD8(v13 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)&v45);
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
  }
  sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  sub_1B6395A28(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  swift_retain();
  int v14 = swift_dynamicCast();
  int v15 = v14;
  if (v14)
  {
    uint64_t v34 = v54;
    uint64_t v36 = v55;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v34 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
  }
  v56.i8[0] = v14 ^ 1;
  swift_release();
  swift_retain();
  uint64_t v16 = (void *)sub_1B6C7EC68();
  swift_release();
  id v17 = objc_msgSend(v16, sel_nodeRef);

  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    sub_1B62CAAD8(v18 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)&v45);
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
  }
  swift_retain();
  if (swift_dynamicCast())
  {
    LOBYTE(v55) = 0;
    uint64_t v32 = v54;
  }
  else
  {
    uint64_t v32 = 0;
  }
  swift_release();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    sub_1B62CAAD8(v19 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)&v45);
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
  }
  swift_retain();
  uint64_t v39 = a2;
  unint64_t v20 = a6;
  if (swift_dynamicCast())
  {
    LOBYTE(v55) = 0;
    uint64_t v21 = v54;
  }
  else
  {
    uint64_t v21 = 0;
  }
  swift_release();
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    sub_1B62CAAD8(v22 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)&v45);
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
  }
  uint64_t v23 = v41;
  swift_retain();
  if (swift_dynamicCast())
  {
    char v24 = v54 & 1;
  }
  else
  {
    char v24 = 0;
    LOBYTE(v54) = 2;
  }
  uint64_t v25 = swift_release();
  if (v41)
  {
    uint64_t v26 = a4;
    if (a4) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v25 = static RGResource.null.getter(v25);
    uint64_t v23 = v25;
    uint64_t v26 = a4;
    if (a4) {
      goto LABEL_27;
    }
  }
  uint64_t v26 = static RGResource.null.getter(v25);
LABEL_27:
  v27.i64[0] = v34;
  v27.i64[1] = v36;
  if (v15) {
    unsigned int v28 = -1;
  }
  else {
    unsigned int v28 = 0;
  }
  LOWORD(v54) = 257;
  BYTE2(v54) = v24;
  int8x16_t v56 = vandq_s8(v27, (int8x16_t)vdupq_n_s32(v28));
  id v57 = v17;
  uint64_t v58 = v32;
  uint64_t v59 = v21;
  sub_1B6561BEC(v20, a1, v39, (uint64_t)&v54, v23, v26, a5, (uint64_t)&v45);
  uint64_t v29 = v53;
  long long v42 = v46;
  long long v44 = v45;
  long long v38 = v48;
  long long v40 = v47;
  long long v35 = v50;
  long long v37 = v49;
  __n128 v31 = v52;
  long long v33 = v51;

  *(_OWORD *)a7 = v44;
  *(_OWORD *)(a7 + 16) = v42;
  *(_OWORD *)(a7 + 32) = v40;
  *(_OWORD *)(a7 + 48) = v38;
  *(_OWORD *)(a7 + 64) = v37;
  *(_OWORD *)(a7 + 80) = v35;
  __n128 result = v31;
  *(_OWORD *)(a7 + 96) = v33;
  *(__n128 *)(a7 + 112) = v31;
  *(void *)(a7 + 128) = v29;
  return result;
}

id sub_1B68BC3AC()
{
  uint64_t v0 = (void *)sub_1B68BC3D4();

  return v0;
}

uint64_t sub_1B68BC3D4()
{
  type metadata accessor for AuthoringGraph();
  uint64_t v0 = (void *)swift_allocObject();
  unint64_t v1 = MEMORY[0x1E4FBC860];
  v0[2] = 0;
  v0[3] = v1;
  v0[4] = 0;
  v0[5] = 0;
  v0[6] = sub_1B67DD1F0(v1);
  type metadata accessor for PresentNode(0);
  uint64_t v2 = (void *)swift_allocObject();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = v1;
  sub_1B6E31108();
  uint64_t v3 = sub_1B6D28564(sub_1B68BC84C, 0, sub_1B666EF30, 0);
  swift_release();
  sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E78130;
  *(void *)(inited + 32) = v3;
  unint64_t v18 = inited;
  sub_1B6E31C48();
  sub_1B62CAC44(0, &qword_1E9DD1C68, (uint64_t (*)(uint64_t))sub_1B68C8E7C, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  uint64_t v6 = sub_1B68AD108(v18);
  swift_bridgeObjectRelease();
  *(void *)(v5 + 32) = v6;
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = MEMORY[0x1BA9B4590](0, v7, 1, v1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v8;
  if (*(void *)(v6 + 16))
  {
    unint64_t v9 = v8 + 8 * *(void *)(v8 + 16) + 32;
    if (v6 + 32 < v9 + 8 * v7 && v9 < v6 + 32 + 8 * v7)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    sub_1B68C8EB0(0);
    swift_arrayInitWithCopy();
    if (v7) {
      *(void *)(v19 + 16) += v7;
    }
  }
  swift_bridgeObjectRelease();
  sub_1B6E31C48();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v19 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v11; ++i)
    {
      if (*(void *)(v19 + 8 * i + 32))
      {
        uint64_t v13 = swift_retain();
        MEMORY[0x1BA9B3870](v13);
        if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B6E31C78();
        }
        sub_1B6E31CC8();
        sub_1B6E31C48();
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B68C8E7C(0);
  swift_arrayDestroy();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_19:
      uint64_t v15 = 0;
      do
      {
        if ((v1 & 0xC000000000000001) != 0) {
          MEMORY[0x1BA9B4580](v15, v1);
        }
        else {
          swift_retain();
        }
        uint64_t v16 = swift_retain();
        MEMORY[0x1BA9B3870](v16);
        if (*(void *)((v0[3] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[3] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B6E31C78();
        }
        ++v15;
        sub_1B6E31CC8();
        sub_1B6E31C48();
        swift_release();
      }
      while (v14 != v15);
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  sub_1B687CA64(1, 1);
  return (uint64_t)v0;
}

uint64_t sub_1B68BC84C()
{
  v11[7] = *MEMORY[0x1E4F143B8];
  sub_1B62CAC44(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8, v1);
  uint64_t v3 = (char *)v11 - v2;
  type metadata accessor for RenderWorldNode(0);
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  v4[3] = 0;
  v4[4] = 0;
  v4[2] = v5;
  sub_1B6E31108();
  sub_1B68D5C4C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  uint64_t v7 = sub_1B6E31118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  type metadata accessor for AuthoringNode();
  swift_allocObject();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1B6CE3580(v8, v5, (uint64_t)v3, 0, 0xF000000000000000);
  swift_release();
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = 0;
  swift_release();
  v11[0] = v5;
  sub_1B6641EA4(inited);
  return v11[0];
}

void *sub_1B68BCA18()
{
  swift_unknownObjectRetain();
  uint64_t v0 = sub_1B6D413A0(1);
  swift_unknownObjectRelease();

  return v0;
}

uint64_t CFXRGAuthoringGraphCompile(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  swift_unknownObjectRetain();
  LOBYTE(a4) = CFXRGAuthoringGraphCompile(_:_:_:_:)(v7, a2, a3, a4);

  swift_unknownObjectRelease();
  return a4 & 1;
}

uint64_t CFXRGAuthoringGraphCompile(_:_:_:_:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  sub_1B62E17B4();
  uint64_t v42 = v8;
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v41 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1B6E31098();
  MEMORY[0x1F4188790](v40, v11);
  uint64_t v39 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (objc_class *)type metadata accessor for RenderGraphDiagnostics();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  *(void *)&v14[OBJC_IVAR____TtC3VFX22RenderGraphDiagnostics_rendererInfo] = 0;
  uint64_t v15 = OBJC_IVAR____TtC3VFX22RenderGraphDiagnostics_texturePreviewsByNodeID;
  swift_unknownObjectRetain();
  uint64_t v16 = v14;
  unint64_t v17 = MEMORY[0x1E4FBC860];
  *(void *)&v14[v15] = sub_1B67DFCF8(MEMORY[0x1E4FBC860]);
  *(void *)&v16[OBJC_IVAR____TtC3VFX22RenderGraphDiagnostics_graphID] = a2;

  v43.receiver = v16;
  v43.super_class = v13;
  id v18 = objc_msgSendSuper2(&v43, sel_init);
  uint64_t v19 = v18;
  if (a4)
  {
    id v20 = v18;
    *a4 = v19;
    id v21 = v20;
  }
  uint64_t v22 = (char *)objc_msgSend(a1, sel_scene);
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
  swift_retain();

  uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
  if (v24 && (swift_retain(), swift_release(), *(void *)(v24 + 24)))
  {
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v25 = sub_1B6A69708();
    uint64_t v26 = swift_unknownObjectRelease();
    long long v38 = v19;
    MEMORY[0x1F4188790](v26, v27);
    v37[-2] = v25;
    v37[-1] = &off_1F0F5B0A0;
    swift_retain();
    v37[2] = a2;
    uint64_t v28 = sub_1B68B708C((uint64_t)sub_1B66546B8, (uint64_t)&v37[-4], 0, 0x1000000000000000uLL, 1, v17);
    unint64_t v30 = sub_1B68C70DC(v28, v29, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B683D1D0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for AuthoringGraph();
    __n128 v31 = (void *)swift_allocObject();
    uint64_t v31[2] = 0;
    v31[3] = v17;
    v31[4] = 0;
    v31[5] = 0;
    uint64_t v31[6] = sub_1B67DD1F0(v17);
    v31[3] = v30;
    swift_release();
    uint64_t v32 = v38;
    long long v33 = (void *)sub_1B6C48864(0, v38);
    uint64_t v34 = v33;
    if (a3)
    {
      id v35 = v33;
      *a3 = v34;
      swift_retain();
    }
    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    return 1;
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease();

    return 0;
  }
}

uint64_t sub_1B68BD13C(uint64_t a1)
{
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  type metadata accessor for RenderGraphNode(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v1 + 152);
    uint64_t v6 = swift_retain();
    v5(&v13, v6);
    id v7 = v14;
    uint64_t v23 = v13;
    uint64_t v24 = v14;
    sub_1B62D8C3C((uint64_t)&v23);
    uint64_t v22 = v15;
    sub_1B62D8C3C((uint64_t)&v22);
    id v21 = v16;
    sub_1B62D8C3C((uint64_t)&v21);
    id v20 = v17;
    sub_1B62D8C3C((uint64_t)&v20);
    uint64_t v19 = v18;
    sub_1B62D8C3C((uint64_t)&v19);
    uint64_t v8 = *(void *)(v7 + 8 * a1 + 32);
    sub_1B66456F8(v8);
    uint64_t v9 = sub_1B62D8C3C((uint64_t)&v24);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 248))(v9);
    if (a1 < 0 || *(void *)(v10 + 16) <= a1)
    {
      sub_1B6645740(v8);
      swift_release();
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v10 + a1 + 32);
      sub_1B6645740(v8);
      swift_bridgeObjectRelease();
      swift_release();
    }
    return v11;
  }
  else
  {
    sub_1B6E328C8();
    sub_1B682A98C();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void sub_1B68BD33C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  sub_1B68BD398((uint64_t)v3, (uint64_t)a2);
}

uint64_t sub_1B68BD398(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B677DF20(&unk_1E9DCFBF0);
  if (result)
  {
    uint64_t v4 = MEMORY[0x1BA9B8670](result + 16);
    uint64_t result = swift_release();
    if (v4)
    {
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 0;
      }
      if (v5)
      {
        swift_getObjectType();
        uint64_t v6 = swift_conformsToProtocol2();
        uint64_t v7 = v6 ? v6 : 0;
        if (v6 ? v5 : 0)
        {
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a2, ObjectType, v7);
        }
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B68BD498(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = a5;
  *(unsigned char *)(v6 + 72) = 1;
  *(void *)(v6 + 80) = MEMORY[0x1E4FBC870];
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = a6;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = a2;
  swift_retain();
  id v9 = a4;
  swift_unknownObjectRetain();
  id v17 = (id)sub_1B644558C(v7, v10, v11, v12, v13, v14, v15, v16);
  *(void *)(v6 + 48) = *(void *)((char *)(id)sub_1B64B2054((uint64_t)v17, v18, v19, v20, v21, v22, v23, v24)+ OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  swift_retain();
  BYTE1(v7) = (unsigned __int16)sub_1B6438918(v7) >> 8;
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  *(unsigned char *)(v6 + 72) = BYTE1(v7) & 1;
  return v6;
}

uint64_t sub_1B68BD588(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for GraphError();
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = a1 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v16 = (char *)v13 + *(int *)(v15 + 20);
  uint64_t v17 = sub_1B6E31118();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, v14, v17);
  void *v13 = 0;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  uint64_t v19 = (char *)v13 + *(int *)(v10 + 24);
  *(void *)uint64_t v19 = a2;
  v19[8] = a3 & 1 | 0x60;
  uint64_t v20 = (void *)((char *)v13 + *(int *)(v10 + 28));
  *uint64_t v20 = a4;
  v20[1] = a5;
  uint64_t v21 = *(void *)(v33[1] + 24);
  sub_1B683DB30();
  uint64_t v22 = (void *)swift_allocError();
  sub_1B683DC54((uint64_t)v13, v23);
  uint64_t v24 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
  uint64_t v25 = *(void **)(v21 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
  swift_bridgeObjectRetain();
  id v26 = v22;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v21 + v24) = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v25 = sub_1B68C1084(0, v25[2] + 1, 1, v25);
    *(void *)(v21 + v24) = v25;
  }
  unint64_t v29 = v25[2];
  unint64_t v28 = v25[3];
  if (v29 >= v28 >> 1)
  {
    uint64_t v25 = sub_1B68C1084(v28 > 1, v29 + 1, 1, v25);
    *(void *)(v21 + v24) = v25;
  }
  v25[2] = v29 + 1;
  v25[v29 + 4] = v22;

  uint64_t v30 = swift_allocError();
  sub_1B68D5BE4((uint64_t)v13, v31, (uint64_t (*)(void))type metadata accessor for GraphError);
  return v30;
}

uint64_t sub_1B68BD7EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, size_t a11)
{
  uint64_t v16 = a10;
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v18 = result;
  long long v49 = a1;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v19 = result + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
  uint64_t v20 = *(void *)(v19 + *(int *)(type metadata accessor for ScriptingConfiguration() + 36));
  uint64_t v22 = a5[5];
  if ((~*((_DWORD *)a5 + 10) & 0xFCLL) != 0)
  {
    uint64_t v23 = (uint64_t (*)(uint64_t))a5[2];
    uint64_t v24 = a5[3];
    uint64_t v25 = a5[4];
    char v26 = v22 & 0x3F;
    if (v22 >> 6 != 1) {
      char v26 = a5[4];
    }
    char v27 = v22 >> 6 ? v26 : a5[5];
    if (v27 && (v27 == 1 || a5[6] >= v20))
    {
      sub_1B62C7CB8(a5[2], a5[3], a5[4], a5[5]);
      goto LABEL_31;
    }
  }
  unint64_t v28 = (void *)thread_worker_index(&thread_worker_index, v21);
  uint64_t v29 = sub_1B62C6B10(a6, 1, 0, 1, 0, 1, *(void *)(*(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v28 + 8), 0);
  if (v32 >= 0xFCu)
  {
    return swift_release();
  }
  uint64_t v23 = (uint64_t (*)(uint64_t))v29;
  uint64_t v24 = v30;
  uint64_t v25 = v31;
  LOBYTE(v22) = v32;
  if (!(v32 >> 6))
  {
    char v35 = v32;
    if (!v32)
    {
      LOBYTE(v22) = 0;
      goto LABEL_31;
    }
    goto LABEL_24;
  }
  if (v32 >> 6 != 1 && v31 != 0)
  {
    char v35 = v31;
LABEL_24:
    if (v35)
    {
      if (v35 == 1) {
        uint64_t v36 = 0;
      }
      else {
        uint64_t v36 = v20;
      }
    }
    else
    {
      uint64_t v36 = -1;
    }
    uint64_t v37 = a5[2];
    uint64_t v38 = a5[3];
    uint64_t v39 = a5[4];
    uint64_t v48 = a5[5];
    a5[2] = v29;
    a5[3] = v30;
    a5[4] = v31;
    a5[5] = v32;
    a5[6] = v36;
    sub_1B62C7CB8(v29, v30, v31, v32);
    sub_1B66456E4(v37, v38, v39, v48);
    uint64_t v16 = a10;
  }
LABEL_31:
  uint64_t v40 = v16;
  if (v22 >> 6 && v22 >> 6 != 1)
  {
    uint64_t v46 = *(void *)(*(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                    + 8 * *(void *)thread_worker_index(&thread_worker_index, v33)
                    + 8);
    swift_retain();
    uint64_t v42 = (uint64_t (*)(uint64_t))v23(v46);
    objc_super v43 = v47;
    uint64_t v41 = sub_1B62C6AE0((uint64_t)v23, v24, v25, v22);
    if (v42)
    {
LABEL_34:
      uint64_t v44 = RGBufferSlice.data.getter(v49, v50, v51);
      if ((a11 & 0x8000000000000000) != 0)
      {
        uint64_t result = sub_1B6E32C88();
        __break(1u);
        return result;
      }
      uint64_t v41 = (uint64_t)memmove((void *)(v44 + v40), v42, a11);
      if (v43) {
        goto LABEL_36;
      }
LABEL_39:
      sub_1B62C6AE0((uint64_t)v23, v24, v25, v22);
      swift_release();
      uint64_t v45 = 0;
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v41 = sub_1B62C6A60(v24);
    uint64_t v42 = v23;
    objc_super v43 = (void (*)(uint64_t))v24;
    if (v23) {
      goto LABEL_34;
    }
  }
  if (!v43) {
    goto LABEL_39;
  }
LABEL_36:
  v43(v41);
  sub_1B62C6AE0((uint64_t)v23, v24, v25, v22);
  swift_release();
  uint64_t v45 = (uint64_t)v43;
LABEL_40:

  return sub_1B62C6A50(v45);
}

void sub_1B68BDBA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 == 1)
  {
    uint64_t v6 = *(void *)(a5 + 16);
    if (v6)
    {
      uint64_t v27 = a5 + 32;
      swift_bridgeObjectRetain();
      uint64_t v9 = 0;
      uint64_t v25 = v6;
      uint64_t v26 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)(v27 + 16 * v9);
        uint64_t v11 = *v10;
        uint64_t v12 = (const CFX::RG::Resource *)v10[1];
        GPUResourceManager = (CFX::GPUResourceManager *)RGContextGetGPUResourceManager(a2);
        uint64_t v16 = RGGPUResourceManager.getBuffer(_:)(v12, GPUResourceManager);
        if (*(void *)(a6 + 16))
        {
          uint64_t v17 = v14;
          uint64_t v18 = v15;
          unint64_t v19 = sub_1B62C1A30(v11);
          if (v20)
          {
            uint64_t v21 = *(void *)(*(void *)(a6 + 56) + 8 * v19);
            uint64_t v22 = *(void *)(v21 + 16);
            if (v22)
            {
              swift_bridgeObjectRetain();
              uint64_t v23 = v21 + 40;
              do
              {
                uint64_t v24 = *(void (**)(void *))(v23 - 8);
                v28[0] = v16;
                v28[1] = v17;
                uint64_t v28[2] = v18;
                swift_retain();
                v24(v28);
                swift_release();
                v23 += 16;
                --v22;
              }
              while (v22);
              swift_bridgeObjectRelease();
              uint64_t v6 = v25;
              a2 = v26;
            }
          }
        }
        ++v9;
        swift_unknownObjectRelease();
      }
      while (v9 != v6);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1B68BDD14(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v5[0] = a1;
      v5[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      id v3 = (char *)v5;
      return RGResourceIdentifierMake(v3);
    }
    if ((a1 & 0x1000000000000000) != 0)
    {
      id v3 = (char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      return RGResourceIdentifierMake(v3);
    }
  }
  uint64_t result = sub_1B6E32898();
  if (!v2) {
    return v5[3];
  }
  return result;
}

uint64_t sub_1B68BDDA4@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = RGResourceIdentifierMake(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B68BDDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t GPUResourceManager = RGContextGetGPUResourceManager(a1);
  id v7 = (id)RGGPUResourceManagerGetTexture(GPUResourceManager, a2);
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    swift_unknownObjectRetain();
    sub_1B6BFEDD8(a4, v9, (uint64_t)v7);
    swift_release();
    swift_unknownObjectRelease();
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1B68BDE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

uint64_t sub_1B68BDED4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  swift_retain();
  uint64_t v2 = sub_1B6C7EB80();
  char v4 = v3;
  swift_release();
  if (v4) {
    uint64_t v5 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v5 = v2;
  }
  return sub_1B6BFA794(v5, v1);
}

uint64_t sub_1B68BDF40(uint64_t a1, uint64_t a2)
{
  void (*v11)(void *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  double v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void *__return_ptr, uint64_t);
  _OWORD v65[9];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void v73[6];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void v84[3];

  v84[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RenderGraphNode(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t))(*(void *)result + 152);
    uint64_t v12 = *(void *)result + 152;
    uint64_t v13 = swift_retain();
    long long v63 = v12;
    long long v64 = v11;
    v11(&v67, v13);
    v84[0] = v68;
    uint64_t v14 = *(void *)(v68 + 16);
    if (v14)
    {
      __n128 v52 = v8;
      uint64_t v53 = v5;
      uint64_t v54 = v4;
      uint64_t v55 = (uint64_t *)a2;
      uint64_t v15 = v68 + 32;
      uint64_t v16 = (_OWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      uint64_t v17 = 0;
      uint64_t v59 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v61 = v15;
      long long v62 = a1;
      while (1)
      {
        uint64_t v18 = *(void *)(v15 + 8 * v17);
        unint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = 0x80000000000000A0;
        char v20 = v19 | 0x6000000000000000;
        sub_1B66456F8(v18);
        LOBYTE(v20) = sub_1B697351C(v18, v20);
        swift_release();
        if (v20)
        {
          uint64_t v21 = swift_retain();
          v64(v73, v21);
          long long v82 = v73[0];
          long long v83 = v73[1];
          sub_1B62D8C3C((uint64_t)&v82);
          long long v81 = v73[2];
          sub_1B62D8C3C((uint64_t)&v81);
          long long v80 = v73[3];
          sub_1B62D8C3C((uint64_t)&v80);
          long long v79 = v73[4];
          sub_1B62D8C3C((uint64_t)&v79);
          long long v78 = v73[5];
          sub_1B62D8C3C((uint64_t)&v78);
          uint64_t v22 = *(void *)(v83 + 8 * v17 + 32);
          sub_1B66456F8(v22);
          uint64_t v23 = sub_1B62D8C3C((uint64_t)&v83);
          uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 248))(v23);
          if (v17 >= *(void *)(v24 + 16))
          {
            sub_1B6645740(v22);
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            uint64_t v25 = *(unsigned __int8 *)(v24 + v17 + 32);
            sub_1B6645740(v22);
            swift_bridgeObjectRelease();
            swift_release();
            if (v25 != 3)
            {
              uint64_t v26 = v16[5];
              v65[4] = v16[4];
              v65[5] = v26;
              uint64_t v27 = v16[7];
              v65[6] = v16[6];
              v65[7] = v27;
              unint64_t v28 = v16[1];
              v65[0] = *v16;
              v65[1] = v28;
              uint64_t v29 = v16[3];
              v65[2] = v16[2];
              void v65[3] = v29;
              uint64_t v30 = *((void *)v65 + v17);
              if (RGResourceIsNull(v30))
              {
                uint64_t result = sub_1B6E32BE8();
                __break(1u);
                return result;
              }
              if (RGResourceIsTexture(v30))
              {
                uint64_t v31 = sub_1B68D4010(v30, v25);
                unsigned __int8 v32 = sub_1B682BA18(v17, v71);
                if (v33) {
                  uint64_t v34 = v32;
                }
                else {
                  uint64_t v34 = 63;
                }
                char v35 = 0xE100000000000000;
                if (v33) {
                  char v35 = v33;
                }
                int8x16_t v56 = v35;
                id v57 = v34;
                swift_unknownObjectRetain();
                uint64_t v36 = v59;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v58 = v31;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  uint64_t v36 = sub_1B68C4748(0, v36[2] + 1, 1, v36);
                }
                uint64_t v39 = v36[2];
                uint64_t v38 = v36[3];
                uint64_t v40 = (void *)(v39 + 1);
                if (v39 >= v38 >> 1)
                {
                  uint64_t v59 = (void *)(v39 + 1);
                  uint64_t v46 = sub_1B68C4748(v38 > 1, v39 + 1, 1, v36);
                  uint64_t v40 = v59;
                  uint64_t v36 = v46;
                }
                v36[2] = v40;
                uint64_t v59 = v36;
                uint64_t v41 = &v36[4 * v39];
                uint64_t v42 = v58;
                objc_super v43 = v56;
                void v41[4] = v57;
                v41[5] = v43;
                *((unsigned char *)v41 + 48) = v25;
                v41[7] = v42;
                uint64_t v44 = *v55;
                uint64_t v45 = sub_1B6562138(*(uint64_t **)(v60 + 64), v30, v42, (uint64_t)v65);
                RGPassDependsOn(*(void *)&v65[0], v44, v45);
                swift_unknownObjectRelease();
              }
            }
            uint64_t v15 = v61;
          }
        }
        ++v17;
        sub_1B6645740(v18);
        if (v14 == v17)
        {
          sub_1B62D8C3C((uint64_t)v84);
          uint64_t v5 = v53;
          uint64_t v4 = v54;
          uint64_t v8 = v52;
          long long v47 = (uint64_t)v59;
          goto LABEL_24;
        }
      }
    }
    long long v47 = MEMORY[0x1E4FBC860];
LABEL_24:
    *(void *)&v65[0] = v67;
    sub_1B62D8C3C((uint64_t)v65);
    sub_1B62D8C3C((uint64_t)v84);
    long long v77 = v69;
    sub_1B62D8C3C((uint64_t)&v77);
    long long v76 = v70;
    sub_1B62D8C3C((uint64_t)&v76);
    char v75 = v71;
    sub_1B62D8C3C((uint64_t)&v75);
    uint64_t v74 = v72;
    sub_1B62D8C3C((uint64_t)&v74);
    if (*(void *)(v47 + 16))
    {
      uint64_t v48 = *(void *)(v60 + 24);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v10 + OBJC_IVAR____TtC3VFX4Node_authoringID, v4);
      long long v49 = OBJC_IVAR____TtC3VFX22RenderGraphDiagnostics_texturePreviewsByNodeID;
      uint64_t v50 = swift_isUniquelyReferenced_nonNull_native();
      long long v66 = *(void *)(v48 + v49);
      *(void *)(v48 + v49) = 0x8000000000000000;
      sub_1B67E6998(v47, (uint64_t)v8, v50);
      *(void *)(v48 + v49) = v66;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return swift_release();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B68BE4FC()
{
  unint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v24[0] = sub_1B68CDDCC(MEMORY[0x1E4FBC860]);
  *((void *)&v24[0] + 1) = v3;
  sub_1B68BA75C((uint64_t)sub_1B68D601C, v0, 1, 0x1000000000000000uLL, 0, v2, (uint64_t *)v24);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = sub_1B68C7F78(*(uint64_t *)&v24[0], *((uint64_t *)&v24[0] + 1), (void (*)(long long *__return_ptr, uint64_t *))sub_1B68C91D4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v0 + 72) & 1) != 0 && (uint64_t v6 = v5[2]) != 0)
    {
      uint64_t v29 = 0;
      uint64_t v7 = v6 - 1;
      for (uint64_t i = 4; ; i += 19)
      {
        long long v9 = *(_OWORD *)&v5[i + 2];
        v24[0] = *(_OWORD *)&v5[i];
        v24[1] = v9;
        long long v10 = *(_OWORD *)&v5[i + 4];
        long long v11 = *(_OWORD *)&v5[i + 6];
        long long v12 = *(_OWORD *)&v5[i + 10];
        void v24[4] = *(_OWORD *)&v5[i + 8];
        unint64_t v24[5] = v12;
        v24[2] = v10;
        v24[3] = v11;
        long long v13 = *(_OWORD *)&v5[i + 12];
        long long v14 = *(_OWORD *)&v5[i + 14];
        long long v15 = *(_OWORD *)&v5[i + 16];
        char v25 = v5[i + 18];
        v24[7] = v14;
        v24[8] = v15;
        void v24[6] = v13;
        uint64_t v16 = *(void *)&v24[0];
        sub_1B68D5DA8((uint64_t)v24 + 8, (uint64_t)v26, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
        if (sub_1B68D6038((uint64_t)v26) != 1)
        {
          sub_1B68D604C(v26, v23);
          int v17 = sub_1B68D6084((uint64_t)v23);
          nullsub_1(v23);
          if (v17 != 1)
          {
            long long v19 = *(_OWORD *)(v18 + 112);
            v27[6] = *(_OWORD *)(v18 + 96);
            v27[7] = v19;
            uint64_t v28 = *(void *)(v18 + 128);
            long long v20 = *(_OWORD *)(v18 + 48);
            v27[2] = *(_OWORD *)(v18 + 32);
            _OWORD v27[3] = v20;
            long long v21 = *(_OWORD *)(v18 + 80);
            v27[4] = *(_OWORD *)(v18 + 64);
            void v27[5] = v21;
            long long v22 = *(_OWORD *)(v18 + 16);
            v27[0] = *(_OWORD *)v18;
            v27[1] = v22;
            sub_1B62CA090((uint64_t)v24);
            sub_1B68BDF40(v16, (uint64_t)v27);
            sub_1B62CA064((uint64_t)v24);
          }
        }
        if (!v7) {
          break;
        }
        --v7;
      }
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
}

uint64_t sub_1B68BE71C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v5)(uint64_t *__return_ptr, long long *);
  uint64_t result;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  int v19;
  void *v20;
  void *v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  long long v26[9];
  uint64_t v27;
  uint64_t v28;
  unsigned char v29[144];
  _OWORD v30[9];
  unsigned char v31[144];
  _OWORD v32[9];
  _OWORD v33[9];
  _OWORD v34[9];
  void (*v35)(uint64_t *__return_ptr, long long *);

  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void (**)(uint64_t *__return_ptr, long long *))(a1 + 24);
  uint64_t result = sub_1B68D2114((__objc2_class **)v4, v5, (uint64_t)v31);
  if (!v2)
  {
    sub_1B68D5DA8((uint64_t)v31, (uint64_t)v32, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
    if (sub_1B68D6038((uint64_t)v32) != 1)
    {
      sub_1B68D604C(v32, v33);
      sub_1B68D604C(v33, v34);
      uint64_t v7 = sub_1B68D6084((uint64_t)v34);
      nullsub_1(v34);
      if (v7 != 1)
      {
        long long v9 = *(void *)(v4 + 16);
        long long v10 = *(void *)(v9 + 16);
        if (v10)
        {
          uint64_t v23 = a2;
          uint64_t v24 = v4;
          char v25 = *v8;
          long long v11 = &v28;
          swift_bridgeObjectRetain();
          long long v12 = v10 - 1;
          long long v13 = 32;
          long long v14 = &qword_1E9DD67D0;
          long long v15 = v9;
          char v35 = v5;
          while (1)
          {
            *(void *)&v26[0] = *(void *)(v15 + v13);
            swift_retain_n();
            v5(&v27, v26);
            swift_release();
            sub_1B68D5DA8((uint64_t)v11, (uint64_t)v29, v14, (uint64_t)&type metadata for GraphTranslateResult);
            sub_1B68D5DA8((uint64_t)v29, (uint64_t)v30, v14, (uint64_t)&type metadata for GraphTranslateResult);
            if (sub_1B68D6038((uint64_t)v30) == 1)
            {
              swift_release_n();
              if (!v12) {
                goto LABEL_14;
              }
            }
            else
            {
              uint64_t v16 = v14;
              int v17 = v11;
              uint64_t v18 = v15;
              sub_1B68D604C(v30, v26);
              long long v19 = sub_1B68D6084((uint64_t)v26);
              nullsub_1(v26);
              if (v19 == 1)
              {
                swift_release_n();
              }
              else
              {
                long long v21 = v20;
                swift_release();
                RGPassDependsOn(v25, *v21, v22);
                swift_release();
              }
              long long v15 = v18;
              long long v11 = v17;
              long long v14 = v16;
              uint64_t v5 = v35;
              if (!v12)
              {
LABEL_14:
                swift_bridgeObjectRelease();
                a2 = v23;
                uint64_t v4 = v24;
                break;
              }
            }
            --v12;
            v13 += 16;
          }
        }
      }
    }
    *a2 = v4;
    sub_1B68D5DA8((uint64_t)v31, (uint64_t)(a2 + 1), &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B68BE970()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1B68BE9C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1B68BEA64(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B68BEA64(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  sub_1B62E17B4();
  uint64_t v21 = v12;
  MEMORY[0x1F4188790](v12, v13);
  long long v20 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B6E31098();
  MEMORY[0x1F4188790](v19, v15);
  v18[9] = (char *)v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RGGraphTranslator();
  swift_allocObject();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain();
  sub_1B68BD498(a1, a2, a3, a4, a5, a6);
  sub_1B68BE4FC();
  swift_release();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B68BEF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v24)(void *__return_ptr, ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t (*v29)(double);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void v35[4];
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;

  sub_1B62CAC44(0, (unint64_t *)&qword_1EB9806A0, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  long long v9 = (char *)&v28 - v8;
  uint64_t v10 = sub_1B6E32B48();
  uint64_t v11 = *(void *)(v10 - 8);
  double v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *(unsigned __int8 *)(a3 + 85);
  uint64_t v30 = *(unsigned __int8 *)(a3 + 86);
  uint64_t v31 = v16;
  *(_WORD *)(a3 + 85) = 0;
  uint64_t v29 = thread_serialization_context;
  int v17 = (uint64_t *)thread_serialization_context(v13);
  uint64_t v28 = *v17;
  *int v17 = a3;
  LOBYTE(v32) = 1;
  sub_1B6C715A0(2, 0, 1, 0, 0x100000000uLL, 0, 1, v36);
  sub_1B6E32B38();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v9, v10);
  double v33 = type metadata accessor for SerializationContext();
  unsigned __int8 v32 = a3;
  uint64_t v18 = v37;
  uint64_t v19 = v38;
  sub_1B62C550C((uint64_t)v36, v37);
  long long v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 24);
  swift_retain();
  uint64_t v21 = (void (*)(void *, void))v20(v35, v18, v19);
  sub_1B62FF1F0((uint64_t)&v32, (uint64_t)v15);
  v21(v35, 0);
  sub_1B62C1550((uint64_t)v36, (uint64_t)&v32);
  uint64_t v22 = v33;
  uint64_t v23 = v34;
  sub_1B62C14BC(&v32, v33);
  uint64_t v24 = *(void (**)(void *__return_ptr, ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v23 + 32);
  char v25 = sub_1B6649064();
  v24(v35, &type metadata for AuthoringGraphCoder, a1, a2, &type metadata for AuthoringGraphCoder, v25, v22, v23);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v32);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v36);
  uint64_t v26 = (void *)((uint64_t (*)(uint64_t (**)(double)))v29)(&thread_serialization_context);
  char *v26 = v28;
  *(unsigned char *)(a3 + 86) = v30;
  *(unsigned char *)(a3 + 85) = v31;
  return v35[0];
}

uint64_t sub_1B68BF390(uint64_t a1, uint64_t a2)
{
  sub_1B62CAC44(0, (unint64_t *)&qword_1EB9806A0, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_1B6E32B48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  char v13 = *(unsigned char *)(a2 + 85);
  char v14 = *(unsigned char *)(a2 + 86);
  *(_WORD *)(a2 + 85) = 0;
  sub_1B6C71AEC(2, 1, v30);
  sub_1B6E32B38();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  uint64_t v27 = type metadata accessor for SerializationContext();
  uint64_t v26 = a2;
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  sub_1B62C550C((uint64_t)v30, v31);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 24);
  swift_retain();
  uint64_t v18 = (void (*)(void *, void))v17(v29, v15, v16);
  sub_1B62FF1F0((uint64_t)&v26, (uint64_t)v12);
  v18(v29, 0);
  sub_1B62C1550((uint64_t)v30, (uint64_t)&v26);
  uint64_t v19 = v27;
  uint64_t v20 = v28;
  sub_1B62C14BC(&v26, v27);
  uint64_t v21 = *(uint64_t (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v20 + 32);
  unint64_t v22 = sub_1B66491C8();
  uint64_t v23 = v21(&v33, &type metadata for AuthoringGraphCoder, v22, v19, v20);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v30);
  *(unsigned char *)(a2 + 86) = v14;
  *(unsigned char *)(a2 + 85) = v13;
  return v23;
}

id sub_1B68BF734(void *a1, uint64_t a2)
{
  id v3 = a1;
  swift_unknownObjectRetain();
  uint64_t v4 = sub_1B6E30FD8();
  unint64_t v6 = v5;

  uint64_t v7 = (void *)sub_1B68BEF04(v4, v6, a2);
  sub_1B62C2360(v4, v6);
  swift_unknownObjectRelease();

  return v7;
}

id sub_1B68BF7C0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v4 = sub_1B68BF390(a1, a2);
  unint64_t v6 = v5;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v7 = (void *)sub_1B6E30FC8();
  sub_1B62C2360(v4, v6);

  return v7;
}

id sub_1B68BF84C()
{
  swift_unknownObjectRetain();
  sub_1B68BF8B0();
  swift_unknownObjectRelease();
  uint64_t v0 = (void *)sub_1B6E31C18();
  swift_bridgeObjectRelease();

  return v0;
}

void *sub_1B68BF8B0()
{
  type metadata accessor for Graph();
  swift_unknownObjectRetain();
  if (!swift_dynamicCastClass()) {
    goto LABEL_13;
  }
  unint64_t v0 = MEMORY[0x1E4FBC860];
  uint64_t v12 = sub_1B68CE0B4(MEMORY[0x1E4FBC860]);
  uint64_t v13 = v1;
  sub_1B68BAA60((uint64_t)sub_1B68BFA98, 0, 0, 0x1000000000000000uLL, 0, v0, (uint64_t)&v12);
  uint64_t v2 = sub_1B68C85F8(v12, v13, (void (*)(long long *__return_ptr, uint64_t *))sub_1B676CA48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *((void *)v2 + 2);
  if (!v3)
  {
    swift_release();
LABEL_13:
    swift_unknownObjectRelease();
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)v2 + 5;
  unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v7 = *v4;
    if (*v4)
    {
      uint64_t v8 = *(v4 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v5 = sub_1B6335858(0, v5[2] + 1, 1, v5);
      }
      unint64_t v10 = v5[2];
      unint64_t v9 = v5[3];
      if (v10 >= v9 >> 1) {
        unint64_t v5 = sub_1B6335858(v9 > 1, v10 + 1, 1, v5);
      }
      v5[2] = v10 + 1;
      unint64_t v6 = &v5[2 * v10];
      void v6[4] = v8;
      uint64_t v6[5] = v7;
    }
    v4 += 2;
    --v3;
  }
  while (v3);
  swift_unknownObjectRelease();
  swift_release_n();
  return v5;
}

uint64_t sub_1B68BFA98@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = **(__objc2_class ***)(result + 8);
  if (v3 == _TtC3VFX11PresentNode)
  {
    swift_retain();
    unint64_t v4 = sub_1B6C7EF5C();
  }
  else
  {
    if (v3 != _TtC3VFX18PublishTextureNode)
    {
      *a2 = 0;
      a2[1] = 0;
      return result;
    }
    swift_retain();
    unint64_t v4 = sub_1B6C7F068();
  }
  unint64_t v6 = v4;
  unint64_t v7 = v5;
  uint64_t result = swift_release();
  *a2 = v6;
  a2[1] = v7;
  return result;
}

uint64_t sub_1B68BFB40()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));

  return swift_deallocClassInstance();
}

uint64_t sub_1B68BFBEC(uint64_t a1)
{
  uint64_t v2 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  char v5 = sub_1B6BA0AC4(a1, isUniquelyReferenced_nonNull_native);
  uint64_t v6 = v5 & 1;
  *uint64_t v2 = v11;
  swift_bridgeObjectRelease();
  if (v5)
  {
    unint64_t v7 = (char *)v2[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v7 = sub_1B636A230(0, *((void *)v7 + 2) + 1, 1, v7, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    unint64_t v9 = *((void *)v7 + 2);
    unint64_t v8 = *((void *)v7 + 3);
    if (v9 >= v8 >> 1) {
      unint64_t v7 = sub_1B636A230(v8 > 1, v9 + 1, 1, v7, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v7 + 2) = v9 + 1;
    *(void *)&v7[8 * v9 + 32] = a1;
    v2[1] = v7;
  }
  return v6;
}

uint64_t sub_1B68BFD00@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v4 = v3;
  sub_1B6828A8C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1B67FBA04);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1B6BA0BE0((uint64_t)a1, a2, isUniquelyReferenced_nonNull_native, v30);
  *uint64_t v3 = v29;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v10 = v30[1];
  uint64_t v12 = v30[2];
  uint64_t v11 = v30[3];
  uint64_t v14 = v30[4];
  uint64_t v13 = v31;
  uint64_t v16 = v32;
  uint64_t v15 = v33;
  uint64_t v18 = v34;
  uint64_t v17 = v35;
  uint64_t v19 = v36;
  if (v30[0] == 1)
  {
    uint64_t v23 = v31;
    uint64_t v24 = v32;
    uint64_t v25 = v33;
    uint64_t v26 = v34;
    uint64_t v27 = v35;
    uint64_t v28 = v36;
    uint64_t v20 = v3[1];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B636A230(0, *(void *)(v20 + 16) + 1, 1, (char *)v20, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
      uint64_t v20 = result;
    }
    unint64_t v22 = *(void *)(v20 + 16);
    unint64_t v21 = *(void *)(v20 + 24);
    if (v22 >= v21 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B636A230(v21 > 1, v22 + 1, 1, (char *)v20, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
      uint64_t v20 = result;
    }
    *(void *)(v20 + 16) = v22 + 1;
    *(void *)(v20 + 8 * v22 + 32) = a2;
    v4[1] = v20;
    *a3 = 1;
    a3[1] = v10;
    a3[2] = v12;
    a3[3] = v11;
    a3[4] = v14;
    a3[5] = v23;
    a3[6] = v24;
    a3[7] = v25;
    a3[8] = v26;
    a3[9] = v27;
    a3[10] = v28;
  }
  else
  {
    *a3 = v30[0];
    a3[1] = v10;
    a3[2] = v12;
    a3[3] = v11;
    a3[4] = v14;
    a3[5] = v13;
    a3[6] = v16;
    a3[7] = v15;
    a3[8] = v18;
    a3[9] = v17;
    a3[10] = v19;
  }
  return result;
}

uint64_t sub_1B68BFEB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  char v5 = v3;
  swift_retain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  uint64_t v9 = a3(a1, a2, isUniquelyReferenced_nonNull_native);
  *char v5 = v14;
  swift_bridgeObjectRelease();
  if (!v9)
  {
    uint64_t v10 = (char *)v5[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1B636A230(0, *((void *)v10 + 2) + 1, 1, v10, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    unint64_t v12 = *((void *)v10 + 2);
    unint64_t v11 = *((void *)v10 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_1B636A230(v11 > 1, v12 + 1, 1, v10, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v10 + 2) = v12 + 1;
    *(void *)&v10[8 * v12 + 32] = a2;
    v5[1] = v10;
  }
  return v9;
}

double sub_1B68BFFDC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[17];
  char v9 = *((unsigned char *)a1 + 144);
  long long v34 = *(_OWORD *)(a1 + 1);
  long long v35 = *(_OWORD *)(a1 + 3);
  long long v36 = *(_OWORD *)(a1 + 5);
  long long v37 = *(_OWORD *)(a1 + 7);
  long long v38 = *(_OWORD *)(a1 + 9);
  long long v39 = *(_OWORD *)(a1 + 11);
  long long v40 = *(_OWORD *)(a1 + 13);
  long long v41 = *(_OWORD *)(a1 + 15);
  uint64_t v33 = v7;
  uint64_t v42 = v8;
  char v43 = v9;
  sub_1B62CA090((uint64_t)&v33);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v45[0] = *v3;
  *uint64_t v3 = 0x8000000000000000;
  long long v22 = v34;
  long long v23 = v35;
  long long v24 = v36;
  long long v25 = v37;
  long long v26 = v38;
  long long v27 = v39;
  long long v28 = v40;
  long long v29 = v41;
  uint64_t v21 = v33;
  uint64_t v30 = v42;
  char v31 = v43;
  sub_1B6BA111C((uint64_t)&v21, a2, isUniquelyReferenced_nonNull_native, v32);
  *uint64_t v3 = v45[0];
  swift_bridgeObjectRelease();
  sub_1B634FE58((uint64_t)v32, (uint64_t)v44, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
  sub_1B634FE58((uint64_t)v44, (uint64_t)v45, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
  if (sub_1B6388C10(v45) == 1)
  {
    unint64_t v11 = (char *)v3[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_1B636A230(0, *((void *)v11 + 2) + 1, 1, v11, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      unint64_t v11 = sub_1B636A230(v12 > 1, v13 + 1, 1, v11, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v11 + 2) = v13 + 1;
    *(void *)&v11[8 * v13 + 32] = a2;
    v4[1] = (uint64_t)v11;
    sub_1B634FE58((uint64_t)v44, a3, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
  }
  else
  {
    sub_1B634FE58((uint64_t)v44, (uint64_t)v19, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
    long long v15 = v19[7];
    *(_OWORD *)(a3 + 96) = v19[6];
    *(_OWORD *)(a3 + 112) = v15;
    *(_OWORD *)(a3 + 128) = v19[8];
    *(unsigned char *)(a3 + 144) = v20;
    long long v16 = v19[3];
    *(_OWORD *)(a3 + 32) = v19[2];
    *(_OWORD *)(a3 + 48) = v16;
    long long v17 = v19[5];
    *(_OWORD *)(a3 + 64) = v19[4];
    *(_OWORD *)(a3 + 80) = v17;
    long long v18 = v19[1];
    *(_OWORD *)a3 = v19[0];
    *(_OWORD *)(a3 + 16) = v18;
    return nullsub_1(a3);
  }
  return result;
}

uint64_t sub_1B68C0294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  uint64_t v9 = sub_1B6BA13C8(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  uint64_t v11 = v10;
  *unint64_t v4 = v16;
  swift_bridgeObjectRelease();
  if (v11 == 1)
  {
    unint64_t v12 = (char *)v4[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_1B636A230(0, *((void *)v12 + 2) + 1, 1, v12, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    unint64_t v14 = *((void *)v12 + 2);
    unint64_t v13 = *((void *)v12 + 3);
    if (v14 >= v13 >> 1) {
      unint64_t v12 = sub_1B636A230(v13 > 1, v14 + 1, 1, v12, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v12 + 2) = v14 + 1;
    *(void *)&v12[8 * v14 + 32] = a3;
    v4[1] = v12;
  }
  return v9;
}

uint64_t sub_1B68C03D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  char v5 = v3;
  swift_retain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  uint64_t v9 = a3(a1, a2, isUniquelyReferenced_nonNull_native);
  *char v5 = v14;
  swift_bridgeObjectRelease();
  if (v9 == 1)
  {
    uint64_t v10 = (char *)v5[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1B636A230(0, *((void *)v10 + 2) + 1, 1, v10, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    unint64_t v12 = *((void *)v10 + 2);
    unint64_t v11 = *((void *)v10 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_1B636A230(v11 > 1, v12 + 1, 1, v10, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v10 + 2) = v12 + 1;
    *(void *)&v10[8 * v12 + 32] = a2;
    v5[1] = v10;
  }
  return v9;
}

uint64_t sub_1B68C04F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  uint64_t v7 = sub_1B6BA162C(a1, a2, isUniquelyReferenced_nonNull_native);
  char v9 = v8;
  *uint64_t v3 = v14;
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v10 = (char *)v3[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1B636A230(0, *((void *)v10 + 2) + 1, 1, v10, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    unint64_t v12 = *((void *)v10 + 2);
    unint64_t v11 = *((void *)v10 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_1B636A230(v11 > 1, v12 + 1, 1, v10, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v10 + 2) = v12 + 1;
    *(void *)&v10[8 * v12 + 32] = a2;
    v3[1] = v10;
  }
  return v7;
}

uint64_t sub_1B68C0624(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

char *sub_1B68C0634(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68C94A8(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CAC44(0, &qword_1EB980D70, (uint64_t (*)(uint64_t))type metadata accessor for vfx_memory_entry_t, MEMORY[0x1E4FBBE00]);
  unint64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  unint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[24 * v9 + 32]) {
    memmove(v13, a4 + 32, 24 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C0770(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1EB94A1C0, MEMORY[0x1E4FBB880], MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C0888(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68C93BC(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1EB980AE0, (uint64_t)&type metadata for ChunksStorage, MEMORY[0x1E4FBBE00]);
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C09B4(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B636A230(a1, a2, a3, a4, &qword_1EB980D48, MEMORY[0x1E4FBB550]);
}

void *sub_1B68C09C8(char a1, uint64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (a2 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, &qword_1EB980B48, (uint64_t (*)(uint64_t))sub_1B629A550, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 3);
    unint64_t v14 = (unint64_t)(v11 + 4);
    if (a1) {
      goto LABEL_14;
    }
LABEL_21:
    sub_1B68C92C4(0, v9, v14, a4);
    goto LABEL_25;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = MEMORY[0x1E4FBC860] + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_14:
  if ((unint64_t)v11 < a4 || v14 >= a4 + 32 + 8 * v9)
  {
    sub_1B629A550(0);
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v11 != (void *)a4)
  {
    sub_1B629A550(0);
    swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(a4 + 16) = 0;
LABEL_25:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C0B2C(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C4E4C(a1, a2, a3, a4, (unint64_t *)&unk_1E9DD2060, (uint64_t)&type metadata for ReplicationEvent);
}

void *sub_1B68C0B40(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD1D08, (uint64_t)&type metadata for Property.Description, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    unint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68C9AB4(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C0C58(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1B68C19E4(a1, a2, a3, a4, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl);
}

void *sub_1B68C0C6C(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68C9DAC(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B681C594();
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 72);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[9 * v9 + 4]) {
    memmove(v13, a4 + 4, 72 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C0D7C(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C3AB8(a1, a2, a3, a4, (unint64_t *)&unk_1E9DD1F30, &qword_1E9DD51F0);
}

void *sub_1B68C0D98(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CA2E8(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B681A9C8();
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[11 * v9 + 4]) {
    memmove(v13, a4 + 4, 88 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C0EA8(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B629CCA0(a1, a2, a3, a4, (void (*)(void))sub_1B6743840);
}

void *sub_1B68C0EC0(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD1D88, (uint64_t)&_s9ErrorInfoVN, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 + 31;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 6);
    unint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CA408(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 4]) {
    memmove(v14, a4 + 4, v9 << 6);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C0FD8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1B68C4510(a1, a2, a3, a4, &qword_1EB980BA8, (uint64_t)&type metadata for ScriptParameter, (void (*)(void, int64_t, void *, void *))sub_1B68C9594);
}

char *sub_1B68C1000(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B636A230(a1, a2, a3, a4, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
}

uint64_t sub_1B68C1014(char a1, uint64_t a2, char a3, unint64_t a4)
{
  return sub_1B68C21E0(a1, a2, a3, a4, &qword_1E9DD1E60, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
}

void *sub_1B68C105C(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C1528(a1, a2, a3, a4, (unint64_t *)&unk_1E9DD2100, &qword_1E9DD0FA0, (void (*)(uint64_t))type metadata accessor for Node);
}

void *sub_1B68C1084(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62C5838(0, (unint64_t *)&unk_1E9DD1F10, (unint64_t *)&qword_1EB980E40);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 3);
    unint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CAE00(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[v9 + 4]) {
    memmove(v14, a4 + 4, 8 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C1194(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CB6D8(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD1FE8, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBBE00]);
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[11 * v9 + 4]) {
    memmove(v13, a4 + 4, 88 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C12C8(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CB8B4(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B68D5D28();
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 80);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[10 * v9 + 4]) {
    memmove(v13, a4 + 4, 80 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C13D0(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CB9C8(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, (unint64_t *)&unk_1E9DD2000, (uint64_t)&type metadata for GraphCodeGen.CodeGenParameter, MEMORY[0x1E4FBBE00]);
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
    memmove(v13, a4 + 4, 48 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C1500(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C1528(a1, a2, a3, a4, (unint64_t *)&unk_1E9DD20E8, (unint64_t *)&unk_1E9DD09D0, (void (*)(uint64_t))type metadata accessor for AuthoringNode);
}

void *sub_1B68C1528(char a1, uint64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, void (*a7)(uint64_t))
{
  if (a3)
  {
    unint64_t v11 = a4[3];
    uint64_t v12 = v11 >> 1;
    int64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (v13 <= a2) {
      int64_t v13 = a2;
    }
    if (v12 < a2) {
      a2 = v13;
    }
    else {
      a2 = v12;
    }
  }
  uint64_t v14 = a4[2];
  if (a2 <= v14) {
    uint64_t v15 = a4[2];
  }
  else {
    uint64_t v15 = a2;
  }
  if (!v15)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    long long v18 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CE8C0(0, v14, (unint64_t)v18, (uint64_t)a4, a6, a7);
    goto LABEL_21;
  }
  sub_1B68D6934(0, a5, a6, a7);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  _OWORD v16[2] = v14;
  void v16[3] = 2 * ((uint64_t)(v17 - 32) / 24);
  long long v18 = v16 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v16 != a4 || v18 >= &a4[3 * v14 + 4]) {
    memmove(v18, a4 + 4, 24 * v14);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v16;
}

char *sub_1B68C1658(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B62F9114(a1, a2, a3, a4, &qword_1E9DD2030, &qword_1E9DD2038, (unint64_t *)&unk_1E9DD2040);
}

void *sub_1B68C167C(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, (unint64_t *)&qword_1EB980D50, (uint64_t (*)(uint64_t))sub_1B6645A00, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    uint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68C9ED4(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C17A0(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1EB980B18, (uint64_t)&type metadata for RelationPair, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C18B8(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1EB980B78, (uint64_t)&type metadata for EntityInstance, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C19D0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1B68C19E4(a1, a2, a3, a4, &qword_1E9DD20F8, (uint64_t)&type metadata for Section);
}

char *sub_1B68C19E4(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  int64_t v11 = *((void *)a4 + 2);
  if (a2 <= v11) {
    int64_t v12 = *((void *)a4 + 2);
  }
  else {
    int64_t v12 = a2;
  }
  if (!v12)
  {
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v15 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CBCB8(0, v11, v15, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = (char *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  *((void *)v13 + 2) = v11;
  *((void *)v13 + 3) = 2 * v14 - 64;
  uint64_t v15 = v13 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v13 != a4 || v15 >= &a4[v11 + 32]) {
    memmove(v15, a4 + 32, v11);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_1B68C1AE0(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68C94A8(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CAC44(0, &qword_1EB980B68, (uint64_t (*)(uint64_t))sub_1B68CE3AC, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  uint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[24 * v9 + 32]) {
    memmove(v13, a4 + 32, 24 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C1C1C(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B62C5708(a1, a2, a3, a4, &qword_1E9DD1CF8, (unint64_t *)&qword_1E9DD1D00);
}

char *sub_1B68C1C38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CBCB8(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD2028, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * v12 - 64;
  uint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[v9 + 32]) {
    memmove(v13, a4 + 32, v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C1D40(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68C9B9C(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B68D5AB8();
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
    memmove(v13, a4 + 4, 48 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C1E4C(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68C9CC4(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1EB980BB0, (uint64_t)&type metadata for ShaderParameter, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 80);
  uint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[80 * v9 + 32]) {
    memmove(v13, a4 + 32, 80 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C1F74(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B6745BC4();
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B636A340(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
    memmove(v14, a4 + 32, 8 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C2068(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CBEAC(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD1E08, (uint64_t)&type metadata for MetalFunctionReflection.Arg, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
    memmove(v13, a4 + 4, 48 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B68C2198(char a1, uint64_t a2, char a3, unint64_t a4)
{
  return sub_1B68C21E0(a1, a2, a3, a4, &qword_1E9DCE7C8, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

uint64_t sub_1B68C21E0(char a1, uint64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    int64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (v14 <= a2) {
      int64_t v14 = a2;
    }
    if (v13 < a2) {
      a2 = v14;
    }
    else {
      a2 = v13;
    }
  }
  uint64_t v15 = *(void *)(a4 + 16);
  if (a2 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = a2;
  }
  if (v16)
  {
    sub_1B62CAC44(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = *(void *)(a7(0) - 8);
    uint64_t v18 = *(void *)(v17 + 72);
    unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    char v20 = (void *)swift_allocObject();
    size_t v21 = j__malloc_size(v20);
    if (!v18 || (v21 - v19 == 0x8000000000000000 ? (BOOL v22 = v18 == -1) : (BOOL v22 = 0), v22))
    {
      uint64_t result = sub_1B6E32BD8();
      __break(1u);
      return result;
    }
    void v20[2] = v15;
    v20[3] = 2 * ((uint64_t)(v21 - v19) / v18);
  }
  else
  {
    char v20 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(a7(0) - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (unint64_t)v20 + v24;
  if (a1)
  {
    if ((unint64_t)v20 < a4 || v25 >= a4 + v24 + *(void *)(v23 + 72) * v15)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v20 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B68CD898(0, v15, v25, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v20;
}

void *sub_1B68C2464(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1EB980BC0, (uint64_t)&type metadata for GraphScriptGroup, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    int64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CCBD0(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C257C(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C52C0(a1, a2, a3, a4, &qword_1EB980BB8, (uint64_t)&type metadata for GraphScriptGroup.Reference);
}

void *sub_1B68C2590(char a1, uint64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (a2 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD2020, (uint64_t)&type metadata for TriggerOSEvent, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    unint64_t v14 = (unint64_t)(v11 + 4);
    if (a1) {
      goto LABEL_14;
    }
LABEL_21:
    sub_1B68CCCB8(0, v9, v14, a4);
    goto LABEL_25;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = MEMORY[0x1E4FBC860] + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_14:
  if ((unint64_t)v11 < a4 || v14 >= a4 + 32 + 32 * v9)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v11 != (void *)a4)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(a4 + 16) = 0;
LABEL_25:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C26CC(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CCDA0(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD2058, (uint64_t)&type metadata for TickedEvent, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
    memmove(v13, a4 + 4, 24 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C27FC(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CC800(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, (unint64_t *)&unk_1E9DD1D90, (uint64_t)&_s12MetadataTypeON, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C2928(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD1F20, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    unint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CC17C(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C2A40(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C32B4(a1, a2, a3, a4, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint);
}

void *sub_1B68C2A54(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C3D10(a1, a2, a3, a4, (void (*)(void))sub_1B68CE434, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0]);
}

void *sub_1B68C2A7C(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CA4F0(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD2140, (uint64_t)&type metadata for ShaderCache.SpecializedFunction, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
    memmove(v13, a4 + 4, 48 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C2BAC(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CA6C8(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD1EE8, (uint64_t)&type metadata for ShaderCache.RenderPipeline, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 824);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[103 * v9 + 4]) {
    memmove(v13, a4 + 4, 824 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C2CE4(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CA5DC(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD1EE0, (uint64_t)&type metadata for ShaderCache.ComputePipeline, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 72);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[9 * v9 + 4]) {
    memmove(v13, a4 + 4, 72 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C2E18(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CD0A4(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1EB980AF8, (uint64_t)&type metadata for ShaderCache.Library, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C2F44(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CD27C(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1EB980C48, (uint64_t)&type metadata for Lexer.Token, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C3070(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1EB980B30, (uint64_t)&type metadata for ScriptParser.Argument, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    unint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CD368(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C3188(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1EB980B28, (uint64_t)&type metadata for ScriptParser.ParsedScriptParameter, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 + 31;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 6);
    unint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CD450(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 4]) {
    memmove(v14, a4 + 4, v9 << 6);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C32A0(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C32B4(a1, a2, a3, a4, &qword_1E9DD1DE8, (uint64_t)&type metadata for ScriptLocation);
}

void *sub_1B68C32B4(char a1, uint64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = a4[3];
    uint64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  uint64_t v11 = a4[2];
  if (a2 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = a2;
  }
  if (v12)
  {
    sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    _DWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
    uint64_t v16 = v13 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CD538(0, v11, (unint64_t)v16, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v13 != a4 || v16 >= &a4[v11 + 4]) {
    memmove(v16, a4 + 4, 8 * v11);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_1B68C33D4(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CD190(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD2018, (uint64_t)&type metadata for GeneratedScriptCode, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C3500(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    int64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CBAB4(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C3618(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B67C5060();
    uint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 3);
    int64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CBB9C(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[v9 + 4]) {
    memmove(v14, a4 + 4, 8 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C370C(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B62B7CAC(a1, a2, a3, a4, (unint64_t *)&unk_1E9DCFCE0, MEMORY[0x1E4FBC4C0]);
}

void *sub_1B68C3720(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CB7C4(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD2050, (uint64_t)&type metadata for ScriptKeyPath, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
    memmove(v13, a4 + 4, 48 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C384C(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, (unint64_t *)&unk_1E9DCFCF0, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    int64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  int64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C3970(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B636A230(a1, a2, a3, a4, &qword_1E9DD1D58, MEMORY[0x1E4FBB870]);
}

char *sub_1B68C3984(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1EB980BF0, (uint64_t)&type metadata for TextureCPURuntime.Slice, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 + 31;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 6);
    int64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CC618(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  int64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[64 * v9 + 32]) {
    memmove(v14, a4 + 32, v9 << 6);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C3A9C(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C3AB8(a1, a2, a3, a4, (unint64_t *)&unk_1EB97D8C0, (unint64_t *)&qword_1EB97E288);
}

void *sub_1B68C3AB8(char a1, uint64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    uint64_t v10 = v9 >> 1;
    int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (v11 <= a2) {
      int64_t v11 = a2;
    }
    if (v10 < a2) {
      a2 = v11;
    }
    else {
      a2 = v10;
    }
  }
  uint64_t v12 = a4[2];
  if (a2 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = a2;
  }
  if (v13)
  {
    sub_1B62C5838(0, a5, a6);
    int64_t v14 = (void *)swift_allocObject();
    int64_t v15 = j__malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 17;
    }
    _OWORD v14[2] = v12;
    _OWORD v14[3] = 2 * (v16 >> 4);
    uint64_t v17 = v14 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CCFA0(0, v12, (unint64_t)v17, (uint64_t)a4, a6);
    goto LABEL_23;
  }
  int64_t v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v14 != a4 || v17 >= &a4[2 * v12 + 4]) {
    memmove(v17, a4 + 4, 16 * v12);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v14;
}

char *sub_1B68C3BD4(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1EB980DC0, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBBE00]);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    int64_t v13 = v12 - 32;
    if (v12 < 32) {
      int64_t v13 = v12 - 31;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
    int64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CC44C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  int64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 32]) {
    memmove(v14, a4 + 32, 2 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C3CE8(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C3D10(a1, a2, a3, a4, (void (*)(void))sub_1B68D5C4C, (unint64_t *)&qword_1E9DCDA48, (uint64_t)&type metadata for AuthoringNode.Port);
}

void *sub_1B68C3D10(char a1, uint64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v11 = a4[3];
    uint64_t v12 = v11 >> 1;
    int64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (v13 <= a2) {
      int64_t v13 = a2;
    }
    if (v12 < a2) {
      a2 = v13;
    }
    else {
      a2 = v12;
    }
  }
  uint64_t v14 = a4[2];
  if (a2 <= v14) {
    uint64_t v15 = a4[2];
  }
  else {
    uint64_t v15 = a2;
  }
  if (v15)
  {
    a5(0);
    uint64_t v16 = (void *)swift_allocObject();
    int64_t v17 = j__malloc_size(v16);
    uint64_t v18 = v17 - 32;
    if (v17 < 32) {
      uint64_t v18 = v17 - 17;
    }
    _OWORD v16[2] = v14;
    void v16[3] = 2 * (v18 >> 4);
    unint64_t v19 = v16 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CCE8C(0, v14, (unint64_t)v19, (uint64_t)a4, a6, a7);
    goto LABEL_23;
  }
  uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v19 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v16 != a4 || v19 >= &a4[2 * v14 + 4]) {
    memmove(v19, a4 + 4, 16 * v14);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v16;
}

void *sub_1B68C3E20(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C32B4(a1, a2, a3, a4, &qword_1E9DD1FD0, (uint64_t)&type metadata for AnyType);
}

void *sub_1B68C3E34(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CE9C4(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, (unint64_t *)&unk_1EB980C38, (uint64_t)&type metadata for GraphEntityComponentPropertyReferences.ExportedDirectPropertyAssignment, MEMORY[0x1E4FBBE00]);
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  int64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
    memmove(v13, a4 + 4, 24 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C3F64(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1EB980C20, (uint64_t)&type metadata for EntityComponentProperty, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 4);
    uint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CBF98(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
    memmove(v14, a4 + 4, 16 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C407C(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CA1FC(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1EB980C30, (uint64_t)&type metadata for EntityComponentPropertyLite, MEMORY[0x1E4FBBE00]);
  unint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[7 * v9 + 4]) {
    memmove(v13, a4 + 4, 56 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C41B0(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, &qword_1E9DD1D60, (uint64_t (*)(uint64_t))sub_1B68CE4B0, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 4);
    uint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CDB08(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
    memmove(v14, a4 + 4, 16 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C42D4(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1E9DD1DA0, (uint64_t)&type metadata for GraphScriptingConfig.EvaluationMode, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CC9D8(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
    memmove(v14, a4 + 32, 8 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C43EC(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, &qword_1E9DD20D8, (uint64_t (*)(uint64_t))type metadata accessor for RGPass, MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B636A340(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
    memmove(v14, a4 + 32, 8 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C4510(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6, void (*a7)(void, int64_t, void *, void *))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= a2) {
      int64_t v12 = a2;
    }
    if (v11 < a2) {
      a2 = v12;
    }
    else {
      a2 = v11;
    }
  }
  int64_t v13 = a4[2];
  if (a2 <= v13) {
    int64_t v14 = a4[2];
  }
  else {
    int64_t v14 = a2;
  }
  if (v14)
  {
    sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v15 = (void *)swift_allocObject();
    int64_t v16 = j__malloc_size(v15);
    uint64_t v17 = v16 - 32;
    if (v16 < 32) {
      uint64_t v17 = v16 - 1;
    }
    _OWORD v15[2] = v13;
    v15[3] = 2 * (v17 >> 5);
    uint64_t v18 = v15 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    a7(0, v13, v18, a4);
    goto LABEL_23;
  }
  uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v18 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v15 != a4 || v18 >= &a4[4 * v13 + 4]) {
    memmove(v18, a4 + 4, 32 * v13);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v15;
}

char *sub_1B68C4630(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD20E0, (uint64_t)&type metadata for RGGraphTranslator.LoadResourceInfo, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    int64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  int64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C4748(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD1FA8, (uint64_t)&type metadata for TexturePreview, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    int64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68D43EC(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C4860(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B68CE5C8();
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    int64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  int64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C4954(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 5);
    int64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CC264(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
    memmove(v14, a4 + 4, 32 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C4A70(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B636A230(a1, a2, a3, a4, &qword_1EB980D28, MEMORY[0x1E4FBB2A0]);
}

char *sub_1B68C4A84(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68D44D4(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B68D5A48();
  int64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 12);
  uint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[12 * v9 + 32]) {
    memmove(v13, a4 + 32, 12 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C4B90(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68D45C0(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, (unint64_t *)&unk_1E9DD1DC0, (uint64_t)&type metadata for ScriptDiagnostic, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[7 * v9 + 4]) {
    memmove(v13, a4 + 4, 56 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C4CC4(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C4D14(a1, a2, a3, a4, (void (*)(void))sub_1B68D491C, &qword_1E9DCFD50);
}

void *sub_1B68C4CEC(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C4D14(a1, a2, a3, a4, (void (*)(void))sub_1B68D48A4, (unint64_t *)&unk_1E9DCFD40);
}

void *sub_1B68C4D14(char a1, uint64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    uint64_t v10 = v9 >> 1;
    int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (v11 <= a2) {
      int64_t v11 = a2;
    }
    if (v10 < a2) {
      a2 = v11;
    }
    else {
      a2 = v10;
    }
  }
  uint64_t v12 = a4[2];
  if (a2 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = a2;
  }
  if (!v13)
  {
    int64_t v14 = (void *)MEMORY[0x1E4FBC860];
    int64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CCAB8(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
    goto LABEL_21;
  }
  a5(0);
  int64_t v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  _OWORD v14[2] = v12;
  _OWORD v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  int64_t v16 = v14 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
    memmove(v16, a4 + 4, 40 * v12);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_1B68C4E38(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C4E4C(a1, a2, a3, a4, (unint64_t *)&unk_1EB980B80, (uint64_t)&type metadata for ShaderArgument);
}

void *sub_1B68C4E4C(char a1, uint64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = a4[3];
    uint64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  uint64_t v11 = a4[2];
  if (a2 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = a2;
  }
  if (v12)
  {
    sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 + 31;
    }
    _DWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 6);
    int64_t v16 = v13 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CEAB0(0, v11, (unint64_t)v16, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  int64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v13 != a4 || v16 >= &a4[8 * v11 + 4]) {
    memmove(v16, a4 + 4, v11 << 6);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_1B68C4F6C(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B68CE550();
    uint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 + 31;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 6);
    int64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CD9EC(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 4]) {
    memmove(v14, a4 + 4, v9 << 6);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5060(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CDC00(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD1F80, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[11 * v9 + 4]) {
    memmove(v13, a4 + 4, 88 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5194(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD1E28, (uint64_t)&type metadata for MeshPart, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 + 95;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 7);
    int64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CC530(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 4]) {
    memmove(v14, a4 + 4, v9 << 7);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C52AC(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C52C0(a1, a2, a3, a4, &qword_1E9DD1E30, (uint64_t)&type metadata for MeshBuffer);
}

void *sub_1B68C52C0(char a1, uint64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = a4[3];
    uint64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  uint64_t v11 = a4[2];
  if (a2 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = a2;
  }
  if (!v12)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CC8EC(0, v11, (unint64_t)v15, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  _DWORD v13[2] = v11;
  v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  uint64_t v15 = v13 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
    memmove(v15, a4 + 4, 40 * v11);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_1B68C53F0(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, &qword_1E9DD1F28, (uint64_t (*)(uint64_t))type metadata accessor for vfx_vertex_attribute, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B636A340(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
    memmove(v14, a4 + 32, 8 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5514(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CC350(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CAC44(0, &qword_1E9DD1E38, (uint64_t (*)(uint64_t))sub_1B68D4AF0, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
    memmove(v13, a4 + 4, 24 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5650(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, &qword_1EB980E28, (uint64_t (*)(uint64_t))sub_1B68D588C, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 4);
    size_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68D46C0(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  size_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
    memmove(v14, a4 + 4, 16 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5774(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B68D4994();
    uint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 4);
    size_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CBD9C(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  size_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
    memmove(v14, a4 + 4, 16 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C5868(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68D47B8(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CAC44(0, (unint64_t *)&unk_1E9DD0C80, (uint64_t (*)(uint64_t))type metadata accessor for MTLViewport, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  uint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[48 * v9 + 32]) {
    memmove(v13, a4 + 32, 48 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C59A4(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1E9DCFD30, (uint64_t)&type metadata for ParticleFlockingSolverData.Cell, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5ABC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1B62CB064(a1, a2, a3, a4, (unint64_t *)&unk_1E9DCFD00, (uint64_t)&type metadata for FlockingParticle, (void (*)(void, int64_t, void *, void *))sub_1B68C9FCC);
}

char *sub_1B68C5AE4(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68D4A04(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD1E20, (uint64_t)&type metadata for ShadowRenderingCommand, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 160);
  uint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[160 * v9 + 32]) {
    memmove(v13, a4 + 32, 160 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5C10(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C5C60(a1, a2, a3, a4, (void (*)(void))sub_1B68D5960, (unint64_t *)&unk_1E9DD1F70);
}

void *sub_1B68C5C38(char a1, uint64_t a2, char a3, void *a4)
{
  return sub_1B68C5C60(a1, a2, a3, a4, (void (*)(void))sub_1B68D59D4, &qword_1E9DD1F90);
}

void *sub_1B68C5C60(char a1, uint64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    uint64_t v10 = v9 >> 1;
    int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (v11 <= a2) {
      int64_t v11 = a2;
    }
    if (v10 < a2) {
      a2 = v11;
    }
    else {
      a2 = v10;
    }
  }
  uint64_t v12 = a4[2];
  if (a2 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = a2;
  }
  if (v13)
  {
    a5(0);
    size_t v14 = (void *)swift_allocObject();
    int64_t v15 = j__malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 1;
    }
    _OWORD v14[2] = v12;
    _OWORD v14[3] = 2 * (v16 >> 5);
    uint64_t v17 = v14 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68D4C10(0, v12, (unint64_t)v17, (uint64_t)a4, a6);
    goto LABEL_23;
  }
  size_t v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v14 != a4 || v17 >= &a4[4 * v12 + 4]) {
    memmove(v17, a4 + 4, 32 * v12);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_1B68C5D70(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CAB04(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, &qword_1E9DD1F60, (uint64_t)&_s7ContextC14AssignmentInfoVN, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C5E9C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1B68C5EC8(a1, a2, a3, a4, (void (*)(void))sub_1B68D57A8, (void (*)(void, int64_t, void *, void *))sub_1B68CA7B4);
}

void *sub_1B68C5EC8(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), void (*a6)(void, int64_t, void *, void *))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (v11 <= a2) {
      int64_t v11 = a2;
    }
    if (v10 < a2) {
      a2 = v11;
    }
    else {
      a2 = v10;
    }
  }
  int64_t v12 = a4[2];
  if (a2 <= v12) {
    int64_t v13 = a4[2];
  }
  else {
    int64_t v13 = a2;
  }
  if (v13)
  {
    a5(0);
    size_t v14 = (void *)swift_allocObject();
    int64_t v15 = j__malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 25;
    }
    _OWORD v14[2] = v12;
    _OWORD v14[3] = 2 * (v16 >> 3);
    uint64_t v17 = v14 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    a6(0, v12, v17, a4);
    goto LABEL_23;
  }
  size_t v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v14 != a4 || v17 >= &a4[v12 + 4]) {
    memmove(v17, a4 + 4, 8 * v12);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_1B68C5FD0(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68D4D1C(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B68D4B98();
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  int64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
    memmove(v13, a4 + 4, 48 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C60D8(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, &qword_1E9DCFD10, (uint64_t (*)(uint64_t))sub_1B6786F8C, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CDCEC(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[32 * v9 + 32]) {
    memmove(v14, a4 + 32, 32 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C61FC(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CC080(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CAC44(0, &qword_1E9DD1F40, (uint64_t (*)(uint64_t))sub_1B68D58C0, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
    memmove(v13, a4 + 4, 40 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B68C6334(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD1EF0, (uint64_t)&type metadata for GraphNodeLibrary.Entry, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    void v11[2] = v9;
    _DWORD v11[3] = 2 * (v13 >> 4);
    size_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68D508C(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  size_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
    memmove(v14, a4 + 4, 16 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C644C(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B62F9114(a1, a2, a3, a4, &qword_1E9DD1EF8, (unint64_t *)&unk_1E9DD1F00, (unint64_t *)&qword_1E9DD1888);
}

void *sub_1B68C6470(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1B68C5EC8(a1, a2, a3, a4, sub_1B68D5824, (void (*)(void, int64_t, void *, void *))sub_1B636A340);
}

void *sub_1B68C649C(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68CC6FC(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CAC44(0, &qword_1E9DD1E88, (uint64_t (*)(uint64_t))sub_1B68D51E4, MEMORY[0x1E4FBBE00]);
  int64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  _DWORD v11[3] = 2 * ((uint64_t)(v12 - 32) / 96);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[12 * v9 + 4]) {
    memmove(v13, a4 + 4, 96 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C65D4(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1E9DD2120, (uint64_t)&type metadata for VFXEmitter, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C66EC(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CAC44(0, &qword_1E9DD1E70, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 + 31;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 6);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B68CC618(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[64 * v9 + 32]) {
    memmove(v14, a4 + 32, v9 << 6);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C6810(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B68D5174();
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C6904(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B68D550C();
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B636A340(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
    memmove(v14, a4 + 32, 8 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C69F8(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B68C94A8(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B68D5444();
  int64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  uint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[24 * v9 + 32]) {
    memmove(v13, a4 + 32, 24 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C6B04(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B68D53CC();
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B636A340(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
    memmove(v14, a4 + 32, 8 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1B68C6BF8(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B68D6A9C();
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    size_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B68C6CEC(char a1, uint64_t a2, char a3, unint64_t a4)
{
  return sub_1B68C21E0(a1, a2, a3, a4, &qword_1E9DD2138, type metadata accessor for EdgeCoder, type metadata accessor for EdgeCoder, type metadata accessor for EdgeCoder);
}

void *sub_1B68C6D34(unint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC860];
  if (a1)
  {
    unint64_t v2 = a1;
    uint64_t v3 = 0;
    unint64_t v4 = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    do
    {
      unint64_t v5 = __clz(__rbit64(v2));
      uint64_t v6 = v2 & ~(1 << v5);
      if (((1 << v5) & v2) == 0) {
        uint64_t v6 = v2;
      }
      if (v5 >= 0x40) {
        uint64_t v7 = 0;
      }
      else {
        uint64_t v7 = 1 << v5;
      }
      if (v5 < 0x40) {
        unint64_t v2 = v6;
      }
      if (!v3)
      {
        if ((uint64_t)(v1[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
          unint64_t v8 = 1;
        }
        else {
          unint64_t v8 = v1[3] & 0xFFFFFFFFFFFFFFFELL;
        }
        sub_1B62CB1E8(0, &qword_1E9DD2148, (uint64_t)&type metadata for QueryOptions, MEMORY[0x1E4FBBE00]);
        uint64_t v9 = (void *)swift_allocObject();
        int64_t v10 = j__malloc_size(v9);
        uint64_t v11 = v10 - 32;
        if (v10 < 32) {
          uint64_t v11 = v10 - 25;
        }
        uint64_t v12 = v11 >> 3;
        v9[2] = v8;
        void v9[3] = 2 * (v11 >> 3);
        unint64_t v13 = (unint64_t)(v9 + 4);
        uint64_t v14 = v1[3] >> 1;
        if (v1[2])
        {
          if (v9 != v1 || v13 >= (unint64_t)&v1[v14 + 4]) {
            memmove(v9 + 4, v1 + 4, 8 * v14);
          }
          _OWORD v1[2] = 0;
        }
        unint64_t v4 = (uint64_t *)(v13 + 8 * v14);
        uint64_t v3 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - v14;
        swift_release();
        uint64_t v1 = v9;
      }
      --v3;
      *v4++ = v7;
    }
    while (v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  unint64_t v16 = v1[3];
  if (v16 >= 2) {
    _OWORD v1[2] = (v16 >> 1) - v3;
  }
  return v1;
}

void *sub_1B68C6EA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  unint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1 < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    unint64_t v4 = *(unint64_t **)(a1 + 32);
    unint64_t v5 = *v4;
    swift_retain();
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = v2 + 4;
    uint64_t v10 = MEMORY[0x1E4FBB550];
    unint64_t v11 = v5;
    if (!v5) {
      goto LABEL_5;
    }
LABEL_3:
    unint64_t v12 = __clz(__rbit64(v11)) + v7;
    if (v6) {
      goto LABEL_28;
    }
LABEL_14:
    if ((uint64_t)(v2[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
      unint64_t v16 = 1;
    }
    else {
      unint64_t v16 = v2[3] & 0xFFFFFFFFFFFFFFFELL;
    }
    sub_1B62CB1E8(0, &qword_1EB980D48, v10, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = (void *)swift_allocObject();
    int64_t v18 = j__malloc_size(v17);
    uint64_t v19 = v18 - 32;
    if (v18 < 32) {
      uint64_t v19 = v18 - 25;
    }
    uint64_t v20 = v19 >> 3;
    void v17[2] = v16;
    void v17[3] = 2 * (v19 >> 3);
    unint64_t v21 = (unint64_t)(v17 + 4);
    uint64_t v22 = v2[3] >> 1;
    if (v2[2])
    {
      if (v17 != v2 || v21 >= (unint64_t)&v2[v22 + 4]) {
        memmove(v17 + 4, v2 + 4, 8 * v22);
      }
      v2[2] = 0;
    }
    uint64_t v9 = (unint64_t *)(v21 + 8 * v22);
    uint64_t v6 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
    swift_release();
    unint64_t v2 = v17;
LABEL_28:
    while (1)
    {
      --v6;
      *uint64_t v9 = v12;
      unint64_t v7 = v12 + 1;
      uint64_t v8 = (uint64_t)(v12 + 1) >> 6;
      uint64_t v1 = *(void *)(a1 + 24);
      if (v8 >= v1) {
        break;
      }
      unint64_t v4 = *(unint64_t **)(a1 + 32);
      ++v9;
      unint64_t v11 = v4[v8] >> (v7 & 0x3F);
      if (v11) {
        goto LABEL_3;
      }
LABEL_5:
      uint64_t v13 = v8 + 1;
      if (v8 + 1 >= v1) {
        break;
      }
      unint64_t v14 = v4[v13];
      if (!v14)
      {
        uint64_t v13 = v8 + 2;
        if (v8 + 2 >= v1) {
          break;
        }
        unint64_t v14 = v4[v13];
        if (!v14)
        {
          uint64_t v15 = v8 + 3;
          while (v1 != v15)
          {
            unint64_t v14 = v4[v15++];
            if (v14)
            {
              uint64_t v13 = v15 - 1;
              goto LABEL_13;
            }
          }
          break;
        }
      }
LABEL_13:
      unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
      if (!v6) {
        goto LABEL_14;
      }
    }
    swift_release();
  }
  unint64_t v24 = v2[3];
  if (v24 >= 2) {
    v2[2] = (v24 >> 1) - v6;
  }
  return v2;
}

uint64_t *sub_1B68C70B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4)
{
  return sub_1B68C8944(a1, a2, a3, a4, sub_1B68D5CC8, (void (*)(uint64_t))sub_1B68D6D40);
}

void *sub_1B68C70DC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = (void *)swift_allocObject();
    int64_t v7 = j__malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    uint64_t v9 = v8 >> 3;
    _OWORD v6[2] = v3;
    v6[3] = (2 * v9) | 1;
    uint64_t v36 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v10 = v6 + 4;
    uint64_t v11 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v37 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v12 = 0;
    uint64_t v13 = v3;
    do
    {
      if (v12 == v3)
      {
        uint64_t v14 = 0;
        uint64_t v12 = v3;
      }
      else
      {
        uint64_t v15 = *(void *)(v11 + 8 * v12);
        if (*(void *)(a1 + 16) && (unint64_t v16 = sub_1B62C1A30(*(void *)(v11 + 8 * v12)), (v17 & 1) != 0))
        {
          uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v16);
          swift_retain();
        }
        else
        {
          uint64_t v18 = 0;
        }
        ++v12;
        uint64_t v40 = v15;
        uint64_t v41 = v18;
        a3(&v39, &v40);
        swift_release();
        uint64_t v14 = v39;
      }
      *v10++ = v14;
      --v13;
    }
    while (v13);
    uint64_t v19 = v36 - v3;
    if (v12 != v3)
    {
      uint64_t v20 = a2;
      do
      {
        uint64_t v21 = *(void *)(v20 + 8 * v12 + 32);
        if (*(void *)(a1 + 16) && (unint64_t v22 = sub_1B62C1A30(*(void *)(v20 + 8 * v12 + 32)), (v23 & 1) != 0))
        {
          uint64_t v24 = *(void *)(*(void *)(a1 + 56) + 8 * v22);
          swift_retain();
        }
        else
        {
          uint64_t v24 = 0;
        }
        uint64_t v40 = v21;
        uint64_t v41 = v24;
        a3(&v39, &v40);
        swift_release();
        uint64_t v25 = v39;
        if (!v19)
        {
          if ((uint64_t)(v6[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
            unint64_t v26 = 1;
          }
          else {
            unint64_t v26 = v6[3] & 0xFFFFFFFFFFFFFFFELL;
          }
          long long v27 = (void *)swift_allocObject();
          int64_t v28 = j__malloc_size(v27);
          uint64_t v29 = v28 - 32;
          if (v28 < 32) {
            uint64_t v29 = v28 - 25;
          }
          uint64_t v30 = v29 >> 3;
          v27[2] = v26;
          _OWORD v27[3] = (2 * (v29 >> 3)) | 1;
          unint64_t v31 = (unint64_t)(v27 + 4);
          uint64_t v32 = v6[3] >> 1;
          if (v6[2])
          {
            if (v27 != v6 || v31 >= (unint64_t)&v6[v32 + 4]) {
              memmove(v27 + 4, v6 + 4, 8 * v32);
            }
            _OWORD v6[2] = 0;
          }
          uint64_t v10 = (void *)(v31 + 8 * v32);
          uint64_t v19 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
          swift_release();
          uint64_t v6 = v27;
          uint64_t v20 = v37;
        }
        ++v12;
        --v19;
        *v10++ = v25;
      }
      while (v3 != v12);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
  }
  unint64_t v34 = v6[3];
  if (v34 >= 2) {
    _OWORD v6[2] = (v34 >> 1) - v19;
  }
  return v6;
}

void *sub_1B68C73D8(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, uint64_t *))
{
  uint64_t v5 = a1;
  uint64_t v6 = a2 - a1;
  if (a2 - a1 <= 0)
  {
    int64_t v7 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v10 = *(void *)(MEMORY[0x1E4FBC860] + 24);
  }
  else
  {
    sub_1B629CD98();
    int64_t v7 = (void *)swift_allocObject();
    int64_t v8 = j__malloc_size(v7);
    uint64_t v9 = v8 - 32;
    if (v8 < 32) {
      uint64_t v9 = v8 - 17;
    }
    unint64_t v10 = 2 * (v9 >> 4);
    _OWORD v7[2] = v6;
    _OWORD v7[3] = v10;
  }
  unint64_t i = v10 >> 1;
  if (a2 == v5)
  {
    swift_retain();
  }
  else
  {
    uint64_t v12 = v7 + 4;
    uint64_t v13 = i + v5;
    swift_retain();
    uint64_t v14 = v5;
    do
    {
      if (v14 == a2)
      {
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v14 = a2;
      }
      else
      {
        uint64_t v30 = v14;
        a3(&v29, &v30);
        uint64_t v16 = *((void *)&v29 + 1);
        uint64_t v15 = v29;
        ++v14;
      }
      *uint64_t v12 = v15;
      v12[1] = v16;
      v12 += 2;
      ++v5;
    }
    while (a2 != v5);
    for (unint64_t i = v13 - a2; a2 != v14; v12 += 2)
    {
      uint64_t v30 = v14;
      a3(&v29, &v30);
      long long v19 = v29;
      if (!i)
      {
        long long v28 = v29;
        if ((uint64_t)(v7[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
          unint64_t v20 = 1;
        }
        else {
          unint64_t v20 = v7[3] & 0xFFFFFFFFFFFFFFFELL;
        }
        sub_1B629CD98();
        uint64_t v21 = (void *)swift_allocObject();
        int64_t v22 = j__malloc_size(v21);
        uint64_t v23 = v22 - 32;
        if (v22 < 32) {
          uint64_t v23 = v22 - 17;
        }
        uint64_t v24 = v23 >> 4;
        v21[2] = v20;
        v21[3] = 2 * (v23 >> 4);
        unint64_t v25 = (unint64_t)(v21 + 4);
        uint64_t v26 = v7[3] >> 1;
        if (v7[2])
        {
          if (v21 != v7 || v25 >= (unint64_t)&v7[2 * v26 + 4]) {
            memmove(v21 + 4, v7 + 4, 16 * v26);
          }
          _OWORD v7[2] = 0;
        }
        uint64_t v12 = (void *)(v25 + 16 * v26);
        unint64_t i = (v24 & 0x7FFFFFFFFFFFFFFFLL) - v26;
        swift_release();
        int64_t v7 = v21;
        long long v19 = v28;
      }
      ++v14;
      --i;
      *(_OWORD *)uint64_t v12 = v19;
    }
  }
  swift_release();
  unint64_t v17 = v7[3];
  if (v17 >= 2) {
    _OWORD v7[2] = (v17 >> 1) - i;
  }
  return v7;
}

void *sub_1B68C75F8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = (void *)swift_allocObject();
    int64_t v7 = j__malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    uint64_t v9 = v8 >> 3;
    _OWORD v6[2] = v3;
    v6[3] = (2 * v9) | 1;
    uint64_t v45 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    long long v47 = v6;
    unint64_t v10 = v6 + 4;
    uint64_t v11 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v46 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v12 = 0;
    uint64_t v13 = v3;
    do
    {
      if (v12 == v3)
      {
        uint64_t v14 = 0;
        uint64_t v12 = v3;
      }
      else
      {
        uint64_t v15 = (uint64_t *)(v11 + 16 * v12);
        uint64_t v17 = *v15;
        uint64_t v16 = v15[1];
        uint64_t v18 = *(void *)(a1 + 16);
        swift_bridgeObjectRetain();
        if (v18)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1B62B2CE0(v17, v16);
          if (v20)
          {
            uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * v19);
            swift_retain();
          }
          else
          {
            uint64_t v21 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v21 = 0;
        }
        ++v12;
        uint64_t v50 = v17;
        uint64_t v51 = v16;
        uint64_t v52 = v21;
        a3(&v49, &v50);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v14 = v49;
      }
      *v10++ = v14;
      --v13;
    }
    while (v13);
    uint64_t v22 = v45 - v3;
    uint64_t v23 = v3 - v12;
    if (v3 != v12)
    {
      uint64_t v26 = (uint64_t *)(v46 + 16 * v12 + 40);
      do
      {
        uint64_t v28 = *(v26 - 1);
        uint64_t v27 = *v26;
        uint64_t v29 = *(void *)(a1 + 16);
        swift_bridgeObjectRetain();
        if (v29)
        {
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_1B62B2CE0(v28, v27);
          if (v31)
          {
            uint64_t v32 = *(void *)(*(void *)(a1 + 56) + 8 * v30);
            swift_retain();
          }
          else
          {
            uint64_t v32 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v32 = 0;
        }
        uint64_t v50 = v28;
        uint64_t v51 = v27;
        uint64_t v52 = v32;
        a3(&v49, &v50);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v33 = v49;
        if (!v22)
        {
          if ((uint64_t)(v47[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
            unint64_t v34 = 1;
          }
          else {
            unint64_t v34 = v47[3] & 0xFFFFFFFFFFFFFFFELL;
          }
          long long v35 = (void *)swift_allocObject();
          int64_t v36 = j__malloc_size(v35);
          uint64_t v38 = v36 - 32;
          BOOL v37 = v36 < 32;
          uint64_t v39 = v36 - 25;
          uint64_t v40 = v47;
          if (v37) {
            uint64_t v38 = v39;
          }
          uint64_t v41 = v38 >> 3;
          uint64_t v35[2] = v34;
          v35[3] = (2 * (v38 >> 3)) | 1;
          unint64_t v42 = (unint64_t)(v35 + 4);
          uint64_t v43 = v47[3] >> 1;
          if (v47[2])
          {
            if (v35 != v47 || v42 >= (unint64_t)&v47[v43 + 4])
            {
              memmove(v35 + 4, v47 + 4, 8 * v43);
              uint64_t v40 = v47;
            }
            void v40[2] = 0;
          }
          unint64_t v10 = (void *)(v42 + 8 * v43);
          uint64_t v22 = (v41 & 0x7FFFFFFFFFFFFFFFLL) - v43;
          swift_release();
          long long v47 = v35;
        }
        v26 += 2;
        --v22;
        *v10++ = v33;
        --v23;
      }
      while (v23);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = v47;
  }
  else
  {
    uint64_t result = (void *)MEMORY[0x1E4FBC860];
    uint64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
  }
  unint64_t v25 = result[3];
  if (v25 >= 2) {
    result[2] = (v25 >> 1) - v22;
  }
  return result;
}

unint64_t *sub_1B68C7950(uint64_t a1, uint64_t a2, void (*a3)(unint64_t *__return_ptr, uint64_t *))
{
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    sub_1B62CB1E8(0, &qword_1EB980BA8, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = (unint64_t *)swift_allocObject();
    int64_t v7 = j__malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 1;
    }
    uint64_t v9 = v8 >> 5;
    _OWORD v6[2] = v3;
    v6[3] = 2 * v9;
    uint64_t v54 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v10 = v6 + 4;
    int8x16_t v56 = v6;
    uint64_t v57 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v55 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v11 = 0;
    unint64_t v12 = v3;
    uint64_t v61 = a1;
    unint64_t v59 = v3;
    do
    {
      if (v11 == v3)
      {
        char v13 = 0;
        unint64_t v14 = 0;
        char v15 = 0;
        unint64_t v16 = 0xF000000000000007;
        unint64_t v11 = v3;
      }
      else
      {
        uint64_t v17 = (uint64_t *)(v57 + 16 * v11);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        uint64_t v20 = *(void *)(a1 + 16);
        swift_bridgeObjectRetain();
        if (v20)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_1B62B2CE0(v19, v18);
          if (v22)
          {
            uint64_t v23 = *(void *)(a1 + 56) + 32 * v21;
            unint64_t v24 = *(void *)v23;
            char v25 = *(unsigned char *)(v23 + 8);
            uint64_t v20 = *(void *)(v23 + 16);
            int v26 = *(unsigned __int8 *)(v23 + 24);
            sub_1B62C6AA8(*(void *)v23);
          }
          else
          {
            char v25 = 0;
            uint64_t v20 = 0;
            int v26 = 0;
            unint64_t v24 = 0xF000000000000007;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          char v25 = 0;
          int v26 = 0;
          unint64_t v24 = 0xF000000000000007;
        }
        ++v11;
        uint64_t v67 = v19;
        uint64_t v68 = v18;
        unint64_t v69 = v24;
        char v70 = v25;
        uint64_t v71 = v20;
        BOOL v72 = v26 != 0;
        a3(&v63, &v67);
        swift_bridgeObjectRelease();
        sub_1B68D46AC(v24);
        unint64_t v16 = v63;
        char v13 = v64;
        unint64_t v14 = v65;
        char v15 = v66;
        unint64_t v3 = v59;
        a1 = v61;
      }
      *unint64_t v10 = v16;
      *((unsigned char *)v10 + 8) = v13;
      _OWORD v10[2] = v14;
      *((unsigned char *)v10 + 24) = v15;
      v10 += 4;
      --v12;
    }
    while (v12);
    unint64_t v27 = v54 - v3;
    unint64_t v28 = v3 - v11;
    if (v3 != v11)
    {
      uint64_t v30 = (uint64_t *)(v55 + 16 * v11 + 40);
      do
      {
        uint64_t v33 = *(v30 - 1);
        uint64_t v32 = *v30;
        uint64_t v34 = *(void *)(a1 + 16);
        swift_bridgeObjectRetain();
        unint64_t v60 = v28;
        if (v34)
        {
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_1B62B2CE0(v33, v32);
          if (v36)
          {
            uint64_t v37 = *(void *)(a1 + 56) + 32 * v35;
            unint64_t v38 = *(void *)v37;
            LOBYTE(v34) = *(unsigned char *)(v37 + 8);
            uint64_t v39 = *(void *)(v37 + 16);
            int v40 = *(unsigned __int8 *)(v37 + 24);
            sub_1B62C6AA8(*(void *)v37);
          }
          else
          {
            LOBYTE(v34) = 0;
            uint64_t v39 = 0;
            int v40 = 0;
            unint64_t v38 = 0xF000000000000007;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v39 = 0;
          int v40 = 0;
          unint64_t v38 = 0xF000000000000007;
        }
        uint64_t v67 = v33;
        uint64_t v68 = v32;
        unint64_t v69 = v38;
        char v70 = v34;
        uint64_t v71 = v39;
        BOOL v72 = v40 != 0;
        a3(&v63, &v67);
        swift_bridgeObjectRelease();
        sub_1B68D46AC(v38);
        unint64_t v41 = v63;
        char v42 = v64;
        unint64_t v43 = v65;
        char v44 = v66;
        if (!v27)
        {
          if ((uint64_t)(v56[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
            unint64_t v45 = 1;
          }
          else {
            unint64_t v45 = v56[3] & 0xFFFFFFFFFFFFFFFELL;
          }
          uint64_t v46 = (char *)swift_allocObject();
          int64_t v47 = j__malloc_size(v46);
          uint64_t v48 = v47 - 32;
          if (v47 < 32) {
            uint64_t v48 = v47 - 1;
          }
          uint64_t v31 = v48 >> 5;
          *((void *)v46 + 2) = v45;
          *((void *)v46 + 3) = 2 * (v48 >> 5);
          uint64_t v49 = v46 + 32;
          unint64_t v50 = v56[3] >> 1;
          size_t v51 = 32 * v50;
          if (v56[2])
          {
            uint64_t v52 = (char *)(v56 + 4);
            if (v46 != (char *)v56 || v49 >= &v52[v51])
            {
              uint64_t v58 = v48 >> 5;
              memmove(v46 + 32, v52, v51);
              uint64_t v31 = v58;
            }
            v56[2] = 0;
          }
          unint64_t v10 = (unint64_t *)&v49[v51];
          unint64_t v27 = (v31 & 0x7FFFFFFFFFFFFFFFLL) - v50;
          swift_release();
          int8x16_t v56 = (unint64_t *)v46;
        }
        a1 = v61;
        v30 += 2;
        *unint64_t v10 = v41;
        --v27;
        *((unsigned char *)v10 + 8) = v42;
        _OWORD v10[2] = v43;
        *((unsigned char *)v10 + 24) = v44;
        v10 += 4;
        unint64_t v28 = v60 - 1;
      }
      while (v60 != 1);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = v56;
  }
  else
  {
    uint64_t result = (unint64_t *)MEMORY[0x1E4FBC860];
    unint64_t v27 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
  }
  unint64_t v53 = result[3];
  if (v53 >= 2) {
    result[2] = (v53 >> 1) - v27;
  }
  return result;
}

char *sub_1B68C7D8C(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v6 = (char *)(MEMORY[0x1E4FBC860] + 32);
  while (v4 != *(void *)(a1 + 16))
  {
    uint64_t v7 = *(void *)(v2 + 8 * v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v7 && *(void *)(v7 + 16))
    {
      uint64_t v8 = 0;
      ++v4;
      do
      {
        uint64_t v9 = v7 + 16 * v8;
        uint64_t v10 = *(void *)(v9 + 40);
        uint64_t v21 = *(void *)(v9 + 32);
        if (v3)
        {
          swift_bridgeObjectRetain();
          unint64_t v11 = v5;
        }
        else
        {
          if ((uint64_t)(*((void *)v5 + 3) & 0xFFFFFFFFFFFFFFFELL) <= 1) {
            unint64_t v12 = 1;
          }
          else {
            unint64_t v12 = *((void *)v5 + 3) & 0xFFFFFFFFFFFFFFFELL;
          }
          sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
          unint64_t v11 = (char *)swift_allocObject();
          int64_t v13 = j__malloc_size(v11);
          uint64_t v14 = v13 - 32;
          if (v13 < 32) {
            uint64_t v14 = v13 - 17;
          }
          uint64_t v15 = v14 >> 4;
          *((void *)v11 + 2) = v12;
          *((void *)v11 + 3) = 2 * (v14 >> 4);
          unint64_t v16 = v11 + 32;
          uint64_t v17 = *((void *)v5 + 3) >> 1;
          uint64_t v6 = &v11[16 * v17 + 32];
          uint64_t v3 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          if (*((void *)v5 + 2))
          {
            uint64_t v18 = v5 + 32;
            if (v11 != v5 || v16 >= &v18[16 * v17]) {
              memmove(v16, v18, 16 * v17);
            }
            swift_bridgeObjectRetain();
            *((void *)v5 + 2) = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_release();
        }
        ++v8;
        --v3;
        *(void *)uint64_t v6 = v21;
        *((void *)v6 + 1) = v10;
        v6 += 16;
        uint64_t v5 = v11;
      }
      while (v8 != *(void *)(v7 + 16));
    }
    else
    {
      ++v4;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = *((void *)v5 + 3);
  if (v19 >= 2) {
    *((void *)v5 + 2) = (v19 >> 1) - v3;
  }
  return v5;
}

void *sub_1B68C7F78(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, uint64_t *))
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    sub_1B62CAC44(0, (unint64_t *)&unk_1E9DD2090, (uint64_t (*)(uint64_t))sub_1B68D60AC, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = (void *)swift_allocObject();
    uint64_t v7 = (uint64_t)(j__malloc_size(v6) - 32) / 152;
    _OWORD v6[2] = v3;
    v6[3] = 2 * v7;
    uint64_t v57 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v60 = a2 + 32;
    uint64_t v61 = a1;
    swift_bridgeObjectRetain();
    uint64_t v58 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = 0;
    unint64_t v59 = v6;
    uint64_t v9 = v6 + 23;
    uint64_t v10 = 1;
LABEL_3:
    uint64_t v11 = *(void *)(v60 + 8 * v8);
    if (*(void *)(v61 + 16) && (unint64_t v12 = sub_1B62C1A30(*(void *)(v60 + 8 * v8)), (v13 & 1) != 0))
    {
      uint64_t v14 = (_OWORD *)(*(void *)(v61 + 56) + 152 * v12);
      long long v15 = v14[1];
      long long v94 = *v14;
      long long v95 = v15;
      long long v16 = v14[5];
      long long v18 = v14[2];
      long long v17 = v14[3];
      long long v98 = v14[4];
      long long v99 = v16;
      long long v96 = v18;
      long long v97 = v17;
      long long v20 = v14[7];
      long long v19 = v14[8];
      long long v21 = v14[6];
      char v103 = *((unsigned char *)v14 + 144);
      long long v101 = v20;
      long long v102 = v19;
      long long v100 = v21;
      memmove(&__dst, v14, 0x91uLL);
      nullsub_1(&__dst);
      sub_1B62CA090((uint64_t)&v94);
    }
    else
    {
      sub_1B68D608C((uint64_t)&__dst);
    }
    sub_1B634FE58((uint64_t)&__dst, (uint64_t)v104, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
    sub_1B634FE58((uint64_t)v104, (uint64_t)&v74, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
    long long v70 = v80;
    long long v71 = v81;
    long long v72 = v82;
    char v73 = v83;
    long long v66 = v76;
    long long v67 = v77;
    long long v68 = v78;
    long long v69 = v79;
    long long v64 = v74;
    long long v65 = v75;
    ++v8;
    uint64_t __dst = v11;
    a3(&v84, &__dst);
    sub_1B62CA064((uint64_t)v104);
    long long v100 = v90;
    long long v101 = v91;
    long long v102 = v92;
    char v103 = v93;
    long long v96 = v86;
    long long v97 = v87;
    long long v98 = v88;
    long long v99 = v89;
    long long v94 = v84;
    long long v95 = v85;
    nullsub_1(&v94);
    sub_1B634FE58((uint64_t)&v94, (uint64_t)v106, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
    while (1)
    {
      sub_1B634FE58((uint64_t)v106, (uint64_t)v104, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
      long long v22 = v104[7];
      *(_OWORD *)(v9 - 7) = v104[6];
      *(_OWORD *)(v9 - 5) = v22;
      *(_OWORD *)(v9 - 3) = v104[8];
      *((unsigned char *)v9 - 8) = v105;
      long long v23 = v104[3];
      *(_OWORD *)(v9 - 15) = v104[2];
      *(_OWORD *)(v9 - 13) = v23;
      long long v24 = v104[5];
      *(_OWORD *)(v9 - 11) = v104[4];
      *(_OWORD *)(v9 - 9) = v24;
      long long v25 = v104[1];
      *(_OWORD *)(v9 - 19) = v104[0];
      *(_OWORD *)(v9 - 17) = v25;
      if (v3 == v10) {
        break;
      }
      v9 += 19;
      ++v10;
      if (v8 != v3) {
        goto LABEL_3;
      }
      sub_1B68D608C((uint64_t)&__dst);
      sub_1B634FE58((uint64_t)&__dst, (uint64_t)v106, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
      uint64_t v8 = v3;
    }
    uint64_t v26 = v57 - v3;
    if (v8 != v3)
    {
      uint64_t v28 = v3 - 1;
      uint64_t v29 = v61;
      uint64_t v30 = a2;
      while (1)
      {
        uint64_t v31 = *(void *)(v30 + 8 * v8 + 32);
        if (*(void *)(v29 + 16) && (unint64_t v32 = sub_1B62C1A30(*(void *)(v30 + 8 * v8 + 32)), (v33 & 1) != 0))
        {
          uint64_t v34 = (_OWORD *)(*(void *)(v29 + 56) + 152 * v32);
          long long v35 = v34[1];
          long long v84 = *v34;
          long long v85 = v35;
          long long v36 = v34[5];
          long long v38 = v34[2];
          long long v37 = v34[3];
          long long v88 = v34[4];
          long long v89 = v36;
          long long v86 = v38;
          long long v87 = v37;
          long long v40 = v34[7];
          long long v39 = v34[8];
          long long v41 = v34[6];
          char v93 = *((unsigned char *)v34 + 144);
          long long v91 = v40;
          long long v92 = v39;
          long long v90 = v41;
          memmove(&__dst, v34, 0x91uLL);
          nullsub_1(&__dst);
          sub_1B62CA090((uint64_t)&v84);
        }
        else
        {
          sub_1B68D608C((uint64_t)&__dst);
        }
        sub_1B634FE58((uint64_t)&__dst, (uint64_t)&v94, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
        sub_1B634FE58((uint64_t)&v94, (uint64_t)&v74, (unint64_t *)&unk_1E9DD2080, (uint64_t (*)(uint64_t))sub_1B68D60AC);
        long long v70 = v80;
        long long v71 = v81;
        long long v72 = v82;
        char v73 = v83;
        long long v66 = v76;
        long long v67 = v77;
        long long v68 = v78;
        long long v69 = v79;
        long long v64 = v74;
        long long v65 = v75;
        uint64_t __dst = v31;
        a3(&v84, &__dst);
        sub_1B62CA064((uint64_t)&v94);
        if (!v26)
        {
          if ((uint64_t)(v59[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
            unint64_t v42 = 1;
          }
          else {
            unint64_t v42 = v59[3] & 0xFFFFFFFFFFFFFFFELL;
          }
          unint64_t v43 = (void *)swift_allocObject();
          uint64_t v44 = (uint64_t)(j__malloc_size(v43) - 32) / 152;
          void v43[2] = v42;
          v43[3] = 2 * v44;
          unint64_t v45 = (unint64_t)(v43 + 4);
          uint64_t v46 = v59[3] >> 1;
          size_t v47 = 152 * v46;
          if (v59[2])
          {
            if (v43 != v59 || v45 >= (unint64_t)&v59[v47 / 8 + 4]) {
              memmove(v43 + 4, v59 + 4, v47);
            }
            _OWORD v59[2] = 0;
          }
          uint64_t v9 = (void *)(v45 + v47);
          uint64_t v26 = (v44 & 0x7FFFFFFFFFFFFFFFLL) - v46;
          swift_release();
          unint64_t v59 = v43;
          uint64_t v29 = v61;
          uint64_t v30 = v58;
        }
        --v26;
        long long v49 = v85;
        *(_OWORD *)uint64_t v9 = v84;
        *((_OWORD *)v9 + 1) = v49;
        long long v50 = v86;
        long long v51 = v87;
        long long v52 = v89;
        *((_OWORD *)v9 + 4) = v88;
        *((_OWORD *)v9 + 5) = v52;
        *((_OWORD *)v9 + 2) = v50;
        *((_OWORD *)v9 + 3) = v51;
        long long v53 = v90;
        long long v54 = v91;
        long long v55 = v92;
        *((unsigned char *)v9 + 144) = v93;
        *((_OWORD *)v9 + 7) = v54;
        *((_OWORD *)v9 + 8) = v55;
        *((_OWORD *)v9 + 6) = v53;
        if (v28 == v8) {
          break;
        }
        v9 += 19;
        ++v8;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = v59;
  }
  else
  {
    uint64_t result = (void *)MEMORY[0x1E4FBC860];
    uint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
  }
  unint64_t v56 = result[3];
  if (v56 >= 2) {
    result[2] = (v56 >> 1) - v26;
  }
  return result;
}

long long *sub_1B68C85F8(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, uint64_t *))
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    sub_1B68CE434();
    uint64_t v6 = (long long *)swift_allocObject();
    int64_t v7 = j__malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 17;
    }
    uint64_t v9 = v8 >> 4;
    *((void *)v6 + 2) = v3;
    *((void *)v6 + 3) = 2 * v9;
    uint64_t v43 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v44 = v6;
    uint64_t v10 = v6 + 2;
    uint64_t v11 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v45 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v12 = 0;
    long long v13 = xmmword_1B6E4F270;
    uint64_t v14 = v3;
    uint64_t v47 = a1;
    do
    {
      uint64_t v17 = v3;
      long long v18 = v13;
      if (v12 != v3)
      {
        uint64_t v19 = *(void *)(v11 + 8 * v12);
        if (*(void *)(a1 + 16) && (unint64_t v20 = sub_1B62C1A30(*(void *)(v11 + 8 * v12)), (v21 & 1) != 0))
        {
          long long v22 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v20);
          uint64_t v15 = *v22;
          uint64_t v16 = v22[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v15 = 0;
          uint64_t v16 = 1;
        }
        uint64_t v17 = v12 + 1;
        uint64_t v50 = v19;
        uint64_t v51 = v15;
        uint64_t v52 = v16;
        a3(&v49, &v50);
        sub_1B68D5EFC(v15, v16);
        long long v18 = v49;
        a1 = v47;
        long long v13 = xmmword_1B6E4F270;
      }
      *v10++ = v18;
      uint64_t v12 = v17;
      --v14;
    }
    while (v14);
    uint64_t v23 = v43 - v3;
    if (v17 == v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v24 = v44;
    }
    else
    {
      long long v24 = v44;
      uint64_t v25 = v45;
      do
      {
        uint64_t v26 = *(void *)(v25 + 8 * v17 + 32);
        if (*(void *)(a1 + 16) && (unint64_t v27 = sub_1B62C1A30(*(void *)(v25 + 8 * v17 + 32)), (v28 & 1) != 0))
        {
          uint64_t v29 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v27);
          uint64_t v30 = *v29;
          uint64_t v31 = v29[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v30 = 0;
          uint64_t v31 = 1;
        }
        uint64_t v50 = v26;
        uint64_t v51 = v30;
        uint64_t v52 = v31;
        a3(&v49, &v50);
        sub_1B68D5EFC(v30, v31);
        long long v32 = v49;
        if (v23)
        {
          a1 = v47;
        }
        else
        {
          long long v46 = v49;
          if ((uint64_t)(*((void *)v24 + 3) & 0xFFFFFFFFFFFFFFFELL) <= 1) {
            unint64_t v33 = 1;
          }
          else {
            unint64_t v33 = *((void *)v24 + 3) & 0xFFFFFFFFFFFFFFFELL;
          }
          uint64_t v34 = (long long *)swift_allocObject();
          int64_t v35 = j__malloc_size(v34);
          uint64_t v36 = v35 - 32;
          if (v35 < 32) {
            uint64_t v36 = v35 - 17;
          }
          uint64_t v37 = v36 >> 4;
          *((void *)v34 + 2) = v33;
          *((void *)v34 + 3) = 2 * (v36 >> 4);
          unint64_t v38 = (unint64_t)(v34 + 2);
          uint64_t v39 = *((void *)v24 + 3) >> 1;
          a1 = v47;
          if (*((void *)v24 + 2))
          {
            if (v34 != v24 || v38 >= (unint64_t)&v24[v39 + 2]) {
              memmove(v34 + 2, v24 + 2, 16 * v39);
            }
            *((void *)v24 + 2) = 0;
          }
          uint64_t v10 = (long long *)(v38 + 16 * v39);
          uint64_t v23 = (v37 & 0x7FFFFFFFFFFFFFFFLL) - v39;
          swift_release();
          long long v24 = v34;
          uint64_t v25 = v45;
          long long v32 = v46;
        }
        ++v17;
        --v23;
        *v10++ = v32;
      }
      while (v3 != v17);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v24 = (long long *)MEMORY[0x1E4FBC860];
    uint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
  }
  unint64_t v41 = *((void *)v24 + 3);
  if (v41 >= 2) {
    *((void *)v24 + 2) = (v41 >> 1) - v23;
  }
  return v24;
}

uint64_t *sub_1B68C8918(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4)
{
  return sub_1B68C8944(a1, a2, a3, a4, (void (*)(void))sub_1B68D6C98, (void (*)(uint64_t))sub_1B68D6D40);
}

uint64_t *sub_1B68C8944(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, void (*a5)(void), void (*a6)(uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    a5(0);
    uint64_t v9 = (uint64_t *)swift_allocObject();
    int64_t v10 = j__malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    uint64_t v12 = v11 >> 3;
    v9[2] = v6;
    void v9[3] = 2 * v12;
    uint64_t v39 = v12 & 0x7FFFFFFFFFFFFFFFLL;
    long long v13 = v9 + 4;
    uint64_t v14 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v40 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v15 = 0;
    uint64_t v16 = v6;
    do
    {
      if (v15 == v6)
      {
        uint64_t v17 = 1;
        uint64_t v15 = v6;
      }
      else
      {
        uint64_t v18 = *(void *)(v14 + 8 * v15);
        if (*(void *)(a1 + 16) && (unint64_t v19 = sub_1B62C1A30(*(void *)(v14 + 8 * v15)), (v20 & 1) != 0))
        {
          uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * v19);
          swift_retain();
        }
        else
        {
          uint64_t v21 = 1;
        }
        ++v15;
        uint64_t v44 = v18;
        uint64_t v45 = v21;
        a3(&v43, &v44);
        a6(v21);
        uint64_t v17 = v43;
      }
      *v13++ = v17;
      --v16;
    }
    while (v16);
    uint64_t v22 = v39 - v6;
    if (v15 != v6)
    {
      uint64_t v23 = a2;
      do
      {
        uint64_t v24 = *(void *)(v23 + 8 * v15 + 32);
        if (*(void *)(a1 + 16) && (unint64_t v25 = sub_1B62C1A30(*(void *)(v23 + 8 * v15 + 32)), (v26 & 1) != 0))
        {
          uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8 * v25);
          swift_retain();
        }
        else
        {
          uint64_t v27 = 1;
        }
        uint64_t v44 = v24;
        uint64_t v45 = v27;
        a3(&v43, &v44);
        a6(v27);
        uint64_t v28 = v43;
        if (!v22)
        {
          if ((uint64_t)(v9[3] & 0xFFFFFFFFFFFFFFFELL) <= 1) {
            unint64_t v29 = 1;
          }
          else {
            unint64_t v29 = v9[3] & 0xFFFFFFFFFFFFFFFELL;
          }
          uint64_t v30 = (uint64_t *)swift_allocObject();
          int64_t v31 = j__malloc_size(v30);
          uint64_t v32 = v31 - 32;
          if (v31 < 32) {
            uint64_t v32 = v31 - 25;
          }
          uint64_t v33 = v32 >> 3;
          void v30[2] = v29;
          uint64_t v30[3] = 2 * (v32 >> 3);
          unint64_t v34 = (unint64_t)(v30 + 4);
          unint64_t v35 = (unint64_t)v9[3] >> 1;
          if (v9[2])
          {
            if (v30 != v9 || v34 >= (unint64_t)&v9[v35 + 4]) {
              memmove(v30 + 4, v9 + 4, 8 * v35);
            }
            v9[2] = 0;
          }
          long long v13 = (uint64_t *)(v34 + 8 * v35);
          uint64_t v22 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
          swift_release();
          uint64_t v9 = v30;
          uint64_t v23 = v40;
        }
        ++v15;
        --v22;
        *v13++ = v28;
      }
      while (v6 != v15);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = (uint64_t *)MEMORY[0x1E4FBC860];
    uint64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
  }
  unint64_t v37 = v9[3];
  if (v37 >= 2) {
    v9[2] = (v37 >> 1) - v22;
  }
  return v9;
}

uint64_t (*sub_1B68C8C2C(uint64_t **a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  void v6[4] = (uint64_t)sub_1B68C8E18(v6, a2, a3);
  return sub_1B68C8C94;
}

uint64_t (*sub_1B68C8C98(uint64_t **a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  void v6[4] = (uint64_t)sub_1B68C8EE4(v6, a2, a3);
  return sub_1B68C8C94;
}

uint64_t (*sub_1B68C8D00(uint64_t **a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  void v6[4] = (uint64_t)sub_1B68C8F48(v6, a2, a3);
  return sub_1B68C8C94;
}

uint64_t (*sub_1B68C8D68(uint64_t **a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  void v6[4] = (uint64_t)sub_1B68C8FAC(v6, a2, a3);
  return sub_1B68C8C94;
}

void sub_1B68C8DD0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1B68C8E18(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  if ((a3 & 0xC000000000000001) != 0) {
    uint64_t v4 = MEMORY[0x1BA9B4580](a2, a3);
  }
  else {
    uint64_t v4 = swift_retain();
  }
  *a1 = v4;
  return j__s3VFX5QueryVwxx;
}

void sub_1B68C8E7C(uint64_t a1)
{
}

void sub_1B68C8EB0(uint64_t a1)
{
}

uint64_t (*sub_1B68C8EE4(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  if ((a3 & 0xC000000000000001) != 0) {
    uint64_t v4 = MEMORY[0x1BA9B4580](a2, a3);
  }
  else {
    uint64_t v4 = swift_retain();
  }
  *a1 = v4;
  return destroy for Query;
}

uint64_t (*sub_1B68C8F48(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  if ((a3 & 0xC000000000000001) != 0) {
    uint64_t v4 = MEMORY[0x1BA9B4580](a2, a3);
  }
  else {
    uint64_t v4 = swift_unknownObjectRetain();
  }
  *a1 = v4;
  return j__s3VFX11BufferSliceVwxx;
}

uint64_t (*sub_1B68C8FAC(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  if ((a3 & 0xC000000000000001) != 0) {
    uint64_t v4 = MEMORY[0x1BA9B4580](a2, a3);
  }
  else {
    uint64_t v4 = swift_unknownObjectRetain();
  }
  *a1 = v4;
  return destroy for BufferSlice;
}

uint64_t type metadata accessor for RGGraphTranslator()
{
  return self;
}

uint64_t sub_1B68C9034(_OWORD *a1, uint64_t (*a2)(_OWORD *))
{
  return sub_1B68C9114(a1, a2);
}

uint64_t sub_1B68C904C(_OWORD *a1, uint64_t (*a2)(_OWORD *))
{
  long long v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  v4[2] = a1[2];
  return a2(v4);
}

uint64_t sub_1B68C9090(uint64_t *a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1B68B8954(*a1, a2 & 1, a3, a4, a5, a6, a7, a8, a9, a10, a11, (void (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B68AD6B0);
}

uint64_t sub_1B68C90D8(uint64_t *a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = *a1;
  return a2(&v3);
}

uint64_t sub_1B68C9114(_OWORD *a1, uint64_t (*a2)(_OWORD *))
{
  long long v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  v4[2] = a1[2];
  return a2(v4);
}

void sub_1B68C9158(uint64_t a1, void *a2)
{
}

void *sub_1B68C917C@<X0>(_OWORD *a1@<X0>, void *(*a2)(uint64_t *__return_ptr, _OWORD *)@<X1>, void *a3@<X8>)
{
  long long v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  _OWORD v7[2] = a1[2];
  uint64_t result = a2(&v8, v7);
  if (!v3) {
    *a3 = v8;
  }
  return result;
}

uint64_t sub_1B68C91D4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = a1[7];
  *(_OWORD *)&v11[96] = a1[6];
  *(_OWORD *)&v11[112] = v2;
  long long v3 = a1[3];
  *(_OWORD *)&unsigned char v11[32] = a1[2];
  *(_OWORD *)&v11[48] = v3;
  *(_OWORD *)&v11[128] = a1[8];
  *(_OWORD *)&v11[137] = *(_OWORD *)((char *)a1 + 137);
  long long v4 = a1[5];
  *(_OWORD *)&v11[64] = a1[4];
  *(_OWORD *)&v11[80] = v4;
  long long v5 = a1[1];
  *(_OWORD *)uint64_t v11 = *a1;
  *(_OWORD *)&v11[16] = v5;
  long long v6 = *(_OWORD *)&v11[120];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v11[104];
  *(_OWORD *)(a2 + 112) = v6;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v11[136];
  *(unsigned char *)(a2 + 144) = v11[152];
  long long v7 = *(_OWORD *)&v11[56];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v11[40];
  *(_OWORD *)(a2 + 48) = v7;
  long long v8 = *(_OWORD *)&v11[88];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v11[72];
  *(_OWORD *)(a2 + 80) = v8;
  long long v9 = *(_OWORD *)&v11[24];
  *(_OWORD *)a2 = *(_OWORD *)&v11[8];
  *(_OWORD *)(a2 + 16) = v9;
  return sub_1B68D6140((uint64_t)v11);
}

double sub_1B68C926C@<D0>(_OWORD *a1@<X0>, void (*a2)(long long *__return_ptr, _OWORD *)@<X1>, _OWORD *a3@<X8>)
{
  long long v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  _OWORD v7[2] = a1[2];
  a2(&v8, v7);
  if (!v3)
  {
    double result = *(double *)&v8;
    *a3 = v8;
  }
  return result;
}

uint64_t sub_1B68C92C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0 || ((unint64_t v4 = a3 + 8 * (a2 - a1), a4 + 32 + 8 * a1 < v4) ? (v5 = a4 + 32 + 8 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B629A550(0);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68C93BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68C94A8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((long long v6 = (char *)(a4 + 32 + 24 * a1), v7 = &__dst[24 * v4], v8 = a4 + 32 + 24 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 24 * v4);
    return v7;
  }
  return result;
}

uint64_t sub_1B68C9594(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2 - a1;
  if (a2 - a1 < 0 || ((unint64_t v6 = a4 + 32 * a1 + 32, v7 = a3 + 32 * v5, v6 < v7) ? (v8 = v6 + 32 * v5 > a3) : (v8 = 0), v8))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v7;
  }
  return result;
}

uint64_t sub_1B68C967C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBB058];
  uint64_t v4 = (void *)sub_1B6E314E8();
  uint64_t v5 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v4;
  }
  for (unint64_t i = (uint64_t *)(a1 + 32); ; ++i)
  {
    uint64_t v7 = *i;
    unint64_t v9 = *((void *)v5 + 2);
    unint64_t v8 = *((void *)v5 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v5 = sub_1B636A230(v8 > 1, v9 + 1, 1, v5, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v5 + 2) = v9 + 1;
    *(void *)&v5[8 * v9 + 32] = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_1B62C1A30(v7);
    char v13 = v11;
    uint64_t v14 = v4[2] + ((v11 & 1) == 0);
    if (v4[3] < v14) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v11) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B6ACC424();
      if (v13) {
        goto LABEL_4;
      }
    }
LABEL_3:
    v4[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v4[6] + 8 * v12) = v7;
    ++v4[2];
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v4;
    }
  }
  sub_1B6AB6A84(v14, isUniquelyReferenced_nonNull_native);
  unint64_t v15 = sub_1B62C1A30(v7);
  if ((v13 & 1) == (v16 & 1))
  {
    unint64_t v12 = v15;
    if (v13) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68C9868(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1B62C1A30(a1);
    char v3 = v2 ^ 1;
  }
  else
  {
    char v3 = 1;
  }
  return v3 & 1;
}

uint64_t sub_1B68C98A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (a2 != a1)
  {
    uint64_t v7 = a1;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1B6C3C530(0, (a2 - a1) & ~((a2 - a1) >> 63), 0);
    uint64_t v3 = v14;
    uint64_t v8 = *(void *)(a3 + 16);
    do
    {
      long long v9 = 0uLL;
      if (v7 < v8)
      {
        long long v12 = *(_OWORD *)(a3 + 32 + 16 * v7);
        swift_retain();
        long long v9 = v12;
      }
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1)
      {
        long long v13 = v9;
        sub_1B6C3C530(v10 > 1, v11 + 1, 1);
        long long v9 = v13;
      }
      *(void *)(v14 + 16) = v11 + 1;
      *(_OWORD *)(v14 + 16 * v11 + 32) = v9;
      ++v7;
    }
    while (a2 != v7);
  }
  return v3;
}

uint64_t sub_1B68C99A4(uint64_t a1)
{
  unint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  type metadata accessor for AuthoringGraph();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = 0;
  v3[3] = v2;
  v3[4] = 0;
  v3[5] = 0;
  swift_bridgeObjectRetain();
  v3[6] = sub_1B67DD1F0(v2);
  v3[3] = a1;
  uint64_t v8 = &v10;
  _OWORD v6[2] = sub_1B68D568C;
  v6[3] = &v7;
  v9[0] = sub_1B68C967C(v2);
  v9[1] = v4;
  sub_1B68B96F0((uint64_t)sub_1B68D4E40, (uint64_t)v6, 1, 0x1000000000000000uLL, 0, v2, (uint64_t)v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B68C9AB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68C9B9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 48 * (a2 - a1), a4 + 32 + 48 * a1 < v4) ? (v5 = a4 + 32 + 48 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68D5B3C(0, &qword_1E9DD1FA0, (void (*)(uint64_t))_s17CodeSourceSnippetCMa);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68C9CC4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 80 * a1 + 32),
         size_t v7 = 80 * v4,
         uint64_t v8 = &__dst[80 * v4],
         unint64_t v9 = (unint64_t)&v6[80 * v4],
         v6 < v8)
      ? (BOOL v10 = v9 > (unint64_t)__dst)
      : (BOOL v10 = 0),
        v10))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, v7);
    return v8;
  }
  return result;
}

uint64_t sub_1B68C9DAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 72 * (a2 - a1), a4 + 32 + 72 * a1 < v4) ? (v5 = a4 + 32 + 72 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68D5B3C(0, (unint64_t *)&qword_1EB97F200, (void (*)(uint64_t))sub_1B6786014);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68C9ED4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B6645A00();
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68C9FCC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 112 * a1 + 32),
         size_t v7 = 112 * v4,
         uint64_t v8 = &__dst[112 * v4],
         unint64_t v9 = (unint64_t)&v6[112 * v4],
         v6 < v8)
      ? (BOOL v10 = v9 > (unint64_t)__dst)
      : (BOOL v10 = 0),
        v10))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, v7);
    return v8;
  }
  return result;
}

uint64_t sub_1B68CA0B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t *), uint64_t a4, uint64_t a5, void (*a6)(BOOL, unint64_t, uint64_t))
{
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    a6(0, v6, 0);
    uint64_t v7 = v25;
    BOOL v10 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v11 = *v10;
      if (*(void *)(a1 + 16) && (unint64_t v12 = sub_1B62C1A30(*v10), (v13 & 1) != 0))
      {
        uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
        swift_retain();
      }
      else
      {
        uint64_t v14 = 0;
      }
      uint64_t v23 = v14;
      uint64_t v15 = a3(&v24, v11, &v23);
      swift_release();
      uint64_t v16 = v24;
      uint64_t v25 = v7;
      unint64_t v18 = *(void *)(v7 + 16);
      unint64_t v17 = *(void *)(v7 + 24);
      if (v18 >= v17 >> 1)
      {
        a6(v17 > 1, v18 + 1, 1);
        uint64_t v7 = v25;
      }
      *(void *)(v7 + 16) = v18 + 1;
      uint64_t v19 = v7 + 16 * v18;
      *(void *)(v19 + 32) = v15;
      *(void *)(v19 + 40) = v16;
      ++v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1B68CA1FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 56 * (a2 - a1), a4 + 32 + 56 * a1 < v4) ? (v5 = a4 + 32 + 56 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CA2E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 88 * (a2 - a1), a4 + 32 + 88 * a1 < v4) ? (v5 = a4 + 32 + 88 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62CB1E8(0, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CA408(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + ((a2 - a1) << 6), a4 + 32 + (a1 << 6) < v4) ? (v5 = a4 + 32 + (a2 << 6) > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CA4F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 48 * (a2 - a1), a4 + 32 + 48 * a1 < v4) ? (v5 = a4 + 32 + 48 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CA5DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 72 * (a2 - a1), a4 + 32 + 72 * a1 < v4) ? (v5 = a4 + 32 + 72 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CA6C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 824 * (a2 - a1), a4 + 32 + 824 * a1 < v4) ? (v5 = a4 + 32 + 824 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CA7B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0 || ((unint64_t v4 = a3 + 8 * (a2 - a1), a4 + 32 + 8 * a1 < v4) ? (v5 = a4 + 32 + 8 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62CB1E8(0, &qword_1EB97ED60, (uint64_t)&type metadata for ComponentProperty, MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CA8D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B62CB1E8(0, &qword_1E9DD2130, (uint64_t)&type metadata for AuthoringNodeCoder, MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1E4FBB058];
  unint64_t v4 = (void *)sub_1B6E314E8();
  BOOL v5 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v4;
  }
  unint64_t v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v7 = *v6;
    unint64_t v9 = *((void *)v5 + 2);
    unint64_t v10 = *((void *)v5 + 3);
    swift_retain();
    if (v9 >= v10 >> 1) {
      BOOL v5 = sub_1B636A230(v10 > 1, v9 + 1, 1, v5, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v5 + 2) = v9 + 1;
    *(void *)&v5[8 * v9 + 32] = v8;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_1B62C1A30(v8);
    char v14 = v13;
    uint64_t v15 = v4[2] + ((v13 & 1) == 0);
    if (v4[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B6AD5B38();
      }
      goto LABEL_12;
    }
    sub_1B6AC5B6C(v15, isUniquelyReferenced_nonNull_native);
    unint64_t v16 = sub_1B62C1A30(v8);
    if ((v14 & 1) != (v17 & 1)) {
      break;
    }
    unint64_t v12 = v16;
LABEL_12:
    if (v14)
    {
      uint64_t v18 = v4[7];
      swift_release();
      *(void *)(v18 + 8 * v12) = v7;
    }
    else
    {
      v4[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(v4[6] + 8 * v12) = v8;
      *(void *)(v4[7] + 8 * v12) = v7;
      ++v4[2];
    }
    v6 += 2;
    swift_release();
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v4;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CAB04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CABF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B68C8EB0(0);
  uint64_t v3 = MEMORY[0x1E4FBB058];
  unint64_t v4 = (void *)sub_1B6E314E8();
  BOOL v5 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v4;
  }
  unint64_t v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v7 = *v6;
    unint64_t v9 = *((void *)v5 + 2);
    unint64_t v10 = *((void *)v5 + 3);
    swift_retain();
    if (v9 >= v10 >> 1) {
      BOOL v5 = sub_1B636A230(v10 > 1, v9 + 1, 1, v5, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v5 + 2) = v9 + 1;
    *(void *)&v5[8 * v9 + 32] = v8;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_1B62C1A30(v8);
    char v14 = v13;
    uint64_t v15 = v4[2] + ((v13 & 1) == 0);
    if (v4[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B6ACCBB8();
      }
      goto LABEL_12;
    }
    sub_1B6AB7CD8(v15, isUniquelyReferenced_nonNull_native);
    unint64_t v16 = sub_1B62C1A30(v8);
    if ((v14 & 1) != (v17 & 1)) {
      break;
    }
    unint64_t v12 = v16;
LABEL_12:
    if (v14)
    {
      uint64_t v18 = v4[7];
      swift_release();
      *(void *)(v18 + 8 * v12) = v7;
    }
    else
    {
      v4[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(v4[6] + 8 * v12) = v8;
      *(void *)(v4[7] + 8 * v12) = v7;
      ++v4[2];
    }
    v6 += 2;
    swift_release();
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v4;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CAE00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0 || ((unint64_t v4 = a3 + 8 * (a2 - a1), a4 + 32 + 8 * a1 < v4) ? (v5 = a4 + 32 + 8 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CAF0C(uint64_t a1, void (*a2)(void), void (*a3)(void), void (*a4)(void))
{
  uint64_t v7 = *(void *)(a1 + 16);
  a2(0);
  uint64_t v8 = MEMORY[0x1E4FBB058];
  unint64_t v9 = (void *)sub_1B6E314E8();
  unint64_t v10 = sub_1B636A230(0, v7, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v8);
  if (!v7) {
    return (uint64_t)v9;
  }
  uint64_t v25 = a4;
  for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    uint64_t v13 = *(i - 1);
    uint64_t v12 = *i;
    unint64_t v14 = *((void *)v10 + 2);
    unint64_t v15 = *((void *)v10 + 3);
    swift_retain();
    if (v14 >= v15 >> 1) {
      unint64_t v10 = sub_1B636A230(v15 > 1, v14 + 1, 1, v10, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v10 + 2) = v14 + 1;
    *(void *)&v10[8 * v14 + 32] = v13;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_1B62C1A30(v13);
    char v19 = v18;
    if (v9[3] >= (int64_t)(v9[2] + ((v18 & 1) == 0)))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        v25();
      }
      goto LABEL_12;
    }
    a3();
    unint64_t v20 = sub_1B62C1A30(v13);
    if ((v19 & 1) != (v21 & 1)) {
      break;
    }
    unint64_t v17 = v20;
LABEL_12:
    uint64_t v22 = 8 * v17;
    if (v19)
    {
      uint64_t v23 = v9[7];
      swift_release();
      *(void *)(v23 + v22) = v12;
    }
    else
    {
      v9[(v17 >> 6) + 8] |= 1 << v17;
      *(void *)(v9[6] + 8 * v17) = v13;
      *(void *)(v9[7] + 8 * v17) = v12;
      ++v9[2];
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (!--v7) {
      return (uint64_t)v9;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CB138(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B62CAC44(0, &qword_1E9DD2010, (uint64_t (*)(uint64_t))type metadata accessor for GraphCodeGen.CFGNode, MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1E4FBB058];
  unint64_t v4 = (void *)sub_1B6E314E8();
  BOOL v5 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v4;
  }
  unint64_t v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v7 = *v6;
    unint64_t v9 = *((void *)v5 + 2);
    unint64_t v10 = *((void *)v5 + 3);
    swift_retain();
    if (v9 >= v10 >> 1) {
      BOOL v5 = sub_1B636A230(v10 > 1, v9 + 1, 1, v5, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v5 + 2) = v9 + 1;
    *(void *)&v5[8 * v9 + 32] = v8;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_1B62C1A30(v8);
    char v14 = v13;
    uint64_t v15 = v4[2] + ((v13 & 1) == 0);
    if (v4[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B6ACC9A8();
      }
      goto LABEL_12;
    }
    sub_1B6AB76C4(v15, isUniquelyReferenced_nonNull_native);
    unint64_t v16 = sub_1B62C1A30(v8);
    if ((v14 & 1) != (v17 & 1)) {
      break;
    }
    unint64_t v12 = v16;
LABEL_12:
    if (v14)
    {
      uint64_t v18 = v4[7];
      swift_release();
      *(void *)(v18 + 8 * v12) = v7;
    }
    else
    {
      v4[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(v4[6] + 8 * v12) = v8;
      *(void *)(v4[7] + 8 * v12) = v7;
      ++v4[2];
    }
    v6 += 2;
    swift_release();
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v4;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CB378(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B62CB1E8(0, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1E4FBB058];
  int64_t v31 = (void *)sub_1B6E314E8();
  uint64_t v32 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v31;
  }
  for (unint64_t i = (uint64_t *)(a1 + 64); ; i += 12)
  {
    uint64_t v6 = v2;
    uint64_t v7 = i[1];
    uint64_t v8 = i[2];
    uint64_t v9 = i[3];
    uint64_t v11 = i[4];
    uint64_t v10 = i[5];
    uint64_t v12 = i[6];
    uint64_t v33 = i[7];
    uint64_t v27 = *(i - 4);
    uint64_t v37 = *(i - 3);
    uint64_t v35 = *(i - 1);
    uint64_t v36 = *(i - 2);
    uint64_t v34 = *i;
    sub_1B67FBA04(v37);
    char v13 = v32;
    unint64_t v15 = *((void *)v32 + 2);
    unint64_t v14 = *((void *)v32 + 3);
    uint64_t v30 = v6;
    if (v15 >= v14 >> 1) {
      char v13 = sub_1B636A230(v14 > 1, v15 + 1, 1, v32, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v13 + 2) = v15 + 1;
    uint64_t v32 = v13;
    *(void *)&v13[8 * v15 + 32] = v27;
    uint64_t v28 = v12;
    uint64_t v29 = v11;
    sub_1B67FBA04(v37);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_1B62C1A30(v27);
    char v19 = v18;
    uint64_t v20 = v31[2] + ((v18 & 1) == 0);
    uint64_t v21 = v9;
    if (v31[3] >= v20)
    {
      uint64_t v24 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B6ACC9C0();
      }
      goto LABEL_12;
    }
    sub_1B6AB76DC(v20, isUniquelyReferenced_nonNull_native);
    unint64_t v22 = sub_1B62C1A30(v27);
    if ((v19 & 1) != (v23 & 1)) {
      break;
    }
    unint64_t v17 = v22;
    uint64_t v24 = v8;
LABEL_12:
    if (v19)
    {
      uint64_t v25 = (uint64_t *)(v31[7] + 88 * v17);
      sub_1B6828908(*v25);
      *uint64_t v25 = v37;
      v25[1] = v36;
      v25[2] = v35;
      void v25[3] = v34;
      void v25[4] = v7;
      v25[5] = v24;
      void v25[6] = v21;
      v25[7] = v29;
      void v25[8] = v10;
      v25[9] = v28;
      v25[10] = v33;
    }
    else
    {
      v31[(v17 >> 6) + 8] |= 1 << v17;
      *(void *)(v31[6] + 8 * v17) = v27;
      BOOL v5 = (uint64_t *)(v31[7] + 88 * v17);
      *BOOL v5 = v37;
      v5[1] = v36;
      v5[2] = v35;
      _OWORD v5[3] = v34;
      void v5[4] = v7;
      v5[5] = v24;
      v5[6] = v21;
      v5[7] = v29;
      v5[8] = v10;
      v5[9] = v28;
      v5[10] = v33;
      ++v31[2];
    }
    swift_bridgeObjectRelease();
    sub_1B6828908(v37);
    uint64_t v2 = v30 - 1;
    if (v30 == 1) {
      return (uint64_t)v31;
    }
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CB6D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 88 * (a2 - a1), a4 + 32 + 88 * a1 < v4) ? (v5 = a4 + 32 + 88 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CB7C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2 - a1;
  if (a2 - a1 < 0 || ((unint64_t v6 = a4 + 48 * a1 + 32, v7 = a3 + 48 * v5, v6 < v7) ? (v8 = v6 + 48 * v5 > a3) : (v8 = 0), v8))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v7;
  }
  return result;
}

uint64_t sub_1B68CB8B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 80 * (a2 - a1), a4 + 32 + 80 * a1 < v4) ? (v5 = a4 + 32 + 80 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B67FB8C0(0, (unint64_t *)&qword_1E9DD1288);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CB9C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 48 * (a2 - a1), a4 + 32 + 48 * a1 < v4) ? (v5 = a4 + 32 + 48 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CBAB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CBB9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0 || ((unint64_t v4 = a3 + 8 * (a2 - a1), a4 + 32 + 8 * a1 < v4) ? (v5 = a4 + 32 + 8 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62CB1E8(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68CBCB8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v5 = a2 - a1;
  if (a2 - a1 < 0
    || (v7 = (char *)(a4 + 32 + a1), BOOL v8 = &__dst[v5], v7 < &__dst[v5]) && a4 + 32 + a2 > (unint64_t)__dst)
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v7, v5);
    return v8;
  }
  return result;
}

uint64_t sub_1B68CBD9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B67FB8C0(0, &qword_1E9DD1E18);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CBEAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 48 * (a2 - a1), a4 + 32 + 48 * a1 < v4) ? (v5 = a4 + 32 + 48 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CBF98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CC080(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68D58C0();
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CC17C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CC264(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CC350(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 24 * (a2 - a1), a4 + 32 + 24 * a1 < v4) ? (v5 = a4 + 32 + 24 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68D4AF0();
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68CC44C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 32 + 2 * a1), v7 = &__dst[2 * v4], v8 = a4 + 32 + 2 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 2 * v4);
    return v7;
  }
  return result;
}

uint64_t sub_1B68CC530(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + ((a2 - a1) << 7), a4 + 32 + (a1 << 7) < v4) ? (v5 = a4 + 32 + (a2 << 7) > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68CC618(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 32 + (a1 << 6)), v7 = &__dst[64 * v4], v8 = a4 + 32 + (a2 << 6), v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, v4 << 6);
    return v7;
  }
  return result;
}

uint64_t sub_1B68CC6FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0 || ((unint64_t v5 = a4 + 96 * a1 + 32, v6 = a3 + 96 * v4, v5 < v6) ? (v7 = v5 + 96 * v4 > a3) : (v7 = 0), v7))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68D51E4(0, a2);
    swift_arrayInitWithCopy();
    return v6;
  }
  return result;
}

uint64_t sub_1B68CC800(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CC8EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2 - a1;
  if (a2 - a1 < 0 || ((unint64_t v6 = a4 + 40 * a1 + 32, v7 = a3 + 40 * v5, v6 < v7) ? (v8 = v6 + 40 * v5 > a3) : (v8 = 0), v8))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v7;
  }
  return result;
}

char *sub_1B68CC9D8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 8 * a1 + 32), v7 = 8 * v4, v8 = &__dst[8 * v4], v9 = (unint64_t)&v6[8 * v4], v6 < v8)
      ? (BOOL v10 = v9 > (unint64_t)__dst)
      : (BOOL v10 = 0),
        v10))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, v7);
    return v8;
  }
  return result;
}

uint64_t sub_1B68CCAB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  if (a2 - a1 < 0
    || ((unint64_t v5 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v5) ? (v6 = a4 + 32 + 40 * a2 > a3) : (v6 = 0), v6))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62E98B4(0, a5);
    swift_arrayInitWithCopy();
    return v5;
  }
  return result;
}

uint64_t sub_1B68CCBD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CCCB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CCDA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 24 * (a2 - a1), a4 + 32 + 24 * a1 < v4) ? (v5 = a4 + 32 + 24 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CCE8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  if (a2 - a1 < 0
    || ((unint64_t v6 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v6) ? (v7 = a4 + 32 + 16 * a2 > a3) : (v7 = 0), v7))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
    return v6;
  }
  return result;
}

uint64_t sub_1B68CCFA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  if (a2 - a1 < 0
    || ((unint64_t v5 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v5) ? (v6 = a4 + 32 + 16 * a2 > a3) : (v6 = 0), v6))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62C55B0(0, a5);
    swift_arrayInitWithCopy();
    return v5;
  }
  return result;
}

uint64_t sub_1B68CD0A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CD190(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CD27C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 40 * (a2 - a1), a4 + 32 + 40 * a1 < v4) ? (v5 = a4 + 32 + 40 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CD368(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CD450(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + ((a2 - a1) << 6), a4 + 32 + (a1 << 6) < v4) ? (v5 = a4 + 32 + (a2 << 6) > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CD538(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0 || ((unint64_t v4 = a3 + 8 * (a2 - a1), a4 + 32 + 8 * a1 < v4) ? (v5 = a4 + 32 + 8 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CD61C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = (void *)sub_1B6E314E8();
  unint64_t v4 = sub_1B6335858(0, v2, 0, MEMORY[0x1E4FBC860]);
  if (!v2) {
    return (uint64_t)v3;
  }
  for (unint64_t i = (unsigned char *)(a1 + 72); ; i += 48)
  {
    uint64_t v9 = *((void *)i - 5);
    uint64_t v8 = *((void *)i - 4);
    unint64_t v10 = *((void *)i - 3);
    char v24 = *(i - 16);
    uint64_t v25 = *((void *)i - 1);
    char v11 = *i;
    swift_bridgeObjectRetain_n();
    sub_1B62C6AA8(v10);
    unint64_t v13 = v4[2];
    unint64_t v12 = v4[3];
    if (v13 >= v12 >> 1) {
      unint64_t v4 = sub_1B6335858(v12 > 1, v13 + 1, 1, v4);
    }
    v4[2] = v13 + 1;
    char v26 = v4;
    unint64_t v14 = &v4[2 * v13];
    void v14[4] = v9;
    void v14[5] = v8;
    swift_bridgeObjectRetain();
    sub_1B62C6AA8(v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_1B62B2CE0(v9, v8);
    char v18 = v16;
    uint64_t v19 = v3[2] + ((v16 & 1) == 0);
    if (v3[3] < v19) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      unint64_t v4 = v26;
      if (v16) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B6ACF36C();
      unint64_t v4 = v26;
      if (v18)
      {
LABEL_13:
        uint64_t v22 = v3[7] + 32 * v17;
        sub_1B62C6A70(*(void *)v22);
        *(void *)uint64_t v22 = v10;
        *(unsigned char *)(v22 + 8) = v24;
        *(void *)(v22 + 16) = v25;
        *(unsigned char *)(v22 + 24) = v11;
        goto LABEL_4;
      }
    }
LABEL_3:
    v3[(v17 >> 6) + 8] |= 1 << v17;
    BOOL v6 = (uint64_t *)(v3[6] + 16 * v17);
    *BOOL v6 = v9;
    v6[1] = v8;
    uint64_t v7 = v3[7] + 32 * v17;
    *(void *)uint64_t v7 = v10;
    *(unsigned char *)(v7 + 8) = v24;
    *(void *)(v7 + 16) = v25;
    *(unsigned char *)(v7 + 24) = v11;
    ++v3[2];
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62C6A70(v10);
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v3;
    }
  }
  sub_1B6ABC16C(v19, isUniquelyReferenced_nonNull_native);
  uint64_t v20 = sub_1B62B2CE0(v9, v8);
  if ((v18 & 1) == (v21 & 1))
  {
    unint64_t v17 = v20;
    unint64_t v4 = v26;
    if (v18) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CD898(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (a2 - a1 < 0
    || ((uint64_t v9 = *(void *)(a5(0) - 8),
         uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)),
         uint64_t v11 = *(void *)(v9 + 72),
         unint64_t v12 = v10 + v11 * a1,
         unint64_t v13 = a3 + v11 * v5,
         v12 < v13)
      ? (BOOL v14 = v12 + v11 * v5 > a3)
      : (BOOL v14 = 0),
        v14))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v13;
  }
  return result;
}

uint64_t sub_1B68CD9EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v5 = a4 + (a1 << 6) + 32, v6 = a3 + (v4 << 6), v5 < v6) ? (v7 = v5 + (v4 << 6) > a3) : (v7 = 0), v7))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68D54B4(0, &qword_1E9DD1D80);
    swift_arrayInitWithCopy();
    return v6;
  }
  return result;
}

uint64_t sub_1B68CDB08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68CE4B0();
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CDC00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 88 * (a2 - a1), a4 + 32 + 88 * a1 < v4) ? (v5 = a4 + 32 + 88 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68CDCEC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 32 * a1 + 32),
         size_t v7 = 32 * v4,
         uint64_t v8 = &__dst[32 * v4],
         unint64_t v9 = (unint64_t)&v6[32 * v4],
         v6 < v8)
      ? (BOOL v10 = v9 > (unint64_t)__dst)
      : (BOOL v10 = 0),
        v10))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, v7);
    return v8;
  }
  return result;
}

uint64_t sub_1B68CDDCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B68D60AC();
  uint64_t v3 = MEMORY[0x1E4FBB058];
  uint64_t v4 = (void *)sub_1B6E314E8();
  BOOL v5 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v4;
  }
  for (unint64_t i = (_OWORD *)(a1 + 32); ; i += 10)
  {
    long long v15 = i[7];
    *(_OWORD *)&v48[96] = i[6];
    *(_OWORD *)&v48[112] = v15;
    *(_OWORD *)&v48[128] = i[8];
    *(_OWORD *)&v48[137] = *(_OWORD *)((char *)i + 137);
    long long v16 = i[3];
    *(_OWORD *)&v48[32] = i[2];
    *(_OWORD *)&v48[48] = v16;
    long long v17 = i[5];
    *(_OWORD *)&v48[64] = i[4];
    *(_OWORD *)&v48[80] = v17;
    long long v18 = i[1];
    *(_OWORD *)uint64_t v48 = *i;
    *(_OWORD *)&v48[16] = v18;
    uint64_t v19 = *(void *)v48;
    sub_1B68D6140((uint64_t)v48);
    unint64_t v21 = *((void *)v5 + 2);
    unint64_t v20 = *((void *)v5 + 3);
    if (v21 >= v20 >> 1) {
      BOOL v5 = sub_1B636A230(v20 > 1, v21 + 1, 1, v5, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v5 + 2) = v21 + 1;
    *(void *)&v5[8 * v21 + 32] = v19;
    sub_1B62CA090((uint64_t)&v48[8]);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = v4;
    unint64_t v24 = sub_1B62C1A30(v19);
    char v25 = v23;
    uint64_t v26 = v4[2] + ((v23 & 1) == 0);
    if (v4[3] < v26) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v23) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B6AD1AE0();
      if (v25)
      {
LABEL_13:
        uint64_t v4 = v47;
        uint64_t v29 = v47[7] + 152 * v24;
        long long v30 = *(_OWORD *)(v29 + 16);
        v45[0] = *(_OWORD *)v29;
        v45[1] = v30;
        long long v31 = *(_OWORD *)(v29 + 80);
        long long v33 = *(_OWORD *)(v29 + 32);
        long long v32 = *(_OWORD *)(v29 + 48);
        v45[4] = *(_OWORD *)(v29 + 64);
        v45[5] = v31;
        _OWORD v45[2] = v33;
        v45[3] = v32;
        long long v35 = *(_OWORD *)(v29 + 112);
        long long v34 = *(_OWORD *)(v29 + 128);
        long long v36 = *(_OWORD *)(v29 + 96);
        char v46 = *(unsigned char *)(v29 + 144);
        v45[7] = v35;
        v45[8] = v34;
        v45[6] = v36;
        sub_1B62CA064((uint64_t)v45);
        long long v37 = *(_OWORD *)&v48[24];
        *(_OWORD *)uint64_t v29 = *(_OWORD *)&v48[8];
        *(_OWORD *)(v29 + 16) = v37;
        long long v38 = *(_OWORD *)&v48[88];
        long long v40 = *(_OWORD *)&v48[40];
        long long v39 = *(_OWORD *)&v48[56];
        *(_OWORD *)(v29 + 64) = *(_OWORD *)&v48[72];
        *(_OWORD *)(v29 + 80) = v38;
        *(_OWORD *)(v29 + 32) = v40;
        *(_OWORD *)(v29 + 48) = v39;
        long long v42 = *(_OWORD *)&v48[120];
        long long v41 = *(_OWORD *)&v48[136];
        long long v43 = *(_OWORD *)&v48[104];
        *(unsigned char *)(v29 + 144) = v48[152];
        *(_OWORD *)(v29 + 112) = v42;
        *(_OWORD *)(v29 + 128) = v41;
        *(_OWORD *)(v29 + 96) = v43;
        goto LABEL_4;
      }
    }
LABEL_3:
    uint64_t v4 = v47;
    v47[(v24 >> 6) + 8] |= 1 << v24;
    *(void *)(v4[6] + 8 * v24) = v19;
    uint64_t v7 = v4[7] + 152 * v24;
    long long v8 = *(_OWORD *)&v48[24];
    *(_OWORD *)uint64_t v7 = *(_OWORD *)&v48[8];
    *(_OWORD *)(v7 + 16) = v8;
    long long v9 = *(_OWORD *)&v48[88];
    long long v11 = *(_OWORD *)&v48[40];
    long long v10 = *(_OWORD *)&v48[56];
    *(_OWORD *)(v7 + 64) = *(_OWORD *)&v48[72];
    *(_OWORD *)(v7 + 80) = v9;
    *(_OWORD *)(v7 + 32) = v11;
    *(_OWORD *)(v7 + 48) = v10;
    long long v12 = *(_OWORD *)&v48[104];
    long long v13 = *(_OWORD *)&v48[120];
    long long v14 = *(_OWORD *)&v48[136];
    *(unsigned char *)(v7 + 144) = v48[152];
    *(_OWORD *)(v7 + 112) = v13;
    *(_OWORD *)(v7 + 128) = v14;
    *(_OWORD *)(v7 + 96) = v12;
    ++v4[2];
LABEL_4:
    swift_bridgeObjectRelease();
    sub_1B68D61C8((uint64_t)v48);
    if (!--v2) {
      return (uint64_t)v4;
    }
  }
  sub_1B6AC0020(v26, isUniquelyReferenced_nonNull_native);
  unint64_t v27 = sub_1B62C1A30(v19);
  if ((v25 & 1) == (v28 & 1))
  {
    unint64_t v24 = v27;
    if (v25) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CE0B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1E4FBB058];
  uint64_t v4 = (void *)sub_1B6E314E8();
  BOOL v5 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v4;
  }
  unint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v9 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v10 = *v6;
    unint64_t v11 = *((void *)v5 + 2);
    unint64_t v12 = *((void *)v5 + 3);
    swift_bridgeObjectRetain();
    if (v11 >= v12 >> 1) {
      BOOL v5 = sub_1B636A230(v12 > 1, v11 + 1, 1, v5, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v5 + 2) = v11 + 1;
    *(void *)&v5[8 * v11 + 32] = v9;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = sub_1B62C1A30(v9);
    char v16 = v14;
    uint64_t v17 = v4[2] + ((v14 & 1) == 0);
    if (v4[3] < v17) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v14) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B6AD1D1C();
      if (v16)
      {
LABEL_13:
        unint64_t v20 = (void *)(v4[7] + 16 * v15);
        swift_bridgeObjectRelease();
        *unint64_t v20 = v8;
        v20[1] = v10;
        goto LABEL_4;
      }
    }
LABEL_3:
    v4[(v15 >> 6) + 8] |= 1 << v15;
    *(void *)(v4[6] + 8 * v15) = v9;
    uint64_t v7 = (void *)(v4[7] + 16 * v15);
    *uint64_t v7 = v8;
    v7[1] = v10;
    ++v4[2];
LABEL_4:
    v6 += 3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v4;
    }
  }
  sub_1B6AC03A4(v17, isUniquelyReferenced_nonNull_native);
  unint64_t v18 = sub_1B62C1A30(v9);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v15 = v18;
    if (v16) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CE300()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for RGGraphTranslator.Reference()
{
  return sub_1B62C36EC();
}

void sub_1B68CE3AC()
{
  if (!qword_1EB97E860)
  {
    sub_1B637EC90(255, &qword_1EB97E870, (unint64_t *)&qword_1EB97E840);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB97E860);
    }
  }
}

void sub_1B68CE434()
{
  if (!qword_1E9DD1D40)
  {
    sub_1B62CB1E8(255, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1D40);
    }
  }
}

void sub_1B68CE4B0()
{
  if (!qword_1E9DD1D68)
  {
    _s11ParameterInCMa();
    sub_1B62CAC44(255, &qword_1E9DD1D70, (uint64_t (*)(uint64_t))_s12ParameterOutCMa, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1D68);
    }
  }
}

void sub_1B68CE550()
{
  if (!qword_1E9DD1D78)
  {
    sub_1B68D54B4(255, &qword_1E9DD1D80);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1D78);
    }
  }
}

void sub_1B68CE5C8()
{
  if (!qword_1E9DD1DB0)
  {
    sub_1B62CB1E8(255, &qword_1E9DD1DB8, (uint64_t)&type metadata for Position, MEMORY[0x1E4FBB730]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1DB0);
    }
  }
}

uint64_t sub_1B68CE644(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBB058];
  uint64_t v4 = (void *)sub_1B6E314E8();
  BOOL v5 = sub_1B636A230(0, v2, 0, MEMORY[0x1E4FBC860], &qword_1E9DD1E68, v3);
  if (!v2) {
    return (uint64_t)v4;
  }
  for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    uint64_t v9 = *(i - 1);
    uint64_t v8 = *i;
    unint64_t v11 = *((void *)v5 + 2);
    unint64_t v10 = *((void *)v5 + 3);
    if (v11 >= v10 >> 1) {
      BOOL v5 = sub_1B636A230(v10 > 1, v11 + 1, 1, v5, &qword_1E9DD1E68, MEMORY[0x1E4FBB058]);
    }
    *((void *)v5 + 2) = v11 + 1;
    *(void *)&v5[8 * v11 + 32] = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_1B62C1A30(v9);
    char v15 = v13;
    uint64_t v16 = v4[2] + ((v13 & 1) == 0);
    if (v4[3] < v16) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v13) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B6AD5ED4();
      if (v15)
      {
LABEL_13:
        *(void *)(v4[7] + 8 * v14) = v8;
        goto LABEL_4;
      }
    }
LABEL_3:
    v4[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v7 = 8 * v14;
    *(void *)(v4[6] + v7) = v9;
    *(void *)(v4[7] + v7) = v8;
    ++v4[2];
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v4;
    }
  }
  sub_1B6AC6154(v16, isUniquelyReferenced_nonNull_native);
  unint64_t v17 = sub_1B62C1A30(v9);
  if ((v15 & 1) == (v18 & 1))
  {
    unint64_t v14 = v17;
    if (v15) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B68CE840(uint64_t a1, uint64_t a2, void *a3)
{
  if (!*(void *)(a2 + 16))
  {
    uint64_t v4 = swift_retain();
    MEMORY[0x1BA9B3870](v4);
    if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
  }
}

uint64_t sub_1B68CE8C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  if (a2 - a1 < 0
    || ((unint64_t v6 = a3 + 24 * (a2 - a1), a4 + 32 + 24 * a1 < v6) ? (v7 = a4 + 32 + 24 * a2 > a3) : (v7 = 0), v7))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B67FBAEC(0, a5, a6);
    swift_arrayInitWithCopy();
    return v6;
  }
  return result;
}

uint64_t sub_1B68CE9C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 24 * (a2 - a1), a4 + 32 + 24 * a1 < v4) ? (v5 = a4 + 32 + 24 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B68CEAB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = a4 + (a1 << 6) + 32, v7 = a3 + (v5 << 6), v6 < v7) ? (v8 = v6 + (v5 << 6) > a3) : (v8 = 0), v8))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v7;
  }
  return result;
}

void sub_1B68CEB94(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, _OWORD *)@<X1>, uint64_t a3@<X8>)
{
  *(void *)&v17[0] = a1;
  a2(&v14, v17);
  swift_release();
  sub_1B68D5DA8((uint64_t)v15, (uint64_t)v16, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
  sub_1B68D5DA8((uint64_t)v16, (uint64_t)v17, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
  if (sub_1B68D6038((uint64_t)v17) == 1
    || (sub_1B68D604C(v17, v13), int v4 = sub_1B68D6084((uint64_t)v13), nullsub_1(v13), v4 == 1))
  {
    uint64_t v14 = 0;
    v15[0] = 0xE000000000000000;
    sub_1B6E328C8();
    uint64_t v10 = sub_1B682A98C();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = v10;
    v15[0] = v12;
    sub_1B6E31948();
    sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    long long v6 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(a3 + 96) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(a3 + 112) = v6;
    *(void *)(a3 + 128) = *(void *)(v5 + 128);
    long long v7 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(a3 + 48) = v7;
    long long v8 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(a3 + 64) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(a3 + 80) = v8;
    long long v9 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v5;
    *(_OWORD *)(a3 + 16) = v9;
  }
}

uint64_t sub_1B68CED1C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder;
  unint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *((void *)&v10 + 1) = v8;
  *(void *)&long long v10 = v8 + 0x7FFFFFFFFFFFFFF0;
  uint64_t v9 = v10 >> 3;
  if (v8 >> 60 <= 8)
  {
    switch(v9)
    {
      case 0:
        sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
        swift_dynamicCast();
        char v16 = v65[0];
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = a3;
        *(void *)(v14 + 24) = 1;
        *(unsigned char *)(v14 + 32) = v16;
        char v15 = (uint64_t (*)())sub_1B68D6724;
        goto LABEL_19;
      case 1:
      case 2:
      case 3:
      case 7:
        break;
      case 4:
      case 5:
        sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
        swift_dynamicCast();
        int v21 = v65[0];
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = a3;
        *(void *)(v14 + 24) = 4;
        *(_DWORD *)(v14 + 32) = v21;
        char v15 = sub_1B68D66D4;
        goto LABEL_19;
      case 6:
        sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
        swift_dynamicCast();
        uint64_t v22 = *(void *)&v65[0];
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = a3;
        *(void *)(v14 + 24) = 8;
        *(void *)(v14 + 32) = v22;
        char v15 = (uint64_t (*)())sub_1B68D6698;
        goto LABEL_19;
      case 8:
        sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
        swift_dynamicCast();
        int v23 = v65[0];
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = a3;
        *(void *)(v14 + 24) = 4;
        *(_DWORD *)(v14 + 32) = v23;
        char v15 = (uint64_t (*)())sub_1B68D6654;
        goto LABEL_19;
      default:
        JUMPOUT(0);
    }
  }
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E8F480;
  unint64_t v12 = v11 | 0x1000000000000000;
  sub_1B67C52A4(v8);
  sub_1B67C52A4(v8);
  LOBYTE(v12) = sub_1B69B18E4(v12, v8);
  swift_release();
  sub_1B678FC34(v8);
  if (v12)
  {
    sub_1B678FC34(v8);
    sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
    sub_1B6395A28(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    swift_dynamicCast();
    uint64_t v13 = *(void *)&v65[0];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = 8;
    *(void *)(v14 + 32) = v13;
    char v15 = (uint64_t (*)())sub_1B68D6610;
  }
  else
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B6E8DAE0;
    unint64_t v18 = v17 | 0x1000000000000000;
    sub_1B67C52A4(v8);
    LOBYTE(v18) = sub_1B69B18E4(v18, v8);
    swift_release();
    sub_1B678FC34(v8);
    if (v18)
    {
      sub_1B678FC34(v8);
      sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
      sub_1B6395A28(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
      swift_dynamicCast();
      long long v57 = v65[0];
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a3;
      *(void *)(v14 + 24) = 16;
      *(_OWORD *)(v14 + 32) = v57;
      char v15 = sub_1B68D65B0;
    }
    else
    {
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1B6E8DAD0;
      unint64_t v20 = v19 | 0x1000000000000000;
      sub_1B67C52A4(v8);
      LOBYTE(v20) = sub_1B69B18E4(v20, v8);
      swift_release();
      sub_1B678FC34(v8);
      if (v20)
      {
        sub_1B678FC34(v8);
        sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
        sub_1B6395A28(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
        swift_dynamicCast();
        long long v58 = v65[0];
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = a3;
        *(void *)(v14 + 24) = 16;
        *(_OWORD *)(v14 + 32) = v58;
        char v15 = sub_1B68D65B0;
      }
      else
      {
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = 2;
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1B6E8F480;
        *(void *)(v24 + 24) = v25 | 0x1000000000000000;
        sub_1B67C52A4(v8);
        char v26 = sub_1B69B18E4(v24 | 0x1000000000000000, v8);
        swift_release();
        sub_1B678FC34(v8);
        if (v26)
        {
          sub_1B678FC34(v8);
          sub_1B62CAAD8(v7 + 8, (uint64_t)&v61);
          type metadata accessor for simd_float2x2(0);
          swift_dynamicCast();
          long long v27 = v65[0];
          uint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = a3;
          *(void *)(v14 + 24) = 16;
          *(_OWORD *)(v14 + 32) = v27;
          char v15 = (uint64_t (*)())sub_1B68D6568;
        }
        else
        {
          uint64_t v28 = swift_allocObject();
          *(void *)(v28 + 16) = 3;
          uint64_t v29 = swift_allocObject();
          *(_OWORD *)(v29 + 16) = xmmword_1B6E8DAE0;
          *(void *)(v28 + 24) = v29 | 0x1000000000000000;
          sub_1B67C52A4(v8);
          char v30 = sub_1B69B18E4(v28 | 0x1000000000000000, v8);
          swift_release();
          sub_1B678FC34(v8);
          if (v30)
          {
            sub_1B678FC34(v8);
            sub_1B62CAAD8(v7 + 8, (uint64_t)v65);
            type metadata accessor for simd_float3x3(0);
            swift_dynamicCast();
            long long v55 = v62;
            long long v59 = v61;
            long long v53 = v63;
            uint64_t v14 = swift_allocObject();
            *(void *)(v14 + 16) = a3;
            *(void *)(v14 + 24) = 48;
            *(_OWORD *)(v14 + 32) = v59;
            *(_OWORD *)(v14 + 48) = v55;
            *(_OWORD *)(v14 + 64) = v53;
            char v15 = (uint64_t (*)())sub_1B68D6500;
          }
          else
          {
            uint64_t v31 = swift_allocObject();
            *(void *)(v31 + 16) = 4;
            uint64_t v32 = swift_allocObject();
            *(_OWORD *)(v32 + 16) = xmmword_1B6E8DAD0;
            *(void *)(v31 + 24) = v32 | 0x1000000000000000;
            char v33 = sub_1B69B18E4(v31 | 0x1000000000000000, v8);
            swift_release();
            sub_1B678FC34(v8);
            if ((v33 & 1) == 0) {
              return 0;
            }
            sub_1B62CAAD8(v7 + 8, (uint64_t)v65);
            type metadata accessor for simd_float4x4(0);
            swift_dynamicCast();
            long long v56 = v62;
            long long v60 = v61;
            long long v52 = v64;
            long long v54 = v63;
            uint64_t v14 = swift_allocObject();
            *(void *)(v14 + 16) = a3;
            *(void *)(v14 + 24) = 64;
            *(_OWORD *)(v14 + 32) = v60;
            *(_OWORD *)(v14 + 48) = v56;
            *(_OWORD *)(v14 + 64) = v54;
            *(_OWORD *)(v14 + 80) = v52;
            char v15 = (uint64_t (*)())sub_1B68D6488;
          }
        }
      }
    }
  }
LABEL_19:
  uint64_t v34 = (uint64_t)v15;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v14;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v61 = *a4;
  uint64_t v37 = v61;
  *a4 = 0x8000000000000000;
  unint64_t v38 = sub_1B62C1A30(a2);
  char v40 = v39;
  uint64_t v41 = *(void *)(v37 + 16) + ((v39 & 1) == 0);
  if (*(void *)(v37 + 24) >= v41)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6AD167C();
      uint64_t v37 = v61;
    }
  }
  else
  {
    sub_1B6ABF978(v41, isUniquelyReferenced_nonNull_native);
    uint64_t v37 = v61;
    unint64_t v42 = sub_1B62C1A30(a2);
    if ((v40 & 1) != (v43 & 1))
    {
      sub_1B6E33838();
      __break(1u);
      JUMPOUT(0x1B68CF7F0);
    }
    unint64_t v38 = v42;
  }
  *a4 = v37;
  swift_bridgeObjectRelease();
  uint64_t v44 = *a4;
  swift_bridgeObjectRetain();
  if ((v40 & 1) == 0) {
    sub_1B636A6BC(v38, a2, MEMORY[0x1E4FBC860], v44);
  }
  uint64_t v45 = *(void *)(v44 + 56);
  swift_bridgeObjectRelease();
  char v46 = *(void **)(v45 + 8 * v38);
  char v47 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v45 + 8 * v38) = v46;
  if ((v47 & 1) == 0)
  {
    char v46 = sub_1B62CAB34(0, v46[2] + 1, 1, v46, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
    *(void *)(v45 + 8 * v38) = v46;
  }
  unint64_t v49 = v46[2];
  unint64_t v48 = v46[3];
  if (v49 >= v48 >> 1)
  {
    char v46 = sub_1B62CAB34(v48 > 1, v49 + 1, 1, v46, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
    *(void *)(v45 + 8 * v38) = v46;
  }
  void v46[2] = v49 + 1;
  uint64_t v50 = &v46[2 * v49];
  v50[4] = sub_1B68D64EC;
  v50[5] = v35;
  sub_1B62C6A50(v34);
  sub_1B62C6A50(v34);
  return 1;
}

uint64_t sub_1B68CF814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_1B6C7ED98(*(void *)(v4 + 56));
  char v11 = v10;
  if (v10) {
    return (v11 & 1) == 0;
  }
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a3;
  _OWORD v14[3] = 16;
  void v14[4] = v12;
  void v14[5] = v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1B68D65C4;
  *(void *)(v15 + 24) = v14;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *a4;
  uint64_t v32 = *a4;
  *a4 = 0x8000000000000000;
  unint64_t v18 = sub_1B62C1A30(a2);
  char v20 = v19;
  uint64_t v21 = *(void *)(v17 + 16) + ((v19 & 1) == 0);
  if (*(void *)(v17 + 24) >= v21)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6AD167C();
      uint64_t v17 = v32;
    }
    goto LABEL_7;
  }
  sub_1B6ABF978(v21, isUniquelyReferenced_nonNull_native);
  uint64_t v17 = v32;
  unint64_t v22 = sub_1B62C1A30(a2);
  if ((v20 & 1) == (v23 & 1))
  {
    unint64_t v18 = v22;
LABEL_7:
    *a4 = v17;
    swift_bridgeObjectRelease();
    uint64_t v24 = *a4;
    swift_bridgeObjectRetain();
    if ((v20 & 1) == 0) {
      sub_1B636A6BC(v18, a2, MEMORY[0x1E4FBC860], v24);
    }
    uint64_t v25 = *(void *)(v24 + 56);
    swift_bridgeObjectRelease();
    char v26 = *(void **)(v25 + 8 * v18);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v25 + 8 * v18) = v26;
    if ((v27 & 1) == 0)
    {
      char v26 = sub_1B62CAB34(0, v26[2] + 1, 1, v26, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
      *(void *)(v25 + 8 * v18) = v26;
    }
    unint64_t v29 = v26[2];
    unint64_t v28 = v26[3];
    if (v29 >= v28 >> 1)
    {
      char v26 = sub_1B62CAB34(v28 > 1, v29 + 1, 1, v26, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
      *(void *)(v25 + 8 * v18) = v26;
    }
    v26[2] = v29 + 1;
    char v30 = &v26[2 * v29];
    v30[4] = sub_1B68D64EC;
    void v30[5] = v15;
    swift_release_n();
    return (v11 & 1) == 0;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B68CFA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = (void *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 8);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 16);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 24);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 32);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 40);
  char v10 = *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 48);
  __int16 v11 = *(_WORD *)(a1 + OBJC_IVAR____TtC3VFX13_ECSValueNode_entityKeyPath + 50);
  type metadata accessor for SetECSValueNode(0);
  uint64_t v12 = swift_dynamicCastClass();
  if (v12) {
    char v13 = 2;
  }
  else {
    char v13 = 1;
  }
  char v37 = v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = *v4;
  *(void *)(v14 + 24) = v6;
  *(void *)(v14 + 32) = v5;
  *(void *)(v14 + 40) = v7;
  *(void *)(v14 + 48) = v8;
  *(void *)(v14 + 56) = v9;
  *(unsigned char *)(v14 + 64) = v10;
  *(_WORD *)(v14 + 66) = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  if (sub_1B6A94630(v8, 0))
  {
    if (v12) {
      uint64_t v15 = MEMORY[0x1E4FBB870];
    }
    else {
      uint64_t v15 = MEMORY[0x1E4FBB2A0];
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v14 + 48);
  }
  uint64_t v16 = sub_1B62B5950(v15);
  sub_1B68D67E0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 24) = 0;
  *(void *)(v17 + 32) = 0;
  *(void *)(v17 + 16) = 0;
  *(_OWORD *)(v17 + 40) = xmmword_1B6E8DCB0;
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v17;
  *(void *)(v19 + 32) = v14 | 0x3000000000000000;
  *(unsigned char *)(v19 + 40) = v37;
  *(void *)(v19 + 48) = 0;
  *(unsigned char *)(v19 + 56) = 1;
  *(void *)(v19 + 64) = a3;
  *(void *)(v19 + 72) = v16;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1B68D6860;
  *(void *)(v20 + 24) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *a4;
  *a4 = 0x8000000000000000;
  unint64_t v23 = sub_1B62C1A30(a2);
  char v25 = v24;
  uint64_t v26 = *(void *)(v22 + 16) + ((v24 & 1) == 0);
  if (*(void *)(v22 + 24) >= v26)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1B6AD167C();
    }
  }
  else
  {
    sub_1B6ABF978(v26, isUniquelyReferenced_nonNull_native);
    unint64_t v27 = sub_1B62C1A30(a2);
    if ((v25 & 1) != (v28 & 1))
    {
      uint64_t result = sub_1B6E33838();
      __break(1u);
      return result;
    }
    unint64_t v23 = v27;
  }
  *a4 = v22;
  swift_bridgeObjectRelease();
  uint64_t v29 = *a4;
  swift_bridgeObjectRetain();
  if ((v25 & 1) == 0) {
    sub_1B636A6BC(v23, a2, MEMORY[0x1E4FBC860], v29);
  }
  uint64_t v30 = *(void *)(v29 + 56);
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void **)(v30 + 8 * v23);
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 8 * v23) = v31;
  if ((v32 & 1) == 0)
  {
    uint64_t v31 = sub_1B62CAB34(0, v31[2] + 1, 1, v31, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
    *(void *)(v30 + 8 * v23) = v31;
  }
  unint64_t v34 = v31[2];
  unint64_t v33 = v31[3];
  if (v34 >= v33 >> 1)
  {
    uint64_t v31 = sub_1B62CAB34(v33 > 1, v34 + 1, 1, v31, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
    *(void *)(v30 + 8 * v23) = v31;
  }
  uint64_t v31[2] = v34 + 1;
  uint64_t v35 = &v31[2 * v34];
  v35[4] = sub_1B68D64EC;
  _OWORD v35[5] = v20;
  swift_release();
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_1B68CFE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_1B6C7C8A8();
  if (!*(void *)(v6 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1B6E32BE8();
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v7 = *(void *)(v6 + 32);
  char v8 = *(unsigned char *)(v6 + 40);
  uint64_t v9 = *(void *)(v6 + 48);
  char v10 = *(unsigned char *)(v6 + 56);
  sub_1B62C6AA8(v7);
  swift_bridgeObjectRelease();
  sub_1B68EC9E4(v7);
  if (sub_1B6A94630(v11, 0))
  {
    if ((v8 & 2) != 0) {
      uint64_t v12 = MEMORY[0x1E4FBB870];
    }
    else {
      uint64_t v12 = MEMORY[0x1E4FBB2A0];
    }
  }
  else
  {
    sub_1B68EC9E4(v7);
  }
  uint64_t v13 = sub_1B62B5950(v12);
  sub_1B68D67E0();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 0;
  *(void *)(v14 + 16) = 0;
  *(_OWORD *)(v14 + 40) = xmmword_1B6E8DCB0;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v14;
  *(void *)(v16 + 32) = v7;
  *(unsigned char *)(v16 + 40) = v8;
  *(void *)(v16 + 48) = v9;
  *(unsigned char *)(v16 + 56) = v10;
  *(void *)(v16 + 64) = a3;
  *(void *)(v16 + 72) = v13;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1B68D6860;
  *(void *)(v17 + 24) = v16;
  sub_1B62C6AA8(v7);
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *a4;
  uint64_t v35 = *a4;
  *a4 = 0x8000000000000000;
  unint64_t v20 = sub_1B62C1A30(a2);
  char v22 = v21;
  uint64_t v23 = *(void *)(v19 + 16) + ((v21 & 1) == 0);
  if (*(void *)(v19 + 24) >= v23)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6AD167C();
      uint64_t v19 = v35;
    }
    goto LABEL_12;
  }
  sub_1B6ABF978(v23, isUniquelyReferenced_nonNull_native);
  uint64_t v19 = v35;
  unint64_t v24 = sub_1B62C1A30(a2);
  if ((v22 & 1) != (v25 & 1))
  {
LABEL_20:
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v20 = v24;
LABEL_12:
  *a4 = v19;
  swift_bridgeObjectRelease();
  uint64_t v26 = *a4;
  swift_bridgeObjectRetain();
  if ((v22 & 1) == 0) {
    sub_1B636A6BC(v20, a2, MEMORY[0x1E4FBC860], v26);
  }
  uint64_t v27 = *(void *)(v26 + 56);
  swift_bridgeObjectRelease();
  char v28 = *(void **)(v27 + 8 * v20);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v27 + 8 * v20) = v28;
  if ((v29 & 1) == 0)
  {
    char v28 = sub_1B62CAB34(0, v28[2] + 1, 1, v28, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
    *(void *)(v27 + 8 * v20) = v28;
  }
  unint64_t v31 = v28[2];
  unint64_t v30 = v28[3];
  if (v31 >= v30 >> 1)
  {
    char v28 = sub_1B62CAB34(v30 > 1, v31 + 1, 1, v28, &qword_1E9DD20B8, (uint64_t (*)(uint64_t))sub_1B68D6750);
    *(void *)(v27 + 8 * v20) = v28;
  }
  uint64_t v28[2] = v31 + 1;
  char v32 = &v28[2 * v31];
  v32[4] = sub_1B68D64EC;
  v32[5] = v17;
  sub_1B62C6A70(v7);
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_1B68D0200(uint64_t a1, void *a2)
{
  void (*v148)(void **__return_ptr, _OWORD *);
  char *v149;
  uint64_t v150;
  char v151;
  int64x2_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  void *v161;
  void *v162;
  uint64_t v163;
  int64_t v164;
  int64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD v170[8];
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void v178[3];
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void v182[3];
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  char v206;
  char v207;
  long long v208;
  long long v209;
  long long v210;
  uint64_t v211;
  int v212;
  _OWORD v213[9];
  void *aBlock;
  uint64_t v215[18];
  unsigned char v216[144];
  _OWORD v217[9];
  unsigned char v218[56];
  unsigned char v219[80];
  uint64_t v220;
  uint64_t v221;
  long long v222;
  long long v223;
  long long v224;
  uint64_t v225;
  int v226;
  unsigned char v227[8];
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  uint64_t v233;

  uint64_t v3 = v2;
  uint64_t v233 = *MEMORY[0x1E4F143B8];
  sub_1B6C80BD0(&v172);
  uint64_t v6 = v173;
  uint64_t v203 = v173;
  uint64_t v202 = v172;
  sub_1B62D8C3C((uint64_t)&v202);
  uint64_t v201 = v174;
  sub_1B62D8C3C((uint64_t)&v201);
  int v200 = v175;
  sub_1B62D8C3C((uint64_t)&v200);
  uint64_t v199 = v176;
  sub_1B62D8C3C((uint64_t)&v199);
  uint64_t v198 = v177;
  sub_1B62D8C3C((uint64_t)&v198);
  unint64_t v7 = *(void *)(v6 + 16);
  sub_1B62D8C3C((uint64_t)&v203);
  if (v7 > 0x10)
  {
    sub_1B68BD588(a1, 0, 1, 0xD000000000000010, 0x80000001B6F3C010);
    swift_willThrow();
    return (uint64_t)a2;
  }
  char v8 = (void *)(a1 + OBJC_IVAR____TtC3VFX18CustomFunctionNode_reflection);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC3VFX18CustomFunctionNode_reflection);
  if (!v9) {
    return 0;
  }
  uint64_t v148 = (void (*)(void **__return_ptr, _OWORD *))a2;
  uint64_t v162 = (void *)a1;
  uint64_t v169 = v3;
  uint64_t v10 = v8[2];
  uint64_t v11 = v8[3];
  uint64_t v12 = v8[1];
  uint64_t v13 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v171 = MEMORY[0x1E4FBC868];
  uint64_t v163 = v9 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v9 + 64);
  char v158 = v12;
  char v154 = v10;
  char v156 = v11;
  sub_1B68D62B8(v9);
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  uint64_t v165 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v160 = v9 + 104;
  uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v168 = v9;
  while (1)
  {
    if (v16)
    {
      unint64_t v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_23;
    }
    uint64_t v22 = v17 + 1;
    if (v17 + 1 >= v165) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v163 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v17 + 2;
      if (v17 + 2 >= v165) {
        goto LABEL_35;
      }
      unint64_t v23 = *(void *)(v163 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v17 + 3;
        if (v17 + 3 >= v165) {
          goto LABEL_35;
        }
        unint64_t v23 = *(void *)(v163 + 8 * v22);
        if (!v23)
        {
          uint64_t v22 = v17 + 4;
          if (v17 + 4 < v165)
          {
            unint64_t v23 = *(void *)(v163 + 8 * v22);
            if (!v23)
            {
              do
              {
                if (v165 - 5 == v17) {
                  goto LABEL_35;
                }
                unint64_t v23 = *(void *)(v160 + 8 * v17++);
              }
              while (!v23);
              uint64_t v22 = v17 + 4;
            }
            goto LABEL_22;
          }
LABEL_35:
          uint64_t v40 = swift_release();
          unint64_t v41 = (*(uint64_t (**)(uint64_t))(*v162 + 320))(v40);
          uint64_t v42 = swift_allocObject();
          *(unsigned char *)(v42 + 16) = 3;
          char v43 = sub_1B69B18E4(v41, v42 | 0x4000000000000000);
          swift_release();
          sub_1B678FC34(v41);
          uint64_t v44 = v162[3];
          uint64_t v45 = *(void *)(v44 + 16);
          if (!v45)
          {
            swift_bridgeObjectRelease();
            unint64_t v48 = (char *)MEMORY[0x1E4FBC860];
            a2 = (void *)MEMORY[0x1E4FBC860];
            uint64_t v47 = v169;
LABEL_39:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((void *)v18 + 2))
            {
              unint64_t v49 = *(uint64_t **)(v47 + 64);
              uint64_t v50 = v171;
              uint64_t v51 = swift_allocObject();
              *(void *)(v51 + 16) = v18;
              *(void *)(v51 + 24) = v50;
              v215[3] = (uint64_t)sub_1B68D6394;
              v215[4] = v51;
              aBlocuint64_t k = (void *)MEMORY[0x1E4F143A8];
              v215[0] = 1107296256;
              v215[1] = (uint64_t)sub_1B6A0A480;
              v215[2] = (uint64_t)&unk_1F0FB7F08;
              long long v52 = _Block_copy(&aBlock);
              swift_bridgeObjectRetain();
              swift_release();
              uint64_t CustomPass = RGBuilderCreateCustomPass(v49, "Load data", v52);
              _Block_release(v52);
              uint64_t v54 = *((void *)v18 + 2);
              if (v54)
              {
                long long v55 = (uint64_t *)(v18 + 40);
                do
                {
                  uint64_t v56 = *v55;
                  v55 += 2;
                  RGPassWritesTo(CustomPass, v56);
                  --v54;
                }
                while (v54);
              }
              swift_bridgeObjectRelease();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v48 = sub_1B68C43EC(0, *((void *)v48 + 2) + 1, 1, v48);
              }
              unint64_t v58 = *((void *)v48 + 2);
              unint64_t v57 = *((void *)v48 + 3);
              if (v58 >= v57 >> 1) {
                unint64_t v48 = sub_1B68C43EC(v57 > 1, v58 + 1, 1, v48);
              }
              *((void *)v48 + 2) = v58 + 1;
              *(void *)&v48[8 * v58 + 32] = CustomPass;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            return (uint64_t)a2;
          }
          char v147 = v43;
          char v155 = OBJC_IVAR____TtC3VFX18CustomFunctionNode_inputTypes;
          char v153 = v44 + 32;
          swift_bridgeObjectRetain();
          unint64_t v46 = 0;
          a2 = (void *)MEMORY[0x1E4FBC860];
          char v150 = v45;
          char v152 = vdupq_n_s64(0x8000000000000000);
          uint64_t v149 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v47 = v169;
          char v157 = v18;
          while (1)
          {
            if (!v46) {
              goto LABEL_53;
            }
            uint64_t v159 = a2;
            int v164 = *(void *)(v153 + 8 * v46);
            sub_1B67C52A4(v164);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v60 = swift_bridgeObjectRetain();
            uint64_t v61 = sub_1B68ACC94(v60);
            swift_bridgeObjectRelease();
            uint64_t v62 = swift_bridgeObjectRetain();
            sub_1B68ACC94(v62);
            swift_bridgeObjectRelease();
            sub_1B62CB1E8(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
            *(int64x2_t *)(swift_allocObject() + 32) = v152;
            if (v46 < *(void *)(v61 + 16) && (unint64_t v63 = v61 + 16 * v46, (v64 = *(void *)(v63 + 40)) != 0))
            {
              aBlocuint64_t k = *(void **)(v63 + 32);
              v215[0] = v64;
              *(void *)&v217[0] = 35;
              *((void *)&v217[0] + 1) = 0xE100000000000000;
              sub_1B633AF88();
              swift_bridgeObjectRetain();
              uint64_t v65 = sub_1B6E325F8();
              uint64_t v66 = *(void *)(v65 + 32);
              uint64_t v166 = *(void *)(v65 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v66 = 0;
              uint64_t v166 = 0xE000000000000000;
            }
            uint64_t v18 = v157;
            swift_bridgeObjectRelease();
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v67 = v162[2] + 16 * v46;
            a2 = *(void **)(v67 + 32);
            int v161 = a2;
            if ((unint64_t)v164 >> 60 == 1) {
              goto LABEL_71;
            }
            if ((unint64_t)v164 >> 60 != 8) {
              goto LABEL_171;
            }
            if (v164 <= (uint64_t)0x800000000000003FLL)
            {
              if (v164 > (uint64_t)0x800000000000002FLL)
              {
                if (v164 != 0x8000000000000030)
                {
                  uint64_t v68 = 56;
                  goto LABEL_70;
                }
              }
              else
              {
                if (v164 == 0x8000000000000000)
                {
                  uint64_t v106 = *(void *)((char *)v162 + v155);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v107 = swift_bridgeObjectRetain();
                  sub_1B68ACC94(v107);
                  swift_bridgeObjectRelease();
                  uint64_t v108 = swift_bridgeObjectRetain();
                  sub_1B68ACC94(v108);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  unint64_t v109 = *(void *)(v106 + 8 * v46 + 32);
                  sub_1B66456F8(v109);
                  swift_bridgeObjectRelease();
                  if (v109 >> 61 == 3)
                  {
                    unint64_t v110 = *(void *)((v109 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
                    sub_1B67C52A4(v110);
                    sub_1B6645740(v109);
                    a2 = v159;
                    if (!(v110 >> 60))
                    {
                      unint64_t v111 = *(void *)(v110 + 16);
                      sub_1B67C52A4(v111);
                      sub_1B678FC34(v110);
                      uint64_t v112 = sub_1B69B18E4(v111, 0x8000000000000098);
                      if (v112)
                      {
                        uint64_t v113 = RGResourceIdentifierFinalColor((CFX::RG::ResourceIdentifier *)v112);
                        RGTextureReferenceDescriptorCreate(v113, 1.0);
                      }
                      sub_1B678FC34(v111);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_177;
                    }
                    sub_1B678FC34(v110);
                  }
                  else
                  {
                    sub_1B6645740(v109);
                    a2 = v159;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_177:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  aBlocuint64_t k = 0;
                  v215[0] = 0xE000000000000000;
                  sub_1B6E328C8();
                  swift_bridgeObjectRelease();
                  aBlocuint64_t k = (void *)0xD000000000000015;
                  v215[0] = 0x80000001B6F3BF20;
                  sub_1B69B0F8C(0x8000000000000000);
                  sub_1B6E31948();
                  swift_bridgeObjectRelease();
                  sub_1B68BD588((uint64_t)v162, v46, 0, (uint64_t)aBlock, v215[0]);
                  swift_bridgeObjectRelease();
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_release();
                  return (uint64_t)a2;
                }
                uint64_t v68 = 16;
LABEL_70:
                if (v164 != (v68 & 0xFFFFFFFFFFFFLL | 0x8000000000000000)) {
                  goto LABEL_171;
                }
              }
              goto LABEL_71;
            }
            if (v164 <= (uint64_t)0x8000000000000097) {
              break;
            }
            if (v164 == 0x80000000000000A0)
            {
              uint64_t v114 = *(void *)(v67 + 40);
              *(void *)&v213[0] = *(void *)(v67 + 32);
              swift_retain_n();
              v148(&aBlock, v213);
              swift_release();
              sub_1B68D5DA8((uint64_t)v215, (uint64_t)v216, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
              sub_1B68D5DA8((uint64_t)v216, (uint64_t)v217, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
              if (sub_1B68D6038((uint64_t)v217) == 1) {
                goto LABEL_182;
              }
              sub_1B68D604C(v217, v213);
              int v115 = sub_1B68D6084((uint64_t)v213);
              nullsub_1(v213);
              if (v115 == 1) {
                goto LABEL_182;
              }
              uint64_t v117 = v116;
              swift_release();
              char v118 = *(CFX::RG::Resource **)v117;
              long long v119 = *(_OWORD *)(v117 + 88);
              v170[4] = *(_OWORD *)(v117 + 72);
              v170[5] = v119;
              long long v120 = *(_OWORD *)(v117 + 120);
              v170[6] = *(_OWORD *)(v117 + 104);
              v170[7] = v120;
              long long v121 = *(_OWORD *)(v117 + 24);
              v170[0] = *(_OWORD *)(v117 + 8);
              v170[1] = v121;
              long long v122 = *(_OWORD *)(v117 + 56);
              v170[2] = *(_OWORD *)(v117 + 40);
              v170[3] = v122;
              uint64_t v123 = (CFX::RG::RenderGraphBuilder *)*((void *)v170 + v114);
              if (RGResourceIsNull((uint64_t)v123)) {
                goto LABEL_183;
              }
              sub_1B6987230(v66, v166, v158, v156, (uint64_t)v218);
              swift_bridgeObjectRelease();
              sub_1B68D5BE4((uint64_t)v218, (uint64_t)v227, (uint64_t (*)(void))sub_1B68D639C);
              if (!v231)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)&v170[0] = 0;
                *((void *)&v170[0] + 1) = 0xE000000000000000;
                sub_1B6E328C8();
                swift_bridgeObjectRelease();
                *(void *)&v170[0] = 0xD000000000000020;
                *((void *)&v170[0] + 1) = 0x80000001B6F3BF70;
                uint64_t v141 = (uint64_t)v162;
                sub_1B6C80BD0(v182);
                uint64_t v197 = v183;
                sub_1B682BB90(v46, v183);
                uint64_t v196 = v182[0];
                sub_1B62D8C3C((uint64_t)&v196);
                uint64_t v195 = v182[1];
                sub_1B62D8C3C((uint64_t)&v195);
                uint64_t v194 = v182[2];
                sub_1B62D8C3C((uint64_t)&v194);
                sub_1B62D8C3C((uint64_t)&v197);
                uint64_t v193 = v184;
                sub_1B62D8C3C((uint64_t)&v193);
                uint64_t v192 = v185;
                sub_1B62D8C3C((uint64_t)&v192);
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                uint64_t v143 = *((void *)&v170[0] + 1);
                uint64_t v142 = *(void *)&v170[0];
                goto LABEL_179;
              }
              uint64_t v124 = v230;
              int v167 = v232;
              if ((v229 & 1) == 0)
              {
                uint64_t v125 = v228;
                RGContext.tryResolve(resource:)((uint64_t)v123, *(void *)(v169 + 56), (uint64_t)v219);
                sub_1B634FE58((uint64_t)v219, (uint64_t)&v220, (unint64_t *)&qword_1E9DD1FB0, (uint64_t (*)(uint64_t))type metadata accessor for TextureDescriptor);
                if ((v221 & 0xFF0000) != 0x20000 && ((v125 - 4) & 0xFFFFFFFFFFFFFFFBLL) != 0)
                {
                  uint64_t v126 = *(CFX::RG **)(v169 + 64);
                  uint64_t v204 = v220;
                  uint64_t v205 = v221;
                  uint64_t v206 = 1;
                  uint64_t v207 = BYTE2(v221) & 1;
                  uint64_t v208 = v222;
                  uint64_t v209 = v223;
                  int v210 = v224;
                  uint64_t v211 = v225;
                  uint64_t v212 = v226;
                  uint64_t v123 = RGBuilder.createCopyIfNeeded(name:input:inputPass:expected:)((uint64_t)"Input copy", 10, 2, v123, v118, &v204, v126);
                  char v118 = v127;
                }
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v149 = sub_1B68C43EC(0, *((void *)v149 + 2) + 1, 1, v149);
              }
              unint64_t v129 = *((void *)v149 + 2);
              unint64_t v128 = *((void *)v149 + 3);
              if (v129 >= v128 >> 1) {
                uint64_t v149 = sub_1B68C43EC(v128 > 1, v129 + 1, 1, v149);
              }
              *((void *)v149 + 2) = v129 + 1;
              *(void *)&v149[8 * v129 + 32] = v118;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v159 = sub_1B68C4510(0, v159[2] + 1, 1, v159, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
              }
              unint64_t v131 = v159[2];
              unint64_t v130 = v159[3];
              if (v131 >= v130 >> 1) {
                uint64_t v159 = sub_1B68C4510(v130 > 1, v131 + 1, 1, v159, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
              }
              a2 = v159;
              v159[2] = v131 + 1;
              int v132 = &v159[4 * v131];
              v132[4] = v124;
              v132[5] = 0;
              v132[6] = v123;
              *((unsigned char *)v132 + 56) = v167;
              sub_1B68D6414((uint64_t)v218);
            }
            else
            {
              if (v164 != 0x8000000000000098)
              {
LABEL_171:
                swift_retain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                aBlocuint64_t k = 0;
                v215[0] = 0xE000000000000000;
                sub_1B6E328C8();
                swift_bridgeObjectRelease();
                aBlocuint64_t k = (void *)0xD000000000000012;
                v215[0] = 0x80000001B6F3BEC0;
                sub_1B69B0F8C(v164);
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B68BD588((uint64_t)v162, v46, 0, (uint64_t)aBlock, v215[0]);
                swift_bridgeObjectRelease();
                swift_willThrow();
                swift_release();
                unint64_t v139 = v164;
                goto LABEL_166;
              }
              uint64_t v88 = *(void *)((char *)a2 + OBJC_IVAR____TtC3VFX21TextureDescriptorNode__descriptor);
              swift_retain();
              if (!v88)
              {
                swift_retain();
                sub_1B6C80790();
              }
              uint64_t v89 = RGBuilder.createTexture(name:desc:)((uint64_t)"metal script output", 19, 2, v88, *(void *)(v169 + 64));
              uint64_t v90 = *(void *)(v154 + 16);
              if (v90)
              {
                long long v91 = (uint64_t *)(v154 + 56);
                while (1)
                {
                  uint64_t v92 = v91[2];
                  BOOL v93 = *(void *)(v92 + 16) == v66 && *(void *)(v92 + 24) == v166;
                  if (v93 || (sub_1B6E334B8() & 1) != 0) {
                    break;
                  }
                  v91 += 6;
                  if (!--v90) {
                    goto LABEL_111;
                  }
                }
                char v133 = 1;
              }
              else
              {
LABEL_111:
                uint64_t v94 = *(void *)(v156 + 16);
                if (!v94)
                {
LABEL_119:
                  swift_bridgeObjectRelease();
                  if ((v147 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    aBlocuint64_t k = 0;
                    v215[0] = 0xE000000000000000;
                    sub_1B6E328C8();
                    sub_1B6E31948();
                    uint64_t v141 = (uint64_t)v162;
                    sub_1B6C80BD0(v178);
                    uint64_t v191 = v179;
                    sub_1B682BB90(v46, v179);
                    int v190 = v178[0];
                    sub_1B62D8C3C((uint64_t)&v190);
                    uint64_t v189 = v178[1];
                    sub_1B62D8C3C((uint64_t)&v189);
                    uint64_t v188 = v178[2];
                    sub_1B62D8C3C((uint64_t)&v188);
                    sub_1B62D8C3C((uint64_t)&v191);
                    uint64_t v187 = v180;
                    sub_1B62D8C3C((uint64_t)&v187);
                    uint64_t v186 = v181;
                    sub_1B62D8C3C((uint64_t)&v186);
                    sub_1B6E31948();
                    swift_bridgeObjectRelease();
                    sub_1B6E31948();
                    uint64_t v142 = (uint64_t)aBlock;
                    uint64_t v143 = v215[0];
LABEL_179:
                    sub_1B68BD588(v141, v46, 0, v142, v143);
                    swift_bridgeObjectRelease();
                    swift_willThrow();
                    swift_bridgeObjectRelease();
                    swift_release();
                    return (uint64_t)a2;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v159 = sub_1B68C4510(0, v159[2] + 1, 1, v159, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
                  }
                  unint64_t v98 = v159[2];
                  unint64_t v97 = v159[3];
                  if (v98 >= v97 >> 1) {
                    uint64_t v159 = sub_1B68C4510(v97 > 1, v98 + 1, 1, v159, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
                  }
                  v159[2] = v98 + 1;
                  long long v99 = &v159[4 * v98];
                  v99[4] = 0;
                  v99[5] = 0;
                  v99[6] = v89;
                  *((unsigned char *)v99 + 56) = 3;
                  a2 = v159;
                  swift_release();
                  uint64_t v47 = v169;
                  goto LABEL_52;
                }
                long long v91 = (uint64_t *)(v156 + 56);
                while (1)
                {
                  uint64_t v95 = v91[2];
                  BOOL v96 = *(void *)(v95 + 16) == v66 && *(void *)(v95 + 24) == v166;
                  if (v96 || (sub_1B6E334B8() & 1) != 0) {
                    break;
                  }
                  v91 += 6;
                  if (!--v94) {
                    goto LABEL_119;
                  }
                }
                char v133 = 2;
              }
              uint64_t v134 = *v91;
              swift_retain();
              swift_bridgeObjectRelease();
              uint64_t v135 = v159;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v135 = sub_1B68C4510(0, v159[2] + 1, 1, v159, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
              }
              unint64_t v137 = v135[2];
              unint64_t v136 = v135[3];
              uint64_t v138 = v135;
              if (v137 >= v136 >> 1) {
                uint64_t v138 = sub_1B68C4510(v136 > 1, v137 + 1, 1, v135, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
              }
              v138[2] = v137 + 1;
              long long v59 = &v138[4 * v137];
              a2 = v138;
              v59[4] = v134;
              v59[5] = 0;
              v59[6] = v89;
              *((unsigned char *)v59 + 56) = v133;
              swift_release();
            }
            swift_release();
            uint64_t v47 = v169;
LABEL_52:
            uint64_t v45 = v150;
LABEL_53:
            if (++v46 == v45)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v48 = v149;
              goto LABEL_39;
            }
          }
          if (v164 != 0x8000000000000040)
          {
            uint64_t v68 = 80;
            goto LABEL_70;
          }
LABEL_71:
          uint64_t v69 = *(void *)(v158 + 16);
          if (v69)
          {
            long long v70 = (uint64_t *)(v158 + 56);
            while (1)
            {
              uint64_t v71 = v70[2];
              BOOL v72 = *(void *)(v71 + 16) == v66 && *(void *)(v71 + 24) == v166;
              if (v72 || (sub_1B6E334B8() & 1) != 0) {
                break;
              }
              v70 += 6;
              if (!--v69) {
                goto LABEL_79;
              }
            }
            char v76 = 0;
          }
          else
          {
LABEL_79:
            uint64_t v73 = *(void *)(v156 + 16);
            if (!v73)
            {
LABEL_163:
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_164;
            }
            long long v70 = (uint64_t *)(v156 + 56);
            while (1)
            {
              uint64_t v74 = v70[2];
              BOOL v75 = *(void *)(v74 + 16) == v66 && *(void *)(v74 + 24) == v166;
              if (v75 || (sub_1B6E334B8() & 1) != 0) {
                break;
              }
              v70 += 6;
              if (!--v73) {
                goto LABEL_163;
              }
            }
            char v76 = 2;
          }
          uint64_t v78 = *v70;
          uint64_t v77 = v70[1];
          swift_retain();
          if (!v13[2] || (unint64_t v79 = sub_1B62C1A30(v78), (v80 & 1) == 0))
          {
            a2 = v161;
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
LABEL_164:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            aBlocuint64_t k = 0;
            v215[0] = 0xE000000000000000;
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            aBlocuint64_t k = (void *)0xD00000000000001DLL;
            v215[0] = 0x80000001B6F3BEE0;
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B68BD588((uint64_t)v162, v46, 0, (uint64_t)aBlock, v215[0]);
            swift_bridgeObjectRelease();
            swift_willThrow();
LABEL_165:
            swift_release();
            unint64_t v139 = v164;
LABEL_166:
            sub_1B678FC34(v139);
            swift_bridgeObjectRelease();
            return (uint64_t)a2;
          }
          char v151 = v76;
          uint64_t v81 = *(void *)(v13[7] + 8 * v79);
          type metadata accessor for ConstantNode(0);
          a2 = v161;
          uint64_t v82 = swift_dynamicCastClass();
          if (v82)
          {
            uint64_t v83 = v82;
            swift_retain_n();
            swift_retain();
            char v84 = sub_1B68CED1C(v83, v78, v77, &v171);
LABEL_94:
            char v85 = v84;
            swift_release();
            swift_release();
            if ((v85 & 1) == 0) {
              goto LABEL_170;
            }
LABEL_128:
            swift_bridgeObjectRelease();
            a2 = v159;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              a2 = sub_1B68C4510(0, v159[2] + 1, 1, v159, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
            }
            uint64_t v47 = v169;
            unint64_t v104 = a2[2];
            unint64_t v103 = a2[3];
            if (v104 >= v103 >> 1) {
              a2 = sub_1B68C4510(v103 > 1, v104 + 1, 1, a2, &qword_1E9DD20D0, (uint64_t)&type metadata for MetalIOData, (void (*)(void, int64_t, void *, void *))sub_1B68CDCEC);
            }
            a2[2] = v104 + 1;
            char v105 = &a2[4 * v104];
            v105[4] = v78;
            v105[5] = 0;
            v105[6] = v81;
            *((unsigned char *)v105 + 56) = v151;
            swift_release();
            swift_release();
            sub_1B678FC34(v164);
            uint64_t v18 = v157;
            goto LABEL_52;
          }
          long long v86 = (__objc2_class *)*v161;
          if ((__objc2_class *)*v161 == _TtC3VFX15GetECSValueNode && v161)
          {
            swift_retain_n();
            swift_retain();
            char v87 = sub_1B68CFA90((uint64_t)v161, v78, v77, &v171);
          }
          else
          {
            type metadata accessor for GetWorldValueNode(0);
            uint64_t v100 = swift_dynamicCastClass();
            if (!v100)
            {
              swift_retain();
              if (v86 != _TtC3VFX21ResolveResolutionNode || !v161)
              {
LABEL_170:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                aBlocuint64_t k = 0;
                v215[0] = 0xE000000000000000;
                sub_1B6E328C8();
                swift_bridgeObjectRelease();
                aBlocuint64_t k = (void *)0xD000000000000019;
                v215[0] = 0x80000001B6F3BF00;
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B68BD588((uint64_t)v162, v46, 0, (uint64_t)aBlock, v215[0]);
                swift_bridgeObjectRelease();
                swift_willThrow();
                swift_release();
                goto LABEL_165;
              }
              a2 = v161;
              swift_retain();
              swift_retain();
              char v84 = sub_1B68CF814((uint64_t)v161, v78, v77, &v171);
              goto LABEL_94;
            }
            uint64_t v101 = v100;
            swift_retain_n();
            swift_retain();
            char v87 = sub_1B68CFE54(v101, v78, v77, &v171);
          }
          char v102 = v87;
          swift_release();
          swift_release();
          if ((v102 & 1) == 0) {
            goto LABEL_170;
          }
          goto LABEL_128;
        }
      }
    }
LABEL_22:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v17 = v22;
LABEL_23:
    uint64_t v24 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
    if (v24 < 0) {
      break;
    }
    uint64_t v25 = *(void *)(*(void *)(v9 + 48) + 8 * v21);
    uint64_t v26 = RGBuilder.createBuffer(name:desc:)((uint64_t)"Metal script buffer", 19, 2, v24, 0, *(void *)(v169 + 64));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_1B68C4630(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v28 = *((void *)v18 + 2);
    unint64_t v27 = *((void *)v18 + 3);
    uint64_t v29 = (uint64_t)v13;
    if (v28 >= v27 >> 1) {
      uint64_t v18 = sub_1B68C4630(v27 > 1, v28 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v28 + 1;
    unint64_t v30 = v18;
    unint64_t v31 = &v18[16 * v28];
    *((void *)v31 + 4) = v25;
    *((void *)v31 + 5) = v26;
    uint64_t v32 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlocuint64_t k = (void *)v29;
    unint64_t v34 = sub_1B62C1A30(v25);
    char v36 = v35;
    uint64_t v37 = *(void *)(v32 + 16) + ((v35 & 1) == 0);
    if (*(void *)(v32 + 24) >= v37)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1B6AD1694();
      }
    }
    else
    {
      sub_1B6ABF990(v37, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1B62C1A30(v25);
      if ((v36 & 1) != (v39 & 1)) {
        goto LABEL_181;
      }
      unint64_t v34 = v38;
    }
    uint64_t v18 = v30;
    uint64_t v13 = aBlock;
    if (v36)
    {
      *(void *)(aBlock[7] + 8 * v34) = v26;
    }
    else
    {
      aBlock[(v34 >> 6) + 8] |= 1 << v34;
      uint64_t v19 = 8 * v34;
      *(void *)(v13[6] + v19) = v25;
      *(void *)(v13[7] + v19) = v26;
      ++v13[2];
    }
    uint64_t v9 = v168;
    swift_bridgeObjectRelease();
  }
  sub_1B6E32BD8();
  __break(1u);
LABEL_181:
  sub_1B6E33838();
  __break(1u);
LABEL_182:
  aBlocuint64_t k = 0;
  v215[0] = 0xE000000000000000;
  sub_1B6E328C8();
  uint64_t v144 = sub_1B682A98C();
  uint64_t v146 = v145;
  swift_bridgeObjectRelease();
  aBlocuint64_t k = (void *)v144;
  v215[0] = v146;
  sub_1B6E31948();
LABEL_183:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B68D2114@<X0>(__objc2_class **a1@<X0>, void (*a2)(uint64_t *__return_ptr, long long *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v335 = *MEMORY[0x1E4F143B8];
  type metadata accessor for ConstantNode(0);
  if (swift_dynamicCastClass()) {
    goto LABEL_11;
  }
  type metadata accessor for NilNode(0);
  if (swift_dynamicCastClass()) {
    goto LABEL_11;
  }
  type metadata accessor for EntityAssetNode(0);
  if (swift_dynamicCastClass()) {
    goto LABEL_11;
  }
  type metadata accessor for WorldReferenceNode(0);
  if (swift_dynamicCastClass()) {
    goto LABEL_11;
  }
  uint64_t v9 = *a1;
  BOOL v10 = *a1 == _TtC3VFX15GetECSValueNode || *a1 == _TtC3VFX21TextureDescriptorNode;
  if (v10 && a1
    || ((type metadata accessor for GetWorldValueNode(0),
         uint64_t v13 = swift_dynamicCastClass(),
         v9 == _TtC3VFX21ResolveResolutionNode)
      ? (BOOL v14 = a1 == 0)
      : (BOOL v14 = 1),
        !v14 ? (char v15 = 0) : (char v15 = 1),
        v13 || (v15 & 1) == 0))
  {
LABEL_11:
    sub_1B68D6294((uint64_t)&aBlock);
LABEL_12:
    p_aBlocuint64_t k = &aBlock;
LABEL_13:
    sub_1B68D5DA8((uint64_t)p_aBlock, (uint64_t)v334, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
    return sub_1B68D5DA8((uint64_t)v334, a3, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
  }
  if (v9 != _TtC3VFX15RenderWorldNode || !a1)
  {
    if (v9 == _TtC3VFX11PresentNode && a1)
    {
      swift_retain_n();
      unint64_t v25 = sub_1B6C7EF5C();
      if (!v26)
      {
        sub_1B6E328C8();
        uint64_t v58 = swift_bridgeObjectRelease();
        *(void *)&aBlocuint64_t k = 0x207475706E49;
        *((void *)&aBlock + 1) = 0xE600000000000000;
        ((void (*)(void *__return_ptr, uint64_t))(*a1)[3].info)(v201, v58);
        uint64_t v256 = v202;
        sub_1B682BB90(1, v202);
        uint64_t v255 = v201[0];
        sub_1B62D8C3C((uint64_t)&v255);
        uint64_t v254 = v201[1];
        sub_1B62D8C3C((uint64_t)&v254);
        uint64_t v253 = v201[2];
        sub_1B62D8C3C((uint64_t)&v253);
        sub_1B62D8C3C((uint64_t)&v256);
        uint64_t v252 = v203;
        sub_1B62D8C3C((uint64_t)&v252);
        uint64_t v251 = v204;
        sub_1B62D8C3C((uint64_t)&v251);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v32 = *((void *)&aBlock + 1);
        uint64_t v31 = aBlock;
        uint64_t v33 = (uint64_t)a1;
        uint64_t v34 = 1;
        char v35 = 0;
        goto LABEL_58;
      }
      uint64_t v27 = v25;
      uint64_t v28 = v26;
      uint64_t v29 = *(void *)(v5 + 80);
      swift_bridgeObjectRetain();
      uint64_t v173 = v27;
      LOBYTE(v27) = sub_1B677F67C(v27, v28, v29);
      swift_bridgeObjectRelease();
      if (v27)
      {
        *(void *)&aBlocuint64_t k = 0;
        *((void *)&aBlock + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v30 = sub_1B6E31948();
        ((void (*)(uint64_t))(*a1)[3].cache)(v30);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v32 = 0xE000000000000000;
        uint64_t v31 = 0;
        uint64_t v33 = (uint64_t)a1;
        uint64_t v34 = 0;
        char v35 = 1;
LABEL_58:
        sub_1B68BD588(v33, v34, v35, v31, v32);
        swift_bridgeObjectRelease();
LABEL_59:
        swift_willThrow();
        return swift_release_n();
      }
      swift_bridgeObjectRetain();
      sub_1B638E648((uint64_t *)&aBlock, v173, v28);
      swift_bridgeObjectRelease();
      uint64_t v175 = sub_1B68BDD14(v173, v28);
      swift_bridgeObjectRelease();
      isa = a1[2][1].isa;
      uint64_t v60 = swift_retain();
      sub_1B68CEB94(v60, a2, (uint64_t)v205);
      uint64_t v61 = *(uint64_t **)(v5 + 64);
      long long v321 = v210;
      long long v322 = v211;
      long long v323 = v212;
      long long v324 = v213;
      long long v317 = v206;
      long long v318 = v207;
      long long v319 = v208;
      long long v320 = v209;
      uint64_t v62 = (CFX::RG::Resource *)*((void *)&v317 + (void)isa);
      if (RGResourceIsNull((uint64_t)v62)) {
        goto LABEL_132;
      }
      sub_1B6561E54(v62, v61, v175, 0, (uint64_t)&aBlock);
      uint64_t v63 = v316;
      long long v176 = v309;
      long long v179 = aBlock;
      *(_OWORD *)uint64_t v160 = v311;
      unsigned long long v167 = v310;
      long long v149 = v313;
      long long v155 = v312;
      long long v137 = v315;
      long long v143 = v314;
      swift_release_n();
      swift_release();
      long long v325 = v179;
      long long v326 = v176;
      unsigned long long v327 = v167;
      unsigned long long v328 = *(_OWORD *)v160;
      long long v329 = v155;
      long long v330 = v149;
      long long v331 = v143;
      long long v332 = v137;
      uint64_t v333 = v63;
LABEL_62:
      sub_1B68D6214((uint64_t)&v325);
      uint64_t v24 = &v325;
LABEL_63:
      sub_1B68D604C(v24, &aBlock);
      nullsub_1(&aBlock);
      goto LABEL_12;
    }
    if (v9 == _TtC3VFX18PublishTextureNode && a1)
    {
      swift_retain_n();
      swift_retain_n();
      uint64_t v153 = sub_1B6C7EB80();
      char v147 = v36;
      cache = a1[2][1].cache;
      uint64_t v174 = swift_retain();
      sub_1B68CEB94(v174, a2, (uint64_t)v214);
      uint64_t v37 = sub_1B6C7F068();
      uint64_t v165 = sub_1B68BDD14(v37, v38);
      swift_bridgeObjectRelease();
      char v39 = *(uint64_t **)(v5 + 64);
      long long v321 = v219;
      long long v322 = v220;
      long long v323 = v221;
      long long v324 = v222;
      long long v317 = v215;
      long long v318 = v216;
      long long v319 = v217;
      long long v320 = v218;
      uint64_t v40 = (CFX::RG::Resource *)*((void *)&v317 + (void)cache);
      if (RGResourceIsNull((uint64_t)v40)) {
        goto LABEL_132;
      }
      if (v147) {
        int v41 = 0;
      }
      else {
        int v41 = HIDWORD(v153);
      }
      if (v147) {
        int v42 = -1;
      }
      else {
        int v42 = v153;
      }
      uint64_t v43 = swift_allocObject();
      swift_retain();
      swift_weakInit();
      swift_release();
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = v43;
      *(_DWORD *)(v44 + 24) = v42;
      *(_DWORD *)(v44 + 28) = v41;
      *(void *)&unsigned long long v310 = sub_1B68D628C;
      *((void *)&v310 + 1) = v44;
      *(void *)&aBlocuint64_t k = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v309 = sub_1B68BDE74;
      *((void *)&v309 + 1) = &unk_1F0FBA068;
      uint64_t v45 = _Block_copy(&aBlock);
      swift_release();
      sub_1B6561E54(v40, v39, v165, (uint64_t)v45, (uint64_t)&aBlock);
      uint64_t v46 = v316;
      *(_OWORD *)uint64_t v159 = v309;
      long long v166 = aBlock;
      unsigned long long v148 = v311;
      unsigned long long v154 = v310;
      long long v136 = v313;
      long long v142 = v312;
      long long v130 = v315;
      long long v132 = v314;
      _Block_release(v45);
      swift_release_n();
      swift_release_n();
      swift_release();
      long long v325 = v166;
      long long v326 = *(_OWORD *)v159;
      unsigned long long v327 = v154;
      unsigned long long v328 = v148;
      long long v329 = v142;
      long long v330 = v136;
      long long v331 = v132;
      long long v332 = v130;
      uint64_t v333 = v46;
      goto LABEL_62;
    }
    if (v9 == _TtC3VFX8BlurNode && a1)
    {
      uint64_t v47 = a1[2];
      info = v47->info;
      uint64_t v48 = (uint64_t)v47[1].isa;
      swift_retain_n();
      swift_retain_n();
      if (sub_1B68BD13C(v48))
      {
        sub_1B6E328C8();
        uint64_t v50 = swift_bridgeObjectRelease();
        *(void *)&aBlocuint64_t k = 0x207475706E49;
        *((void *)&aBlock + 1) = 0xE600000000000000;
        ((void (*)(void *__return_ptr, uint64_t))(*a1)[3].info)(v227, v50);
        uint64_t v268 = v228;
        sub_1B682BB90(0, v228);
        uint64_t v267 = v227[0];
        sub_1B62D8C3C((uint64_t)&v267);
        uint64_t v266 = v227[1];
        sub_1B62D8C3C((uint64_t)&v266);
        uint64_t v265 = v227[2];
        sub_1B62D8C3C((uint64_t)&v265);
        sub_1B62D8C3C((uint64_t)&v268);
        uint64_t v264 = v229;
        sub_1B62D8C3C((uint64_t)&v264);
        uint64_t v263 = v230;
        sub_1B62D8C3C((uint64_t)&v263);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B68BD588((uint64_t)a1, 0, 0, aBlock, *((uint64_t *)&aBlock + 1));
        swift_bridgeObjectRelease();
        swift_willThrow();
        swift_release_n();
        return swift_release_n();
      }
      *(void *)&v307[0] = info;
      a2((uint64_t *)&aBlock, v307);
      swift_release();
      sub_1B68D5DA8((uint64_t)&aBlock + 8, (uint64_t)&v317, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
      sub_1B68D5DA8((uint64_t)&v317, (uint64_t)&v325, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
      if (sub_1B68D6038((uint64_t)&v325) == 1
        || (sub_1B68D604C(&v325, v307), int v77 = sub_1B68D6084((uint64_t)v307), nullsub_1(v307), v77 == 1))
      {
        *(void *)&aBlocuint64_t k = 0;
        *((void *)&aBlock + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        uint64_t v79 = swift_bridgeObjectRelease();
        *(void *)&aBlocuint64_t k = 0x207475706E49;
        *((void *)&aBlock + 1) = 0xE600000000000000;
        ((void (*)(void *__return_ptr, uint64_t))(*a1)[3].info)(v223, v79);
        uint64_t v262 = v224;
        sub_1B682BB90(0, v224);
        uint64_t v261 = v223[0];
        sub_1B62D8C3C((uint64_t)&v261);
        uint64_t v260 = v223[1];
        sub_1B62D8C3C((uint64_t)&v260);
        uint64_t v259 = v223[2];
        sub_1B62D8C3C((uint64_t)&v259);
        sub_1B62D8C3C((uint64_t)&v262);
        uint64_t v258 = v225;
        sub_1B62D8C3C((uint64_t)&v258);
        uint64_t v257 = v226;
        sub_1B62D8C3C((uint64_t)&v257);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B68BD588((uint64_t)a1, 0, 0, aBlock, *((uint64_t *)&aBlock + 1));
        swift_bridgeObjectRelease();
        swift_willThrow();
        swift_release_n();
        return swift_release_n();
      }
      uint64_t v99 = v78;
      uint64_t v100 = swift_dynamicCastClass();
      if (v100)
      {
        sub_1B62CAAD8(v100 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)&v298);
      }
      else
      {
        long long v299 = 0u;
        long long v298 = 0u;
      }
      sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
      swift_retain();
      int v112 = swift_dynamicCast();
      uint64_t v113 = *(uint64_t **)(v5 + 64);
      uint64_t v114 = *(void *)(v5 + 32);
      long long v302 = *(_OWORD *)(v99 + 72);
      long long v303 = *(_OWORD *)(v99 + 88);
      long long v304 = *(_OWORD *)(v99 + 104);
      long long v305 = *(_OWORD *)(v99 + 120);
      long long v298 = *(_OWORD *)(v99 + 8);
      long long v299 = *(_OWORD *)(v99 + 24);
      long long v300 = *(_OWORD *)(v99 + 40);
      long long v301 = *(_OWORD *)(v99 + 56);
      uint64_t v115 = *((void *)&v298 + v48);
      if (RGResourceIsNull(v115)) {
        goto LABEL_132;
      }
      float v116 = 0.0;
      if (v112) {
        float v117 = *(float *)&v289;
      }
      else {
        float v117 = 0.0;
      }
      if (v117 >= 0.0) {
        float v116 = v117;
      }
      sub_1B6561D5C(v113, v114, (uint64_t)"blur", v115, (uint64_t)&v298, v116);
      uint64_t v118 = v306;
      long long v182 = v298;
      *(_OWORD *)uint64_t v162 = v300;
      long long v169 = v299;
      long long v151 = v302;
      long long v157 = v301;
      long long v139 = v304;
      long long v145 = v303;
      long long v134 = v305;
      swift_release_n();
      swift_release_n();
      swift_release();
      long long v289 = v182;
      long long v290 = v169;
      long long v291 = *(_OWORD *)v162;
      long long v292 = v157;
      long long v293 = v151;
      long long v294 = v145;
      long long v295 = v139;
      long long v296 = v134;
      uint64_t v297 = v118;
LABEL_120:
      sub_1B68D6214((uint64_t)&v289);
      sub_1B68D604C(&v289, &v298);
      nullsub_1(&v298);
      p_aBlocuint64_t k = &v298;
      goto LABEL_13;
    }
    if (v9 == _TtC3VFX9BloomNode && a1)
    {
      uint64_t v64 = a1[2];
      uint64_t v65 = v64->info;
      uint64_t v66 = (uint64_t)v64[1].isa;
      swift_retain_n();
      swift_retain();
      if (sub_1B68BD13C(v66))
      {
        sub_1B6E328C8();
        uint64_t v67 = swift_bridgeObjectRelease();
        *(void *)&aBlocuint64_t k = 0x207475706E49;
        *((void *)&aBlock + 1) = 0xE600000000000000;
        ((void (*)(void *__return_ptr, uint64_t))(*a1)[3].info)(v235, v67);
        uint64_t v280 = v236;
        sub_1B682BB90(0, v236);
        uint64_t v279 = v235[0];
        sub_1B62D8C3C((uint64_t)&v279);
        uint64_t v278 = v235[1];
        sub_1B62D8C3C((uint64_t)&v278);
        uint64_t v277 = v235[2];
        sub_1B62D8C3C((uint64_t)&v277);
        sub_1B62D8C3C((uint64_t)&v280);
        uint64_t v276 = v237;
        sub_1B62D8C3C((uint64_t)&v276);
        uint64_t v275 = v238;
        sub_1B62D8C3C((uint64_t)&v275);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B68BD588((uint64_t)a1, 0, 0, aBlock, *((uint64_t *)&aBlock + 1));
        swift_bridgeObjectRelease();
        swift_willThrow();
        swift_release();
        return swift_release_n();
      }
      *(void *)&v307[0] = v65;
      a2((uint64_t *)&aBlock, v307);
      swift_release();
      sub_1B68D5DA8((uint64_t)&aBlock + 8, (uint64_t)&v317, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
      sub_1B68D5DA8((uint64_t)&v317, (uint64_t)&v325, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
      if (sub_1B68D6038((uint64_t)&v325) == 1
        || (sub_1B68D604C(&v325, v307), int v85 = sub_1B68D6084((uint64_t)v307), nullsub_1(v307), v85 == 1))
      {
        *(void *)&aBlocuint64_t k = 0;
        *((void *)&aBlock + 1) = 0xE000000000000000;
        sub_1B6E328C8();
        uint64_t v87 = swift_bridgeObjectRelease();
        *(void *)&aBlocuint64_t k = 0x207475706E49;
        *((void *)&aBlock + 1) = 0xE600000000000000;
        ((void (*)(void *__return_ptr, uint64_t))(*a1)[3].info)(v231, v87);
        uint64_t v274 = v232;
        sub_1B682BB90(0, v232);
        uint64_t v273 = v231[0];
        sub_1B62D8C3C((uint64_t)&v273);
        uint64_t v272 = v231[1];
        sub_1B62D8C3C((uint64_t)&v272);
        uint64_t v271 = v231[2];
        sub_1B62D8C3C((uint64_t)&v271);
        sub_1B62D8C3C((uint64_t)&v274);
        uint64_t v270 = v233;
        sub_1B62D8C3C((uint64_t)&v270);
        uint64_t v269 = v234;
        sub_1B62D8C3C((uint64_t)&v269);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B68BD588((uint64_t)a1, 0, 0, aBlock, *((uint64_t *)&aBlock + 1));
        swift_bridgeObjectRelease();
        swift_willThrow();
        swift_release();
        return swift_release_n();
      }
      char v102 = (uint64_t *)v86;
      unint64_t v104 = *(CFX::RG::RenderGraphContext **)(v5 + 56);
      unint64_t v103 = *(uint64_t **)(v5 + 64);
      uint64_t v105 = *(void *)(v5 + 32);
      long long v106 = *(_OWORD *)(v86 + 88);
      long long v188 = *(_OWORD *)(v86 + 72);
      long long v189 = v106;
      long long v107 = *(_OWORD *)(v86 + 120);
      long long v190 = *(_OWORD *)(v86 + 104);
      long long v191 = v107;
      long long v108 = *(_OWORD *)(v86 + 24);
      long long v184 = *(_OWORD *)(v86 + 8);
      long long v185 = v108;
      long long v109 = *(_OWORD *)(v86 + 56);
      long long v186 = *(_OWORD *)(v86 + 40);
      long long v187 = v109;
      unint64_t v110 = (const CFX::RG::Resource *)*((void *)&v184 + v66);
      if (RGResourceIsNull((uint64_t)v110)) {
        goto LABEL_132;
      }
      sub_1B6561DB8(v103, v104, v105, v110, *v102, (uint64_t)&v298);
      uint64_t v111 = v306;
      long long v168 = v299;
      long long v177 = v298;
      long long v156 = v301;
      *(_OWORD *)int v161 = v300;
      long long v144 = v303;
      long long v150 = v302;
      long long v133 = v305;
      long long v138 = v304;
      swift_release();
      swift_release_n();
      long long v289 = v177;
      long long v290 = v168;
      long long v291 = *(_OWORD *)v161;
      long long v292 = v156;
      long long v293 = v150;
      long long v294 = v144;
      long long v295 = v138;
      long long v296 = v133;
      uint64_t v297 = v111;
      goto LABEL_120;
    }
    if (v9 == _TtC3VFX17ComputeShaderNode && a1)
    {
      uint64_t v70 = *(void *)(v5 + 48);
      swift_retain_n();
      if (sub_1B6C80FF0())
      {
        swift_retain();
        uint64_t v180 = sub_1B6C7EB80();
        char v72 = v71;
        swift_release();
        uint64_t v73 = sub_1B68D0200((uint64_t)a1, a2);
        if (v4) {
          return swift_release_n();
        }
        uint64_t v75 = v73;
        if (v73)
        {
          if (v72) {
            unint64_t v76 = 0xFFFFFFFFLL;
          }
          else {
            unint64_t v76 = v180;
          }
          sub_1B6A0A4F8(v76, v70, v75, v74, *(uint64_t **)(v5 + 64), (unint64_t)&v325);
LABEL_126:
          sub_1B68D6214((uint64_t)&v325);
          sub_1B68D604C(&v325, &aBlock);
          nullsub_1(&aBlock);
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
LABEL_127:
        uint64_t v88 = 0xD000000000000033;
        uint64_t v89 = "Unable to extract script data from metal reflection";
        goto LABEL_128;
      }
    }
    else
    {
      if (v9 != _TtC3VFX18FullscreenQuadNode || !a1)
      {
        if (v9 != _TtC3VFX22RenderGraphTextureNode || !a1)
        {
          swift_retain();
          sub_1B6E328C8();
          uint64_t v101 = swift_bridgeObjectRelease();
          *(void *)&aBlocuint64_t k = 0xD00000000000001BLL;
          *((void *)&aBlock + 1) = 0x80000001B6F3BC10;
          ((void (*)(uint64_t))(*a1)[3].cache)(v101);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B68BD588((uint64_t)a1, 0, 1, 0xD00000000000001BLL, 0x80000001B6F3BC10);
          swift_bridgeObjectRelease();
          swift_willThrow();
          return swift_release();
        }
        swift_retain_n();
        swift_retain();
        uint64_t v90 = sub_1B6C7EB80();
        char v92 = v91;
        swift_release();
        if (v92) {
          unint64_t v93 = 0xFFFFFFFFLL;
        }
        else {
          unint64_t v93 = v90;
        }
        if (sub_1B631EA84(v93))
        {
          LOBYTE(v317) = 0;
          swift_retain();
          uint64_t v94 = sub_1B6C7EB80();
          char v96 = v95;
          swift_release();
          unint64_t v97 = (v96 & 1) != 0 ? 0xFFFFFFFFLL : v94;
          unint64_t v98 = (void *)sub_1B62EBE70(v97, &v317);
          if (v98)
          {
            if ((v317 & 1) == 0)
            {
              RGTextureDescriptorFromMTLTexture(v98, (uint64_t)&aBlock);
              __int16 v121 = aBlock;
              __int16 v122 = WORD1(aBlock);
              __int16 v123 = WORD2(aBlock);
              uint64_t v281 = aBlock;
              char v129 = BYTE8(aBlock);
              __int16 v131 = WORD3(aBlock);
              __int16 v282 = WORD4(aBlock);
              char v127 = BYTE10(aBlock);
              char v128 = BYTE9(aBlock);
              char v283 = BYTE10(aBlock);
              uint64_t v126 = v309;
              long long v284 = v309;
              unint64_t v178 = *((void *)&v310 + 1);
              unint64_t v183 = v310;
              unsigned long long v285 = v310;
              unint64_t v163 = *((void *)&v311 + 1);
              unint64_t v170 = v311;
              unsigned long long v286 = v311;
              uint64_t v158 = v312;
              uint64_t v287 = v312;
              char v152 = BYTE8(v312);
              int v288 = DWORD2(v312);
              char v146 = BYTE9(v312);
              char v140 = BYTE10(v312);
              char v135 = BYTE11(v312);
              if (*((void *)&v309 + 1) == 2)
              {
                uint64_t v125 = *(uint64_t **)(v5 + 64);
                uint64_t v124 = swift_allocObject();
                *(void *)(v124 + 16) = v5;
                *(void *)(v124 + 24) = a1;
                swift_retain();
                swift_retain();
                RGBuilder.createExternalTexture(name:desc:_:)((uint64_t)"TextureAsset", 12, 2, &v281, (uint64_t)sub_1B68D620C, v124, v125);
                swift_release();
                LOWORD(aBlock) = v121;
                WORD1(aBlock) = v122;
                WORD2(aBlock) = v123;
                WORD3(aBlock) = v131;
                BYTE8(aBlock) = v129;
                BYTE9(aBlock) = v128;
                BYTE10(aBlock) = v127;
                *(void *)&long long v309 = v126;
                *((void *)&v309 + 1) = 2;
                unsigned long long v310 = __PAIR128__(v178, v183);
                unsigned long long v311 = __PAIR128__(v163, v170);
                *(void *)&long long v312 = v158;
                BYTE8(v312) = v152;
                BYTE9(v312) = v146;
                BYTE10(v312) = v140;
                BYTE11(v312) = v135;
                RGTextureReferenceDescriptorCreate();
              }
              sub_1B68BD588((uint64_t)a1, 0, 1, 0xD000000000000019, 0x80000001B6F3BC50);
              swift_willThrow();
              swift_unknownObjectRelease();
              return swift_release_n();
            }
            swift_unknownObjectRelease();
          }
        }
        uint64_t v88 = 0xD000000000000013;
        uint64_t v89 = "Texture unavailable";
        goto LABEL_128;
      }
      uint64_t v80 = *(void *)(v5 + 48);
      swift_retain_n();
      if (sub_1B6C80FF0())
      {
        swift_retain();
        uint64_t v181 = sub_1B6C7EB80();
        char v82 = v81;
        swift_release();
        uint64_t v83 = sub_1B68D0200((uint64_t)a1, a2);
        if (v4) {
          return swift_release_n();
        }
        uint64_t v119 = v83;
        if (v83)
        {
          if (v82) {
            unint64_t v120 = 0xFFFFFFFFLL;
          }
          else {
            unint64_t v120 = v181;
          }
          sub_1B6A0AD4C(v120, v80, v119, v84, *(uint64_t **)(v5 + 64), (unint64_t)&v325);
          goto LABEL_126;
        }
        goto LABEL_127;
      }
    }
    uint64_t v88 = 0xD000000000000036;
    uint64_t v89 = "Script runtime data doesn't match authoring reflection";
LABEL_128:
    sub_1B68BD588((uint64_t)a1, 0, 1, v88, (unint64_t)(v89 - 32) | 0x8000000000000000);
    goto LABEL_59;
  }
  unint64_t v16 = a1[2];
  uint64_t v171 = (uint64_t)v16[3].isa;
  *(void *)&v307[0] = v16[2].info;
  swift_retain_n();
  swift_retain_n();
  a2((uint64_t *)&aBlock, v307);
  swift_release();
  sub_1B68D5DA8((uint64_t)&aBlock + 8, (uint64_t)&v317, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
  sub_1B68D5DA8((uint64_t)&v317, (uint64_t)&v325, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
  if (sub_1B68D6038((uint64_t)&v325) == 1
    || (sub_1B68D604C(&v325, v307), int v17 = sub_1B68D6084((uint64_t)v307), nullsub_1(v307), v17 == 1))
  {
    uint64_t v172 = 0;
    goto LABEL_27;
  }
  uint64_t v51 = v18;
  if (sub_1B68BD13C(v171))
  {
    sub_1B6E328C8();
    uint64_t v52 = swift_bridgeObjectRelease();
    *(void *)&long long v298 = 0x207475706E49;
    *((void *)&v298 + 1) = 0xE600000000000000;
    ((void (*)(void *__return_ptr, uint64_t))(*a1)[3].info)(v193, v52);
    uint64_t v250 = v194;
    sub_1B682BB90(5, v194);
    uint64_t v249 = v193[0];
    sub_1B62D8C3C((uint64_t)&v249);
    uint64_t v248 = v193[1];
    sub_1B62D8C3C((uint64_t)&v248);
    uint64_t v247 = v193[2];
    sub_1B62D8C3C((uint64_t)&v247);
    sub_1B62D8C3C((uint64_t)&v250);
    uint64_t v246 = v195;
    sub_1B62D8C3C((uint64_t)&v246);
    uint64_t v245 = v196;
    sub_1B62D8C3C((uint64_t)&v245);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B68BD588((uint64_t)a1, 5, 0, v298, *((uint64_t *)&v298 + 1));
    swift_bridgeObjectRelease();
    swift_willThrow();
LABEL_69:
    swift_release_n();
    return swift_release_n();
  }
  long long v302 = *(_OWORD *)(v51 + 72);
  long long v303 = *(_OWORD *)(v51 + 88);
  long long v304 = *(_OWORD *)(v51 + 104);
  long long v305 = *(_OWORD *)(v51 + 120);
  long long v298 = *(_OWORD *)(v51 + 8);
  long long v299 = *(_OWORD *)(v51 + 24);
  long long v300 = *(_OWORD *)(v51 + 40);
  long long v301 = *(_OWORD *)(v51 + 56);
  uint64_t v69 = *((void *)&v298 + v171);
  if (!RGResourceIsNull(v69))
  {
    uint64_t v172 = v69;
LABEL_27:
    uint64_t v19 = a1[2];
    uint64_t v164 = (uint64_t)v19[3].cache;
    *(void *)&long long v289 = v19[3].superclass;
    swift_retain_n();
    a2((uint64_t *)&aBlock, &v289);
    swift_release();
    sub_1B68D5DA8((uint64_t)&aBlock + 8, (uint64_t)&v298, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
    sub_1B68D5DA8((uint64_t)&v298, (uint64_t)v307, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult);
    if (sub_1B68D6038((uint64_t)v307) == 1
      || (sub_1B68D604C(v307, &v289), int v20 = sub_1B68D6084((uint64_t)&v289), nullsub_1(&v289), v20 == 1))
    {
      uint64_t v22 = 0;
LABEL_30:
      unint64_t v23 = (_OWORD *)sub_1B6C7EE78();
      if (!v23) {
        unint64_t v23 = (_OWORD *)static RGTextureReferenceDescriptor.null.getter();
      }
      sub_1B68BBF54(*(uint64_t **)(v5 + 56), *(uint64_t **)(v5 + 32), v172, v22, v23, *(uint64_t **)(v5 + 64), (uint64_t)&v184);
      swift_release_n();
      swift_release_n();
      swift_release_n();
      long long v295 = v190;
      long long v296 = v191;
      uint64_t v297 = v192;
      long long v291 = v186;
      long long v292 = v187;
      long long v294 = v189;
      long long v293 = v188;
      long long v290 = v185;
      long long v289 = v184;
      sub_1B68D6214((uint64_t)&v289);
      uint64_t v24 = &v289;
      goto LABEL_63;
    }
    uint64_t v53 = v21;
    if (sub_1B68BD13C(v164) == 1)
    {
      long long v54 = *(_OWORD *)(v53 + 88);
      long long v188 = *(_OWORD *)(v53 + 72);
      long long v189 = v54;
      long long v55 = *(_OWORD *)(v53 + 120);
      long long v190 = *(_OWORD *)(v53 + 104);
      long long v191 = v55;
      long long v56 = *(_OWORD *)(v53 + 24);
      long long v184 = *(_OWORD *)(v53 + 8);
      long long v185 = v56;
      long long v57 = *(_OWORD *)(v53 + 56);
      long long v186 = *(_OWORD *)(v53 + 40);
      long long v187 = v57;
      uint64_t v22 = *((void *)&v184 + v164);
      if (!RGResourceIsNull(v22)) {
        goto LABEL_30;
      }
      goto LABEL_132;
    }
    sub_1B6E328C8();
    uint64_t v68 = swift_bridgeObjectRelease();
    *(void *)&long long v184 = 0x207475706E49;
    *((void *)&v184 + 1) = 0xE600000000000000;
    ((void (*)(void *__return_ptr, uint64_t))(*a1)[3].info)(v197, v68);
    uint64_t v244 = v198;
    sub_1B682BB90(6, v198);
    uint64_t v243 = v197[0];
    sub_1B62D8C3C((uint64_t)&v243);
    uint64_t v242 = v197[1];
    sub_1B62D8C3C((uint64_t)&v242);
    uint64_t v241 = v197[2];
    sub_1B62D8C3C((uint64_t)&v241);
    sub_1B62D8C3C((uint64_t)&v244);
    uint64_t v240 = v199;
    sub_1B62D8C3C((uint64_t)&v240);
    uint64_t v239 = v200;
    sub_1B62D8C3C((uint64_t)&v239);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B68BD588((uint64_t)a1, 6, 0, 0x207475706E49, 0xE600000000000000);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_release_n();
    goto LABEL_69;
  }
LABEL_132:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

id sub_1B68D4010(uint64_t a1, char a2)
{
  id v5 = MTLCreateSystemDefaultDevice();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  RGContext.tryResolve(resource:)(a1, *(void *)(v2 + 56), (uint64_t)v26);
  sub_1B634FE58((uint64_t)v26, (uint64_t)v27, (unint64_t *)&qword_1E9DD1FB0, (uint64_t (*)(uint64_t))type metadata accessor for TextureDescriptor);
  if ((unint64_t)v28 << 16 == 0x20000)
  {
    double v9 = 1.0;
    if (a2 == 1)
    {
LABEL_3:
      uint64_t v10 = 55;
      goto LABEL_6;
    }
  }
  else
  {
    LOWORD(v7) = v27[0];
    LOWORD(v8) = v27[1];
    double v9 = (double)v7 / (double)v8;
    if (a2 == 1) {
      goto LABEL_3;
    }
  }
  uint64_t v10 = 115;
LABEL_6:
  objc_msgSend(v6, sel_setPixelFormat_, v10);
  objc_msgSend(v6, sel_setWidth_, 256);
  uint64_t v11 = (uint64_t)(256.0 / v9);
  if (v11 >= 256) {
    uint64_t v11 = 256;
  }
  if (v11 <= 1) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = v11;
  }
  objc_msgSend(v6, sel_setHeight_, v12);
  objc_msgSend(v6, sel_setStorageMode_, 2);
  objc_msgSend(v6, sel_setUsage_, 5);
  if (a2 == 1)
  {
    objc_msgSend(v6, sel_setStorageMode_, 0);
    objc_msgSend(v6, sel_setUsage_, (unint64_t)objc_msgSend(v6, sel_usage) | 2);
  }
  id v13 = objc_msgSend(v5, sel_newTextureWithDescriptor_, v6);
  id v14 = objc_msgSend(*(id *)(v2 + 40), sel_commandBuffer);
  char v15 = (void *)sub_1B6E31768();
  objc_msgSend(v14, sel_setLabel_, v15);

  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F352E0]), sel_init);
  id v17 = objc_msgSend(v16, sel_colorAttachments);
  id v18 = objc_msgSend(v17, sel_objectAtIndexedSubscript_, 0);

  objc_msgSend(v18, sel_setTexture_, v13);
  id v19 = objc_msgSend(v16, sel_colorAttachments);
  id v20 = objc_msgSend(v19, sel_objectAtIndexedSubscript_, 0);

  objc_msgSend(v20, sel_setLoadAction_, 2);
  id v21 = objc_msgSend(v16, sel_colorAttachments);
  id v22 = objc_msgSend(v21, sel_objectAtIndexedSubscript_, 0);

  objc_msgSend(v22, sel_setClearColor_, 1.0, 1.0, 1.0, 1.0);
  id v23 = objc_msgSend(v16, sel_colorAttachments);
  id v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 0);

  objc_msgSend(v24, sel_setStoreAction_, 1);
  objc_msgSend(objc_msgSend(v14, sel_renderCommandEncoderWithDescriptor_, v16), sel_endEncoding);
  objc_msgSend(v14, sel_commit);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v13;
}

uint64_t sub_1B68D43EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v4) ? (v5 = a4 + 32 + 32 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68D44D4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((id v6 = (char *)(a4 + 32 + 12 * a1), v7 = &__dst[12 * v4], v8 = a4 + 32 + 12 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 12 * v4);
    return v7;
  }
  return result;
}

uint64_t sub_1B68D45C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 56 * (a2 - a1), a4 + 32 + 56 * a1 < v4) ? (v5 = a4 + 32 + 56 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

unint64_t sub_1B68D46AC(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1B62C6A70(result);
  }
  return result;
}

uint64_t sub_1B68D46C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B68D588C(0);
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

char *sub_1B68D47B8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((id v6 = (char *)(a4 + 32 + 48 * a1), v7 = &__dst[48 * v4], v8 = a4 + 32 + 48 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 48 * v4);
    return v7;
  }
  return result;
}

void sub_1B68D48A4()
{
  if (!qword_1E9DD1DF0)
  {
    sub_1B62E98B4(255, (unint64_t *)&unk_1E9DCFD40);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1DF0);
    }
  }
}

void sub_1B68D491C()
{
  if (!qword_1E9DD1E00)
  {
    sub_1B62E98B4(255, &qword_1E9DCFD50);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1E00);
    }
  }
}

void sub_1B68D4994()
{
  if (!qword_1E9DD1E10)
  {
    sub_1B67FB8C0(255, &qword_1E9DD1E18);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1E10);
    }
  }
}

char *sub_1B68D4A04(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((id v6 = (char *)(a4 + 32 + 160 * a1), v7 = &__dst[160 * v4], v8 = a4 + 32 + 160 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 160 * v4);
    return v7;
  }
  return result;
}

void sub_1B68D4AF0()
{
  if (!qword_1E9DD1E40)
  {
    sub_1B68D4B58();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1E40);
    }
  }
}

unint64_t sub_1B68D4B58()
{
  unint64_t result = qword_1E9DD1E48;
  if (!qword_1E9DD1E48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD1E48);
  }
  return result;
}

void sub_1B68D4B98()
{
  if (!qword_1E9DD1E50)
  {
    sub_1B62E98B4(255, &qword_1E9DD1E58);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1E50);
    }
  }
}

uint64_t sub_1B68D4C10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  if (a2 - a1 < 0
    || ((unint64_t v5 = a3 + 32 * (a2 - a1), a4 + 32 + 32 * a1 < v5) ? (v6 = a4 + 32 + 32 * a2 > a3) : (v6 = 0), v6))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62E98B4(0, a5);
    swift_arrayInitWithCopy();
    return v5;
  }
  return result;
}

uint64_t sub_1B68D4D1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0 || ((unint64_t v5 = a4 + 48 * a1 + 32, v6 = a3 + 48 * v4, v5 < v6) ? (v7 = v5 + 48 * v4 > a3) : (v7 = 0), v7))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    sub_1B62E98B4(0, &qword_1E9DD1E58);
    swift_arrayInitWithCopy();
    return v6;
  }
  return result;
}

uint64_t sub_1B68D4E40(_OWORD *a1)
{
  return sub_1B68D69C4(a1);
}

uint64_t sub_1B68D4E58()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B68D4E90()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D4EA0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B68D4F20(unint64_t result, uint64_t (*a2)(unint64_t))
{
  int v2 = (result >> 59) & 2 | (result >> 2) & 1;
  if (v2)
  {
    if (v2 != 1) {
      return result;
    }
    result &= 0xEFFFFFFFFFFFFFFBLL;
  }
  return a2(result);
}

uint64_t sub_1B68D4F54@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68D55E4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))sub_1B68B0CA4, a2);
}

uint64_t sub_1B68D4F70()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D4F80(_OWORD *a1)
{
  return sub_1B68D56C0(a1);
}

uint64_t sub_1B68D4F98(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B68D501C()
{
  sub_1B68D4F20(*(void *)(v0 + 24), (uint64_t (*)(unint64_t))sub_1B6645740);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1B68D5070(uint64_t *a1)
{
  return sub_1B68D5720(a1, (void (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B68AE06C);
}

uint64_t sub_1B68D508C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

void sub_1B68D5174()
{
  if (!qword_1E9DD1E78)
  {
    sub_1B67FB8C0(255, &qword_1E9DD1E80);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1E78);
    }
  }
}

void sub_1B68D51E4(uint64_t a1, uint64_t a2)
{
  if (!qword_1E9DD1E90)
  {
    MEMORY[0x1F4188790](0, a2);
    sub_1B68D52D4();
    sub_1B68D5350();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v3) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1E9DD1E90);
    }
  }
}

void sub_1B68D52D4()
{
  if (!qword_1E9DD1E98)
  {
    sub_1B62CB1E8(255, &qword_1E9DD1EA0, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB730]);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1E98);
    }
  }
}

void sub_1B68D5350()
{
  if (!qword_1E9DD1EA8)
  {
    sub_1B62CB1E8(255, &qword_1E9DD1EB0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBB730]);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1EA8);
    }
  }
}

void sub_1B68D53CC()
{
  if (!qword_1E9DD1EB8)
  {
    sub_1B62E98B4(255, (unint64_t *)&qword_1E9DD1EC0);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1EB8);
    }
  }
}

void sub_1B68D5444()
{
  if (!qword_1E9DD1EC8)
  {
    sub_1B68D54B4(255, &qword_1E9DD1ED0);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1EC8);
    }
  }
}

void sub_1B68D54B4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v4) {
      atomic_store(TupleTypeMetadata3, a2);
    }
  }
}

void sub_1B68D550C()
{
  if (!qword_1E9DD1ED8)
  {
    sub_1B6395A28(255, &qword_1EB980F00, (uint64_t (*)(void))sub_1B6645884, MEMORY[0x1E4FBC0F8], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1ED8);
    }
  }
}

uint64_t sub_1B68D559C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1B68D55AC@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1B68C917C(a1, *(void *(**)(uint64_t *__return_ptr, _OWORD *))(v2 + 16), a2);
}

uint64_t sub_1B68D55CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68D55E4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))sub_1B68B1174, a2);
}

uint64_t sub_1B68D55E4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B68B9224(*a1, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(uint64_t **)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), a2);
  *a3 = result;
  return result;
}

void *sub_1B68D5640@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  void *(*v4)(uint64_t *__return_ptr, uint64_t *);
  void *result;
  uint64_t v6;
  uint64_t v7;

  uint64_t v4 = *(void *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16);
  unint64_t v6 = *a1;
  uint64_t result = v4(&v7, &v6);
  *a2 = v7;
  return result;
}

void sub_1B68D568C(uint64_t a1)
{
  sub_1B68CE840(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void **)(v1 + 16));
}

uint64_t sub_1B68D56B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D56C0(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return v2(v5);
}

uint64_t sub_1B68D5708(uint64_t *a1)
{
  return sub_1B68D5720(a1, (void (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B68AD6B0);
}

uint64_t sub_1B68D5720(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_1B68B8954(*a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), a2);
}

uint64_t sub_1B68D576C(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

void sub_1B68D57A8()
{
  if (!qword_1EB980BD8)
  {
    sub_1B62CB1E8(255, &qword_1EB97ED60, (uint64_t)&type metadata for ComponentProperty, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980BD8);
    }
  }
}

void sub_1B68D5824(uint64_t a1)
{
}

void sub_1B68D5858(uint64_t a1)
{
}

void sub_1B68D588C(uint64_t a1)
{
}

void sub_1B68D58C0()
{
  if (!qword_1E9DD1F48)
  {
    sub_1B6395A28(255, (unint64_t *)&unk_1E9DD1F50, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for _KeyBox);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1F48);
    }
  }
}

void sub_1B68D5960()
{
  if (!qword_1E9DD1F68)
  {
    sub_1B62E98B4(255, (unint64_t *)&unk_1E9DD1F70);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1F68);
    }
  }
}

void sub_1B68D59D4()
{
  if (!qword_1E9DD1F88)
  {
    sub_1B62E98B4(255, &qword_1E9DD1F90);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1F88);
    }
  }
}

void sub_1B68D5A48()
{
  if (!qword_1EB980C58)
  {
    sub_1B67FB8C0(255, &qword_1EB97FDD0);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980C58);
    }
  }
}

void sub_1B68D5AB8()
{
  if (!qword_1E9DD1F98)
  {
    sub_1B68D5B3C(255, &qword_1E9DD1FA0, (void (*)(uint64_t))_s17CodeSourceSnippetCMa);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1F98);
    }
  }
}

void sub_1B68D5B3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1B68D5BAC()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B68D5BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B68D5C4C()
{
  if (!qword_1E9DD1FC0)
  {
    sub_1B62CB1E8(255, (unint64_t *)&qword_1E9DCDA48, (uint64_t)&type metadata for AuthoringNode.Port, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1FC0);
    }
  }
}

void sub_1B68D5CC8(uint64_t a1)
{
}

uint64_t sub_1B68D5CFC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D5D10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68D5EA0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))sub_1B68AF0EC, a2);
}

void sub_1B68D5D28()
{
  if (!qword_1E9DD1FF0)
  {
    sub_1B67FB8C0(255, (unint64_t *)&qword_1E9DD1288);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1FF0);
    }
  }
}

uint64_t sub_1B68D5D98()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D5DA8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62CB1E8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B68D5E2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68B8AA4(*a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(uint64_t **)(v2 + 40), *(void *)(v2 + 56), *(void *)(v2 + 64), a2, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_1B68D5E74()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D5E88@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68D5EA0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))sub_1B68AE548, a2);
}

uint64_t sub_1B68D5EA0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B68B90C4(*a1, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(uint64_t **)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B68D5EFC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B68D5F10()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

double sub_1B68D5F20@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B68C926C(a1, *(void (**)(long long *__return_ptr, _OWORD *))(v2 + 16), a2);
}

uint64_t sub_1B68D5F40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B68B8F68(*a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(uint64_t **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B68D5F98()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

double sub_1B68D5FD0@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  void (*v4)(long long *__return_ptr, uint64_t *);
  double result;
  uint64_t v6;
  long long v7;

  uint64_t v4 = *(void (**)(long long *__return_ptr, uint64_t *))(v2 + 16);
  uint64_t v6 = *a1;
  v4(&v7, &v6);
  uint64_t result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1B68D601C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B68BE71C(a1, a2);
}

uint64_t sub_1B68D6038(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 136);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

_OWORD *sub_1B68D604C(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  long long v5 = a1[5];
  long long v6 = a1[6];
  long long v7 = a1[7];
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)a1 + 121);
  a2[6] = v6;
  a2[7] = v7;
  a2[5] = v5;
  return a2;
}

uint64_t sub_1B68D6084(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 136);
}

double sub_1B68D608C(uint64_t a1)
{
  *(unsigned char *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

void sub_1B68D60AC()
{
  if (!qword_1E9DD52F0)
  {
    type metadata accessor for Node();
    sub_1B62CB1E8(255, &qword_1E9DD67D0, (uint64_t)&type metadata for GraphTranslateResult, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD52F0);
    }
  }
}

uint64_t sub_1B68D6140(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B68D616C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D6180@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B68B8DAC(*a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(uint64_t **)(v2 + 40), *(void *)(v2 + 56), *(void *)(v2 + 64), a2, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_1B68D61C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B68D61F4()
{
  return sub_1B68D6340(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1B68D620C()
{
  return sub_1B68BDED4(*(void *)(v0 + 16));
}

uint64_t sub_1B68D6214(uint64_t result)
{
  *(unsigned char *)(result + 136) = 0;
  return result;
}

uint64_t sub_1B68D621C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B68D6254()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D628C(uint64_t a1, uint64_t a2)
{
  return sub_1B68BDDD4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

double sub_1B68D6294(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 136) = -1;
  return result;
}

uint64_t sub_1B68D62B8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B68D6318()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1B68D6328()
{
  return sub_1B68D6340(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B68D6340(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  a1(*(void *)(v1 + 24));

  return MEMORY[0x1F4186498](v1, 32, 7);
}

void sub_1B68D6394(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1B68BDBA8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1B68D639C()
{
  if (!qword_1E9DD20A0)
  {
    sub_1B62E98B4(255, (unint64_t *)&unk_1E9DD20A8);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD20A0);
    }
  }
}

uint64_t sub_1B68D6414(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B68D6440()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D6478()
{
  return MEMORY[0x1F4186498](v0, 96, 15);
}

__n128 sub_1B68D6488(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  long long v10 = *(_OWORD *)(v3 + 32);
  long long v8 = *(_OWORD *)(v3 + 64);
  long long v9 = *(_OWORD *)(v3 + 48);
  __n128 v7 = *(__n128 *)(v3 + 80);
  long long v5 = (_OWORD *)(RGBufferSlice.data.getter(a1, a2, a3) + v4);
  *long long v5 = v10;
  v5[1] = v9;
  __n128 result = v7;
  v5[2] = v8;
  _OWORD v5[3] = v7;
  return result;
}

uint64_t sub_1B68D64F0()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

__n128 sub_1B68D6500(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  long long v8 = *(_OWORD *)(v3 + 48);
  long long v9 = *(_OWORD *)(v3 + 32);
  __n128 v7 = *(__n128 *)(v3 + 64);
  long long v5 = (_OWORD *)(RGBufferSlice.data.getter(a1, a2, a3) + v4);
  *long long v5 = v9;
  v5[1] = v8;
  __n128 result = v7;
  v5[2] = v7;
  return result;
}

uint64_t sub_1B68D6558()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B68D6568(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[4];
  uint64_t v6 = v3[5];
  uint64_t result = RGBufferSlice.data.getter(a1, a2, a3);
  long long v8 = (void *)(result + v4);
  *long long v8 = v5;
  v8[1] = v6;
  return result;
}

uint64_t sub_1B68D65A0()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B68D65B4()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

__n128 sub_1B68D65C4(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3[1].n128_u64[0];
  __n128 v7 = v3[2];
  uint64_t v5 = RGBufferSlice.data.getter(a1, a2, a3);
  __n128 result = v7;
  *(__n128 *)(v5 + v4) = v7;
  return result;
}

uint64_t sub_1B68D6600()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B68D6610(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t result = RGBufferSlice.data.getter(a1, a2, a3);
  *(void *)(result + v4) = v5;
  return result;
}

uint64_t sub_1B68D6644()
{
  return MEMORY[0x1F4186498](v0, 36, 7);
}

uint64_t sub_1B68D6654(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 32);
  uint64_t result = RGBufferSlice.data.getter(a1, a2, a3);
  *(_DWORD *)(result + v4) = v5;
  return result;
}

uint64_t sub_1B68D6688()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B68D6698(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t result = RGBufferSlice.data.getter(a1, a2, a3);
  *(void *)(result + v4) = v5;
  return result;
}

uint64_t sub_1B68D66C4()
{
  return MEMORY[0x1F4186498](v0, 36, 7);
}

uint64_t sub_1B68D66D8()
{
  return MEMORY[0x1F4186498](v0, 36, 7);
}

uint64_t sub_1B68D66E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 32);
  uint64_t result = RGBufferSlice.data.getter(a1, a2, a3);
  *(_DWORD *)(result + v4) = v5;
  return result;
}

uint64_t sub_1B68D6714()
{
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_1B68D6724(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  char v5 = *(unsigned char *)(v3 + 32);
  uint64_t result = RGBufferSlice.data.getter(a1, a2, a3);
  *(unsigned char *)(result + v4) = v5;
  return result;
}

unint64_t sub_1B68D6750()
{
  unint64_t result = qword_1E9DD20C0;
  if (!qword_1E9DD20C0)
  {
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1E9DD20C0);
  }
  return result;
}

uint64_t sub_1B68D67A0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 68, 7);
}

void sub_1B68D67E0()
{
  if (!qword_1E9DD20C8)
  {
    sub_1B62CB1E8(255, &qword_1EB97F650, (uint64_t)&type metadata for CachedLocationMapping, MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for RGGraphTranslator.Reference();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD20C8);
    }
  }
}

uint64_t sub_1B68D6868()
{
  swift_release();
  swift_release();
  sub_1B62C6A70(*(void *)(v0 + 32));

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1B68D68B0(void *a1, uint64_t a2, uint64_t a3)
{
  LOBYTE(v5) = *(unsigned char *)(v3 + 56);
  return sub_1B68BD7EC(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t **)(v3 + 24), *(void *)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(void *)(v3 + 48), v5, *(void *)(v3 + 64), *(void *)(v3 + 72));
}

uint64_t sub_1B68D68F0()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B68D6900(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, a1[1], a1[2]);
}

void sub_1B68D6934(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1B67FBAEC(255, a3, a4);
    unint64_t v5 = sub_1B6E330A8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B68D698C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B68BBAF4(a1, a2, *a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_1B68D6998()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D69AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68D6A40(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))sub_1B68ADB30, a2);
}

uint64_t sub_1B68D69C4(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return v2(v5);
}

uint64_t sub_1B68D6A08(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B68BBD30(a1, a2, *a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_1B68D6A14()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D6A28@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68D6A40(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))sub_1B68AF60C, a2);
}

uint64_t sub_1B68D6A40@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B68B8C4C(*a1, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(uint64_t **)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), a2);
  *a3 = result;
  return result;
}

void sub_1B68D6A9C()
{
  if (!qword_1E9DD2110)
  {
    sub_1B67FB8C0(255, (unint64_t *)&qword_1E9DD2118);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2110);
    }
  }
}

uint64_t getEnumTagSinglePayload for RGGraphTranslator.LoadResourceInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)(a1 + 8)) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for RGGraphTranslator.LoadResourceInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGGraphTranslator.LoadResourceInfo()
{
  return &type metadata for RGGraphTranslator.LoadResourceInfo;
}

__n128 initializeWithCopy for GraphTranslateResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GraphTranslateResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 137)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 136);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphTranslateResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 137) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 136) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B68D6C7C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 136) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GraphTranslateResult()
{
  return &type metadata for GraphTranslateResult;
}

void sub_1B68D6C98()
{
  if (!qword_1E9DD2128)
  {
    sub_1B62CB1E8(255, &qword_1E9DD2130, (uint64_t)&type metadata for AuthoringNodeCoder, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD2128);
    }
  }
}

uint64_t sub_1B68D6D14()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68D6D28@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68D5EA0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))sub_1B68B0770, a2);
}

uint64_t sub_1B68D6D44@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68BDDA4(a1, a2);
}

void sub_1B68D6D5C(uint64_t a1)
{
}

void *sub_1B68D6DB4@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1B68D55AC(a1, a2);
}

float32x2_t *sub_1B68D6DDC(void *a1, void *a2)
{
  *(_WORD *)(v2 + 16) = 265;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 49) = 0u;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 72) = -1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = 0;
  *(_WORD *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = 0;
  *(unsigned char *)(v2 + 128) = 0;
  id v5 = objc_msgSend(a1, sel_touchesForView_, a2);
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  if (v5)
  {
    long long v6 = v5;
    sub_1B68D79CC();
    sub_1B68D7A0C();
    uint64_t v7 = sub_1B6E31ED8();
  }
  else if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1B6E32C18())
  {
    uint64_t v7 = sub_1B6B12208(MEMORY[0x1E4FBC860]);
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC870];
  }
  char v35 = (float32x2_t *)v2;
  if ((v7 & 0xC000000000000001) != 0)
  {
    *(void *)(v2 + 136) = sub_1B6E32818();
    sub_1B6E32808();
    sub_1B68D79CC();
    sub_1B68D7A0C();
    sub_1B6E31F08();
    uint64_t v7 = v42;
    uint64_t v39 = v43;
    uint64_t v8 = v44;
    uint64_t v9 = v45;
    unint64_t v10 = v46;
  }
  else
  {
    uint64_t v9 = 0;
    *(void *)(v2 + 136) = *(void *)(v7 + 16);
    uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
    uint64_t v39 = v7 + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v10 = v13 & *(void *)(v7 + 56);
  }
  char v36 = 0;
  int64_t v14 = (unint64_t)(v8 + 64) >> 6;
  LOBYTE(v15) = 9;
  while (1)
  {
    uint64_t v16 = v9;
    if ((v7 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1B6E32828()) {
      goto LABEL_35;
    }
    sub_1B68D79CC();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v19 = v47;
    swift_unknownObjectRelease();
    if (!v47) {
      goto LABEL_35;
    }
LABEL_32:
    id v22 = objc_msgSend(v19, sel_phase);
    if ((unint64_t)v22 < 5)
    {
      unint64_t v15 = 0x202010100uLL >> (8 * v22);

      char v36 = v19;
    }
    else
    {

      LOBYTE(v15) = 9;
    }
  }
  if (v10)
  {
    unint64_t v17 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v18 = v17 | (v9 << 6);
    goto LABEL_31;
  }
  ++v9;
  if (v16 + 1 >= v14) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v39 + 8 * v9);
  if (v20) {
    goto LABEL_30;
  }
  uint64_t v9 = v16 + 2;
  if (v16 + 2 >= v14) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v39 + 8 * v9);
  if (v20) {
    goto LABEL_30;
  }
  uint64_t v9 = v16 + 3;
  if (v16 + 3 >= v14) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v39 + 8 * v9);
  if (v20) {
    goto LABEL_30;
  }
  uint64_t v9 = v16 + 4;
  if (v16 + 4 >= v14) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v39 + 8 * v9);
  if (v20)
  {
LABEL_30:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_31:
    id v19 = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    if (!v19) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
  uint64_t v21 = v16 + 5;
  while (v14 != v21)
  {
    unint64_t v20 = *(void *)(v39 + 8 * v21++);
    if (v20)
    {
      uint64_t v9 = v21 - 1;
      goto LABEL_30;
    }
  }
LABEL_35:
  sub_1B62BB588();
  *(unsigned char *)(v2 + 16) = v15;
  if (v36)
  {
    id v23 = v36;
    id v24 = objc_msgSend(v34, sel_window);
    objc_msgSend(v23, sel_locationInView_, v24);
    float64_t v37 = v26;
    float64_t v40 = v25;

    v27.f64[0] = v40;
    v27.f64[1] = v37;
    v35[6] = vcvt_f32_f64(v27);
    objc_msgSend(v23, sel_locationInView_, v34);
    CGFloat v38 = v29;
    CGFloat v41 = v28;
    objc_msgSend(v34, sel_bounds);
    v48.y = v38;
    v48.x = v41;
    v35[8].i8[0] = CGRectContainsPoint(v49, v48);

    v30.f64[0] = v41;
    v30.f64[1] = v38;
    v35[7] = vcvt_f32_f64(v30);
  }
  sub_1B6E33998();
  sub_1B6E33928();
  uint64_t v31 = sub_1B6E33978();

  _OWORD v35[5] = (float32x2_t)v31;
  return v35;
}

uint64_t sub_1B68D723C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InputEvent()
{
  return self;
}

uint64_t sub_1B68D7298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_retain();
  MEMORY[0x1BA9B3870](v4);
  if (*(void *)((*(void *)a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)a1 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  uint64_t result = sub_1B6E31C48();
  if (*(unsigned char *)(a2 + 16))
  {
    if (*(unsigned char *)(a2 + 16) != 2) {
      return result;
    }
    char v6 = 0;
  }
  else
  {
    char v6 = 1;
  }
  *(unsigned char *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_1B68D7334()
{
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for Modifiers()
{
  return &type metadata for Modifiers;
}

ValueMetadata *type metadata accessor for InputEvent.Phase()
{
  return &type metadata for InputEvent.Phase;
}

unsigned char *storeEnumTagSinglePayload for InputEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68D7430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputEvent.State()
{
  return &type metadata for InputEvent.State;
}

uint64_t getEnumTagSinglePayload for InputEvent.EventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InputEvent.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B68D75C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputEvent.EventType()
{
  return &type metadata for InputEvent.EventType;
}

unint64_t sub_1B68D7600()
{
  unint64_t result = qword_1E9DD2150;
  if (!qword_1E9DD2150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2150);
  }
  return result;
}

unint64_t sub_1B68D7658()
{
  unint64_t result = qword_1E9DD2158;
  if (!qword_1E9DD2158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2158);
  }
  return result;
}

unint64_t sub_1B68D76B0()
{
  unint64_t result = qword_1E9DD2160;
  if (!qword_1E9DD2160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2160);
  }
  return result;
}

unint64_t sub_1B68D7708()
{
  unint64_t result = qword_1E9DD2168;
  if (!qword_1E9DD2168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2168);
  }
  return result;
}

unint64_t sub_1B68D7760()
{
  unint64_t result = qword_1E9DD2170;
  if (!qword_1E9DD2170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2170);
  }
  return result;
}

unint64_t sub_1B68D77B8()
{
  unint64_t result = qword_1E9DD2178;
  if (!qword_1E9DD2178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2178);
  }
  return result;
}

unint64_t sub_1B68D7810()
{
  unint64_t result = qword_1E9DD2180;
  if (!qword_1E9DD2180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2180);
  }
  return result;
}

unint64_t sub_1B68D7868()
{
  unint64_t result = qword_1E9DD2188;
  if (!qword_1E9DD2188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2188);
  }
  return result;
}

unint64_t sub_1B68D78C0()
{
  unint64_t result = qword_1E9DD2190;
  if (!qword_1E9DD2190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2190);
  }
  return result;
}

unint64_t sub_1B68D7918()
{
  unint64_t result = qword_1E9DD2198;
  if (!qword_1E9DD2198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD2198);
  }
  return result;
}

void sub_1B68D796C()
{
  if (!qword_1E9DD21A0)
  {
    unint64_t v0 = sub_1B6E327F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD21A0);
    }
  }
}

unint64_t sub_1B68D79CC()
{
  unint64_t result = qword_1E9DD47E0;
  if (!qword_1E9DD47E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD47E0);
  }
  return result;
}

unint64_t sub_1B68D7A0C()
{
  unint64_t result = qword_1E9DD21A8;
  if (!qword_1E9DD21A8)
  {
    sub_1B68D79CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD21A8);
  }
  return result;
}

uint64_t assignWithCopy for InputStream(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 initializeWithTake for InputStream(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InputStream(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for InputStream(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputStream(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputStream()
{
  return &type metadata for InputStream;
}

uint64_t assignWithCopy for FunctionConstant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1B62D5A18(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1B62D66CC(v7, v8, v9);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  long long v10 = *(_OWORD *)(a2 + 48);
  long long v11 = *(_OWORD *)(a2 + 64);
  long long v12 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v12;
  *(_OWORD *)(a1 + 48) = v10;
  return a1;
}

__n128 initializeWithTake for FunctionConstant(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FunctionConstant(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1B62D66CC(v5, v6, v7);
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for FunctionConstant(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FunctionConstant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FunctionConstant()
{
  return &type metadata for FunctionConstant;
}

uint64_t sub_1B68D7DEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
  {
    if ((a3 & 1) == 0) {
      return a4 < a1;
    }
    return (a6 & 1u) < (a3 & 1u);
  }
  if ((a3 & 1) == 0) {
    return (a6 & 1u) < (a3 & 1u);
  }
  if (a4 == a1 && a5 == a2) {
    return 0;
  }
  char v7 = sub_1B6E334B8();
  uint64_t result = 0;
  if ((v7 & 1) == 0)
  {
    return sub_1B6E334B8();
  }
  return result;
}

BOOL sub_1B68D7EB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
  {
    if ((a3 & 1) == 0)
    {
      char v6 = a4 < a1;
      return (v6 & 1) == 0;
    }
LABEL_5:
    char v6 = (a6 & 1u) < (a3 & 1u);
    return (v6 & 1) == 0;
  }
  if ((a3 & 1) == 0) {
    goto LABEL_5;
  }
  if (a4 == a1 && a5 == a2)
  {
    char v6 = 0;
  }
  else
  {
    char v8 = sub_1B6E334B8();
    char v6 = 0;
    if ((v8 & 1) == 0) {
      char v6 = sub_1B6E334B8();
    }
  }
  return (v6 & 1) == 0;
}

BOOL sub_1B68D7F74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
  {
    if ((a6 & 1) == 0)
    {
      char v6 = a1 < a4;
      return (v6 & 1) == 0;
    }
LABEL_5:
    char v6 = (a3 & 1u) < (a6 & 1u);
    return (v6 & 1) == 0;
  }
  if ((a6 & 1) == 0) {
    goto LABEL_5;
  }
  if (a1 == a4 && a2 == a5)
  {
    char v6 = 0;
  }
  else
  {
    char v8 = sub_1B6E334B8();
    char v6 = 0;
    if ((v8 & 1) == 0) {
      char v6 = sub_1B6E334B8();
    }
  }
  return (v6 & 1) == 0;
}

uint64_t sub_1B68D8030(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (qword_1EB97D7A0 != -1) {
      swift_once();
    }
    int v4 = off_1EB97F978;
    if (!*((void *)off_1EB97F978 + 2)) {
      return 0;
    }
    unint64_t v5 = sub_1B62C1A30(a1);
    if ((v6 & 1) == 0) {
      return 0;
    }
    a1 = *(void *)(v4[7] + 16 * v5);
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B68D80D0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (qword_1EB97D7A0 != -1) {
      swift_once();
    }
    int v4 = off_1EB97F978;
    if (!*((void *)off_1EB97F978 + 2)) {
      return sub_1B6E33098();
    }
    unint64_t v5 = sub_1B62C1A30(a1);
    if ((v6 & 1) == 0) {
      return sub_1B6E33098();
    }
    a1 = *(void *)(v4[7] + 16 * v5);
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B68D8194()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B6E33918();
  sub_1B6E33928();
  if (v1 == 1) {
    sub_1B6E318B8();
  }
  else {
    sub_1B6E33928();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B68D821C()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_1B6E33928();
    return sub_1B6E318B8();
  }
  else
  {
    sub_1B6E33928();
    return sub_1B6E33928();
  }
}