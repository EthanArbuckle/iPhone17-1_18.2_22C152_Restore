uint64_t sub_22331A5F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_22331A644(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  v37[1] = *MEMORY[0x263EF8340];
  id v7 = a3;
  id v8 = a4;
  if (objc_opt_respondsToSelector())
  {
    v13 = objc_msgSend_dictionary(MEMORY[0x263EFF9A0], v9, v10, v11, v12);
    objc_msgSend_setObject_forKeyedSubscript_(v13, v14, (uint64_t)&unk_26D676CA0, @"FeatureCode", v15);
    v37[0] = v7;
    v18 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v16, (uint64_t)v37, 1, v17);
    objc_msgSend_setObject_forKeyedSubscript_(v13, v19, (uint64_t)v18, @"TaskName", v20);

    v25 = objc_msgSend_allObjects(v8, v21, v22, v23, v24);
    objc_msgSend_setObject_forKeyedSubscript_(v13, v26, (uint64_t)v25, @"InvolvedProcesses", v27);

    v32 = objc_msgSend_sharedScheduler(MEMORY[0x263F29900], v28, v29, v30, v31);
    uint64_t v35 = objc_msgSend_taskStartedWithParameters_error_(v32, v33, (uint64_t)v13, a5, v34);
  }
  else
  {
    uint64_t v35 = 0;
  }

  return v35;
}

uint64_t sub_22331A79C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  v38[1] = *MEMORY[0x263EF8340];
  id v7 = a3;
  id v8 = a4;
  if (objc_opt_respondsToSelector())
  {
    v13 = objc_msgSend_dictionary(MEMORY[0x263EFF9A0], v9, v10, v11, v12);
    objc_msgSend_setObject_forKeyedSubscript_(v13, v14, (uint64_t)&unk_26D676CA0, @"FeatureCode", v15);
    v38[0] = v7;
    v18 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v16, (uint64_t)v38, 1, v17);
    objc_msgSend_setObject_forKeyedSubscript_(v13, v19, (uint64_t)v18, @"TaskName", v20);

    v25 = objc_msgSend_allObjects(v8, v21, v22, v23, v24);
    objc_msgSend_setObject_forKeyedSubscript_(v13, v26, (uint64_t)v25, @"InvolvedProcesses", v27);

    v32 = objc_msgSend_sharedScheduler(MEMORY[0x263F29900], v28, v29, v30, v31);
    uint64_t v35 = objc_msgSend_taskStoppedWithParameters_error_(v32, v33, (uint64_t)v13, a5, v34);

    objc_msgSend_reportFeatureCheckpoint_forFeature_error_(MEMORY[0x263F298F0], v36, 30, 500, a5);
  }
  else
  {
    uint64_t v35 = 0;
  }

  return v35;
}

__n128 initializeWithTake for RecordZoneBatch.SaveMetadata(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LocalCounts(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocalCounts(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void type metadata accessor for RecordStoreType(uint64_t a1)
{
}

uint64_t sub_22331A98C()
{
  return sub_22332153C(&qword_26AD5F110, type metadata accessor for RecordStoreType);
}

uint64_t sub_22331A9D4()
{
  return 1;
}

uint64_t sub_22331A9DC()
{
  return sub_22342D060();
}

uint64_t sub_22331AA20()
{
  return sub_22342D040();
}

uint64_t sub_22331AA48()
{
  return sub_22342D060();
}

BOOL sub_22331AA98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_22331AAB0()
{
  return sub_22342D060();
}

uint64_t sub_22331AB00()
{
  return sub_22342D050();
}

uint64_t sub_22331AB38()
{
  return sub_22342D060();
}

unint64_t sub_22331AB84(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6461655274;
      break;
    case 2:
      unint64_t result = 0x726576696C654474;
      break;
    case 3:
      unint64_t result = 0x646579616C5074;
      break;
    case 4:
      unint64_t result = 0x7367616C66;
      break;
    case 5:
      unint64_t result = 0x65646F4365;
      break;
    case 6:
      unint64_t result = 0x7463656A627573;
      break;
    case 7:
      unint64_t result = 0x7265646E6573;
      break;
    case 8:
      unint64_t result = 0x6469754772;
      break;
    case 9:
      unint64_t result = 0x7453657269707865;
      break;
    case 10:
      unint64_t result = 1682531172;
      break;
    case 11:
      unint64_t result = 4475202;
      break;
    case 12:
      unint64_t result = 0x6174616470;
      break;
    case 13:
      unint64_t result = 1684632421;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0x444974616863;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_22331AD34(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6461655274;
      break;
    case 2:
      unint64_t result = 0x726576696C654474;
      break;
    case 3:
      unint64_t result = 0x646579616C5074;
      break;
    case 4:
      unint64_t result = 0x7367616C66;
      break;
    case 5:
      unint64_t result = 0x65646F4365;
      break;
    case 6:
      unint64_t result = 0x7463656A627573;
      break;
    case 7:
      unint64_t result = 0x7265646E6573;
      break;
    case 8:
      unint64_t result = 0x6469754772;
      break;
    case 9:
      unint64_t result = 0x7453657269707865;
      break;
    case 10:
      unint64_t result = 1682531172;
      break;
    case 11:
      unint64_t result = 4475202;
      break;
    case 12:
      unint64_t result = 0x6174616470;
      break;
    case 13:
      unint64_t result = 1684632421;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0x444974616863;
      break;
    default:
      return result;
  }
  return result;
}

unsigned __int8 *sub_22331AEE4@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  int v2 = *result;
  if (v2 == 2) {
    char v3 = 1;
  }
  else {
    char v3 = 2;
  }
  if (v2 == 1) {
    char v4 = 0;
  }
  else {
    char v4 = v3;
  }
  *a2 = v4;
  return result;
}

void sub_22331AF04(char *a1@<X8>)
{
  if (*v1) {
    char v2 = 2;
  }
  else {
    char v2 = 1;
  }
  *a1 = v2;
}

uint64_t sub_22331AF1C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_22331AB84(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_22331AB84(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_22342CF60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22331AFA8()
{
  char v1 = *v0;
  sub_22342D030();
  sub_22331AB84(v1);
  sub_22342C390();
  swift_bridgeObjectRelease();
  return sub_22342D060();
}

uint64_t sub_22331B00C()
{
  sub_22331AB84(*v0);
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22331B060()
{
  char v1 = *v0;
  sub_22342D030();
  sub_22331AB84(v1);
  sub_22342C390();
  swift_bridgeObjectRelease();
  return sub_22342D060();
}

uint64_t sub_22331B0C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2233229BC();
  *a1 = result;
  return result;
}

unint64_t sub_22331B0F0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_22331AB84(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_22331B11C()
{
  return sub_22331AD34(*v0);
}

uint64_t sub_22331B124@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2233229BC();
  *a1 = result;
  return result;
}

uint64_t sub_22331B14C()
{
  return 0;
}

void sub_22331B158(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_22331B164(uint64_t a1)
{
  unint64_t v2 = sub_2233220CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22331B1A0(uint64_t a1)
{
  unint64_t v2 = sub_2233220CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_22331B1DC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v150 = sub_22331E640(&qword_26AD604E8);
  uint64_t v148 = *(void *)(v150 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v149 = (char *)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_22342C130();
  uint64_t v154 = *(void *)(v158 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v146 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_22342BDA0();
  uint64_t v143 = *(void *)(v144 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v142 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_22331E640(&qword_26AD60500);
  uint64_t v155 = *(void *)(v156 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v157 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v7 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v145 = (uint64_t)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v151 = (char *)&v140 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v152 = (char *)&v140 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v153 = (uint64_t *)((char *)&v140 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v159 = (char *)&v140 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v19 = (char *)&v140 - v18;
  MEMORY[0x270FA5388](v17);
  v21 = (char *)&v140 - v20;
  uint64_t v22 = sub_22331E640(&qword_26AD60508);
  uint64_t v160 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for MessageRecord();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (uint64_t *)((char *)&v140 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = a1[3];
  v162 = a1;
  sub_223321F60(a1, v28);
  sub_223321FA4();
  uint64_t v29 = v161;
  sub_22342D080();
  if (v29)
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v162);
    return;
  }
  uint64_t v30 = (uint64_t)v21;
  uint64_t v31 = (uint64_t)v159;
  v161 = (int *)v25;
  v141 = v27;
  LOBYTE(v164[0]) = 0;
  uint64_t v32 = sub_22342CDC0();
  v33 = v141;
  uint64_t *v141 = v32;
  v33[1] = v34;
  LOBYTE(v164[0]) = 1;
  v33[2] = sub_22342CDC0();
  v33[3] = v36;
  LOBYTE(v164[0]) = 2;
  uint64_t v37 = sub_22342CDC0();
  v38 = v161;
  v33[4] = v37;
  v33[5] = v39;
  LOBYTE(v164[0]) = 3;
  v33[6] = sub_22342CDC0();
  v33[7] = v40;
  LOBYTE(v164[0]) = 4;
  v33[8] = sub_22342CDC0();
  v33[9] = v41;
  LOBYTE(v164[0]) = 5;
  v33[10] = sub_22342CDC0();
  v33[11] = v42;
  LOBYTE(v164[0]) = 6;
  sub_22332153C(&qword_26AD5F408, MEMORY[0x263F07490]);
  v140 = (char *)v30;
  sub_22342CDF0();
  sub_223322AB4((uint64_t)v140, (uint64_t)v33 + v38[10], (uint64_t *)&unk_26AD5ED20);
  LOBYTE(v164[0]) = 7;
  sub_22342CDF0();
  sub_223322AB4((uint64_t)v19, (uint64_t)v33 + v38[11], (uint64_t *)&unk_26AD5ED20);
  LOBYTE(v164[0]) = 8;
  uint64_t v43 = sub_22342CDC0();
  v140 = v24;
  v45 = (uint64_t *)((char *)v33 + v38[12]);
  uint64_t *v45 = v43;
  v45[1] = v46;
  v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v162[3];
  sub_223321F60(v162, (uint64_t)v47);
  sub_2233220CC();
  sub_22342D080();
  LOBYTE(v164[0]) = 0;
  uint64_t v48 = sub_22342CE00();
  if (v49)
  {
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
    v47(v31, 1, 1, v158);
  }
  else
  {
    id v51 = objc_msgSend(self, sel___im_dateWithNanosecondTimeIntervalSinceReferenceDate_, (double)v48);
    if (!v51)
    {
      __break(1u);
      goto LABEL_35;
    }
    v53 = v51;
    sub_22342C100();

    v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
    v47(v31, 0, 1, v158);
  }
  sub_223322AB4(v31, (uint64_t)v141 + v161[14], (uint64_t *)&unk_26AD5ED20);
  LOBYTE(v164[0]) = 1;
  uint64_t v54 = sub_22342CE00();
  if (v55)
  {
    uint64_t v58 = 1;
  }
  else
  {
    id v56 = objc_msgSend(self, sel___im_dateWithNanosecondTimeIntervalSinceReferenceDate_, (double)v54);
    if (!v56)
    {
      __break(1u);
      goto LABEL_43;
    }
    v57 = v56;
    sub_22342C100();

    uint64_t v58 = 0;
  }
  uint64_t v59 = (uint64_t)v153;
  v47((uint64_t)v153, v58, 1, v158);
  sub_223322AB4(v59, (uint64_t)v141 + v161[15], (uint64_t *)&unk_26AD5ED20);
  LOBYTE(v164[0]) = 2;
  uint64_t v60 = sub_22342CE00();
  if (v61)
  {
    uint64_t v65 = 1;
  }
  else
  {
    id v62 = objc_msgSend(self, sel___im_dateWithNanosecondTimeIntervalSinceReferenceDate_, (double)v60);
    if (!v62)
    {
      __break(1u);
LABEL_45:
      v127 = (uint64_t *)((char *)v141 + v161[32]);
      void *v127 = v62;
      v127[1] = v63;
      if (v63 && (v62 == (id)0x4D65707954627553 && v63 == 0xEA00000000006773 || (sub_22342CF60() & 1) != 0))
      {
        LOBYTE(v128) = 0;
        *((unsigned char *)v141 + v161[33]) = 0;
LABEL_50:
        v129 = v162;
        *((unsigned char *)v141 + v161[13]) = v128;
        sub_223322120((uint64_t)v129, (uint64_t)v164);
        id v130 = sub_2233C3508(v164);
        v131 = (uint64_t *)((char *)v141 + v161[34]);
        void *v131 = v130;
        v131[1] = v132;
        v131[2] = v133;
        v131[3] = v134;
        LOBYTE(v164[0]) = 15;
        uint64_t v135 = sub_22342CDC0();
        uint64_t v137 = v136;
        (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v150);
        (*(void (**)(char *, uint64_t))(v155 + 8))(v157, v156);
        (*(void (**)(char *, uint64_t))(v160 + 8))(v140, v22);
        uint64_t v138 = (uint64_t)v141;
        v139 = (uint64_t *)((char *)v141 + v161[35]);
        uint64_t *v139 = v135;
        v139[1] = v137;
        sub_2233230DC(v138, v147);
        _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v162);
        sub_223323140(v138);
        return;
      }
      char v163 = 1;
      sub_223322BC0();
      sub_22342CE30();
      goto LABEL_53;
    }
    v64 = v62;
    sub_22342C100();

    uint64_t v65 = 0;
  }
  uint64_t v66 = (uint64_t)v152;
  v47((uint64_t)v152, v65, 1, v158);
  sub_223322AB4(v66, (uint64_t)v141 + v161[16], (uint64_t *)&unk_26AD5ED20);
  LOBYTE(v164[0]) = 3;
  uint64_t v67 = sub_22342CE00();
  if (v68)
  {
    uint64_t v71 = 1;
LABEL_20:
    uint64_t v72 = (uint64_t)v151;
    v47((uint64_t)v151, v71, 1, v158);
    sub_223322AB4(v72, (uint64_t)v141 + v161[17], (uint64_t *)&unk_26AD5ED20);
    sub_223322120((uint64_t)v162, (uint64_t)v164);
    sub_2233AC9E8(v164, (uint64_t *)v165);
    uint64_t v73 = v166;
    v74 = (char *)v141 + v161[18];
    long long v75 = v165[1];
    *(_OWORD *)v74 = v165[0];
    *((_OWORD *)v74 + 1) = v75;
    *((void *)v74 + 4) = v73;
    LOBYTE(v164[0]) = 4;
    sub_223322A08(v165);
    uint64_t v76 = sub_22342CDE0();
    v77 = (char *)v141 + v161[19];
    *(void *)v77 = v76;
    v77[8] = v78 & 1;
    LOBYTE(v164[0]) = 5;
    uint64_t v79 = sub_22342CDE0();
    v80 = v161;
    v81 = v141;
    v82 = (char *)v141 + v161[20];
    *(void *)v82 = v79;
    v82[8] = v83 & 1;
    v84 = (char *)v81 + v80[21];
    *(void *)v84 = 0;
    v84[8] = 1;
    LOBYTE(v164[0]) = 6;
    v159 = (char *)sub_22342CDC0();
    uint64_t v86 = v85;
    v153 = &v166;
    if (v85)
    {
      *(void *)&v164[0] = v159;
      *((void *)&v164[0] + 1) = v85;
      v87 = v142;
      sub_22342BD90();
      sub_223323208();
      uint64_t v88 = sub_22342CA50();
      unint64_t v90 = v89;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v87, v144);
      swift_bridgeObjectRelease();
      uint64_t v91 = HIBYTE(v90) & 0xF;
      if ((v90 & 0x2000000000000000) == 0) {
        uint64_t v91 = v88 & 0xFFFFFFFFFFFFLL;
      }
      if (v91)
      {
        v92 = (uint64_t *)((char *)v141 + v161[22]);
        void *v92 = v159;
        v92[1] = v86;
LABEL_27:
        sub_223322AB4((uint64_t)v153, (uint64_t)&v167, &qword_26AD603B8);
        sub_223322AB4((uint64_t)&v167, (uint64_t)&v168, &qword_26AD603B8);
        v94 = v168;
        if (v168)
        {
          sub_223322A08(v165);
          sub_22332319C(&v167);
          id v95 = objc_msgSend(v94, sel_attributesAtIndex_effectiveRange_, 0, 0);
          type metadata accessor for Key(0);
          sub_22332153C((unint64_t *)&unk_267FA2580, type metadata accessor for Key);
          uint64_t v96 = sub_22342C270();

          uint64_t v97 = sub_223322F14(v96, 0xD00000000000001ALL, 0x8000000223436040);
          swift_bridgeObjectRelease();
          sub_2233231DC(&v167);
          sub_223322A68(v165);
          uint64_t v98 = *(void *)(v97 + 16);
          swift_release();
        }
        else
        {
          uint64_t v98 = 0;
        }
        sub_223322A68(v165);
        v99 = (char *)v141 + v161[23];
        *(void *)v99 = v98;
        v99[8] = v94 == 0;
        LOBYTE(v164[0]) = 7;
        uint64_t v100 = sub_22342CDC0();
        v101 = (uint64_t *)((char *)v141 + v161[24]);
        uint64_t *v101 = v100;
        v101[1] = v102;
        LOBYTE(v164[0]) = 8;
        uint64_t v103 = sub_22342CDC0();
        v104 = (uint64_t *)((char *)v141 + v161[25]);
        uint64_t *v104 = v103;
        v104[1] = v105;
        LOBYTE(v164[0]) = 9;
        uint64_t v106 = sub_22342CDE0();
        v107 = (char *)v141 + v161[26];
        if (v108) {
          uint64_t v109 = 0;
        }
        else {
          uint64_t v109 = v106;
        }
        *(void *)v107 = v109;
        v107[8] = 0;
        LOBYTE(v164[0]) = 10;
        uint64_t v110 = sub_22342CDC0();
        v111 = (uint64_t *)((char *)v141 + v161[27]);
        uint64_t *v111 = v110;
        v111[1] = v112;
        LOBYTE(v164[0]) = 11;
        uint64_t v113 = sub_22342CDC0();
        v114 = (uint64_t *)((char *)v141 + v161[28]);
        uint64_t *v114 = v113;
        v114[1] = v115;
        char v163 = 12;
        sub_223322B18();
        sub_22342CDF0();
        *(_OWORD *)((char *)v141 + v161[29]) = v164[0];
        LOBYTE(v164[0]) = 13;
        uint64_t v116 = sub_22342CDC0();
        v117 = (uint64_t *)((char *)v141 + v161[30]);
        uint64_t *v117 = v116;
        v117[1] = v118;
        LOBYTE(v164[0]) = 14;
        id v51 = (id)sub_22342CDE0();
LABEL_35:
        if (v52)
        {
          v47(v145, 1, 1, v158);
        }
        else
        {
          id v119 = objc_msgSend(self, sel___im_dateWithNanosecondTimeIntervalSinceReferenceDate_, (double)(uint64_t)v51);
          if (!v119)
          {
            __break(1u);
            return;
          }
          v120 = v119;
          uint64_t v121 = v145;
          sub_22342C100();

          uint64_t v122 = v158;
          v47(v121, 0, 1, v158);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v121, 1, v122) != 1)
          {
            v123 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 32);
            v124 = v146;
            uint64_t v125 = v158;
            v123(v146, v145, v158);
            v126 = (char *)v141 + v161[31];
            v123(v126, (uint64_t)v124, v125);
LABEL_41:
            v47((uint64_t)v126, 0, 1, v158);
            sub_223321F60(v162, v162[3]);
            sub_223322B6C();
            sub_22342D080();
LABEL_43:
            LOBYTE(v164[0]) = 0;
            id v62 = (id)sub_22342CDC0();
            goto LABEL_45;
          }
        }
        sub_2233232B8(v145, (uint64_t *)&unk_26AD5ED20);
        v126 = (char *)v141 + v161[31];
        sub_22342C110();
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
    }
    v93 = (uint64_t *)((char *)v141 + v161[22]);
    void *v93 = 0;
    v93[1] = 0;
    goto LABEL_27;
  }
  id v69 = objc_msgSend(self, sel___im_dateWithNanosecondTimeIntervalSinceReferenceDate_, (double)v67);
  if (v69)
  {
    v70 = v69;
    sub_22342C100();

    uint64_t v71 = 0;
    goto LABEL_20;
  }
  __break(1u);
LABEL_53:
  unsigned int v128 = LOBYTE(v164[0]);
  *((unsigned char *)v141 + v161[33]) = v164[0];
  if (v128 < 2) {
    goto LABEL_50;
  }
  sub_223322C14();
  swift_allocError();
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v150);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v157, v156);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v140, v22);
  v50 = v141;
  uint64_t v35 = v161;
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v162);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2233232B8((uint64_t)v50 + v35[10], (uint64_t *)&unk_26AD5ED20);
  sub_2233232B8((uint64_t)v50 + v35[11], (uint64_t *)&unk_26AD5ED20);
  swift_bridgeObjectRelease();
  sub_2233232B8((uint64_t)v50 + v35[14], (uint64_t *)&unk_26AD5ED20);
  sub_2233232B8((uint64_t)v50 + v35[15], (uint64_t *)&unk_26AD5ED20);
  sub_2233232B8((uint64_t)v50 + v35[16], (uint64_t *)&unk_26AD5ED20);
  sub_2233232B8((uint64_t)v50 + v35[17], (uint64_t *)&unk_26AD5ED20);
  v44 = (char *)v50 + v35[18];
  sub_223322068(*(void *)v44, *((void *)v44 + 1), *((void *)v44 + 2), *((void *)v44 + 3), *((void **)v44 + 4));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_223322054(*(uint64_t *)((char *)v50 + v35[29]), *(uint64_t *)((char *)v50 + v35[29] + 8));
  swift_bridgeObjectRelease();
  sub_2233232B8((uint64_t)v50 + v35[31], (uint64_t *)&unk_26AD5ED20);
  swift_bridgeObjectRelease();
}

void *sub_22331CCB8()
{
  uint64_t v1 = v0;
  unint64_t v2 = (int *)type metadata accessor for MessageRecord();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v54 - v7;
  if (*(unsigned char *)(v0 + *(int *)(v6 + 52))) {
    id v9 = sub_2233F8EAC(v0);
  }
  else {
    id v9 = sub_223371DB8(v0);
  }
  uint64_t v10 = v9;
  if (*(void *)(v0 + 24)) {
    uint64_t v11 = (void *)sub_22342C2D0();
  }
  else {
    uint64_t v11 = 0;
  }
  objc_msgSend(v10, sel_setService_, v11);

  uint64_t v12 = (void *)(v1 + v2[34]);
  uint64_t v13 = (void *)v12[3];
  if (*v12 != 1 && v13 != 0)
  {
    id v15 = v13;
    if (objc_msgSend(v15, sel_hasActualService))
    {
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_22342C200();
      sub_223323374(v16, (uint64_t)qword_26AD63108);
      sub_2233230DC(v1, (uint64_t)v8);
      id v17 = v15;
      uint64_t v18 = sub_22342C1E0();
      int v57 = sub_22342C720();
      if (os_log_type_enabled(v18, (os_log_type_t)v57))
      {
        uint64_t v59 = v5;
        uint64_t v19 = swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        uint64_t v61 = v56;
        *(_DWORD *)uint64_t v19 = 136315394;
        id v58 = v17;
        id v20 = objc_msgSend(v17, sel_actualService);
        if (v20)
        {
          v21 = v20;
          uint64_t v22 = sub_22342C300();
          unint64_t v24 = v23;
        }
        else
        {
          unint64_t v24 = 0xE300000000000000;
          uint64_t v22 = 7104878;
        }
        os_log_t v55 = v18;
        uint64_t v60 = sub_22339BC14(v22, v24, &v61);
        sub_22342CA10();
        id v25 = v58;

        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2080;
        if (*((void *)v8 + 3))
        {
          uint64_t v26 = *((void *)v8 + 2);
          unint64_t v27 = *((void *)v8 + 3);
          uint64_t v5 = v59;
        }
        else
        {
          unint64_t v27 = 0xE300000000000000;
          uint64_t v5 = v59;
          uint64_t v26 = 7104878;
        }
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_22339BC14(v26, v27, &v61);
        sub_22342CA10();
        swift_bridgeObjectRelease();
        sub_223323140((uint64_t)v8);
        os_log_t v28 = v55;
        _os_log_impl(&dword_223317000, v55, (os_log_type_t)v57, "using proto4 service %s over %s", (uint8_t *)v19, 0x16u);
        uint64_t v29 = v56;
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v29, -1, -1);
        MEMORY[0x223CB62D0](v19, -1, -1);

        id v17 = v58;
      }
      else
      {

        sub_223323140((uint64_t)v8);
      }
      id v15 = objc_msgSend(v17, sel_actualService);
      objc_msgSend(v10, sel_setService_, v15);
    }
  }
  if (*(void *)(v1 + v2[27] + 8)) {
    uint64_t v30 = (void *)sub_22342C2D0();
  }
  else {
    uint64_t v30 = 0;
  }
  objc_msgSend(v10, sel_setDestinationCallerID_, v30);

  if (*(void *)(v1 + v2[25] + 8)) {
    uint64_t v31 = (void *)sub_22342C2D0();
  }
  else {
    uint64_t v31 = 0;
  }
  objc_msgSend(v10, sel_setReplyToGUID_, v31);

  if (*(void *)(v1 + v2[35] + 8)) {
    uint64_t v32 = (void *)sub_22342C2D0();
  }
  else {
    uint64_t v32 = 0;
  }
  v33 = &off_2646A9000;
  objc_msgSend(v10, sel_setParentChatID_, v32);

  if (*v12 != 1)
  {
    uint64_t v34 = (void *)v12[3];
    if (v34)
    {
      id v35 = v34;
      if (objc_msgSend(v35, sel_hasActualParentChatId))
      {
        if (qword_26AD5F0D8 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_22342C200();
        sub_223323374(v36, (uint64_t)qword_26AD63108);
        sub_2233230DC(v1, (uint64_t)v5);
        id v37 = v35;
        v38 = sub_22342C1E0();
        int v39 = sub_22342C720();
        if (os_log_type_enabled(v38, (os_log_type_t)v39))
        {
          int v57 = v39;
          uint64_t v59 = v5;
          uint64_t v40 = swift_slowAlloc();
          id v58 = (id)swift_slowAlloc();
          uint64_t v61 = (uint64_t)v58;
          *(_DWORD *)uint64_t v40 = 136315394;
          id v41 = objc_msgSend(v37, sel_actualParentChatId);
          if (v41)
          {
            uint64_t v42 = v41;
            uint64_t v43 = sub_22342C300();
            unint64_t v45 = v44;
          }
          else
          {
            unint64_t v45 = 0xE300000000000000;
            uint64_t v43 = 7104878;
          }
          uint64_t v60 = sub_22339BC14(v43, v45, &v61);
          sub_22342CA10();

          swift_bridgeObjectRelease();
          *(_WORD *)(v40 + 12) = 2080;
          uint64_t v46 = (uint64_t)v59;
          v47 = (uint64_t *)&v59[v2[35]];
          if (v47[1])
          {
            uint64_t v48 = *v47;
            unint64_t v49 = v47[1];
            v33 = &off_2646A9000;
          }
          else
          {
            unint64_t v49 = 0xE300000000000000;
            v33 = &off_2646A9000;
            uint64_t v48 = 7104878;
          }
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_22339BC14(v48, v49, &v61);
          sub_22342CA10();
          swift_bridgeObjectRelease();
          sub_223323140(v46);
          _os_log_impl(&dword_223317000, v38, (os_log_type_t)v57, "using proto4 parentChatID %s over %s", (uint8_t *)v40, 0x16u);
          id v50 = v58;
          swift_arrayDestroy();
          MEMORY[0x223CB62D0](v50, -1, -1);
          MEMORY[0x223CB62D0](v40, -1, -1);
        }
        else
        {

          sub_223323140((uint64_t)v5);
        }
        id v35 = objc_msgSend(v37, sel_actualParentChatId);
        objc_msgSend(v10, (SEL)v33[337], v35);
      }
    }
  }
  if (*(void *)(v1 + 56)) {
    id v51 = (void *)sub_22342C2D0();
  }
  else {
    id v51 = 0;
  }
  objc_msgSend(v10, sel_setCloudKitRecordID_, v51);

  if (*(void *)(v1 + 40)) {
    char v52 = (void *)sub_22342C2D0();
  }
  else {
    char v52 = 0;
  }
  objc_msgSend(v10, sel_setCloudKitRecordChangeTag_, v52);

  objc_msgSend(v10, sel_setCloudKitSyncState_, 1);
  objc_msgSend(v10, sel_setCloudKitServerChangeTokenBlob_, 0);
  return v10;
}

uint64_t sub_22331D454()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22331D484()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22331D4B4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_22331D4E4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_22331D4FC(void *a1)
{
  uint64_t v2 = sub_22331E640(&qword_267FA25A8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_2233220CC();
  sub_22342D090();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22331D60C(uint64_t a1, uint64_t a2)
{
  return sub_2233222B4(a1, a2, MEMORY[0x263F07B58]);
}

id sub_22331D638()
{
  return *v0;
}

uint64_t sub_22331D640@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_22331D648()
{
  return sub_22342D060();
}

uint64_t sub_22331D690()
{
  return sub_22342D040();
}

uint64_t sub_22331D6BC()
{
  return sub_22342D060();
}

uint64_t sub_22331D700(uint64_t a1, uint64_t a2)
{
  return sub_2233222B4(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_22331D718(uint64_t a1, id *a2)
{
  uint64_t result = sub_22342C2E0();
  *a2 = 0;
  return result;
}

uint64_t sub_22331D790(uint64_t a1, id *a2)
{
  char v3 = sub_22342C2F0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_22331D810@<X0>(uint64_t *a1@<X8>)
{
  sub_22342C300();
  uint64_t v2 = sub_22342C2D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_22331D854(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22331D86C()
{
  return sub_22342C300();
}

uint64_t sub_22331D87C(uint64_t a1)
{
  uint64_t v2 = sub_22332153C(&qword_26AD60230, type metadata accessor for CKError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_22331D8E8(uint64_t a1)
{
  uint64_t v2 = sub_22332153C(&qword_26AD60230, type metadata accessor for CKError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_22331D954(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_22332153C(&qword_26AD60230, type metadata accessor for CKError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_22331D9E4()
{
  id v1 = *v0;
  uint64_t v2 = sub_22342C9F0();

  return v2;
}

uint64_t sub_22331DA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22332153C(&qword_26AD60230, type metadata accessor for CKError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

void *sub_22331DA9C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_22331DAAC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_22331DAB8()
{
  return sub_22342C300();
}

uint64_t sub_22331DAC8(uint64_t a1)
{
  uint64_t v2 = sub_22332153C((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_22331DB34(uint64_t a1)
{
  uint64_t v2 = sub_22332153C((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_22331DBA0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_22332153C((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_22331DC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22332153C((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_22331DCAC()
{
  return sub_22342D060();
}

BOOL sub_22331DD0C(void *a1, void *a2)
{
  return *a1 == *a2;
}

unsigned __int8 *sub_22331DD20@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_22331DD30(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_22331DD40(uint64_t a1)
{
  uint64_t v2 = sub_22332153C(&qword_267FA2640, type metadata accessor for FileProtectionType);
  uint64_t v3 = sub_22332153C(&qword_267FA2648, type metadata accessor for FileProtectionType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

void type metadata accessor for CKUnderlyingError(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void *sub_22331DE24(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v6;
    uint64_t v7 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v7;
    uint64_t v8 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v8;
    uint64_t v9 = *((void *)a2 + 7);
    a1[6] = *((void *)a2 + 6);
    a1[7] = v9;
    uint64_t v10 = *((void *)a2 + 9);
    a1[8] = *((void *)a2 + 8);
    a1[9] = v10;
    uint64_t v11 = *((void *)a2 + 11);
    uint64_t v12 = a3[10];
    __dst = (char *)a1 + v12;
    unsigned int v128 = &a2[v12];
    a1[10] = *((void *)a2 + 10);
    a1[11] = v11;
    uint64_t v13 = sub_22342C130();
    uint64_t v129 = *(void *)(v13 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v128, 1, v13))
    {
      uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(__dst, v128, *(void *)(*(void *)(v15 - 8) + 64));
      uint64_t v16 = v129;
    }
    else
    {
      uint64_t v16 = v129;
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))(__dst, v128, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v18 = a3[11];
    uint64_t v19 = (char *)v4 + v18;
    id v20 = &a2[v18];
    if (v14(&a2[v18], 1, v13))
    {
      uint64_t v21 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v20, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v13);
    }
    uint64_t v22 = a3[12];
    uint64_t v23 = a3[13];
    unint64_t v24 = (void *)((char *)v4 + v22);
    id v25 = (uint64_t *)&a2[v22];
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    LOBYTE(v25) = a2[v23];
    *unint64_t v24 = v27;
    v24[1] = v26;
    *((unsigned char *)v4 + v23) = (_BYTE)v25;
    uint64_t v28 = a3[14];
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = &a2[v28];
    swift_bridgeObjectRetain();
    if (v14(v30, 1, v13))
    {
      uint64_t v31 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v13);
    }
    uint64_t v32 = a3[15];
    v33 = (char *)v4 + v32;
    uint64_t v34 = &a2[v32];
    if (v14(&a2[v32], 1, v13))
    {
      uint64_t v35 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v13);
    }
    uint64_t v36 = a3[16];
    id v37 = (char *)v4 + v36;
    v38 = &a2[v36];
    if (v14(&a2[v36], 1, v13))
    {
      uint64_t v39 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v13);
    }
    uint64_t v40 = a3[17];
    id v41 = (char *)v4 + v40;
    uint64_t v42 = &a2[v40];
    if (v14(&a2[v40], 1, v13))
    {
      uint64_t v43 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v41, 0, 1, v13);
    }
    uint64_t v44 = a3[18];
    unint64_t v45 = (char *)v4 + v44;
    uint64_t v46 = &a2[v44];
    uint64_t v47 = *(void *)&a2[v44 + 8];
    uint64_t v127 = v13;
    v126 = v14;
    if (v47 == 1)
    {
      long long v48 = *((_OWORD *)v46 + 1);
      *(_OWORD *)unint64_t v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v48;
      *((void *)v45 + 4) = *((void *)v46 + 4);
    }
    else
    {
      *(void *)unint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v47;
      unint64_t v49 = v46 + 16;
      unint64_t v50 = *((void *)v46 + 3);
      swift_bridgeObjectRetain();
      if (v50 >> 60 == 15)
      {
        *((_OWORD *)v45 + 1) = *v49;
      }
      else
      {
        uint64_t v51 = *(void *)v49;
        sub_22331E684(v51, v50);
        *((void *)v45 + 2) = v51;
        *((void *)v45 + 3) = v50;
      }
      char v52 = (void *)*((void *)v46 + 4);
      *((void *)v45 + 4) = v52;
      id v53 = v52;
    }
    uint64_t v54 = a3[19];
    uint64_t v55 = a3[20];
    uint64_t v56 = (char *)v4 + v54;
    int v57 = &a2[v54];
    *(void *)uint64_t v56 = *(void *)v57;
    v56[8] = v57[8];
    id v58 = (char *)v4 + v55;
    uint64_t v59 = &a2[v55];
    *(void *)id v58 = *(void *)v59;
    v58[8] = v59[8];
    uint64_t v60 = a3[21];
    uint64_t v61 = a3[22];
    id v62 = (char *)v4 + v60;
    uint64_t v63 = &a2[v60];
    *(void *)id v62 = *(void *)v63;
    v62[8] = v63[8];
    v64 = (void *)((char *)v4 + v61);
    uint64_t v65 = &a2[v61];
    uint64_t v66 = *((void *)v65 + 1);
    void *v64 = *(void *)v65;
    v64[1] = v66;
    uint64_t v67 = a3[23];
    uint64_t v68 = a3[24];
    id v69 = (char *)v4 + v67;
    v70 = &a2[v67];
    *(void *)id v69 = *(void *)v70;
    v69[8] = v70[8];
    uint64_t v71 = (void *)((char *)v4 + v68);
    uint64_t v72 = &a2[v68];
    uint64_t v73 = *((void *)v72 + 1);
    *uint64_t v71 = *(void *)v72;
    v71[1] = v73;
    uint64_t v74 = a3[25];
    uint64_t v75 = a3[26];
    uint64_t v76 = (void *)((char *)v4 + v74);
    v77 = &a2[v74];
    uint64_t v78 = *((void *)v77 + 1);
    *uint64_t v76 = *(void *)v77;
    v76[1] = v78;
    uint64_t v79 = (char *)v4 + v75;
    v80 = &a2[v75];
    *(void *)uint64_t v79 = *(void *)v80;
    v79[8] = v80[8];
    uint64_t v81 = a3[27];
    uint64_t v82 = a3[28];
    char v83 = (void *)((char *)v4 + v81);
    v84 = &a2[v81];
    uint64_t v85 = *((void *)v84 + 1);
    *char v83 = *(void *)v84;
    v83[1] = v85;
    uint64_t v86 = (void *)((char *)v4 + v82);
    v87 = &a2[v82];
    uint64_t v88 = *((void *)v87 + 1);
    *uint64_t v86 = *(void *)v87;
    v86[1] = v88;
    uint64_t v89 = a3[29];
    unint64_t v90 = (char *)v4 + v89;
    uint64_t v91 = (uint64_t *)&a2[v89];
    unint64_t v92 = *(void *)&a2[v89 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v92 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v90 = *(_OWORD *)v91;
    }
    else
    {
      uint64_t v93 = *v91;
      sub_22331E684(*v91, v92);
      *(void *)unint64_t v90 = v93;
      *((void *)v90 + 1) = v92;
    }
    uint64_t v94 = a3[30];
    uint64_t v95 = a3[31];
    uint64_t v96 = (void *)((char *)v4 + v94);
    uint64_t v97 = &a2[v94];
    uint64_t v98 = *((void *)v97 + 1);
    *uint64_t v96 = *(void *)v97;
    v96[1] = v98;
    v99 = (char *)v4 + v95;
    uint64_t v100 = &a2[v95];
    swift_bridgeObjectRetain();
    if (v126(v100, 1, v127))
    {
      uint64_t v101 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v99, v100, v127);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v99, 0, 1, v127);
    }
    uint64_t v102 = a3[32];
    uint64_t v103 = a3[33];
    v104 = (void *)((char *)v4 + v102);
    uint64_t v105 = &a2[v102];
    uint64_t v106 = *((void *)v105 + 1);
    void *v104 = *(void *)v105;
    v104[1] = v106;
    *((unsigned char *)v4 + v103) = a2[v103];
    uint64_t v107 = a3[34];
    char v108 = (char *)v4 + v107;
    uint64_t v109 = &a2[v107];
    uint64_t v110 = *(void **)&a2[v107];
    swift_bridgeObjectRetain();
    if (v110 == (void *)1)
    {
      long long v111 = *((_OWORD *)v109 + 1);
      *(_OWORD *)char v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v111;
    }
    else
    {
      uint64_t v112 = (void *)*((void *)v109 + 1);
      uint64_t v113 = (void *)*((void *)v109 + 2);
      *(void *)char v108 = v110;
      *((void *)v108 + 1) = v112;
      v114 = (void *)*((void *)v109 + 3);
      *((void *)v108 + 2) = v113;
      *((void *)v108 + 3) = v114;
      id v115 = v110;
      id v116 = v112;
      id v117 = v113;
      id v118 = v114;
    }
    uint64_t v119 = a3[35];
    v120 = (void *)((char *)v4 + v119);
    uint64_t v121 = &a2[v119];
    uint64_t v122 = *((void *)v121 + 1);
    void *v120 = *(void *)v121;
    v120[1] = v122;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22331E640(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_22331E684(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_22331E6DC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_22342C130();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[11];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[14];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = a1 + a2[15];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = a1 + a2[16];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = a1 + a2[17];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = a1 + a2[18];
  if (*(void *)(v13 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void *)(v13 + 24);
    if (v14 >> 60 != 15) {
      sub_22331EA68(*(void *)(v13 + 16), v14);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(a1 + a2[29]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_22331EA68(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + a2[31];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = (id *)(a1 + a2[34]);
  if (*v18 != (id)1)
  {
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22331EA68(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void *sub_22331EAC0(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v9 = *((void *)a2 + 9);
  a1[8] = *((void *)a2 + 8);
  a1[9] = v9;
  uint64_t v10 = *((void *)a2 + 11);
  uint64_t v11 = a3[10];
  __dst = (char *)a1 + v11;
  uint64_t v122 = &a2[v11];
  a1[10] = *((void *)a2 + 10);
  a1[11] = v10;
  uint64_t v12 = sub_22342C130();
  uint64_t v127 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v122, 1, v12))
  {
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(__dst, v122, *(void *)(*(void *)(v14 - 8) + 64));
    uint64_t v15 = v127;
  }
  else
  {
    uint64_t v15 = v127;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(__dst, v122, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  if (v13(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (uint64_t *)&a2[v20];
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  LOBYTE(v23) = a2[v21];
  *uint64_t v22 = v25;
  v22[1] = v24;
  *((unsigned char *)a1 + v21) = (_BYTE)v23;
  uint64_t v26 = a3[14];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = &a2[v26];
  swift_bridgeObjectRetain();
  if (v13(v28, 1, v12))
  {
    uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v27, v28, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v12);
  }
  uint64_t v30 = a3[15];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = &a2[v30];
  if (v13(&a2[v30], 1, v12))
  {
    uint64_t v33 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v31, v32, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v31, 0, 1, v12);
  }
  uint64_t v34 = a3[16];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = &a2[v34];
  if (v13(&a2[v34], 1, v12))
  {
    uint64_t v37 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v35, v36, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v35, 0, 1, v12);
  }
  uint64_t v38 = a3[17];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = &a2[v38];
  if (v13(&a2[v38], 1, v12))
  {
    uint64_t v41 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v39, v40, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v39, 0, 1, v12);
  }
  uint64_t v42 = a3[18];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = &a2[v42];
  uint64_t v45 = *(void *)&a2[v42 + 8];
  uint64_t v126 = v12;
  v124 = v13;
  if (v45 == 1)
  {
    long long v46 = *((_OWORD *)v44 + 1);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v46;
    *((void *)v43 + 4) = *((void *)v44 + 4);
  }
  else
  {
    *(void *)uint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = v45;
    uint64_t v47 = v44 + 16;
    unint64_t v48 = *((void *)v44 + 3);
    swift_bridgeObjectRetain();
    if (v48 >> 60 == 15)
    {
      *((_OWORD *)v43 + 1) = *v47;
    }
    else
    {
      uint64_t v49 = *(void *)v47;
      sub_22331E684(v49, v48);
      *((void *)v43 + 2) = v49;
      *((void *)v43 + 3) = v48;
    }
    unint64_t v50 = (void *)*((void *)v44 + 4);
    *((void *)v43 + 4) = v50;
    id v51 = v50;
  }
  uint64_t v52 = a3[19];
  uint64_t v53 = a3[20];
  uint64_t v54 = (char *)a1 + v52;
  uint64_t v55 = &a2[v52];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v55[8];
  uint64_t v56 = (char *)a1 + v53;
  int v57 = &a2[v53];
  *(void *)uint64_t v56 = *(void *)v57;
  v56[8] = v57[8];
  uint64_t v58 = a3[21];
  uint64_t v59 = a3[22];
  uint64_t v60 = (char *)a1 + v58;
  uint64_t v61 = &a2[v58];
  *(void *)uint64_t v60 = *(void *)v61;
  v60[8] = v61[8];
  id v62 = (void *)((char *)a1 + v59);
  uint64_t v63 = &a2[v59];
  uint64_t v64 = *((void *)v63 + 1);
  *id v62 = *(void *)v63;
  v62[1] = v64;
  uint64_t v65 = a3[23];
  uint64_t v66 = a3[24];
  uint64_t v67 = (char *)a1 + v65;
  uint64_t v68 = &a2[v65];
  *(void *)uint64_t v67 = *(void *)v68;
  v67[8] = v68[8];
  id v69 = (void *)((char *)a1 + v66);
  v70 = &a2[v66];
  uint64_t v71 = *((void *)v70 + 1);
  *id v69 = *(void *)v70;
  v69[1] = v71;
  uint64_t v72 = a3[25];
  uint64_t v73 = a3[26];
  uint64_t v74 = (void *)((char *)a1 + v72);
  uint64_t v75 = &a2[v72];
  uint64_t v76 = *((void *)v75 + 1);
  void *v74 = *(void *)v75;
  v74[1] = v76;
  v77 = (char *)a1 + v73;
  uint64_t v78 = &a2[v73];
  *(void *)v77 = *(void *)v78;
  v77[8] = v78[8];
  uint64_t v79 = a3[27];
  uint64_t v80 = a3[28];
  uint64_t v81 = (void *)((char *)a1 + v79);
  uint64_t v82 = &a2[v79];
  uint64_t v83 = *((void *)v82 + 1);
  void *v81 = *(void *)v82;
  v81[1] = v83;
  v84 = (void *)((char *)a1 + v80);
  uint64_t v85 = &a2[v80];
  uint64_t v86 = *((void *)v85 + 1);
  void *v84 = *(void *)v85;
  v84[1] = v86;
  uint64_t v87 = a3[29];
  uint64_t v88 = (char *)a1 + v87;
  uint64_t v89 = (uint64_t *)&a2[v87];
  unint64_t v90 = *(void *)&a2[v87 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v90 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
  }
  else
  {
    uint64_t v91 = *v89;
    sub_22331E684(*v89, v90);
    *(void *)uint64_t v88 = v91;
    *((void *)v88 + 1) = v90;
  }
  uint64_t v92 = a3[30];
  uint64_t v93 = a3[31];
  uint64_t v94 = (void *)((char *)a1 + v92);
  uint64_t v95 = &a2[v92];
  uint64_t v96 = *((void *)v95 + 1);
  void *v94 = *(void *)v95;
  v94[1] = v96;
  uint64_t v97 = (char *)a1 + v93;
  uint64_t v98 = &a2[v93];
  swift_bridgeObjectRetain();
  if (v124(v98, 1, v126))
  {
    uint64_t v99 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v97, v98, v126);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v97, 0, 1, v126);
  }
  uint64_t v100 = a3[32];
  uint64_t v101 = a3[33];
  uint64_t v102 = (void *)((char *)a1 + v100);
  uint64_t v103 = &a2[v100];
  uint64_t v104 = *((void *)v103 + 1);
  *uint64_t v102 = *(void *)v103;
  v102[1] = v104;
  *((unsigned char *)a1 + v101) = a2[v101];
  uint64_t v105 = a3[34];
  uint64_t v106 = (char *)a1 + v105;
  uint64_t v107 = &a2[v105];
  char v108 = *(void **)&a2[v105];
  swift_bridgeObjectRetain();
  if (v108 == (void *)1)
  {
    long long v109 = *((_OWORD *)v107 + 1);
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v109;
  }
  else
  {
    uint64_t v110 = (void *)*((void *)v107 + 1);
    long long v111 = (void *)*((void *)v107 + 2);
    *(void *)uint64_t v106 = v108;
    *((void *)v106 + 1) = v110;
    uint64_t v112 = (void *)*((void *)v107 + 3);
    *((void *)v106 + 2) = v111;
    *((void *)v106 + 3) = v112;
    id v113 = v108;
    id v114 = v110;
    id v115 = v111;
    id v116 = v112;
  }
  uint64_t v117 = a3[35];
  id v118 = (void *)((char *)a1 + v117);
  uint64_t v119 = &a2[v117];
  uint64_t v120 = *((void *)v119 + 1);
  *id v118 = *(void *)v119;
  v118[1] = v120;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_22331F290(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22342C130();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (void *)((char *)a2 + v21);
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[13]] = *((unsigned char *)a2 + a3[13]);
  uint64_t v24 = a3[14];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v11(&a1[v24], 1, v9);
  int v28 = v11(v26, 1, v9);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v25, v26, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
LABEL_18:
    uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v25, v26, v9);
LABEL_19:
  uint64_t v30 = a3[15];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (char *)a2 + v30;
  int v33 = v11(&a1[v30], 1, v9);
  int v34 = v11(v32, 1, v9);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
LABEL_24:
    uint64_t v35 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v31, v32, v9);
LABEL_25:
  uint64_t v36 = a3[16];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = (char *)a2 + v36;
  int v39 = v11(&a1[v36], 1, v9);
  int v40 = v11(v38, 1, v9);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v37, v38, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v37, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v9);
LABEL_30:
    uint64_t v41 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v37, v38, v9);
LABEL_31:
  uint64_t v42 = a3[17];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = (char *)a2 + v42;
  int v45 = v11(&a1[v42], 1, v9);
  int v46 = v11(v44, 1, v9);
  uint64_t v154 = v10;
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v9);
LABEL_36:
    uint64_t v47 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v43, v44, v9);
LABEL_37:
  uint64_t v48 = a3[18];
  uint64_t v49 = (uint64_t)&a1[v48];
  unint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = *(void *)&a1[v48 + 8];
  uint64_t v52 = *(void *)((char *)a2 + v48 + 8);
  if (v51 == 1)
  {
    if (v52 == 1)
    {
      long long v53 = *(_OWORD *)v50;
      long long v54 = *((_OWORD *)v50 + 1);
      *(void *)(v49 + 32) = *((void *)v50 + 4);
      *(_OWORD *)uint64_t v49 = v53;
      *(_OWORD *)(v49 + 16) = v54;
    }
    else
    {
      *(void *)uint64_t v49 = *(void *)v50;
      *(void *)(v49 + 8) = *((void *)v50 + 1);
      int v57 = v50 + 16;
      unint64_t v58 = *((void *)v50 + 3);
      swift_bridgeObjectRetain();
      if (v58 >> 60 == 15)
      {
        *(_OWORD *)(v49 + 16) = *v57;
      }
      else
      {
        uint64_t v61 = *(void *)v57;
        sub_22331E684(v61, v58);
        *(void *)(v49 + 16) = v61;
        *(void *)(v49 + 24) = v58;
      }
      id v62 = (void *)*((void *)v50 + 4);
      *(void *)(v49 + 32) = v62;
      id v63 = v62;
    }
  }
  else if (v52 == 1)
  {
    sub_223320000(v49);
    uint64_t v55 = *((void *)v50 + 4);
    long long v56 = *((_OWORD *)v50 + 1);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v56;
    *(void *)(v49 + 32) = v55;
  }
  else
  {
    *(void *)uint64_t v49 = *(void *)v50;
    *(void *)(v49 + 8) = *((void *)v50 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v59 = v50 + 16;
    unint64_t v60 = *((void *)v50 + 3);
    if (*(void *)(v49 + 24) >> 60 == 15)
    {
      if (v60 >> 60 == 15)
      {
        *(_OWORD *)(v49 + 16) = *v59;
      }
      else
      {
        uint64_t v64 = *(void *)v59;
        sub_22331E684(v64, *((void *)v50 + 3));
        *(void *)(v49 + 16) = v64;
        *(void *)(v49 + 24) = v60;
      }
    }
    else if (v60 >> 60 == 15)
    {
      sub_22331FFAC(v49 + 16);
      *(_OWORD *)(v49 + 16) = *v59;
    }
    else
    {
      uint64_t v65 = *(void *)v59;
      sub_22331E684(v65, *((void *)v50 + 3));
      uint64_t v66 = *(void *)(v49 + 16);
      unint64_t v67 = *(void *)(v49 + 24);
      *(void *)(v49 + 16) = v65;
      *(void *)(v49 + 24) = v60;
      sub_22331EA68(v66, v67);
    }
    uint64_t v68 = *(void **)(v49 + 32);
    id v69 = (void *)*((void *)v50 + 4);
    *(void *)(v49 + 32) = v69;
    id v70 = v69;
  }
  uint64_t v71 = a3[19];
  uint64_t v72 = &a1[v71];
  uint64_t v73 = (char *)a2 + v71;
  uint64_t v74 = *(void *)v73;
  v72[8] = v73[8];
  *(void *)uint64_t v72 = v74;
  uint64_t v75 = a3[20];
  uint64_t v76 = &a1[v75];
  v77 = (char *)a2 + v75;
  uint64_t v78 = *(void *)v77;
  v76[8] = v77[8];
  *(void *)uint64_t v76 = v78;
  uint64_t v79 = a3[21];
  uint64_t v80 = &a1[v79];
  uint64_t v81 = (char *)a2 + v79;
  uint64_t v82 = *(void *)v81;
  v80[8] = v81[8];
  *(void *)uint64_t v80 = v82;
  uint64_t v83 = a3[22];
  v84 = &a1[v83];
  uint64_t v85 = (void *)((char *)a2 + v83);
  *(void *)v84 = *v85;
  *((void *)v84 + 1) = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v86 = a3[23];
  uint64_t v87 = &a1[v86];
  uint64_t v88 = (char *)a2 + v86;
  uint64_t v89 = *(void *)v88;
  v87[8] = v88[8];
  *(void *)uint64_t v87 = v89;
  uint64_t v90 = a3[24];
  uint64_t v91 = &a1[v90];
  uint64_t v92 = (void *)((char *)a2 + v90);
  *(void *)uint64_t v91 = *v92;
  *((void *)v91 + 1) = v92[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v93 = a3[25];
  uint64_t v94 = &a1[v93];
  uint64_t v95 = (void *)((char *)a2 + v93);
  *(void *)uint64_t v94 = *v95;
  *((void *)v94 + 1) = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = a3[26];
  uint64_t v97 = &a1[v96];
  uint64_t v98 = (char *)a2 + v96;
  uint64_t v99 = *(void *)v98;
  v97[8] = v98[8];
  *(void *)uint64_t v97 = v99;
  uint64_t v100 = a3[27];
  uint64_t v101 = &a1[v100];
  uint64_t v102 = (void *)((char *)a2 + v100);
  *(void *)uint64_t v101 = *v102;
  *((void *)v101 + 1) = v102[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v103 = a3[28];
  uint64_t v104 = &a1[v103];
  uint64_t v105 = (void *)((char *)a2 + v103);
  *(void *)uint64_t v104 = *v105;
  *((void *)v104 + 1) = v105[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = a3[29];
  uint64_t v107 = (uint64_t *)&a1[v106];
  char v108 = (void *)((char *)a2 + v106);
  unint64_t v109 = *(void *)((char *)a2 + v106 + 8);
  if (*(void *)&a1[v106 + 8] >> 60 == 15)
  {
    if (v109 >> 60 != 15)
    {
      uint64_t v110 = *v108;
      sub_22331E684(v110, v109);
      uint64_t *v107 = v110;
      v107[1] = v109;
      goto LABEL_67;
    }
    goto LABEL_65;
  }
  if (v109 >> 60 == 15)
  {
    sub_22331FFAC((uint64_t)v107);
LABEL_65:
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    goto LABEL_67;
  }
  uint64_t v111 = *v108;
  sub_22331E684(v111, v109);
  uint64_t v112 = *v107;
  unint64_t v113 = v107[1];
  uint64_t *v107 = v111;
  v107[1] = v109;
  sub_22331EA68(v112, v113);
LABEL_67:
  uint64_t v114 = a3[30];
  id v115 = &a1[v114];
  id v116 = (void *)((char *)a2 + v114);
  *(void *)id v115 = *v116;
  *((void *)v115 + 1) = v116[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v117 = a3[31];
  id v118 = &a1[v117];
  uint64_t v119 = (char *)a2 + v117;
  int v120 = v11(&a1[v117], 1, v9);
  int v121 = v11(v119, 1, v9);
  if (v120)
  {
    if (!v121)
    {
      (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v118, v119, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v118, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v121)
  {
    (*(void (**)(char *, uint64_t))(v154 + 8))(v118, v9);
LABEL_72:
    uint64_t v122 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v154 + 24))(v118, v119, v9);
LABEL_73:
  uint64_t v123 = a3[32];
  v124 = &a1[v123];
  uint64_t v125 = (void *)((char *)a2 + v123);
  *(void *)v124 = *v125;
  *((void *)v124 + 1) = v125[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[33]] = *((unsigned char *)a2 + a3[33]);
  uint64_t v126 = a3[34];
  uint64_t v127 = (uint64_t)&a1[v126];
  unsigned int v128 = (char *)a2 + v126;
  uint64_t v129 = *(void **)&a1[v126];
  id v130 = *(void **)((char *)a2 + v126);
  if (v129 == (void *)1)
  {
    if (v130 == (void *)1)
    {
      long long v131 = *((_OWORD *)v128 + 1);
      *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
      *(_OWORD *)(v127 + 16) = v131;
    }
    else
    {
      *(void *)uint64_t v127 = v130;
      uint64_t v133 = (void *)*((void *)v128 + 1);
      *(void *)(v127 + 8) = v133;
      uint64_t v134 = (void *)*((void *)v128 + 2);
      *(void *)(v127 + 16) = v134;
      uint64_t v135 = (void *)*((void *)v128 + 3);
      *(void *)(v127 + 24) = v135;
      id v136 = v130;
      id v137 = v133;
      id v138 = v134;
      id v139 = v135;
    }
  }
  else if (v130 == (void *)1)
  {
    sub_223320054(v127);
    long long v132 = *((_OWORD *)v128 + 1);
    *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
    *(_OWORD *)(v127 + 16) = v132;
  }
  else
  {
    *(void *)uint64_t v127 = v130;
    id v140 = v130;

    v141 = *(void **)(v127 + 8);
    v142 = (void *)*((void *)v128 + 1);
    *(void *)(v127 + 8) = v142;
    id v143 = v142;

    uint64_t v144 = *(void **)(v127 + 16);
    uint64_t v145 = (void *)*((void *)v128 + 2);
    *(void *)(v127 + 16) = v145;
    id v146 = v145;

    uint64_t v147 = *(void **)(v127 + 24);
    uint64_t v148 = (void *)*((void *)v128 + 3);
    *(void *)(v127 + 24) = v148;
    id v149 = v148;
  }
  uint64_t v150 = a3[35];
  v151 = &a1[v150];
  v152 = (void *)((char *)a2 + v150);
  *(void *)v151 = *v152;
  *((void *)v151 + 1) = v152[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22331FFAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_223320000(uint64_t a1)
{
  return a1;
}

uint64_t sub_223320054(uint64_t a1)
{
  return a1;
}

_OWORD *sub_2233200A8(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  long long v8 = *((_OWORD *)a2 + 5);
  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = &a2[v9];
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v8;
  uint64_t v12 = sub_22342C130();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  int v18 = &a2[v16];
  if (v14(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  *((unsigned char *)a1 + v20) = a2[v20];
  uint64_t v21 = a3[14];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = &a2[v21];
  if (v14(&a2[v21], 1, v12))
  {
    uint64_t v24 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v23, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
  }
  uint64_t v25 = a3[15];
  uint64_t v26 = (char *)a1 + v25;
  int v27 = &a2[v25];
  if (v14(&a2[v25], 1, v12))
  {
    uint64_t v28 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v26, v27, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
  }
  uint64_t v29 = a3[16];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = &a2[v29];
  if (v14(&a2[v29], 1, v12))
  {
    uint64_t v32 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v30, v31, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v30, 0, 1, v12);
  }
  uint64_t v33 = a3[17];
  int v34 = (char *)a1 + v33;
  uint64_t v35 = &a2[v33];
  if (v14(&a2[v33], 1, v12))
  {
    uint64_t v36 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v34, v35, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v34, 0, 1, v12);
  }
  uint64_t v37 = a3[18];
  uint64_t v38 = a3[19];
  int v39 = (char *)a1 + v37;
  int v40 = &a2[v37];
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)int v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  *((void *)v39 + 4) = *((void *)v40 + 4);
  uint64_t v42 = (char *)a1 + v38;
  uint64_t v43 = &a2[v38];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = a3[20];
  uint64_t v45 = a3[21];
  int v46 = (char *)a1 + v44;
  uint64_t v47 = &a2[v44];
  *(void *)int v46 = *(void *)v47;
  v46[8] = v47[8];
  uint64_t v48 = (char *)a1 + v45;
  uint64_t v49 = &a2[v45];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
  uint64_t v50 = a3[23];
  *(_OWORD *)((char *)a1 + a3[22]) = *(_OWORD *)&a2[a3[22]];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = &a2[v50];
  v51[8] = v52[8];
  *(void *)uint64_t v51 = *(void *)v52;
  uint64_t v53 = a3[25];
  *(_OWORD *)((char *)a1 + a3[24]) = *(_OWORD *)&a2[a3[24]];
  *(_OWORD *)((char *)a1 + v53) = *(_OWORD *)&a2[v53];
  uint64_t v54 = a3[26];
  uint64_t v55 = a3[27];
  long long v56 = (char *)a1 + v54;
  int v57 = &a2[v54];
  v56[8] = v57[8];
  *(void *)long long v56 = *(void *)v57;
  *(_OWORD *)((char *)a1 + v55) = *(_OWORD *)&a2[v55];
  uint64_t v58 = a3[29];
  *(_OWORD *)((char *)a1 + a3[28]) = *(_OWORD *)&a2[a3[28]];
  *(_OWORD *)((char *)a1 + v58) = *(_OWORD *)&a2[v58];
  uint64_t v59 = a3[31];
  unint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = &a2[v59];
  *(_OWORD *)((char *)a1 + a3[30]) = *(_OWORD *)&a2[a3[30]];
  if (v14(&a2[v59], 1, v12))
  {
    uint64_t v62 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v60, v61, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v60, 0, 1, v12);
  }
  uint64_t v63 = a3[33];
  *(_OWORD *)((char *)a1 + a3[32]) = *(_OWORD *)&a2[a3[32]];
  *((unsigned char *)a1 + v63) = a2[v63];
  uint64_t v64 = a3[34];
  uint64_t v65 = a3[35];
  uint64_t v66 = (_OWORD *)((char *)a1 + v64);
  unint64_t v67 = &a2[v64];
  long long v68 = *((_OWORD *)v67 + 1);
  *uint64_t v66 = *(_OWORD *)v67;
  v66[1] = v68;
  *(_OWORD *)((char *)a1 + v65) = *(_OWORD *)&a2[v65];
  return a1;
}

char *sub_2233206B0(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_22342C130();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v17(&a1[v21], 1, v15);
  int v25 = v17(v23, 1, v15);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v23, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
LABEL_12:
    uint64_t v26 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v22, v23, v15);
LABEL_13:
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[14];
  a1[a3[13]] = *((unsigned char *)a2 + a3[13]);
  uint64_t v33 = &a1[v32];
  int v34 = (char *)a2 + v32;
  int v35 = v17(&a1[v32], 1, v15);
  int v36 = v17(v34, 1, v15);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v34, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v15);
LABEL_18:
    uint64_t v37 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v33, v34, v15);
LABEL_19:
  uint64_t v38 = a3[15];
  int v39 = &a1[v38];
  int v40 = (char *)a2 + v38;
  int v41 = v17(&a1[v38], 1, v15);
  int v42 = v17(v40, 1, v15);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v39, v40, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v39, 0, 1, v15);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v39, v15);
LABEL_24:
    uint64_t v43 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v39, v40, v15);
LABEL_25:
  uint64_t v44 = a3[16];
  uint64_t v45 = &a1[v44];
  int v46 = (char *)a2 + v44;
  int v47 = v17(&a1[v44], 1, v15);
  int v48 = v17(v46, 1, v15);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v45, v46, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v45, 0, 1, v15);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v45, v15);
LABEL_30:
    uint64_t v49 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v45, v46, v15);
LABEL_31:
  uint64_t v50 = a3[17];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = (char *)a2 + v50;
  int v53 = v17(&a1[v50], 1, v15);
  int v54 = v17(v52, 1, v15);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v51, v52, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v51, 0, 1, v15);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v51, v15);
LABEL_36:
    uint64_t v55 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v51, v52, v15);
LABEL_37:
  uint64_t v56 = a3[18];
  uint64_t v57 = (uint64_t)&a1[v56];
  uint64_t v58 = (char *)a2 + v56;
  if (*(void *)&a1[v56 + 8] == 1)
  {
LABEL_40:
    long long v60 = *((_OWORD *)v58 + 1);
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    *(_OWORD *)(v57 + 16) = v60;
    *(void *)(v57 + 32) = *((void *)v58 + 4);
    goto LABEL_53;
  }
  uint64_t v59 = *((void *)v58 + 1);
  if (v59 == 1)
  {
    sub_223320000(v57);
    goto LABEL_40;
  }
  uint64_t v142 = v16;
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 8) = v59;
  swift_bridgeObjectRelease();
  uint64_t v61 = v58 + 16;
  unint64_t v62 = *(void *)(v57 + 24);
  if (v62 >> 60 != 15)
  {
    unint64_t v63 = *((void *)v58 + 3);
    if (v63 >> 60 != 15)
    {
      uint64_t v64 = *(void *)(v57 + 16);
      *(void *)(v57 + 16) = *v61;
      *(void *)(v57 + 24) = v63;
      sub_22331EA68(v64, v62);
      goto LABEL_52;
    }
    sub_22331FFAC(v57 + 16);
  }
  *(_OWORD *)(v57 + 16) = *(_OWORD *)v61;
LABEL_52:
  uint64_t v65 = *(void **)(v57 + 32);
  *(void *)(v57 + 32) = *((void *)v58 + 4);

  uint64_t v16 = v142;
LABEL_53:
  uint64_t v66 = a3[19];
  uint64_t v67 = a3[20];
  long long v68 = &a1[v66];
  id v69 = (char *)a2 + v66;
  *(void *)long long v68 = *(void *)v69;
  v68[8] = v69[8];
  id v70 = &a1[v67];
  uint64_t v71 = (char *)a2 + v67;
  *(void *)id v70 = *(void *)v71;
  v70[8] = v71[8];
  uint64_t v72 = a3[21];
  uint64_t v73 = a3[22];
  uint64_t v74 = &a1[v72];
  uint64_t v75 = (char *)a2 + v72;
  *(void *)uint64_t v74 = *(void *)v75;
  v74[8] = v75[8];
  uint64_t v76 = &a1[v73];
  v77 = (void *)((char *)a2 + v73);
  uint64_t v79 = *v77;
  uint64_t v78 = v77[1];
  *(void *)uint64_t v76 = v79;
  *((void *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[23];
  uint64_t v81 = a3[24];
  uint64_t v82 = &a1[v80];
  uint64_t v83 = (char *)a2 + v80;
  *(void *)uint64_t v82 = *(void *)v83;
  v82[8] = v83[8];
  v84 = &a1[v81];
  uint64_t v85 = (void *)((char *)a2 + v81);
  uint64_t v87 = *v85;
  uint64_t v86 = v85[1];
  *(void *)v84 = v87;
  *((void *)v84 + 1) = v86;
  swift_bridgeObjectRelease();
  uint64_t v88 = a3[25];
  uint64_t v89 = &a1[v88];
  uint64_t v90 = (void *)((char *)a2 + v88);
  uint64_t v92 = *v90;
  uint64_t v91 = v90[1];
  *(void *)uint64_t v89 = v92;
  *((void *)v89 + 1) = v91;
  swift_bridgeObjectRelease();
  uint64_t v93 = a3[26];
  uint64_t v94 = a3[27];
  uint64_t v95 = &a1[v93];
  uint64_t v96 = (char *)a2 + v93;
  *(void *)uint64_t v95 = *(void *)v96;
  v95[8] = v96[8];
  uint64_t v97 = &a1[v94];
  uint64_t v98 = (void *)((char *)a2 + v94);
  uint64_t v100 = *v98;
  uint64_t v99 = v98[1];
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[28];
  uint64_t v102 = &a1[v101];
  uint64_t v103 = (void *)((char *)a2 + v101);
  uint64_t v105 = *v103;
  uint64_t v104 = v103[1];
  *(void *)uint64_t v102 = v105;
  *((void *)v102 + 1) = v104;
  swift_bridgeObjectRelease();
  uint64_t v106 = a3[29];
  uint64_t v107 = (uint64_t)&a1[v106];
  char v108 = (char *)a2 + v106;
  unint64_t v109 = *(void *)&a1[v106 + 8];
  if (v109 >> 60 == 15)
  {
LABEL_56:
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    goto LABEL_58;
  }
  unint64_t v110 = *((void *)v108 + 1);
  if (v110 >> 60 == 15)
  {
    sub_22331FFAC(v107);
    goto LABEL_56;
  }
  uint64_t v111 = *(void *)v107;
  *(void *)uint64_t v107 = *(void *)v108;
  *(void *)(v107 + 8) = v110;
  sub_22331EA68(v111, v109);
LABEL_58:
  uint64_t v112 = a3[30];
  unint64_t v113 = &a1[v112];
  uint64_t v114 = (void *)((char *)a2 + v112);
  uint64_t v116 = *v114;
  uint64_t v115 = v114[1];
  *(void *)unint64_t v113 = v116;
  *((void *)v113 + 1) = v115;
  swift_bridgeObjectRelease();
  uint64_t v117 = a3[31];
  id v118 = &a1[v117];
  uint64_t v119 = (char *)a2 + v117;
  int v120 = v17(&a1[v117], 1, v15);
  int v121 = v17(v119, 1, v15);
  if (v120)
  {
    if (!v121)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v118, v119, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v118, 0, 1, v15);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  if (v121)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v118, v15);
LABEL_63:
    uint64_t v122 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v118, v119, v15);
LABEL_64:
  uint64_t v123 = a3[32];
  v124 = &a1[v123];
  uint64_t v125 = (void *)((char *)a2 + v123);
  uint64_t v127 = *v125;
  uint64_t v126 = v125[1];
  *(void *)v124 = v127;
  *((void *)v124 + 1) = v126;
  swift_bridgeObjectRelease();
  uint64_t v128 = a3[34];
  a1[a3[33]] = *((unsigned char *)a2 + a3[33]);
  uint64_t v129 = &a1[v128];
  id v130 = (void *)((char *)a2 + v128);
  long long v131 = *(void **)&a1[v128];
  if (v131 != (void *)1)
  {
    if (*v130 != 1)
    {
      *(void *)uint64_t v129 = *v130;

      uint64_t v133 = (void *)*((void *)v129 + 1);
      *((void *)v129 + 1) = v130[1];

      uint64_t v134 = (void *)*((void *)v129 + 2);
      *((void *)v129 + 2) = v130[2];

      uint64_t v135 = (void *)*((void *)v129 + 3);
      *((void *)v129 + 3) = v130[3];

      goto LABEL_69;
    }
    sub_223320054((uint64_t)v129);
  }
  long long v132 = *((_OWORD *)v130 + 1);
  *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
  *((_OWORD *)v129 + 1) = v132;
LABEL_69:
  uint64_t v136 = a3[35];
  id v137 = &a1[v136];
  id v138 = (void *)((char *)a2 + v136);
  uint64_t v140 = *v138;
  uint64_t v139 = v138[1];
  *(void *)id v137 = v140;
  *((void *)v137 + 1) = v139;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_223321178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22332118C);
}

uint64_t sub_22332118C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_22332124C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_223321260);
}

uint64_t sub_223321260(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MessageRecord()
{
  uint64_t result = qword_26AD5F928;
  if (!qword_26AD5F928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_223321358()
{
  sub_223321460();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_223321460()
{
  if (!qword_26AD5E1B8)
  {
    sub_22342C130();
    unint64_t v0 = sub_22342CA00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD5E1B8);
    }
  }
}

uint64_t sub_2233214B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_22332153C(&qword_26AD5F910, (void (*)(uint64_t))type metadata accessor for MessageRecord);
  uint64_t result = sub_22332153C(&qword_26AD5F908, (void (*)(uint64_t))type metadata accessor for MessageRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22332153C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_223321584(uint64_t a1)
{
  uint64_t v2 = sub_22332153C((unint64_t *)&unk_267FA2580, type metadata accessor for Key);
  uint64_t v3 = sub_22332153C(&qword_267FA2660, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_223321640(uint64_t a1)
{
  uint64_t v2 = sub_22332153C((unint64_t *)&unk_26AD60220, type metadata accessor for CKError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_2233216AC(uint64_t a1)
{
  uint64_t v2 = sub_22332153C((unint64_t *)&unk_26AD60220, type metadata accessor for CKError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_223321718(uint64_t a1)
{
  uint64_t v2 = sub_22332153C(&qword_26AD60230, type metadata accessor for CKError);
  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_223321784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22332153C(&qword_26AD60230, type metadata accessor for CKError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_223321808()
{
  return sub_22332153C(&qword_26AD60250, type metadata accessor for CKError);
}

uint64_t sub_223321850()
{
  return sub_22332153C(&qword_26AD60258, type metadata accessor for CKError);
}

uint64_t sub_223321898(uint64_t a1)
{
  uint64_t v2 = sub_22332153C(&qword_267FA2510, type metadata accessor for CKUnderlyingError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_223321904(uint64_t a1)
{
  uint64_t v2 = sub_22332153C(&qword_267FA2510, type metadata accessor for CKUnderlyingError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_223321970(uint64_t a1)
{
  uint64_t v2 = sub_22332153C((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_2233219DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22332153C((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_223321A60()
{
  return sub_22332153C(&qword_267FA2500, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_223321AA8()
{
  return sub_22332153C(&qword_267FA2508, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_223321AF0()
{
  return sub_22332153C(&qword_267FA2510, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_223321B38()
{
  return sub_22332153C(&qword_267FA2518, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_223321B80()
{
  return sub_22332153C(&qword_267FA2520, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_223321BC8()
{
  return sub_22332153C(&qword_267FA2528, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_223321C24()
{
  return sub_22332153C((unint64_t *)&unk_267FA2530, _s3__C4CodeOMa_0);
}

unint64_t sub_223321C70()
{
  unint64_t result = qword_26AD60218;
  if (!qword_26AD60218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD60218);
  }
  return result;
}

uint64_t sub_223321CC4()
{
  return sub_22332153C(&qword_267FA2540, _s3__C4CodeOMa_0);
}

uint64_t sub_223321D0C()
{
  return sub_22332153C((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_223321D54()
{
  return sub_22332153C((unint64_t *)&unk_26AD60220, type metadata accessor for CKError);
}

uint64_t sub_223321D9C()
{
  return sub_22332153C(&qword_26AD60238, type metadata accessor for CKError);
}

uint64_t sub_223321DE4()
{
  return sub_22332153C((unint64_t *)&unk_26AD60240, type metadata accessor for CKError);
}

uint64_t sub_223321E2C()
{
  return sub_22332153C((unint64_t *)&qword_267FA2558, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_223321E88()
{
  return sub_22332153C(&qword_26AD60350, type metadata accessor for Code);
}

uint64_t sub_223321ED0()
{
  return sub_22332153C((unint64_t *)&unk_267FA2568, type metadata accessor for Code);
}

uint64_t sub_223321F18()
{
  return sub_22332153C(&qword_26AD60230, type metadata accessor for CKError);
}

void *sub_223321F60(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_223321FA4()
{
  unint64_t result = qword_26AD5FBA0;
  if (!qword_26AD5FBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5FBA0);
  }
  return result;
}

void sub_223321FF8(void *a1, void *a2, void *a3, void *a4)
{
  if (a1 != (void *)1)
  {
  }
}

uint64_t sub_223322054(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_22331EA68(a1, a2);
  }
  return a1;
}

void sub_223322068(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_223322054(a3, a4);
  }
}

unint64_t sub_2233220CC()
{
  unint64_t result = qword_26AD5F8F0;
  if (!qword_26AD5F8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F8F0);
  }
  return result;
}

uint64_t sub_223322120(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_223322184@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_22342C2D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2233221CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22342C300();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2233221F8(uint64_t a1)
{
  uint64_t v2 = sub_22332153C((unint64_t *)&qword_267FA2650, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_22332153C(&qword_267FA2658, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2233222B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_22342C300();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2233222F8()
{
  sub_22342C300();
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22332234C()
{
  sub_22342C300();
  sub_22342D030();
  sub_22342C390();
  uint64_t v0 = sub_22342D060();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2233223C0()
{
  uint64_t v0 = sub_22342C300();
  uint64_t v2 = v1;
  if (v0 == sub_22342C300() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_22342CF60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_22332244C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_22331E640((uint64_t *)&unk_267FA2598);
  uint64_t result = sub_22342CD70();
  uint64_t v9 = result;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v31) {
        return v9;
      }
      unint64_t v16 = v30[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v31) {
          return v9;
        }
        unint64_t v16 = v30[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v31) {
            return v9;
          }
          unint64_t v16 = v30[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v31) {
              return v9;
            }
            unint64_t v16 = v30[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v31) {
                  return v9;
                }
                unint64_t v16 = v30[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    int v18 = *(void **)(*(void *)(v4 + 48) + 8 * v14);
    sub_22332325C(*(void *)(v4 + 56) + 32 * v14, (uint64_t)v33);
    sub_223323364(v33, v32);
    sub_22342C300();
    sub_22342D030();
    id v19 = v18;
    sub_22342C390();
    uint64_t v20 = sub_22342D060();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(*(void *)(v9 + 48) + 8 * v24) = v19;
    uint64_t result = (uint64_t)sub_223323364(v32, (_OWORD *)(*(void *)(v9 + 56) + 32 * v24));
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_223322714(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_22331E640((uint64_t *)&unk_26AD604B0);
  uint64_t result = sub_22342CD70();
  uint64_t v8 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v31) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v31) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v31) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v31) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v31) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    sub_22342D030();
    swift_bridgeObjectRetain();
    sub_22342C390();
    uint64_t result = sub_22342D060();
    uint64_t v21 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = (void *)(*(void *)(v8 + 48) + 16 * v24);
    *uint64_t v29 = v19;
    v29[1] = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v24) = v20;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2233229BC()
{
  unint64_t v0 = sub_22342CDA0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

void *sub_223322A08(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = (void *)a1[4];
  swift_bridgeObjectRetain();
  sub_223322A54(v2, v3);
  id v5 = v4;
  return a1;
}

uint64_t sub_223322A54(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_22331E684(a1, a2);
  }
  return a1;
}

void *sub_223322A68(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = (void *)a1[4];
  swift_bridgeObjectRelease();
  sub_223322054(v2, v3);

  return a1;
}

uint64_t sub_223322AB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_22331E640(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_223322B18()
{
  unint64_t result = qword_26AD5F400;
  if (!qword_26AD5F400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F400);
  }
  return result;
}

unint64_t sub_223322B6C()
{
  unint64_t result = qword_26AD5F648;
  if (!qword_26AD5F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F648);
  }
  return result;
}

unint64_t sub_223322BC0()
{
  unint64_t result = qword_26AD60170;
  if (!qword_26AD60170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD60170);
  }
  return result;
}

unint64_t sub_223322C14()
{
  unint64_t result = qword_267FA2578;
  if (!qword_267FA2578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2578);
  }
  return result;
}

void sub_223322C68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a5;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v26 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v27 = (unint64_t)(v8 + 63) >> 6;
  while (2)
  {
    uint64_t v25 = v6;
    while (1)
    {
      if (v10)
      {
        unint64_t v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v13 = v12 | (v7 << 6);
        uint64_t v14 = v33;
      }
      else
      {
        int64_t v15 = v7 + 1;
        uint64_t v14 = v33;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if (v15 >= v27) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v26 + 8 * v15);
        ++v7;
        if (!v16)
        {
          int64_t v7 = v15 + 1;
          if (v15 + 1 >= v27) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v26 + 8 * v7);
          if (!v16)
          {
            int64_t v7 = v15 + 2;
            if (v15 + 2 >= v27) {
              goto LABEL_29;
            }
            unint64_t v16 = *(void *)(v26 + 8 * v7);
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v27)
              {
LABEL_29:
                sub_22332244C(a1, a2, v25, a3);
                return;
              }
              unint64_t v16 = *(void *)(v26 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v7 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_31;
                  }
                  if (v7 >= v27) {
                    goto LABEL_29;
                  }
                  unint64_t v16 = *(void *)(v26 + 8 * v7);
                  ++v17;
                  if (v16) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v7 = v17;
            }
          }
        }
LABEL_22:
        unint64_t v10 = (v16 - 1) & v16;
        unint64_t v13 = __clz(__rbit64(v16)) + (v7 << 6);
      }
      uint64_t v18 = *(void **)(*(void *)(a3 + 48) + 8 * v13);
      sub_22332325C(*(void *)(a3 + 56) + 32 * v13, (uint64_t)v32);
      uint64_t v30 = v18;
      sub_22332325C((uint64_t)v32, (uint64_t)v31);
      sub_22332325C((uint64_t)v31, (uint64_t)v29);
      if (sub_22342C300() == a4 && v19 == v14) {
        break;
      }
      char v21 = sub_22342CF60();
      id v22 = v18;
      swift_bridgeObjectRelease();
      sub_2233232B8((uint64_t)&v30, &qword_267FA2590);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v29);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v32);

      if (v21) {
        goto LABEL_5;
      }
    }
    id v11 = v18;
    swift_bridgeObjectRelease();
    sub_2233232B8((uint64_t)&v30, &qword_267FA2590);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v29);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v32);

LABEL_5:
    *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v6 = v25 + 1;
    if (!__OFADD__(v25, 1)) {
      continue;
    }
    break;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_223322F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v16[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (swift_stdlib_isStackAllocationSafe() & 1) != 0)
  {
    MEMORY[0x270FA5388]();
    bzero((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    sub_223322C68((void *)((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    sub_223322C68((unint64_t *)v13, v9, a1, a2, a3);
    uint64_t v12 = v14;
    swift_bridgeObjectRelease();
    MEMORY[0x223CB62D0](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_2233230DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_223323140(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id *sub_22332319C(id *a1)
{
  id v2 = *a1;
  return a1;
}

void type metadata accessor for Key(uint64_t a1)
{
}

id *sub_2233231DC(id *a1)
{
  return a1;
}

unint64_t sub_223323208()
{
  unint64_t result = qword_26AD5F0E8;
  if (!qword_26AD5F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F0E8);
  }
  return result;
}

uint64_t sub_22332325C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2233232B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_22331E640(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s17MessagesCloudSync9SyncFilesVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

_OWORD *sub_223323364(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_223323374(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for MessageRecordError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for MessageRecordError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2233234C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2233234EC()
{
  return 0;
}

ValueMetadata *type metadata accessor for MessageRecordError()
{
  return &type metadata for MessageRecordError;
}

unsigned char *initializeBufferWithCopyOfBuffer for MessageRecord.MessageType(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MessageRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessageRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223323670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

uint64_t sub_223323698(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2233236A0(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MessageRecord.CodingKeys()
{
  return &type metadata for MessageRecord.CodingKeys;
}

void type metadata accessor for IMDCKSyncStoreFilterType(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for MessageRecord.MessageType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessageRecord.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223323828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_223323850(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MessageRecord.MessageType()
{
  return &type metadata for MessageRecord.MessageType;
}

unint64_t sub_223323870()
{
  unint64_t result = qword_267FA25E0;
  if (!qword_267FA25E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA25E0);
  }
  return result;
}

unint64_t sub_2233238C8()
{
  unint64_t result = qword_267FA25E8;
  if (!qword_267FA25E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA25E8);
  }
  return result;
}

unint64_t sub_223323920()
{
  unint64_t result = qword_267FA25F0;
  if (!qword_267FA25F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA25F0);
  }
  return result;
}

uint64_t sub_223323974()
{
  return sub_22332153C(&qword_267FA25F8, type metadata accessor for Key);
}

uint64_t sub_2233239BC()
{
  return sub_22332153C(&qword_267FA2600, type metadata accessor for Key);
}

uint64_t sub_223323A04()
{
  return sub_22332153C(&qword_267FA2608, type metadata accessor for FileAttributeKey);
}

uint64_t sub_223323A4C()
{
  return sub_22332153C(&qword_267FA2610, type metadata accessor for FileAttributeKey);
}

uint64_t sub_223323A94()
{
  return sub_22332153C(&qword_267FA2618, type metadata accessor for FileProtectionType);
}

uint64_t sub_223323ADC()
{
  return sub_22332153C(&qword_267FA2620, type metadata accessor for FileProtectionType);
}

uint64_t sub_223323B24()
{
  return sub_22332153C(&qword_267FA2628, type metadata accessor for FileProtectionType);
}

uint64_t sub_223323B6C()
{
  return sub_22332153C(&qword_267FA2630, type metadata accessor for FileAttributeKey);
}

uint64_t sub_223323BB4()
{
  return sub_22332153C(&qword_267FA2638, type metadata accessor for Key);
}

unint64_t sub_223323C00()
{
  unint64_t result = qword_26AD5F900;
  if (!qword_26AD5F900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F900);
  }
  return result;
}

unint64_t sub_223323C58()
{
  unint64_t result = qword_26AD5F8F8;
  if (!qword_26AD5F8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F8F8);
  }
  return result;
}

void type metadata accessor for IMChatStyle(uint64_t a1)
{
}

void sub_223323CC0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void sub_223323D24()
{
  qword_26AD632E8 = 1572864;
}

void sub_223323D34()
{
  if (qword_26AD5F100 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_223323DE0(9, 0);
  if (v1)
  {
    int v3 = (void *)sub_22342C2D0();
    uint64_t v2 = IMBagIntValueWithDefault();
  }
  else
  {
    uint64_t v2 = v0;
  }
  qword_26AD632F0 = v2;
}

uint64_t sub_223323DE0(char a1, uint64_t a2)
{
  int v3 = v2;
  sub_223424530(a1);
  uint64_t v5 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_objectForKey_, v5);

  if (v6)
  {
    sub_22342CA80();
    swift_unknownObjectRelease();
    sub_223323364(&v10, v11);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_22331E640(qword_26AD5F180);
  int v7 = swift_dynamicCast();
  uint64_t v8 = v10;
  if (!v7) {
    return a2;
  }
  return v8;
}

void *sub_223323ECC(char a1, void *a2)
{
  sub_223424530(a1);
  uint64_t v4 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_objectForKey_, v4);

  if (v5)
  {
    sub_22342CA80();
    swift_unknownObjectRelease();
    sub_223323364(&v8, v9);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_22331E640(qword_26AD5F180);
  sub_223324984();
  if (!swift_dynamicCast() || (unint64_t result = (void *)v8) == 0)
  {
    id v7 = a2;
    return a2;
  }
  return result;
}

uint64_t sub_223323FAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = MEMORY[0x263F8EE80];
    uint64_t v4 = (unsigned char *)(a1 + 56);
    id v5 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      id v6 = (void *)*((void *)v4 - 3);
      uint64_t v7 = *((void *)v4 - 1);
      uint64_t v51 = *((void *)v4 - 2);
      if (*v4 == 1)
      {
        long long v8 = v5;
        sub_22332468C(v6);
        id v9 = v6;
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_2233D8EB8();
        BOOL v11 = __OFADD__(v2, v10);
        v2 += v10;
        if (v11) {
          goto LABEL_57;
        }
        if (qword_26AD5FC70 != -1) {
          swift_once();
        }
        if (qword_26AD632E8 < v2)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          id v5 = v8;
          goto LABEL_50;
        }
        id v12 = v9;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_2233CE23C(v51, v7, v12, isUniquelyReferenced_nonNull_native);

        swift_bridgeObjectRelease();
        id v5 = v8;
        goto LABEL_27;
      }
      sub_22332468C(v6);
      uint64_t v50 = v6;
      id v14 = v6;
      uint64_t v15 = v7;
      swift_bridgeObjectRetain();
      id v16 = objc_msgSend(v14, sel_size);
      BOOL v11 = __OFADD__(v2, v16);
      v2 += (uint64_t)v16;
      if (v11) {
        goto LABEL_58;
      }
      id v6 = v16;
      if (qword_26AD5FC70 != -1) {
        swift_once();
      }
      if (qword_26AD632E8 < v2 && (v5[2] || *(void *)(v3 + 16)))
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v6 = v50;
        goto LABEL_50;
      }
      uint64_t v48 = qword_26AD632E8;
      uint64_t v49 = v3;
      id v17 = v14;
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v20 = sub_22339C2E8(v51, v15);
      uint64_t v21 = v5[2];
      BOOL v22 = (v19 & 1) == 0;
      uint64_t v23 = v21 + v22;
      if (__OFADD__(v21, v22)) {
        goto LABEL_59;
      }
      char v24 = v19;
      if (v5[3] >= v23)
      {
        if (v18)
        {
          if (v19) {
            goto LABEL_22;
          }
        }
        else
        {
          sub_2233CF014();
          if (v24) {
            goto LABEL_22;
          }
        }
      }
      else
      {
        sub_2233CC1D4(v23, v18);
        unint64_t v25 = sub_22339C2E8(v51, v15);
        if ((v24 & 1) != (v26 & 1))
        {
          uint64_t result = sub_22342CFB0();
          __break(1u);
          return result;
        }
        unint64_t v20 = v25;
        if (v24)
        {
LABEL_22:
          uint64_t v27 = v5[7] + 16 * v20;

          *(void *)uint64_t v27 = v17;
          *(void *)(v27 + 8) = v6;
          goto LABEL_26;
        }
      }
      v5[(v20 >> 6) + 8] |= 1 << v20;
      uint64_t v28 = (uint64_t *)(v5[6] + 16 * v20);
      uint64_t *v28 = v51;
      v28[1] = v15;
      uint64_t v29 = (void *)(v5[7] + 16 * v20);
      *uint64_t v29 = v17;
      v29[1] = v6;
      uint64_t v30 = v5[2];
      BOOL v11 = __OFADD__(v30, 1);
      uint64_t v31 = v30 + 1;
      if (v11) {
        goto LABEL_60;
      }
      v5[2] = v31;
      swift_bridgeObjectRetain();
LABEL_26:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v49;
      id v6 = v50;
      if (v48 < v2)
      {
        swift_bridgeObjectRelease();
LABEL_50:
        uint64_t v4 = v5;
        if (qword_26AD5F0D8 != -1) {
LABEL_61:
        }
          swift_once();
        uint64_t v43 = sub_22342C200();
        sub_223323374(v43, (uint64_t)qword_26AD63108);
        int v36 = sub_22342C1E0();
        os_log_type_t v44 = sub_22342C700();
        if (os_log_type_enabled(v36, v44))
        {
          uint64_t v45 = v6;
          int v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v46 = 0;
          _os_log_impl(&dword_223317000, v36, v44, "Next record will exceed max bytes per batch", v46, 2u);
          id v5 = v4;
          MEMORY[0x223CB62D0](v46, -1, -1);

          sub_2233246C4(v45);
          return (uint64_t)v5;
        }
        int v42 = v6;
        goto LABEL_54;
      }
LABEL_27:
      uint64_t v32 = v5[2];
      uint64_t v33 = *(void *)(v3 + 16);
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      if (qword_26AD5FC78 != -1) {
        swift_once();
      }
      if (v34 >= qword_26AD632F0)
      {
        uint64_t v4 = v5;
        swift_bridgeObjectRelease();
        if (qword_26AD5F0D8 != -1) {
          swift_once();
        }
        uint64_t v35 = sub_22342C200();
        sub_223323374(v35, (uint64_t)qword_26AD63108);
        int v36 = sub_22342C1E0();
        os_log_type_t v37 = sub_22342C720();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = v6;
          int v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v39 = 0;
          int v40 = "Reached max record count per batch";
LABEL_45:
          _os_log_impl(&dword_223317000, v36, v37, v40, v39, 2u);
          id v5 = v4;
          MEMORY[0x223CB62D0](v39, -1, -1);

          sub_2233246C4(v38);
          return (uint64_t)v5;
        }
LABEL_46:
        int v42 = v6;
LABEL_54:
        sub_2233246C4(v42);

        return (uint64_t)v4;
      }
      if (qword_26AD5FC70 != -1) {
        swift_once();
      }
      if (v2 >= qword_26AD632E8)
      {
        uint64_t v4 = v5;
        swift_bridgeObjectRelease();
        if (qword_26AD5F0D8 != -1) {
          swift_once();
        }
        uint64_t v41 = sub_22342C200();
        sub_223323374(v41, (uint64_t)qword_26AD63108);
        int v36 = sub_22342C1E0();
        os_log_type_t v37 = sub_22342C700();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = v6;
          int v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v39 = 0;
          int v40 = "Current batch is over the max bytes per batch";
          goto LABEL_45;
        }
        goto LABEL_46;
      }
      v4 += 32;
      sub_2233246C4(v6);
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE80];
}

uint64_t sub_22332468C(void *a1)
{
  id v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2233246C4(void *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t destroy for RecordZoneBatch()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s17MessagesCloudSync15RecordZoneBatchVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RecordZoneBatch(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for RecordZoneBatch(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RecordZoneBatch()
{
  return &type metadata for RecordZoneBatch;
}

void *initializeBufferWithCopyOfBuffer for RecordZoneBatch.SaveMetadata(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

void destroy for RecordZoneBatch.SaveMetadata(id *a1)
{
}

uint64_t assignWithCopy for RecordZoneBatch.SaveMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for RecordZoneBatch.SaveMetadata(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t _s18RecordChangedErrorVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s18RecordChangedErrorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordZoneBatch.SaveMetadata()
{
  return &type metadata for RecordZoneBatch.SaveMetadata;
}

unint64_t sub_223324984()
{
  unint64_t result = qword_26AD5EF30;
  if (!qword_26AD5EF30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD5EF30);
  }
  return result;
}

MessagesCloudSync::SyncJobSchedulingStrategy_optional __swiftcall SyncJobSchedulingStrategy.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  char *v1 = v2;
  return (MessagesCloudSync::SyncJobSchedulingStrategy_optional)rawValue;
}

uint64_t SyncJobSchedulingStrategy.rawValue.getter()
{
  return *v0;
}

unint64_t sub_2233249F0()
{
  unint64_t result = qword_267FA26D0;
  if (!qword_267FA26D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA26D0);
  }
  return result;
}

uint64_t sub_223324A44()
{
  return sub_22342D060();
}

uint64_t sub_223324A8C()
{
  return sub_22342D040();
}

uint64_t sub_223324AB8()
{
  return sub_22342D060();
}

void *sub_223324AFC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_223324B1C(void *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *storeEnumTagSinglePayload for SyncJobSchedulingStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223324BF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncJobSchedulingStrategy()
{
  return &type metadata for SyncJobSchedulingStrategy;
}

uint64_t sub_223324C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v78 = a8;
  uint64_t v77 = a7;
  uint64_t v92 = a6;
  uint64_t v13 = sub_22331E640(&qword_26AD5E1C8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v76 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22342C130();
  MEMORY[0x270FA5388](v15 - 8);
  id v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_22342C170();
  MEMORY[0x270FA5388](v65);
  uint64_t v74 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AD5EFE0 != -1) {
    swift_once();
  }
  uint64_t v70 = qword_26AD63168;
  uint64_t v73 = unk_26AD63170;
  sub_223322120(a1, (uint64_t)&v90);
  type metadata accessor for XPCActivity();
  uint64_t v71 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  sub_223322120(a2, (uint64_t)&v88);
  sub_223322120(a3, (uint64_t)v87);
  sub_223322120(a4, (uint64_t)v85);
  uint64_t v19 = sub_2233310D8((uint64_t)v85, v86);
  MEMORY[0x270FA5388](v19);
  (*(void (**)(void))(v20 + 16))();
  uint64_t v83 = &type metadata for DatabaseRecordPersistence;
  v84 = &off_26D670800;
  type metadata accessor for CountStore();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = sub_2233310D8((uint64_t)v82, (uint64_t)&type metadata for DatabaseRecordPersistence);
  uint64_t v72 = (void *)a1;
  uint64_t v66 = a4;
  MEMORY[0x270FA5388](v22);
  (*(void (**)(void))(v23 + 16))();
  uint64_t v80 = &type metadata for DatabaseRecordPersistence;
  uint64_t v81 = &off_26D670800;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_defaultActor_initialize();
  sub_223332E10(&v79, v21 + 112);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v82);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v85);
  unint64_t v68 = sub_2233FB9B8(1, 1, 0);
  uint64_t v24 = (uint64_t)v74;
  sub_22342C160();
  sub_22342C120();
  id v25 = objc_msgSend(self, sel_defaultManager);
  id v69 = v17;
  uint64_t v26 = a5;
  uint64_t v27 = (uint64_t)v25;
  id v28 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SyncTelemetryReporter()), sel_init);
  uint64_t v29 = sub_2233310D8((uint64_t)&v90, v91);
  uint64_t v67 = &v64;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (uint64_t *)((char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  uint64_t v33 = sub_2233310D8((uint64_t)&v88, v89);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (uint64_t *)((char *)&v64 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v36 + 16))(v35);
  uint64_t v37 = *v31;
  uint64_t v38 = *v35;
  uint64_t v39 = v68 & 0x1FF010101;
  uint64_t v40 = v71;
  swift_retain();
  *(void *)&long long v63 = 0;
  *((void *)&v63 + 1) = "messages-cloud-sync";
  *(void *)&long long v62 = v26;
  *((void *)&v62 + 1) = v92;
  uint64_t v41 = sub_223331890(v37, v24, (uint64_t)v69, v40, v38, (uint64_t)v87, v70, v73, v62, v63, 19, 2, v27, (uint64_t)v28, v21, v39);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v88);
  swift_release();
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v90);
  sub_2233256E0(0x6974617669746341, 0xED00002E2E2E676ELL);
  type metadata accessor for SyncCoordinator();
  uint64_t v42 = swift_retain();
  uint64_t v43 = v75;
  sub_2233C68D0(v42, (uint64_t)&off_26D671AD0);
  if (v43)
  {
    swift_release();
    sub_2233C5EB0(MEMORY[0x263F8EE78]);
    sub_22332581C();
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_22342C5D0();
    uint64_t v45 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v76, 1, 1, v44);
    sub_223322120((uint64_t)v72, (uint64_t)&v90);
    int v46 = (void *)swift_allocObject();
    v46[2] = 0;
    v46[3] = 0;
    sub_223332E10(&v90, (uint64_t)(v46 + 4));
    uint64_t v47 = v77;
    v46[9] = v41;
    v46[10] = v47;
    v46[11] = v78;
    swift_retain();
    sub_223331FA4(v47);
    sub_22332606C(v45, (uint64_t)&unk_267FA26E8, (uint64_t)v46);
    swift_release();
  }
  else
  {
    uint64_t v48 = v66;
    uint64_t v49 = v72;
    swift_release();
    sub_22332B22C("Reporting start to BackgroundSystemTasks for %s", (SEL *)&selRef_reportStartWithTaskName_processesInvolved_error_, 25);
    uint64_t v50 = sub_223321F60((void *)(v41 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v41 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    uint64_t v51 = *(void **)(*v50 + 56);
    if (v51)
    {
      objc_msgSend(*(id *)(*v50 + 56), sel_startChanges);
      uint64_t v52 = *sub_223321F60(v49, v49[3]);
      uint64_t v53 = swift_retain();
      sub_2233312FC(v53, v52);
      swift_release();
      objc_msgSend(v51, sel_commitChanges);
    }
    else
    {
      uint64_t v60 = *sub_223321F60(v49, v49[3]);
      uint64_t v61 = swift_retain();
      sub_2233312FC(v61, v60);
      swift_release();
    }
    sub_2233256E0(0x69756E69746E6F43, 0xEF636E795320676ELL);
    uint64_t v54 = sub_22342C5D0();
    uint64_t v55 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v76, 1, 1, v54);
    sub_223322120((uint64_t)v49, (uint64_t)&v90);
    sub_223322120(v48, (uint64_t)&v88);
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = 0;
    v56[3] = 0;
    v56[4] = v41;
    sub_223332E10(&v90, (uint64_t)(v56 + 5));
    sub_223332E10(&v88, (uint64_t)(v56 + 10));
    uint64_t v57 = v77;
    uint64_t v58 = v78;
    v56[15] = v77;
    v56[16] = v58;
    swift_retain();
    sub_223331FA4(v57);
    sub_2233C7088(v55, (uint64_t)&unk_267FA26F8, (uint64_t)v56);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2233256E0(uint64_t a1, uint64_t a2)
{
  sub_22331E640(&qword_26AD5EFA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22342F1E0;
  *(void *)(inited + 32) = 0x73736572676F7270;
  *(void *)(inited + 40) = 0xE800000000000000;
  sub_22342CBB0();
  swift_bridgeObjectRelease();
  sub_223321F60((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_2233C7210();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0xD000000000000010;
  *(void *)(inited + 56) = 0x8000000223436220;
  *(void *)(inited + 72) = v6;
  strcpy((char *)(inited + 80), "subtextLabel");
  *(void *)(inited + 120) = v6;
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(void *)(inited + 96) = a1;
  *(void *)(inited + 104) = a2;
  swift_bridgeObjectRetain();
  sub_2233C5EB0(inited);
  sub_22332581C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22332581C()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_notifiers);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_22342CD40();
  uint64_t v2 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = (void *)MEMORY[0x223CB54A0](v4, v1);
      }
      else
      {
        uint64_t v5 = *(void **)(v1 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      ++v4;
      uint64_t v6 = (void *)sub_22342C260();
      objc_msgSend(v5, sel_notifyClientsOfProgress_, v6);
      swift_unknownObjectRelease();
    }
    while (v2 != v4);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_22332595C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  return MEMORY[0x270FA2498](sub_223325980, 0, 0);
}

uint64_t sub_223325980()
{
  uint64_t v26 = v0;
  uint64_t v1 = qword_26AD63258;
  if (!qword_26AD63258)
  {
    uint64_t v13 = sub_223321F60((void *)(v0[11] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v0[11] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    uint64_t v14 = *(void **)(*v13 + 56);
    if (v14)
    {
      objc_msgSend(*(id *)(*v13 + 56), sel_startChanges);
      swift_retain();
      sub_223422D74(1);
      objc_msgSend(v14, sel_setSyncJobStateWithState_, 0);
      swift_release();
      objc_msgSend(v14, sel_commitChanges);
      id v12 = (int *)v0[12];
      if (!v12) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    swift_retain();
    sub_223422D74(1);
    swift_release();
    id v12 = (int *)v0[12];
    if (v12) {
      goto LABEL_11;
    }
LABEL_15:
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  uint64_t v2 = qword_26AD5F0D8;
  swift_unknownObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[10];
  uint64_t v4 = sub_22342C200();
  sub_223323374(v4, (uint64_t)qword_26AD63108);
  sub_223322120(v3, (uint64_t)(v0 + 2));
  swift_unknownObjectRetain_n();
  swift_retain_n();
  uint64_t v5 = sub_22342C1E0();
  os_log_type_t v6 = sub_22342C700();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[11];
  if (!v7)
  {
    swift_unknownObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)(v0 + 2));
    swift_unknownObjectRelease_n();
    swift_release();
    swift_release();

    id v12 = (int *)v0[12];
    if (v12) {
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  uint64_t v9 = swift_slowAlloc();
  uint64_t v21 = swift_slowAlloc();
  uint64_t v23 = v21;
  *(_DWORD *)uint64_t v9 = 136315650;
  sub_223321F60(v0 + 2, v0[5]);
  unint64_t v10 = sub_2233C7210();
  v0[7] = sub_22339BC14(v10, v11, &v23);
  sub_22342CA10();
  swift_bridgeObjectRelease();
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)(v0 + 2));
  *(_WORD *)(v9 + 12) = 2080;
  uint64_t v24 = 0x2E636E7973;
  unint64_t v25 = 0xE500000000000000;
  sub_223321F60((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_2233C7210();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  sub_22342C3B0();
  sub_22342C170();
  sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
  sub_22342CF10();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  v0[8] = sub_22339BC14(v24, v25, &v23);
  sub_22342CA10();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  *(_WORD *)(v9 + 22) = 2080;
  uint64_t v24 = 0x2E636E7973;
  unint64_t v25 = 0xE500000000000000;
  sub_223321F60((void *)(v8 + 16), *(void *)(v8 + 40));
  sub_2233C7210();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  sub_22342C3B0();
  sub_22342CF10();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  v0[9] = sub_22339BC14(v24, v25, &v23);
  sub_22342CA10();
  swift_bridgeObjectRelease();
  swift_release_n();
  _os_log_impl(&dword_223317000, v5, v6, "Tried to kick %s but another sync was already going %s %s", (uint8_t *)v9, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x223CB62D0](v21, -1, -1);
  MEMORY[0x223CB62D0](v9, -1, -1);

  swift_unknownObjectRelease();
  id v12 = (int *)v0[12];
  if (!v12) {
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v15 = v0[11];
  sub_223332C04();
  uint64_t v16 = swift_allocError();
  v0[14] = v16;
  *id v17 = 1;
  uint64_t v22 = (int *)((char *)v12 + *v12);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[15] = v18;
  void *v18 = v0;
  v18[1] = sub_223325F5C;
  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v22)(v15, &off_26D671AD0, 1, v16);
}

uint64_t sub_223325F5C()
{
  uint64_t v1 = *(void **)(*v0 + 112);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_22332606C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22342C5D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22342C5C0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2233232B8(a1, &qword_26AD5E1C8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22342C560();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_223326218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[12] = a4;
  type metadata accessor for HandleErrorOutcome();
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2233262CC, 0, 0);
}

uint64_t sub_2233262CC()
{
  uint64_t v26 = v0;
  sub_2233256E0(0x2E676E696E6E7552, 0xEA00000000002E2ELL);
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = sub_22342C200();
  v0[20] = sub_223323374(v2, (uint64_t)qword_26AD63108);
  sub_223322120(v1, (uint64_t)(v0 + 2));
  swift_retain_n();
  uint64_t v3 = sub_22342C1E0();
  os_log_type_t v4 = sub_22342C720();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v25[0] = v24;
    *(_DWORD *)uint64_t v5 = 136315394;
    sub_223321F60(v0 + 2, v0[5]);
    unint64_t v6 = sub_2233C7210();
    v0[10] = sub_22339BC14(v6, v7, v25);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)(v0 + 2));
    *(_WORD *)(v5 + 12) = 2080;
    sub_22342C170();
    sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    uint64_t v8 = sub_22342CF10();
    v0[11] = sub_22339BC14(v8, v9, v25);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_223317000, v3, v4, "Running handler for %s %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v24, -1, -1);
    MEMORY[0x223CB62D0](v5, -1, -1);
  }
  else
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)(v0 + 2));
    swift_release_n();
  }

  uint64_t v10 = v0[19];
  uint64_t v11 = sub_22331E640(&qword_26AD5ED18);
  v0[21] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v0[22] = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 2, 2, v11);
  id v13 = objc_msgSend(self, sel_sharedInstance);
  if (v13)
  {
    uint64_t v14 = v13;
    unsigned int v15 = objc_msgSend(v13, sel_isInternalInstall);

    if (v15) {
      sub_223332208((void *)(v0[12] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), 0xD000000000000012, 0x8000000223436110);
    }
  }
  uint64_t v16 = (void *)v0[13];
  uint64_t v17 = v16[3];
  uint64_t v18 = v16[4];
  sub_223321F60(v16, v17);
  uint64_t v19 = *(void *)(*(void *)(v18 + 8) + 8);
  uint64_t v23 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v19 + 40) + **(int **)(v19 + 40));
  uint64_t v20 = (void *)swift_task_alloc();
  v0[23] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_223326854;
  uint64_t v21 = v0[12];
  return v23(v21, &off_26D671AD0, v17, v19);
}

uint64_t sub_223326854()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223326950, 0, 0);
}

uint64_t sub_223326950()
{
  sub_223321F60(*(void **)(v0 + 104), *(void *)(*(void *)(v0 + 104) + 24));
  os_log_type_t v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2700 + dword_267FA2700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  void *v1 = v0;
  v1[1] = sub_223326A10;
  uint64_t v2 = *(void *)(v0 + 96);
  return v4(v2, (uint64_t)&off_26D671AD0);
}

uint64_t sub_223326A10(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 200) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v6 = sub_223327D58;
  }
  else
  {
    *(unsigned char *)(v5 + 296) = a2;
    unint64_t v6 = sub_223326B38;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_223326B38()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_223321F60(v1, v2);
  uint64_t v4 = *(void *)(*(void *)(v3 + 8) + 8);
  uint64_t v8 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 56) + **(int **)(v4 + 56));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_223326C50;
  uint64_t v6 = v0[12];
  return v8(v6, &off_26D671AD0, v2, v4);
}

uint64_t sub_223326C50()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223326D4C, 0, 0);
}

uint64_t sub_223326D4C()
{
  char v1 = *(unsigned char *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 200);
  *(void *)(v0 + 216) = 0;
  *(unsigned char *)(v0 + 297) = v1 & 1;
  uint64_t v3 = *(void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_osActivity);
  swift_beginAccess();
  swift_retain();
  os_activity_scope_leave((os_activity_scope_state_t)(v3 + 24));
  swift_endAccess();
  swift_release();
  sub_2233C5EB0(MEMORY[0x263F8EE78]);
  sub_22332581C();
  swift_bridgeObjectRelease();
  type metadata accessor for SyncCoordinator();
  sub_2233C6CAC();
  *(void *)(v0 + 224) = v2;
  if (v2)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t))((char *)&dword_267FA2D28 + dword_267FA2D28);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_223327F38;
    return v29(v2);
  }
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 152);
  sub_22332B22C("Reporting stopped to BackgroundSystemTasks for %s", (SEL *)&selRef_reportStoppedWithTaskName_processesInvolved_error_, 26);
  sub_2233321A4(v8, v9);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 2, v6);
  if (v10)
  {
    if (v10 == 1)
    {
      uint64_t v11 = *(int **)(v0 + 120);
      if (v11)
      {
        uint64_t v12 = *(void *)(v0 + 96);
        uint64_t v30 = (int *)((char *)v11 + *v11);
        id v13 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v13;
        void *v13 = v0;
        v13[1] = sub_223327380;
        uint64_t v14 = *(void *)(v0 + 216);
        uint64_t v15 = v12;
        uint64_t v16 = 64;
LABEL_13:
        return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v30)(v15, &off_26D671AD0, v16, v14);
      }
    }
    else
    {
      uint64_t v20 = *(int **)(v0 + 120);
      if (v20)
      {
        uint64_t v21 = *(unsigned __int8 *)(v0 + 297);
        uint64_t v22 = *(void *)(v0 + 96);
        uint64_t v30 = (int *)((char *)v20 + *v20);
        uint64_t v23 = (void *)swift_task_alloc();
        *(void *)(v0 + 248) = v23;
        *uint64_t v23 = v0;
        v23[1] = sub_223327508;
        uint64_t v14 = *(void *)(v0 + 216);
        uint64_t v15 = v22;
        uint64_t v16 = v21;
        goto LABEL_13;
      }
    }
    uint64_t v24 = *(void **)(v0 + 216);
    sub_2233320E4(*(void *)(v0 + 152));
  }
  else
  {
    uint64_t v17 = *(int **)(v0 + 120);
    if (v17)
    {
      uint64_t v18 = *(void *)(v0 + 96);
      uint64_t v30 = (int *)((char *)v17 + *v17);
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v19;
      void *v19 = v0;
      v19[1] = sub_2233271BC;
      uint64_t v14 = *(void *)(v0 + 216);
      uint64_t v15 = v18;
      uint64_t v16 = 128;
      goto LABEL_13;
    }
    unint64_t v25 = *(void **)(v0 + 216);
    sub_2233320E4(*(void *)(v0 + 152));

    uint64_t v26 = *(void *)(v0 + 144);
    uint64_t v27 = sub_22342C130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_2233271BC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233272B8, 0, 0);
}

uint64_t sub_2233272B8()
{
  uint64_t v1 = *(void *)(v0 + 152);

  sub_2233320E4(v1);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = sub_22342C130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_223327380()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22332747C, 0, 0);
}

uint64_t sub_22332747C()
{
  uint64_t v1 = *(void *)(v0 + 152);

  sub_2233320E4(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_223327508()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223334A64, 0, 0);
}

uint64_t sub_223327604()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[34] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2233277B4;
  uint64_t v4 = v1[32];
  uint64_t v5 = v1[17];
  uint64_t v6 = v1[16];
  uint64_t v7 = v1[15];
  uint64_t v8 = v1[14];
  uint64_t v9 = v1[12];
  return sub_223329264(v5, v9, (uint64_t)&off_26D671AD0, v8, v7, v6, v4);
}

uint64_t sub_2233277B4()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_223327E98;
  }
  else {
    uint64_t v2 = sub_2233278C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2233278C8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);

  sub_2233320E4(v1);
  sub_223332140(v2, v1);
  uint64_t v3 = *(void *)(v0 + 280);
  *(void *)(v0 + 216) = *(void *)(v0 + 256);
  *(unsigned char *)(v0 + 297) = 0;
  uint64_t v4 = *(void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_osActivity);
  swift_beginAccess();
  swift_retain();
  os_activity_scope_leave((os_activity_scope_state_t)(v4 + 24));
  swift_endAccess();
  swift_release();
  sub_2233C5EB0(MEMORY[0x263F8EE78]);
  sub_22332581C();
  swift_bridgeObjectRelease();
  type metadata accessor for SyncCoordinator();
  sub_2233C6CAC();
  *(void *)(v0 + 224) = v3;
  if (v3)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t))((char *)&dword_267FA2D28 + dword_267FA2D28);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_223327F38;
    return v30(v3);
  }
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v10 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 152);
  sub_22332B22C("Reporting stopped to BackgroundSystemTasks for %s", (SEL *)&selRef_reportStoppedWithTaskName_processesInvolved_error_, 26);
  sub_2233321A4(v9, v10);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 2, v7);
  if (v11)
  {
    if (v11 == 1)
    {
      uint64_t v12 = *(int **)(v0 + 120);
      if (v12)
      {
        uint64_t v13 = *(void *)(v0 + 96);
        uint64_t v31 = (int *)((char *)v12 + *v12);
        uint64_t v14 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v14;
        void *v14 = v0;
        v14[1] = sub_223327380;
        uint64_t v15 = *(void *)(v0 + 216);
        uint64_t v16 = v13;
        uint64_t v17 = 64;
LABEL_13:
        return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v31)(v16, &off_26D671AD0, v17, v15);
      }
    }
    else
    {
      uint64_t v21 = *(int **)(v0 + 120);
      if (v21)
      {
        uint64_t v22 = *(unsigned __int8 *)(v0 + 297);
        uint64_t v23 = *(void *)(v0 + 96);
        uint64_t v31 = (int *)((char *)v21 + *v21);
        uint64_t v24 = (void *)swift_task_alloc();
        *(void *)(v0 + 248) = v24;
        *uint64_t v24 = v0;
        v24[1] = sub_223327508;
        uint64_t v15 = *(void *)(v0 + 216);
        uint64_t v16 = v23;
        uint64_t v17 = v22;
        goto LABEL_13;
      }
    }
    unint64_t v25 = *(void **)(v0 + 216);
    sub_2233320E4(*(void *)(v0 + 152));
  }
  else
  {
    uint64_t v18 = *(int **)(v0 + 120);
    if (v18)
    {
      uint64_t v19 = *(void *)(v0 + 96);
      uint64_t v31 = (int *)((char *)v18 + *v18);
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_2233271BC;
      uint64_t v15 = *(void *)(v0 + 216);
      uint64_t v16 = v19;
      uint64_t v17 = 128;
      goto LABEL_13;
    }
    uint64_t v26 = *(void **)(v0 + 216);
    sub_2233320E4(*(void *)(v0 + 152));

    uint64_t v27 = *(void *)(v0 + 144);
    uint64_t v28 = sub_22342C130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_223327D58()
{
  uint64_t v1 = (void *)v0[25];
  v0[32] = v1;
  uint64_t v2 = (void *)v0[13];
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_223321F60(v2, v3);
  uint64_t v5 = *(void *)(*(void *)(v4 + 8) + 8);
  uint64_t v6 = *(int **)(v5 + 56);
  id v7 = v1;
  int v11 = (int *)((char *)v6 + *v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[33] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_223327604;
  uint64_t v9 = v0[12];
  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v11)(v9, &off_26D671AD0, v3, v5);
}

uint64_t sub_223327E98()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = v0[19];

  sub_2233320E4(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_223327F38()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223328034, 0, 0);
}

uint64_t sub_223328034()
{
  uint64_t v1 = sub_22342C1E0();
  os_log_type_t v2 = sub_22342C710();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_223317000, v1, v2, "Failed to clear active sync state!", v3, 2u);
    MEMORY[0x223CB62D0](v3, -1, -1);
  }

  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 152);
  sub_22332B22C("Reporting stopped to BackgroundSystemTasks for %s", (SEL *)&selRef_reportStoppedWithTaskName_processesInvolved_error_, 26);
  sub_2233321A4(v6, v7);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 2, v4);
  if (v8)
  {
    if (v8 == 1)
    {
      uint64_t v9 = *(int **)(v0 + 120);
      if (v9)
      {
        uint64_t v10 = *(void *)(v0 + 96);
        uint64_t v28 = (int *)((char *)v9 + *v9);
        int v11 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v11;
        *int v11 = v0;
        v11[1] = sub_223327380;
        uint64_t v12 = *(void *)(v0 + 216);
        uint64_t v13 = v10;
        uint64_t v14 = 64;
LABEL_11:
        return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v28)(v13, &off_26D671AD0, v14, v12);
      }
    }
    else
    {
      uint64_t v18 = *(int **)(v0 + 120);
      if (v18)
      {
        uint64_t v19 = *(unsigned __int8 *)(v0 + 297);
        uint64_t v20 = *(void *)(v0 + 96);
        uint64_t v28 = (int *)((char *)v18 + *v18);
        uint64_t v21 = (void *)swift_task_alloc();
        *(void *)(v0 + 248) = v21;
        void *v21 = v0;
        v21[1] = sub_223327508;
        uint64_t v12 = *(void *)(v0 + 216);
        uint64_t v13 = v20;
        uint64_t v14 = v19;
        goto LABEL_11;
      }
    }
    uint64_t v23 = *(void **)(v0 + 216);
    sub_2233320E4(*(void *)(v0 + 152));
  }
  else
  {
    uint64_t v15 = *(int **)(v0 + 120);
    if (v15)
    {
      uint64_t v16 = *(void *)(v0 + 96);
      uint64_t v28 = (int *)((char *)v15 + *v15);
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_2233271BC;
      uint64_t v12 = *(void *)(v0 + 216);
      uint64_t v13 = v16;
      uint64_t v14 = 128;
      goto LABEL_11;
    }
    uint64_t v24 = *(void **)(v0 + 216);
    sub_2233320E4(*(void *)(v0 + 152));

    uint64_t v25 = *(void *)(v0 + 144);
    uint64_t v26 = sub_22342C130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_2233283F8(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  return MEMORY[0x270FA2498](sub_22332841C, 0, 0);
}

uint64_t sub_22332841C()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[10];
  uint64_t v2 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
  v0[13] = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
  sub_223321F60((void *)(v1 + v2), *(void *)(v1 + v2 + 24));
  if (sub_223424450(2, 0))
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_22342C200();
    sub_223323374(v3, (uint64_t)qword_26AD63108);
    uint64_t v4 = sub_22342C1E0();
    os_log_type_t v5 = sub_22342C700();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_223317000, v4, v5, "Messages in iCloud Exit Record present in cache", v6, 2u);
      MEMORY[0x223CB62D0](v6, -1, -1);
    }

    goto LABEL_12;
  }
  if ((sub_223424450(1, 0) & 1) == 0)
  {
LABEL_12:
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22342C200();
    sub_223323374(v15, (uint64_t)qword_26AD63108);
    swift_retain_n();
    uint64_t v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C720();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v31 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      unint64_t v20 = sub_2233C7210();
      v0[2] = sub_22339BC14(v20, v21, &v31);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_223317000, v16, v17, "%s Early Exit from task, Messages in iCloud not enabled.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v19, -1, -1);
      MEMORY[0x223CB62D0](v18, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    sub_223332C04();
    swift_allocError();
    *uint64_t v22 = 0;
    swift_willThrow();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  sub_22341B6CC(0, 0xE000000000000000, 0, *(unsigned char *)(v0[12] + 98));
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_22342C200();
  v0[14] = sub_223323374(v7, (uint64_t)qword_26AD63108);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  int v8 = sub_22342C1E0();
  os_log_type_t v9 = sub_22342C720();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = v0[10];
  if (v10)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v30 = v28;
    *(_DWORD *)uint64_t v12 = 136315394;
    unint64_t v13 = sub_2233C7210();
    v0[8] = sub_22339BC14(v13, v14, &v30);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v31 = 0x2E636E7973;
    unint64_t v32 = 0xE500000000000000;
    sub_223321F60((void *)(v11 + 16), *(void *)(v11 + 40));
    sub_2233C7210();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    sub_22342C170();
    sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    sub_22342CF10();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    v0[9] = sub_22339BC14(v31, v32, &v30);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_223317000, v8, v9, "%s starting %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v28, -1, -1);
    MEMORY[0x223CB62D0](v12, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_unknownObjectRelease_n();
  }

  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2720 + dword_267FA2720);
  uint64_t v25 = (void *)swift_task_alloc();
  v0[15] = v25;
  void *v25 = v0;
  v25[1] = sub_223328A74;
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[10];
  return v29(v27, v26);
}

uint64_t sub_223328A74(uint64_t a1, char a2)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 128) = a1;
  *(unsigned char *)(v4 + 136) = a2;
  swift_task_dealloc();
  if (v2)
  {
    os_log_type_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_223328BAC, 0, 0);
  }
}

uint64_t sub_223328BAC()
{
  uint64_t v35 = v0;
  swift_retain_n();
  swift_unknownObjectRetain_n();
  uint64_t v1 = sub_22342C1E0();
  os_log_type_t v2 = sub_22342C720();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = *(unsigned char *)(v0 + 136);
    uint64_t v29 = *(void *)(v0 + 128);
    os_log_type_t type = v2;
    uint64_t v28 = *(void *)(v0 + 80);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v32 = v30;
    *(_DWORD *)uint64_t v4 = 136315906;
    unint64_t v5 = sub_2233C7210();
    *(void *)(v0 + 32) = sub_22339BC14(v5, v6, &v32);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2080;
    if (v3) {
      uint64_t v7 = 0x7972746572;
    }
    else {
      uint64_t v7 = 1701736292;
    }
    if (v3) {
      unint64_t v8 = 0xE500000000000000;
    }
    else {
      unint64_t v8 = 0xE400000000000000;
    }
    *(void *)(v0 + 40) = sub_22339BC14(v7, v8, &v32);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 2080;
    uint64_t v33 = 0x2E636E7973;
    unint64_t v34 = 0xE500000000000000;
    sub_223321F60((void *)(v28 + 16), *(void *)(v28 + 40));
    sub_2233C7210();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    sub_22342C170();
    sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    sub_22342CF10();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 48) = sub_22339BC14(v33, v34, &v32);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v4 + 32) = 2048;
    *(void *)(v0 + 56) = v29;
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v1, type, "%s finished %s %s, result %lld", (uint8_t *)v4, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v30, -1, -1);
    MEMORY[0x223CB62D0](v4, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_unknownObjectRelease_n();
  }

  if (*(unsigned char *)(v0 + 136))
  {
    char v9 = sub_22342CF60();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_29;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRetain_n();
  BOOL v10 = sub_22342C1E0();
  os_log_type_t v11 = sub_22342C720();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 80);
  if (v12)
  {
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v33 = v15;
    *(_DWORD *)unint64_t v14 = 136315138;
    uint64_t v16 = *(unsigned __int8 *)(*sub_223321F60((void *)(v13 + 16), *(void *)(v13 + 40)) + 17);
    unint64_t v17 = 0xE400000000000000;
    uint64_t v18 = 1953719636;
    switch(v16)
    {
      case 1:
        unint64_t v17 = 0xE800000000000000;
        uint64_t v18 = 0x6C6C69666B636142;
        break;
      case 2:
        unint64_t v17 = 0xE800000000000000;
        uint64_t v18 = 0x6369646F69726550;
        break;
      case 3:
        unint64_t v17 = 0xE600000000000000;
        uint64_t v18 = 0x70756B636142;
        break;
      case 4:
        unint64_t v17 = 0x8000000223435B00;
        uint64_t v18 = 0xD000000000000017;
        break;
      case 5:
        uint64_t v18 = 0x6C6E4F746E756F43;
        goto LABEL_24;
      case 6:
        unint64_t v17 = 0xED00006465746169;
        uint64_t v18 = 0x74696E4972657355;
        break;
      case 7:
        uint64_t v18 = 0x7274656D656C6554;
LABEL_24:
        unint64_t v17 = 0xE900000000000079;
        break;
      case 8:
        unint64_t v17 = 0xEE007372656C6767;
        uint64_t v18 = 0x6172745374736554;
        break;
      case 9:
        break;
      default:
        unint64_t v17 = 0xE700000000000000;
        uint64_t v18 = 0x6C616974696E49;
        break;
    }
    *(void *)(v0 + 24) = sub_22339BC14(v18, v17, &v33);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_223317000, v10, v11, "Reporting phase completed: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v15, -1, -1);
    MEMORY[0x223CB62D0](v14, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  uint64_t v19 = *(void *)(v0 + 80);
  unint64_t v20 = sub_223321F60((void *)(v19 + *(void *)(v0 + 104)), *(void *)(v19 + *(void *)(v0 + 104) + 24));
  if (!*(unsigned char *)(*sub_223321F60((void *)(v19 + 16), *(void *)(v19 + 40)) + 17)) {
    objc_msgSend(*(id *)(*v20 + 16), sel_setBool_forKey_, 1, *MEMORY[0x263F4AA58]);
  }
LABEL_29:
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void (**)(uint64_t))(v21 + 104);
  if (v22)
  {
    uint64_t v23 = swift_retain();
    v22(v23);
    sub_223332C58((uint64_t)v22);
    uint64_t v21 = *(void *)(v0 + 96);
  }
  sub_22341B6CC(0, 0xE000000000000000, 0, *(unsigned char *)(v21 + 99));
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v25 = *(void *)(v0 + 128);
  uint64_t v26 = *(unsigned char *)(v0 + 136) & 1;
  return v24(v25, v26);
}

uint64_t sub_223329264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[17] = a6;
  v7[18] = a7;
  v7[15] = a4;
  v7[16] = a5;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  uint64_t v9 = sub_22342C130();
  v7[19] = v9;
  v7[20] = *(void *)(v9 - 8);
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  sub_22331E640((uint64_t *)&unk_26AD5ED20);
  v7[25] = swift_task_alloc();
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  v7[29] = swift_task_alloc();
  v7[30] = swift_task_alloc();
  v7[31] = swift_task_alloc();
  v7[32] = swift_task_alloc();
  type metadata accessor for HandleErrorOutcome();
  v7[33] = swift_task_alloc();
  uint64_t v10 = dword_267FA2D28;
  os_log_type_t v11 = (void *)swift_task_alloc();
  v7[34] = v11;
  *os_log_type_t v11 = v7;
  v11[1] = sub_223329490;
  return ((uint64_t (*)(uint64_t))((char *)&dword_267FA2D28 + v10))(a7);
}

uint64_t sub_223329490()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233295B8, 0, 0);
}

uint64_t sub_2233295B8()
{
  v174 = v0;
  uint64_t v173 = *MEMORY[0x263EF8340];
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[13];
  uint64_t v6 = sub_22331E640(&qword_26AD5ED18);
  v0[35] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v0[36] = v8;
  v0[37] = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v159 = v8;
  uint64_t v161 = v6;
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v1, 2, 2);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v0[38] = v9;
  v0[39] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v9(v2, 1, 1, v3);
  sub_223324984();
  uint64_t v10 = (void *)sub_22342C9B0();
  uint64_t v166 = (void *)(v5 + 16);
  os_log_type_t v11 = *(void **)(*sub_223321F60((void *)(v5 + 16), *(void *)(v5 + 40)) + 24);
  swift_unknownObjectRetain();
  BOOL v12 = (void *)sub_22342BF20();
  uint64_t v169 = v5;
  uint64_t v13 = *(void *)(v5 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_attemptCount);
  v0[2] = v10;
  unint64_t v14 = v0 + 2;
  v0[40] = v13;
  v165 = (char *)objc_msgSend(v11, sel_responseForError_attempt_retryInterval_, v12);
  swift_unknownObjectRelease();

  uint64_t v15 = (void *)v0[2];
  v0[41] = v15;
  id v155 = v15;

  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)v0[18];
  uint64_t v17 = sub_22342C200();
  v0[42] = sub_223323374(v17, (uint64_t)qword_26AD63108);
  swift_unknownObjectRetain_n();
  id v18 = v16;
  swift_unknownObjectRetain();
  id v19 = v16;
  unint64_t v20 = sub_22342C1E0();
  os_log_type_t v21 = sub_22342C700();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = (void *)v0[18];
  uint64_t v156 = v9;
  if (v22)
  {
    uint64_t v24 = swift_slowAlloc();
    v152 = (void *)swift_slowAlloc();
    uint64_t v153 = swift_slowAlloc();
    uint64_t v171 = v153;
    *(_DWORD *)uint64_t v24 = 136315906;
    sub_223321F60(v166, *(void *)(v5 + 40));
    unint64_t v25 = sub_2233C7210();
    v0[8] = sub_22339BC14(v25, v26, &v171);
    sub_22342CA10();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2112;
    id v27 = v23;
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v28;
    sub_22342CA10();
    void *v152 = v28;

    *(_WORD *)(v24 + 22) = 2048;
    uint64_t v29 = v165;
    v0[10] = v165;
    sub_22342CA10();
    *(_WORD *)(v24 + 32) = 2080;
    sub_22342C170();
    sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    uint64_t v30 = sub_22342CF10();
    v0[11] = sub_22339BC14(v30, v31, &v171);
    unint64_t v14 = v0 + 2;
    sub_22342CA10();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v20, v21, "syncJob %s failed with %@, response %ld %s", (uint8_t *)v24, 0x2Au);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v152, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v153, -1, -1);
    MEMORY[0x223CB62D0](v24, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    uint64_t v29 = v165;
  }
  switch((unint64_t)v29)
  {
    case 0uLL:
    case 1uLL:
      goto LABEL_10;
    case 2uLL:
      uint64_t v33 = v0[30];
      uint64_t v32 = v0[31];
      uint64_t v34 = v0[20];
      uint64_t v163 = v0[19];
      uint64_t v35 = (void *)(v0[13] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
      uint64_t v36 = v35[3];
      uint64_t v37 = v35[4];
      sub_223321F60(v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v37 + 40))(v36, v37);
      uint64_t v38 = sub_223321F60(v166, *(void *)(v169 + 40));
      sub_223321F60((void *)(*v38 + 32), *(void *)(*v38 + 56));
      sub_2233808A8(v32);
      sub_223332B54(v32, v33);
      int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v163);
      uint64_t v40 = v0[31];
      uint64_t v41 = v0[32];
      uint64_t v42 = v0[30];
      if (v39 == 1)
      {
        uint64_t v43 = v0[29];
        uint64_t v44 = v0[19];
        sub_2233232B8(v0[30], (uint64_t *)&unk_26AD5ED20);
        objc_msgSend(v155, sel_doubleValue);
        sub_22342C0D0();
        sub_2233232B8(v40, (uint64_t *)&unk_26AD5ED20);
        sub_2233232B8(v41, (uint64_t *)&unk_26AD5ED20);
        int v45 = 1;
        v156(v43, 0, 1, v44);
        sub_223332AEC(v43, v41);
        goto LABEL_44;
      }
      uint64_t v83 = v0[24];
      uint64_t v84 = v0[19];
      uint64_t v85 = v0[20];
      sub_2233232B8(v0[31], (uint64_t *)&unk_26AD5ED20);
      sub_2233232B8(v41, (uint64_t *)&unk_26AD5ED20);
      uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 32);
      v86(v83, v42, v84);
      v86(v41, v83, v84);
      int v45 = 1;
      uint64_t v87 = v41;
      uint64_t v88 = v84;
      goto LABEL_39;
    case 3uLL:
      uint64_t v57 = (void *)(v0[13] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
      uint64_t v58 = v57[3];
      uint64_t v59 = v57[4];
      sub_223321F60(v57, v58);
      uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v58, v59);
      swift_unknownObjectRelease();
      if (!v60)
      {
        uint64_t v103 = sub_22342C1E0();
        os_log_type_t v104 = sub_22342C700();
        if (os_log_type_enabled(v103, v104))
        {
          uint64_t v105 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v105 = 0;
          _os_log_impl(&dword_223317000, v103, v104, "No activity to defer for sync, rescheduling", v105, 2u);
          MEMORY[0x223CB62D0](v105, -1, -1);
        }

        goto LABEL_43;
      }
      uint64_t v61 = v57[3];
      uint64_t v62 = v57[4];
      sub_223321F60(v57, v61);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v62 + 32))(v61, v62) & 1) == 0)
      {
LABEL_43:
        uint64_t v106 = v0[32];
        uint64_t v107 = v0[29];
        uint64_t v108 = v0[19];
        objc_msgSend(v155, sel_doubleValue);
        sub_22342C0D0();
        sub_2233232B8(v106, (uint64_t *)&unk_26AD5ED20);
        int v45 = 1;
        v156(v107, 0, 1, v108);
        sub_223332AEC(v107, v106);
        goto LABEL_44;
      }
      uint64_t v63 = v0[33];
      sub_2233320E4(v63);
      v159(v63, 1, 2, v161);
      unsigned int v64 = *(unsigned __int8 *)(*sub_223321F60(v166, *(void *)(v5 + 40)) + 17) - 1;
      if (v64 > 5 || ((0x2Fu >> v64) & 1) == 0)
      {
LABEL_31:
        int v45 = 0;
        goto LABEL_44;
      }
      uint64_t v65 = (void *)swift_task_alloc();
      v0[44] = v65;
      *uint64_t v65 = v0;
      v65[1] = sub_22332B104;
      uint64_t v67 = v0[13];
      uint64_t v66 = v0[14];
      char v180 = 0x575356555453uLL >> (8 * v64);
      uint64_t v179 = 454;
      char v178 = 2;
      uint64_t v177 = 53;
      v176 = "handleJobError(context:persistence:completion:error:)";
      return sub_223400994(v67, v66, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/Protocols/SyncJobScheduler.swift", 108, 2);
    case 4uLL:
      uint64_t v68 = v0[13];
      uint64_t v69 = *(void *)(v68 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 24);
      uint64_t v70 = *(void *)(v68 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 32);
      sub_223321F60((void *)(v68 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity), v69);
      (*(void (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
      sub_223321F60((void *)(v68 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v68 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
      LOBYTE(v171) = *(unsigned char *)(*sub_223321F60(v166, *(void *)(v5 + 40)) + 17);
      sub_223423940((uint64_t)&v171);
      goto LABEL_31;
    case 5uLL:
      uint64_t v71 = v0[13];
      uint64_t v72 = *(void *)(v71 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 24);
      uint64_t v73 = *(void *)(v71 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 32);
      sub_223321F60((void *)(v71 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity), v72);
      (*(void (**)(uint64_t, uint64_t))(v73 + 40))(v72, v73);
      sub_223321F60((void *)(v71 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v71 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
      LOBYTE(v171) = *(unsigned char *)(*sub_223321F60(v166, *(void *)(v5 + 40)) + 17);
      sub_223423954((uint64_t)&v171);
      goto LABEL_31;
    case 6uLL:
      uint64_t v74 = v0[13];
      uint64_t v75 = *(void *)(v74 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 24);
      uint64_t v76 = *(void *)(v74 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 32);
      sub_223321F60((void *)(v74 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity), v75);
      (*(void (**)(uint64_t, uint64_t))(v76 + 40))(v75, v76);
      uint64_t v77 = *(void **)(*sub_223321F60((void *)(v74 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v74 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 56);
      if (v77) {
        objc_msgSend(v77, sel_deleteAllCloudKitData);
      }
      goto LABEL_31;
    default:
      if ((unint64_t)(v29 - 258) >= 2)
      {
        swift_unknownObjectRetain_n();
        uint64_t v78 = sub_22342C1E0();
        os_log_type_t v79 = sub_22342C700();
        if (os_log_type_enabled(v78, v79))
        {
          uint64_t v80 = v29;
          uint64_t v81 = swift_slowAlloc();
          uint64_t v82 = swift_slowAlloc();
          uint64_t v170 = v82;
          *(_DWORD *)uint64_t v81 = 134218242;
          v14[4] = v80;
          sub_22342CA10();
          *(_WORD *)(v81 + 12) = 2080;
          uint64_t v171 = 0x2E636E7973;
          unint64_t v172 = 0xE500000000000000;
          sub_223321F60(v166, *(void *)(v5 + 40));
          sub_2233C7210();
          sub_22342C3B0();
          swift_bridgeObjectRelease();
          sub_22342C3B0();
          sub_22342C170();
          sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
          sub_22342CF10();
          sub_22342C3B0();
          swift_bridgeObjectRelease();
          v14[5] = sub_22339BC14(v171, v172, &v170);
          sub_22342CA10();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_223317000, v78, v79, "Scheduler got unexpected error response %ld for %s", (uint8_t *)v81, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x223CB62D0](v82, -1, -1);
          MEMORY[0x223CB62D0](v81, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        uint64_t v90 = v0[27];
        uint64_t v89 = v0[28];
        uint64_t v91 = v0[19];
        uint64_t v92 = v0[20];
        uint64_t v93 = (void *)(v0[13] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
        uint64_t v94 = v93[3];
        uint64_t v95 = v93[4];
        sub_223321F60(v93, v94);
        (*(void (**)(uint64_t, uint64_t))(v95 + 40))(v94, v95);
        uint64_t v96 = sub_223321F60(v166, *(void *)(v169 + 40));
        sub_223321F60((void *)(*v96 + 32), *(void *)(*v96 + 56));
        sub_2233808A8(v89);
        sub_223332AEC(v89, v90);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91) == 1)
        {
          sub_2233232B8(v0[27], (uint64_t *)&unk_26AD5ED20);
          int v45 = 0;
        }
        else
        {
          uint64_t v97 = v0[32];
          uint64_t v98 = v0[27];
          uint64_t v99 = v0[23];
          uint64_t v100 = v0[19];
          uint64_t v101 = v0[20];
          sub_2233232B8(v97, (uint64_t *)&unk_26AD5ED20);
          uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32);
          v102(v99, v98, v100);
          v102(v97, v99, v100);
          int v45 = 1;
          uint64_t v87 = v97;
          uint64_t v88 = v100;
LABEL_39:
          v156(v87, 0, 1, v88);
        }
      }
      else
      {
LABEL_10:
        uint64_t v46 = v0[33];
        uint64_t v47 = v0[13];
        uint64_t v48 = *(void *)(v47 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 24);
        uint64_t v49 = *(void *)(v47 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 32);
        sub_223321F60((void *)(v47 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity), v48);
        (*(void (**)(uint64_t, uint64_t))(v49 + 40))(v48, v49);
        sub_2233320E4(v46);
        v159(v46, 2, 2, v161);
        sub_223321F60((void *)(v47 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v47 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
        if (sub_223424450(2, 0))
        {
          uint64_t v50 = sub_22342C1E0();
          os_log_type_t v51 = sub_22342C700();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v52 = 0;
            _os_log_impl(&dword_223317000, v50, v51, "Messages in iCloud Exit Record present in cache", v52, 2u);
            MEMORY[0x223CB62D0](v52, -1, -1);
          }

          goto LABEL_15;
        }
        int v45 = 0;
        if ((sub_223424450(1, 0) & 1) == 0)
        {
LABEL_15:
          if (qword_26AD5EFE0 != -1) {
            swift_once();
          }
          uint64_t v53 = unk_26AD63170;
          uint64_t ObjectType = swift_getObjectType();
          id v167 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v53 + 32) + **(int **)(v53 + 32));
          uint64_t v55 = (void *)swift_task_alloc();
          v0[43] = v55;
          *uint64_t v55 = v0;
          v55[1] = sub_22332AE40;
          return v167(ObjectType, v53);
        }
      }
LABEL_44:
      unint64_t v109 = (void *)(v0[13] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
      sub_223321F60(v109, v109[3]);
      unint64_t v110 = (void *)sub_223423BB8();
      if (v110) {
        objc_msgSend(v110, sel_setSyncCancelled_, 0);
      }
      uint64_t v111 = v0[32];
      if (v45)
      {
        uint64_t v112 = v0[26];
        uint64_t v113 = v0[19];
        uint64_t v114 = v0[20];
        sub_223332B54(v111, v112);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113) == 1)
        {
          uint64_t v115 = (void *)v0[18];
          sub_2233232B8(v0[26], (uint64_t *)&unk_26AD5ED20);
          id v116 = v115;
          id v117 = v115;
          id v118 = sub_22342C1E0();
          os_log_type_t v119 = sub_22342C700();
          BOOL v120 = os_log_type_enabled(v118, v119);
          int v121 = (void *)v0[18];
          if (v120)
          {
            uint64_t v122 = v14 + 1;
            uint64_t v123 = (uint8_t *)swift_slowAlloc();
            v124 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v123 = 138412290;
            id v125 = v121;
            uint64_t v126 = _swift_stdlib_bridgeErrorToNSError();
            *uint64_t v122 = v126;
            sub_22342CA10();
            void *v124 = v126;

            _os_log_impl(&dword_223317000, v118, v119, "No retryAfter date for reschedule from %@, marking done and waiting for next sync", v123, 0xCu);
            sub_22331E640((uint64_t *)&unk_26AD5F150);
            swift_arrayDestroy();
            MEMORY[0x223CB62D0](v124, -1, -1);
            MEMORY[0x223CB62D0](v123, -1, -1);
          }
          else
          {
          }
          uint64_t v135 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[36];
          uint64_t v136 = v0[35];
          uint64_t v138 = v0[32];
          uint64_t v137 = v0[33];
          uint64_t v139 = v0[13];

          uint64_t v140 = (void *)(v139 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
          uint64_t v141 = *(void *)(v139 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 24);
          uint64_t v142 = v140[4];
          sub_223321F60(v140, v141);
          (*(void (**)(uint64_t, uint64_t))(v142 + 40))(v141, v142);
          sub_2233232B8(v138, (uint64_t *)&unk_26AD5ED20);
          sub_2233320E4(v137);
          v135(v137, 2, 2, v136);
        }
        else
        {
          uint64_t v127 = v0[40];
          uint64_t v128 = v0[13];
          uint64_t v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[20] + 32);
          v154(v0[22], v0[26], v0[19]);
          uint64_t v168 = v127 + 1;
          if (__OFADD__(v127, 1)) {
            __break(1u);
          }
          uint64_t v129 = *(void *)(v128 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_notifiers);
          id v130 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[38];
          uint64_t v131 = v0[25];
          uint64_t v132 = v0[19];
          uint64_t v160 = v0[16];
          v162 = (char *)v0[17];
          uint64_t v164 = v0[15];
          uint64_t v133 = v0[13];
          uint64_t v158 = v0[14];
          uint64_t v134 = *(void *)(v133 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_delegate);
          uint64_t v157 = v133 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudDatabase;
          (*(void (**)(uint64_t, void, uint64_t))(v0[20] + 16))(v131, v0[22], v132);
          v130(v131, 0, 1, v132);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          sub_22332B760((void *)(v133 + 16), (uint64_t)v109, v157, v164, v134, v129, v168, 0, v131, (char *)v133, v158, v160, v162);
          id v143 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[36];
          uint64_t v144 = v0[35];
          uint64_t v146 = v0[32];
          uint64_t v145 = v0[33];
          uint64_t v147 = v0[25];
          uint64_t v148 = v0[22];
          uint64_t v149 = v0[19];
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          sub_2233232B8(v147, (uint64_t *)&unk_26AD5ED20);
          sub_2233232B8(v146, (uint64_t *)&unk_26AD5ED20);
          sub_2233320E4(v145);
          v154(v145, v148, v149);
          v143(v145, 0, 2, v144);
        }
      }
      else
      {
        sub_2233232B8(v111, (uint64_t *)&unk_26AD5ED20);
      }
      uint64_t v150 = (void *)v0[41];
      sub_223332140(v0[33], v0[12]);

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v151 = (uint64_t (*)(void))v0[1];
      return v151();
  }
}

uint64_t sub_22332AE40()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22332AF68, 0, 0);
}

uint64_t sub_22332AF68()
{
  sub_223321F60((void *)(v0[13] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v0[13] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  uint64_t v1 = (void *)sub_223423BB8();
  if (v1) {
    objc_msgSend(v1, sel_setSyncCancelled_, 0);
  }
  sub_2233232B8(v0[32], (uint64_t *)&unk_26AD5ED20);
  uint64_t v2 = (void *)v0[41];
  sub_223332140(v0[33], v0[12]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_22332B104()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233349E4, 0, 0);
}

void sub_22332B22C(const char *a1, SEL *a2, char a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(*sub_223321F60((void *)(v3 + 16), *(void *)(v3 + 40)) + 17))
  {
    sub_223321F60((void *)(v3 + 16), *(void *)(v3 + 40));
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    unint64_t v26 = 0xD000000000000018;
    unint64_t v27 = 0x8000000223436130;
    sub_2233C7210();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22342C200();
    sub_223323374(v7, (uint64_t)qword_26AD63108);
    swift_bridgeObjectRetain_n();
    unint64_t v8 = sub_22342C1E0();
    os_log_type_t v9 = sub_22342C720();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      char v25 = a3;
      unint64_t v11 = swift_slowAlloc();
      unint64_t v26 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      sub_22339BC14(0xD000000000000018, 0x8000000223436130, (uint64_t *)&v26);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v8, v9, a1, v10, 0xCu);
      swift_arrayDestroy();
      unint64_t v12 = v11;
      a3 = v25;
      MEMORY[0x223CB62D0](v12, -1, -1);
      MEMORY[0x223CB62D0](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v13 = objc_msgSend(self, sel_sharedScheduler);
    unint64_t v14 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    sub_22331E640(&qword_267FA2718);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F1F0;
    unint64_t v26 = 0x746E6567616D69;
    unint64_t v27 = 0xE700000000000000;
    sub_22342CB30();
    unint64_t v26 = 0xD000000000000013;
    unint64_t v27 = 0x8000000223436150;
    sub_22342CB30();
    unint64_t v26 = 0x4D53656C69626F4DLL;
    unint64_t v27 = 0xE900000000000053;
    sub_22342CB30();
    sub_2233487E4(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v16 = (void *)sub_22342C640();
    swift_bridgeObjectRelease();
    unint64_t v26 = 0;
    objc_msgSend(v13, *a2, v14, v16, &v26);

    if (v26)
    {
      id v17 = (id)v26;
      swift_willThrow();
      id v18 = v17;
      id v19 = sub_22342C1E0();
      os_log_type_t v20 = sub_22342C700();
      if (os_log_type_enabled(v19, v20))
      {
        os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
        BOOL v22 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v21 = 138412290;
        uint64_t v23 = v18;
        unint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
        unint64_t v26 = v24;
        sub_22342CA10();
        *BOOL v22 = v24;

        _os_log_impl(&dword_223317000, v19, v20, "Failed to report start to BackgroundSystemTasks: %@", v21, 0xCu);
        sub_22331E640((uint64_t *)&unk_26AD5F150);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v22, -1, -1);
        MEMORY[0x223CB62D0](v21, -1, -1);
      }
      else
      {

        id v19 = v18;
      }

      sub_223381530(a3, v18, 0, 0);
    }
  }
}

uint64_t sub_22332B760(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, char *a13)
{
  uint64_t v104 = a7;
  uint64_t v100 = a6;
  uint64_t v105 = a5;
  uint64_t v103 = a4;
  uint64_t v102 = a3;
  uint64_t v101 = a2;
  uint64_t v17 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v94 = (uint64_t)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v95 = (char *)&v83 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = sub_22342C130();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v92 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v93 = (char *)&v83 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v83 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v83 - v33;
  xpc_object_t v35 = *(xpc_object_t *)(*sub_223321F60(a1, a1[3]) + 80);
  if (!a8)
  {
    uint64_t v98 = v13;
    swift_unknownObjectRetain();
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    goto LABEL_6;
  }
  swift_unknownObjectRetain();
  if (sub_223332E88(a8))
  {
    uint64_t v99 = v32;
    uint64_t v98 = v13;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v35;
    uint64_t v37 = swift_allocObject();
    uint64_t v96 = sub_223332F54;
    *(void *)(v37 + 16) = sub_223332F54;
    *(void *)(v37 + 24) = v36;
    uint64_t v97 = v36;
    unint64_t v110 = sub_223332F6C;
    uint64_t v111 = (void *)v37;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v107 = 1107296256;
    uint64_t v108 = sub_22332C728;
    unint64_t v109 = &unk_26D66DB70;
    uint64_t v38 = _Block_copy(&aBlock);
    xpc_object_t v39 = v35;
    uint64_t v40 = v38;
    uint64_t v41 = v39;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    xpc_dictionary_apply(a8, v40);
    swift_unknownObjectRelease();
    _Block_release(v40);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
      goto LABEL_32;
    }
    xpc_object_t v35 = v41;
    uint64_t v32 = v99;
LABEL_6:
    sub_223332B54(a9, (uint64_t)v23);
    uint64_t isEscapingClosureAtFileLocation = *(void *)(v25 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))isEscapingClosureAtFileLocation)(v23, 1, v24) == 1)
    {
      sub_2233232B8((uint64_t)v23, (uint64_t *)&unk_26AD5ED20);
      goto LABEL_25;
    }
    xpc_object_t v90 = v35;
    uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v86(v34, v23, v24);
    sub_22342C0E0();
    double v14 = ceil(v43);
    if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
    {
      if (v14 > -9.22337204e18)
      {
        if (v14 < 9.22337204e18)
        {
          uint64_t v99 = v32;
          uint64_t v91 = v34;
          if (qword_26AD5F0D8 == -1)
          {
LABEL_12:
            uint64_t v89 = (uint64_t)v14;
            uint64_t v44 = sub_22342C200();
            sub_223323374(v44, (uint64_t)qword_26AD63108);
            int v45 = v99;
            uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
            v88(v99, v91, v24);
            uint64_t v46 = sub_22342C1E0();
            int v87 = sub_22342C720();
            if (os_log_type_enabled(v46, (os_log_type_t)v87))
            {
              os_log_t v85 = v46;
              uint64_t v83 = a1;
              uint64_t v47 = swift_slowAlloc();
              uint64_t v84 = swift_slowAlloc();
              uint64_t aBlock = v84;
              *(_DWORD *)uint64_t v47 = 136315394;
              uint64_t v48 = (uint64_t)v95;
              v88(v95, v45, v24);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
              uint64_t v49 = v94;
              sub_223332B54(v48, v94);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))isEscapingClosureAtFileLocation)(v49, 1, v24) == 1)
              {
                sub_2233232B8(v49, (uint64_t *)&unk_26AD5ED20);
                unint64_t v50 = 0xE300000000000000;
                uint64_t v51 = 7104878;
              }
              else
              {
                uint64_t v63 = v93;
                v86(v93, (char *)v49, v24);
                v88(v92, v63, v24);
                uint64_t v51 = sub_22342C360();
                unint64_t v50 = v64;
                (*(void (**)(char *, uint64_t))(v25 + 8))(v63, v24);
              }
              a1 = v83;
              sub_2233232B8((uint64_t)v95, (uint64_t *)&unk_26AD5ED20);
              *(void *)&long long v115 = sub_22339BC14(v51, v50, &aBlock);
              sub_22342CA10();
              swift_bridgeObjectRelease();
              uint64_t v59 = *(void (**)(char *, uint64_t))(v25 + 8);
              v59(v99, v24);
              *(_WORD *)(v47 + 12) = 2048;
              int64_t v60 = v89;
              *(void *)&long long v115 = v89;
              sub_22342CA10();
              os_log_t v65 = v85;
              _os_log_impl(&dword_223317000, v85, (os_log_type_t)v87, "Overriding xpc_activity XPC_ACTIVITY_EARLIEST_START_DATE with %s, delay: %lld", (uint8_t *)v47, 0x16u);
              uint64_t v66 = v84;
              swift_arrayDestroy();
              MEMORY[0x223CB62D0](v66, -1, -1);
              MEMORY[0x223CB62D0](v47, -1, -1);
            }
            else
            {
              uint64_t v59 = *(void (**)(char *, uint64_t))(v25 + 8);
              v59(v45, v24);

              int64_t v60 = v89;
            }
            xpc_object_t v35 = v90;
            xpc_dictionary_set_int64(v90, (const char *)*MEMORY[0x263EF81A0], v60);
            v59(v91, v24);
LABEL_25:
            if (qword_26AD5F0D8 != -1) {
              swift_once();
            }
            uint64_t v99 = a13;
            uint64_t v95 = (char *)a12;
            uint64_t v94 = a11;
            uint64_t v67 = sub_22342C200();
            sub_223323374(v67, (uint64_t)qword_26AD63108);
            sub_223322120((uint64_t)a1, (uint64_t)&aBlock);
            uint64_t v68 = sub_22342C1E0();
            os_log_type_t v69 = sub_22342C720();
            if (os_log_type_enabled(v68, v69))
            {
              uint64_t v70 = swift_slowAlloc();
              uint64_t v93 = a10;
              uint64_t v71 = (uint8_t *)v70;
              xpc_object_t v72 = v35;
              uint64_t v73 = swift_slowAlloc();
              *(void *)&long long v115 = v73;
              *(_DWORD *)uint64_t v71 = 136315138;
              sub_223321F60(&aBlock, (uint64_t)v109);
              unint64_t v74 = sub_2233C7210();
              *(void *)&long long v114 = sub_22339BC14(v74, v75, (uint64_t *)&v115);
              sub_22342CA10();
              swift_bridgeObjectRelease();
              _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&aBlock);
              _os_log_impl(&dword_223317000, v68, v69, "Registering xpc_activity: %s", v71, 0xCu);
              swift_arrayDestroy();
              uint64_t v76 = v73;
              xpc_object_t v35 = v72;
              MEMORY[0x223CB62D0](v76, -1, -1);
              MEMORY[0x223CB62D0](v71, -1, -1);
            }
            else
            {
              _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&aBlock);
            }

            uint64_t v77 = v100;
            sub_223321F60(a1, a1[3]);
            uint64_t aBlock = 0;
            unint64_t v107 = 0xE000000000000000;
            sub_22342CBB0();
            swift_bridgeObjectRelease();
            uint64_t aBlock = 0xD000000000000018;
            unint64_t v107 = 0x8000000223436130;
            sub_2233C7210();
            sub_22342C3B0();
            swift_bridgeObjectRelease();
            uint64_t v100 = *MEMORY[0x263EF8188];
            uint64_t v78 = swift_allocObject();
            *(void *)(v78 + 24) = v94;
            swift_unknownObjectWeakInit();
            sub_223322120((uint64_t)a1, (uint64_t)&v115);
            sub_223322120(v101, (uint64_t)&v114);
            sub_223322120(v102, (uint64_t)&v113);
            sub_223322120(v103, (uint64_t)&v112);
            os_log_type_t v79 = (void *)swift_allocObject();
            sub_223332E10(&v115, (uint64_t)(v79 + 2));
            v79[7] = v35;
            v79[8] = v78;
            sub_223332E10(&v114, (uint64_t)(v79 + 9));
            sub_223332E10(&v113, (uint64_t)(v79 + 14));
            v79[19] = v105;
            v79[20] = v77;
            v79[21] = v104;
            sub_223332E10(&v112, (uint64_t)(v79 + 22));
            uint64_t v80 = (uint64_t)v95;
            uint64_t v81 = v99;
            v79[27] = v95;
            v79[28] = v81;
            unint64_t v110 = sub_223332E28;
            uint64_t v111 = v79;
            uint64_t aBlock = MEMORY[0x263EF8330];
            unint64_t v107 = 1107296256;
            uint64_t v108 = sub_223330268;
            unint64_t v109 = &unk_26D66DAF8;
            uint64_t v82 = _Block_copy(&aBlock);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            sub_223331FA4(v80);
            swift_release();
            sub_22342C370();
            swift_bridgeObjectRelease();
            IMRegisterSADAwareXPCActivity();
            swift_release();
            _Block_release(v82);
            swift_unknownObjectRelease();
            return sub_223332C58((uint64_t)v96);
          }
LABEL_35:
          swift_once();
          goto LABEL_12;
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_22342C200();
  sub_223323374(v52, (uint64_t)qword_26AD63108);
  sub_223322120((uint64_t)a1, (uint64_t)&aBlock);
  uint64_t v53 = sub_22342C1E0();
  os_log_type_t v54 = sub_22342C710();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(void *)&long long v115 = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    sub_223321F60(&aBlock, (uint64_t)v109);
    unint64_t v57 = sub_2233C7210();
    *(void *)&long long v114 = sub_22339BC14(v57, v58, (uint64_t *)&v115);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&aBlock);
    _os_log_impl(&dword_223317000, v53, v54, "Incorrect xpc type for criteriaOverride in activity %s", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v56, -1, -1);
    MEMORY[0x223CB62D0](v55, -1, -1);
  }
  else
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&aBlock);
  }

  sub_223332EC8();
  swift_allocError();
  *uint64_t v61 = 1;
  swift_willThrow();
  return swift_unknownObjectRelease();
}

uint64_t sub_22332C584(char *key, xpc_object_t value, xpc_object_t xdict)
{
  xpc_dictionary_set_value(xdict, key, value);
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_22342C200();
  sub_223323374(v3, (uint64_t)qword_26AD63108);
  uint64_t v4 = sub_22342C1E0();
  os_log_type_t v5 = sub_22342C720();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_22331E640(&qword_267FA2748);
    uint64_t v8 = sub_22342C360();
    sub_22339BC14(v8, v9, &v11);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v4, v5, "Overriding xpc_activity criteria with %s)", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v7, -1, -1);
    MEMORY[0x223CB62D0](v6, -1, -1);
  }

  return 1;
}

uint64_t sub_22332C728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  char v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

void sub_22332C780(_xpc_activity_s *a1, NSObject *a2, void *a3, uint64_t a4, id a5, uint64_t a6, void *a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v126 = a7;
  unint64_t v127 = a8;
  id v121 = a5;
  uint64_t v122 = (void *)a6;
  uint64_t v119 = a4;
  xpc_object_t v120 = a3;
  id v130 = a2;
  uint64_t v125 = a12;
  uint64_t v117 = a11;
  uint64_t v124 = a10;
  uint64_t v123 = a9;
  uint64_t v13 = sub_22331E640(&qword_26AD5E1C8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)sub_22342C130();
  uint64_t v128 = *(v16 - 1);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v108 - v20;
  uint64_t v22 = sub_22342C170();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v108 - v27;
  xpc_activity_t v129 = a1;
  xpc_activity_state_t state = xpc_activity_get_state(a1);
  if (state == 2)
  {
    xpc_object_t v120 = v16;
    long long v115 = v19;
    id v116 = v21;
    uint64_t v113 = v22;
    long long v114 = v26;
    uint64_t v118 = v23;
    unint64_t v109 = v15;
    long long v112 = v28;
    uint64_t v39 = v119 + 16;
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_22342C200();
    uint64_t v41 = sub_223323374(v40, (uint64_t)qword_26AD63108);
    sub_223322120((uint64_t)v130, (uint64_t)&v139);
    uint64_t v42 = sub_22342C1E0();
    os_log_type_t v43 = sub_22342C720();
    BOOL v44 = os_log_type_enabled(v42, v43);
    uint64_t v45 = v118;
    uint64_t v46 = v116;
    uint64_t v108 = v41;
    if (v44)
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(void *)&long long v137 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      sub_223321F60(&v139, v140);
      unint64_t v49 = sub_2233C7210();
      v136[0] = sub_22339BC14(v49, v50, (uint64_t *)&v137);
      uint64_t v45 = v118;
      sub_22342CA10();
      swift_bridgeObjectRelease();
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v139);
      _os_log_impl(&dword_223317000, v42, v43, "xpc_activity state run for %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v48, -1, -1);
      uint64_t v46 = v116;
      MEMORY[0x223CB62D0](v47, -1, -1);
    }
    else
    {
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v139);
    }

    uint64_t v56 = (uint64_t)v114;
    uint64_t v55 = (uint64_t)v115;
    swift_beginAccess();
    uint64_t v57 = MEMORY[0x223CB63D0](v39);
    unint64_t v58 = v112;
    if (v57)
    {
      uint64_t v59 = v57;
      uint64_t v60 = v113;
      (*(void (**)(char *, uint64_t))(v45 + 16))(v112, v57 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_identifier);
      uint64_t v61 = v46;
      (*(void (**)(char *, uint64_t, xpc_object_t))(v128 + 16))(v46, v59 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_startDate, v120);
      swift_unknownObjectRelease();
      uint64_t v62 = v124;
    }
    else
    {
      sub_22342C160();
      uint64_t v61 = v46;
      sub_22342C120();
      uint64_t v62 = v124;
      uint64_t v60 = v113;
    }
    type metadata accessor for XPCActivity();
    uint64_t v111 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    if (qword_26AD5EFE0 != -1) {
      swift_once();
    }
    uint64_t v110 = qword_26AD63168;
    uint64_t v119 = unk_26AD63170;
    sub_223322120((uint64_t)v130, (uint64_t)&v139);
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v56, v58, v60);
    (*(void (**)(uint64_t, char *, xpc_object_t))(v128 + 16))(v55, v61, v120);
    sub_223322120((uint64_t)v121, (uint64_t)&v137);
    sub_223322120((uint64_t)v122, (uint64_t)v136);
    sub_223322120(v62, (uint64_t)v135);
    uint64_t v63 = sub_2233310D8((uint64_t)v135, v135[3]);
    MEMORY[0x270FA5388](v63);
    (*(void (**)(char *))(v65 + 16))((char *)&v108 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
    v134[3] = &type metadata for DatabaseRecordPersistence;
    v134[4] = &off_26D670800;
    type metadata accessor for CountStore();
    uint64_t v66 = swift_allocObject();
    uint64_t v67 = sub_2233310D8((uint64_t)v134, (uint64_t)&type metadata for DatabaseRecordPersistence);
    MEMORY[0x270FA5388](v67);
    (*(void (**)(char *))(v69 + 16))((char *)&v108 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v132 = &type metadata for DatabaseRecordPersistence;
    uint64_t v133 = &off_26D670800;
    unint64_t v70 = (unint64_t)v126;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v71 = v111;
    swift_retain();
    swift_unknownObjectRetain();
    swift_defaultActor_initialize();
    sub_223332E10(&v131, v66 + 112);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v134);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v135);
    unint64_t v72 = sub_2233FB9B8(1, 1, 0);
    id v121 = objc_msgSend(self, sel_defaultManager, v108);
    id v73 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SyncTelemetryReporter()), sel_init);
    uint64_t v74 = sub_2233310D8((uint64_t)&v139, v140);
    uint64_t v122 = &v108;
    MEMORY[0x270FA5388](v74);
    uint64_t v76 = (uint64_t *)((char *)&v108 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v77 + 16))(v76);
    uint64_t v78 = sub_2233310D8((uint64_t)&v137, v138);
    MEMORY[0x270FA5388](v78);
    uint64_t v80 = (uint64_t *)((char *)&v108 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v81 + 16))(v80);
    uint64_t v82 = *v76;
    uint64_t v83 = *v80;
    swift_retain();
    *((void *)&v107 + 1) = "messages-cloud-sync";
    *(void *)&long long v107 = v123;
    uint64_t v84 = sub_223331890(v82, (uint64_t)v114, (uint64_t)v115, v71, v83, (uint64_t)v136, v110, v119, __PAIR128__(v127, v70), v107, 19, 2, (uint64_t)v121, (uint64_t)v73, v66, v72 & 0x1FF010101);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v137);
    swift_release();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v139);
    sub_2233256E0(0x6974617669746341, 0xED00002E2E2E676ELL);
    type metadata accessor for SyncCoordinator();
    uint64_t v85 = swift_retain();
    sub_2233C68D0(v85, (uint64_t)&off_26D671AD0);
    uint64_t v86 = v113;
    uint64_t v87 = v128;
    swift_release();
    uint64_t v88 = (void *)(v84 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
    uint64_t v89 = sub_223321F60((void *)(v84 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v84 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    xpc_object_t v90 = *(void **)(*v89 + 56);
    if (v90) {
      objc_msgSend(*(id *)(*v89 + 56), sel_startChanges);
    }
    uint64_t v91 = sub_223321F60(v130, (uint64_t)v130[3].isa);
    if (v90)
    {
      uint64_t v92 = qword_22342F398[*(char *)(*v91 + 17)];
      swift_retain();
      objc_msgSend(v90, sel_setSyncPhaseType_, v92);
      objc_msgSend(v90, sel_setSyncJobStateWithState_, 1);
    }
    else
    {
      swift_retain();
    }
    uint64_t v93 = v125;
    sub_223422D74(0);
    swift_release();
    if (v90) {
      objc_msgSend(v90, sel_commitChanges);
    }
    uint64_t v94 = v126;
    if (v126)
    {
      *(void *)&long long v139 = 0x2E636E7973;
      *((void *)&v139 + 1) = 0xE500000000000000;
      sub_223321F60((void *)(v84 + 16), *(void *)(v84 + 40));
      sub_2233C7210();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      sub_22342C3B0();
      sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
      sub_22342CF10();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      uint64_t v95 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      uint64_t v93 = v125;
      uint64_t v96 = (void *)sub_22342C150();
      objc_msgSend(v94, sel_syncCoordinatorStartedSyncWithName_identifier_, v95, v96);
    }
    sub_2233256E0(0x69756E69746E6F43, 0xEF636E795320676ELL);
    if (xpc_activity_set_state(v129, 4))
    {
      uint64_t v97 = sub_22342C5D0();
      uint64_t v98 = (uint64_t)v109;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v109, 1, 1, v97);
      sub_223322120((uint64_t)v130, (uint64_t)&v139);
      sub_223322120(v124, (uint64_t)&v137);
      uint64_t v99 = (void *)swift_allocObject();
      v99[2] = 0;
      v99[3] = 0;
      v99[4] = v84;
      sub_223332E10(&v139, (uint64_t)(v99 + 5));
      sub_223332E10(&v137, (uint64_t)(v99 + 10));
      uint64_t v100 = v117;
      v99[15] = v117;
      v99[16] = v93;
      swift_retain();
      sub_223331FA4(v100);
      sub_2233C7088(v98, (uint64_t)&unk_267FA2768, (uint64_t)v99);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, xpc_object_t))(v87 + 8))(v116, v120);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v112, v86);
    }
    else
    {
      sub_2233C5EB0(MEMORY[0x263F8EE78]);
      sub_22332581C();
      swift_bridgeObjectRelease();
      uint64_t v101 = sub_223321F60(v88, v88[3]);
      uint64_t v102 = *(void **)(*v101 + 56);
      uint64_t v103 = v112;
      if (v102)
      {
        objc_msgSend(*(id *)(*v101 + 56), sel_startChanges);
        swift_retain();
        sub_223422D74(1);
        objc_msgSend(v102, sel_setSyncJobStateWithState_, 0);
        swift_release();
        objc_msgSend(v102, sel_commitChanges);
      }
      else
      {
        swift_retain();
        sub_223422D74(1);
        swift_release();
      }
      uint64_t v104 = sub_22342C1E0();
      os_log_type_t v105 = sub_22342C710();
      if (os_log_type_enabled(v104, v105))
      {
        uint64_t v106 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v106 = 0;
        _os_log_impl(&dword_223317000, v104, v105, "We did not set the state of activity to CONTINUE successfully", v106, 2u);
        MEMORY[0x223CB62D0](v106, -1, -1);
      }
      swift_release();

      swift_release();
      (*(void (**)(char *, xpc_object_t))(v87 + 8))(v116, v120);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v103, v86);
    }
  }
  else if (state)
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_22342C200();
    sub_223323374(v51, (uint64_t)qword_26AD63108);
    id v130 = sub_22342C1E0();
    os_log_type_t v52 = sub_22342C710();
    if (os_log_type_enabled(v130, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_223317000, v130, v52, "Incorrect state for xpc_activity_register", v53, 2u);
      MEMORY[0x223CB62D0](v53, -1, -1);
    }
    os_log_type_t v54 = v130;
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_22342C200();
    sub_223323374(v30, (uint64_t)qword_26AD63108);
    sub_223322120((uint64_t)v130, (uint64_t)&v139);
    uint64_t v31 = sub_22342C1E0();
    os_log_type_t v32 = sub_22342C720();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = v129;
    if (v33)
    {
      xpc_object_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(void *)&long long v137 = v36;
      *(_DWORD *)xpc_object_t v35 = 136315138;
      sub_223321F60(&v139, v140);
      unint64_t v37 = sub_2233C7210();
      v136[0] = sub_22339BC14(v37, v38, (uint64_t *)&v137);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v139);
      _os_log_impl(&dword_223317000, v31, v32, "xpc_activity state check-in for %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v36, -1, -1);
      MEMORY[0x223CB62D0](v35, -1, -1);
    }
    else
    {
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v139);
    }

    xpc_activity_set_criteria(v34, v120);
  }
}

uint64_t sub_22332D910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[11] = a4;
  return MEMORY[0x270FA2498](sub_22332D938, 0, 0);
}

uint64_t sub_22332D938()
{
  uint64_t v34 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 88);
  sub_2233C5EB0(MEMORY[0x263F8EE78]);
  sub_22332581C();
  swift_bridgeObjectRelease();
  uint64_t v2 = qword_26AD63258;
  if (!qword_26AD63258)
  {
    uint64_t v14 = sub_223321F60((void *)(*v1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*v1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    uint64_t v15 = *(void **)(*v14 + 56);
    if (v15)
    {
      objc_msgSend(*(id *)(*v14 + 56), sel_startChanges);
      swift_retain();
      sub_223422D74(1);
      objc_msgSend(v15, sel_setSyncJobStateWithState_, 0);
      swift_release();
      objc_msgSend(v15, sel_commitChanges);
      uint64_t v13 = *(int **)(v0 + 104);
      if (!v13) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    swift_retain();
    sub_223422D74(1);
    swift_release();
    uint64_t v13 = *(int **)(v0 + 104);
    if (v13) {
      goto LABEL_11;
    }
LABEL_15:
    if (!xpc_activity_set_state(*(xpc_activity_t *)(v0 + 120), 5))
    {
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_22342C200();
      sub_223323374(v21, (uint64_t)qword_26AD63108);
      swift_retain_n();
      uint64_t v22 = sub_22342C1E0();
      os_log_type_t v23 = sub_22342C700();
      BOOL v24 = os_log_type_enabled(v22, v23);
      uint64_t v25 = *v1;
      if (v24)
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v31 = v27;
        uint64_t v32 = 0x2E636E7973;
        unint64_t v33 = 0xE500000000000000;
        sub_223321F60((void *)(v25 + 16), *(void *)(v25 + 40));
        sub_2233C7210();
        sub_22342C3B0();
        swift_bridgeObjectRelease();
        sub_22342C3B0();
        sub_22342C170();
        sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
        sub_22342CF10();
        sub_22342C3B0();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 56) = sub_22339BC14(v32, v33, &v31);
        sub_22342CA10();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_223317000, v22, v23, "Failed to set activity state to done %s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v27, -1, -1);
        MEMORY[0x223CB62D0](v26, -1, -1);
      }
      else
      {
        swift_release_n();
      }
    }
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  uint64_t v3 = qword_26AD5F0D8;
  swift_unknownObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = sub_22342C200();
  sub_223323374(v5, (uint64_t)qword_26AD63108);
  sub_223322120(v4, v0 + 16);
  swift_unknownObjectRetain_n();
  swift_retain_n();
  char v6 = sub_22342C1E0();
  os_log_type_t v7 = sub_22342C700();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 88);
  if (!v8)
  {
    swift_unknownObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
    swift_unknownObjectRelease_n();
    swift_release();
    swift_release();

    uint64_t v13 = *(int **)(v0 + 104);
    if (v13) {
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  uint64_t v10 = swift_slowAlloc();
  uint64_t v29 = swift_slowAlloc();
  uint64_t v31 = v29;
  *(_DWORD *)uint64_t v10 = 136315650;
  sub_223321F60((void *)(v0 + 16), *(void *)(v0 + 40));
  unint64_t v11 = sub_2233C7210();
  *(void *)(v0 + 64) = sub_22339BC14(v11, v12, &v31);
  sub_22342CA10();
  swift_bridgeObjectRelease();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  *(_WORD *)(v10 + 12) = 2080;
  uint64_t v32 = 0x2E636E7973;
  unint64_t v33 = 0xE500000000000000;
  sub_223321F60((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_2233C7210();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  sub_22342C3B0();
  sub_22342C170();
  sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
  sub_22342CF10();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 72) = sub_22339BC14(v32, v33, &v31);
  sub_22342CA10();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  *(_WORD *)(v10 + 22) = 2080;
  uint64_t v32 = 0x2E636E7973;
  unint64_t v33 = 0xE500000000000000;
  sub_223321F60((void *)(v9 + 16), *(void *)(v9 + 40));
  sub_2233C7210();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  sub_22342C3B0();
  sub_22342CF10();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = sub_22339BC14(v32, v33, &v31);
  sub_22342CA10();
  swift_bridgeObjectRelease();
  swift_release_n();
  _os_log_impl(&dword_223317000, v6, v7, "Tried to kick %s but another sync was already going %s %s", (uint8_t *)v10, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x223CB62D0](v29, -1, -1);
  MEMORY[0x223CB62D0](v10, -1, -1);

  swift_unknownObjectRelease();
  uint64_t v13 = *(int **)(v0 + 104);
  if (!v13) {
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v16 = *(void *)(v0 + 88);
  sub_223332C04();
  uint64_t v17 = swift_allocError();
  *(void *)(v0 + 128) = v17;
  unsigned char *v18 = 1;
  uint64_t v30 = (int *)((char *)v13 + *v13);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v19;
  void *v19 = v0;
  v19[1] = sub_22332E180;
  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v30)(v16, &off_26D671AD0, 1, v17);
}

uint64_t sub_22332E180()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 128);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_22332E298, 0, 0);
}

uint64_t sub_22332E298()
{
  uint64_t v11 = v0;
  if (!xpc_activity_set_state(*(xpc_activity_t *)(v0 + 120), 5))
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_22342C200();
    sub_223323374(v1, (uint64_t)qword_26AD63108);
    swift_retain_n();
    uint64_t v2 = sub_22342C1E0();
    os_log_type_t v3 = sub_22342C700();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void *)(v0 + 88);
    if (v4)
    {
      char v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)char v6 = 136315138;
      v10[0] = v7;
      v10[1] = 0x2E636E7973;
      v10[2] = 0xE500000000000000;
      sub_223321F60((void *)(v5 + 16), *(void *)(v5 + 40));
      sub_2233C7210();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      sub_22342C3B0();
      sub_22342C170();
      sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
      sub_22342CF10();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 56) = sub_22339BC14(0x2E636E7973, 0xE500000000000000, v10);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_223317000, v2, v3, "Failed to set activity state to done %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v7, -1, -1);
      MEMORY[0x223CB62D0](v6, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  BOOL v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_22332E54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[12] = a4;
  type metadata accessor for HandleErrorOutcome();
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22332E600, 0, 0);
}

uint64_t sub_22332E600()
{
  os_log_type_t v23 = v0;
  sub_2233256E0(0x676E696E6E7552, 0xE700000000000000);
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = sub_22342C200();
  v0[20] = sub_223323374(v2, (uint64_t)qword_26AD63108);
  sub_223322120(v1, (uint64_t)(v0 + 2));
  swift_retain_n();
  os_log_type_t v3 = sub_22342C1E0();
  os_log_type_t v4 = sub_22342C720();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v22[0] = v21;
    *(_DWORD *)uint64_t v5 = 136315394;
    sub_223321F60(v0 + 2, v0[5]);
    unint64_t v6 = sub_2233C7210();
    v0[10] = sub_22339BC14(v6, v7, v22);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)(v0 + 2));
    *(_WORD *)(v5 + 12) = 2080;
    sub_22342C170();
    sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    uint64_t v8 = sub_22342CF10();
    v0[11] = sub_22339BC14(v8, v9, v22);
    sub_22342CA10();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v3, v4, "Running handler for %s %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v21, -1, -1);
    MEMORY[0x223CB62D0](v5, -1, -1);
  }
  else
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)(v0 + 2));

    swift_release_n();
  }
  id v10 = objc_msgSend(self, sel_sharedInstance);
  if (v10)
  {
    uint64_t v11 = v10;
    unsigned int v12 = objc_msgSend(v10, sel_isInternalInstall);

    if (v12) {
      sub_223332208((void *)(v0[12] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), 0xD000000000000012, 0x8000000223436110);
    }
  }
  uint64_t v13 = (void *)v0[13];
  uint64_t v14 = v13[3];
  uint64_t v15 = v13[4];
  sub_223321F60(v13, v14);
  uint64_t v16 = *(void *)(*(void *)(v15 + 8) + 8);
  uint64_t v20 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v16 + 40) + **(int **)(v16 + 40));
  uint64_t v17 = (void *)swift_task_alloc();
  v0[21] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_22332EB10;
  uint64_t v18 = v0[12];
  return v20(v18, &off_26D671AD0, v14, v16);
}

uint64_t sub_22332EB10()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22332EC0C, 0, 0);
}

uint64_t sub_22332EC0C()
{
  sub_223321F60(*(void **)(v0 + 104), *(void *)(*(void *)(v0 + 104) + 24));
  os_log_type_t v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2700 + dword_267FA2700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  void *v1 = v0;
  v1[1] = sub_22332ECCC;
  uint64_t v2 = *(void *)(v0 + 96);
  return v4(v2, (uint64_t)&off_26D671AD0);
}

uint64_t sub_22332ECCC(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 184) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v6 = sub_223330090;
  }
  else
  {
    *(unsigned char *)(v5 + 264) = a2;
    unint64_t v6 = sub_22332EDF4;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_22332EDF4()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_223321F60(v1, v2);
  uint64_t v4 = *(void *)(*(void *)(v3 + 8) + 8);
  uint64_t v8 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 56) + **(int **)(v4 + 56));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_22332EF0C;
  uint64_t v6 = v0[12];
  return v8(v6, &off_26D671AD0, v2, v4);
}

uint64_t sub_22332EF0C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22332F008, 0, 0);
}

uint64_t sub_22332F008()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = sub_22331E640(&qword_26AD5ED18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 2, 2, v2);
  char v3 = *(unsigned char *)(v0 + 264);
  uint64_t v4 = *(void **)(v0 + 184);
  *(void *)(v0 + 200) = 0;
  uint64_t v5 = *(void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_osActivity);
  swift_beginAccess();
  swift_retain();
  os_activity_scope_leave((os_activity_scope_state_t)(v5 + 24));
  swift_endAccess();
  swift_release();
  sub_2233C5EB0(MEMORY[0x263F8EE78]);
  sub_22332581C();
  swift_bridgeObjectRelease();
  type metadata accessor for SyncCoordinator();
  sub_2233C6CAC();
  if (v4)
  {
    uint64_t v6 = sub_22342C1E0();
    os_log_type_t v7 = sub_22342C710();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_223317000, v6, v7, "Failed to clear active sync state!", v8, 2u);
      MEMORY[0x223CB62D0](v8, -1, -1);
    }
  }
  uint64_t v9 = *(void *)(v0 + 144);
  sub_2233321A4(*(void *)(v0 + 152), v9);
  uint64_t v10 = sub_22331E640(&qword_26AD5ED18);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 2, v10);
  if (v11)
  {
    if (v11 == 1)
    {
      unsigned int v12 = *(int **)(v0 + 120);
      if (v12)
      {
        uint64_t v13 = *(void *)(v0 + 96);
        uint64_t v32 = (int *)((char *)v12 + *v12);
        uint64_t v14 = (void *)swift_task_alloc();
        *(void *)(v0 + 216) = v14;
        void *v14 = v0;
        v14[1] = sub_22332F6A0;
        uint64_t v15 = v13;
        uint64_t v16 = 64;
LABEL_13:
        return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, void))v32)(v15, &off_26D671AD0, v16, 0);
      }
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 120);
      uint64_t v21 = (void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
      uint64_t v22 = v21[3];
      uint64_t v23 = v21[4];
      sub_223321F60(v21, v22);
      (*(void (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
      if (v20)
      {
        uint64_t v24 = *(void *)(v0 + 96);
        uint64_t v32 = (int *)(*(void *)(v0 + 120) + **(int **)(v0 + 120));
        uint64_t v25 = (void *)swift_task_alloc();
        *(void *)(v0 + 224) = v25;
        void *v25 = v0;
        v25[1] = sub_22332F828;
        uint64_t v15 = v24;
        uint64_t v16 = v3 & 1;
        goto LABEL_13;
      }
    }
    uint64_t v27 = *(void *)(v0 + 152);

    sub_2233320E4(v27);
  }
  else
  {
    uint64_t v17 = *(int **)(v0 + 120);
    if (v17)
    {
      uint64_t v18 = *(void *)(v0 + 96);
      uint64_t v32 = (int *)((char *)v17 + *v17);
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v19;
      void *v19 = v0;
      v19[1] = sub_22332F4E0;
      uint64_t v15 = v18;
      uint64_t v16 = 128;
      goto LABEL_13;
    }
    uint64_t v28 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 152);

    sub_2233320E4(v29);
    uint64_t v30 = sub_22342C130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_22332F4E0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22332F5DC, 0, 0);
}

uint64_t sub_22332F5DC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);

  sub_2233320E4(v2);
  uint64_t v3 = sub_22342C130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_22332F6A0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22332F79C, 0, 0);
}

uint64_t sub_22332F79C()
{
  uint64_t v1 = *(void *)(v0 + 152);

  sub_2233320E4(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_22332F828()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233349E0, 0, 0);
}

uint64_t sub_22332F924()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[31] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_22332FAD4;
  uint64_t v4 = v1[29];
  uint64_t v5 = v1[17];
  uint64_t v6 = v1[16];
  uint64_t v7 = v1[15];
  uint64_t v8 = v1[14];
  uint64_t v9 = v1[12];
  return sub_223329264(v5, v9, (uint64_t)&off_26D671AD0, v8, v7, v6, v4);
}

uint64_t sub_22332FAD4()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233301D0;
  }
  else {
    uint64_t v2 = sub_22332FBE8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22332FBE8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);

  sub_223332140(v2, v1);
  uint64_t v3 = *(void **)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 232);
  *(void *)(v0 + 200) = v4;
  uint64_t v5 = *(void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_osActivity);
  swift_beginAccess();
  swift_retain();
  os_activity_scope_leave((os_activity_scope_state_t)(v5 + 24));
  swift_endAccess();
  swift_release();
  sub_2233C5EB0(MEMORY[0x263F8EE78]);
  sub_22332581C();
  swift_bridgeObjectRelease();
  type metadata accessor for SyncCoordinator();
  sub_2233C6CAC();
  if (v3)
  {
    uint64_t v6 = sub_22342C1E0();
    os_log_type_t v7 = sub_22342C710();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_223317000, v6, v7, "Failed to clear active sync state!", v8, 2u);
      MEMORY[0x223CB62D0](v8, -1, -1);
    }
  }
  uint64_t v9 = *(void *)(v0 + 144);
  sub_2233321A4(*(void *)(v0 + 152), v9);
  uint64_t v10 = sub_22331E640(&qword_26AD5ED18);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 2, v10);
  if (v11)
  {
    if (v11 == 1)
    {
      unsigned int v12 = *(int **)(v0 + 120);
      if (v12)
      {
        uint64_t v13 = *(void *)(v0 + 96);
        uint64_t v32 = (int *)((char *)v12 + *v12);
        uint64_t v14 = (void *)swift_task_alloc();
        *(void *)(v0 + 216) = v14;
        void *v14 = v0;
        v14[1] = sub_22332F6A0;
        uint64_t v15 = v13;
        uint64_t v16 = 64;
LABEL_13:
        return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v32)(v15, &off_26D671AD0, v16, v4);
      }
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 120);
      uint64_t v21 = (void *)(*(void *)(v0 + 96) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
      uint64_t v22 = v21[3];
      uint64_t v23 = v21[4];
      sub_223321F60(v21, v22);
      (*(void (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
      if (v20)
      {
        uint64_t v24 = *(void *)(v0 + 96);
        uint64_t v32 = (int *)(*(void *)(v0 + 120) + **(int **)(v0 + 120));
        uint64_t v25 = (void *)swift_task_alloc();
        *(void *)(v0 + 224) = v25;
        void *v25 = v0;
        v25[1] = sub_22332F828;
        uint64_t v15 = v24;
        uint64_t v16 = 1;
        goto LABEL_13;
      }
    }
    uint64_t v27 = *(void *)(v0 + 152);

    sub_2233320E4(v27);
  }
  else
  {
    uint64_t v17 = *(int **)(v0 + 120);
    if (v17)
    {
      uint64_t v18 = *(void *)(v0 + 96);
      uint64_t v32 = (int *)((char *)v17 + *v17);
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v19;
      void *v19 = v0;
      v19[1] = sub_22332F4E0;
      uint64_t v15 = v18;
      uint64_t v16 = 128;
      goto LABEL_13;
    }
    uint64_t v28 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 152);

    sub_2233320E4(v29);
    uint64_t v30 = sub_22342C130();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_223330090()
{
  uint64_t v1 = (void *)v0[23];
  v0[29] = v1;
  uint64_t v2 = (void *)v0[13];
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_223321F60(v2, v3);
  uint64_t v5 = *(void *)(*(void *)(v4 + 8) + 8);
  uint64_t v6 = *(int **)(v5 + 56);
  id v7 = v1;
  int v11 = (int *)((char *)v6 + *v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[30] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_22332F924;
  uint64_t v9 = v0[12];
  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))v11)(v9, &off_26D671AD0, v3, v5);
}

uint64_t sub_2233301D0()
{
  uint64_t v1 = *(void **)(v0 + 232);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_223330268(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_2233302C8(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  return MEMORY[0x270FA2498](sub_2233302EC, 0, 0);
}

uint64_t sub_2233302EC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  int v2 = *(unsigned __int8 *)(v1 + 97);
  *(unsigned char *)(v0 + 224) = v2;
  uint64_t v3 = *(void *)(v1 + 88);
  *(void *)(v0 + 104) = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v0 + 112) = v4;
  if (v4)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 184) = 0;
    *(void *)(v0 + 192) = v5;
    *(void *)(v0 + 176) = 0;
    *(unsigned char *)(v0 + 225) = v2 == 2;
    uint64_t v6 = v3 + 32;
    swift_bridgeObjectRetain();
    sub_223322120(v6, v0 + 16);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    sub_223321F60((void *)(v0 + 16), v7);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v9;
    void *v9 = v0;
    v9[1] = sub_22333090C;
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    return sub_22338A730(v11, v10, v7, v8);
  }
  else
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
    *(void *)(v0 + 120) = MEMORY[0x263F8EE78];
    *(void *)(v0 + 128) = v14;
    if (v14)
    {
      uint64_t v15 = *(void **)(v13 + 32);
      *(void *)(v0 + 136) = v15;
      if (v14 == 1)
      {
        id v16 = v15;
        swift_willThrow();
        swift_bridgeObjectRelease();
        uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
        return v17();
      }
      else
      {
        uint64_t v20 = *(void *)(v0 + 80);
        uint64_t v21 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
        *(void *)(v0 + 144) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
        *(void *)(v0 + 152) = *(void *)(v20 + v21);
        id v22 = v15;
        *(void *)(v0 + 160) = 1;
        uint64_t v23 = *(void *)(v0 + 152);
        uint64_t v24 = *(void **)(*(void *)(v0 + 120) + 40);
        *(void *)(v0 + 168) = v24;
        swift_bridgeObjectRetain();
        id v25 = v24;
        swift_retain();
        return MEMORY[0x270FA2498](sub_223330560, v23, 0);
      }
    }
    else
    {
      BOOL v18 = v2 == 2;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(uint64_t (**)(void, BOOL))(v0 + 8);
      return v19(0, v18);
    }
  }
}

uint64_t sub_223330560()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 152);
  swift_beginAccess();
  uint64_t v3 = *(void **)(v2 + 184);
  id v4 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 184) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v3 = sub_22338B204(0, v3[2] + 1, 1, v3);
    *(void *)(v9 + 184) = v3;
  }
  unint64_t v7 = v3[2];
  unint64_t v6 = v3[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v3 = sub_22338B204((void *)(v6 > 1), v7 + 1, 1, v3);
    *(void *)(v10 + 184) = v3;
  }
  uint64_t v8 = *(void *)(v0 + 168);
  v3[2] = v7 + 1;
  v3[v7 + 4] = v8;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_223330690, 0, 0);
}

uint64_t sub_223330690()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)(*(void *)(v0 + 80) + *(void *)(v0 + 144));
  uint64_t v2 = *(void **)(*sub_223321F60(v1, v1[3]) + 56);
  if (v2)
  {
    swift_unknownObjectRetain();
    uint64_t v3 = (void *)sub_22342BF20();
    objc_msgSend(v2, sel_appendError_, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_22342C200();
    sub_223323374(v4, (uint64_t)qword_26AD63108);
    uint64_t v5 = sub_22342C1E0();
    os_log_type_t v6 = sub_22342C700();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v19 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v9 = sub_223388D58();
      *(void *)(v7 + 4) = sub_22339BC14(v9, v10, &v19);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v5, v6, "Encountered error setting sync date: %s", (uint8_t *)v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v8, -1, -1);
      MEMORY[0x223CB62D0](v7, -1, -1);
    }
  }
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 160) + 1;

  if (v12 == v11)
  {
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 160) + 1;
    *(void *)(v0 + 160) = v16;
    uint64_t v17 = *(void **)(*(void *)(v0 + 120) + 8 * v16 + 32);
    *(void *)(v0 + 168) = v17;
    id v18 = v17;
    swift_retain();
    return MEMORY[0x270FA2498](sub_223330560, v15, 0);
  }
}

uint64_t sub_22333090C(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  *(unsigned char *)(v5 + 226) = a2;
  *(void *)(v5 + 208) = v2;
  swift_task_dealloc();
  if (v2)
  {
    os_log_type_t v6 = sub_223330D90;
  }
  else
  {
    *(void *)(v5 + 216) = a1;
    os_log_type_t v6 = sub_223330A38;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_223330A38(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 216);
  uint64_t v5 = *(void *)(v3 + 176);
  uint64_t v6 = v5 + v4;
  if (__OFADD__(v5, v4))
  {
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  if (!*(unsigned char *)(v3 + 224)) {
    goto LABEL_9;
  }
  if (*(unsigned char *)(v3 + 224) != 1)
  {
    if (*(unsigned char *)(v3 + 226))
    {
      char v9 = sub_22342CF60();
      swift_bridgeObjectRelease();
      uint64_t v8 = 0;
      if (v9) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v8 = 0;
    goto LABEL_13;
  }
  if (*(unsigned char *)(v3 + 226))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = 1;
    goto LABEL_13;
  }
  char v7 = sub_22342CF60();
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v8 = 1;
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v8 = *(unsigned __int8 *)(v3 + 225);
LABEL_13:
  uint64_t v10 = *(void *)(v3 + 192);
  uint64_t v11 = *(void *)(v3 + 112);
  uint64_t v12 = *(void *)(v3 + 184) + 1;
  _s17MessagesCloudSync9SyncFilesVwxx_0(v3 + 16);
  if (v12 == v11)
  {
    swift_bridgeObjectRelease();
    *(void *)(v3 + 120) = v10;
    uint64_t v13 = *(void *)(v10 + 16);
    *(void *)(v3 + 128) = v13;
    if (v13)
    {
      uint64_t v14 = *(void **)(v10 + 32);
      *(void *)(v3 + 136) = v14;
      if (v13 == 1)
      {
        id v15 = v14;
        swift_willThrow();
        swift_bridgeObjectRelease();
        uint64_t v16 = *(uint64_t (**)(void))(v3 + 8);
        return v16();
      }
      uint64_t v25 = *(void *)(v3 + 80);
      uint64_t v26 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
      *(void *)(v3 + 144) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
      *(void *)(v3 + 152) = *(void *)(v25 + v26);
      id v27 = v14;
      *(void *)(v3 + 160) = 1;
      uint64_t v28 = *(void *)(v3 + 152);
      uint64_t v29 = *(void **)(*(void *)(v3 + 120) + 40);
      *(void *)(v3 + 168) = v29;
      swift_bridgeObjectRetain();
      id v30 = v29;
      swift_retain();
      a1 = sub_223330560;
      a2 = v28;
      a3 = 0;
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    swift_bridgeObjectRelease();
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    return v24(v6, v8);
  }
  else
  {
    uint64_t v18 = *(void *)(v3 + 184) + 1;
    *(void *)(v3 + 184) = v18;
    *(void *)(v3 + 192) = v10;
    *(void *)(v3 + 176) = v6;
    *(unsigned char *)(v3 + 225) = v8;
    sub_223322120(*(void *)(v3 + 104) + 40 * v18 + 32, v3 + 16);
    uint64_t v19 = *(void *)(v3 + 40);
    uint64_t v20 = *(void *)(v3 + 48);
    sub_223321F60((void *)(v3 + 16), v19);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v3 + 200) = v21;
    void *v21 = v3;
    v21[1] = sub_22333090C;
    uint64_t v23 = *(void *)(v3 + 80);
    uint64_t v22 = *(void *)(v3 + 88);
    return sub_22338A730(v23, v22, v19, v20);
  }
}

uint64_t sub_223330D90()
{
  if ((*(unsigned char *)(*(void *)(v0 + 96) + 96) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
    goto LABEL_11;
  }
  id v1 = *(id *)(v0 + 208);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = *(void **)(v0 + 192);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v3 = sub_22338B204(0, v3[2] + 1, 1, *(void **)(v0 + 192));
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_22338B204((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  uint64_t v6 = *(void **)(v0 + 208);
  v3[2] = v5 + 1;
  char v7 = (void **)(v3 + 4);
  v3[v5 + 4] = v6;

  uint64_t v8 = *(unsigned __int8 *)(v0 + 225);
  uint64_t v9 = *(void *)(v0 + 176);
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 184) + 1;
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  if (v11 == v10)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 120) = v3;
    uint64_t v12 = v3[2];
    *(void *)(v0 + 128) = v12;
    if (v12)
    {
      uint64_t v13 = *v7;
      *(void *)(v0 + 136) = *v7;
      if (v12 == 1)
      {
        id v14 = v13;
        swift_willThrow();
        swift_bridgeObjectRelease();
LABEL_11:
        id v15 = *(uint64_t (**)(void))(v0 + 8);
        return v15();
      }
      uint64_t v24 = *(void *)(v0 + 80);
      uint64_t v25 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
      *(void *)(v0 + 144) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
      *(void *)(v0 + 152) = *(void *)(v24 + v25);
      id v26 = v13;
      *(void *)(v0 + 160) = 1;
      uint64_t v27 = *(void *)(v0 + 152);
      uint64_t v28 = *(void **)(*(void *)(v0 + 120) + 40);
      *(void *)(v0 + 168) = v28;
      swift_bridgeObjectRetain();
      id v29 = v28;
      swift_retain();
      return MEMORY[0x270FA2498](sub_223330560, v27, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v23(v9, v8);
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 184) + 1;
    *(void *)(v0 + 184) = v17;
    *(void *)(v0 + 192) = v3;
    *(void *)(v0 + 176) = v9;
    *(unsigned char *)(v0 + 225) = v8;
    sub_223322120(*(void *)(v0 + 104) + 40 * v17 + 32, v0 + 16);
    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    sub_223321F60((void *)(v0 + 16), v18);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_22333090C;
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 88);
    return sub_22338A730(v22, v21, v18, v19);
  }
}

uint64_t sub_2233310D8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_223331128(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_223331204;
  return v6(a1);
}

uint64_t sub_223331204()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2233312FC(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = type metadata accessor for CloudState();
  id v15 = &off_26D673950;
  v13[0] = a1;
  uint64_t v11 = type metadata accessor for SyncJob();
  uint64_t v12 = &off_26D66F718;
  v10[0] = a2;
  uint64_t v4 = sub_223321F60(v13, v14);
  unint64_t v5 = sub_223321F60(v10, v11);
  uint64_t v6 = *(void **)(*v4 + 56);
  if (v6)
  {
    uint64_t v7 = qword_22342F398[*(char *)(*v5 + 17)];
    swift_retain();
    swift_retain();
    objc_msgSend(v6, sel_setSyncPhaseType_, v7, v10[0]);
  }
  else
  {
    swift_retain();
    swift_retain();
  }
  uint64_t v8 = *(void **)(*sub_223321F60(v13, v14) + 56);
  if (v8) {
    objc_msgSend(v8, sel_setSyncJobStateWithState_, 1);
  }
  sub_223321F60(v13, v14);
  sub_223422D74(0);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v13);
  return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v10);
}

uint64_t sub_223331428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, char a20,char a21,char a22,uint64_t a23)
{
  v63[3] = type metadata accessor for XPCActivity();
  v63[4] = &off_26D66DC40;
  v63[0] = a4;
  uint64_t v61 = type metadata accessor for SyncJob();
  uint64_t v62 = &off_26D66F718;
  v60[0] = a1;
  v59[3] = type metadata accessor for CloudState();
  v59[4] = &off_26D673950;
  v59[0] = a5;
  v58[3] = &type metadata for FileManagerProvider;
  v58[4] = &off_26D66EBE0;
  v58[0] = a15;
  v57[3] = type metadata accessor for SyncTelemetryReporter();
  v57[4] = &off_26D672D20;
  v57[0] = a16;
  uint64_t v55 = type metadata accessor for CountStore();
  uint64_t v56 = &off_26D672A10;
  *(void *)&long long v54 = a17;
  sub_223322120((uint64_t)v60, a23 + 16);
  uint64_t v27 = a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_identifier;
  uint64_t v43 = sub_22342C170();
  uint64_t v28 = *(void *)(v43 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, a2, v43);
  uint64_t v29 = a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_startDate;
  uint64_t v30 = sub_22342C130();
  uint64_t v31 = *(void *)(v30 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v29, a3, v30);
  sub_223322120((uint64_t)v63, a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
  sub_223322120((uint64_t)v59, a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
  sub_223322120(a6, a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudDatabase);
  uint64_t v32 = (void *)(a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_syncDatabase);
  void *v32 = a7;
  v32[1] = a8;
  *(void *)(a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_delegate) = a9;
  *(void *)(a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_notifiers) = a10;
  *(void *)(a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_attemptCount) = a11;
  type metadata accessor for OSActivity();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  *(void *)(a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_osActivity) = sub_22338EEC0(a12, a13, a14);
  sub_223322120((uint64_t)v58, a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_fileProvider);
  sub_223322120((uint64_t)v57, a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_telemetryService);
  char v33 = *(unsigned char *)(*sub_223321F60(v60, v61) + 17);
  type metadata accessor for SyncStatsCollector();
  uint64_t v34 = swift_allocObject();
  swift_defaultActor_initialize();
  char v46 = v33;
  sub_223369ED8(&v46, (uint64_t)v47);
  char v35 = v49;
  uint64_t v36 = v53;
  *(unsigned char *)(v34 + 112) = v47[0];
  *(_OWORD *)(v34 + 120) = v48;
  *(unsigned char *)(v34 + 136) = v35;
  long long v37 = v51;
  *(_OWORD *)(v34 + 144) = v50;
  *(_OWORD *)(v34 + 160) = v37;
  *(_OWORD *)(v34 + 176) = v52;
  *(void *)(v34 + 192) = v36;
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v57);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v58);
  _s17MessagesCloudSync9SyncFilesVwxx_0(a6);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v59);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v63);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a3, v30);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a2, v43);
  *(void *)(a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector) = v34;
  sub_223332E10(&v54, a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore);
  unint64_t v38 = (unsigned char *)(a23 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_devicePolicy);
  unsigned char *v38 = a18 & 1;
  v38[1] = a19 & 1;
  void v38[2] = a20 & 1;
  v38[3] = a21;
  v38[4] = a22 & 1;
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v60);
  return a23;
}

uint64_t sub_223331890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v48 = a8;
  uint64_t v47 = a7;
  uint64_t v46 = a6;
  uint64_t v45 = a4;
  uint64_t v44 = a3;
  uint64_t v43 = a2;
  long long v42 = a9;
  long long v41 = a10;
  uint64_t v62 = type metadata accessor for SyncJob();
  uint64_t v63 = &off_26D66F718;
  v61[0] = a1;
  uint64_t v60 = &off_26D673950;
  uint64_t v59 = type metadata accessor for CloudState();
  v58[0] = a5;
  uint64_t v56 = &type metadata for FileManagerProvider;
  uint64_t v57 = &off_26D66EBE0;
  v55[0] = a13;
  uint64_t v53 = type metadata accessor for SyncTelemetryReporter();
  long long v54 = &off_26D672D20;
  v52[0] = a14;
  long long v51 = &off_26D672A10;
  uint64_t v50 = type metadata accessor for CountStore();
  v49[0] = a15;
  type metadata accessor for SyncContext();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = sub_2233310D8((uint64_t)v61, v62);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (uint64_t *)((char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = sub_2233310D8((uint64_t)v58, v59);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (uint64_t *)((char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  uint64_t v27 = sub_2233310D8((uint64_t)v55, (uint64_t)v56);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (uint64_t *)((char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v30 + 16))(v29);
  uint64_t v31 = sub_2233310D8((uint64_t)v52, v53);
  MEMORY[0x270FA5388](v31);
  char v33 = (uint64_t *)((char *)&v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  uint64_t v35 = sub_2233310D8((uint64_t)v49, v50);
  MEMORY[0x270FA5388](v35);
  long long v37 = (uint64_t *)((char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v38 + 16))(v37);
  uint64_t v39 = sub_223331428(*v21, v43, v44, v45, *v25, v46, v47, v48, v42, *((uint64_t *)&v42 + 1), v41, *((char **)&v41 + 1), a11, a12, *v29, *v33, *v37, a16 & 1, (unsigned __int16)(a16 & 0x101) >> 8,
          (a16 & 0xFF010101) >> 16,
          (a16 & 0xFF010101) >> 24,
          (a16 & 0x1FF010101uLL) >> 32,
          v18);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v49);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v52);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v55);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v58);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v61);
  return v39;
}

uint64_t sub_223331D8C()
{
  swift_unknownObjectRelease();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 32);
  swift_release();
  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_223331DE4()
{
  uint64_t v2 = v0 + 32;
  long long v6 = *(_OWORD *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_223331EB0;
  *(void *)(v4 + 104) = v3;
  *(_OWORD *)(v4 + 88) = v6;
  *(void *)(v4 + 80) = v2;
  return MEMORY[0x270FA2498](sub_223325980, 0, 0);
}

uint64_t sub_223331EB0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_223331FA4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_223331FB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 5);
  uint64_t v8 = (uint64_t)(v1 + 10);
  uint64_t v10 = v1[15];
  uint64_t v9 = v1[16];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_223331EB0;
  return sub_223326218(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t type metadata accessor for HandleErrorOutcome()
{
  uint64_t result = qword_26AD5EEC0;
  if (!qword_26AD5EEC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2233320E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HandleErrorOutcome();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_223332140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HandleErrorOutcome();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2233321A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HandleErrorOutcome();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_223332208(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_sharedInstance);
  if (v6)
  {
    uint64_t v7 = v6;
    unsigned int v8 = objc_msgSend(v6, sel_isInternalInstall);

    if (v8)
    {
      uint64_t v9 = *(void **)(*sub_223321F60(a1, a1[3]) + 24);
      uint64_t v53 = a2;
      uint64_t v54 = a3;
      swift_bridgeObjectRetain();
      sub_22342C3B0();
      id v10 = v9;
      uint64_t v11 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v10, sel_stringForKey_, v11);

      if (v12)
      {
        uint64_t v50 = sub_22342C300();
        unint64_t v52 = v13;
      }
      else
      {
        uint64_t v50 = 0;
        unint64_t v52 = 0;
      }
      uint64_t v14 = *(void **)(*sub_223321F60(a1, a1[3]) + 24);
      uint64_t v53 = a2;
      uint64_t v54 = a3;
      swift_bridgeObjectRetain();
      sub_22342C3B0();
      id v15 = v14;
      uint64_t v16 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      id v51 = objc_msgSend(v15, sel_integerForKey_, v16);

      uint64_t v17 = *(void **)(*sub_223321F60(a1, a1[3]) + 24);
      uint64_t v53 = a2;
      uint64_t v54 = a3;
      swift_bridgeObjectRetain();
      sub_22342C3B0();
      id v18 = v17;
      uint64_t v19 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v18, sel_dictionaryForKey_, v19);

      if (v20)
      {
        uint64_t v21 = sub_22342C270();
      }
      else
      {
        uint64_t v21 = 0;
      }
      uint64_t v22 = *(void **)(*sub_223321F60(a1, a1[3]) + 24);
      uint64_t v53 = a2;
      uint64_t v54 = a3;
      swift_bridgeObjectRetain();
      sub_22342C3B0();
      id v23 = v22;
      uint64_t v24 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      uint64_t v25 = (uint64_t)objc_msgSend(v23, sel_integerForKey_, v24);

      if (v52)
      {
        if (v25)
        {
          uint64_t v26 = &qword_26AD5F000;
          if (v25 >= 1)
          {
            uint64_t v27 = *(void **)(*sub_223321F60(a1, a1[3]) + 24);
            uint64_t v53 = a2;
            uint64_t v54 = a3;
            swift_bridgeObjectRetain();
            sub_22342C3B0();
            id v28 = v27;
            uint64_t v29 = (void *)sub_22342C2D0();
            uint64_t v26 = &qword_26AD5F000;
            swift_bridgeObjectRelease();
            objc_msgSend(v28, sel_setInteger_forKey_, v25 - 1, v29);

            if (qword_26AD5F0D8 != -1) {
              swift_once();
            }
            uint64_t v30 = sub_22342C200();
            sub_223323374(v30, (uint64_t)qword_26AD63108);
            swift_bridgeObjectRetain_n();
            uint64_t v31 = sub_22342C1E0();
            os_log_type_t v32 = sub_22342C720();
            if (os_log_type_enabled(v31, v32))
            {
              uint64_t v33 = swift_slowAlloc();
              uint64_t v34 = swift_slowAlloc();
              uint64_t v53 = v34;
              *(_DWORD *)uint64_t v33 = 136315906;
              swift_bridgeObjectRetain();
              uint64_t v55 = sub_22339BC14(v50, v52, (uint64_t *)&v53);
              uint64_t v26 = &qword_26AD5F000;
              sub_22342CA10();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v33 + 12) = 2048;
              uint64_t v55 = (uint64_t)v51;
              sub_22342CA10();
              *(_WORD *)(v33 + 22) = 2048;
              uint64_t v55 = v25;
              sub_22342CA10();
              *(_WORD *)(v33 + 32) = 2048;
              uint64_t v55 = v25 - 1;
              sub_22342CA10();
              _os_log_impl(&dword_223317000, v31, v32, "Decremented error(%s: %ld) count from %ld to %ld", (uint8_t *)v33, 0x2Au);
              swift_arrayDestroy();
              MEMORY[0x223CB62D0](v34, -1, -1);
              MEMORY[0x223CB62D0](v33, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
          }
          uint64_t v40 = (void *)sub_22342C2D0();
          swift_bridgeObjectRelease();
          if (v21)
          {
            long long v41 = (void *)sub_22342C260();
            swift_bridgeObjectRelease();
          }
          else
          {
            long long v41 = 0;
          }
          id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087E8]), sel_initWithDomain_code_userInfo_, v40, v51, v41);

          if (v26[27] != -1) {
            swift_once();
          }
          uint64_t v43 = sub_22342C200();
          sub_223323374(v43, (uint64_t)qword_26AD63108);
          uint64_t v44 = v42;
          uint64_t v45 = sub_22342C1E0();
          os_log_type_t v46 = sub_22342C700();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v47 = (uint8_t *)swift_slowAlloc();
            uint64_t v48 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v47 = 138412290;
            uint64_t v53 = v44;
            char v49 = v44;
            sub_22342CA10();
            *uint64_t v48 = v44;

            _os_log_impl(&dword_223317000, v45, v46, "Throwing forced error %@, based on defaults in com.apple.madrid MiC.ForceJobError.*", v47, 0xCu);
            sub_22331E640((uint64_t *)&unk_26AD5F150);
            swift_arrayDestroy();
            MEMORY[0x223CB62D0](v48, -1, -1);
            MEMORY[0x223CB62D0](v47, -1, -1);
          }
          else
          {

            uint64_t v45 = v44;
          }

          swift_willThrow();
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_26AD5F0D8 != -1) {
            swift_once();
          }
          uint64_t v35 = sub_22342C200();
          sub_223323374(v35, (uint64_t)qword_26AD63108);
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_22342C1E0();
          os_log_type_t v37 = sub_22342C700();
          if (os_log_type_enabled(v36, v37))
          {
            uint64_t v38 = swift_slowAlloc();
            uint64_t v39 = swift_slowAlloc();
            uint64_t v53 = v39;
            *(_DWORD *)uint64_t v38 = 136315650;
            swift_bridgeObjectRetain();
            uint64_t v55 = sub_22339BC14(v50, v52, (uint64_t *)&v53);
            sub_22342CA10();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v38 + 12) = 2048;
            uint64_t v55 = (uint64_t)v51;
            sub_22342CA10();
            *(_WORD *)(v38 + 22) = 2048;
            uint64_t v55 = 0;
            sub_22342CA10();
            _os_log_impl(&dword_223317000, v36, v37, "Forced error (%s: %ld) found, but count is %ld, ignoring", (uint8_t *)v38, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x223CB62D0](v39, -1, -1);
            MEMORY[0x223CB62D0](v38, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_223332AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_223332B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_223332BBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_223332C04()
{
  unint64_t result = qword_26AD5EFD0;
  if (!qword_26AD5EFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EFD0);
  }
  return result;
}

uint64_t sub_223332C58(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_223332C68()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_223332CA0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223334A58;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_267FA2728 + dword_267FA2728);
  return v6(a1, v4);
}

uint64_t sub_223332D58()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_223332D90()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 72);
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 112);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 176);
  if (*(void *)(v0 + 216)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 232, 7);
}

uint64_t sub_223332E10(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_223332E28(_xpc_activity_s *a1)
{
  sub_22332C780(a1, (v1 + 16), *(void **)(v1 + 56), *(void *)(v1 + 64), (id)(v1 + 72), v1 + 112, *(void **)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168), v1 + 176, *(void *)(v1 + 216), *(void *)(v1 + 224));
}

uint64_t sub_223332E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_223332E80()
{
  return swift_release();
}

BOOL sub_223332E88(void *a1)
{
  id v1 = a1;
  uint64_t v2 = MEMORY[0x223CB64F0]();

  return v2 == MEMORY[0x263EF8708];
}

unint64_t sub_223332EC8()
{
  unint64_t result = qword_267FA2740;
  if (!qword_267FA2740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2740);
  }
  return result;
}

uint64_t sub_223332F1C()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_223332F54(char *a1, void *a2)
{
  return sub_22332C584(a1, a2, *(xpc_object_t *)(v2 + 16));
}

uint64_t sub_223332F5C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_223332F6C()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_223332F98()
{
  swift_unknownObjectRelease();
  swift_release();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 40);
  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_223332FF8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0 + 40;
  long long v7 = *(_OWORD *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_223334A58;
  *(void *)(v5 + 120) = v4;
  *(_OWORD *)(v5 + 104) = v7;
  *(void *)(v5 + 88) = v2;
  *(void *)(v5 + 96) = v3;
  return MEMORY[0x270FA2498](sub_22332D938, 0, 0);
}

uint64_t sub_2233330CC()
{
  swift_unknownObjectRelease();
  swift_release();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 40);
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 80);
  if (*(void *)(v0 + 120)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_22333312C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 5);
  uint64_t v8 = (uint64_t)(v1 + 10);
  uint64_t v10 = v1[15];
  uint64_t v9 = v1[16];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_223334A58;
  return sub_22332E54C(a1, v4, v5, v6, v7, v8, v10, v9);
}

ValueMetadata *type metadata accessor for XPCSyncJobScheduler()
{
  return &type metadata for XPCSyncJobScheduler;
}

uint64_t *sub_22333321C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_22331E640(&qword_26AD5ED18);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_22342C130();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_223333388(uint64_t a1)
{
  uint64_t v2 = sub_22331E640(&qword_26AD5ED18);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_22342C130();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_22333343C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22331E640(&qword_26AD5ED18);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_22342C130();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_22333356C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22331E640(&qword_26AD5ED18);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_22342C130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_2233232B8((uint64_t)a1, &qword_26AD5ED18);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_22342C130();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_223333718(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22331E640(&qword_26AD5ED18);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_22342C130();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_223333848(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22331E640(&qword_26AD5ED18);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_22342C130();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_2233232B8((uint64_t)a1, &qword_26AD5ED18);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_22342C130();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_2233339F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_223333A08);
}

uint64_t sub_223333A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_26AD5ED18);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_223333A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_223333A8C);
}

uint64_t sub_223333A8C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_22331E640(&qword_26AD5ED18);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_223333B14(uint64_t a1)
{
  uint64_t v2 = sub_22331E640(&qword_26AD5ED18);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_223333B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_26AD5ED18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_223333BF4()
{
  uint64_t result = sub_22342C130();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_223333C6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v5 + 177) = a5;
  *(unsigned char *)(v5 + 176) = a4;
  *(void *)(v5 + 48) = a2;
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 40) = a1;
  return MEMORY[0x270FA2498](sub_223333C98, 0, 0);
}

uint64_t sub_223333C98()
{
  int v1 = *(unsigned __int8 *)(v0 + 177);
  uint64_t v2 = *(void **)(v0 + 56);
  uint64_t v3 = v2[2];
  *(void *)(v0 + 64) = v3;
  if (v3)
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 144) = v4;
    *(void *)(v0 + 128) = 0;
    *(unsigned char *)(v0 + 178) = v1 == 2;
    uint64_t v5 = v2 + 4;
    uint64_t v6 = v2[7];
    uint64_t v7 = v2[8];
    swift_bridgeObjectRetain();
    sub_223321F60(v5, v6);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_22333429C;
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 48);
    return sub_22338A730(v10, v9, v6, v7);
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
    *(void *)(v0 + 72) = MEMORY[0x263F8EE78];
    *(void *)(v0 + 80) = v13;
    if (v13)
    {
      uint64_t v14 = *(void **)(v12 + 32);
      *(void *)(v0 + 88) = v14;
      if (v13 == 1)
      {
        id v15 = v14;
        swift_willThrow();
        swift_bridgeObjectRelease();
        uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
        return v16();
      }
      else
      {
        uint64_t v19 = *(void *)(v0 + 40);
        uint64_t v20 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
        *(void *)(v0 + 96) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
        *(void *)(v0 + 104) = *(void *)(v19 + v20);
        id v21 = v14;
        *(void *)(v0 + 112) = 1;
        uint64_t v22 = *(void *)(v0 + 104);
        id v23 = *(void **)(*(void *)(v0 + 72) + 40);
        *(void *)(v0 + 120) = v23;
        swift_bridgeObjectRetain();
        id v24 = v23;
        swift_retain();
        return MEMORY[0x270FA2498](sub_223333EF0, v22, 0);
      }
    }
    else
    {
      BOOL v17 = v1 == 2;
      swift_bridgeObjectRelease();
      id v18 = *(uint64_t (**)(void, BOOL))(v0 + 8);
      return v18(0, v17);
    }
  }
}

uint64_t sub_223333EF0()
{
  int v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  swift_beginAccess();
  uint64_t v3 = *(void **)(v2 + 184);
  id v4 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 184) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v3 = sub_22338B204(0, v3[2] + 1, 1, v3);
    *(void *)(v9 + 184) = v3;
  }
  unint64_t v7 = v3[2];
  unint64_t v6 = v3[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v3 = sub_22338B204((void *)(v6 > 1), v7 + 1, 1, v3);
    *(void *)(v10 + 184) = v3;
  }
  uint64_t v8 = *(void *)(v0 + 120);
  v3[2] = v7 + 1;
  v3[v7 + 4] = v8;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_223334020, 0, 0);
}

uint64_t sub_223334020()
{
  uint64_t v20 = v0;
  int v1 = (void *)(*(void *)(v0 + 40) + *(void *)(v0 + 96));
  uint64_t v2 = *(void **)(*sub_223321F60(v1, v1[3]) + 56);
  if (v2)
  {
    swift_unknownObjectRetain();
    uint64_t v3 = (void *)sub_22342BF20();
    objc_msgSend(v2, sel_appendError_, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_22342C200();
    sub_223323374(v4, (uint64_t)qword_26AD63108);
    uint64_t v5 = sub_22342C1E0();
    os_log_type_t v6 = sub_22342C700();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v19 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v9 = sub_223388D58();
      *(void *)(v7 + 4) = sub_22339BC14(v9, v10, &v19);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v5, v6, "Encountered error setting sync date: %s", (uint8_t *)v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v8, -1, -1);
      MEMORY[0x223CB62D0](v7, -1, -1);
    }
  }
  uint64_t v11 = *(void *)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 112) + 1;

  if (v12 == v11)
  {
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v16 = *(void *)(v0 + 112) + 1;
    *(void *)(v0 + 112) = v16;
    BOOL v17 = *(void **)(*(void *)(v0 + 72) + 8 * v16 + 32);
    *(void *)(v0 + 120) = v17;
    id v18 = v17;
    swift_retain();
    return MEMORY[0x270FA2498](sub_223333EF0, v15, 0);
  }
}

uint64_t sub_22333429C(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  *(unsigned char *)(v5 + 179) = a2;
  *(void *)(v5 + 160) = v2;
  swift_task_dealloc();
  if (v2)
  {
    os_log_type_t v6 = sub_2233346D8;
  }
  else
  {
    *(void *)(v5 + 168) = a1;
    os_log_type_t v6 = sub_2233343C8;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2233343C8(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 168);
  uint64_t v5 = *(void *)(v3 + 128);
  uint64_t v6 = v5 + v4;
  if (__OFADD__(v5, v4))
  {
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  if (!*(unsigned char *)(v3 + 177)) {
    goto LABEL_9;
  }
  if (*(unsigned char *)(v3 + 177) != 1)
  {
    if (*(unsigned char *)(v3 + 179))
    {
      char v9 = sub_22342CF60();
      swift_bridgeObjectRelease();
      uint64_t v8 = 0;
      if (v9) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v8 = 0;
    goto LABEL_13;
  }
  if (*(unsigned char *)(v3 + 179))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = 1;
    goto LABEL_13;
  }
  char v7 = sub_22342CF60();
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v8 = 1;
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v8 = *(unsigned __int8 *)(v3 + 178);
LABEL_13:
  uint64_t v10 = *(void *)(v3 + 136) + 1;
  if (v10 == *(void *)(v3 + 64))
  {
    uint64_t v11 = *(void *)(v3 + 144);
    swift_bridgeObjectRelease();
    *(void *)(v3 + 72) = v11;
    uint64_t v12 = *(void *)(v11 + 16);
    *(void *)(v3 + 80) = v12;
    if (v12)
    {
      uint64_t v13 = *(void **)(v11 + 32);
      *(void *)(v3 + 88) = v13;
      if (v12 == 1)
      {
        id v14 = v13;
        swift_willThrow();
        swift_bridgeObjectRelease();
        uint64_t v15 = *(uint64_t (**)(void))(v3 + 8);
        return v15();
      }
      uint64_t v24 = *(void *)(v3 + 40);
      uint64_t v25 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
      *(void *)(v3 + 96) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
      *(void *)(v3 + 104) = *(void *)(v24 + v25);
      id v26 = v13;
      *(void *)(v3 + 112) = 1;
      uint64_t v27 = *(void *)(v3 + 104);
      id v28 = *(void **)(*(void *)(v3 + 72) + 40);
      *(void *)(v3 + 120) = v28;
      swift_bridgeObjectRetain();
      id v29 = v28;
      swift_retain();
      a1 = sub_223333EF0;
      a2 = v27;
      a3 = 0;
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    swift_bridgeObjectRelease();
    id v23 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    return v23(v6, v8);
  }
  else
  {
    *(void *)(v3 + 128) = v6;
    *(void *)(v3 + 136) = v10;
    *(unsigned char *)(v3 + 178) = v8;
    BOOL v17 = (void *)(*(void *)(v3 + 56) + 40 * v10);
    uint64_t v19 = v17[7];
    uint64_t v18 = v17[8];
    sub_223321F60(v17 + 4, v19);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v3 + 152) = v20;
    *uint64_t v20 = v3;
    v20[1] = sub_22333429C;
    uint64_t v22 = *(void *)(v3 + 40);
    uint64_t v21 = *(void *)(v3 + 48);
    return sub_22338A730(v22, v21, v19, v18);
  }
}

uint64_t sub_2233346D8()
{
  if ((*(unsigned char *)(v0 + 176) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
LABEL_3:
    int v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  id v3 = *(id *)(v0 + 160);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *(void **)(v0 + 144);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v5 = sub_22338B204(0, v5[2] + 1, 1, *(void **)(v0 + 144));
  }
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    uint64_t v5 = sub_22338B204((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  uint64_t v8 = *(void **)(v0 + 160);
  v5[2] = v7 + 1;
  char v9 = (void **)(v5 + 4);
  v5[v7 + 4] = v8;

  uint64_t v10 = *(void *)(v0 + 136) + 1;
  if (v10 == *(void *)(v0 + 64))
  {
    uint64_t v11 = *(void *)(v0 + 128);
    uint64_t v12 = *(unsigned __int8 *)(v0 + 178);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 72) = v5;
    uint64_t v13 = v5[2];
    *(void *)(v0 + 80) = v13;
    if (v13)
    {
      id v14 = *v9;
      *(void *)(v0 + 88) = *v9;
      if (v13 == 1)
      {
        id v15 = v14;
        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      uint64_t v23 = *(void *)(v0 + 40);
      uint64_t v24 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
      *(void *)(v0 + 96) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
      *(void *)(v0 + 104) = *(void *)(v23 + v24);
      id v25 = v14;
      *(void *)(v0 + 112) = 1;
      uint64_t v26 = *(void *)(v0 + 104);
      uint64_t v27 = *(void **)(*(void *)(v0 + 72) + 40);
      *(void *)(v0 + 120) = v27;
      swift_bridgeObjectRetain();
      id v28 = v27;
      swift_retain();
      return MEMORY[0x270FA2498](sub_223333EF0, v26, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v22(v11, v12);
    }
  }
  else
  {
    *(void *)(v0 + 136) = v10;
    *(void *)(v0 + 144) = v5;
    uint64_t v16 = (void *)(*(void *)(v0 + 56) + 40 * v10);
    uint64_t v18 = v16[7];
    uint64_t v17 = v16[8];
    sub_223321F60(v16 + 4, v18);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v19;
    void *v19 = v0;
    v19[1] = sub_22333429C;
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v20 = *(void *)(v0 + 48);
    return sub_22338A730(v21, v20, v18, v17);
  }
}

uint64_t sub_2233349E4()
{
  return sub_22332AF68();
}

uint64_t sub_223334A68()
{
  uint64_t v1 = (_xpc_activity_s *)MEMORY[0x223CB63D0](v0 + 16);
  if (v1)
  {
    if (xpc_activity_get_state(v1) != 4)
    {
      sub_223332EC8();
      swift_allocError();
      *uint64_t v4 = 3;
      swift_willThrow();
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_223332EC8();
    swift_allocError();
    *id v3 = 3;
    return swift_willThrow();
  }
}

uint64_t sub_223334B2C()
{
  uint64_t v1 = MEMORY[0x223CB63D0](v0 + 16);
  if (v1)
  {
    uint64_t v2 = (_xpc_activity_s *)v1;
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_22342C200();
    sub_223323374(v3, (uint64_t)qword_26AD63108);
    swift_retain_n();
    uint64_t v4 = sub_22342C1E0();
    os_log_type_t v5 = sub_22342C720();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = 7104878;
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v21 = v8;
      *(_DWORD *)unint64_t v7 = 136315138;
      if (MEMORY[0x223CB63D0](v0 + 16))
      {
        uint64_t v9 = xpc_activity_copy_identifier();
        if (v9)
        {
          uint64_t v10 = (void *)v9;
          sub_22342C3C0();
          free(v10);
          swift_unknownObjectRelease();
          uint64_t v6 = sub_22342C360();
          unint64_t v12 = v11;
        }
        else
        {
          swift_unknownObjectRelease();
          unint64_t v12 = 0xE300000000000000;
        }
      }
      else
      {
        unint64_t v12 = 0xE300000000000000;
      }
      sub_22339BC14(v6, v12, &v21);
      sub_22342CA10();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v4, v5, "Marking xpc_activity state DEFER for %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v8, -1, -1);
      MEMORY[0x223CB62D0](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    if (xpc_activity_set_state(v2, 3))
    {
      swift_unknownObjectRelease();
      return 1;
    }
    uint64_t v18 = sub_22342C1E0();
    os_log_type_t v19 = sub_22342C700();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_223317000, v18, v19, "We did not set the state of activity to DEFER successfully", v20, 2u);
      MEMORY[0x223CB62D0](v20, -1, -1);
    }

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_22342C200();
    sub_223323374(v13, (uint64_t)qword_26AD63108);
    id v14 = sub_22342C1E0();
    os_log_type_t v15 = sub_22342C700();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_223317000, v14, v15, "Unexpected missing activity while deferring", v16, 2u);
      MEMORY[0x223CB62D0](v16, -1, -1);
    }
  }
  return 0;
}

uint64_t sub_223334EA8()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = MEMORY[0x223CB63D0](v0 + 16);
  if (!v2)
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22342C200();
    sub_223323374(v14, (uint64_t)qword_26AD63108);
    os_log_type_t v15 = sub_22342C1E0();
    os_log_type_t v16 = sub_22342C700();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_223317000, v15, v16, "Unexpected missing activity while trying to mark DONE", v17, 2u);
      MEMORY[0x223CB62D0](v17, -1, -1);
    }

    return 0;
  }
  uint64_t v3 = (_xpc_activity_s *)v2;
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_22342C200();
  sub_223323374(v4, (uint64_t)qword_26AD63108);
  swift_retain_n();
  os_log_type_t v5 = sub_22342C1E0();
  os_log_type_t v6 = sub_22342C720();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v32 = v3;
    uint64_t v7 = 7104878;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v33 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    if (MEMORY[0x223CB63D0](v1))
    {
      uint64_t v10 = xpc_activity_copy_identifier();
      if (v10)
      {
        unint64_t v11 = (void *)v10;
        sub_22342C3C0();
        free(v11);
        swift_unknownObjectRelease();
        uint64_t v7 = sub_22342C360();
        unint64_t v13 = v12;
LABEL_16:
        sub_22339BC14(v7, v13, &v33);
        sub_22342CA10();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_223317000, v5, v6, "Marking xpc_activity state DONE for %s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v9, -1, -1);
        MEMORY[0x223CB62D0](v8, -1, -1);

        uint64_t v3 = v32;
        goto LABEL_17;
      }
      swift_unknownObjectRelease();
    }
    unint64_t v13 = 0xE300000000000000;
    goto LABEL_16;
  }

  swift_release_n();
LABEL_17:
  if (xpc_activity_get_state(v3) == 5)
  {
    swift_retain_n();
    uint64_t v18 = sub_22342C1E0();
    os_log_type_t v19 = sub_22342C700();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = 7104878;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v33 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      if (MEMORY[0x223CB63D0](v1))
      {
        uint64_t v23 = xpc_activity_copy_identifier();
        if (v23)
        {
          uint64_t v24 = (void *)v23;
          sub_22342C3C0();
          free(v24);
          swift_unknownObjectRelease();
          uint64_t v20 = sub_22342C360();
          unint64_t v26 = v25;
LABEL_31:
          sub_22339BC14(v20, v26, &v33);
          sub_22342CA10();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_223317000, v18, v19, "Tried to mark activity %s but activity is already marked as DONE", v21, 0xCu);
          uint64_t v30 = 1;
          swift_arrayDestroy();
          MEMORY[0x223CB62D0](v22, -1, -1);
          MEMORY[0x223CB62D0](v21, -1, -1);

          swift_unknownObjectRelease();
          return v30;
        }
        swift_unknownObjectRelease();
      }
      unint64_t v26 = 0xE300000000000000;
      goto LABEL_31;
    }

    swift_release_n();
    goto LABEL_28;
  }
  if (xpc_activity_set_state(v3, 5))
  {
LABEL_28:
    swift_unknownObjectRelease();
    return 1;
  }
  uint64_t v27 = sub_22342C1E0();
  os_log_type_t v28 = sub_22342C700();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&dword_223317000, v27, v28, "We did not set the state of activity to DONE successfully", v29, 2u);
    MEMORY[0x223CB62D0](v29, -1, -1);
  }

  swift_unknownObjectRelease();
  return 0;
}

uint64_t sub_2233353C0()
{
  sub_223335548(v0 + 16);
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for XPCActivity()
{
  return self;
}

void sub_22333541C()
{
}

uint64_t sub_223335428@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t result = swift_unknownObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_223335488()
{
  return sub_223334A68();
}

uint64_t sub_2233354AC()
{
  return sub_223334B2C() & 1;
}

uint64_t sub_2233354D4()
{
  return sub_223334EA8() & 1;
}

BOOL sub_2233354FC()
{
  uint64_t v1 = (_xpc_activity_s *)MEMORY[0x223CB63D0](*v0 + 16);
  if (!v1) {
    return 0;
  }
  BOOL should_defer = xpc_activity_should_defer(v1);
  swift_unknownObjectRelease();
  return should_defer;
}

uint64_t sub_223335548(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCActivityError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for XPCActivityError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2233356CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCActivityError()
{
  return &type metadata for XPCActivityError;
}

unint64_t sub_223335708()
{
  unint64_t result = qword_267FA2788;
  if (!qword_267FA2788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2788);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for SyncProgress(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SyncProgress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncProgress()
{
  return &type metadata for SyncProgress;
}

uint64_t sub_223335818(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for MessageBody(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for LocalStateManagementStep(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for LocalStateManagementStep(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalStateManagementStep(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

__n128 initializeWithTake for LocalStateManagementStep(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalStateManagementStep(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  swift_release();
LABEL_8:
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalStateManagementStep(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalStateManagementStep(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalStateManagementStep()
{
  return &type metadata for LocalStateManagementStep;
}

uint64_t sub_223335B64()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_223335B6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_223331FA4(v1);
  return v1;
}

uint64_t sub_223335BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v8 = v2[4];
  uint64_t v7 = v2[5];
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267FA27A8 + dword_267FA27A8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_223335C74;
  return v11(a1, a2, v6, v8, v7);
}

uint64_t sub_223335C74(uint64_t a1, char a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v6 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, void))(v6 + 8);
    return v9(a1, a2 & 1);
  }
}

uint64_t sub_223335DB8()
{
  return sub_223335DEC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_223335DEC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_223335DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  return MEMORY[0x270FA2498](sub_223335E18, 0, 0);
}

uint64_t sub_223335E18()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
  uint64_t v3 = sub_223321F60(v2, v2[3]);
  uint64_t v4 = *MEMORY[0x263F4AB10];
  id v5 = objc_msgSend(*(id *)(*v3 + 24), sel_integerForKey_, *MEMORY[0x263F4AB10]);
  objc_msgSend(*(id *)(*sub_223321F60(v2, v2[3]) + 24), sel_removeObjectForKey_, v4);
  if ((uint64_t)v5 < v1) {
    goto LABEL_6;
  }
  if (qword_26AD5F0D8 != -1) {
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v6 = sub_22342C200();
    sub_223323374(v6, (uint64_t)qword_26AD63108);
    uint64_t v7 = sub_22342C1E0();
    os_log_type_t v8 = sub_22342C720();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_223317000, v7, v8, "First sync after restore from backup, pro actively clearing sync state", v9, 2u);
      MEMORY[0x223CB62D0](v9, -1, -1);
    }
    uint64_t v10 = (void *)v0[5];

    objc_msgSend(v10, sel_clearSyncStateForAllRecordTypes);
LABEL_6:
    unint64_t v11 = v0[4];
    if (v11 >> 62) {
      break;
    }
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[6] = v12;
    if (!v12) {
      goto LABEL_16;
    }
LABEL_8:
    v0[7] = sub_22342C5B0();
    if (v12 >= 1)
    {
      uint64_t v13 = v0[4];
      v0[8] = 0;
      if ((v13 & 0xC000000000000001) != 0) {
        uint64_t v14 = MEMORY[0x223CB54A0](0);
      }
      else {
        uint64_t v14 = swift_unknownObjectRetain();
      }
      v0[9] = v14;
      v0[10] = sub_22342C5A0();
      uint64_t v16 = sub_22342C560();
      return MEMORY[0x270FA2498](sub_2233360B4, v16, v15);
    }
    __break(1u);
LABEL_20:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22342CD40();
  v0[6] = v12;
  if (v12) {
    goto LABEL_8;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t (*)(void, void))v0[1];
  return v17(0, 0);
}

uint64_t sub_2233360B4()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  objc_msgSend(v1, sel_resetLocalSyncStateIfAppropriate);
  return MEMORY[0x270FA2498](sub_22333612C, 0, 0);
}

uint64_t sub_22333612C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  swift_unknownObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (uint64_t (*)(void, void))v0[1];
    return v3(0, 0);
  }
  else
  {
    ++v0[8];
    if ((v0[4] & 0xC000000000000001) != 0) {
      uint64_t v5 = MEMORY[0x223CB54A0]();
    }
    else {
      uint64_t v5 = swift_unknownObjectRetain();
    }
    v0[9] = v5;
    v0[10] = sub_22342C5A0();
    uint64_t v7 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_2233360B4, v7, v6);
  }
}

uint64_t destroy for ImportStep(uint64_t a1)
{
  if (*(void *)(a1 + 8)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ImportStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ImportStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MessageBody(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ImportStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  swift_release();
LABEL_8:
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImportStep(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImportStep(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImportStep()
{
  return &type metadata for ImportStep;
}

uint64_t sub_223336510()
{
  return *v0;
}

uint64_t sub_223336518()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_223331FA4(v1);
  return v1;
}

uint64_t sub_22333654C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA27D0 + dword_267FA27D0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223331EB0;
  return v7(a1, a2);
}

uint64_t sub_223336600(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267FA27C8 + dword_267FA27C8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_223335C74;
  return v10(a1, a2, v7, v6);
}

uint64_t sub_2233366C8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2233367B4;
  return sub_223400994(a1, a2, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/ImportStep.swift", 102, 2);
}

uint64_t sub_2233367B4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233368B0, 0, 0);
}

uint64_t sub_2233368B0()
{
  sub_223321F60((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  uint64_t v1 = (void *)sub_223423BB8();
  if (v1) {
    objc_msgSend(v1, sel_sendBroadcastToClient);
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_22333693C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223336A28;
  return sub_223400994(a1, a2, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/ImportStep.swift", 102, 2);
}

uint64_t sub_223336A28()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223336B24, 0, 0);
}

uint64_t sub_223336B24()
{
  uint64_t v1 = *(void **)(*sub_223321F60((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 56);
  if (v1) {
    objc_msgSend(v1, sel_setSyncJobStateWithState_, 3);
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_223336BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  sub_22331E640((uint64_t *)&unk_26AD5ED20);
  v4[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_223336C4C, 0, 0);
}

uint64_t sub_223336C4C()
{
  os_log_type_t v32 = v0;
  uint64_t v1 = v0[19];
  uint64_t v2 = v0 + 15;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_delegate);
  if (v3)
  {
    v31[0] = 0x2E636E7973;
    v31[1] = 0xE500000000000000;
    sub_223321F60((void *)(v1 + 16), *(void *)(v1 + 40));
    sub_2233C7210();
    swift_unknownObjectRetain();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    sub_22342C170();
    sub_223337988();
    sub_22342CF10();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)sub_22342C150();
    objc_msgSend(v3, sel_syncCoordinatorWaitingForImportToFinishWithName_identifier_, v4, v5);
    swift_unknownObjectRelease();
  }
  uint64_t v6 = v0[21];
  uint64_t v7 = *(void *)(v6 + 16);
  v0[24] = v7;
  if (v7)
  {
    uint64_t v8 = (unsigned __int8 *)(v6 + 32);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    do
    {
      int v10 = *v8++;
      unint64_t v11 = 0x80000002234357A0;
      unint64_t v12 = 0xD000000000000012;
      switch(v10)
      {
        case 1:
          unint64_t v11 = 0xEF32766465747079;
          unint64_t v12 = 0x72636E4574616863;
          break;
        case 2:
          unint64_t v11 = 0x80000002234357D0;
          break;
        case 3:
          unint64_t v11 = 0xEA0000000000746ELL;
          unint64_t v12 = 0x656D686361747461;
          break;
        case 4:
          unint64_t v11 = 0x80000002234357F0;
          break;
        case 5:
          unint64_t v11 = 0xEF31566574616470;
          unint64_t v12 = 0x556567617373656DLL;
          break;
        case 6:
          unint64_t v11 = 0xE700000000000000;
          unint64_t v12 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_22338B314(0, v9[2] + 1, 1, v9);
      }
      unint64_t v14 = v9[2];
      unint64_t v13 = v9[3];
      if (v14 >= v13 >> 1) {
        uint64_t v9 = sub_22338B314((void *)(v13 > 1), v14 + 1, 1, v9);
      }
      _OWORD v9[2] = v14 + 1;
      uint64_t v15 = &v9[2 * v14];
      v15[4] = v12;
      v15[5] = v11;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v2 = v0 + 15;
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  }
  *uint64_t v2 = v9;
  sub_22331E640(&qword_26AD60280);
  sub_22333787C();
  uint64_t v16 = sub_22342C2B0();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22342C200();
  v0[25] = sub_223323374(v19, (uint64_t)qword_26AD63330);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_22342C1E0();
  os_log_type_t v21 = sub_22342C720();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = v0[19];
  if (v22)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v31[0] = v30;
    *(_DWORD *)uint64_t v24 = 136315394;
    sub_223321F60((void *)(v23 + 16), *(void *)(v23 + 40));
    unint64_t v25 = sub_2233C7210();
    v0[17] = sub_22339BC14(v25, v26, v31);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[18] = sub_22339BC14(v16, v18, v31);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_223317000, v20, v21, "Import Step start for job: %s types: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v30, -1, -1);
    MEMORY[0x223CB62D0](v24, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  if (qword_26AD5FD50 != -1) {
    swift_once();
  }
  uint64_t v27 = v0[22];
  uint64_t v28 = qword_26AD63300;
  swift_beginAccess();
  *(void *)(v28 + 16) = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_223337214, v27, 0);
}

uint64_t sub_223337214()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v4 = sub_22342C130();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = v3 + OBJC_IVAR____TtC17MessagesCloudSync16DatabaseImporter_lastImportProgressDate;
  swift_beginAccess();
  sub_223337920(v1, v5);
  swift_endAccess();
  if (v2)
  {
    uint64_t v6 = v0[21];
    v0[26] = 0;
    unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_267FA3568 + dword_267FA3568);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 32);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[27] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_223337614;
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[20];
    return v12(v7, v9, v10);
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2233373A8, 0, 0);
  }
}

uint64_t sub_2233373A8()
{
  unint64_t v17 = v0;
  swift_unknownObjectRetain_n();
  uint64_t v1 = sub_22342C1E0();
  os_log_type_t v2 = sub_22342C720();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[19];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v16 = v5;
    *(_DWORD *)uint64_t v4 = 136315394;
    sub_223321F60((void *)(v3 + 16), *(void *)(v3 + 40));
    unint64_t v6 = sub_2233C7210();
    v0[14] = sub_22339BC14(v6, v7, &v16);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2080;
    swift_beginAccess();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_2233D9118(v8);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[16] = sub_22339BC14(v9, v11, &v16);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v1, v2, "Import Step summary for job: %s, %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v5, -1, -1);
    MEMORY[0x223CB62D0](v4, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  swift_beginAccess();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_2233D9398(v12);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(uint64_t, void))v0[1];
  return v14(v13, 0);
}

uint64_t sub_223337614()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 176);
    return MEMORY[0x270FA2498](sub_223337764, v6, 0);
  }
}

uint64_t sub_223337764()
{
  uint64_t v1 = v0[26] + 1;
  if (v1 == v0[24])
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_2233373A8, 0, 0);
  }
  else
  {
    v0[26] = v1;
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_267FA3568 + dword_267FA3568);
    uint64_t v2 = *(unsigned __int8 *)(v0[21] + v1 + 32);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[27] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_223337614;
    uint64_t v4 = v0[19];
    uint64_t v5 = v0[20];
    return v7(v2, v4, v5);
  }
}

unint64_t sub_22333787C()
{
  unint64_t result = qword_26AD60288;
  if (!qword_26AD60288)
  {
    sub_2233378D8(&qword_26AD60280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD60288);
  }
  return result;
}

uint64_t sub_2233378D8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_223337920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_223337988()
{
  unint64_t result = qword_26AD5ED30;
  if (!qword_26AD5ED30)
  {
    sub_22342C170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5ED30);
  }
  return result;
}

uint64_t sub_2233379E0()
{
  return sub_22342D060();
}

uint64_t sub_223337A9C()
{
  return sub_22342D060();
}

uint64_t sub_223337BC0()
{
  return sub_22342D060();
}

uint64_t sub_223337C48()
{
  return sub_22342D060();
}

uint64_t sub_223337CF4()
{
  return sub_22342D060();
}

uint64_t sub_223337DEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2233F4284(*a1, *a2);
}

uint64_t sub_223337DF8()
{
  return sub_2233379E0();
}

uint64_t sub_223337E00()
{
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_223337EA8()
{
  return sub_223396EC4();
}

uint64_t sub_223337EB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_223338538();
  *a1 = result;
  return result;
}

void sub_223337EE0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED0000746E657365;
  unint64_t v4 = 0xD000000000000018;
  unint64_t v5 = 0x8000000223435840;
  if (v2 != 1)
  {
    unint64_t v4 = 0xD000000000000016;
    unint64_t v5 = 0x8000000223435860;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x7250617461446F6ELL;
  }
  if (!v6) {
    unint64_t v3 = v5;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_223337F58()
{
  return sub_22342D060();
}

uint64_t sub_223337FAC()
{
  return sub_22342C390();
}

uint64_t sub_223337FC4()
{
  return sub_22342D060();
}

uint64_t sub_223338014@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_223338068(void *a1@<X8>)
{
  *a1 = 0x313030706F7270;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_223338084()
{
  return 0x313030706F7270;
}

uint64_t sub_22333809C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2233380F4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_223338100(uint64_t a1)
{
  unint64_t v2 = sub_22333897C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22333813C(uint64_t a1)
{
  unint64_t v2 = sub_22333897C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_223338178(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_22331E640(&qword_267FA27E0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_22333897C();
  sub_22342D090();
  uint64_t v30 = MEMORY[0x263F8D6C8];
  *(void *)&long long v29 = a2;
  sub_223323364(&v29, v28);
  uint64_t v12 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v12;
  sub_2233CE3C0(v28, 29811, 0xE200000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v14 = v26;
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_2234048F0(25715, 0xE200000000000000, &v29);
    sub_223338A24((uint64_t)&v29);
  }
  else
  {
    uint64_t v30 = MEMORY[0x263F8E5C0];
    *(void *)&long long v29 = a3;
    sub_223323364(&v29, v28);
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = v14;
    sub_2233CE3C0(v28, 25715, 0xE200000000000000, v15);
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = self;
  unint64_t v17 = (void *)sub_22342C260();
  swift_bridgeObjectRelease();
  *(void *)&long long v29 = 0;
  id v18 = objc_msgSend(v16, sel_dataWithPropertyList_format_options_error_, v17, 200, 0, &v29);

  id v19 = (id)v29;
  if (v18)
  {
    uint64_t v20 = sub_22342C070();
    unint64_t v22 = v21;

    sub_22342C060();
    sub_22342CEC0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_22331EA68(v20, v22);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = v19;
    sub_22342BF30();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void *sub_2233384A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_223338584(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_2233384D4(void *a1)
{
  return sub_223338178(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_2233384F4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    char v2 = *(unsigned char *)(a2 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      if (*(unsigned char *)(a2 + 16)) {
        return 1;
      }
    }
    else
    {
      if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
        char v2 = 1;
      }
      if ((v2 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_223338538()
{
  unint64_t v0 = sub_22342CDA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void *sub_223338584(void *a1)
{
  v26[4] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_22331E640(&qword_26AD5F3D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_22333897C();
  sub_22342D080();
  if (v1) {
    goto LABEL_15;
  }
  sub_223322B18();
  sub_22342CE30();
  uint64_t v8 = v26[0];
  unint64_t v9 = v26[1];
  uint64_t v10 = self;
  unint64_t v11 = (void *)sub_22342C050();
  *(void *)&long long v24 = 0;
  id v12 = objc_msgSend(v10, sel_propertyListWithData_options_format_error_, v11, 0, 0, &v24);

  id v13 = (id)v24;
  if (!v12)
  {
    char v2 = v13;
    sub_22342BF30();

    swift_willThrow();
LABEL_14:
    swift_willThrow();
    sub_22331EA68(v8, v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_15;
  }
  sub_22342CA80();
  swift_unknownObjectRelease();
  sub_22332325C((uint64_t)v26, (uint64_t)&v24);
  sub_22331E640(&qword_26AD5F3A8);
  char v2 = (void *)MEMORY[0x263F8EE58];
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_2233389D0();
    swift_allocError();
    char v20 = 1;
LABEL_13:
    char *v19 = v20;
    swift_willThrow();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v26);
    goto LABEL_14;
  }
  uint64_t v14 = v23;
  if (!v23[2]
    || (unint64_t v15 = sub_22339C2E8(29811, 0xE200000000000000), (v16 & 1) == 0)
    || (sub_22332325C(v14[7] + 32 * v15, (uint64_t)&v24), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_2233389D0();
    swift_allocError();
    char v20 = 2;
    goto LABEL_13;
  }
  char v2 = v23;
  if (v14[2] && (unint64_t v17 = sub_22339C2E8(25715, 0xE200000000000000), (v18 & 1) != 0))
  {
    sub_22332325C(v14[7] + 32 * v17, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22331EA68(v8, v9);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (*((void *)&v25 + 1)) {
    swift_dynamicCast();
  }
  else {
    sub_223338A24((uint64_t)&v24);
  }
LABEL_15:
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_22333897C()
{
  unint64_t result = qword_26AD5F330;
  if (!qword_26AD5F330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F330);
  }
  return result;
}

unint64_t sub_2233389D0()
{
  unint64_t result = qword_267FA27D8;
  if (!qword_267FA27D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA27D8);
  }
  return result;
}

uint64_t sub_223338A24(uint64_t a1)
{
  uint64_t v2 = sub_22331E640(qword_26AD5F180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChatAutoDonation.DecodingErrors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChatAutoDonation.DecodingErrors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223338BE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatAutoDonation.DecodingErrors()
{
  return &type metadata for ChatAutoDonation.DecodingErrors;
}

unsigned char *storeEnumTagSinglePayload for ChatAutoDonation.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x223338CB4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatAutoDonation.CodingKeys()
{
  return &type metadata for ChatAutoDonation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ChatAutoDonation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ChatAutoDonation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ChatAutoDonation()
{
  return &type metadata for ChatAutoDonation;
}

unint64_t sub_223338D4C()
{
  unint64_t result = qword_267FA27E8;
  if (!qword_267FA27E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA27E8);
  }
  return result;
}

unint64_t sub_223338DA4()
{
  unint64_t result = qword_267FA27F0;
  if (!qword_267FA27F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA27F0);
  }
  return result;
}

unint64_t sub_223338DFC()
{
  unint64_t result = qword_26AD5F340;
  if (!qword_26AD5F340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F340);
  }
  return result;
}

unint64_t sub_223338E54()
{
  unint64_t result = qword_26AD5F338;
  if (!qword_26AD5F338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F338);
  }
  return result;
}

uint64_t destroy for RecordZoneWriter(uint64_t a1)
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 24);
  uint64_t result = _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 64);
  if (*(void *)(a1 + 104))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for RecordZoneWriter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 64, a2 + 64);
  uint64_t v6 = *(void *)(a2 + 104);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v6;
    *(void *)(a1 + 112) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  return a1;
}

uint64_t assignWithCopy for RecordZoneWriter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_2233390AC((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  sub_2233390AC((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  uint64_t v4 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v4;
      *(void *)(a1 + 112) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v4;
  *(void *)(a1 + 112) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *sub_2233390AC(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    char v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *char v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *char v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for RecordZoneWriter(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for RecordZoneWriter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 64);
  uint64_t v4 = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  if (!v5)
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v4;
      *(void *)(a1 + 112) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v4;
  *(void *)(a1 + 112) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordZoneWriter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordZoneWriter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordZoneWriter()
{
  return &type metadata for RecordZoneWriter;
}

uint64_t sub_223339490(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  unint64_t v5 = a1;
  uint64_t v32 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22342CD40();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 0;
      unint64_t v8 = v5 & 0xC000000000000001;
      unint64_t v29 = v5;
      unint64_t v30 = v5 + 32;
      uint64_t v27 = v6;
      uint64_t v28 = a2;
      uint64_t v25 = v3;
      unint64_t v26 = v5 & 0xC000000000000001;
      while (1)
      {
        if (v8) {
          id v9 = (id)MEMORY[0x223CB54A0](v7, v5);
        }
        else {
          id v9 = *(id *)(v30 + 8 * v7);
        }
        uint64_t v10 = v9;
        if (__OFADD__(v7++, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        unint64_t v3 = *a2;
        swift_bridgeObjectRetain();
        id v12 = objc_msgSend(v10, sel_recordID);
        id v13 = v12;
        if ((v3 & 0xC000000000000001) != 0)
        {
          id v14 = v12;
          char v15 = sub_22342CB00();
          swift_bridgeObjectRelease();

          if ((v15 & 1) == 0) {
            goto LABEL_21;
          }
        }
        else
        {
          if (!*(void *)(v3 + 16)) {
            goto LABEL_20;
          }
          uint64_t v16 = sub_22342C9D0();
          uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
          unint64_t v18 = v16 & ~v17;
          if (((*(void *)(v3 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_20;
          }
          sub_22334199C(0, (unint64_t *)&qword_26AD60338);
          id v19 = *(id *)(*(void *)(v3 + 48) + 8 * v18);
          char v20 = sub_22342C9E0();

          if ((v20 & 1) == 0)
          {
            uint64_t v21 = ~v17;
            while (1)
            {
              unint64_t v18 = (v18 + 1) & v21;
              if (((*(void *)(v3 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
                break;
              }
              id v22 = *(id *)(*(void *)(v3 + 48) + 8 * v18);
              char v23 = sub_22342C9E0();

              if (v23) {
                goto LABEL_19;
              }
            }
LABEL_20:

            swift_bridgeObjectRelease();
            a2 = v28;
            unint64_t v5 = v29;
            unint64_t v8 = v26;
            uint64_t v6 = v27;
LABEL_21:
            sub_22341814C(&v31, objc_msgSend(v10, sel_recordID, v25));

            MEMORY[0x223CB4D20]();
            unint64_t v3 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v3 >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_22342C4F0();
            }
            sub_22342C530();
            sub_22342C4D0();
            goto LABEL_5;
          }
LABEL_19:

          swift_bridgeObjectRelease();
          a2 = v28;
          unint64_t v5 = v29;
          unint64_t v8 = v26;
          uint64_t v6 = v27;
        }
LABEL_5:
        if (v7 == v6)
        {
          swift_bridgeObjectRelease();
          return v32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_223339790(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2233397B4, 0, 0);
}

uint64_t sub_2233397B4()
{
  uint64_t v1 = sub_223321F60((void *)(v0[4] + 24), *(void *)(v0[4] + 48));
  sub_223404C64(*((unsigned char *)v1 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2233398AC;
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  return sub_223400994(v4, v3, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneWriter.swift", 108, 2);
}

uint64_t sub_2233398AC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233399A8, 0, 0);
}

uint64_t sub_2233399A8()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  sub_223321F60(v1 + 8, v2);
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_223339AB4;
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_223339AB4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223339BB0, 0, 0);
}

uint64_t sub_223339BB0()
{
  uint64_t v1 = v0[2];
  sub_223339F98();
  uint64_t v2 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
  v0[7] = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
  if ((uint64_t)objc_msgSend(*(id *)(*sub_223321F60((void *)(v1 + v2), *(void *)(v1 + v2 + 24)) + 24), sel_integerForKey_, *MEMORY[0x263F4AAB0]) <= 0)
  {
    uint64_t v8 = v0[2];
    uint64_t v9 = v0[3];
    uint64_t v10 = *(void *)(v8 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_attemptCount);
    unint64_t v11 = (void *)swift_task_alloc();
    v0[8] = v11;
    *unint64_t v11 = v0;
    v11[1] = sub_223339DBC;
    uint64_t v13 = v0[2];
    uint64_t v12 = v0[3];
    return sub_223401D94(v13, v12, v10, v8, v9, 0, 0, 1);
  }
  else
  {
    uint64_t v3 = (void *)(v0[2] + v0[7]);
    uint64_t v4 = sub_223321F60(v3, v3[3]);
    uint64_t v5 = *(void **)(*v4 + 56);
    uint64_t v6 = v0[2];
    if (v5)
    {
      objc_msgSend(*(id *)(*v4 + 56), sel_startChanges);
      uint64_t v7 = swift_retain();
      sub_2233412A4(v7, v6);
      swift_release();
      objc_msgSend(v5, sel_commitChanges);
    }
    else
    {
      uint64_t v15 = swift_retain();
      sub_2233412A4(v15, v6);
      swift_release();
    }
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_223339DBC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223339EB8, 0, 0);
}

uint64_t sub_223339EB8()
{
  uint64_t v1 = (void *)(v0[2] + v0[7]);
  uint64_t v2 = sub_223321F60(v1, v1[3]);
  uint64_t v3 = *(void **)(*v2 + 56);
  uint64_t v4 = v0[2];
  if (v3)
  {
    objc_msgSend(*(id *)(*v2 + 56), sel_startChanges);
    uint64_t v5 = swift_retain();
    sub_2233412A4(v5, v4);
    swift_release();
    objc_msgSend(v3, sel_commitChanges);
  }
  else
  {
    uint64_t v6 = swift_retain();
    sub_2233412A4(v6, v4);
    swift_release();
  }
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_223339F98()
{
  uint64_t result = sub_2233D03A8();
  if (result)
  {
    uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
    uint64_t v3 = sub_223321F60((void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    uint64_t v4 = *MEMORY[0x263F4AAB0];
    uint64_t result = (uint64_t)objc_msgSend(*(id *)(*v3 + 24), sel_integerForKey_, *MEMORY[0x263F4AAB0]);
    if (result <= 0)
    {
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_22342C200();
      sub_223323374(v5, (uint64_t)qword_26AD63108);
      uint64_t v6 = sub_22342C1E0();
      os_log_type_t v7 = sub_22342C720();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_223317000, v6, v7, "User finished first full sync, and did not have a marker for first restore, setting marker", v8, 2u);
        MEMORY[0x223CB62D0](v8, -1, -1);
      }

      uint64_t v9 = *(void **)(*sub_223321F60(v2, v2[3]) + 24);
      return (uint64_t)objc_msgSend(v9, sel_setInteger_forKey_, 1, v4);
    }
  }
  return result;
}

void sub_22333A110(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (v2)
  {
    uint64_t v3 = v2;
    unsigned int v4 = objc_msgSend(v2, sel_isInternalInstall);

    if (v4)
    {
      uint64_t v5 = (void *)(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
      id v6 = *(id *)(*sub_223321F60(v5, v5[3]) + 24);
      os_log_type_t v7 = (void *)sub_22342C2D0();
      id v8 = objc_msgSend(v6, sel_objectForKey_, v7);

      if (!v8)
      {
        long long v26 = 0u;
        long long v27 = 0u;
        sub_223338A24((uint64_t)&v26);
        return;
      }
      sub_22342CA80();
      swift_unknownObjectRelease();
      sub_223338A24((uint64_t)&v26);
      sub_22342C300();
      id v9 = *(id *)(*sub_223321F60(v5, v5[3]) + 24);
      uint64_t v10 = (void *)sub_22342C2D0();
      id v11 = objc_msgSend(v9, sel_objectForKey_, v10);

      if (v11)
      {
        sub_22342CA80();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v24 = 0u;
        long long v25 = 0u;
      }
      sub_223341934((uint64_t)&v24, (uint64_t)&v26);
      if (*((void *)&v27 + 1))
      {
        if (swift_dynamicCast()) {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_223338A24((uint64_t)&v26);
      }
      id v12 = *(id *)(*sub_223321F60(v5, v5[3]) + 24);
      uint64_t v13 = (void *)sub_22342C2D0();
      id v14 = objc_msgSend(v12, sel_objectForKey_, v13);

      if (v14)
      {
        sub_22342CA80();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v24 = 0u;
        long long v25 = 0u;
      }
      uint64_t v15 = MEMORY[0x263F8D310];
      sub_223341934((uint64_t)&v24, (uint64_t)&v26);
      if (*((void *)&v27 + 1))
      {
        sub_22334199C(0, (unint64_t *)&qword_26AD5EF30);
        if (swift_dynamicCast())
        {
          uint64_t v16 = (uint64_t)objc_msgSend(v23, sel_integerValue);

LABEL_20:
          sub_22331E640(&qword_26AD5EFA0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_22342F870;
          *(void *)(inited + 32) = sub_22342C300();
          *(void *)(inited + 40) = v18;
          *(void *)&long long v26 = 0;
          *((void *)&v26 + 1) = 0xE000000000000000;
          sub_22342CBB0();
          sub_22342C3B0();
          *(void *)&long long v24 = v16;
          sub_22342CF10();
          sub_22342C3B0();
          swift_bridgeObjectRelease();
          sub_22342C3B0();
          swift_bridgeObjectRetain();
          sub_22342C3B0();
          swift_bridgeObjectRelease();
          sub_22342C3B0();
          long long v19 = v26;
          *(void *)(inited + 72) = v15;
          *(_OWORD *)(inited + 48) = v19;
          sub_2233C5EB0(inited);
          id v20 = objc_allocWithZone(MEMORY[0x263F087E8]);
          uint64_t v21 = (void *)sub_22342C2D0();
          swift_bridgeObjectRelease();
          id v22 = (void *)sub_22342C260();
          swift_bridgeObjectRelease();
          objc_msgSend(v20, sel_initWithDomain_code_userInfo_, v21, v16, v22);

          swift_willThrow();
          return;
        }
      }
      else
      {
        sub_223338A24((uint64_t)&v26);
      }
      uint64_t v16 = 1;
      goto LABEL_20;
    }
  }
}

uint64_t sub_22333A5AC(uint64_t a1, uint64_t a2)
{
  v3[110] = v2;
  v3[109] = a2;
  v3[108] = a1;
  sub_22331E640(&qword_26AD5E1C8);
  v3[111] = swift_task_alloc();
  uint64_t v4 = sub_22331E640(&qword_26AD602E0);
  v3[112] = v4;
  v3[113] = *(void *)(v4 - 8);
  v3[114] = swift_task_alloc();
  v3[115] = swift_task_alloc();
  uint64_t v5 = sub_22331E640(&qword_26AD602B8);
  v3[116] = v5;
  v3[117] = *(void *)(v5 - 8);
  v3[118] = swift_task_alloc();
  uint64_t v6 = sub_22331E640((uint64_t *)&unk_26AD60300);
  v3[119] = v6;
  v3[120] = *(void *)(v6 - 8);
  v3[121] = swift_task_alloc();
  v3[122] = swift_task_alloc();
  v3[123] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22333A794, 0, 0);
}

uint64_t sub_22333A794()
{
  uint64_t v21 = v0;
  uint64_t v1 = sub_223321F60((void *)(v0[110] + 24), *(void *)(v0[110] + 48));
  unint64_t v2 = sub_223421FB0(*((unsigned char *)v1 + 16));
  unint64_t v4 = v3;
  v0[124] = v2;
  v0[125] = v3;
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22342C200();
  v0[126] = sub_223323374(v5, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v6 = sub_22342C1E0();
  os_log_type_t v7 = sub_22342C720();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[107] = sub_22339BC14(v2, v4, &v20);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_22342C170();
    sub_2233418EC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    uint64_t v10 = sub_22342CF10();
    v0[96] = sub_22339BC14(v10, v11, &v20);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_223317000, v6, v7, "Starting write to %s (%s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v9, -1, -1);
    MEMORY[0x223CB62D0](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }

  id v12 = (uint64_t *)v0[110];
  uint64_t v13 = v12[11];
  uint64_t v14 = v12[12];
  sub_223321F60(v12 + 8, v13);
  uint64_t v15 = *v12;
  uint64_t v16 = v12[2];
  long long v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 16) + **(int **)(v14 + 16));
  uint64_t v17 = (void *)swift_task_alloc();
  v0[127] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_22333AB14;
  return v19(v15, v16, v13, v14);
}

uint64_t sub_22333AB14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[128] = a1;
  v5[129] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    v5[130] = a2;
    return MEMORY[0x270FA2498](sub_22333ACD0, 0, 0);
  }
}

uint64_t sub_22333ACD0()
{
  uint64_t v95 = v0;
  uint64_t v1 = *(void *)(v0 + 1024);
  swift_bridgeObjectRelease();
  uint64_t v85 = v1 + 64;
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  unint64_t v4 = v2 & *(void *)(v1 + 64);
  int64_t v87 = (unint64_t)(63 - v3) >> 6;
  uint64_t v92 = v1;
  uint64_t v5 = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x263F8EE80];
  for (i = v0; ; uint64_t v0 = i)
  {
    *(void *)(v0 + 1048) = v9;
    if (v4)
    {
      unint64_t v10 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_54;
    }
    if (v12 >= v87) {
      break;
    }
    unint64_t v13 = *(void *)(v85 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v87) {
        break;
      }
      unint64_t v13 = *(void *)(v85 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v87) {
          break;
        }
        unint64_t v13 = *(void *)(v85 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v87) {
            break;
          }
          unint64_t v13 = *(void *)(v85 + 8 * v8);
          if (!v13)
          {
            int64_t v8 = v12 + 4;
            if (v12 + 4 >= v87) {
              break;
            }
            unint64_t v13 = *(void *)(v85 + 8 * v8);
            if (!v13)
            {
              int64_t v8 = v12 + 5;
              if (v12 + 5 >= v87) {
                break;
              }
              unint64_t v13 = *(void *)(v85 + 8 * v8);
              if (!v13)
              {
                int64_t v14 = v12 + 6;
                if (v14 >= v87) {
                  break;
                }
                unint64_t v13 = *(void *)(v85 + 8 * v14);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v8 = v14 + 1;
                    if (__OFADD__(v14, 1)) {
                      goto LABEL_55;
                    }
                    if (v8 >= v87) {
                      goto LABEL_39;
                    }
                    unint64_t v13 = *(void *)(v85 + 8 * v8);
                    ++v14;
                    if (v13) {
                      goto LABEL_27;
                    }
                  }
                }
                int64_t v8 = v14;
              }
            }
          }
        }
      }
    }
LABEL_27:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_28:
    uint64_t v15 = *(void *)(v92 + 56) + 16 * v11;
    uint64_t v16 = *(void **)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    swift_bridgeObjectRetain();
    id v18 = v16;
    id v19 = objc_msgSend(v18, sel_recordID);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v94[0] = (uint64_t)v9;
    unint64_t v21 = sub_22339E390((uint64_t)v19);
    uint64_t v22 = v9[2];
    BOOL v23 = (v6 & 1) == 0;
    uint64_t v5 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      return MEMORY[0x270FA2498](v5, v6, v7);
    }
    char v24 = v6;
    if (v9[3] >= v5)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v6) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v5 = (uint64_t)sub_2233CF8E0();
        uint64_t v9 = (void *)v94[0];
        if (v24) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_2233CD1CC(v5, isUniquelyReferenced_nonNull_native);
      uint64_t v9 = (void *)v94[0];
      uint64_t v5 = sub_22339E390((uint64_t)v19);
      if ((v24 & 1) != (v6 & 1))
      {
        sub_22334199C(0, (unint64_t *)&qword_26AD60338);
        return sub_22342CFB0();
      }
      unint64_t v21 = v5;
      if (v24)
      {
LABEL_4:
        *(void *)(v9[7] + 8 * v21) = v17;
        goto LABEL_5;
      }
    }
    v9[(v21 >> 6) + 8] |= 1 << v21;
    uint64_t v25 = 8 * v21;
    *(void *)(v9[6] + v25) = v19;
    *(void *)(v9[7] + v25) = v17;
    uint64_t v26 = v9[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_53;
    }
    _OWORD v9[2] = v28;
    id v29 = v19;
LABEL_5:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
LABEL_39:
  uint64_t v30 = *(void *)(v0 + 1024);
  swift_release();
  uint64_t v31 = *(void *)(v30 + 16);
  *(void *)(v0 + 1056) = v31;
  if (v31)
  {
    uint64_t v32 = *(void *)(v0 + 1024);
    uint64_t v80 = *(void *)(v0 + 984);
    uint64_t v83 = *(void *)(v0 + 976);
    uint64_t v84 = *(void *)(v0 + 968);
    uint64_t v81 = *(void *)(v0 + 960);
    uint64_t v82 = *(void *)(v0 + 952);
    uint64_t v77 = *(void *)(v0 + 936);
    uint64_t v78 = *(void *)(v0 + 944);
    uint64_t v79 = *(void *)(v0 + 928);
    uint64_t v86 = *(void *)(v0 + 920);
    uint64_t v88 = *(void *)(v0 + 904);
    uint64_t v90 = *(void *)(v0 + 896);
    uint64_t v93 = *(void *)(v0 + 912);
    uint64_t v33 = *(void *)(v0 + 880);
    uint64_t v34 = *(void *)(v0 + 872);
    uint64_t v35 = *(void *)(v0 + 864);
    uint64_t v75 = v35;
    uint64_t v76 = v34;
    *(_OWORD *)(v0 + 808) = 0u;
    sub_223322120(v33 + 24, v0 + 360);
    uint64_t v36 = sub_223321F60((void *)(v0 + 360), *(void *)(v0 + 384));
    unint64_t v37 = sub_22333EF30(v32);
    swift_bridgeObjectRelease();
    long long v38 = *(_OWORD *)v36;
    long long v39 = *((_OWORD *)v36 + 2);
    *(_OWORD *)(v0 + 272) = *((_OWORD *)v36 + 1);
    *(_OWORD *)(v0 + 288) = v39;
    *(_OWORD *)(v0 + 256) = v38;
    long long v40 = *((_OWORD *)v36 + 3);
    long long v41 = *((_OWORD *)v36 + 4);
    long long v42 = *((_OWORD *)v36 + 5);
    *(void *)(v0 + 352) = v36[12];
    *(_OWORD *)(v0 + 320) = v41;
    *(_OWORD *)(v0 + 336) = v42;
    *(_OWORD *)(v0 + 304) = v40;
    id v74 = sub_2233403E4(v35, v34, v37);
    *(void *)(v0 + 1064) = v74;
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 360);
    uint64_t v43 = sub_223321F60((void *)(v33 + 24), *(void *)(v33 + 48));
    uint64_t v45 = *v43;
    uint64_t v44 = v43[1];
    char v73 = *((unsigned char *)v43 + 16);
    uint64_t v46 = v43[4];
    uint64_t v72 = v43[3];
    uint64_t v48 = v43[5];
    uint64_t v47 = v43[6];
    char v71 = *((unsigned char *)v43 + 56);
    uint64_t v70 = v43[8];
    LOBYTE(v32) = *((unsigned char *)v43 + 72);
    uint64_t v49 = v43[10];
    uint64_t v50 = v43[11];
    uint64_t v51 = v43[12];
    *(void *)(v0 + 424) = &type metadata for SyncZoneInfo;
    *(void *)(v0 + 432) = &off_26D672240;
    uint64_t v52 = swift_allocObject();
    *(void *)(v0 + 400) = v52;
    *(void *)(v52 + 16) = v45;
    *(void *)(v52 + 24) = v44;
    *(unsigned char *)(v52 + 32) = v73;
    *(void *)(v52 + 40) = v72;
    *(void *)(v52 + 48) = v46;
    *(void *)(v52 + 56) = v48;
    *(void *)(v52 + 64) = v47;
    *(unsigned char *)(v52 + 72) = v71;
    *(void *)(v52 + 80) = v70;
    *(unsigned char *)(v52 + 88) = v32;
    *(void *)(v52 + 96) = v49;
    *(void *)(v52 + 104) = v50;
    *(void *)(v52 + 112) = v51;
    *(unsigned char *)(v0 + 625) = 0;
    uint64_t v53 = swift_task_alloc();
    *(void *)(v53 + 16) = v74;
    *(unsigned char *)(v53 + 24) = 0;
    *(void *)(v53 + 32) = v0 + 625;
    *(void *)(v53 + 40) = v75;
    *(void *)(v53 + 48) = v76;
    *(void *)(v53 + 56) = v0 + 400;
    (*(void (**)(uint64_t, void, uint64_t))(v77 + 104))(v78, *MEMORY[0x263F8F680], v79);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22342C620();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v83, v80, v82);
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 400);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v84, v83, v82);
    sub_22334183C(&qword_26AD60310, (uint64_t *)&unk_26AD60300);
    sub_22342C5F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v93, v86, v90);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v83, v82);
    *(void *)(v0 + 1136) = 0;
    uint64_t v5 = (uint64_t)sub_22333B8DC;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_22342C1E0();
  os_log_type_t v56 = sub_22342C720();
  BOOL v57 = os_log_type_enabled(v55, v56);
  unint64_t v58 = *(void *)(v0 + 1000);
  if (v57)
  {
    uint64_t v59 = *(void *)(v0 + 992);
    uint64_t v60 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    v94[0] = v61;
    *(_DWORD *)uint64_t v60 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 840) = sub_22339BC14(v59, v58, v94);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v60 + 12) = 2080;
    sub_22342C170();
    sub_2233418EC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    uint64_t v62 = sub_22342CF10();
    *(void *)(v0 + 848) = sub_22339BC14(v62, v63, v94);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_223317000, v55, v56, "Nothing more to sync for %s (%s)", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v61, -1, -1);
    MEMORY[0x223CB62D0](v60, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }

  uint64_t v64 = *(void **)(v0 + 880);
  uint64_t v65 = v64[11];
  uint64_t v66 = v64[12];
  sub_223321F60(v64 + 8, v65);
  uint64_t v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 + 8) + **(int **)(v66 + 8));
  uint64_t v67 = (void *)swift_task_alloc();
  *(void *)(v0 + 1072) = v67;
  *uint64_t v67 = v0;
  v67[1] = sub_22333B6E4;
  uint64_t v68 = *(void *)(v0 + 872);
  uint64_t v69 = *(void *)(v0 + 864);
  return v91(v69, v68, v65, v66);
}

uint64_t sub_22333B6E4()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  BOOL v2 = *(void *)(v1 + 1056) != 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void, BOOL))(v5 + 8);
  return v3(0, v2);
}

uint64_t sub_22333B8DC()
{
  swift_beginAccess();
  uint64_t v1 = sub_22334183C(&qword_26AD602D8, &qword_26AD602E0);
  BOOL v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 1080) = v2;
  *BOOL v2 = v0;
  v2[1] = sub_22333B9CC;
  uint64_t v3 = *(void *)(v0 + 896);
  return MEMORY[0x270FA1E80](v0 + 608, v3, v1);
}

uint64_t sub_22333B9CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1088) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_22333C500;
  }
  else
  {
    swift_endAccess();
    *(_OWORD *)(v2 + 1096) = *(_OWORD *)(v2 + 608);
    *(unsigned char *)(v2 + 626) = *(unsigned char *)(v2 + 624);
    uint64_t v3 = sub_22333BAFC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_22333BAFC(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v93 = v3;
  unint64_t v4 = (void *)(v3 + 808);
  uint64_t v5 = (void *)(v3 + 816);
  unsigned int v6 = *(unsigned __int8 *)(v3 + 626);
  if (v6 > 0xFD)
  {
    (*(void (**)(void, void))(*(void *)(v3 + 904) + 8))(*(void *)(v3 + 912), *(void *)(v3 + 896));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(v3 + 880);
    sub_2233416BC(v7, v3 + 136);
    uint64_t v8 = *(void *)(v3 + 816);
    sub_2233416BC(v7, v3 + 16);
    uint64_t v9 = *(void *)(v3 + 808);
    unint64_t v10 = sub_22342C1E0();
    os_log_type_t v11 = sub_22342C720();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v92 = v87;
      *(_DWORD *)uint64_t v12 = 136315906;
      unint64_t v13 = sub_223321F60((void *)(v3 + 160), *(void *)(v3 + 184));
      unint64_t v14 = sub_223421FB0(*((unsigned char *)v13 + 16));
      *(void *)(v3 + 736) = sub_22339BC14(v14, v15, &v92);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233416F4(v3 + 136);
      *(_WORD *)(v12 + 12) = 2048;
      *(void *)(v3 + 720) = v8;
      sub_22342CA10();
      *(_WORD *)(v12 + 22) = 2080;
      uint64_t v16 = sub_223321F60((void *)(v3 + 40), *(void *)(v3 + 64));
      unint64_t v17 = sub_223421FB0(*((unsigned char *)v16 + 16));
      *(void *)(v3 + 696) = sub_22339BC14(v17, v18, &v92);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233416F4(v3 + 16);
      *(_WORD *)(v12 + 32) = 2048;
      *(void *)(v3 + 704) = v9;
      sub_22342CA10();
      _os_log_impl(&dword_223317000, v10, v11, "%s: %lld records %s written, %lld failures", (uint8_t *)v12, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v87, -1, -1);
      MEMORY[0x223CB62D0](v12, -1, -1);
    }
    else
    {
      sub_2233416F4(v3 + 136);
      sub_2233416F4(v3 + 16);
    }

    uint64_t v32 = *(void *)(v3 + 880);
    uint64_t v33 = *(void *)(*(void *)(v3 + 864) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    *(void *)(v3 + 1200) = v33;
    swift_beginAccess();
    *(void *)(v3 + 1208) = *(void *)(v3 + 816);
    swift_beginAccess();
    *(void *)(v3 + 1216) = *(void *)(v3 + 808);
    uint64_t v34 = sub_223321F60((void *)(v32 + 24), *(void *)(v32 + 48));
    *(unsigned char *)(v3 + 627) = sub_2234220F8(*((unsigned char *)v34 + 16));
    swift_retain();
    a1 = sub_22333E3E8;
    a2 = v33;
    goto LABEL_14;
  }
  if (v6 > 0x3F)
  {
    sub_223341724(*(void **)(v3 + 1096), *(void **)(v3 + 1104), *(unsigned char *)(v3 + 626));
LABEL_13:
    a1 = sub_22333B8DC;
    a2 = 0;
    goto LABEL_14;
  }
  id v19 = *(void **)(v3 + 1096);
  if (v6)
  {
    uint64_t v35 = *(void **)(v3 + 1104);
    uint64_t v36 = *(void **)(*sub_223321F60((void *)(*(void *)(v3 + 864) + 16), *(void *)(*(void *)(v3 + 864) + 40))
                   + 24);
    sub_2233417B0(v19, v35, v6);
    id v37 = v19;
    id v38 = v35;
    swift_unknownObjectRetain();
    long long v39 = (void *)sub_22342BF20();
    unsigned __int8 v40 = objc_msgSend(v36, sel_wasQuotaExceededInError_, v39);

    swift_unknownObjectRelease();
    if (v40)
    {
      id v41 = v37;
      id v42 = v35;
      id v43 = v41;
      id v44 = v35;
      uint64_t v45 = sub_22342C1E0();
      os_log_type_t v46 = sub_22342C700();
      BOOL v47 = os_log_type_enabled(v45, v46);
      unsigned __int8 v48 = *(unsigned char *)(v3 + 626);
      uint64_t v49 = *(void **)(v3 + 1104);
      uint64_t v50 = *(void **)(v3 + 1096);
      if (v47)
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v92 = v52;
        *(_DWORD *)uint64_t v51 = 136315138;
        unsigned __int8 v91 = v48;
        id v53 = objc_msgSend(v43, sel_recordName);
        uint64_t v88 = v50;
        uint64_t v89 = v49;
        uint64_t v54 = sub_22342C300();
        unint64_t v56 = v55;

        *(void *)(v51 + 4) = sub_22339BC14(v54, v56, &v92);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_223317000, v45, v46, "Record %s failed to write because Quota Exceeded", (uint8_t *)v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v52, -1, -1);
        uint64_t v57 = v51;
        unint64_t v4 = (void *)(v3 + 808);
        MEMORY[0x223CB62D0](v57, -1, -1);

        unsigned __int8 v48 = v91;
        sub_223341724(v88, v89, v91);
        unint64_t v58 = v88;
        uint64_t v59 = v89;
      }
      else
      {

        sub_223341724(v50, v49, v48);
        unint64_t v58 = v50;
        uint64_t v59 = v49;
      }
      sub_223341724(v58, v59, v48);
      if (__OFADD__(*v4, 1)) {
        goto LABEL_38;
      }
      uint64_t v79 = *(void *)(v3 + 1136);
      *(void *)(v3 + 808) = *v4 + 1;

      if (v79) {
      else
      }
        *(void *)(v3 + 1136) = *(void *)(v3 + 1104);
      goto LABEL_13;
    }
    uint64_t v60 = *(void *)(v3 + 864);

    uint64_t v61 = *(void **)(*sub_223321F60((void *)(v60 + 16), *(void *)(v60 + 40)) + 24);
    id v62 = v37;
    id v63 = v35;
    swift_unknownObjectRetain();
    uint64_t v64 = (void *)sub_22342BF20();
    unsigned __int8 v65 = objc_msgSend(v61, sel_wasRecordSizeFailure_, v64);

    a1 = (uint64_t (*)())swift_unknownObjectRelease();
    if (v65)
    {
      if (*(void *)(*(void *)(v3 + 1048) + 16))
      {
        id v66 = v62;
        unint64_t v67 = sub_22339E390((uint64_t)v66);
        if (v68)
        {
          uint64_t v69 = *(void *)(*(void *)(*(void *)(v3 + 1048) + 56) + 8 * v67);
          *(void *)(v3 + 1256) = v69;
          id v70 = v66;
          char v71 = sub_22342C1E0();
          os_log_type_t v72 = sub_22342C700();
          if (os_log_type_enabled(v71, v72))
          {
            uint64_t v73 = swift_slowAlloc();
            uint64_t v74 = swift_slowAlloc();
            uint64_t v92 = v74;
            *(_DWORD *)uint64_t v73 = 136315394;
            id v75 = objc_msgSend(v70, sel_recordName);
            uint64_t v76 = sub_22342C300();
            unint64_t v78 = v77;

            *(void *)(v3 + 824) = sub_22339BC14(v76, v78, &v92);
            sub_22342CA10();
            swift_bridgeObjectRelease();

            *(_WORD *)(v73 + 12) = 2048;
            *(void *)(v3 + 832) = v69;
            sub_22342CA10();
            _os_log_impl(&dword_223317000, v71, v72, "Record %s exceeded maximum payload size, had size: %ld bytes", (uint8_t *)v73, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x223CB62D0](v74, -1, -1);
            MEMORY[0x223CB62D0](v73, -1, -1);
          }
          else
          {
          }
          uint64_t v84 = *(void *)(*(void *)(v3 + 864) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
          *(void *)(v3 + 1264) = v84;
          uint64_t v85 = sub_22333ED6C;
LABEL_34:
          uint64_t v86 = v85;
          swift_retain();
          a1 = v86;
          a2 = v84;
LABEL_14:
          a3 = 0;
          return MEMORY[0x270FA2498](a1, a2, a3);
        }
      }
    }
    else
    {

      id v80 = v62;
      a1 = v35;
    }
    if (__OFADD__(*v4, 1))
    {
LABEL_39:
      __break(1u);
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    uint64_t v81 = *(void **)(v3 + 1104);
    uint64_t v82 = *(void *)(v3 + 864);
    *(void *)(v3 + 808) = *v4 + 1;
    id v83 = v81;
    uint64_t v84 = *(void *)(v82 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    *(void *)(v3 + 1144) = v84;
    uint64_t v85 = sub_22333CF54;
    goto LABEL_34;
  }
  uint64_t v20 = *v5 + 1;
  if (__OFADD__(*v5, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  unint64_t v21 = *(void **)(v3 + 1104);
  uint64_t v22 = *(void **)(v3 + 880);
  *(void *)(v3 + 816) = v20;
  uint64_t v23 = v22[11];
  uint64_t v24 = v22[12];
  sub_223321F60(v22 + 8, v23);
  sub_2233417C4(v19, v21, v6);
  sub_2233417C4(v19, v21, v6);
  id v25 = objc_msgSend(v19, sel_recordID);
  *(void *)(v3 + 1112) = v25;
  uint64_t v26 = *(int **)(v24 + 24);
  sub_2233417C4(v19, v21, v6);
  uint64_t v90 = (int *)((char *)v26 + *v26);
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v3 + 1120) = v27;
  *BOOL v27 = v3;
  v27[1] = sub_22333CAE8;
  uint64_t v28 = *(void *)(v3 + 1096);
  uint64_t v29 = *(void *)(v3 + 872);
  uint64_t v30 = *(void *)(v3 + 864);
  return ((uint64_t (*)(uint64_t, uint64_t, id, uint64_t, void, uint64_t, uint64_t))v90)(v30, v29, v25, v28, 0, v23, v24);
}

uint64_t sub_22333C500()
{
  swift_endAccess();
  return MEMORY[0x270FA2498](sub_22333C568, 0, 0);
}

uint64_t sub_22333C568()
{
  *(void *)(v0 + 752) = *(void *)(v0 + 1088);
  sub_22331E640(&qword_26AD5EFB0);
  swift_willThrowTypedImpl();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_22333C600, 0, 0);
}

uint64_t sub_22333C600()
{
  uint64_t v1 = *(void **)(v0 + 1088);
  *(void *)(v0 + 1168) = v1;
  uint64_t v2 = *(void *)(v0 + 888);
  uint64_t v3 = *(void *)(v0 + 880);
  long long v26 = *(_OWORD *)(v0 + 864);
  (*(void (**)(void, void))(*(void *)(v0 + 904) + 8))(*(void *)(v0 + 912), *(void *)(v0 + 896));
  LOBYTE(v3) = *((unsigned char *)sub_223321F60((void *)(v3 + 24), *(void *)(v3 + 48)) + 16);
  uint64_t v4 = sub_22342C5D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = v3;
  *(_OWORD *)(v5 + 40) = v26;
  swift_unknownObjectRetain();
  sub_22332606C(v2, (uint64_t)&unk_267FA2828, v5);
  swift_release();
  id v6 = v1;
  id v7 = v1;
  uint64_t v8 = sub_22342C1E0();
  os_log_type_t v9 = sub_22342C700();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 138412290;
    id v12 = v1;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 728) = v13;
    sub_22342CA10();
    *os_log_type_t v11 = v13;

    _os_log_impl(&dword_223317000, v8, v9, "Error handling batch completion with error %@", v10, 0xCu);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v11, -1, -1);
    MEMORY[0x223CB62D0](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(void *)(v0 + 864);

  sub_223321F60((void *)(v14 + 16), *(void *)(v14 + 40));
  swift_getObjectType();
  swift_unknownObjectRetain();
  LOBYTE(v14) = sub_22338EE7C();
  swift_unknownObjectRelease();
  if (v14)
  {
    unint64_t v15 = *(void **)(v0 + 880);
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_getErrorValue();
    sub_223349080(*(void *)(v0 + 496));
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_223381530(8, v1, 0xD000000000000026, 0x80000002234363D0);
    swift_bridgeObjectRelease();
    uint64_t v16 = v15[11];
    uint64_t v17 = v15[12];
    sub_223321F60(v15 + 8, v16);
    unint64_t v18 = *(int **)(v17 + 32);
    id v19 = v1;
    id v25 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))((char *)v18 + *v18);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 1176) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_22333DCE0;
    uint64_t v21 = *(void *)(v0 + 872);
    uint64_t v22 = *(void *)(v0 + 864);
    return v25(v22, v21, v1, 1, v16, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v27 = (uint64_t (*)(uint64_t))((char *)&dword_267FA2D28 + dword_267FA2D28);
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 1192) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_22333DE14;
    return v27((uint64_t)v1);
  }
}

uint64_t sub_22333CAE8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_22333CCB8;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 1112);
    sub_223341724(*(void **)(v2 + 1096), *(void **)(v2 + 1104), *(unsigned char *)(v2 + 626));

    uint64_t v3 = sub_22333CC14;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_22333CC14()
{
  uint64_t v1 = *(void **)(v0 + 1104);
  uint64_t v2 = *(void **)(v0 + 1096);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 626);
  sub_223341724(v2, v1, v3);
  sub_223341724(v2, v1, v3);
  sub_223341738(v2, v1, v3);
  return MEMORY[0x270FA2498](sub_22333B8DC, 0, 0);
}

uint64_t sub_22333CCB8()
{
  uint64_t v1 = *(void **)(v0 + 1128);
  uint64_t v2 = *(void **)(v0 + 1112);
  unsigned __int8 v3 = *(void **)(v0 + 1104);
  uint64_t v4 = *(void **)(v0 + 1096);
  unsigned __int8 v5 = *(unsigned char *)(v0 + 626);
  sub_223341724(v4, v3, v5);

  sub_2233417B0(v4, v3, v5);
  id v6 = v1;
  sub_2233417B0(v4, v3, v5);
  id v7 = v1;
  uint64_t v8 = sub_22342C1E0();
  os_log_type_t v9 = sub_22342C700();
  BOOL v10 = os_log_type_enabled(v8, v9);
  os_log_type_t v11 = *(void **)(v0 + 1128);
  unsigned __int8 v12 = *(unsigned char *)(v0 + 626);
  uint64_t v13 = *(void **)(v0 + 1104);
  uint64_t v14 = *(void **)(v0 + 1096);
  if (v10)
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412546;
    id v17 = v11;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v15 + 4) = v18;
    void *v16 = v18;

    *(_WORD *)(v15 + 12) = 2112;
    id v19 = objc_msgSend(v14, sel_recordID);
    *(void *)(v15 + 14) = v19;
    v16[1] = v19;
    sub_223341724(v14, v13, v12);
    sub_223341724(v14, v13, v12);
    _os_log_impl(&dword_223317000, v8, v9, "Error handling record save: %@ for record ID: %@", (uint8_t *)v15, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v16, -1, -1);
    MEMORY[0x223CB62D0](v15, -1, -1);

    sub_223341724(v14, v13, v12);
    sub_223341724(v14, v13, v12);
  }
  else
  {
    sub_223341724(*(void **)(v0 + 1096), *(void **)(v0 + 1104), *(unsigned char *)(v0 + 626));

    sub_223341724(v14, v13, v12);
    sub_223341724(v14, v13, v12);

    sub_223341724(v14, v13, v12);
  }
  sub_223341724(v14, v13, v12);
  return MEMORY[0x270FA2498](sub_22333B8DC, 0, 0);
}

uint64_t sub_22333CF54()
{
  uint64_t v1 = *(void *)(v0 + 1144);
  uint64_t v2 = *(void **)(v0 + 1104);
  swift_beginAccess();
  unsigned __int8 v3 = *(void **)(v1 + 184);
  id v4 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 184) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unsigned __int8 v3 = sub_22338B204(0, v3[2] + 1, 1, v3);
    *(void *)(v1 + 184) = v3;
  }
  unint64_t v7 = v3[2];
  unint64_t v6 = v3[3];
  if (v7 >= v6 >> 1)
  {
    unsigned __int8 v3 = sub_22338B204((void *)(v6 > 1), v7 + 1, 1, v3);
    *(void *)(v1 + 184) = v3;
  }
  uint64_t v8 = *(void *)(v0 + 1104);
  v3[2] = v7 + 1;
  v3[v7 + 4] = v8;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_22333D07C, 0, 0);
}

uint64_t sub_22333D07C()
{
  sub_223321F60((void *)(*(void *)(v0 + 864) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 864) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  uint64_t v1 = sub_223423BB8();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    swift_unknownObjectRetain();
    unsigned __int8 v3 = (void *)sub_22342BF20();
    objc_msgSend(v2, sel_appendError_, v3);
    swift_unknownObjectRelease();
  }
  sub_223321F60((void *)(*(void *)(v0 + 864) + 16), *(void *)(*(void *)(v0 + 864) + 40));
  swift_getObjectType();
  swift_unknownObjectRetain();
  char v4 = sub_22338EE7C();
  swift_unknownObjectRelease();
  if (v4)
  {
    unsigned __int8 v5 = *(void **)(*sub_223321F60((void *)(*(void *)(v0 + 864) + 16), *(void *)(*(void *)(v0 + 864) + 40))
                  + 24);
    swift_unknownObjectRetain();
    unint64_t v6 = (void *)sub_22342BF20();
    unsigned int v7 = objc_msgSend(v5, sel_isCKErrorPartialFailure_, v6);

    swift_unknownObjectRelease();
    if (!v7) {
      goto LABEL_11;
    }
    uint64_t v8 = *(void **)(*sub_223321F60((void *)(*(void *)(v0 + 864) + 16), *(void *)(*(void *)(v0 + 864) + 40))
                  + 24);
    swift_unknownObjectRetain();
    os_log_type_t v9 = (void *)sub_22342BF20();
    id v10 = objc_msgSend(v8, sel_errorsFromPartialFailure_, v9);
    swift_unknownObjectRelease();

    if (!v10) {
      goto LABEL_11;
    }
    uint64_t v11 = sub_22342C4B0();

    unint64_t v12 = sub_2233402C8(v11);
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t v13 = *(void *)(v0 + 1088);
      uint64_t v14 = sub_22333F114(v12);
      swift_bridgeObjectRelease();
      sub_22341AD18(v14);
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = sub_223343EF8(v15);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 784) = v16;
      sub_223340614((uint64_t *)(v0 + 784));
      if (v13)
      {
        (*(void (**)(void, void))(*(void *)(v0 + 904) + 8))(*(void *)(v0 + 912), *(void *)(v0 + 896));
        return swift_release();
      }
      uint64_t v18 = (uint64_t *)(v0 + 680);
      swift_bridgeObjectRelease();
      id v19 = (uint64_t *)(v0 + 688);
      *(void *)(v0 + 792) = *(void *)(v0 + 784);
      sub_22331E640(&qword_26AD60280);
      sub_22334183C((unint64_t *)&qword_26AD60288, &qword_26AD60280);
      sub_22342C2B0();
      swift_release();
      *(void *)(v0 + 632) = 0;
      *(void *)(v0 + 640) = 0xE000000000000000;
      sub_22342CBB0();
      uint64_t v31 = *(void *)(v0 + 640);
      *(void *)(v0 + 680) = *(void *)(v0 + 632);
      *(void *)(v0 + 688) = v31;
      sub_22342C3B0();
      sub_22342C3B0();
      sub_22342C3B0();
    }
    else
    {
LABEL_11:
      uint64_t v18 = (uint64_t *)(v0 + 664);
      id v19 = (uint64_t *)(v0 + 672);
      *(void *)(v0 + 648) = 0;
      *(void *)(v0 + 656) = 0xE000000000000000;
      sub_22342CBB0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 664) = 0xD00000000000001DLL;
      *(void *)(v0 + 672) = 0x8000000223436400;
      sub_22342C3B0();
      sub_22342C3B0();
      swift_getErrorValue();
      sub_223349080(*(void *)(v0 + 472));
    }
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_223381530(8, *(void **)(v0 + 1104), *v18, *v19);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void **)(v0 + 1104);
  uint64_t v21 = *(void *)(v0 + 1096);
  uint64_t v22 = *(void **)(v0 + 880);
  uint64_t v23 = v22[11];
  uint64_t v24 = v22[12];
  sub_223321F60(v22 + 8, v23);
  id v25 = *(int **)(v24 + 24);
  id v26 = v20;
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v25 + *v25);
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 1152) = v27;
  *BOOL v27 = v0;
  v27[1] = sub_22333D5E4;
  uint64_t v28 = *(void *)(v0 + 1104);
  uint64_t v29 = *(void *)(v0 + 872);
  uint64_t v30 = *(void *)(v0 + 864);
  return v32(v30, v29, v21, v28, 1, v23, v24);
}

uint64_t sub_22333D5E4()
{
  *(void *)(*(void *)v1 + 1160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_22333D7B0;
  }
  else
  {
    uint64_t v2 = sub_22333D700;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22333D700()
{
  uint64_t v1 = *(void **)(v0 + 1104);
  uint64_t v2 = *(void **)(v0 + 1096);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 626);

  sub_223341724(v2, v1, v3);
  sub_223341724(v2, v1, v3);
  return MEMORY[0x270FA2498](sub_22333B8DC, 0, 0);
}

uint64_t sub_22333D7B0()
{
  uint64_t v1 = *(void **)(v0 + 1104);
  uint64_t v2 = *(void **)(v0 + 1096);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 626);

  sub_223341724(v2, v1, v3);
  sub_223341724(v2, v1, v3);
  uint64_t v4 = *(void **)(v0 + 1160);
  *(void *)(v0 + 1168) = v4;
  uint64_t v5 = *(void *)(v0 + 888);
  uint64_t v6 = *(void *)(v0 + 880);
  long long v29 = *(_OWORD *)(v0 + 864);
  (*(void (**)(void, void))(*(void *)(v0 + 904) + 8))(*(void *)(v0 + 912), *(void *)(v0 + 896));
  LOBYTE(v6) = *((unsigned char *)sub_223321F60((void *)(v6 + 24), *(void *)(v6 + 48)) + 16);
  uint64_t v7 = sub_22342C5D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = v6;
  *(_OWORD *)(v8 + 40) = v29;
  swift_unknownObjectRetain();
  sub_22332606C(v5, (uint64_t)&unk_267FA2828, v8);
  swift_release();
  id v9 = v4;
  id v10 = v4;
  uint64_t v11 = sub_22342C1E0();
  os_log_type_t v12 = sub_22342C700();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412290;
    id v15 = v4;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 728) = v16;
    sub_22342CA10();
    void *v14 = v16;

    _os_log_impl(&dword_223317000, v11, v12, "Error handling batch completion with error %@", v13, 0xCu);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v14, -1, -1);
    MEMORY[0x223CB62D0](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v17 = *(void *)(v0 + 864);

  sub_223321F60((void *)(v17 + 16), *(void *)(v17 + 40));
  swift_getObjectType();
  swift_unknownObjectRetain();
  LOBYTE(v17) = sub_22338EE7C();
  swift_unknownObjectRelease();
  if (v17)
  {
    uint64_t v18 = *(void **)(v0 + 880);
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_getErrorValue();
    sub_223349080(*(void *)(v0 + 496));
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_223381530(8, v4, 0xD000000000000026, 0x80000002234363D0);
    swift_bridgeObjectRelease();
    uint64_t v19 = v18[11];
    uint64_t v20 = v18[12];
    sub_223321F60(v18 + 8, v19);
    uint64_t v21 = *(int **)(v20 + 32);
    id v22 = v4;
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))((char *)v21 + *v21);
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 1176) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_22333DCE0;
    uint64_t v24 = *(void *)(v0 + 872);
    uint64_t v25 = *(void *)(v0 + 864);
    return v28(v25, v24, v4, 1, v19, v20);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t (*)(uint64_t))((char *)&dword_267FA2D28 + dword_267FA2D28);
    BOOL v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 1192) = v27;
    *BOOL v27 = v0;
    v27[1] = sub_22333DE14;
    return v30((uint64_t)v4);
  }
}

uint64_t sub_22333DCE0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1184) = v0;
  swift_task_dealloc();

  if (v0) {
    unsigned __int8 v3 = sub_22333E308;
  }
  else {
    unsigned __int8 v3 = sub_22333E228;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_22333DE14()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22333DF10, 0, 0);
}

uint64_t sub_22333DF10()
{
  uint64_t v19 = v0;

  uint64_t v1 = *(void *)(v0 + 880);
  sub_2233416BC(v1, v0 + 136);
  uint64_t v2 = *(void *)(v0 + 816);
  sub_2233416BC(v1, v0 + 16);
  uint64_t v3 = *(void *)(v0 + 808);
  uint64_t v4 = sub_22342C1E0();
  os_log_type_t v5 = sub_22342C720();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v6 = 136315906;
    uint64_t v7 = sub_223321F60((void *)(v0 + 160), *(void *)(v0 + 184));
    unint64_t v8 = sub_223421FB0(*((unsigned char *)v7 + 16));
    *(void *)(v0 + 736) = sub_22339BC14(v8, v9, &v18);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_2233416F4(v0 + 136);
    *(_WORD *)(v6 + 12) = 2048;
    *(void *)(v0 + 720) = v2;
    sub_22342CA10();
    *(_WORD *)(v6 + 22) = 2080;
    id v10 = sub_223321F60((void *)(v0 + 40), *(void *)(v0 + 64));
    unint64_t v11 = sub_223421FB0(*((unsigned char *)v10 + 16));
    *(void *)(v0 + 696) = sub_22339BC14(v11, v12, &v18);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_2233416F4(v0 + 16);
    *(_WORD *)(v6 + 32) = 2048;
    *(void *)(v0 + 704) = v3;
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v4, v5, "%s: %lld records %s written, %lld failures", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v17, -1, -1);
    MEMORY[0x223CB62D0](v6, -1, -1);
  }
  else
  {
    sub_2233416F4(v0 + 136);
    sub_2233416F4(v0 + 16);
  }

  uint64_t v13 = *(void *)(v0 + 880);
  uint64_t v14 = *(void *)(*(void *)(v0 + 864) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
  *(void *)(v0 + 1200) = v14;
  swift_beginAccess();
  *(void *)(v0 + 1208) = *(void *)(v0 + 816);
  swift_beginAccess();
  *(void *)(v0 + 1216) = *(void *)(v0 + 808);
  id v15 = sub_223321F60((void *)(v13 + 24), *(void *)(v13 + 48));
  *(unsigned char *)(v0 + 627) = sub_2234220F8(*((unsigned char *)v15 + 16));
  swift_retain();
  return MEMORY[0x270FA2498](sub_22333E3E8, v14, 0);
}

uint64_t sub_22333E228()
{
  uint64_t v1 = (void *)v0[142];
  uint64_t v2 = (void *)v0[133];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_22333E308()
{
  uint64_t v1 = *(void **)(v0 + 1168);
  uint64_t v2 = *(void **)(v0 + 1064);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_22333E3E8()
{
  sub_223369D9C(*(void *)(v0 + 1208), *(void *)(v0 + 1216), 1u, *(unsigned char *)(v0 + 627));
  swift_release();
  return MEMORY[0x270FA2498](sub_22333E468, 0, 0);
}

uint64_t sub_22333E468()
{
  uint64_t v1 = (void *)v0[142];
  if (v1)
  {
    id v2 = v1;
    id v3 = v1;
    id v4 = v1;
    uint64_t v5 = sub_22342C1E0();
    os_log_type_t v6 = sub_22342C700();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      id v9 = v1;
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      v0[93] = v10;
      sub_22342CA10();
      *unint64_t v8 = v10;

      _os_log_impl(&dword_223317000, v5, v6, "Aborting after finishing batch due to: %@", v7, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v8, -1, -1);
      MEMORY[0x223CB62D0](v7, -1, -1);
    }
    else
    {
    }
    uint64_t v21 = (void *)v0[110];

    id v22 = v21 + 8;
    uint64_t v23 = v21[11];
    uint64_t v24 = v21[12];
    sub_223321F60(v22, v23);
    uint64_t v25 = *(int **)(v24 + 32);
    id v26 = v1;
    long long v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v25 + *v25);
    BOOL v27 = (void *)swift_task_alloc();
    v0[155] = v27;
    *BOOL v27 = v0;
    v27[1] = sub_22333E8B8;
    uint64_t v17 = v0[142];
    uint64_t v15 = v0[109];
    uint64_t v16 = v0[108];
    uint64_t v18 = 1;
    uint64_t v19 = v23;
    uint64_t v20 = v24;
  }
  else
  {
    unint64_t v11 = (void *)v0[110];
    uint64_t v12 = v11[11];
    uint64_t v13 = v11[12];
    sub_223321F60(v11 + 8, v12);
    long long v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 32)
                                                                                       + **(int **)(v13 + 32));
    uint64_t v14 = (void *)swift_task_alloc();
    v0[153] = v14;
    void *v14 = v0;
    v14[1] = sub_22333E7A4;
    uint64_t v15 = v0[109];
    uint64_t v16 = v0[108];
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = v12;
    uint64_t v20 = v13;
  }
  return v29(v16, v15, v17, v18, v19, v20);
}

uint64_t sub_22333E7A4()
{
  *(void *)(*(void *)v1 + 1232) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_22333ECA0;
  }
  else {
    id v2 = sub_22333EBAC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22333E8B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1248) = v0;
  swift_task_dealloc();

  if (v0) {
    id v3 = sub_22333EACC;
  }
  else {
    id v3 = sub_22333E9EC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_22333E9EC()
{
  uint64_t v1 = (void *)v0[142];
  uint64_t v2 = (void *)v0[133];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_22333EACC()
{
  uint64_t v1 = (void *)v0[142];
  uint64_t v2 = (void *)v0[133];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_22333EBAC()
{
  uint64_t v1 = *(void *)(v0 + 816);
  uint64_t v2 = *(void *)(v0 + 808);
  uint64_t v3 = v1 + v2;
  if (__OFADD__(v1, v2))
  {
    __break(1u);
  }
  else
  {
    BOOL v4 = *(void *)(v0 + 1056) != 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(void (**)(uint64_t, BOOL))(v0 + 8);
    v5(v3, v4);
  }
}

uint64_t sub_22333ECA0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22333ED6C()
{
  uint64_t v1 = *(void *)(v0 + 1264);
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 192);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 192) = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_22338B68C(0, v2[2] + 1, 1, v2);
    *(void *)(v1 + 192) = v2;
  }
  unint64_t v5 = v2[2];
  unint64_t v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    uint64_t v2 = sub_22338B68C((void *)(v4 > 1), v5 + 1, 1, v2);
    *(void *)(v1 + 192) = v2;
  }
  uint64_t v6 = *(void *)(v0 + 1256);
  v2[2] = v5 + 1;
  v2[v5 + 4] = v6;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_22333EE88, 0, 0);
}

uint64_t sub_22333EE88()
{
  uint64_t v4 = *(void *)(v0 + 808);
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + 1104);
    uint64_t v8 = *(void *)(v0 + 864);
    *(void *)(v0 + 808) = v6;
    id v9 = v7;
    uint64_t v10 = *(void *)(v8 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    *(void *)(v0 + 1144) = v10;
    swift_retain();
    uint64_t v1 = sub_22333CF54;
    uint64_t v2 = v10;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_22333EF30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_22342CCA0();
    uint64_t result = sub_2234077BC(a1);
    uint64_t v4 = result;
    int v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    uint64_t v17 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_23;
      }
      uint64_t v18 = v7;
      id v11 = *(id *)(*(void *)(a1 + 56) + 16 * v4);
      sub_22342CC70();
      sub_22342CCB0();
      sub_22342CCC0();
      uint64_t result = sub_22342CC80();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v9) {
        goto LABEL_24;
      }
      uint64_t v12 = *(void *)(v8 + 8 * v10);
      if ((v12 & (1 << v4)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v13 = v12 & (-2 << (v4 & 0x3F));
      if (v13)
      {
        int64_t v9 = __clz(__rbit64(v13)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v14 = v10 + 1;
        unint64_t v15 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v15)
        {
          unint64_t v16 = *(void *)(v8 + 8 * v14);
          if (v16)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v16)) + (v14 << 6);
          }
          else
          {
            while (v15 - 2 != v10)
            {
              unint64_t v16 = *(void *)(a1 + 80 + 8 * v10++);
              if (v16)
              {
                unint64_t v14 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v18 + 1;
      uint64_t v4 = v9;
      if (v18 + 1 == v17) {
        return v19;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_22333F114(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t result = sub_223372594(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v16;
    unint64_t v15 = v1 & 0xC000000000000001;
    unint64_t v6 = v1;
    while (v2 != v5)
    {
      if (v15) {
        id v7 = (id)MEMORY[0x223CB54A0](v5, v1);
      }
      else {
        id v7 = *(id *)(v1 + 8 * v5 + 32);
      }
      id v8 = v7;
      uint64_t v9 = sub_22333F288();
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_223372594(v12 > 1, v13 + 1, 1);
      }
      ++v5;
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      unint64_t v1 = v6;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_22342CD40();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22333F288()
{
  sub_22334199C(0, (unint64_t *)&qword_26AD603F0);
  sub_223341884();
  id v1 = v0;
  uint64_t v2 = sub_22342CF30();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
  }
  else
  {
    uint64_t v3 = (void *)swift_allocError();
    *uint64_t v4 = v36;
  }
  uint64_t v5 = (void *)sub_22342BF20();

  id v6 = objc_msgSend(v5, sel_userInfo);
  uint64_t v7 = sub_22342C270();

  *(void *)&long long v36 = v5;
  type metadata accessor for CKError(0);
  id v8 = v5;
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v8, sel_userInfo);
    uint64_t v10 = sub_22342C270();

    uint64_t v11 = sub_22342C300();
    if (*(void *)(v10 + 16) && (unint64_t v13 = sub_22339C2E8(v11, v12), (v14 & 1) != 0))
    {
      sub_22332325C(*(void *)(v10 + 56) + 32 * v13, (uint64_t)&v36);
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v37 + 1))
    {
      type metadata accessor for CKUnderlyingError(0);
      if (swift_dynamicCast())
      {
        id v19 = v35;
        objc_msgSend(v8, sel_code);
        *(void *)&long long v36 = sub_22342CF10();
        *((void *)&v36 + 1) = v20;
        sub_22342C3B0();
        sub_2233418EC((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
        sub_22342BEF0();
        sub_22342CF10();
        sub_22342C3B0();
        swift_bridgeObjectRelease();
        sub_22342BEF0();
        id v21 = (id)stringForCKUnderlyingErrorCode();
        sub_22342C300();

LABEL_21:
        id v26 = objc_msgSend(v8, sel_domain);
        uint64_t v27 = sub_22342C300();
        uint64_t v29 = v28;

        *(void *)&long long v36 = v27;
        *((void *)&v36 + 1) = v29;
        sub_22342C3B0();
        sub_22342C3B0();
        swift_bridgeObjectRelease();
        sub_22342C3B0();
        sub_22342C3B0();

        goto LABEL_22;
      }
    }
    else
    {
      sub_223338A24((uint64_t)&v36);
    }
    *(void *)&long long v36 = objc_msgSend(v8, sel_code);
    sub_22342CF10();
    sub_2233418EC(&qword_26AD60230, type metadata accessor for CKError);
    sub_22342BEF0();
    id v19 = (id)stringForCKErrorCode();
    sub_22342C300();
    goto LABEL_21;
  }
  uint64_t v15 = sub_22342C300();
  if (*(void *)(v7 + 16) && (unint64_t v17 = sub_22339C2E8(v15, v16), (v18 & 1) != 0))
  {
    sub_22332325C(*(void *)(v7 + 56) + 32 * v17, (uint64_t)&v36);
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v37 + 1))
  {
    sub_223338A24((uint64_t)&v36);
    goto LABEL_24;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    id v30 = objc_msgSend(v8, sel_domain);
    uint64_t v31 = sub_22342C300();
    uint64_t v33 = v32;

    *(void *)&long long v36 = v31;
    *((void *)&v36 + 1) = v33;
    sub_22342C3B0();
    objc_msgSend(v8, sel_code);
    sub_22342CF10();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();

    return v36;
  }
  id v22 = objc_msgSend(v8, sel_domain);
  uint64_t v23 = sub_22342C300();
  uint64_t v25 = v24;

  *(void *)&long long v36 = v23;
  *((void *)&v36 + 1) = v25;
  sub_22342C3B0();
  objc_msgSend(v8, sel_code);
  sub_22342CF10();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  sub_22342C3B0();
  sub_22342C3B0();

LABEL_22:
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_22333F8B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 24) = a6;
  *(unsigned char *)(v6 + 40) = a4;
  return MEMORY[0x270FA2498](sub_22333F8D4, 0, 0);
}

uint64_t sub_22333F8D4()
{
  sub_223404CA0(*(unsigned char *)(v0 + 40));
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_22333F9BC;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_223400994(v3, v2, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneWriter.swift", 108, 2);
}

uint64_t sub_22333F9BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_22333FAB0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_22333FAD4, 0, 0);
}

uint64_t sub_22333FAD4()
{
  id v1 = (void *)v0[4];
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  sub_223321F60(v1 + 8, v2);
  id v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_22333FBE0;
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_22333FBE0()
{
  id v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2E10 + dword_267FA2E10);
  uint64_t v3 = (void *)swift_task_alloc();
  v1[6] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_22333FD64;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[2];
  return v7(v5, v4);
}

uint64_t sub_22333FD64()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22333FE60, 0, 0);
}

uint64_t sub_22333FE60()
{
  uint64_t v1 = sub_223321F60((void *)(v0[4] + 24), *(void *)(v0[4] + 48));
  sub_223404CA0(*((unsigned char *)v1 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_22333FF58;
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  return sub_223400994(v4, v3, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneWriter.swift", 108, 2);
}

uint64_t sub_22333FF58()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233368B0, 0, 0);
}

uint64_t sub_223340054()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_223331FA4(v1);
  return v1;
}

void sub_223340088(uint64_t a1)
{
}

uint64_t sub_2233400A0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2840 + dword_267FA2840);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223334A58;
  return v7(a1, a2);
}

uint64_t sub_223340158(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2818 + dword_267FA2818);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223335C74;
  return v7(a1, a2);
}

uint64_t sub_223340210(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2810 + dword_267FA2810);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223331EB0;
  return v7(a1, a2);
}

uint64_t sub_2233402C8(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_22342CCA0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_22332325C(i, (uint64_t)v5);
    sub_22334199C(0, (unint64_t *)&qword_26AD603F0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_22342CC70();
    sub_22342CCB0();
    sub_22342CCC0();
    sub_22342CC80();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

id sub_2233403E4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_22342CD40())
  {
    sub_22334894C(MEMORY[0x263F8EE78]);
    uint64_t v6 = v17;
  }
  else
  {
    uint64_t v6 = MEMORY[0x263F8EE88];
  }
  sub_22334199C(0, &qword_26AD603C0);
  v18[0] = v6;
  sub_223339490(a3, v18);
  swift_bridgeObjectRelease();
  id v7 = (id)sub_22342C880();
  id v8 = sub_2233A8D70(a1, a2, 0x6574697277, 0xE500000000000000);
  objc_msgSend(v7, sel_setGroup_, v8);

  sub_223322120(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity, (uint64_t)v18);
  id v9 = objc_allocWithZone(MEMORY[0x263EFD778]);
  id v10 = v7;
  id v11 = objc_msgSend(v9, sel_init);
  objc_msgSend(v11, sel_setQualityOfService_, 17);
  objc_msgSend(v11, sel_setAllowsCellularAccess_, 1);
  uint64_t v12 = v19;
  uint64_t v13 = v20;
  sub_223321F60(v18, v19);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if (v14)
  {
    uint64_t v15 = v14;
    objc_msgSend(v11, sel_setAllowsCellularAccess_, 0);
    objc_msgSend(v11, sel_setXPCActivity_, v15);
    swift_unknownObjectRelease();
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v18);
  objc_msgSend(v10, sel_setConfiguration_, v11);

  objc_msgSend(v10, sel_setAtomic_, 0);
  objc_msgSend(v10, sel_setSavePolicy_, 1);
  return v10;
}

uint64_t sub_223340614(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_223341540(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_223340680(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_223340680(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_22342CF00();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_223340D6C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      id v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_223340E3C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_223341290((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_22342C510();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  id v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_22342CF60();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    id v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_22342CF60()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_2233410D8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      id v11 = sub_2233410D8((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    id v42 = v11 + 32;
    id v43 = &v11[16 * v41 + 32];
    *(void *)id v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        id v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        char v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        id v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_223340E3C((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        id v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        id v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        id v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_22342CF60() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)id v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_22342CD30();
  __break(1u);
  return result;
}

uint64_t sub_223340D6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_22342CF60(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_223340E3C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        char v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_22342CF60() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)char v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)char v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_22342CF60() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_2233411D4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

char *sub_2233410D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22331E640(&qword_267FA2830);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2233411D4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_22342CD80();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_223341290(uint64_t a1)
{
  return sub_2233410D8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2233412A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22342C130();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)(a2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
  uint64_t v9 = *(void **)(*sub_223321F60((void *)(a2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(a2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 24);
  uint64_t v10 = *MEMORY[0x263F4AAB0];
  swift_retain();
  if ((uint64_t)objc_msgSend(v9, sel_integerForKey_, v10) <= 0)
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22342C200();
    sub_223323374(v11, (uint64_t)qword_26AD63108);
    uint64_t v12 = sub_22342C1E0();
    os_log_type_t v13 = sub_22342C720();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_223317000, v12, v13, "User has not marked first restore, setting first restore date, and marker", v14, 2u);
      MEMORY[0x223CB62D0](v14, -1, -1);
    }

    sub_22342C120();
    uint64_t v15 = sub_223423BB8();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      swift_unknownObjectRetain();
      uint64_t v17 = (void *)sub_22342C0A0();
      char v18 = (void *)sub_22342C2D0();
      objc_msgSend(v16, sel_setSyncDate_forKey_shouldOverride_, v17, v18, 0);

      swift_unknownObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(*(id *)(*sub_223321F60(v8, v8[3]) + 24), sel_setInteger_forKey_, 1, v10);
  }
  int v19 = *(void **)(a1 + 56);
  if (v19) {
    objc_msgSend(v19, sel_setSyncJobStateWithState_, 4);
  }
  return swift_release();
}

uint64_t sub_223341540(uint64_t a1)
{
  return sub_2233729BC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_223341554()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

void sub_2233415B4(uint64_t a1)
{
  sub_22337E148(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(unsigned char **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_2233415C8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_223341608()
{
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_223334A58;
  *(_OWORD *)(v3 + 16) = v4;
  *(unsigned char *)(v3 + 40) = v2;
  return MEMORY[0x270FA2498](sub_22333F8D4, 0, 0);
}

uint64_t sub_2233416BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2233416F4(uint64_t a1)
{
  return a1;
}

void sub_223341724(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    sub_223341738(a1, a2, a3);
  }
}

void sub_223341738(void *a1, void *a2, unsigned __int8 a3)
{
  unsigned int v3 = a3 >> 6;
  if (v3 == 2)
  {
  }
  else if (v3 <= 1)
  {
    sub_223341764(a1, a2, a3 & 1);
  }
}

void sub_223341764(void *a1, void *a2, char a3)
{
  if (a3)
  {
  }
}

id sub_2233417B0(id result, void *a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return sub_2233417C4(result, a2, a3);
  }
  return result;
}

id sub_2233417C4(id result, void *a2, unsigned __int8 a3)
{
  unsigned int v3 = a3 >> 6;
  if (v3 == 2) {
    return result;
  }
  if (v3 <= 1) {
    return sub_2233417F0(result, a2, a3 & 1);
  }
  return result;
}

id sub_2233417F0(void *a1, void *a2, char a3)
{
  if (a3)
  {
    id v5 = a1;
    a1 = a2;
  }
  else if (((v3 ^ (2 * v3)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return a1;
}

uint64_t sub_22334183C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2233378D8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_223341884()
{
  unint64_t result = qword_267FA2838;
  if (!qword_267FA2838)
  {
    sub_22334199C(255, (unint64_t *)&qword_26AD603F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2838);
  }
  return result;
}

uint64_t sub_2233418EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_223341934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(qword_26AD5F180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22334199C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2233419D8()
{
  uint64_t v1 = sub_223341D20();
  if (v2 >> 60 == 15)
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_22342C200();
    sub_223323374(v3, (uint64_t)qword_26AD63108);
    uint64_t v4 = sub_22342C1E0();
    os_log_type_t v5 = sub_22342C700();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_223317000, v4, v5, "No transfer data present for record.", v6, 2u);
      MEMORY[0x223CB62D0](v6, -1, -1);
    }
  }
  else
  {
    uint64_t v7 = v1;
    unint64_t v8 = v2;
    uint64_t v9 = (void *)sub_22342C050();
    id v10 = (id)JWDecodeDictionary();

    if (v10)
    {
      uint64_t v11 = sub_22342C270();

      unint64_t v12 = sub_223342104(v11);
      swift_bridgeObjectRelease();
      if (v12)
      {
        unint64_t v21 = v12;
        sub_223342610((uint64_t *)&v21, 26997, 0xE200000000000000);
        sub_223342610((uint64_t *)&v21, 6911347, 0xE300000000000000);
        sub_223342610((uint64_t *)&v21, 6911329, 0xE300000000000000);
        sub_223322054(v7, v8);
        return v21;
      }
    }
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22342C200();
    sub_223323374(v14, (uint64_t)qword_26AD63108);
    id v15 = v0;
    uint64_t v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C700();
    if (os_log_type_enabled(v16, v17))
    {
      char v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      unint64_t v21 = (unint64_t)v15;
      *(_DWORD *)char v18 = 138412290;
      id v19 = v15;
      sub_22342CA10();
      *uint64_t v20 = v15;

      _os_log_impl(&dword_223317000, v16, v17, "Could not decode transfer data for record: %@", v18, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v20, -1, -1);
      MEMORY[0x223CB62D0](v18, -1, -1);
      sub_223322054(v7, v8);
    }
    else
    {
      sub_223322054(v7, v8);
    }
  }
  return 0;
}

uint64_t sub_223341D20()
{
  uint64_t v1 = sub_2233424D8();
  if (v2 >> 60 == 15)
  {
    uint64_t v3 = sub_2233424D8();
    if (v4 >> 60 == 15)
    {
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_22342C200();
      sub_223323374(v5, (uint64_t)qword_26AD63108);
      id v6 = v0;
      uint64_t v7 = sub_22342C1E0();
      os_log_type_t v8 = sub_22342C700();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        id v10 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 138412290;
        id v11 = v6;
        sub_22342CA10();
        *id v10 = v6;

        _os_log_impl(&dword_223317000, v7, v8, "No transfer metadata found for record: %@", v9, 0xCu);
        sub_22331E640((uint64_t *)&unk_26AD5F150);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v10, -1, -1);
        MEMORY[0x223CB62D0](v9, -1, -1);
      }
      else
      {
      }
      return 0;
    }
    return v3;
  }
  else
  {
    uint64_t v12 = v1;
    unint64_t v13 = v2;
    if (!qword_26AD630F8)
    {
      sub_22334283C();
      id v15 = (void *)swift_allocError();
      swift_willThrow();
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_22342C200();
      sub_223323374(v16, (uint64_t)qword_26AD63108);
      id v17 = v0;
      char v18 = sub_22342C1E0();
      os_log_type_t v19 = sub_22342C700();
      if (os_log_type_enabled(v18, v19))
      {
        log = v18;
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        unint64_t v21 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 138412290;
        id v22 = v17;
        sub_22342CA10();
        void *v21 = v17;

        char v18 = log;
        _os_log_impl(&dword_223317000, log, v19, "Failed to decompress data for record: %@", v20, 0xCu);
        sub_22331E640((uint64_t *)&unk_26AD5F150);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v21, -1, -1);
        MEMORY[0x223CB62D0](v20, -1, -1);
        sub_223322054(v12, v13);
      }
      else
      {
        sub_223322054(v12, v13);
      }
      return 0;
    }
    uint64_t v14 = (*(uint64_t (**)(uint64_t, unint64_t))(qword_26AD63100 + 80))(v1, v2);
    sub_223322054(v12, v13);
  }
  return v14;
}

unint64_t sub_223342104(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_22331E640(&qword_26AD5EF50);
    unint64_t v2 = (void *)sub_22342CD70();
  }
  else
  {
    unint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v23 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v12 = v7;
    }
    else
    {
      int64_t v13 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_37;
      }
      if (v13 >= v22)
      {
LABEL_33:
        sub_223342834();
        return (unint64_t)v2;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v7 + 1;
      if (!v14)
      {
        int64_t v12 = v7 + 2;
        if (v7 + 2 >= v22) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v7 + 3;
          if (v7 + 3 >= v22) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v7 + 4;
            if (v7 + 4 >= v22) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v7 + 5;
              if (v7 + 5 >= v22) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_38;
                  }
                  if (v12 >= v22) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_2233427D8(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_22332325C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_2233427D8((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_2233232B8((uint64_t)v30, &qword_267FA2860);
      swift_bridgeObjectRelease();
      sub_223342834();
      swift_release();
      return 0;
    }
    sub_22332325C((uint64_t)v31 + 8, (uint64_t)v25);
    sub_2233232B8((uint64_t)v30, &qword_267FA2860);
    sub_223323364(v25, v26);
    long long v27 = v24;
    sub_223323364(v26, v28);
    long long v16 = v27;
    sub_223323364(v28, v29);
    sub_223323364(v29, &v27);
    unint64_t result = sub_22339C2E8(v16, *((uint64_t *)&v16 + 1));
    unint64_t v17 = result;
    if (v18)
    {
      os_log_type_t v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *os_log_type_t v8 = v16;
      uint64_t v9 = (_OWORD *)(v2[7] + 32 * v17);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v9);
      unint64_t result = (unint64_t)sub_223323364(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)sub_223323364(&v27, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_36;
    }
    v2[2] = v21;
LABEL_8:
    int64_t v7 = v12;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2233424D8()
{
  uint64_t v1 = sub_22342C9A0();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_22331E640((uint64_t *)&unk_26AD60370);
    if (swift_dynamicCast()) {
      return v6;
    }
  }
  id v2 = objc_msgSend(v0, sel_encryptedValues);
  uint64_t v3 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  swift_unknownObjectRelease();
  if (v4 && (sub_22331E640((uint64_t *)&unk_26AD60370), (swift_dynamicCast() & 1) != 0)) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t sub_223342610(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    long long v14 = 0u;
    long long v15 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_22339C2E8(a2, a3);
  if ((v7 & 1) == 0)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_22332325C(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
LABEL_8:
    sub_2233232B8((uint64_t)&v14, qword_26AD5F180);
    goto LABEL_9;
  }
  sub_223323364(&v14, v16);
  sub_22332325C((uint64_t)v16, (uint64_t)&v14);
  sub_22331E640((uint64_t *)&unk_267FA2850);
  if (swift_dynamicCast())
  {
    os_log_type_t v8 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v8 = 0;
  }
  id v10 = (id)JWEncodeDictionary();

  if (v10)
  {
    uint64_t v11 = sub_22342C070();
    uint64_t v13 = v12;

    *((void *)&v15 + 1) = MEMORY[0x263F06F78];
    *(void *)&long long v14 = v11;
    *((void *)&v14 + 1) = v13;
    swift_bridgeObjectRetain();
    sub_2233C67F8((uint64_t)&v14, a2, a3);
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v16);
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v16);
LABEL_9:
  sub_2234048F0(a2, a3, v16);
  return sub_2233232B8((uint64_t)v16, qword_26AD5F180);
}

uint64_t sub_2233427D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_223342834()
{
  return swift_release();
}

unint64_t sub_22334283C()
{
  unint64_t result = qword_267FA2868;
  if (!qword_267FA2868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2868);
  }
  return result;
}

_UNKNOWN **sub_223342890()
{
  return &off_26D6726F0;
}

uint64_t sub_22334289C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_223372594(0, v2, 0);
    id v4 = (unsigned char *)(a1 + 32);
    uint64_t result = v10;
    do
    {
      if (*v4) {
        uint64_t v5 = 1684633185;
      }
      else {
        uint64_t v5 = 6386028;
      }
      if (*v4) {
        unint64_t v6 = 0xE400000000000000;
      }
      else {
        unint64_t v6 = 0xE300000000000000;
      }
      uint64_t v11 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_223372594(v7 > 1, v8 + 1, 1);
        uint64_t result = v11;
      }
      *(void *)(result + 16) = v8 + 1;
      uint64_t v9 = result + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_2233429A4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_223372594(0, v2, 0);
    id v4 = (unsigned char *)(a1 + 32);
    uint64_t result = v10;
    do
    {
      if (*v4) {
        uint64_t v5 = 28003;
      }
      else {
        uint64_t v5 = 109;
      }
      if (*v4) {
        unint64_t v6 = 0xE200000000000000;
      }
      else {
        unint64_t v6 = 0xE100000000000000;
      }
      uint64_t v11 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_223372594(v7 > 1, v8 + 1, 1);
        uint64_t result = v11;
      }
      *(void *)(result + 16) = v8 + 1;
      uint64_t v9 = result + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_223342A9C(void *a1)
{
  uint64_t v3 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  unint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_22342C130();
  uint64_t v10 = *(void **)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  long long v16 = (char *)&v28 - v15;
  MEMORY[0x270FA5388](v14);
  char v18 = (char *)&v28 - v17;
  unsigned int v19 = objc_msgSend(a1, sel_statusValue);
  char v20 = 1;
  if (v19 - 1 >= 3)
  {
    if (v19)
    {
      if (v19 == 999) {
        return v20 & 1;
      }
      __break(1u);
    }
    else
    {
      id v21 = objc_msgSend(v1, sel_modificationDate);
      if (v21)
      {
        int64_t v22 = v21;
        sub_22342C100();

        uint64_t v31 = (void (*)(char *, char *, uint64_t))v10[4];
        v31(v8, v16, v9);
        uint64_t v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7];
        uint64_t v30 = v10 + 7;
        v29(v8, 0, 1, v9);
        uint64_t v28 = (unsigned int (*)(char *, uint64_t, uint64_t))v10[6];
        if (v28(v8, 1, v9) != 1)
        {
          v31(v18, v8, v9);
          id v23 = objc_msgSend(a1, sel_modificationDate);
          if (v23)
          {
            long long v24 = v23;
            sub_22342C100();

            v31(v6, v16, v9);
            v29(v6, 0, 1, v9);
            if (v28(v6, 1, v9) != 1)
            {
              v31(v13, v6, v9);
              char v20 = sub_22342C0B0();
              uint64_t v25 = (void (*)(char *, uint64_t))v10[1];
              v25(v13, v9);
              v25(v18, v9);
              return v20 & 1;
            }
          }
          else
          {
            v29(v6, 1, 1, v9);
          }
          ((void (*)(char *, uint64_t))v10[1])(v18, v9);
          uint64_t v26 = (uint64_t)v6;
LABEL_14:
          sub_2233232B8(v26, (uint64_t *)&unk_26AD5ED20);
          char v20 = 1;
          return v20 & 1;
        }
LABEL_11:
        uint64_t v26 = (uint64_t)v8;
        goto LABEL_14;
      }
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7])(v8, 1, 1, v9);
    goto LABEL_11;
  }
  return v20 & 1;
}

uint64_t sub_223342E60(uint64_t a1)
{
  sub_22342C970();
  switch(sub_2233D8CBC())
  {
    case 1u:
    case 2u:
    case 4u:
      if (!*(void *)(a1 + 16)) {
        return 0;
      }
      unint64_t v2 = sub_22339C2E8(1684632935, 0xE400000000000000);
      if ((v3 & 1) == 0) {
        return 0;
      }
      sub_22332325C(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v32);
      if (swift_dynamicCast()) {
        return v30;
      }
      else {
        return 0;
      }
    case 3u:
      if (!*(void *)(a1 + 16)) {
        return 0;
      }
      unint64_t v5 = sub_22339C2E8(0x617461646174656DLL, 0xE800000000000000);
      if ((v6 & 1) == 0) {
        return 0;
      }
      sub_22332325C(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v32);
      sub_22331E640(&qword_26AD5F3A8);
      if ((swift_dynamicCast() & 1) == 0) {
        return 0;
      }
      if (*(void *)(v30 + 16) && (unint64_t v7 = sub_22339C2E8(0x6469756761, 0xE500000000000000), (v8 & 1) != 0))
      {
        sub_22332325C(*(void *)(v30 + 56) + 32 * v7, (uint64_t)&v32);
      }
      else
      {
        long long v32 = 0u;
        long long v33 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v33 + 1))
      {
        sub_2233232B8((uint64_t)&v32, qword_26AD5F180);
        return 0;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        return 0;
      }
      return v30;
    case 5u:
      if (!*(void *)(a1 + 16)) {
        return 0;
      }
      unint64_t v9 = sub_22339C2E8(29813, 0xE200000000000000);
      if ((v10 & 1) == 0) {
        return 0;
      }
      sub_22332325C(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v32);
      if ((swift_dynamicCast() & 1) == 0) {
        return 0;
      }
      uint64_t v11 = sub_22342CDA0();
      swift_bridgeObjectRelease();
      if (v11 == 2)
      {
        if (!*(void *)(a1 + 16)) {
          return 0;
        }
        unint64_t v20 = sub_22339C2E8(28789, 0xE200000000000000);
        if ((v21 & 1) == 0) {
          return 0;
        }
        sub_22332325C(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v32);
        if ((swift_dynamicCast() & 1) == 0) {
          return 0;
        }
        uint64_t v15 = v30;
        unint64_t v14 = v31;
        id v22 = objc_allocWithZone(MEMORY[0x263F4B088]);
        sub_22331E684(v30, v31);
        id v23 = (void *)sub_22342C050();
        sub_22331EA68(v30, v31);
        id v18 = objc_msgSend(v22, sel_initWithData_, v23);

        if (!v18) {
          goto LABEL_46;
        }
        if (objc_msgSend(v18, sel_hasMsgid)) {
          goto LABEL_43;
        }
        goto LABEL_45;
      }
      if (v11 != 1)
      {
        if (v11) {
          return 0;
        }
        if (!*(void *)(a1 + 16)) {
          return 0;
        }
        unint64_t v12 = sub_22339C2E8(28789, 0xE200000000000000);
        if ((v13 & 1) == 0) {
          return 0;
        }
        sub_22332325C(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v32);
        if ((swift_dynamicCast() & 1) == 0) {
          return 0;
        }
        uint64_t v15 = v30;
        unint64_t v14 = v31;
        id v16 = objc_allocWithZone(MEMORY[0x263F4B078]);
        sub_22331E684(v30, v31);
        uint64_t v17 = (void *)sub_22342C050();
        sub_22331EA68(v30, v31);
        id v18 = objc_msgSend(v16, sel_initWithData_, v17);

        if (v18)
        {
          if (objc_msgSend(v18, sel_hasMsgid)) {
            goto LABEL_43;
          }
          goto LABEL_45;
        }
LABEL_46:
        sub_22331EA68(v15, v14);
        return 0;
      }
      if (!*(void *)(a1 + 16)) {
        return 0;
      }
      unint64_t v24 = sub_22339C2E8(28789, 0xE200000000000000);
      if ((v25 & 1) == 0) {
        return 0;
      }
      sub_22332325C(*(void *)(a1 + 56) + 32 * v24, (uint64_t)&v32);
      if ((swift_dynamicCast() & 1) == 0) {
        return 0;
      }
      uint64_t v15 = v30;
      unint64_t v14 = v31;
      id v26 = objc_allocWithZone(MEMORY[0x263F4B080]);
      sub_22331E684(v30, v31);
      long long v27 = (void *)sub_22342C050();
      sub_22331EA68(v30, v31);
      id v18 = objc_msgSend(v26, sel_initWithData_, v27);

      if (!v18) {
        goto LABEL_46;
      }
      if ((objc_msgSend(v18, sel_hasMsgid) & 1) == 0)
      {
LABEL_45:

        goto LABEL_46;
      }
LABEL_43:
      id v28 = objc_msgSend(v18, sel_msgid);
      if (v28)
      {
        uint64_t v29 = v28;
        uint64_t v4 = sub_22342C300();
        sub_22331EA68(v15, v14);

        return v4;
      }
      sub_22331EA68(v15, v14);

      return 0;
    default:
      return 0;
  }
}

uint64_t sub_2233433A4(uint64_t a1)
{
  sub_22342C970();
  int v2 = sub_2233D8CBC();
  if ((v2 - 4) < 2) {
    return sub_223342E60(a1);
  }
  if (v2 == 3)
  {
    uint64_t v6 = sub_223342E60(a1);
    if (!v8) {
      return v6;
    }
    unint64_t v9 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    id v10 = (id)IMMessageGuidFromIMFileTransferGuid();

    if (v10)
    {
      uint64_t v6 = sub_22342C300();

      return v6;
    }
    return 0;
  }
  if (v2 != 2) {
    return 0;
  }
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_22339C2E8(0x444974616863, 0xE600000000000000);
  if (v4)
  {
    sub_22332325C(*(void *)(a1 + 56) + 32 * v3, (uint64_t)v41);
    int v5 = swift_dynamicCast();
    if (v5) {
      uint64_t v6 = v39;
    }
    else {
      uint64_t v6 = 0;
    }
    if (v5) {
      unint64_t v7 = v40;
    }
    else {
      unint64_t v7 = 0;
    }
    if (!*(void *)(a1 + 16)) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    if (!*(void *)(a1 + 16)) {
      return v6;
    }
  }
  unint64_t v11 = sub_22339C2E8(0x6F746F725067736DLL, 0xE900000000000034);
  if ((v12 & 1) == 0) {
    return v6;
  }
  sub_22332325C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v41);
  if ((swift_dynamicCast() & 1) == 0) {
    return v6;
  }
  char v13 = (void *)sub_22342C050();
  id v14 = objc_msgSend(v13, sel__FTOptionallyDecompressData);

  if (v14)
  {
    uint64_t v15 = sub_22342C070();
    unint64_t v17 = v16;

    id v14 = (id)sub_22342C050();
    sub_22331EA68(v15, v17);
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B068]), sel_initWithData_, v14);

  if (v18)
  {
    id v19 = v18;
    id v20 = objc_msgSend(v19, sel_actualParentChatId);
    if (v20)
    {
      char v21 = v20;
      uint64_t v22 = sub_22342C300();
      unint64_t v24 = v23;

      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_22342C200();
      sub_223323374(v25, (uint64_t)qword_26AD63108);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      id v26 = sub_22342C1E0();
      os_log_type_t v27 = sub_22342C720();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        v41[0] = v37;
        *(_DWORD *)uint64_t v28 = 136315394;
        swift_bridgeObjectRetain();
        sub_22339BC14(v22, v24, v41);
        sub_22342CA10();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v28 + 12) = 2080;
        if (v7)
        {
          unint64_t v29 = v7;
        }
        else
        {
          uint64_t v6 = 7104878;
          unint64_t v29 = 0xE300000000000000;
        }
        swift_bridgeObjectRetain();
        sub_22339BC14(v6, v29, v41);
        sub_22342CA10();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_223317000, v26, v27, "For message, using actualParentChatID from proto4 %s instead of %s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v37, -1, -1);
        MEMORY[0x223CB62D0](v28, -1, -1);

        sub_22331EA68(v39, v40);
        return v22;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        sub_22331EA68(v39, v40);
        return v22;
      }
    }
  }
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_22342C200();
  sub_223323374(v30, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  unint64_t v31 = sub_22342C1E0();
  os_log_type_t v32 = sub_22342C720();
  if (os_log_type_enabled(v31, v32))
  {
    long long v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v41[0] = v38;
    *(_DWORD *)long long v33 = 136315138;
    if (v7) {
      uint64_t v34 = v6;
    }
    else {
      uint64_t v34 = 7104878;
    }
    if (v7) {
      unint64_t v35 = v7;
    }
    else {
      unint64_t v35 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    sub_22339BC14(v34, v35, v41);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v31, v32, "proto4 for message found, but no actualParentChatID found, falling through to %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v38, -1, -1);
    MEMORY[0x223CB62D0](v33, -1, -1);
    sub_22331EA68(v39, v40);
  }
  else
  {

    sub_22331EA68(v39, v40);
    swift_bridgeObjectRelease_n();
  }
  return v6;
}

id sub_223343A18()
{
  id result = sub_223343A38();
  qword_26AD60438 = (uint64_t)result;
  return result;
}

id sub_223343A38()
{
  sub_22334199C(0, (unint64_t *)&qword_26AD60360);
  uint64_t v0 = (void *)sub_22342C6D0();
  uint64_t v1 = (void *)sub_22342C6D0();
  int v2 = (void *)sub_22342C6D0();
  sub_22331E640((uint64_t *)&unk_26AD5F170);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_22342F920;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  sub_22342C4D0();
  id v4 = objc_allocWithZone(MEMORY[0x263F08730]);
  id v5 = v0;
  id v6 = v1;
  id v7 = v2;
  uint64_t v8 = (void *)sub_22342C490();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v4, sel_initWithType_subpredicates_, 1, v8);

  return v9;
}

id sub_223343BB0()
{
  sub_22331E640(&qword_26AD5EFA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22342F1F0;
  *(void *)(inited + 32) = 0x4D414E5F454E4F5ALL;
  *(void *)(inited + 40) = 0xE900000000000045;
  id v2 = objc_msgSend(v0, sel_recordID);
  id v3 = objc_msgSend(v2, sel_zoneID);

  id v4 = objc_msgSend(v3, sel_zoneName);
  uint64_t v5 = sub_22342C300();
  uint64_t v7 = v6;

  uint64_t v8 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = 0x545F44524F434552;
  *(void *)(inited + 88) = 0xEB00000000455059;
  *(void *)(inited + 96) = sub_22342C970();
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 120) = v8;
  *(void *)(inited + 128) = 0x4E5F44524F434552;
  *(void *)(inited + 136) = 0xEB00000000454D41;
  id v10 = objc_msgSend(v0, sel_recordID);
  id v11 = objc_msgSend(v10, sel_recordName);

  uint64_t v12 = sub_22342C300();
  uint64_t v14 = v13;

  *(void *)(inited + 168) = v8;
  *(void *)(inited + 144) = v12;
  *(void *)(inited + 152) = v14;
  sub_2233C5EB0(inited);
  if (qword_26AD60440 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_26AD60438;
  unint64_t v16 = (void *)sub_22342C260();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_predicateWithSubstitutionVariables_, v16);

  return v17;
}

id sub_223343DD8(uint64_t a1)
{
  id v2 = (objc_class *)type metadata accessor for RemoteRecord();
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  id v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, v3, a1);

  return v4;
}

uint64_t sub_223343E50(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *v3;
  uint64_t v7 = (void *)*sub_223321F60(a3, a3[3]);
  return sub_223347EEC(a1, a2, v7, v6);
}

id sub_223343EAC()
{
  return sub_223343BB0();
}

uint64_t sub_223343ED0(void *a1)
{
  return sub_223342A9C(a1) & 1;
}

void *sub_223343EF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_22331E640((uint64_t *)&unk_26AD5EF90);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_223345120((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_223342834();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_223343FE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_22331E640((uint64_t *)&unk_26AD5F170);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_223345320(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_223342834();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2233440CC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  id result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    id v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_223344838(v12, v13);
    swift_bridgeObjectRelease();
    id result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_223344274(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_223342834();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_22342D030();
      swift_bridgeObjectRetain();
      sub_22342C390();
      uint64_t v19 = sub_22342D060();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    unint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        id v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_22342CF60() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_2233449C8((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_223342834();
    }
    else
    {
      long long v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_2233449C8((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_223342834();
      MEMORY[0x223CB62D0](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_2233446E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_22338B314(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_223344838(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_22342D030();
  swift_bridgeObjectRetain();
  sub_22342C390();
  uint64_t v6 = sub_22342D060();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_22342CF60() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_22342CF60() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_223418F0C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_223344F58(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2233449C8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_223344CC0(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_22342D030();
        swift_bridgeObjectRetain();
        sub_22342C390();
        uint64_t v22 = sub_22342D060();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_22342CF60() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_22342CF60() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_223344CC0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_22331E640(&qword_26AD5F3C0);
  uint64_t result = sub_22342CB80();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_22342D030();
    swift_bridgeObjectRetain();
    sub_22342C390();
    uint64_t result = sub_22342D060();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_223344F58(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_22342CAA0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_22342D030();
        swift_bridgeObjectRetain();
        sub_22342C390();
        uint64_t v10 = sub_22342D060();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            _OWORD *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_223345120(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_223345320(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *unint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22334551C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v155 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v125 = (char *)v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_22342C010();
  uint64_t v8 = *(void *)(v126 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v126);
  uint64_t v118 = (char *)v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v116 = (char *)v114 - v11;
  uint64_t v124 = type metadata accessor for SyncFiles.FileMove();
  MEMORY[0x270FA5388](v124);
  uint64_t v123 = (uint64_t)v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_22331E640(&qword_26AD5F3F8);
  uint64_t v13 = MEMORY[0x270FA5388](v129);
  uint64_t v128 = (void **)((char *)v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v133 = (void *)((char *)v114 - v15);
  uint64_t v153 = &type metadata for FileManagerProvider;
  uint64_t v154 = &off_26D66EBE0;
  v152 = a2;
  uint64_t v131 = *(void *)(a1 + 16);
  if (!v131)
  {
    id v112 = a2;
    uint64_t v111 = 0;
    goto LABEL_67;
  }
  uint64_t v16 = a1 + 32;
  uint64_t v122 = (char *)&v149 + 8;
  uint64_t v119 = (void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  xpc_object_t v120 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v117 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  long long v115 = (void (**)(char *, uint64_t))(v8 + 8);
  id v17 = a2;
  v114[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  uint64_t v19 = MEMORY[0x263F8EE80];
  *(void *)&long long v20 = 138412290;
  long long v121 = v20;
  long long v144 = xmmword_22342F870;
  uint64_t v134 = MEMORY[0x263F8EE80];
  uint64_t v127 = a3;
  uint64_t v21 = v131;
  uint64_t v130 = a1 + 32;
  while (2)
  {
    unint64_t v22 = (uint64_t *)(v16 + 16 * v18);
    uint64_t v23 = *v22;
    unint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    uint64_t v141 = v23;
    uint64_t v25 = sub_22342C9A0();
    if (!v25)
    {
LABEL_4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t v26 = v25;
    self;
    uint64_t v27 = swift_dynamicCastObjCClass();
    if (!v27)
    {
      swift_unknownObjectRelease();
      goto LABEL_4;
    }
    uint64_t v28 = (void *)v27;
    uint64_t v135 = v26;
    uint64_t v147 = v19;
    BOOL v29 = (void *)*sub_223321F60(&v152, (uint64_t)v153);
    v151 = &off_26D66EBE0;
    uint64_t v150 = &type metadata for FileManagerProvider;
    *(void *)&long long v149 = v29;
    id v30 = v29;
    uint64_t v31 = v133;
    unint64_t v136 = v24;
    sub_22337AF00(v28, v141, v24, v133);
    sub_223348EB0((uint64_t)&v149);
    uint64_t v32 = (uint64_t)v31;
    unint64_t v33 = v128;
    sub_223348F04(v32, (uint64_t)v128);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v132 = v18;
    if (EnumCaseMultiPayload == 1)
    {
      BOOL v35 = *v33;
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_22342C200();
      sub_223323374(v36, (uint64_t)qword_26AD63108);
      id v37 = v35;
      id v38 = v35;
      uint64_t v39 = sub_22342C1E0();
      os_log_type_t v40 = sub_22342C700();
      if (os_log_type_enabled(v39, v40))
      {
        int64_t v41 = (uint8_t *)swift_slowAlloc();
        unint64_t v42 = (void *)swift_slowAlloc();
        *(_DWORD *)int64_t v41 = v121;
        id v43 = v35;
        uint64_t v44 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v149 = v44;
        sub_22342CA10();
        *unint64_t v42 = v44;

        _os_log_impl(&dword_223317000, v39, v40, "Encountered error during asset move: %@", v41, 0xCu);
        sub_22331E640((uint64_t *)&unk_26AD5F150);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v42, -1, -1);
        MEMORY[0x223CB62D0](v41, -1, -1);
      }
      else
      {
      }
      swift_unknownObjectRetain_n();
      uint64_t v50 = sub_22342C1E0();
      os_log_type_t v51 = sub_22342C700();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v53 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = v121;
        *(void *)&long long v149 = v28;
        swift_unknownObjectRetain();
        sub_22342CA10();
        void *v53 = v28;
        swift_unknownObjectRelease_n();
        _os_log_impl(&dword_223317000, v50, v51, "Failed to move asset %@", v52, 0xCu);
        sub_22331E640((uint64_t *)&unk_26AD5F150);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v53, -1, -1);
        MEMORY[0x223CB62D0](v52, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      uint64_t v54 = (uint64_t)v125;
      uint64_t v16 = v130;
      uint64_t v18 = v132;
      id v55 = objc_msgSend(v28, sel_fileURL);
      if (v55)
      {
        unint64_t v56 = v55;
        uint64_t v57 = v118;
        sub_22342BFD0();

        uint64_t v58 = *v119;
        uint64_t v59 = v57;
        uint64_t v60 = v126;
        (*v119)(v54, v59, v126);
        (*v120)(v54, 0, 1, v60);
        if ((*v117)(v54, 1, v60) != 1)
        {
          uint64_t v61 = v116;
          uint64_t v62 = v126;
          v58((uint64_t)v116, (char *)v54, v126);
          uint64_t v63 = sub_22342BF60();
          uint64_t v150 = (ValueMetadata *)MEMORY[0x263F8D310];
          *(void *)&long long v149 = v63;
          *((void *)&v149 + 1) = v64;
          sub_223323364(&v149, &v148);
          uint64_t v65 = v147;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v146 = v65;
          sub_2233CE3C0(&v148, 0x4C5255656C6966, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
          uint64_t v147 = v146;
          swift_bridgeObjectRelease();
          char v67 = v61;
          uint64_t v16 = v130;
          (*v115)(v67, v62);
LABEL_23:
          sub_223381530(2, v35, 0, 0);

          uint64_t v49 = v147;
          goto LABEL_24;
        }
      }
      else
      {
        (*v120)(v54, 1, 1, v126);
      }
      sub_2233232B8(v54, (uint64_t *)&unk_26AD5EFC0);
      goto LABEL_23;
    }
    uint64_t v45 = v123;
    sub_223348F6C((uint64_t)v33, v123);
    uint64_t v46 = sub_22342BF60();
    uint64_t v150 = (ValueMetadata *)MEMORY[0x263F8D310];
    *(void *)&long long v149 = v46;
    *((void *)&v149 + 1) = v47;
    sub_223323364(&v149, &v148);
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v146 = v19;
    sub_2233CE3C0(&v148, 0x4C5255656C6966, 0xE700000000000000, v48);
    uint64_t v49 = v146;
    swift_bridgeObjectRelease();
    sub_223348FD0(v45);
LABEL_24:
    id v68 = objc_msgSend(v28, sel_size);
    uint64_t v150 = (ValueMetadata *)MEMORY[0x263F8E970];
    *(void *)&long long v149 = v68;
    sub_223323364(&v149, &v148);
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v146 = v49;
    sub_2233CE3C0(&v148, 1702521203, 0xE400000000000000, v69);
    uint64_t v70 = v146;
    uint64_t v147 = v146;
    swift_bridgeObjectRelease();
    id v71 = objc_msgSend(v28, sel_UUID);
    if (v71)
    {
      BOOL v72 = v71;
      uint64_t v73 = sub_22342C300();
      uint64_t v75 = v74;

      uint64_t v150 = (ValueMetadata *)MEMORY[0x263F8D310];
      *(void *)&long long v149 = v73;
      *((void *)&v149 + 1) = v75;
      sub_223323364(&v149, &v148);
      char v76 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v146 = v70;
      sub_2233CE3C0(&v148, 1684632949, 0xE400000000000000, v76);
      uint64_t v147 = v146;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2234048F0(1684632949, 0xE400000000000000, &v149);
      sub_2233232B8((uint64_t)&v149, qword_26AD5F180);
    }
    uint64_t v19 = MEMORY[0x263F8EE80];
    uint64_t v77 = v136;
    id v78 = objc_msgSend(v28, sel_signature);
    if (!v78)
    {
      sub_2234048F0(0x727574616E676973, 0xE900000000000065, &v149);
      sub_2233232B8((uint64_t)&v149, qword_26AD5F180);
      uint64_t v86 = v147;
      goto LABEL_64;
    }
    uint64_t v79 = v78;
    uint64_t v80 = sub_22342C070();
    unint64_t v82 = v81;

    unint64_t v142 = v82;
    unint64_t v83 = v82 >> 62;
    uint64_t v84 = MEMORY[0x263F8EE78];
    switch(v82 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v80), v80)) {
          goto LABEL_76;
        }
        uint64_t v85 = HIDWORD(v80) - (int)v80;
LABEL_34:
        if (!v85) {
          goto LABEL_62;
        }
        *(void *)&long long v148 = MEMORY[0x263F8EE78];
        int64_t v89 = v85 & ~(v85 >> 63);
        sub_223372594(0, v89, 0);
        uint64_t v84 = v148;
        uint64_t v140 = (int)v80;
        unint64_t v137 = HIDWORD(v80);
        if (v83)
        {
          if (v83 == 1) {
            uint64_t v90 = v140;
          }
          else {
            uint64_t v90 = *(void *)(v80 + 16);
          }
          if (v85 < 0) {
            goto LABEL_75;
          }
        }
        else
        {
          if (v85 < 0) {
            goto LABEL_78;
          }
          uint64_t v90 = 0;
        }
        unint64_t v143 = v142 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v138 = v80 >> 32;
        uint64_t v139 = BYTE6(v142);
        unint64_t v145 = v82 >> 62;
        do
        {
          if (!v89)
          {
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
          }
          if (v83)
          {
            if (v83 == 1)
            {
              if (v90 < v140 || v90 >= v138) {
                goto LABEL_69;
              }
              uint64_t v91 = sub_22342BDF0();
              if (!v91) {
                goto LABEL_79;
              }
              uint64_t v92 = v91;
              uint64_t v93 = sub_22342BE10();
              uint64_t v94 = v90 - v93;
              if (__OFSUB__(v90, v93)) {
                goto LABEL_72;
              }
            }
            else
            {
              if (v90 < *(void *)(v80 + 16)) {
                goto LABEL_71;
              }
              if (v90 >= *(void *)(v80 + 24)) {
                goto LABEL_73;
              }
              uint64_t v96 = sub_22342BDF0();
              if (!v96) {
                goto LABEL_80;
              }
              uint64_t v92 = v96;
              uint64_t v97 = sub_22342BE10();
              uint64_t v94 = v90 - v97;
              if (__OFSUB__(v90, v97)) {
                goto LABEL_74;
              }
            }
            char v95 = *(unsigned char *)(v92 + v94);
          }
          else
          {
            if (v90 >= v139) {
              goto LABEL_70;
            }
            LOWORD(v149) = v80;
            BYTE2(v149) = BYTE2(v80);
            BYTE3(v149) = BYTE3(v80);
            BYTE4(v149) = v137;
            BYTE5(v149) = BYTE5(v80);
            BYTE6(v149) = BYTE6(v80);
            BYTE7(v149) = HIBYTE(v80);
            DWORD2(v149) = v142;
            WORD6(v149) = WORD2(v142);
            char v95 = *((unsigned char *)&v149 + v90);
          }
          sub_22331E640(&qword_267FA28D0);
          uint64_t v98 = swift_allocObject();
          *(_OWORD *)(v98 + 16) = v144;
          *(void *)(v98 + 56) = MEMORY[0x263F8E778];
          *(void *)(v98 + 64) = MEMORY[0x263F8E7C0];
          *(unsigned char *)(v98 + 32) = v95;
          uint64_t v99 = sub_22342C320();
          uint64_t v101 = v100;
          *(void *)&long long v148 = v84;
          unint64_t v83 = *(void *)(v84 + 16);
          unint64_t v102 = *(void *)(v84 + 24);
          if (v83 >= v102 >> 1)
          {
            sub_223372594(v102 > 1, v83 + 1, 1);
            uint64_t v84 = v148;
          }
          *(void *)(v84 + 16) = v83 + 1;
          uint64_t v103 = v84 + 16 * v83;
          *(void *)(v103 + 32) = v99;
          *(void *)(v103 + 40) = v101;
          ++v90;
          --v89;
          --v85;
          LODWORD(v83) = v145;
        }
        while (v85);
LABEL_62:
        uint64_t v16 = v130;
LABEL_63:
        *(void *)&long long v149 = v84;
        sub_22331E640(&qword_26AD60280);
        sub_22333787C();
        uint64_t v104 = sub_22342C2B0();
        uint64_t v106 = v105;
        swift_bridgeObjectRelease();
        sub_22331EA68(v80, v142);
        uint64_t v150 = (ValueMetadata *)MEMORY[0x263F8D310];
        *(void *)&long long v149 = v104;
        *((void *)&v149 + 1) = v106;
        sub_223323364(&v149, &v148);
        uint64_t v107 = v147;
        char v108 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v146 = v107;
        sub_2233CE3C0(&v148, 0x727574616E676973, 0xE900000000000065, v108);
        uint64_t v86 = v146;
        uint64_t v147 = v146;
        swift_bridgeObjectRelease();
        uint64_t v18 = v132;
        uint64_t v19 = MEMORY[0x263F8EE80];
        uint64_t v77 = v136;
LABEL_64:
        uint64_t v150 = (ValueMetadata *)sub_22331E640(&qword_26AD5F3A8);
        *(void *)&long long v149 = v86;
        sub_223323364(&v149, &v148);
        uint64_t v109 = v134;
        char v110 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v146 = v109;
        sub_2233CE3C0(&v148, v141, v77, v110);
        uint64_t v134 = v146;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2233232B8((uint64_t)v133, &qword_26AD5F3F8);
        uint64_t v21 = v131;
LABEL_5:
        if (++v18 != v21) {
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t v111 = v134;
        break;
      case 2uLL:
        uint64_t v88 = *(void *)(v80 + 16);
        uint64_t v87 = *(void *)(v80 + 24);
        uint64_t v85 = v87 - v88;
        if (!__OFSUB__(v87, v88)) {
          goto LABEL_34;
        }
        goto LABEL_77;
      case 3uLL:
        goto LABEL_63;
      default:
        uint64_t v85 = BYTE6(v142);
        goto LABEL_34;
    }
    break;
  }
LABEL_67:
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v152);
  return v111;
}

unint64_t sub_22334649C(void *a1, void *a2)
{
  uint64_t v4 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v240 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v240 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v240 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v240 - v14;
  v256 = &type metadata for FileManagerProvider;
  v257 = &off_26D66EBE0;
  v255[0] = a1;
  uint64_t v16 = (void *)MEMORY[0x263F8EE80];
  unint64_t v254 = MEMORY[0x263F8EE80];
  id v17 = a1;
  id v247 = a2;
  id v18 = objc_msgSend(a2, sel_recordChangeTag);
  uint64_t v19 = MEMORY[0x263F8D310];
  if (v18)
  {
    long long v20 = v18;
    uint64_t v21 = sub_22342C300();
    uint64_t v23 = v22;

    uint64_t ObjectType = v19;
    *(void *)&long long v252 = v21;
    *((void *)&v252 + 1) = v23;
    sub_223323364(&v252, v251);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v250 = v16;
    sub_2233CE3C0(v251, 0x615465676E616863, 0xE900000000000067, isUniquelyReferenced_nonNull_native);
    unint64_t v254 = (unint64_t)v250;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2234048F0(0x615465676E616863, 0xE900000000000067, &v252);
    sub_2233232B8((uint64_t)&v252, qword_26AD5F180);
  }
  id v25 = objc_msgSend(v247, sel_creationDate);
  if (v25)
  {
    uint64_t v26 = v25;
    sub_22342C100();

    uint64_t v27 = sub_22342C130();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
  }
  else
  {
    uint64_t v27 = sub_22342C130();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 1, 1, v27);
  }
  sub_223332AEC((uint64_t)v13, (uint64_t)v15);
  sub_22342C130();
  uint64_t v28 = *(void *)(v27 - 8);
  BOOL v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v29(v15, 1, v27) == 1)
  {
    sub_2233232B8((uint64_t)v15, (uint64_t *)&unk_26AD5ED20);
    sub_2234048F0(0x6E6F697461657263, 0xEC00000065746144, &v252);
    sub_2233232B8((uint64_t)&v252, qword_26AD5F180);
  }
  else
  {
    uint64_t ObjectType = v27;
    id v30 = sub_223348E4C((uint64_t *)&v252);
    (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 32))(v30, v15, v27);
    sub_223323364(&v252, v251);
    unint64_t v31 = v254;
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    v250 = (void *)v31;
    sub_2233CE3C0(v251, 0x6E6F697461657263, 0xEC00000065746144, v32);
    unint64_t v254 = (unint64_t)v250;
    swift_bridgeObjectRelease();
  }
  id v33 = objc_msgSend(v247, sel_modificationDate);
  if (v33)
  {
    uint64_t v34 = v33;
    sub_22342C100();

    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v7, v35, 1, v27);
  sub_223332AEC((uint64_t)v7, (uint64_t)v10);
  if (v29(v10, 1, v27) == 1)
  {
    sub_2233232B8((uint64_t)v10, (uint64_t *)&unk_26AD5ED20);
    sub_2234048F0(0xD000000000000010, 0x80000002234358D0, &v252);
    sub_2233232B8((uint64_t)&v252, qword_26AD5F180);
  }
  else
  {
    uint64_t ObjectType = v27;
    uint64_t v36 = sub_223348E4C((uint64_t *)&v252);
    (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 32))(v36, v10, v27);
    sub_223323364(&v252, v251);
    unint64_t v37 = v254;
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    v250 = (void *)v37;
    sub_2233CE3C0(v251, 0xD000000000000010, 0x80000002234358D0, v38);
    unint64_t v254 = (unint64_t)v250;
    swift_bridgeObjectRelease();
  }
  id v39 = objc_msgSend(v247, sel_modifiedByDevice);
  if (v39)
  {
    os_log_type_t v40 = v39;
    uint64_t v41 = sub_22342C300();
    uint64_t v43 = v42;

    uint64_t ObjectType = v19;
    *(void *)&long long v252 = v41;
    *((void *)&v252 + 1) = v43;
    sub_223323364(&v252, v251);
    unint64_t v44 = v254;
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    v250 = (void *)v44;
    unint64_t v254 = 0x8000000000000000;
    sub_2233CE3C0(v251, 0xD000000000000010, 0x80000002234358F0, v45);
    unint64_t v46 = (unint64_t)v250;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2234048F0(0xD000000000000010, 0x80000002234358F0, &v252);
    sub_2233232B8((uint64_t)&v252, qword_26AD5F180);
    unint64_t v46 = v254;
  }
  id v47 = v247;
  id v48 = objc_msgSend(v247, sel_recordID);
  id v49 = objc_msgSend(v48, sel_recordName);

  uint64_t v50 = sub_22342C300();
  uint64_t v52 = v51;

  uint64_t ObjectType = v19;
  *(void *)&long long v252 = v50;
  *((void *)&v252 + 1) = v52;
  sub_223323364(&v252, v251);
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  v250 = (void *)v46;
  sub_2233CE3C0(v251, 0x614E64726F636572, 0xEA0000000000656DLL, v53);
  uint64_t v54 = v250;
  swift_bridgeObjectRelease();
  uint64_t v55 = sub_22342C970();
  uint64_t ObjectType = v19;
  *(void *)&long long v252 = v55;
  *((void *)&v252 + 1) = v56;
  sub_223323364(&v252, v251);
  char v57 = swift_isUniquelyReferenced_nonNull_native();
  v250 = v54;
  sub_2233CE3C0(v251, 0x795464726F636572, 0xEA00000000006570, v57);
  uint64_t v58 = v250;
  swift_bridgeObjectRelease();
  id v59 = objc_msgSend(v47, sel_recordID);
  id v60 = objc_msgSend(v59, sel_zoneID);

  id v61 = objc_msgSend(v60, sel_zoneName);
  uint64_t v62 = sub_22342C300();
  uint64_t v64 = v63;

  uint64_t ObjectType = v19;
  *(void *)&long long v252 = v62;
  *((void *)&v252 + 1) = v64;
  sub_223323364(&v252, v251);
  char v65 = swift_isUniquelyReferenced_nonNull_native();
  v250 = v58;
  sub_2233CE3C0(v251, 0x656D614E656E6F7ALL, 0xE800000000000000, v65);
  uint64_t v66 = v250;
  swift_bridgeObjectRelease();
  id v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  objc_msgSend(v67, sel_setOutputFormat_, 200);
  objc_msgSend(v47, sel_encodeSystemFieldsWithCoder_, v67);
  objc_msgSend(v67, sel_finishEncoding);
  id v245 = v67;
  id v68 = objc_msgSend(v67, sel_encodedData);
  uint64_t v69 = sub_22342C070();
  unint64_t v71 = v70;

  uint64_t ObjectType = MEMORY[0x263F06F78];
  *(void *)&long long v252 = v69;
  *((void *)&v252 + 1) = v71;
  sub_223323364(&v252, v251);
  uint64_t v243 = v69;
  unint64_t v244 = v71;
  sub_22331E684(v69, v71);
  char v72 = swift_isUniquelyReferenced_nonNull_native();
  v250 = v66;
  id v73 = v47;
  sub_2233CE3C0(v251, 0xD000000000000017, 0x80000002234358A0, v72);
  unint64_t v254 = (unint64_t)v250;
  swift_bridgeObjectRelease();
  uint64_t v74 = sub_22342C990();
  uint64_t v75 = sub_22341AD18(v74);
  swift_bridgeObjectRelease();
  sub_22342C970();
  switch(sub_2233D8CBC())
  {
    case 1u:
      uint64_t v128 = sub_223348CA8((uint64_t)&unk_26D66BEE0);
      swift_arrayDestroy();
      unint64_t v129 = *(void *)(v128 + 16);
      unint64_t v130 = *(void *)(v75 + 16);
      uint64_t v241 = v128;
      if (v129 > v130 >> 3)
      {
        uint64_t v186 = sub_223344274(v128, v75);
      }
      else
      {
        *(void *)&long long v252 = v75;
        sub_2233440CC(v128);
        uint64_t v186 = v252;
      }
      int64_t v187 = 0;
      uint64_t v188 = v186 + 56;
      uint64_t v189 = 1 << *(unsigned char *)(v186 + 32);
      uint64_t v190 = -1;
      if (v189 < 64) {
        uint64_t v190 = ~(-1 << v189);
      }
      unint64_t v191 = v190 & *(void *)(v186 + 56);
      unint64_t v246 = v254;
      uint64_t v248 = v186;
      int64_t v249 = (unint64_t)(v189 + 63) >> 6;
      uint64_t v242 = v186 + 56;
      if (v191) {
        goto LABEL_134;
      }
LABEL_137:
      int64_t v195 = v187 + 1;
      if (__OFADD__(v187, 1)) {
        goto LABEL_186;
      }
      if (v195 >= v249) {
        goto LABEL_178;
      }
      unint64_t v196 = *(void *)(v188 + 8 * v195);
      ++v187;
      if (v196) {
        goto LABEL_154;
      }
      int64_t v187 = v195 + 1;
      if (v195 + 1 >= v249) {
        goto LABEL_178;
      }
      unint64_t v196 = *(void *)(v188 + 8 * v187);
      if (v196) {
        goto LABEL_154;
      }
      int64_t v187 = v195 + 2;
      if (v195 + 2 >= v249) {
        goto LABEL_178;
      }
      unint64_t v196 = *(void *)(v188 + 8 * v187);
      if (v196) {
        goto LABEL_154;
      }
      int64_t v187 = v195 + 3;
      if (v195 + 3 >= v249) {
        goto LABEL_178;
      }
      unint64_t v196 = *(void *)(v188 + 8 * v187);
      if (v196) {
        goto LABEL_154;
      }
      int64_t v187 = v195 + 4;
      if (v195 + 4 >= v249) {
        goto LABEL_178;
      }
      unint64_t v196 = *(void *)(v188 + 8 * v187);
      if (v196) {
        goto LABEL_154;
      }
      int64_t v197 = v195 + 5;
      if (v197 >= v249) {
        goto LABEL_178;
      }
      unint64_t v196 = *(void *)(v188 + 8 * v197);
      if (v196)
      {
        int64_t v187 = v197;
LABEL_154:
        unint64_t v191 = (v196 - 1) & v196;
        for (unint64_t i = __clz(__rbit64(v196)) + (v187 << 6); ; unint64_t i = v192 | (v187 << 6))
        {
          v198 = (uint64_t *)(*(void *)(v186 + 48) + 16 * i);
          uint64_t v200 = *v198;
          uint64_t v199 = v198[1];
          swift_bridgeObjectRetain();
          uint64_t v201 = sub_22342C9A0();
          if (v201) {
            break;
          }
          id v202 = objc_msgSend(v73, sel_encryptedValues);
          v203 = (void *)sub_22342C2D0();
          id v204 = objc_msgSend(v202, sel_objectForKey_, v203);

          swift_unknownObjectRelease();
          if (v204)
          {
            uint64_t ObjectType = swift_getObjectType();
            *(void *)&long long v252 = v204;
            sub_223323364(&v252, v251);
            swift_unknownObjectRetain();
            v216 = (void *)v246;
            char v217 = swift_isUniquelyReferenced_nonNull_native();
            v250 = v216;
            unint64_t v209 = sub_22339C2E8(v200, v199);
            uint64_t v219 = v216[2];
            BOOL v220 = (v218 & 1) == 0;
            uint64_t v221 = v219 + v220;
            if (__OFADD__(v219, v220)) {
              goto LABEL_195;
            }
            char v222 = v218;
            if (v216[3] >= v221)
            {
              if ((v217 & 1) == 0) {
                sub_2233CF384();
              }
            }
            else
            {
              sub_2233CC7E0(v221, v217);
              unint64_t v223 = sub_22339C2E8(v200, v199);
              if ((v222 & 1) != (v224 & 1)) {
                goto LABEL_202;
              }
              unint64_t v209 = v223;
            }
            v225 = v250;
            unint64_t v246 = (unint64_t)v250;
            if ((v222 & 1) == 0)
            {
              v250[(v209 >> 6) + 8] |= 1 << v209;
              v229 = (uint64_t *)(v225[6] + 16 * v209);
              uint64_t *v229 = v200;
              v229[1] = v199;
              sub_223323364(v251, (_OWORD *)(v225[7] + 32 * v209));
              uint64_t v230 = v225[2];
              BOOL v118 = __OFADD__(v230, 1);
              uint64_t v228 = v230 + 1;
              if (v118) {
                goto LABEL_199;
              }
LABEL_177:
              v225[2] = v228;
              swift_bridgeObjectRetain();
LABEL_136:
              id v73 = v247;
              uint64_t v188 = v242;
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v186 = v248;
              if (!v191) {
                goto LABEL_137;
              }
              goto LABEL_134;
            }
LABEL_135:
            v194 = (_OWORD *)(v225[7] + 32 * v209);
            _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v194);
            sub_223323364(v251, v194);
            goto LABEL_136;
          }
          swift_bridgeObjectRelease();
          if (!v191) {
            goto LABEL_137;
          }
LABEL_134:
          unint64_t v192 = __clz(__rbit64(v191));
          v191 &= v191 - 1;
        }
        uint64_t v205 = v201;
        uint64_t ObjectType = swift_getObjectType();
        *(void *)&long long v252 = v205;
        sub_223323364(&v252, v251);
        swift_unknownObjectRetain();
        v206 = (void *)v246;
        char v207 = swift_isUniquelyReferenced_nonNull_native();
        v250 = v206;
        unint64_t v209 = sub_22339C2E8(v200, v199);
        uint64_t v210 = v206[2];
        BOOL v211 = (v208 & 1) == 0;
        uint64_t v212 = v210 + v211;
        if (__OFADD__(v210, v211)) {
          goto LABEL_193;
        }
        char v213 = v208;
        if (v206[3] >= v212)
        {
          if ((v207 & 1) == 0) {
            sub_2233CF384();
          }
        }
        else
        {
          sub_2233CC7E0(v212, v207);
          unint64_t v214 = sub_22339C2E8(v200, v199);
          if ((v213 & 1) != (v215 & 1)) {
            goto LABEL_202;
          }
          unint64_t v209 = v214;
        }
        v225 = v250;
        unint64_t v246 = (unint64_t)v250;
        if ((v213 & 1) == 0)
        {
          v250[(v209 >> 6) + 8] |= 1 << v209;
          v226 = (uint64_t *)(v225[6] + 16 * v209);
          uint64_t *v226 = v200;
          v226[1] = v199;
          sub_223323364(v251, (_OWORD *)(v225[7] + 32 * v209));
          uint64_t v227 = v225[2];
          BOOL v118 = __OFADD__(v227, 1);
          uint64_t v228 = v227 + 1;
          if (v118) {
            goto LABEL_197;
          }
          goto LABEL_177;
        }
        goto LABEL_135;
      }
      while (1)
      {
        int64_t v187 = v197 + 1;
        if (__OFADD__(v197, 1)) {
          goto LABEL_201;
        }
        if (v187 >= v249) {
          break;
        }
        unint64_t v196 = *(void *)(v188 + 8 * v187);
        ++v197;
        if (v196) {
          goto LABEL_154;
        }
      }
LABEL_178:
      unint64_t v254 = v246;
      swift_release();
      v231 = sub_223343EF8(v241);
      swift_bridgeObjectRelease();
      v232 = (void **)sub_223321F60(v255, (uint64_t)v256);
      uint64_t v233 = sub_22334551C((uint64_t)v231, *v232, (uint64_t)v73);
      swift_release();
      if (!v233) {
        goto LABEL_68;
      }
      id v234 = v245;
      unint64_t v235 = v244;
      uint64_t v236 = v243;
      if (*(void *)(v233 + 16))
      {
        uint64_t ObjectType = sub_22331E640(&qword_26AD5F3A8);
        *(void *)&long long v252 = v233;
        sub_223323364(&v252, v251);
        v237 = (void *)v246;
        char v238 = swift_isUniquelyReferenced_nonNull_native();
        v250 = v237;
        sub_2233CE3C0(v251, 0x737465737361, 0xE600000000000000, v238);
        unint64_t v123 = (unint64_t)v250;
        swift_bridgeObjectRelease();
        sub_22331EA68(v236, v235);

        goto LABEL_182;
      }
      sub_22331EA68(v243, v244);
      swift_bridgeObjectRelease();

      goto LABEL_69;
    case 2u:
    case 4u:
    case 5u:
      int64_t v76 = 0;
      uint64_t v77 = *(void *)(v75 + 56);
      uint64_t v248 = v75 + 56;
      uint64_t v78 = 1 << *(unsigned char *)(v75 + 32);
      uint64_t v79 = -1;
      if (v78 < 64) {
        uint64_t v79 = ~(-1 << v78);
      }
      unint64_t v80 = v79 & v77;
      unint64_t v246 = v254;
      int64_t v249 = (unint64_t)(v78 + 63) >> 6;
      if ((v79 & v77) != 0) {
        goto LABEL_23;
      }
LABEL_25:
      int64_t v83 = v76 + 1;
      if (__OFADD__(v76, 1))
      {
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
        goto LABEL_191;
      }
      if (v83 >= v249) {
        goto LABEL_67;
      }
      unint64_t v84 = *(void *)(v248 + 8 * v83);
      ++v76;
      if (v84) {
        goto LABEL_42;
      }
      int64_t v76 = v83 + 1;
      if (v83 + 1 >= v249) {
        goto LABEL_67;
      }
      unint64_t v84 = *(void *)(v248 + 8 * v76);
      if (v84) {
        goto LABEL_42;
      }
      int64_t v76 = v83 + 2;
      if (v83 + 2 >= v249) {
        goto LABEL_67;
      }
      unint64_t v84 = *(void *)(v248 + 8 * v76);
      if (v84) {
        goto LABEL_42;
      }
      int64_t v76 = v83 + 3;
      if (v83 + 3 >= v249) {
        goto LABEL_67;
      }
      unint64_t v84 = *(void *)(v248 + 8 * v76);
      if (v84) {
        goto LABEL_42;
      }
      int64_t v76 = v83 + 4;
      if (v83 + 4 < v249)
      {
        unint64_t v84 = *(void *)(v248 + 8 * v76);
        if (v84)
        {
LABEL_42:
          unint64_t v80 = (v84 - 1) & v84;
          for (unint64_t j = __clz(__rbit64(v84)) + (v76 << 6); ; unint64_t j = v81 | (v76 << 6))
          {
            uint64_t v86 = (uint64_t *)(*(void *)(v75 + 48) + 16 * j);
            uint64_t v88 = *v86;
            uint64_t v87 = v86[1];
            swift_bridgeObjectRetain();
            uint64_t v89 = sub_22342C9A0();
            if (v89)
            {
              uint64_t v103 = v89;
              uint64_t ObjectType = swift_getObjectType();
              *(void *)&long long v252 = v103;
              sub_223323364(&v252, v251);
              swift_unknownObjectRetain();
              uint64_t v104 = (void *)v246;
              char v105 = swift_isUniquelyReferenced_nonNull_native();
              v250 = v104;
              unint64_t v107 = sub_22339C2E8(v88, v87);
              uint64_t v108 = v104[2];
              BOOL v109 = (v106 & 1) == 0;
              uint64_t v110 = v108 + v109;
              if (__OFADD__(v108, v109)) {
                goto LABEL_187;
              }
              char v111 = v106;
              if (v104[3] >= v110)
              {
                if ((v105 & 1) == 0) {
                  sub_2233CF384();
                }
              }
              else
              {
                sub_2233CC7E0(v110, v105);
                unint64_t v112 = sub_22339C2E8(v88, v87);
                if ((v111 & 1) != (v113 & 1)) {
                  goto LABEL_202;
                }
                unint64_t v107 = v112;
              }
              long long v114 = v250;
              unint64_t v246 = (unint64_t)v250;
              if (v111)
              {
                long long v115 = (_OWORD *)(v250[7] + 32 * v107);
                _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v115);
                sub_223323364(v251, v115);
                goto LABEL_65;
              }
              v250[(v107 >> 6) + 8] |= 1 << v107;
              id v116 = (uint64_t *)(v114[6] + 16 * v107);
              *id v116 = v88;
              v116[1] = v87;
              sub_223323364(v251, (_OWORD *)(v114[7] + 32 * v107));
              uint64_t v117 = v114[2];
              BOOL v118 = __OFADD__(v117, 1);
              uint64_t v119 = v117 + 1;
              if (v118) {
                goto LABEL_189;
              }
            }
            else
            {
              id v90 = objc_msgSend(v73, sel_encryptedValues);
              uint64_t v91 = (void *)sub_22342C2D0();
              id v92 = objc_msgSend(v90, sel_objectForKey_, v91);

              swift_unknownObjectRelease();
              if (!v92)
              {
                swift_bridgeObjectRelease();
                if (!v80) {
                  goto LABEL_25;
                }
                goto LABEL_23;
              }
              uint64_t ObjectType = swift_getObjectType();
              *(void *)&long long v252 = v92;
              sub_223323364(&v252, v251);
              swift_unknownObjectRetain();
              uint64_t v93 = (void *)v246;
              char v94 = swift_isUniquelyReferenced_nonNull_native();
              v250 = v93;
              unint64_t v96 = sub_22339C2E8(v88, v87);
              uint64_t v97 = v93[2];
              BOOL v98 = (v95 & 1) == 0;
              uint64_t v99 = v97 + v98;
              if (__OFADD__(v97, v98)) {
                goto LABEL_188;
              }
              char v100 = v95;
              if (v93[3] >= v99)
              {
                if ((v94 & 1) == 0) {
                  sub_2233CF384();
                }
              }
              else
              {
                sub_2233CC7E0(v99, v94);
                unint64_t v101 = sub_22339C2E8(v88, v87);
                if ((v100 & 1) != (v102 & 1)) {
                  goto LABEL_202;
                }
                unint64_t v96 = v101;
              }
              long long v114 = v250;
              unint64_t v246 = (unint64_t)v250;
              if (v100)
              {
                xpc_object_t v120 = (_OWORD *)(v250[7] + 32 * v96);
                _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v120);
                sub_223323364(v251, v120);
                goto LABEL_65;
              }
              v250[(v96 >> 6) + 8] |= 1 << v96;
              long long v121 = (uint64_t *)(v114[6] + 16 * v96);
              *long long v121 = v88;
              v121[1] = v87;
              sub_223323364(v251, (_OWORD *)(v114[7] + 32 * v96));
              uint64_t v122 = v114[2];
              BOOL v118 = __OFADD__(v122, 1);
              uint64_t v119 = v122 + 1;
              if (v118) {
                goto LABEL_190;
              }
            }
            void v114[2] = v119;
            swift_bridgeObjectRetain();
LABEL_65:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v73 = v247;
            if (!v80) {
              goto LABEL_25;
            }
LABEL_23:
            unint64_t v81 = __clz(__rbit64(v80));
            v80 &= v80 - 1;
          }
        }
        int64_t v85 = v83 + 5;
        if (v85 < v249)
        {
          unint64_t v84 = *(void *)(v248 + 8 * v85);
          if (v84)
          {
            int64_t v76 = v85;
            goto LABEL_42;
          }
          while (1)
          {
            int64_t v76 = v85 + 1;
            if (__OFADD__(v85, 1)) {
              break;
            }
            if (v76 >= v249) {
              goto LABEL_67;
            }
            unint64_t v84 = *(void *)(v248 + 8 * v76);
            ++v85;
            if (v84) {
              goto LABEL_42;
            }
          }
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          sub_22342CFB0();
          __break(1u);
          JUMPOUT(0x223347ED8);
        }
      }
LABEL_67:
      swift_release();
LABEL_68:
      sub_22331EA68(v243, v244);

LABEL_69:
      unint64_t v123 = v246;
      goto LABEL_182;
    case 3u:
      uint64_t v124 = sub_22334289C((uint64_t)&unk_26D66BF10);
      uint64_t v125 = sub_2233429A4((uint64_t)&unk_26D66BF38);
      unint64_t v246 = 0;
      *(void *)&long long v252 = v124;
      sub_2233446E4(v125);
      uint64_t v126 = sub_22341AD18(v252);
      swift_bridgeObjectRelease();
      if (*(void *)(v126 + 16) <= *(void *)(v75 + 16) >> 3)
      {
        *(void *)&long long v252 = v75;
        sub_2233440CC(v126);
        swift_bridgeObjectRelease();
        uint64_t v127 = v252;
      }
      else
      {
        uint64_t v127 = sub_223344274(v126, v75);
        swift_bridgeObjectRelease();
      }
      int64_t v131 = 0;
      uint64_t v132 = *(void *)(v127 + 56);
      uint64_t v248 = v127 + 56;
      uint64_t v133 = 1 << *(unsigned char *)(v127 + 32);
      uint64_t v134 = -1;
      if (v133 < 64) {
        uint64_t v134 = ~(-1 << v133);
      }
      unint64_t v135 = v134 & v132;
      unint64_t v136 = (void *)v254;
      int64_t v249 = (unint64_t)(v133 + 63) >> 6;
      if ((v134 & v132) != 0) {
        goto LABEL_80;
      }
LABEL_84:
      int64_t v141 = v131 + 1;
      if (__OFADD__(v131, 1)) {
        goto LABEL_185;
      }
      if (v141 >= v249) {
        goto LABEL_127;
      }
      unint64_t v142 = *(void *)(v248 + 8 * v141);
      ++v131;
      if (v142) {
        goto LABEL_101;
      }
      int64_t v131 = v141 + 1;
      if (v141 + 1 >= v249) {
        goto LABEL_127;
      }
      unint64_t v142 = *(void *)(v248 + 8 * v131);
      if (v142) {
        goto LABEL_101;
      }
      int64_t v131 = v141 + 2;
      if (v141 + 2 >= v249) {
        goto LABEL_127;
      }
      unint64_t v142 = *(void *)(v248 + 8 * v131);
      if (v142) {
        goto LABEL_101;
      }
      int64_t v131 = v141 + 3;
      if (v141 + 3 >= v249) {
        goto LABEL_127;
      }
      unint64_t v142 = *(void *)(v248 + 8 * v131);
      if (v142) {
        goto LABEL_101;
      }
      int64_t v131 = v141 + 4;
      if (v141 + 4 >= v249) {
        goto LABEL_127;
      }
      unint64_t v142 = *(void *)(v248 + 8 * v131);
      if (v142) {
        goto LABEL_101;
      }
      int64_t v143 = v141 + 5;
      if (v143 >= v249) {
        goto LABEL_127;
      }
      unint64_t v142 = *(void *)(v248 + 8 * v143);
      if (v142)
      {
        int64_t v131 = v143;
LABEL_101:
        unint64_t v135 = (v142 - 1) & v142;
        for (unint64_t k = __clz(__rbit64(v142)) + (v131 << 6); ; unint64_t k = v137 | (v131 << 6))
        {
          long long v144 = (uint64_t *)(*(void *)(v127 + 48) + 16 * k);
          uint64_t v146 = *v144;
          uint64_t v145 = v144[1];
          swift_bridgeObjectRetain();
          uint64_t v147 = sub_22342C9A0();
          if (v147) {
            break;
          }
          id v148 = objc_msgSend(v73, sel_encryptedValues);
          long long v149 = (void *)sub_22342C2D0();
          id v150 = objc_msgSend(v148, sel_objectForKey_, v149);

          swift_unknownObjectRelease();
          if (v150)
          {
            uint64_t ObjectType = swift_getObjectType();
            *(void *)&long long v252 = v150;
            sub_223323364(&v252, v251);
            swift_unknownObjectRetain();
            v162 = v136;
            char v163 = swift_isUniquelyReferenced_nonNull_native();
            v250 = v162;
            unint64_t v155 = sub_22339C2E8(v146, v145);
            uint64_t v165 = v162[2];
            BOOL v166 = (v164 & 1) == 0;
            uint64_t v167 = v165 + v166;
            if (__OFADD__(v165, v166)) {
              goto LABEL_194;
            }
            char v168 = v164;
            if (v162[3] < v167)
            {
              sub_2233CC7E0(v167, v163);
              unint64_t v169 = sub_22339C2E8(v146, v145);
              if ((v168 & 1) != (v170 & 1)) {
                goto LABEL_202;
              }
              unint64_t v155 = v169;
              uint64_t v139 = v250;
              if ((v168 & 1) == 0) {
                goto LABEL_123;
              }
LABEL_82:
              unint64_t v136 = v139;
              uint64_t v140 = (_OWORD *)(v139[7] + 32 * v155);
              _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v140);
              sub_223323364(v251, v140);
LABEL_83:
              id v73 = v247;
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!v135) {
                goto LABEL_84;
              }
              goto LABEL_80;
            }
            if (v163)
            {
              uint64_t v139 = v250;
              if (v164) {
                goto LABEL_82;
              }
            }
            else
            {
              sub_2233CF384();
              uint64_t v139 = v250;
              if (v168) {
                goto LABEL_82;
              }
            }
LABEL_123:
            v139[(v155 >> 6) + 8] |= 1 << v155;
            v174 = (uint64_t *)(v139[6] + 16 * v155);
            uint64_t *v174 = v146;
            v174[1] = v145;
            sub_223323364(v251, (_OWORD *)(v139[7] + 32 * v155));
            uint64_t v175 = v139[2];
            BOOL v118 = __OFADD__(v175, 1);
            uint64_t v173 = v175 + 1;
            if (v118) {
              goto LABEL_198;
            }
LABEL_124:
            unint64_t v136 = v139;
            v139[2] = v173;
            swift_bridgeObjectRetain();
            goto LABEL_83;
          }
          swift_bridgeObjectRelease();
          if (!v135) {
            goto LABEL_84;
          }
LABEL_80:
          unint64_t v137 = __clz(__rbit64(v135));
          v135 &= v135 - 1;
        }
        uint64_t v151 = v147;
        uint64_t ObjectType = swift_getObjectType();
        *(void *)&long long v252 = v151;
        sub_223323364(&v252, v251);
        swift_unknownObjectRetain();
        v152 = v136;
        char v153 = swift_isUniquelyReferenced_nonNull_native();
        v250 = v152;
        unint64_t v155 = sub_22339C2E8(v146, v145);
        uint64_t v156 = v152[2];
        BOOL v157 = (v154 & 1) == 0;
        uint64_t v158 = v156 + v157;
        if (__OFADD__(v156, v157)) {
          goto LABEL_192;
        }
        char v159 = v154;
        if (v152[3] >= v158)
        {
          if (v153)
          {
            uint64_t v139 = v250;
            if (v154) {
              goto LABEL_82;
            }
          }
          else
          {
            sub_2233CF384();
            uint64_t v139 = v250;
            if (v159) {
              goto LABEL_82;
            }
          }
        }
        else
        {
          sub_2233CC7E0(v158, v153);
          unint64_t v160 = sub_22339C2E8(v146, v145);
          if ((v159 & 1) != (v161 & 1)) {
            goto LABEL_202;
          }
          unint64_t v155 = v160;
          uint64_t v139 = v250;
          if (v159) {
            goto LABEL_82;
          }
        }
        v139[(v155 >> 6) + 8] |= 1 << v155;
        uint64_t v171 = (uint64_t *)(v139[6] + 16 * v155);
        *uint64_t v171 = v146;
        v171[1] = v145;
        sub_223323364(v251, (_OWORD *)(v139[7] + 32 * v155));
        uint64_t v172 = v139[2];
        BOOL v118 = __OFADD__(v172, 1);
        uint64_t v173 = v172 + 1;
        if (v118) {
          goto LABEL_196;
        }
        goto LABEL_124;
      }
      while (1)
      {
        int64_t v131 = v143 + 1;
        if (__OFADD__(v143, 1)) {
          goto LABEL_200;
        }
        if (v131 >= v249) {
          break;
        }
        unint64_t v142 = *(void *)(v248 + 8 * v131);
        ++v143;
        if (v142) {
          goto LABEL_101;
        }
      }
LABEL_127:
      unint64_t v254 = (unint64_t)v136;
      swift_release();
      uint64_t v176 = sub_2233419D8();
      if (v176)
      {
        uint64_t v177 = v176;
        uint64_t v178 = sub_22334289C((uint64_t)&unk_26D66BF60);
        uint64_t v179 = (void **)sub_223321F60(v255, (uint64_t)v256);
        uint64_t v180 = sub_22334551C(v178, *v179, (uint64_t)v73);
        swift_bridgeObjectRelease();
        if (v180)
        {
          uint64_t ObjectType = sub_22331E640(&qword_26AD5F3A8);
          *(void *)&long long v252 = v180;
          sub_223323364(&v252, v251);
          char v181 = swift_isUniquelyReferenced_nonNull_native();
          v250 = (void *)v177;
          sub_2233CE3C0(v251, 0x737465737361, 0xE600000000000000, v181);
          uint64_t v177 = (uint64_t)v250;
          swift_bridgeObjectRelease();
        }
        id v182 = v245;
        unint64_t v183 = v244;
        uint64_t v184 = v243;
        uint64_t ObjectType = sub_22331E640(&qword_26AD5F3A8);
        *(void *)&long long v252 = v177;
        sub_223323364(&v252, v251);
        char v185 = swift_isUniquelyReferenced_nonNull_native();
        v250 = v136;
        sub_2233CE3C0(v251, 0x617461646174656DLL, 0xE800000000000000, v185);
        unint64_t v123 = (unint64_t)v250;
        swift_bridgeObjectRelease();
        sub_22331EA68(v184, v183);
      }
      else
      {
        sub_22331EA68(v243, v244);

        unint64_t v123 = (unint64_t)v136;
      }
LABEL_182:
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v255);
      return v123;
    default:
      sub_22331EA68(v243, v244);
      swift_bridgeObjectRelease();

      unint64_t v123 = v254;
      goto LABEL_182;
  }
}

uint64_t sub_223347EEC(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v63 = a2;
  uint64_t v68 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_22342C130();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v62 - v15;
  uint64_t v66 = &type metadata for FileManagerProvider;
  id v67 = &off_26D66EBE0;
  v65[0] = a3;
  id v17 = a3;
  objc_msgSend(a1, sel_setStatusValue_, 0);
  id v18 = objc_msgSend(a4, sel_recordID);
  id v19 = objc_msgSend(v18, sel_zoneID);

  id v20 = objc_msgSend(v19, sel_zoneName);
  if (!v20)
  {
    sub_22342C300();
    id v20 = (id)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setZoneName_, v20);

  sub_22342C970();
  uint64_t v21 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setRecordType_, v21);

  id v22 = objc_msgSend(a4, sel_recordID);
  id v23 = objc_msgSend(v22, sel_recordName);

  if (!v23)
  {
    sub_22342C300();
    id v23 = (id)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setRecordName_, v23);

  id v24 = objc_msgSend(a4, sel_modificationDate);
  if (v24)
  {
    sub_22342C100();

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v10, v7);
    id v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v25(v16, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7) == 1)
    {
      id v24 = 0;
    }
    else
    {
      id v24 = (id)sub_22342C0A0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    }
  }
  else
  {
    id v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v25(v16, 1, 1, v7);
  }
  objc_msgSend(a1, sel_setDateRead_, v24);

  id v26 = objc_msgSend(a4, sel_modificationDate);
  if (v26)
  {
    sub_22342C100();

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v10, v7);
    v25(v14, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
    {
      id v26 = 0;
    }
    else
    {
      id v26 = (id)sub_22342C0A0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    }
  }
  else
  {
    v25(v14, 1, 1, v7);
  }
  objc_msgSend(a1, sel_setModificationDate_, v26);

  id v27 = objc_msgSend(a4, sel_recordChangeTag);
  objc_msgSend(a1, sel_setChangeTag_, v27);

  uint64_t v28 = (void **)sub_223321F60(v65, (uint64_t)v66);
  unint64_t v29 = sub_22334649C(*v28, a4);
  sub_223342E60(v29);
  if (v30)
  {
    unint64_t v31 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v31 = 0;
  }
  objc_msgSend(a1, sel_setGuid_, v31);

  sub_2233433A4(v29);
  if (v32)
  {
    id v33 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v33 = 0;
  }
  objc_msgSend(a1, sel_setParentID_, v33);

  uint64_t v34 = self;
  uint64_t v35 = (void *)sub_22342C260();
  swift_bridgeObjectRelease();
  id v64 = 0;
  id v36 = objc_msgSend(v34, sel_dataWithPropertyList_format_options_error_, v35, 200, 0, &v64);

  id v37 = v64;
  if (v36)
  {
    uint64_t v38 = sub_22342C070();
    unint64_t v40 = v39;

    id v41 = objc_msgSend(a1, sel_data);
    if (!v41)
    {
      type metadata accessor for RemoteRecordData();
      id v42 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v43 = objc_msgSend(v42, sel_initWithContext_, v63);
      objc_msgSend(a1, sel_setData_, v43);
    }
    id v44 = objc_msgSend(a1, sel_data);
    if (v44)
    {
      char v45 = v44;
      unint64_t v46 = (void *)sub_22342C050();
      objc_msgSend(v45, sel_setData_, v46);
      sub_22331EA68(v38, v40);
    }
    else
    {
      sub_22331EA68(v38, v40);
    }
  }
  else
  {
    id v47 = v37;
    id v48 = (void *)sub_22342BF30();

    swift_willThrow();
    sub_223381530(4, v48, 0, 0);
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_22342C200();
    sub_223323374(v49, (uint64_t)qword_26AD63108);
    id v50 = a4;
    id v51 = v48;
    id v52 = v50;
    id v53 = v48;
    uint64_t v54 = sub_22342C1E0();
    os_log_type_t v55 = sub_22342C700();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      char v57 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 138412546;
      id v64 = v52;
      id v58 = v52;
      sub_22342CA10();
      void *v57 = v52;

      *(_WORD *)(v56 + 12) = 2112;
      id v59 = v48;
      id v60 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v64 = v60;
      sub_22342CA10();
      v57[1] = v60;

      _os_log_impl(&dword_223317000, v54, v55, "Failed to serialize binary data for record %@ with: %@", (uint8_t *)v56, 0x16u);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v57, -1, -1);
      MEMORY[0x223CB62D0](v56, -1, -1);
    }
    else
    {
    }
  }
  return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v65);
}

uint64_t sub_2233487E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_22331E640(&qword_267FA28D8);
    uint64_t v3 = sub_22342CB80();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      sub_2233427D8(v6 + 40 * v4, (uint64_t)v21);
      uint64_t result = sub_22342CB10();
      uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v9 = result & v8;
      unint64_t v10 = (result & (unint64_t)v8) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        while (1)
        {
          sub_2233427D8(*(void *)(v3 + 48) + 40 * v9, (uint64_t)v20);
          char v13 = MEMORY[0x223CB53C0](v20, v21);
          uint64_t result = sub_22334902C((uint64_t)v20);
          if (v13) {
            break;
          }
          unint64_t v9 = (v9 + 1) & v8;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            goto LABEL_8;
          }
        }
        sub_22334902C((uint64_t)v21);
      }
      else
      {
LABEL_8:
        *(void *)(v5 + 8 * v10) = v12 | v11;
        uint64_t v14 = *(void *)(v3 + 48) + 40 * v9;
        long long v15 = v21[0];
        long long v16 = v21[1];
        *(void *)(v14 + 32) = v22;
        *(_OWORD *)uint64_t v14 = v15;
        *(_OWORD *)(v14 + 16) = v16;
        uint64_t v17 = *(void *)(v3 + 16);
        BOOL v18 = __OFADD__(v17, 1);
        uint64_t v19 = v17 + 1;
        if (v18)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v19;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_22334894C(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22342CD40();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_22331E640((uint64_t *)&unk_26AD60460);
      uint64_t v3 = sub_22342CB80();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_22342CD40();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x223CB54A0](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_22342C9D0();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_22334199C(0, (unint64_t *)&qword_26AD60338);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_22342C9E0();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_22342C9E0();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_22342C9D0();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_22334199C(0, (unint64_t *)&qword_26AD60338);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_22342C9E0();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_22342C9E0();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_223348CA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_22331E640(&qword_26AD5F3C0);
    uint64_t v3 = sub_22342CB80();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_22342D030();
      swift_bridgeObjectRetain();
      sub_22342C390();
      uint64_t result = sub_22342D060();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_22342CF60(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          char v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_22342CF60();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      id v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t *sub_223348E4C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_223348EB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_223348F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_26AD5F3F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_223348F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncFiles.FileMove();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_223348FD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SyncFiles.FileMove();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22334902C(uint64_t a1)
{
  return a1;
}

uint64_t sub_223349080(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_22342CF30();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_22342BF20();

  id v10 = objc_msgSend(v9, sel_userInfo);
  uint64_t v11 = sub_22342C270();

  *(void *)&long long v43 = v9;
  sub_223349AC8();
  type metadata accessor for CKError(0);
  id v12 = v9;
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v42;
    id v14 = objc_msgSend(v12, sel_userInfo);
    uint64_t v15 = sub_22342C270();

    uint64_t v16 = sub_22342C300();
    if (*(void *)(v15 + 16) && (unint64_t v18 = sub_22339C2E8(v16, v17), (v19 & 1) != 0))
    {
      sub_22332325C(*(void *)(v15 + 56) + 32 * v18, (uint64_t)&v43);
    }
    else
    {
      long long v43 = 0u;
      long long v44 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v44 + 1))
    {
      type metadata accessor for CKUnderlyingError(0);
      if (swift_dynamicCast())
      {
        id v24 = v42;
        id v42 = objc_msgSend(v12, sel_code);
        *(void *)&long long v43 = sub_22342CF10();
        *((void *)&v43 + 1) = v25;
        sub_22342C3B0();
        id v41 = v24;
        sub_223349B08((unint64_t *)&unk_267FA2548, type metadata accessor for CKUnderlyingError);
        sub_22342BEF0();
        id v41 = v42;
        sub_22342CF10();
        sub_22342C3B0();
        swift_bridgeObjectRelease();
        id v42 = v24;
        sub_22342BEF0();
        id v26 = (id)stringForCKUnderlyingErrorCode();
        sub_22342C300();

LABEL_21:
        id v31 = objc_msgSend(v12, sel_domain);
        uint64_t v32 = sub_22342C300();
        uint64_t v34 = v33;

        *(void *)&long long v43 = v32;
        *((void *)&v43 + 1) = v34;
        sub_22342C3B0();
        sub_22342C3B0();
        swift_bridgeObjectRelease();
        sub_22342C3B0();
        sub_22342C3B0();

        swift_bridgeObjectRelease();
        return v43;
      }
    }
    else
    {
      sub_223338A24((uint64_t)&v43);
    }
    *(void *)&long long v43 = objc_msgSend(v12, sel_code);
    sub_22342CF10();
    id v42 = v13;
    sub_223349B08(&qword_26AD60230, type metadata accessor for CKError);
    sub_22342BEF0();
    id v24 = (id)stringForCKErrorCode();
    sub_22342C300();
    goto LABEL_21;
  }
  uint64_t v20 = sub_22342C300();
  if (*(void *)(v11 + 16) && (unint64_t v22 = sub_22339C2E8(v20, v21), (v23 & 1) != 0))
  {
    sub_22332325C(*(void *)(v11 + 56) + 32 * v22, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v44 + 1))
  {
    sub_223338A24((uint64_t)&v43);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    id v35 = objc_msgSend(v12, sel_domain);
    uint64_t v36 = sub_22342C300();
    uint64_t v38 = v37;

    *(void *)&long long v43 = v36;
    *((void *)&v43 + 1) = v38;
    sub_22342C3B0();
    id v42 = objc_msgSend(v12, sel_code);
    sub_22342CF10();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();

    return v43;
  }
  id v27 = objc_msgSend(v12, sel_domain);
  uint64_t v28 = sub_22342C300();
  uint64_t v30 = v29;

  *(void *)&long long v43 = v28;
  *((void *)&v43 + 1) = v30;
  sub_22342C3B0();
  id v42 = objc_msgSend(v12, sel_code);
  sub_22342CF10();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  sub_22342C3B0();
  sub_22342C3B0();

  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_223349728(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_22342CF30();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_22342BF20();

  id v10 = objc_msgSend(v9, sel_userInfo);
  uint64_t v11 = sub_22342C270();

  uint64_t v12 = sub_22342C300();
  if (*(void *)(v11 + 16) && (unint64_t v14 = sub_22339C2E8(v12, v13), (v15 & 1) != 0))
  {
    sub_22332325C(*(void *)(v11 + 56) + 32 * v14, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v25 + 1))
  {
    sub_223338A24((uint64_t)&v24);
    goto LABEL_12;
  }
  sub_223349AC8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    *(void *)&long long v24 = objc_msgSend(v9, sel_code);
    uint64_t v18 = sub_22342CF10();
    goto LABEL_13;
  }
  uint64_t v16 = v23;
  id v23 = objc_msgSend(v9, sel_code);
  *(void *)&long long v24 = sub_22342CF10();
  *((void *)&v24 + 1) = v17;
  sub_22342C3B0();
  id v23 = objc_msgSend(v16, sel_code);
  sub_22342CF10();
  sub_22342C3B0();

  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)&v24 + 1);
  uint64_t v18 = v24;
LABEL_13:
  *(void *)&long long v24 = v18;
  *((void *)&v24 + 1) = v19;
  sub_22342C3B0();
  id v20 = objc_msgSend(v9, sel_domain);
  sub_22342C300();

  sub_22342C3B0();
  swift_bridgeObjectRelease();
  return v24;
}

void sub_223349A50()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v1 = (void *)sub_22342C2D0();
  id v2 = objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v1, 0, 0);

  qword_26AD63348 = (uint64_t)v2;
}

unint64_t sub_223349AC8()
{
  unint64_t result = qword_26AD603F0;
  if (!qword_26AD603F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD603F0);
  }
  return result;
}

uint64_t sub_223349B08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_223349B50(uint64_t a1)
{
  return objc_msgSend(*v1, sel_addOperation_, a1);
}

uint64_t destroy for PrepareStatisticsStep(uint64_t result)
{
  if (*(void *)(result + 8)) {
    return swift_release();
  }
  return result;
}

uint64_t _s17MessagesCloudSync21PrepareStatisticsStepVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for PrepareStatisticsStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *uint64_t v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for PrepareStatisticsStep(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PrepareStatisticsStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    *uint64_t v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrepareStatisticsStep(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PrepareStatisticsStep(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrepareStatisticsStep()
{
  return &type metadata for PrepareStatisticsStep;
}

uint64_t sub_223349DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA28F8 + dword_267FA28F8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223335C74;
  return v7(a1, a2);
}

uint64_t sub_223349E64(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2233368B0, 0, 0);
}

uint64_t sub_223349E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = a3;
  return MEMORY[0x270FA2498](sub_223349EA4, 0, 0);
}

uint64_t sub_223349EA4()
{
  uint64_t v1 = *sub_223321F60((void *)(*(void *)(v0 + 128) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore), *(void *)(*(void *)(v0 + 128) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore + 24));
  return MEMORY[0x270FA2498](sub_223349F20, v1, 0);
}

uint64_t sub_223349F20()
{
  id v1 = (id)IMDMessageRecordCalculateLocalCloudKitStatistics();
  if (v1)
  {
    uint64_t v2 = v1;
    *(void *)(v0 + 144) = sub_22342C270();

    id v3 = objc_msgSend(self, sel_sharedInstance);
    int v4 = (void *)sub_22342C260();
    objc_msgSend(v3, sel_setValue_forDomain_forKey_, v4, *MEMORY[0x263F4AA40], *MEMORY[0x263F4AB48]);

    uint64_t v5 = sub_22334A05C;
  }
  else
  {
    uint64_t v5 = sub_22334A44C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_22334A05C()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (!*(void *)(v1 + 16))
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_22342C200();
    sub_223323374(v2, (uint64_t)qword_26AD63108);
    id v3 = sub_22342C1E0();
    os_log_type_t v4 = sub_22342C700();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_223317000, v3, v4, "Fetched empty statistics from IMDPersistence, that shouldn't occur.", v5, 2u);
      MEMORY[0x223CB62D0](v5, -1, -1);
    }
  }
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v8 = sub_22342C300();
  *(void *)(v0 + 64) = v9;
  *(void *)(v0 + 56) = v8;
  sub_22342CB30();
  *(void *)(v0 + 80) = sub_22331E640(&qword_26AD60270);
  *(void *)(v0 + 56) = v6;
  sub_223323364((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 88));
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = v1;
  sub_2233CE7D8((_OWORD *)(v0 + 88), v0 + 16, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 120) = v1;
  swift_bridgeObjectRelease();
  sub_22334902C(v0 + 16);
  uint64_t v11 = *(void **)(*sub_223321F60((void *)(v7 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v7 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 56);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_22342C260();
    objc_msgSend(v11, sel_setCloudKitSyncStatistics_, v12);

    swift_bridgeObjectRelease();
  }
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_22342C200();
  sub_223323374(v13, (uint64_t)qword_26AD63108);
  unint64_t v14 = sub_22342C1E0();
  os_log_type_t v15 = sub_22342C720();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_22342C280();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 56) = sub_22339BC14(v17, v19, &v23);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v14, v15, "Setting the following sync statistics on our CloudKit state: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v22, -1, -1);
    MEMORY[0x223CB62D0](v16, -1, -1);
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  id v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_22334A44C()
{
  uint64_t v24 = v0;
  unint64_t v1 = sub_2233C6464(MEMORY[0x263F8EE78]);
  if (!*(void *)(v1 + 16))
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_22342C200();
    sub_223323374(v2, (uint64_t)qword_26AD63108);
    id v3 = sub_22342C1E0();
    os_log_type_t v4 = sub_22342C700();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_223317000, v3, v4, "Fetched empty statistics from IMDPersistence, that shouldn't occur.", v5, 2u);
      MEMORY[0x223CB62D0](v5, -1, -1);
    }
  }
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v8 = sub_22342C300();
  *(void *)(v0 + 64) = v9;
  *(void *)(v0 + 56) = v8;
  sub_22342CB30();
  *(void *)(v0 + 80) = sub_22331E640(&qword_26AD60270);
  *(void *)(v0 + 56) = v6;
  sub_223323364((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 88));
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v23 = v1;
  sub_2233CE7D8((_OWORD *)(v0 + 88), v0 + 16, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 120) = v1;
  swift_bridgeObjectRelease();
  sub_22334902C(v0 + 16);
  uint64_t v11 = *(void **)(*sub_223321F60((void *)(v7 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v7 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 56);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_22342C260();
    objc_msgSend(v11, sel_setCloudKitSyncStatistics_, v12);

    swift_bridgeObjectRelease();
  }
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_22342C200();
  sub_223323374(v13, (uint64_t)qword_26AD63108);
  unint64_t v14 = sub_22342C1E0();
  os_log_type_t v15 = sub_22342C720();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    unint64_t v23 = v22;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_22342C280();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 56) = sub_22339BC14(v17, v19, (uint64_t *)&v23);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v14, v15, "Setting the following sync statistics on our CloudKit state: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v22, -1, -1);
    MEMORY[0x223CB62D0](v16, -1, -1);
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  id v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_22334A848(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 672) = a2;
  *(void *)(v2 + 664) = a1;
  return MEMORY[0x270FA2498](sub_22334A86C, 0, 0);
}

uint64_t sub_22334A86C()
{
  if (qword_26AD5F0D8 != -1) {
LABEL_35:
  }
    swift_once();
  uint64_t v1 = sub_22342C200();
  v0[85] = v1;
  v0[86] = sub_223323374(v1, (uint64_t)qword_26AD63108);
  uint64_t v2 = sub_22342C1E0();
  os_log_type_t v3 = sub_22342C720();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl(&dword_223317000, v2, v3, "Preparing sync statistics", v4, 2u);
    MEMORY[0x223CB62D0](v4, -1, -1);
  }

  if (qword_26AD5F100 != -1) {
    swift_once();
  }
  uint64_t v40 = v0;
  uint64_t v5 = qword_26D66BDE8;
  if (qword_26D66BDE8)
  {
    uint64_t v6 = (void *)MEMORY[0x263F8EE80];
    uint64_t v7 = &byte_26D66BDF8;
    uint64_t v0 = &unk_26AD63000;
    while (1)
    {
      char v10 = *v7++;
      char v9 = v10;
      id v11 = (id)qword_26AD63240;
      uint64_t v12 = sub_22342485C(v10, v11);
      char v14 = v13;

      if (v14) {
        uint64_t v15 = 0;
      }
      else {
        uint64_t v15 = v12;
      }
      id v16 = (id)qword_26AD63240;
      uint64_t v17 = sub_22342487C(v9, v16);
      char v19 = v18;

      if (v19) {
        uint64_t v17 = 0;
      }
      unint64_t v20 = sub_223421FB0(v9);
      uint64_t v22 = v21;
      sub_22331E640(&qword_26AD60540);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_22342F1E0;
      strcpy((char *)(v23 + 32), "total_records");
      *(_WORD *)(v23 + 46) = -4864;
      *(void *)(v23 + 48) = v15;
      strcpy((char *)(v23 + 56), "live_records");
      *(unsigned char *)(v23 + 69) = 0;
      *(_WORD *)(v23 + 70) = -5120;
      *(void *)(v23 + 72) = v17;
      unint64_t v24 = sub_2233C66DC(v23);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v27 = sub_22339C2E8(v20, v22);
      uint64_t v28 = v6[2];
      BOOL v29 = (v26 & 1) == 0;
      uint64_t v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      char v31 = v26;
      if (v6[3] >= v30)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v26) {
            goto LABEL_8;
          }
        }
        else
        {
          sub_2233CFFCC();
          if (v31) {
            goto LABEL_8;
          }
        }
      }
      else
      {
        sub_2233CDDB8(v30, isUniquelyReferenced_nonNull_native);
        unint64_t v32 = sub_22339C2E8(v20, v22);
        if ((v31 & 1) != (v33 & 1))
        {
          return sub_22342CFB0();
        }
        unint64_t v27 = v32;
        if (v31)
        {
LABEL_8:
          uint64_t v8 = v6[7];
          swift_bridgeObjectRelease();
          *(void *)(v8 + 8 * v27) = v24;
          goto LABEL_9;
        }
      }
      v6[(v27 >> 6) + 8] |= 1 << v27;
      uint64_t v34 = (unint64_t *)(v6[6] + 16 * v27);
      *uint64_t v34 = v20;
      v34[1] = v22;
      *(void *)(v6[7] + 8 * v27) = v24;
      uint64_t v35 = v6[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_34;
      }
      v6[2] = v37;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v5) {
        goto LABEL_27;
      }
    }
  }
  uint64_t v6 = (void *)MEMORY[0x263F8EE80];
LABEL_27:
  v40[87] = v6;
  uint64_t v38 = (void *)swift_task_alloc();
  v40[88] = v38;
  void *v38 = v40;
  v38[1] = sub_22334AC98;
  v38[16] = v40[83];
  v38[17] = v6;
  return MEMORY[0x270FA2498](sub_223349EA4, 0, 0);
}

uint64_t sub_22334AC98()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22334AD94, 0, 0);
}

uint64_t sub_22334AD94()
{
  uint64_t v16 = v0;
  sub_2233F9E5C(*(void *)(v0 + 696), v0 + 16);
  sub_22334B9A4(v0 + 16, v0 + 104);
  if ((*(unsigned char *)(v0 + 184) & 1) == 0)
  {
    long long v1 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 504) = v1;
    *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 168);
    long long v2 = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 472) = v2;
    os_log_type_t v3 = sub_22342C1E0();
    os_log_type_t v4 = sub_22342C720();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      uint64_t v15 = v6;
      long long v7 = *(_OWORD *)(v0 + 504);
      *(_OWORD *)(v0 + 568) = *(_OWORD *)(v0 + 488);
      *(_OWORD *)(v0 + 584) = v7;
      *(_OWORD *)(v0 + 600) = *(_OWORD *)(v0 + 520);
      long long v8 = *(_OWORD *)(v0 + 472);
      *(_OWORD *)(v0 + 536) = *(_OWORD *)(v0 + 456);
      *(_OWORD *)(v0 + 552) = v8;
      uint64_t v9 = sub_22342C360();
      *(void *)(v0 + 656) = sub_22339BC14(v9, v10, &v15);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v3, v4, "Has server counts: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v6, -1, -1);
      MEMORY[0x223CB62D0](v5, -1, -1);
    }
  }
  uint64_t v11 = *(void *)(v0 + 664);
  uint64_t v12 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore;
  *(void *)(v0 + 712) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore;
  uint64_t v13 = *sub_223321F60((void *)(v11 + v12), *(void *)(v11 + v12 + 24));
  return MEMORY[0x270FA2498](sub_22334AF94, v13, 0);
}

uint64_t sub_22334AF94()
{
  *(void *)(v0 + 720) = sub_2233B0A48();
  *(void *)(v0 + 728) = v1;
  if (v2) {
    os_log_type_t v3 = sub_22334B014;
  }
  else {
    os_log_type_t v3 = sub_22334B0FC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_22334B014()
{
  uint64_t v1 = sub_22334B9A4(v0 + 16, v0 + 192);
  if (*(unsigned char *)(v0 + 272))
  {
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 208);
  BOOL v7 = __OFADD__(v5, v6);
  uint64_t v8 = v5 + v6;
  if (v7) {
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(v0 + 224);
  BOOL v7 = __OFADD__(v8, v9);
  uint64_t v10 = v8 + v9;
  if (v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)(v0 + 240);
  BOOL v7 = __OFADD__(v10, v11);
  uint64_t v12 = v10 + v11;
  if (v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = *(void *)(v0 + 256);
  BOOL v7 = __OFADD__(v12, v13);
  uint64_t v4 = v12 + v13;
  if (v7)
  {
LABEL_15:
    __break(1u);
    return MEMORY[0x270FA2498](v1, v2, v3);
  }
  if (v4 + 0x4000000000000000 < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_8:
  *(void *)(v0 + 744) = v4;
  char v14 = (void *)(*(void *)(v0 + 664) + *(void *)(v0 + 712));
  uint64_t v2 = *sub_223321F60(v14, v14[3]);
  uint64_t v1 = (uint64_t)sub_22334B674;
  uint64_t v3 = 0;
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_22334B0FC()
{
  uint64_t v1 = sub_22334B9A4(v0 + 16, v0 + 280);
  if (*(unsigned char *)(v0 + 360) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 728);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 296);
  BOOL v7 = __OFADD__(v5, v6);
  uint64_t v8 = v5 + v6;
  if (v7)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)(v0 + 312);
  BOOL v7 = __OFADD__(v8, v9);
  uint64_t v10 = v8 + v9;
  if (v7)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v11 = *(void *)(v0 + 328);
  BOOL v7 = __OFADD__(v10, v11);
  uint64_t v12 = v10 + v11;
  if (v7)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v13 = *(void *)(v0 + 344);
  BOOL v7 = __OFADD__(v12, v13);
  uint64_t v14 = v12 + v13;
  *(void *)(v0 + 736) = v14;
  if (v7)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = *(void *)(v0 + 728);
  if (v4 < v14)
  {
    if (v14 + 0x4000000000000000 >= 0)
    {
      uint64_t v15 = (void *)(*(void *)(v0 + 664) + *(void *)(v0 + 712));
      uint64_t v2 = *sub_223321F60(v15, v15[3]);
      uint64_t v1 = (uint64_t)sub_22334B3D8;
      goto LABEL_23;
    }
LABEL_34:
    __break(1u);
    return MEMORY[0x270FA2498](v1, v2, v3);
  }
LABEL_10:
  uint64_t v16 = *(void *)(v0 + 720);
  *(void *)(v0 + 760) = v4;
  *(void *)(v0 + 752) = v16;
  if (qword_26AD60200 != -1) {
    swift_once();
  }
  uint64_t v17 = v0 + 360;
  sub_223323374(*(void *)(v0 + 680), (uint64_t)qword_26AD63318);
  char v18 = sub_22342C1E0();
  os_log_type_t v19 = sub_22342C720();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134218240;
    *(void *)(v0 + 640) = v16;
    sub_22342CA10();
    *(_WORD *)(v20 + 12) = 2048;
    *(void *)(v0 + 648) = v4;
    uint64_t v17 = v0 + 360;
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v18, v19, "Starting sync (totalProcessed: %lld, totalDownloads: %lld)", (uint8_t *)v20, 0x16u);
    MEMORY[0x223CB62D0](v20, -1, -1);
  }

  uint64_t v1 = sub_22334B9A4(v0 + 16, v0 + 368);
  if (*(unsigned char *)(v17 + 88)) {
    goto LABEL_21;
  }
  uint64_t v21 = *(void *)(v0 + 368);
  uint64_t v22 = *(void *)(v0 + 384);
  BOOL v7 = __OFADD__(v21, v22);
  uint64_t v23 = v21 + v22;
  if (v7) {
    goto LABEL_30;
  }
  uint64_t v24 = *(void *)(v0 + 400);
  BOOL v7 = __OFADD__(v23, v24);
  uint64_t v25 = v23 + v24;
  if (v7)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v26 = *(void *)(v0 + 416);
  BOOL v7 = __OFADD__(v25, v26);
  uint64_t v27 = v25 + v26;
  if (v7)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v28 = *(void *)(v0 + 432);
  BOOL v7 = __OFADD__(v27, v28);
  uint64_t v29 = v27 + v28;
  if (v7)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v29 < 1)
  {
LABEL_21:
    char v30 = 0;
    goto LABEL_22;
  }
  char v30 = 1;
LABEL_22:
  *(unsigned char *)(v0 + 97) = v30;
  uint64_t v31 = *(void *)(*(void *)(v0 + 664) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
  *(void *)(v0 + 768) = v31;
  swift_retain();
  uint64_t v1 = (uint64_t)sub_22334B904;
  uint64_t v2 = v31;
LABEL_23:
  uint64_t v3 = 0;
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_22334B3D8()
{
  sub_2233FBC70(*(void *)(v0 + 720), 2 * *(void *)(v0 + 736), 0);
  return MEMORY[0x270FA2498](sub_22334B44C, 0, 0);
}

uint64_t sub_22334B44C()
{
  uint64_t v1 = *(void *)(v0 + 720);
  uint64_t v2 = 2 * *(void *)(v0 + 736);
  *(void *)(v0 + 760) = v2;
  *(void *)(v0 + 752) = v1;
  if (qword_26AD60200 != -1) {
    swift_once();
  }
  sub_223323374(*(void *)(v0 + 680), (uint64_t)qword_26AD63318);
  uint64_t v3 = sub_22342C1E0();
  os_log_type_t v4 = sub_22342C720();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134218240;
    *(void *)(v0 + 640) = v1;
    sub_22342CA10();
    *(_WORD *)(v5 + 12) = 2048;
    *(void *)(v0 + 648) = v2;
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v3, v4, "Starting sync (totalProcessed: %lld, totalDownloads: %lld)", (uint8_t *)v5, 0x16u);
    MEMORY[0x223CB62D0](v5, -1, -1);
  }

  uint64_t v6 = sub_22334B9A4(v0 + 16, v0 + 368);
  if (*(unsigned char *)(v0 + 448)) {
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(v0 + 368);
  uint64_t v10 = *(void *)(v0 + 384);
  BOOL v11 = __OFADD__(v9, v10);
  uint64_t v12 = v9 + v10;
  if (v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v0 + 400);
  BOOL v11 = __OFADD__(v12, v13);
  uint64_t v14 = v12 + v13;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(v0 + 416);
  BOOL v11 = __OFADD__(v14, v15);
  uint64_t v16 = v14 + v15;
  if (v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v17 = *(void *)(v0 + 432);
  BOOL v11 = __OFADD__(v16, v17);
  uint64_t v18 = v16 + v17;
  if (v11)
  {
LABEL_19:
    __break(1u);
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
  if (v18 >= 1)
  {
    char v19 = 1;
    goto LABEL_13;
  }
LABEL_12:
  char v19 = 0;
LABEL_13:
  *(unsigned char *)(v0 + 97) = v19;
  uint64_t v20 = *(void *)(*(void *)(v0 + 664) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
  *(void *)(v0 + 768) = v20;
  swift_retain();
  uint64_t v6 = (uint64_t)sub_22334B904;
  uint64_t v7 = v20;
  uint64_t v8 = 0;
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_22334B674()
{
  sub_2233FBC70(0, 2 * *(void *)(v0 + 744), 0);
  return MEMORY[0x270FA2498](sub_22334B6E8, 0, 0);
}

uint64_t sub_22334B6E8()
{
  uint64_t v1 = 2 * *(void *)(v0 + 744);
  *(void *)(v0 + 760) = v1;
  *(void *)(v0 + 752) = 0;
  if (qword_26AD60200 != -1) {
    swift_once();
  }
  sub_223323374(*(void *)(v0 + 680), (uint64_t)qword_26AD63318);
  uint64_t v2 = sub_22342C1E0();
  os_log_type_t v3 = sub_22342C720();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134218240;
    *(void *)(v0 + 640) = 0;
    sub_22342CA10();
    *(_WORD *)(v4 + 12) = 2048;
    *(void *)(v0 + 648) = v1;
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v2, v3, "Starting sync (totalProcessed: %lld, totalDownloads: %lld)", (uint8_t *)v4, 0x16u);
    MEMORY[0x223CB62D0](v4, -1, -1);
  }

  uint64_t v5 = sub_22334B9A4(v0 + 16, v0 + 368);
  if (*(unsigned char *)(v0 + 448)) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v9 = *(void *)(v0 + 384);
  BOOL v10 = __OFADD__(v8, v9);
  uint64_t v11 = v8 + v9;
  if (v10)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v0 + 400);
  BOOL v10 = __OFADD__(v11, v12);
  uint64_t v13 = v11 + v12;
  if (v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v14 = *(void *)(v0 + 416);
  BOOL v10 = __OFADD__(v13, v14);
  uint64_t v15 = v13 + v14;
  if (v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v16 = *(void *)(v0 + 432);
  BOOL v10 = __OFADD__(v15, v16);
  uint64_t v17 = v15 + v16;
  if (v10)
  {
LABEL_19:
    __break(1u);
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  if (v17 >= 1)
  {
    char v18 = 1;
    goto LABEL_13;
  }
LABEL_12:
  char v18 = 0;
LABEL_13:
  *(unsigned char *)(v0 + 97) = v18;
  uint64_t v19 = *(void *)(*(void *)(v0 + 664) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
  *(void *)(v0 + 768) = v19;
  swift_retain();
  uint64_t v5 = (uint64_t)sub_22334B904;
  uint64_t v6 = v19;
  uint64_t v7 = 0;
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_22334B904()
{
  uint64_t v1 = *(void *)(v0 + 768);
  char v2 = *(unsigned char *)(v0 + 97);
  uint64_t v3 = *(void *)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 752);
  swift_beginAccess();
  *(void *)(v1 + 120) = v4;
  *(void *)(v1 + 128) = v3;
  *(unsigned char *)(v1 + 136) = v2;
  swift_release();
  uint64_t v5 = *(uint64_t (**)(void, void))(v0 + 8);
  return v5(0, 0);
}

uint64_t sub_22334B9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_26AD5F8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_22334BA0C(void *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v55 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v55;
        uint64_t v56 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v56;
        uint64_t v57 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v57;
        uint64_t v58 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v58;
        uint64_t v59 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v59;
        uint64_t v60 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v60;
        uint64_t v61 = type metadata accessor for MessageRecord();
        uint64_t v62 = *(int *)(v61 + 40);
        __dsta = (char *)a1 + v62;
        v532 = (int *)v61;
        v553 = &a2[v62];
        uint64_t v63 = sub_22342C130();
        uint64_t v560 = *(void *)(v63 - 8);
        id v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v560 + 48);
        uint64_t v65 = v63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v64(v553, 1, v65))
        {
          uint64_t v66 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dsta, v553, *(void *)(*(void *)(v66 - 8) + 64));
          uint64_t v67 = v560;
        }
        else
        {
          uint64_t v67 = v560;
          (*(void (**)(char *, char *, uint64_t))(v560 + 16))(__dsta, v553, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v560 + 56))(__dsta, 0, 1, v65);
        }
        id v234 = v532;
        uint64_t v239 = v532[11];
        uint64_t v240 = (char *)a1 + v239;
        uint64_t v241 = &a2[v239];
        if (v64(&a2[v239], 1, v65))
        {
          uint64_t v242 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v240, v241, *(void *)(*(void *)(v242 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v240, v241, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v240, 0, 1, v65);
        }
        uint64_t v259 = v532[12];
        v260 = (void *)((char *)a1 + v259);
        v261 = &a2[v259];
        uint64_t v262 = *((void *)v261 + 1);
        void *v260 = *(void *)v261;
        v260[1] = v262;
        *((unsigned char *)a1 + v532[13]) = a2[v532[13]];
        uint64_t v263 = v532[14];
        v264 = (char *)a1 + v263;
        v265 = &a2[v263];
        swift_bridgeObjectRetain();
        if (v64(v265, 1, v65))
        {
          uint64_t v266 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v264, v265, *(void *)(*(void *)(v266 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v264, v265, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v264, 0, 1, v65);
        }
        uint64_t v295 = v532[15];
        v296 = (char *)a1 + v295;
        v297 = &a2[v295];
        if (v64(&a2[v295], 1, v65))
        {
          uint64_t v298 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v296, v297, *(void *)(*(void *)(v298 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v296, v297, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v296, 0, 1, v65);
        }
        uint64_t v374 = v532[16];
        v375 = (char *)a1 + v374;
        v376 = &a2[v374];
        if (v64(&a2[v374], 1, v65))
        {
          uint64_t v377 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v375, v376, *(void *)(*(void *)(v377 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v375, v376, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v375, 0, 1, v65);
        }
        uint64_t v382 = v532[17];
        v383 = (char *)a1 + v382;
        v384 = &a2[v382];
        if (v64(&a2[v382], 1, v65))
        {
          uint64_t v385 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v383, v384, *(void *)(*(void *)(v385 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v383, v384, v65);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v383, 0, 1, v65);
        }
        uint64_t v393 = v532[18];
        v394 = (char *)a1 + v393;
        v395 = &a2[v393];
        uint64_t v396 = *(void *)&a2[v393 + 8];
        uint64_t v548 = v65;
        v539 = v64;
        if (v396 == 1)
        {
          long long v397 = *((_OWORD *)v395 + 1);
          *(_OWORD *)v394 = *(_OWORD *)v395;
          *((_OWORD *)v394 + 1) = v397;
          *((void *)v394 + 4) = *((void *)v395 + 4);
        }
        else
        {
          *(void *)v394 = *(void *)v395;
          *((void *)v394 + 1) = v396;
          v398 = v395 + 16;
          unint64_t v399 = *((void *)v395 + 3);
          swift_bridgeObjectRetain();
          if (v399 >> 60 == 15)
          {
            *((_OWORD *)v394 + 1) = *v398;
          }
          else
          {
            uint64_t v460 = *(void *)v398;
            sub_22331E684(v460, v399);
            *((void *)v394 + 2) = v460;
            *((void *)v394 + 3) = v399;
          }
          v461 = (void *)*((void *)v395 + 4);
          *((void *)v394 + 4) = v461;
          id v462 = v461;
        }
        uint64_t v463 = v532[19];
        v464 = (char *)a1 + v463;
        v465 = &a2[v463];
        *(void *)v464 = *(void *)v465;
        v464[8] = v465[8];
        uint64_t v466 = v532[20];
        v467 = (char *)a1 + v466;
        v468 = &a2[v466];
        v467[8] = v468[8];
        *(void *)v467 = *(void *)v468;
        uint64_t v469 = v532[21];
        v470 = (char *)a1 + v469;
        v471 = &a2[v469];
        *(void *)v470 = *(void *)v471;
        v470[8] = v471[8];
        uint64_t v472 = v532[22];
        v473 = (void *)((char *)a1 + v472);
        v474 = &a2[v472];
        uint64_t v475 = *((void *)v474 + 1);
        void *v473 = *(void *)v474;
        v473[1] = v475;
        uint64_t v476 = v532[23];
        v477 = (char *)a1 + v476;
        v478 = &a2[v476];
        *(void *)v477 = *(void *)v478;
        v477[8] = v478[8];
        uint64_t v479 = v532[24];
        v480 = (void *)((char *)a1 + v479);
        v481 = &a2[v479];
        uint64_t v482 = *((void *)v481 + 1);
        void *v480 = *(void *)v481;
        v480[1] = v482;
        uint64_t v483 = v532[25];
        v484 = (void *)((char *)a1 + v483);
        v485 = &a2[v483];
        uint64_t v486 = *((void *)v485 + 1);
        void *v484 = *(void *)v485;
        v484[1] = v486;
        uint64_t v487 = v532[26];
        v488 = (char *)a1 + v487;
        v489 = &a2[v487];
        *(void *)v488 = *(void *)v489;
        v488[8] = v489[8];
        uint64_t v490 = v532[27];
        v491 = (void *)((char *)a1 + v490);
        v492 = &a2[v490];
        uint64_t v493 = *((void *)v492 + 1);
        void *v491 = *(void *)v492;
        v491[1] = v493;
        uint64_t v494 = v532[28];
        v495 = (void *)((char *)a1 + v494);
        v496 = &a2[v494];
        uint64_t v497 = *((void *)v496 + 1);
        void *v495 = *(void *)v496;
        v495[1] = v497;
        uint64_t v498 = v532[29];
        v499 = (char *)a1 + v498;
        v500 = (uint64_t *)&a2[v498];
        unint64_t v501 = *(void *)&a2[v498 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v501 >> 60 == 15)
        {
          *(_OWORD *)v499 = *(_OWORD *)v500;
        }
        else
        {
          uint64_t v502 = *v500;
          sub_22331E684(*v500, v501);
          *(void *)v499 = v502;
          *((void *)v499 + 1) = v501;
        }
        uint64_t v503 = v532[30];
        v504 = (void *)((char *)a1 + v503);
        v505 = &a2[v503];
        uint64_t v506 = *((void *)v505 + 1);
        void *v504 = *(void *)v505;
        v504[1] = v506;
        uint64_t v507 = v532[31];
        v508 = (char *)a1 + v507;
        v509 = &a2[v507];
        swift_bridgeObjectRetain();
        if (v539(v509, 1, v548))
        {
          uint64_t v510 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v508, v509, *(void *)(*(void *)(v510 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v560 + 16))(v508, v509, v548);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v560 + 56))(v508, 0, 1, v548);
        }
        uint64_t v511 = v532[32];
        v512 = (void *)((char *)a1 + v511);
        v513 = &a2[v511];
        uint64_t v514 = *((void *)v513 + 1);
        void *v512 = *(void *)v513;
        v512[1] = v514;
        *((unsigned char *)a1 + v532[33]) = a2[v532[33]];
        uint64_t v515 = v532[34];
        v456 = (char *)a1 + v515;
        v457 = &a2[v515];
        v458 = *(void **)&a2[v515];
        swift_bridgeObjectRetain();
        if (v458 != (void *)1) {
          goto LABEL_145;
        }
        long long v516 = *((_OWORD *)v457 + 1);
        *(_OWORD *)v456 = *(_OWORD *)v457;
        *((_OWORD *)v456 + 1) = v516;
        goto LABEL_146;
      case 2u:
        uint64_t v19 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v19;
        uint64_t v20 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v20;
        uint64_t v21 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v21;
        uint64_t v22 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v22;
        uint64_t v23 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v23;
        uint64_t v24 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v24;
        uint64_t v25 = type metadata accessor for ActionRecord();
        uint64_t v26 = *(int *)(v25 + 40);
        v550 = (char *)a1 + v26;
        v557 = (int *)v25;
        v533 = &a2[v26];
        uint64_t v27 = sub_22342C130();
        uint64_t v542 = *(void *)(v27 - 8);
        uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v542 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28(v533, 1, v27))
        {
          uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v550, v533, *(void *)(*(void *)(v29 - 8) + 64));
          uint64_t v30 = v542;
        }
        else
        {
          uint64_t v30 = v542;
          (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v550, v533, v27);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v550, 0, 1, v27);
        }
        id v92 = v557;
        uint64_t v93 = v557[11];
        char v94 = (char *)a1 + v93;
        char v95 = &a2[v93];
        if (v28(&a2[v93], 1, v27))
        {
          uint64_t v96 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v94, v95, v27);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v94, 0, 1, v27);
        }
        uint64_t v105 = v557[12];
        char v106 = (void *)((char *)a1 + v105);
        unint64_t v107 = &a2[v105];
        uint64_t v108 = *((void *)v107 + 1);
        *char v106 = *(void *)v107;
        v106[1] = v108;
        uint64_t v109 = v557[13];
        uint64_t v110 = (void *)((char *)a1 + v109);
        char v111 = &a2[v109];
        uint64_t v112 = *((void *)v111 + 1);
        *uint64_t v110 = *(void *)v111;
        v110[1] = v112;
        *((unsigned char *)a1 + v557[14]) = a2[v557[14]];
        *((unsigned char *)a1 + v557[15]) = a2[v557[15]];
        uint64_t v113 = v557[16];
        long long v114 = (char *)a1 + v113;
        long long v115 = &a2[v113];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28(v115, 1, v27))
        {
          uint64_t v116 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v114, v115, v27);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v114, 0, 1, v27);
        }
        uint64_t v141 = v557[17];
        unint64_t v142 = (void *)((char *)a1 + v141);
        int64_t v143 = &a2[v141];
        uint64_t v144 = *((void *)v143 + 1);
        void *v142 = *(void *)v143;
        v142[1] = v144;
        uint64_t v145 = v557[18];
        uint64_t v146 = (void *)((char *)a1 + v145);
        uint64_t v147 = &a2[v145];
        uint64_t v148 = *((void *)v147 + 1);
        void *v146 = *(void *)v147;
        v146[1] = v148;
        uint64_t v149 = v557[19];
        id v150 = (void *)((char *)a1 + v149);
        uint64_t v151 = &a2[v149];
        uint64_t v152 = *((void *)v151 + 1);
        *id v150 = *(void *)v151;
        v150[1] = v152;
        uint64_t v153 = v557[20];
        char v154 = (char *)a1 + v153;
        unint64_t v155 = &a2[v153];
        uint64_t v156 = *(void **)&a2[v153 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v156 == (void *)1)
        {
          long long v157 = *((_OWORD *)v155 + 1);
          *(_OWORD *)char v154 = *(_OWORD *)v155;
          *((_OWORD *)v154 + 1) = v157;
          *((_OWORD *)v154 + 2) = *((_OWORD *)v155 + 2);
          *((void *)v154 + 6) = *((void *)v155 + 6);
        }
        else
        {
          *char v154 = *v155;
          uint64_t v158 = (void *)*((void *)v155 + 2);
          char v159 = (void *)*((void *)v155 + 3);
          *((void *)v154 + 1) = v156;
          *((void *)v154 + 2) = v158;
          unint64_t v160 = (void *)*((void *)v155 + 4);
          char v161 = (void *)*((void *)v155 + 5);
          *((void *)v154 + 3) = v159;
          *((void *)v154 + 4) = v160;
          v162 = (void *)*((void *)v155 + 6);
          *((void *)v154 + 5) = v161;
          *((void *)v154 + 6) = v162;
          id v163 = v156;
          id v164 = v158;
          id v165 = v159;
          id v166 = v160;
          id v167 = v161;
          id v168 = v162;
        }
        uint64_t v169 = v557[21];
        char v170 = (char *)a1 + v169;
        uint64_t v171 = &a2[v169];
        uint64_t v172 = *(void **)v171;
        if (*(void *)v171 != 1) {
          goto LABEL_100;
        }
        long long v173 = *((_OWORD *)v171 + 1);
        *(_OWORD *)char v170 = *(_OWORD *)v171;
        *((_OWORD *)v170 + 1) = v173;
        goto LABEL_101;
      case 3u:
        uint64_t v31 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v31;
        uint64_t v32 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v32;
        uint64_t v33 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v33;
        uint64_t v34 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v34;
        uint64_t v35 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v35;
        uint64_t v36 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v36;
        uint64_t v37 = type metadata accessor for ActionRecord();
        uint64_t v38 = *(int *)(v37 + 40);
        v551 = (char *)a1 + v38;
        v558 = (int *)v37;
        v534 = &a2[v38];
        uint64_t v39 = sub_22342C130();
        uint64_t v543 = *(void *)(v39 - 8);
        uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v543 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v40(v534, 1, v39))
        {
          uint64_t v41 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v551, v534, *(void *)(*(void *)(v41 - 8) + 64));
          uint64_t v42 = v543;
        }
        else
        {
          uint64_t v42 = v543;
          (*(void (**)(char *, char *, uint64_t))(v543 + 16))(v551, v534, v39);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v543 + 56))(v551, 0, 1, v39);
        }
        id v92 = v558;
        uint64_t v97 = v558[11];
        BOOL v98 = (char *)a1 + v97;
        uint64_t v99 = &a2[v97];
        if (v40(&a2[v97], 1, v39))
        {
          uint64_t v100 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v98, v99, v39);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v98, 0, 1, v39);
        }
        uint64_t v117 = v558[12];
        BOOL v118 = (void *)((char *)a1 + v117);
        uint64_t v119 = &a2[v117];
        uint64_t v120 = *((void *)v119 + 1);
        *BOOL v118 = *(void *)v119;
        v118[1] = v120;
        uint64_t v121 = v558[13];
        uint64_t v122 = (void *)((char *)a1 + v121);
        unint64_t v123 = &a2[v121];
        uint64_t v124 = *((void *)v123 + 1);
        *uint64_t v122 = *(void *)v123;
        v122[1] = v124;
        *((unsigned char *)a1 + v558[14]) = a2[v558[14]];
        *((unsigned char *)a1 + v558[15]) = a2[v558[15]];
        uint64_t v125 = v558[16];
        uint64_t v126 = (char *)a1 + v125;
        uint64_t v127 = &a2[v125];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v40(v127, 1, v39))
        {
          uint64_t v128 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v126, v127, v39);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v126, 0, 1, v39);
        }
        uint64_t v174 = v558[17];
        uint64_t v175 = (void *)((char *)a1 + v174);
        uint64_t v176 = &a2[v174];
        uint64_t v177 = *((void *)v176 + 1);
        *uint64_t v175 = *(void *)v176;
        v175[1] = v177;
        uint64_t v178 = v558[18];
        uint64_t v179 = (void *)((char *)a1 + v178);
        uint64_t v180 = &a2[v178];
        uint64_t v181 = *((void *)v180 + 1);
        *uint64_t v179 = *(void *)v180;
        v179[1] = v181;
        uint64_t v182 = v558[19];
        unint64_t v183 = (void *)((char *)a1 + v182);
        uint64_t v184 = &a2[v182];
        uint64_t v185 = *((void *)v184 + 1);
        *unint64_t v183 = *(void *)v184;
        v183[1] = v185;
        uint64_t v186 = v558[20];
        int64_t v187 = (char *)a1 + v186;
        uint64_t v188 = &a2[v186];
        uint64_t v189 = *(void **)&a2[v186 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v189 == (void *)1)
        {
          long long v190 = *((_OWORD *)v188 + 1);
          *(_OWORD *)int64_t v187 = *(_OWORD *)v188;
          *((_OWORD *)v187 + 1) = v190;
          *((_OWORD *)v187 + 2) = *((_OWORD *)v188 + 2);
          *((void *)v187 + 6) = *((void *)v188 + 6);
        }
        else
        {
          *int64_t v187 = *v188;
          unint64_t v191 = (void *)*((void *)v188 + 2);
          unint64_t v192 = (void *)*((void *)v188 + 3);
          *((void *)v187 + 1) = v189;
          *((void *)v187 + 2) = v191;
          v193 = (void *)*((void *)v188 + 4);
          v194 = (void *)*((void *)v188 + 5);
          *((void *)v187 + 3) = v192;
          *((void *)v187 + 4) = v193;
          int64_t v195 = (void *)*((void *)v188 + 6);
          *((void *)v187 + 5) = v194;
          *((void *)v187 + 6) = v195;
          id v196 = v189;
          id v197 = v191;
          id v198 = v192;
          id v199 = v193;
          id v200 = v194;
          id v201 = v195;
        }
        uint64_t v202 = v558[21];
        char v170 = (char *)a1 + v202;
        uint64_t v171 = &a2[v202];
        uint64_t v172 = *(void **)v171;
        if (*(void *)v171 != 1) {
          goto LABEL_100;
        }
        long long v203 = *((_OWORD *)v171 + 1);
        *(_OWORD *)char v170 = *(_OWORD *)v171;
        *((_OWORD *)v170 + 1) = v203;
        goto LABEL_101;
      case 4u:
        uint64_t v43 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v43;
        uint64_t v44 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v44;
        uint64_t v45 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v45;
        uint64_t v46 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v46;
        uint64_t v47 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v47;
        uint64_t v48 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v48;
        uint64_t v49 = type metadata accessor for ActionRecord();
        uint64_t v50 = *(int *)(v49 + 40);
        v552 = (char *)a1 + v50;
        v559 = (int *)v49;
        v535 = &a2[v50];
        uint64_t v51 = sub_22342C130();
        uint64_t v544 = *(void *)(v51 - 8);
        id v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v544 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v52(v535, 1, v51))
        {
          uint64_t v53 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v552, v535, *(void *)(*(void *)(v53 - 8) + 64));
          uint64_t v54 = v544;
        }
        else
        {
          uint64_t v54 = v544;
          (*(void (**)(char *, char *, uint64_t))(v544 + 16))(v552, v535, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v544 + 56))(v552, 0, 1, v51);
        }
        id v92 = v559;
        uint64_t v101 = v559[11];
        char v102 = (char *)a1 + v101;
        uint64_t v103 = &a2[v101];
        if (v52(&a2[v101], 1, v51))
        {
          uint64_t v104 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v102, v103, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v102, 0, 1, v51);
        }
        uint64_t v129 = v559[12];
        unint64_t v130 = (void *)((char *)a1 + v129);
        int64_t v131 = &a2[v129];
        uint64_t v132 = *((void *)v131 + 1);
        *unint64_t v130 = *(void *)v131;
        v130[1] = v132;
        uint64_t v133 = v559[13];
        uint64_t v134 = (void *)((char *)a1 + v133);
        unint64_t v135 = &a2[v133];
        uint64_t v136 = *((void *)v135 + 1);
        *uint64_t v134 = *(void *)v135;
        v134[1] = v136;
        *((unsigned char *)a1 + v559[14]) = a2[v559[14]];
        *((unsigned char *)a1 + v559[15]) = a2[v559[15]];
        uint64_t v137 = v559[16];
        uint64_t v138 = (char *)a1 + v137;
        uint64_t v139 = &a2[v137];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v52(v139, 1, v51))
        {
          uint64_t v140 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v138, v139, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v138, 0, 1, v51);
        }
        uint64_t v204 = v559[17];
        uint64_t v205 = (void *)((char *)a1 + v204);
        v206 = &a2[v204];
        uint64_t v207 = *((void *)v206 + 1);
        *uint64_t v205 = *(void *)v206;
        v205[1] = v207;
        uint64_t v208 = v559[18];
        unint64_t v209 = (void *)((char *)a1 + v208);
        uint64_t v210 = &a2[v208];
        uint64_t v211 = *((void *)v210 + 1);
        *unint64_t v209 = *(void *)v210;
        v209[1] = v211;
        uint64_t v212 = v559[19];
        char v213 = (void *)((char *)a1 + v212);
        unint64_t v214 = &a2[v212];
        uint64_t v215 = *((void *)v214 + 1);
        *char v213 = *(void *)v214;
        v213[1] = v215;
        uint64_t v216 = v559[20];
        char v217 = (char *)a1 + v216;
        char v218 = &a2[v216];
        uint64_t v219 = *(void **)&a2[v216 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v219 == (void *)1)
        {
          long long v220 = *((_OWORD *)v218 + 1);
          *(_OWORD *)char v217 = *(_OWORD *)v218;
          *((_OWORD *)v217 + 1) = v220;
          *((_OWORD *)v217 + 2) = *((_OWORD *)v218 + 2);
          *((void *)v217 + 6) = *((void *)v218 + 6);
        }
        else
        {
          *char v217 = *v218;
          uint64_t v221 = (void *)*((void *)v218 + 2);
          char v222 = (void *)*((void *)v218 + 3);
          *((void *)v217 + 1) = v219;
          *((void *)v217 + 2) = v221;
          unint64_t v223 = (void *)*((void *)v218 + 4);
          char v224 = (void *)*((void *)v218 + 5);
          *((void *)v217 + 3) = v222;
          *((void *)v217 + 4) = v223;
          v225 = (void *)*((void *)v218 + 6);
          *((void *)v217 + 5) = v224;
          *((void *)v217 + 6) = v225;
          id v226 = v219;
          id v227 = v221;
          id v228 = v222;
          id v229 = v223;
          id v230 = v224;
          id v231 = v225;
        }
        uint64_t v232 = v559[21];
        char v170 = (char *)a1 + v232;
        uint64_t v171 = &a2[v232];
        uint64_t v172 = *(void **)v171;
        if (*(void *)v171 != 1) {
          goto LABEL_100;
        }
        long long v233 = *((_OWORD *)v171 + 1);
        *(_OWORD *)char v170 = *(_OWORD *)v171;
        *((_OWORD *)v170 + 1) = v233;
        goto LABEL_101;
      case 5u:
        uint64_t v68 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v68;
        uint64_t v69 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v69;
        uint64_t v70 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v70;
        uint64_t v71 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v71;
        uint64_t v72 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v72;
        uint64_t v73 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v73;
        uint64_t v74 = type metadata accessor for ActionRecord();
        uint64_t v75 = *(int *)(v74 + 40);
        v540 = (char *)a1 + v75;
        v545 = (int *)v74;
        v554 = &a2[v75];
        uint64_t v76 = sub_22342C130();
        uint64_t v536 = *(void *)(v76 - 8);
        uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v536 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v77(v554, 1, v76))
        {
          uint64_t v78 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v540, v554, *(void *)(*(void *)(v78 - 8) + 64));
          uint64_t v79 = v536;
        }
        else
        {
          uint64_t v79 = v536;
          (*(void (**)(char *, char *, uint64_t))(v536 + 16))(v540, v554, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v536 + 56))(v540, 0, 1, v76);
        }
        id v92 = v545;
        uint64_t v243 = v545[11];
        unint64_t v244 = (char *)a1 + v243;
        id v245 = &a2[v243];
        if (v77(&a2[v243], 1, v76))
        {
          uint64_t v246 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v244, v245, *(void *)(*(void *)(v246 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v244, v245, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v244, 0, 1, v76);
        }
        uint64_t v267 = v545[12];
        v268 = (void *)((char *)a1 + v267);
        v269 = &a2[v267];
        uint64_t v270 = *((void *)v269 + 1);
        void *v268 = *(void *)v269;
        v268[1] = v270;
        uint64_t v271 = v545[13];
        v272 = (void *)((char *)a1 + v271);
        v273 = &a2[v271];
        uint64_t v274 = *((void *)v273 + 1);
        void *v272 = *(void *)v273;
        v272[1] = v274;
        *((unsigned char *)a1 + v545[14]) = a2[v545[14]];
        *((unsigned char *)a1 + v545[15]) = a2[v545[15]];
        uint64_t v275 = v545[16];
        v276 = (char *)a1 + v275;
        v277 = &a2[v275];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v77(v277, 1, v76))
        {
          uint64_t v278 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v276, v277, *(void *)(*(void *)(v278 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v276, v277, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v276, 0, 1, v76);
        }
        uint64_t v299 = v545[17];
        v300 = (void *)((char *)a1 + v299);
        v301 = &a2[v299];
        uint64_t v302 = *((void *)v301 + 1);
        void *v300 = *(void *)v301;
        v300[1] = v302;
        uint64_t v303 = v545[18];
        v304 = (void *)((char *)a1 + v303);
        v305 = &a2[v303];
        uint64_t v306 = *((void *)v305 + 1);
        void *v304 = *(void *)v305;
        v304[1] = v306;
        uint64_t v307 = v545[19];
        v308 = (void *)((char *)a1 + v307);
        v309 = &a2[v307];
        uint64_t v310 = *((void *)v309 + 1);
        void *v308 = *(void *)v309;
        v308[1] = v310;
        uint64_t v311 = v545[20];
        v312 = (char *)a1 + v311;
        v313 = &a2[v311];
        v314 = *(void **)&a2[v311 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v314 == (void *)1)
        {
          long long v315 = *((_OWORD *)v313 + 1);
          *(_OWORD *)v312 = *(_OWORD *)v313;
          *((_OWORD *)v312 + 1) = v315;
          *((_OWORD *)v312 + 2) = *((_OWORD *)v313 + 2);
          *((void *)v312 + 6) = *((void *)v313 + 6);
        }
        else
        {
          char *v312 = *v313;
          v316 = (void *)*((void *)v313 + 2);
          v317 = (void *)*((void *)v313 + 3);
          *((void *)v312 + 1) = v314;
          *((void *)v312 + 2) = v316;
          v318 = (void *)*((void *)v313 + 4);
          v319 = (void *)*((void *)v313 + 5);
          *((void *)v312 + 3) = v317;
          *((void *)v312 + 4) = v318;
          v320 = (void *)*((void *)v313 + 6);
          *((void *)v312 + 5) = v319;
          *((void *)v312 + 6) = v320;
          id v321 = v314;
          id v322 = v316;
          id v323 = v317;
          id v324 = v318;
          id v325 = v319;
          id v326 = v320;
        }
        uint64_t v327 = v545[21];
        char v170 = (char *)a1 + v327;
        uint64_t v171 = &a2[v327];
        uint64_t v172 = *(void **)v171;
        if (*(void *)v171 != 1) {
          goto LABEL_100;
        }
        long long v328 = *((_OWORD *)v171 + 1);
        *(_OWORD *)char v170 = *(_OWORD *)v171;
        *((_OWORD *)v170 + 1) = v328;
        goto LABEL_101;
      case 6u:
        uint64_t v80 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v80;
        uint64_t v81 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v81;
        uint64_t v82 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v82;
        uint64_t v83 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v83;
        uint64_t v84 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v84;
        uint64_t v85 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v85;
        uint64_t v86 = type metadata accessor for ActionRecord();
        uint64_t v87 = *(int *)(v86 + 40);
        v541 = (char *)a1 + v87;
        v546 = (int *)v86;
        v555 = &a2[v87];
        uint64_t v88 = sub_22342C130();
        uint64_t v537 = *(void *)(v88 - 8);
        uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v537 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89(v555, 1, v88))
        {
          uint64_t v90 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v541, v555, *(void *)(*(void *)(v90 - 8) + 64));
          uint64_t v91 = v537;
        }
        else
        {
          uint64_t v91 = v537;
          (*(void (**)(char *, char *, uint64_t))(v537 + 16))(v541, v555, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v537 + 56))(v541, 0, 1, v88);
        }
        id v92 = v546;
        uint64_t v247 = v546[11];
        uint64_t v248 = (char *)a1 + v247;
        int64_t v249 = &a2[v247];
        if (v89(&a2[v247], 1, v88))
        {
          uint64_t v250 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v248, v249, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v248, 0, 1, v88);
        }
        uint64_t v279 = v546[12];
        v280 = (void *)((char *)a1 + v279);
        v281 = &a2[v279];
        uint64_t v282 = *((void *)v281 + 1);
        void *v280 = *(void *)v281;
        v280[1] = v282;
        uint64_t v283 = v546[13];
        v284 = (void *)((char *)a1 + v283);
        v285 = &a2[v283];
        uint64_t v286 = *((void *)v285 + 1);
        void *v284 = *(void *)v285;
        v284[1] = v286;
        *((unsigned char *)a1 + v546[14]) = a2[v546[14]];
        *((unsigned char *)a1 + v546[15]) = a2[v546[15]];
        uint64_t v287 = v546[16];
        v288 = (char *)a1 + v287;
        v289 = &a2[v287];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89(v289, 1, v88))
        {
          uint64_t v290 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v288, v289, *(void *)(*(void *)(v290 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v288, v289, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v288, 0, 1, v88);
        }
        uint64_t v329 = v546[17];
        v330 = (void *)((char *)a1 + v329);
        v331 = &a2[v329];
        uint64_t v332 = *((void *)v331 + 1);
        void *v330 = *(void *)v331;
        v330[1] = v332;
        uint64_t v333 = v546[18];
        v334 = (void *)((char *)a1 + v333);
        v335 = &a2[v333];
        uint64_t v336 = *((void *)v335 + 1);
        void *v334 = *(void *)v335;
        v334[1] = v336;
        uint64_t v337 = v546[19];
        v338 = (void *)((char *)a1 + v337);
        v339 = &a2[v337];
        uint64_t v340 = *((void *)v339 + 1);
        void *v338 = *(void *)v339;
        v338[1] = v340;
        uint64_t v341 = v546[20];
        v342 = (char *)a1 + v341;
        v343 = &a2[v341];
        v344 = *(void **)&a2[v341 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v344 == (void *)1)
        {
          long long v345 = *((_OWORD *)v343 + 1);
          *(_OWORD *)v342 = *(_OWORD *)v343;
          *((_OWORD *)v342 + 1) = v345;
          *((_OWORD *)v342 + 2) = *((_OWORD *)v343 + 2);
          *((void *)v342 + 6) = *((void *)v343 + 6);
        }
        else
        {
          char *v342 = *v343;
          v346 = (void *)*((void *)v343 + 2);
          v347 = (void *)*((void *)v343 + 3);
          *((void *)v342 + 1) = v344;
          *((void *)v342 + 2) = v346;
          v348 = (void *)*((void *)v343 + 4);
          v349 = (void *)*((void *)v343 + 5);
          *((void *)v342 + 3) = v347;
          *((void *)v342 + 4) = v348;
          v350 = (void *)*((void *)v343 + 6);
          *((void *)v342 + 5) = v349;
          *((void *)v342 + 6) = v350;
          id v351 = v344;
          id v352 = v346;
          id v353 = v347;
          id v354 = v348;
          id v355 = v349;
          id v356 = v350;
        }
        uint64_t v357 = v546[21];
        char v170 = (char *)a1 + v357;
        uint64_t v171 = &a2[v357];
        uint64_t v172 = *(void **)v171;
        if (*(void *)v171 == 1)
        {
          long long v358 = *((_OWORD *)v171 + 1);
          *(_OWORD *)char v170 = *(_OWORD *)v171;
          *((_OWORD *)v170 + 1) = v358;
        }
        else
        {
LABEL_100:
          v359 = (void *)*((void *)v171 + 1);
          v360 = (void *)*((void *)v171 + 2);
          *(void *)char v170 = v172;
          *((void *)v170 + 1) = v359;
          v361 = (void *)*((void *)v171 + 3);
          *((void *)v170 + 2) = v360;
          *((void *)v170 + 3) = v361;
          id v362 = v172;
          id v363 = v359;
          id v364 = v360;
          id v365 = v361;
        }
LABEL_101:
        uint64_t v366 = v92[22];
        v367 = (void *)((char *)a1 + v366);
        v368 = &a2[v366];
        uint64_t v369 = *((void *)v368 + 1);
        void *v367 = *(void *)v368;
        v367[1] = v369;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v6;
        uint64_t v7 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v7;
        uint64_t v8 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v8;
        uint64_t v9 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v9;
        uint64_t v10 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v10;
        uint64_t v11 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v11;
        uint64_t v12 = type metadata accessor for MessageRecord();
        uint64_t v13 = *(int *)(v12 + 40);
        __dst = (char *)a1 + v13;
        v531 = (int *)v12;
        v549 = &a2[v13];
        uint64_t v14 = sub_22342C130();
        uint64_t v556 = *(void *)(v14 - 8);
        uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v556 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15(v549, 1, v14))
        {
          uint64_t v16 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dst, v549, *(void *)(*(void *)(v16 - 8) + 64));
          uint64_t v17 = v556;
        }
        else
        {
          uint64_t v17 = v556;
          (*(void (**)(char *, char *, uint64_t))(v556 + 16))(__dst, v549, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v556 + 56))(__dst, 0, 1, v14);
        }
        id v234 = v531;
        uint64_t v235 = v531[11];
        uint64_t v236 = (char *)a1 + v235;
        v237 = &a2[v235];
        if (v15(&a2[v235], 1, v14))
        {
          uint64_t v238 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v236, v237, *(void *)(*(void *)(v238 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v236, v237, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v236, 0, 1, v14);
        }
        uint64_t v251 = v531[12];
        long long v252 = (void *)((char *)a1 + v251);
        v253 = &a2[v251];
        uint64_t v254 = *((void *)v253 + 1);
        *long long v252 = *(void *)v253;
        v252[1] = v254;
        *((unsigned char *)a1 + v531[13]) = a2[v531[13]];
        uint64_t v255 = v531[14];
        v256 = (char *)a1 + v255;
        v257 = &a2[v255];
        swift_bridgeObjectRetain();
        if (v15(v257, 1, v14))
        {
          uint64_t v258 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v256, v257, *(void *)(*(void *)(v258 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v256, v257, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v256, 0, 1, v14);
        }
        uint64_t v291 = v531[15];
        v292 = (char *)a1 + v291;
        v293 = &a2[v291];
        if (v15(&a2[v291], 1, v14))
        {
          uint64_t v294 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v292, v293, *(void *)(*(void *)(v294 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v292, v293, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v292, 0, 1, v14);
        }
        uint64_t v370 = v531[16];
        v371 = (char *)a1 + v370;
        v372 = &a2[v370];
        if (v15(&a2[v370], 1, v14))
        {
          uint64_t v373 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v371, v372, *(void *)(*(void *)(v373 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v371, v372, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v371, 0, 1, v14);
        }
        uint64_t v378 = v531[17];
        v379 = (char *)a1 + v378;
        v380 = &a2[v378];
        if (v15(&a2[v378], 1, v14))
        {
          uint64_t v381 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v379, v380, *(void *)(*(void *)(v381 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v379, v380, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v379, 0, 1, v14);
        }
        uint64_t v386 = v531[18];
        v387 = (char *)a1 + v386;
        v388 = &a2[v386];
        uint64_t v389 = *(void *)&a2[v386 + 8];
        uint64_t v547 = v14;
        v538 = v15;
        if (v389 == 1)
        {
          long long v390 = *((_OWORD *)v388 + 1);
          *(_OWORD *)v387 = *(_OWORD *)v388;
          *((_OWORD *)v387 + 1) = v390;
          *((void *)v387 + 4) = *((void *)v388 + 4);
        }
        else
        {
          *(void *)v387 = *(void *)v388;
          *((void *)v387 + 1) = v389;
          v391 = v388 + 16;
          unint64_t v392 = *((void *)v388 + 3);
          swift_bridgeObjectRetain();
          if (v392 >> 60 == 15)
          {
            *((_OWORD *)v387 + 1) = *v391;
          }
          else
          {
            uint64_t v400 = *(void *)v391;
            sub_22331E684(v400, v392);
            *((void *)v387 + 2) = v400;
            *((void *)v387 + 3) = v392;
          }
          v401 = (void *)*((void *)v388 + 4);
          *((void *)v387 + 4) = v401;
          id v402 = v401;
        }
        uint64_t v403 = v531[19];
        v404 = (char *)a1 + v403;
        v405 = &a2[v403];
        *(void *)v404 = *(void *)v405;
        v404[8] = v405[8];
        uint64_t v406 = v531[20];
        v407 = (char *)a1 + v406;
        v408 = &a2[v406];
        v407[8] = v408[8];
        *(void *)v407 = *(void *)v408;
        uint64_t v409 = v531[21];
        v410 = (char *)a1 + v409;
        v411 = &a2[v409];
        *(void *)v410 = *(void *)v411;
        v410[8] = v411[8];
        uint64_t v412 = v531[22];
        v413 = (void *)((char *)a1 + v412);
        v414 = &a2[v412];
        uint64_t v415 = *((void *)v414 + 1);
        void *v413 = *(void *)v414;
        v413[1] = v415;
        uint64_t v416 = v531[23];
        v417 = (char *)a1 + v416;
        v418 = &a2[v416];
        *(void *)v417 = *(void *)v418;
        v417[8] = v418[8];
        uint64_t v419 = v531[24];
        v420 = (void *)((char *)a1 + v419);
        v421 = &a2[v419];
        uint64_t v422 = *((void *)v421 + 1);
        void *v420 = *(void *)v421;
        v420[1] = v422;
        uint64_t v423 = v531[25];
        v424 = (void *)((char *)a1 + v423);
        v425 = &a2[v423];
        uint64_t v426 = *((void *)v425 + 1);
        void *v424 = *(void *)v425;
        v424[1] = v426;
        uint64_t v427 = v531[26];
        v428 = (char *)a1 + v427;
        v429 = &a2[v427];
        *(void *)v428 = *(void *)v429;
        v428[8] = v429[8];
        uint64_t v430 = v531[27];
        v431 = (void *)((char *)a1 + v430);
        v432 = &a2[v430];
        uint64_t v433 = *((void *)v432 + 1);
        void *v431 = *(void *)v432;
        v431[1] = v433;
        uint64_t v434 = v531[28];
        v435 = (void *)((char *)a1 + v434);
        v436 = &a2[v434];
        uint64_t v437 = *((void *)v436 + 1);
        void *v435 = *(void *)v436;
        v435[1] = v437;
        uint64_t v438 = v531[29];
        v439 = (char *)a1 + v438;
        v440 = (uint64_t *)&a2[v438];
        unint64_t v441 = *(void *)&a2[v438 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v441 >> 60 == 15)
        {
          *(_OWORD *)v439 = *(_OWORD *)v440;
        }
        else
        {
          uint64_t v442 = *v440;
          sub_22331E684(*v440, v441);
          *(void *)v439 = v442;
          *((void *)v439 + 1) = v441;
        }
        uint64_t v443 = v531[30];
        v444 = (void *)((char *)a1 + v443);
        v445 = &a2[v443];
        uint64_t v446 = *((void *)v445 + 1);
        void *v444 = *(void *)v445;
        v444[1] = v446;
        uint64_t v447 = v531[31];
        v448 = (char *)a1 + v447;
        v449 = &a2[v447];
        swift_bridgeObjectRetain();
        if (v538(v449, 1, v547))
        {
          uint64_t v450 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v448, v449, *(void *)(*(void *)(v450 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v556 + 16))(v448, v449, v547);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v556 + 56))(v448, 0, 1, v547);
        }
        uint64_t v451 = v531[32];
        v452 = (void *)((char *)a1 + v451);
        v453 = &a2[v451];
        uint64_t v454 = *((void *)v453 + 1);
        void *v452 = *(void *)v453;
        v452[1] = v454;
        *((unsigned char *)a1 + v531[33]) = a2[v531[33]];
        uint64_t v455 = v531[34];
        v456 = (char *)a1 + v455;
        v457 = &a2[v455];
        v458 = *(void **)&a2[v455];
        swift_bridgeObjectRetain();
        if (v458 == (void *)1)
        {
          long long v459 = *((_OWORD *)v457 + 1);
          *(_OWORD *)v456 = *(_OWORD *)v457;
          *((_OWORD *)v456 + 1) = v459;
        }
        else
        {
LABEL_145:
          v517 = (void *)*((void *)v457 + 1);
          v518 = (void *)*((void *)v457 + 2);
          *(void *)v456 = v458;
          *((void *)v456 + 1) = v517;
          v519 = (void *)*((void *)v457 + 3);
          *((void *)v456 + 2) = v518;
          *((void *)v456 + 3) = v519;
          id v520 = v458;
          id v521 = v517;
          id v522 = v518;
          id v523 = v519;
        }
LABEL_146:
        uint64_t v524 = v234[35];
        v525 = (void *)((char *)a1 + v524);
        v526 = &a2[v524];
        uint64_t v527 = *((void *)v526 + 1);
        void *v525 = *(void *)v526;
        v525[1] = v527;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22334DEB0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = (int *)type metadata accessor for MessageRecord();
      uint64_t v14 = a1 + v13[10];
      uint64_t v15 = sub_22342C130();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
      if (!v17(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      }
      uint64_t v18 = a1 + v13[11];
      if (!v17(v18, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
      }
      swift_bridgeObjectRelease();
      uint64_t v19 = a1 + v13[14];
      if (!v17(v19, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
      }
      uint64_t v20 = a1 + v13[15];
      if (!v17(v20, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v15);
      }
      uint64_t v21 = a1 + v13[16];
      if (!v17(v21, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v15);
      }
      uint64_t v22 = a1 + v13[17];
      if (!v17(v22, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v22, v15);
      }
      uint64_t v23 = a1 + v13[18];
      if (*(void *)(v23 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v24 = *(void *)(v23 + 24);
        if (v24 >> 60 != 15) {
          sub_22331EA68(*(void *)(v23 + 16), v24);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = (uint64_t *)(a1 + v13[29]);
      unint64_t v26 = v25[1];
      if (v26 >> 60 != 15) {
        sub_22331EA68(*v25, v26);
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = a1 + v13[31];
      if (!v17(v27, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v27, v15);
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = (id *)(a1 + v13[34]);
      if (*v28 != (id)1)
      {
      }
      goto LABEL_35;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = (int *)type metadata accessor for ActionRecord();
      uint64_t v4 = a1 + v3[10];
      uint64_t v5 = sub_22342C130();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (!v7(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      }
      uint64_t v8 = a1 + v3[11];
      if (!v7(v8, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = a1 + v3[16];
      if (!v7(v9, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = a1 + v3[20];
      uint64_t v11 = *(void **)(v10 + 8);
      if (v11 != (void *)1)
      {
      }
      uint64_t v12 = (id *)(a1 + v3[21]);
      if (*v12 != (id)1)
      {
      }
LABEL_35:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_22334E4AC(void *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v96 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v96;
      uint64_t v97 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v97;
      uint64_t v98 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v98;
      uint64_t v99 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v99;
      uint64_t v100 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v100;
      uint64_t v101 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v101;
      uint64_t v102 = type metadata accessor for MessageRecord();
      uint64_t v103 = *(int *)(v102 + 40);
      v296 = (char *)a1 + v103;
      uint64_t v299 = (int *)v102;
      uint64_t v294 = &a2[v103];
      uint64_t v104 = sub_22342C130();
      uint64_t v312 = *(void *)(v104 - 8);
      uint64_t v105 = *(unsigned int (**)(char *, uint64_t, void *))(v312 + 48);
      char v106 = (void *)v104;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v105(v294, 1, v106))
      {
        uint64_t v107 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v296, v294, *(void *)(*(void *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v312 + 16))(v296, v294, v106);
        (*(void (**)(char *, void, uint64_t, void *))(v312 + 56))(v296, 0, 1, v106);
      }
      uint64_t v108 = v299;
      uint64_t v113 = v299[11];
      long long v114 = (char *)a1 + v113;
      long long v115 = &a2[v113];
      if (v105(&a2[v113], 1, v106))
      {
        uint64_t v116 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v312 + 16))(v114, v115, v106);
        (*(void (**)(char *, void, uint64_t, void *))(v312 + 56))(v114, 0, 1, v106);
      }
      uint64_t v125 = v299[12];
      uint64_t v126 = (void *)((char *)a1 + v125);
      uint64_t v127 = &a2[v125];
      uint64_t v128 = *((void *)v127 + 1);
      void *v126 = *(void *)v127;
      v126[1] = v128;
      *((unsigned char *)a1 + v299[13]) = a2[v299[13]];
      uint64_t v129 = v299[14];
      unint64_t v130 = (char *)a1 + v129;
      int64_t v131 = &a2[v129];
      swift_bridgeObjectRetain();
      if (v105(v131, 1, v106))
      {
        uint64_t v132 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v312 + 16))(v130, v131, v106);
        (*(void (**)(char *, void, uint64_t, void *))(v312 + 56))(v130, 0, 1, v106);
      }
      uint64_t v137 = v299[15];
      uint64_t v138 = (char *)a1 + v137;
      uint64_t v139 = &a2[v137];
      if (v105(&a2[v137], 1, v106))
      {
        uint64_t v140 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v312 + 16))(v138, v139, v106);
        (*(void (**)(char *, void, uint64_t, void *))(v312 + 56))(v138, 0, 1, v106);
      }
      uint64_t v145 = v299[16];
      uint64_t v146 = (char *)a1 + v145;
      uint64_t v147 = &a2[v145];
      if (v105(&a2[v145], 1, v106))
      {
        uint64_t v148 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v312 + 16))(v146, v147, v106);
        (*(void (**)(char *, void, uint64_t, void *))(v312 + 56))(v146, 0, 1, v106);
      }
      uint64_t v153 = v299[17];
      char v154 = (char *)a1 + v153;
      unint64_t v155 = &a2[v153];
      if (v105(&a2[v153], 1, v106))
      {
        uint64_t v156 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v312 + 16))(v154, v155, v106);
        (*(void (**)(char *, void, uint64_t, void *))(v312 + 56))(v154, 0, 1, v106);
      }
      uint64_t v164 = v299[18];
      id v165 = (char *)a1 + v164;
      id v166 = &a2[v164];
      uint64_t v167 = *(void *)&a2[v164 + 8];
      __dstc = v106;
      uint64_t v303 = v105;
      if (v167 == 1)
      {
        long long v168 = *((_OWORD *)v166 + 1);
        *(_OWORD *)id v165 = *(_OWORD *)v166;
        *((_OWORD *)v165 + 1) = v168;
        *((void *)v165 + 4) = *((void *)v166 + 4);
      }
      else
      {
        *(void *)id v165 = *(void *)v166;
        *((void *)v165 + 1) = v167;
        uint64_t v169 = v166 + 16;
        unint64_t v170 = *((void *)v166 + 3);
        swift_bridgeObjectRetain();
        if (v170 >> 60 == 15)
        {
          *((_OWORD *)v165 + 1) = *v169;
        }
        else
        {
          uint64_t v224 = *(void *)v169;
          sub_22331E684(v224, v170);
          *((void *)v165 + 2) = v224;
          *((void *)v165 + 3) = v170;
        }
        v225 = (void *)*((void *)v166 + 4);
        *((void *)v165 + 4) = v225;
        id v226 = v225;
      }
      uint64_t v227 = v299[19];
      id v228 = (char *)a1 + v227;
      id v229 = &a2[v227];
      *(void *)id v228 = *(void *)v229;
      v228[8] = v229[8];
      uint64_t v230 = v299[20];
      id v231 = (char *)a1 + v230;
      uint64_t v232 = &a2[v230];
      v231[8] = v232[8];
      *(void *)id v231 = *(void *)v232;
      uint64_t v233 = v299[21];
      id v234 = (char *)a1 + v233;
      uint64_t v235 = &a2[v233];
      *(void *)id v234 = *(void *)v235;
      v234[8] = v235[8];
      uint64_t v236 = v299[22];
      v237 = (void *)((char *)a1 + v236);
      uint64_t v238 = &a2[v236];
      uint64_t v239 = *((void *)v238 + 1);
      void *v237 = *(void *)v238;
      v237[1] = v239;
      uint64_t v240 = v299[23];
      uint64_t v241 = (char *)a1 + v240;
      uint64_t v242 = &a2[v240];
      *(void *)uint64_t v241 = *(void *)v242;
      v241[8] = v242[8];
      uint64_t v243 = v299[24];
      unint64_t v244 = (void *)((char *)a1 + v243);
      id v245 = &a2[v243];
      uint64_t v246 = *((void *)v245 + 1);
      *unint64_t v244 = *(void *)v245;
      v244[1] = v246;
      uint64_t v247 = v299[25];
      uint64_t v248 = (void *)((char *)a1 + v247);
      int64_t v249 = &a2[v247];
      uint64_t v250 = *((void *)v249 + 1);
      *uint64_t v248 = *(void *)v249;
      v248[1] = v250;
      uint64_t v251 = v299[26];
      long long v252 = (char *)a1 + v251;
      v253 = &a2[v251];
      *(void *)long long v252 = *(void *)v253;
      v252[8] = v253[8];
      uint64_t v254 = v299[27];
      uint64_t v255 = (void *)((char *)a1 + v254);
      v256 = &a2[v254];
      uint64_t v257 = *((void *)v256 + 1);
      *uint64_t v255 = *(void *)v256;
      v255[1] = v257;
      uint64_t v258 = v299[28];
      uint64_t v259 = (void *)((char *)a1 + v258);
      v260 = &a2[v258];
      uint64_t v261 = *((void *)v260 + 1);
      *uint64_t v259 = *(void *)v260;
      v259[1] = v261;
      uint64_t v262 = v299[29];
      uint64_t v263 = (char *)a1 + v262;
      v264 = (uint64_t *)&a2[v262];
      unint64_t v265 = *(void *)&a2[v262 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v265 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v263 = *(_OWORD *)v264;
      }
      else
      {
        uint64_t v266 = *v264;
        sub_22331E684(*v264, v265);
        *(void *)uint64_t v263 = v266;
        *((void *)v263 + 1) = v265;
      }
      unint64_t v214 = __dstc;
      uint64_t v215 = v312;
      uint64_t v267 = v299[30];
      v268 = (void *)((char *)a1 + v267);
      v269 = &a2[v267];
      uint64_t v270 = *((void *)v269 + 1);
      void *v268 = *(void *)v269;
      v268[1] = v270;
      uint64_t v271 = v299[31];
      uint64_t v221 = (char *)a1 + v271;
      char v222 = &a2[v271];
      swift_bridgeObjectRetain();
      if (v303(v222, 1, __dstc)) {
        goto LABEL_73;
      }
      goto LABEL_80;
    case 2u:
    case 3u:
    case 4u:
      uint64_t v4 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v4;
      uint64_t v5 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v5;
      uint64_t v6 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v6;
      uint64_t v7 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v7;
      uint64_t v8 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v8;
      uint64_t v9 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v9;
      uint64_t v10 = type metadata accessor for ActionRecord();
      uint64_t v11 = *(int *)(v10 + 40);
      __dst = (char *)a1 + v11;
      uint64_t v310 = (int *)v10;
      v297 = &a2[v11];
      uint64_t v12 = sub_22342C130();
      uint64_t v304 = *(void *)(v12 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v304 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v297, 1, v12))
      {
        uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(__dst, v297, *(void *)(*(void *)(v14 - 8) + 64));
        uint64_t v15 = v304;
      }
      else
      {
        uint64_t v15 = v304;
        (*(void (**)(char *, char *, uint64_t))(v304 + 16))(__dst, v297, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v304 + 56))(__dst, 0, 1, v12);
      }
      uint64_t v25 = v310;
      goto LABEL_9;
    case 5u:
    case 6u:
      uint64_t v16 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v16;
      uint64_t v17 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v17;
      uint64_t v18 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v18;
      uint64_t v19 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v19;
      uint64_t v20 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v20;
      uint64_t v21 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v21;
      uint64_t v22 = type metadata accessor for ActionRecord();
      uint64_t v23 = *(int *)(v22 + 40);
      v301 = (char *)a1 + v23;
      v305 = (int *)v22;
      __dsta = &a2[v23];
      uint64_t v12 = sub_22342C130();
      uint64_t v298 = *(void *)(v12 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v298 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(__dsta, 1, v12))
      {
        uint64_t v24 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v301, __dsta, *(void *)(*(void *)(v24 - 8) + 64));
        uint64_t v15 = v298;
      }
      else
      {
        uint64_t v15 = v298;
        (*(void (**)(char *, char *, uint64_t))(v298 + 16))(v301, __dsta, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v298 + 56))(v301, 0, 1, v12);
      }
      uint64_t v25 = v305;
LABEL_9:
      uint64_t v26 = v25[11];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = &a2[v26];
      if (v13(&a2[v26], 1, v12))
      {
        uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v27, v28, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v12);
      }
      uint64_t v30 = v25[12];
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = &a2[v30];
      uint64_t v33 = *((void *)v32 + 1);
      *uint64_t v31 = *(void *)v32;
      v31[1] = v33;
      uint64_t v34 = v25[13];
      uint64_t v35 = (void *)((char *)a1 + v34);
      uint64_t v36 = &a2[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *uint64_t v35 = *(void *)v36;
      v35[1] = v37;
      *((unsigned char *)a1 + v25[14]) = a2[v25[14]];
      *((unsigned char *)a1 + v25[15]) = a2[v25[15]];
      uint64_t v38 = v25[16];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = &a2[v38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v40, 1, v12))
      {
        uint64_t v41 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v39, v40, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v39, 0, 1, v12);
      }
      uint64_t v42 = v25[17];
      uint64_t v43 = (void *)((char *)a1 + v42);
      uint64_t v44 = &a2[v42];
      uint64_t v45 = *((void *)v44 + 1);
      *uint64_t v43 = *(void *)v44;
      v43[1] = v45;
      uint64_t v46 = v25[18];
      uint64_t v47 = (void *)((char *)a1 + v46);
      uint64_t v48 = &a2[v46];
      uint64_t v49 = *((void *)v48 + 1);
      void *v47 = *(void *)v48;
      v47[1] = v49;
      uint64_t v50 = v25[19];
      uint64_t v51 = (void *)((char *)a1 + v50);
      id v52 = &a2[v50];
      uint64_t v53 = *((void *)v52 + 1);
      *uint64_t v51 = *(void *)v52;
      v51[1] = v53;
      uint64_t v54 = v25[20];
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = &a2[v54];
      uint64_t v57 = *(void **)&a2[v54 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57 == (void *)1)
      {
        long long v58 = *((_OWORD *)v56 + 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v58;
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        *((void *)v55 + 6) = *((void *)v56 + 6);
      }
      else
      {
        *uint64_t v55 = *v56;
        uint64_t v59 = (void *)*((void *)v56 + 2);
        uint64_t v60 = (void *)*((void *)v56 + 3);
        *((void *)v55 + 1) = v57;
        *((void *)v55 + 2) = v59;
        uint64_t v61 = (void *)*((void *)v56 + 4);
        uint64_t v62 = (void *)*((void *)v56 + 5);
        *((void *)v55 + 3) = v60;
        *((void *)v55 + 4) = v61;
        uint64_t v63 = (void *)*((void *)v56 + 6);
        *((void *)v55 + 5) = v62;
        *((void *)v55 + 6) = v63;
        id v64 = v57;
        id v65 = v59;
        id v66 = v60;
        id v67 = v61;
        id v68 = v62;
        id v69 = v63;
      }
      uint64_t v70 = v25[21];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = &a2[v70];
      uint64_t v73 = *(void **)v72;
      if (*(void *)v72 == 1)
      {
        long long v74 = *((_OWORD *)v72 + 1);
        *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
        *((_OWORD *)v71 + 1) = v74;
      }
      else
      {
        uint64_t v75 = (void *)*((void *)v72 + 1);
        uint64_t v76 = (void *)*((void *)v72 + 2);
        *(void *)uint64_t v71 = v73;
        *((void *)v71 + 1) = v75;
        uint64_t v77 = (void *)*((void *)v72 + 3);
        *((void *)v71 + 2) = v76;
        *((void *)v71 + 3) = v77;
        id v78 = v73;
        id v79 = v75;
        id v80 = v76;
        id v81 = v77;
      }
      uint64_t v82 = v25[22];
      uint64_t v83 = (void *)((char *)a1 + v82);
      uint64_t v84 = &a2[v82];
      uint64_t v85 = *((void *)v84 + 1);
      *uint64_t v83 = *(void *)v84;
      v83[1] = v85;
      break;
    default:
      uint64_t v86 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v86;
      uint64_t v87 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v87;
      uint64_t v88 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v88;
      uint64_t v89 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v89;
      uint64_t v90 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v90;
      uint64_t v91 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v91;
      uint64_t v302 = (int *)type metadata accessor for MessageRecord();
      uint64_t v92 = v302[10];
      v293 = &a2[v92];
      uint64_t v295 = (char *)a1 + v92;
      uint64_t v93 = sub_22342C130();
      uint64_t v311 = *(void *)(v93 - 8);
      char v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v311 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v94(v293, 1, v93))
      {
        uint64_t v95 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v295, v293, *(void *)(*(void *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v295, v293, v93);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v311 + 56))(v295, 0, 1, v93);
      }
      uint64_t v108 = v302;
      uint64_t v109 = v302[11];
      uint64_t v110 = (char *)a1 + v109;
      char v111 = &a2[v109];
      if (v94(&a2[v109], 1, v93))
      {
        uint64_t v112 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v110, v111, v93);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v311 + 56))(v110, 0, 1, v93);
      }
      uint64_t v117 = v302[12];
      BOOL v118 = (void *)((char *)a1 + v117);
      uint64_t v119 = &a2[v117];
      uint64_t v120 = *((void *)v119 + 1);
      *BOOL v118 = *(void *)v119;
      v118[1] = v120;
      *((unsigned char *)a1 + v302[13]) = a2[v302[13]];
      uint64_t v121 = v302[14];
      uint64_t v122 = (char *)a1 + v121;
      unint64_t v123 = &a2[v121];
      swift_bridgeObjectRetain();
      if (v94(v123, 1, v93))
      {
        uint64_t v124 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v122, v123, v93);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v311 + 56))(v122, 0, 1, v93);
      }
      uint64_t v133 = v302[15];
      uint64_t v134 = (char *)a1 + v133;
      unint64_t v135 = &a2[v133];
      if (v94(&a2[v133], 1, v93))
      {
        uint64_t v136 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v134, v135, v93);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v311 + 56))(v134, 0, 1, v93);
      }
      uint64_t v141 = v302[16];
      unint64_t v142 = (char *)a1 + v141;
      int64_t v143 = &a2[v141];
      if (v94(&a2[v141], 1, v93))
      {
        uint64_t v144 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v142, v143, v93);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v311 + 56))(v142, 0, 1, v93);
      }
      uint64_t v149 = v302[17];
      id v150 = (char *)a1 + v149;
      uint64_t v151 = &a2[v149];
      if (v94(&a2[v149], 1, v93))
      {
        uint64_t v152 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v150, v151, v93);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v311 + 56))(v150, 0, 1, v93);
      }
      uint64_t v157 = v302[18];
      uint64_t v158 = (char *)a1 + v157;
      char v159 = &a2[v157];
      uint64_t v160 = *(void *)&a2[v157 + 8];
      __dstb = (void *)v93;
      v300 = (unsigned int (*)(char *, uint64_t, void *))v94;
      if (v160 == 1)
      {
        long long v161 = *((_OWORD *)v159 + 1);
        *(_OWORD *)uint64_t v158 = *(_OWORD *)v159;
        *((_OWORD *)v158 + 1) = v161;
        *((void *)v158 + 4) = *((void *)v159 + 4);
      }
      else
      {
        *(void *)uint64_t v158 = *(void *)v159;
        *((void *)v158 + 1) = v160;
        v162 = v159 + 16;
        unint64_t v163 = *((void *)v159 + 3);
        swift_bridgeObjectRetain();
        if (v163 >> 60 == 15)
        {
          *((_OWORD *)v158 + 1) = *v162;
        }
        else
        {
          uint64_t v171 = *(void *)v162;
          sub_22331E684(v171, v163);
          *((void *)v158 + 2) = v171;
          *((void *)v158 + 3) = v163;
        }
        uint64_t v172 = (void *)*((void *)v159 + 4);
        *((void *)v158 + 4) = v172;
        id v173 = v172;
      }
      uint64_t v174 = v302[19];
      uint64_t v175 = (char *)a1 + v174;
      uint64_t v176 = &a2[v174];
      *(void *)uint64_t v175 = *(void *)v176;
      v175[8] = v176[8];
      uint64_t v177 = v302[20];
      uint64_t v178 = (char *)a1 + v177;
      uint64_t v179 = &a2[v177];
      v178[8] = v179[8];
      *(void *)uint64_t v178 = *(void *)v179;
      uint64_t v180 = v302[21];
      uint64_t v181 = (char *)a1 + v180;
      uint64_t v182 = &a2[v180];
      *(void *)uint64_t v181 = *(void *)v182;
      v181[8] = v182[8];
      uint64_t v183 = v302[22];
      uint64_t v184 = (void *)((char *)a1 + v183);
      uint64_t v185 = &a2[v183];
      uint64_t v186 = *((void *)v185 + 1);
      *uint64_t v184 = *(void *)v185;
      v184[1] = v186;
      uint64_t v187 = v302[23];
      uint64_t v188 = (char *)a1 + v187;
      uint64_t v189 = &a2[v187];
      *(void *)uint64_t v188 = *(void *)v189;
      v188[8] = v189[8];
      uint64_t v190 = v302[24];
      unint64_t v191 = (void *)((char *)a1 + v190);
      unint64_t v192 = &a2[v190];
      uint64_t v193 = *((void *)v192 + 1);
      *unint64_t v191 = *(void *)v192;
      v191[1] = v193;
      uint64_t v194 = v302[25];
      int64_t v195 = (void *)((char *)a1 + v194);
      id v196 = &a2[v194];
      uint64_t v197 = *((void *)v196 + 1);
      *int64_t v195 = *(void *)v196;
      v195[1] = v197;
      uint64_t v198 = v302[26];
      id v199 = (char *)a1 + v198;
      id v200 = &a2[v198];
      *(void *)id v199 = *(void *)v200;
      v199[8] = v200[8];
      uint64_t v201 = v302[27];
      uint64_t v202 = (void *)((char *)a1 + v201);
      long long v203 = &a2[v201];
      uint64_t v204 = *((void *)v203 + 1);
      *uint64_t v202 = *(void *)v203;
      v202[1] = v204;
      uint64_t v205 = v302[28];
      v206 = (void *)((char *)a1 + v205);
      uint64_t v207 = &a2[v205];
      uint64_t v208 = *((void *)v207 + 1);
      void *v206 = *(void *)v207;
      v206[1] = v208;
      uint64_t v209 = v302[29];
      uint64_t v210 = (char *)a1 + v209;
      uint64_t v211 = (uint64_t *)&a2[v209];
      unint64_t v212 = *(void *)&a2[v209 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v212 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v210 = *(_OWORD *)v211;
      }
      else
      {
        uint64_t v213 = *v211;
        sub_22331E684(*v211, v212);
        *(void *)uint64_t v210 = v213;
        *((void *)v210 + 1) = v212;
      }
      unint64_t v214 = __dstb;
      uint64_t v215 = v311;
      uint64_t v216 = v302[30];
      char v217 = (void *)((char *)a1 + v216);
      char v218 = &a2[v216];
      uint64_t v219 = *((void *)v218 + 1);
      *char v217 = *(void *)v218;
      v217[1] = v219;
      uint64_t v220 = v302[31];
      uint64_t v221 = (char *)a1 + v220;
      char v222 = &a2[v220];
      swift_bridgeObjectRetain();
      if (v300(v222, 1, __dstb))
      {
LABEL_73:
        uint64_t v223 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v221, v222, *(void *)(*(void *)(v223 - 8) + 64));
      }
      else
      {
LABEL_80:
        (*(void (**)(char *, char *, void *))(v215 + 16))(v221, v222, v214);
        (*(void (**)(char *, void, uint64_t, void *))(v215 + 56))(v221, 0, 1, v214);
      }
      uint64_t v272 = v108[32];
      v273 = (void *)((char *)a1 + v272);
      uint64_t v274 = &a2[v272];
      uint64_t v275 = *((void *)v274 + 1);
      void *v273 = *(void *)v274;
      v273[1] = v275;
      *((unsigned char *)a1 + v108[33]) = a2[v108[33]];
      uint64_t v276 = v108[34];
      v277 = (char *)a1 + v276;
      uint64_t v278 = &a2[v276];
      uint64_t v279 = *(void **)&a2[v276];
      swift_bridgeObjectRetain();
      if (v279 == (void *)1)
      {
        long long v280 = *((_OWORD *)v278 + 1);
        *(_OWORD *)v277 = *(_OWORD *)v278;
        *((_OWORD *)v277 + 1) = v280;
      }
      else
      {
        v281 = (void *)*((void *)v278 + 1);
        uint64_t v282 = (void *)*((void *)v278 + 2);
        *(void *)v277 = v279;
        *((void *)v277 + 1) = v281;
        uint64_t v283 = (void *)*((void *)v278 + 3);
        *((void *)v277 + 2) = v282;
        *((void *)v277 + 3) = v283;
        id v284 = v279;
        id v285 = v281;
        id v286 = v282;
        id v287 = v283;
      }
      uint64_t v288 = v108[35];
      v289 = (void *)((char *)a1 + v288);
      uint64_t v290 = &a2[v288];
      uint64_t v291 = *((void *)v290 + 1);
      void *v289 = *(void *)v290;
      v289[1] = v291;
      break;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_22334F940(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_223350F94((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t v75 = type metadata accessor for MessageRecord();
        uint64_t v76 = *(int *)(v75 + 40);
        uint64_t v263 = &a1[v76];
        uint64_t v266 = (int *)v75;
        uint64_t v261 = &a2[v76];
        uint64_t v77 = sub_22342C130();
        uint64_t v279 = *(void *)(v77 - 8);
        id v78 = *(unsigned int (**)(char *, uint64_t, void *))(v279 + 48);
        id v79 = (void *)v77;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v78(v261, 1, v79))
        {
          uint64_t v80 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v263, v261, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v279 + 16))(v263, v261, v79);
          (*(void (**)(char *, void, uint64_t, void *))(v279 + 56))(v263, 0, 1, v79);
        }
        id v81 = v266;
        uint64_t v86 = v266[11];
        uint64_t v87 = &a1[v86];
        uint64_t v88 = &a2[v86];
        if (v78(&a2[v86], 1, v79))
        {
          uint64_t v89 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v279 + 16))(v87, v88, v79);
          (*(void (**)(char *, void, uint64_t, void *))(v279 + 56))(v87, 0, 1, v79);
        }
        uint64_t v97 = v266[12];
        uint64_t v98 = &a1[v97];
        uint64_t v99 = &a2[v97];
        *(void *)uint64_t v98 = *(void *)v99;
        *((void *)v98 + 1) = *((void *)v99 + 1);
        a1[v266[13]] = a2[v266[13]];
        uint64_t v100 = v266[14];
        uint64_t v101 = &a1[v100];
        uint64_t v102 = &a2[v100];
        swift_bridgeObjectRetain();
        if (v78(v102, 1, v79))
        {
          uint64_t v103 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v279 + 16))(v101, v102, v79);
          (*(void (**)(char *, void, uint64_t, void *))(v279 + 56))(v101, 0, 1, v79);
        }
        uint64_t v108 = v266[15];
        uint64_t v109 = &a1[v108];
        uint64_t v110 = &a2[v108];
        if (v78(&a2[v108], 1, v79))
        {
          uint64_t v111 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v279 + 16))(v109, v110, v79);
          (*(void (**)(char *, void, uint64_t, void *))(v279 + 56))(v109, 0, 1, v79);
        }
        uint64_t v116 = v266[16];
        uint64_t v117 = &a1[v116];
        BOOL v118 = &a2[v116];
        if (v78(&a2[v116], 1, v79))
        {
          uint64_t v119 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v279 + 16))(v117, v118, v79);
          (*(void (**)(char *, void, uint64_t, void *))(v279 + 56))(v117, 0, 1, v79);
        }
        uint64_t v124 = v266[17];
        uint64_t v125 = &a1[v124];
        uint64_t v126 = &a2[v124];
        if (v78(&a2[v124], 1, v79))
        {
          uint64_t v127 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v279 + 16))(v125, v126, v79);
          (*(void (**)(char *, void, uint64_t, void *))(v279 + 56))(v125, 0, 1, v79);
        }
        uint64_t v135 = v266[18];
        uint64_t v136 = &a1[v135];
        uint64_t v137 = &a2[v135];
        __dstc = v79;
        uint64_t v270 = v78;
        if (*(void *)&a2[v135 + 8] == 1)
        {
          long long v138 = *(_OWORD *)v137;
          long long v139 = *((_OWORD *)v137 + 1);
          *((void *)v136 + 4) = *((void *)v137 + 4);
          *(_OWORD *)uint64_t v136 = v138;
          *((_OWORD *)v136 + 1) = v139;
        }
        else
        {
          *(void *)uint64_t v136 = *(void *)v137;
          *((void *)v136 + 1) = *((void *)v137 + 1);
          uint64_t v140 = v137 + 16;
          unint64_t v141 = *((void *)v137 + 3);
          swift_bridgeObjectRetain();
          if (v141 >> 60 == 15)
          {
            *((_OWORD *)v136 + 1) = *v140;
          }
          else
          {
            uint64_t v194 = *(void *)v140;
            sub_22331E684(v194, v141);
            *((void *)v136 + 2) = v194;
            *((void *)v136 + 3) = v141;
          }
          int64_t v195 = (void *)*((void *)v137 + 4);
          *((void *)v136 + 4) = v195;
          id v196 = v195;
        }
        uint64_t v197 = v266[19];
        uint64_t v198 = &a1[v197];
        id v199 = &a2[v197];
        uint64_t v200 = *(void *)v199;
        v198[8] = v199[8];
        *(void *)uint64_t v198 = v200;
        uint64_t v201 = v266[20];
        uint64_t v202 = &a1[v201];
        long long v203 = &a2[v201];
        uint64_t v204 = *(void *)v203;
        v202[8] = v203[8];
        *(void *)uint64_t v202 = v204;
        uint64_t v205 = v266[21];
        v206 = &a1[v205];
        uint64_t v207 = &a2[v205];
        uint64_t v208 = *(void *)v207;
        v206[8] = v207[8];
        *(void *)v206 = v208;
        uint64_t v209 = v266[22];
        uint64_t v210 = &a1[v209];
        uint64_t v211 = &a2[v209];
        *(void *)uint64_t v210 = *(void *)v211;
        *((void *)v210 + 1) = *((void *)v211 + 1);
        uint64_t v212 = v266[23];
        uint64_t v213 = &a1[v212];
        unint64_t v214 = &a2[v212];
        uint64_t v215 = *(void *)v214;
        v213[8] = v214[8];
        *(void *)uint64_t v213 = v215;
        uint64_t v216 = v266[24];
        char v217 = &a1[v216];
        char v218 = &a2[v216];
        *(void *)char v217 = *(void *)v218;
        *((void *)v217 + 1) = *((void *)v218 + 1);
        uint64_t v219 = v266[25];
        uint64_t v220 = &a1[v219];
        uint64_t v221 = &a2[v219];
        *(void *)uint64_t v220 = *(void *)v221;
        *((void *)v220 + 1) = *((void *)v221 + 1);
        uint64_t v222 = v266[26];
        uint64_t v223 = &a1[v222];
        uint64_t v224 = &a2[v222];
        uint64_t v225 = *(void *)v224;
        v223[8] = v224[8];
        *(void *)uint64_t v223 = v225;
        uint64_t v226 = v266[27];
        uint64_t v227 = &a1[v226];
        id v228 = &a2[v226];
        *(void *)uint64_t v227 = *(void *)v228;
        *((void *)v227 + 1) = *((void *)v228 + 1);
        uint64_t v229 = v266[28];
        uint64_t v230 = &a1[v229];
        id v231 = &a2[v229];
        *(void *)uint64_t v230 = *(void *)v231;
        *((void *)v230 + 1) = *((void *)v231 + 1);
        uint64_t v232 = v266[29];
        uint64_t v233 = &a1[v232];
        id v234 = (uint64_t *)&a2[v232];
        unint64_t v235 = *(void *)&a2[v232 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v235 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v233 = *(_OWORD *)v234;
        }
        else
        {
          uint64_t v236 = *v234;
          sub_22331E684(*v234, v235);
          *(void *)uint64_t v233 = v236;
          *((void *)v233 + 1) = v235;
        }
        uint64_t v185 = __dstc;
        uint64_t v186 = v279;
        uint64_t v237 = v266[30];
        uint64_t v238 = &a1[v237];
        uint64_t v239 = &a2[v237];
        *(void *)uint64_t v238 = *(void *)v239;
        *((void *)v238 + 1) = *((void *)v239 + 1);
        uint64_t v240 = v266[31];
        unint64_t v191 = &a1[v240];
        unint64_t v192 = &a2[v240];
        swift_bridgeObjectRetain();
        if (v270(v192, 1, __dstc)) {
          goto LABEL_74;
        }
        goto LABEL_81;
      case 2u:
      case 3u:
      case 4u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t v4 = type metadata accessor for ActionRecord();
        uint64_t v5 = *(int *)(v4 + 40);
        __dst = &a1[v5];
        v277 = (int *)v4;
        v264 = &a2[v5];
        uint64_t v6 = sub_22342C130();
        uint64_t v271 = *(void *)(v6 - 8);
        uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v271 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7(v264, 1, v6))
        {
          uint64_t v8 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dst, v264, *(void *)(*(void *)(v8 - 8) + 64));
          uint64_t v9 = v271;
        }
        else
        {
          uint64_t v9 = v271;
          (*(void (**)(char *, char *, uint64_t))(v271 + 16))(__dst, v264, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v271 + 56))(__dst, 0, 1, v6);
        }
        uint64_t v13 = v277;
        goto LABEL_10;
      case 5u:
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t v10 = type metadata accessor for ActionRecord();
        uint64_t v11 = *(int *)(v10 + 40);
        v268 = &a1[v11];
        uint64_t v272 = (int *)v10;
        __dsta = &a2[v11];
        uint64_t v6 = sub_22342C130();
        uint64_t v265 = *(void *)(v6 - 8);
        uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7(__dsta, 1, v6))
        {
          uint64_t v12 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v268, __dsta, *(void *)(*(void *)(v12 - 8) + 64));
          uint64_t v9 = v265;
        }
        else
        {
          uint64_t v9 = v265;
          (*(void (**)(char *, char *, uint64_t))(v265 + 16))(v268, __dsta, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v265 + 56))(v268, 0, 1, v6);
        }
        uint64_t v13 = v272;
LABEL_10:
        uint64_t v14 = v13[11];
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        if (v7(&a2[v14], 1, v6))
        {
          uint64_t v17 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v16, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v15, 0, 1, v6);
        }
        uint64_t v18 = v13[12];
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        uint64_t v21 = v13[13];
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = *((void *)v23 + 1);
        a1[v13[14]] = a2[v13[14]];
        a1[v13[15]] = a2[v13[15]];
        uint64_t v24 = v13[16];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7(v26, 1, v6))
        {
          uint64_t v27 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v25, v26, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v25, 0, 1, v6);
        }
        uint64_t v28 = v13[17];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        *(void *)uint64_t v29 = *(void *)v30;
        *((void *)v29 + 1) = *((void *)v30 + 1);
        uint64_t v31 = v13[18];
        uint64_t v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        *(void *)uint64_t v32 = *(void *)v33;
        *((void *)v32 + 1) = *((void *)v33 + 1);
        uint64_t v34 = v13[19];
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = *((void *)v36 + 1);
        uint64_t v37 = v13[20];
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = *(void *)&a2[v37 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v40 == 1)
        {
          long long v41 = *(_OWORD *)v39;
          long long v42 = *((_OWORD *)v39 + 1);
          long long v43 = *((_OWORD *)v39 + 2);
          *((void *)v38 + 6) = *((void *)v39 + 6);
          *((_OWORD *)v38 + 1) = v42;
          *((_OWORD *)v38 + 2) = v43;
          *(_OWORD *)uint64_t v38 = v41;
        }
        else
        {
          char *v38 = *v39;
          uint64_t v44 = (void *)*((void *)v39 + 1);
          *((void *)v38 + 1) = v44;
          uint64_t v45 = (void *)*((void *)v39 + 2);
          *((void *)v38 + 2) = v45;
          uint64_t v46 = (void *)*((void *)v39 + 3);
          *((void *)v38 + 3) = v46;
          uint64_t v47 = (void *)*((void *)v39 + 4);
          *((void *)v38 + 4) = v47;
          uint64_t v48 = (void *)*((void *)v39 + 5);
          *((void *)v38 + 5) = v48;
          uint64_t v49 = (void *)*((void *)v39 + 6);
          *((void *)v38 + 6) = v49;
          id v50 = v44;
          id v51 = v45;
          id v52 = v46;
          id v53 = v47;
          id v54 = v48;
          id v55 = v49;
        }
        uint64_t v56 = v13[21];
        uint64_t v57 = &a1[v56];
        long long v58 = &a2[v56];
        uint64_t v59 = *(void **)v58;
        if (*(void *)v58 == 1)
        {
          long long v60 = *((_OWORD *)v58 + 1);
          *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
          *((_OWORD *)v57 + 1) = v60;
        }
        else
        {
          *(void *)uint64_t v57 = v59;
          uint64_t v61 = (void *)*((void *)v58 + 1);
          *((void *)v57 + 1) = v61;
          uint64_t v62 = (void *)*((void *)v58 + 2);
          *((void *)v57 + 2) = v62;
          uint64_t v63 = (void *)*((void *)v58 + 3);
          *((void *)v57 + 3) = v63;
          id v64 = v59;
          id v65 = v61;
          id v66 = v62;
          id v67 = v63;
        }
        uint64_t v68 = v13[22];
        id v69 = &a1[v68];
        uint64_t v70 = &a2[v68];
        *(void *)id v69 = *(void *)v70;
        *((void *)v69 + 1) = *((void *)v70 + 1);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        v269 = (int *)type metadata accessor for MessageRecord();
        uint64_t v71 = v269[10];
        v260 = &a2[v71];
        uint64_t v262 = &a1[v71];
        uint64_t v72 = sub_22342C130();
        uint64_t v278 = *(void *)(v72 - 8);
        uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v278 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v73(v260, 1, v72))
        {
          uint64_t v74 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v262, v260, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v262, v260, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v278 + 56))(v262, 0, 1, v72);
        }
        id v81 = v269;
        uint64_t v82 = v269[11];
        uint64_t v83 = &a1[v82];
        uint64_t v84 = &a2[v82];
        if (v73(&a2[v82], 1, v72))
        {
          uint64_t v85 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v83, v84, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v278 + 56))(v83, 0, 1, v72);
        }
        uint64_t v90 = v269[12];
        uint64_t v91 = &a1[v90];
        uint64_t v92 = &a2[v90];
        *(void *)uint64_t v91 = *(void *)v92;
        *((void *)v91 + 1) = *((void *)v92 + 1);
        a1[v269[13]] = a2[v269[13]];
        uint64_t v93 = v269[14];
        char v94 = &a1[v93];
        uint64_t v95 = &a2[v93];
        swift_bridgeObjectRetain();
        if (v73(v95, 1, v72))
        {
          uint64_t v96 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v94, v95, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v278 + 56))(v94, 0, 1, v72);
        }
        uint64_t v104 = v269[15];
        uint64_t v105 = &a1[v104];
        char v106 = &a2[v104];
        if (v73(&a2[v104], 1, v72))
        {
          uint64_t v107 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v105, v106, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v278 + 56))(v105, 0, 1, v72);
        }
        uint64_t v112 = v269[16];
        uint64_t v113 = &a1[v112];
        long long v114 = &a2[v112];
        if (v73(&a2[v112], 1, v72))
        {
          uint64_t v115 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v113, v114, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v278 + 56))(v113, 0, 1, v72);
        }
        uint64_t v120 = v269[17];
        uint64_t v121 = &a1[v120];
        uint64_t v122 = &a2[v120];
        if (v73(&a2[v120], 1, v72))
        {
          uint64_t v123 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v121, v122, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v278 + 56))(v121, 0, 1, v72);
        }
        uint64_t v128 = v269[18];
        uint64_t v129 = &a1[v128];
        unint64_t v130 = &a2[v128];
        __dstb = (void *)v72;
        uint64_t v267 = (unsigned int (*)(char *, uint64_t, void *))v73;
        if (*(void *)&a2[v128 + 8] == 1)
        {
          long long v131 = *(_OWORD *)v130;
          long long v132 = *((_OWORD *)v130 + 1);
          *((void *)v129 + 4) = *((void *)v130 + 4);
          *(_OWORD *)uint64_t v129 = v131;
          *((_OWORD *)v129 + 1) = v132;
        }
        else
        {
          *(void *)uint64_t v129 = *(void *)v130;
          *((void *)v129 + 1) = *((void *)v130 + 1);
          uint64_t v133 = v130 + 16;
          unint64_t v134 = *((void *)v130 + 3);
          swift_bridgeObjectRetain();
          if (v134 >> 60 == 15)
          {
            *((_OWORD *)v129 + 1) = *v133;
          }
          else
          {
            uint64_t v142 = *(void *)v133;
            sub_22331E684(v142, v134);
            *((void *)v129 + 2) = v142;
            *((void *)v129 + 3) = v134;
          }
          int64_t v143 = (void *)*((void *)v130 + 4);
          *((void *)v129 + 4) = v143;
          id v144 = v143;
        }
        uint64_t v145 = v269[19];
        uint64_t v146 = &a1[v145];
        uint64_t v147 = &a2[v145];
        uint64_t v148 = *(void *)v147;
        v146[8] = v147[8];
        *(void *)uint64_t v146 = v148;
        uint64_t v149 = v269[20];
        id v150 = &a1[v149];
        uint64_t v151 = &a2[v149];
        uint64_t v152 = *(void *)v151;
        v150[8] = v151[8];
        *(void *)id v150 = v152;
        uint64_t v153 = v269[21];
        char v154 = &a1[v153];
        unint64_t v155 = &a2[v153];
        uint64_t v156 = *(void *)v155;
        v154[8] = v155[8];
        *(void *)char v154 = v156;
        uint64_t v157 = v269[22];
        uint64_t v158 = &a1[v157];
        char v159 = &a2[v157];
        *(void *)uint64_t v158 = *(void *)v159;
        *((void *)v158 + 1) = *((void *)v159 + 1);
        uint64_t v160 = v269[23];
        long long v161 = &a1[v160];
        v162 = &a2[v160];
        uint64_t v163 = *(void *)v162;
        v161[8] = v162[8];
        *(void *)long long v161 = v163;
        uint64_t v164 = v269[24];
        id v165 = &a1[v164];
        id v166 = &a2[v164];
        *(void *)id v165 = *(void *)v166;
        *((void *)v165 + 1) = *((void *)v166 + 1);
        uint64_t v167 = v269[25];
        long long v168 = &a1[v167];
        uint64_t v169 = &a2[v167];
        *(void *)long long v168 = *(void *)v169;
        *((void *)v168 + 1) = *((void *)v169 + 1);
        uint64_t v170 = v269[26];
        uint64_t v171 = &a1[v170];
        uint64_t v172 = &a2[v170];
        uint64_t v173 = *(void *)v172;
        v171[8] = v172[8];
        *(void *)uint64_t v171 = v173;
        uint64_t v174 = v269[27];
        uint64_t v175 = &a1[v174];
        uint64_t v176 = &a2[v174];
        *(void *)uint64_t v175 = *(void *)v176;
        *((void *)v175 + 1) = *((void *)v176 + 1);
        uint64_t v177 = v269[28];
        uint64_t v178 = &a1[v177];
        uint64_t v179 = &a2[v177];
        *(void *)uint64_t v178 = *(void *)v179;
        *((void *)v178 + 1) = *((void *)v179 + 1);
        uint64_t v180 = v269[29];
        uint64_t v181 = &a1[v180];
        uint64_t v182 = (uint64_t *)&a2[v180];
        unint64_t v183 = *(void *)&a2[v180 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v183 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v181 = *(_OWORD *)v182;
        }
        else
        {
          uint64_t v184 = *v182;
          sub_22331E684(*v182, v183);
          *(void *)uint64_t v181 = v184;
          *((void *)v181 + 1) = v183;
        }
        uint64_t v185 = __dstb;
        uint64_t v186 = v278;
        uint64_t v187 = v269[30];
        uint64_t v188 = &a1[v187];
        uint64_t v189 = &a2[v187];
        *(void *)uint64_t v188 = *(void *)v189;
        *((void *)v188 + 1) = *((void *)v189 + 1);
        uint64_t v190 = v269[31];
        unint64_t v191 = &a1[v190];
        unint64_t v192 = &a2[v190];
        swift_bridgeObjectRetain();
        if (v267(v192, 1, __dstb))
        {
LABEL_74:
          uint64_t v193 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
        }
        else
        {
LABEL_81:
          (*(void (**)(char *, char *, void *))(v186 + 16))(v191, v192, v185);
          (*(void (**)(char *, void, uint64_t, void *))(v186 + 56))(v191, 0, 1, v185);
        }
        uint64_t v241 = v81[32];
        uint64_t v242 = &a1[v241];
        uint64_t v243 = &a2[v241];
        *(void *)uint64_t v242 = *(void *)v243;
        *((void *)v242 + 1) = *((void *)v243 + 1);
        a1[v81[33]] = a2[v81[33]];
        uint64_t v244 = v81[34];
        id v245 = &a1[v244];
        uint64_t v246 = &a2[v244];
        uint64_t v247 = *(void **)&a2[v244];
        swift_bridgeObjectRetain();
        if (v247 == (void *)1)
        {
          long long v248 = *((_OWORD *)v246 + 1);
          *(_OWORD *)id v245 = *(_OWORD *)v246;
          *((_OWORD *)v245 + 1) = v248;
        }
        else
        {
          *(void *)id v245 = v247;
          int64_t v249 = (void *)*((void *)v246 + 1);
          *((void *)v245 + 1) = v249;
          uint64_t v250 = (void *)*((void *)v246 + 2);
          *((void *)v245 + 2) = v250;
          uint64_t v251 = (void *)*((void *)v246 + 3);
          *((void *)v245 + 3) = v251;
          id v252 = v247;
          id v253 = v249;
          id v254 = v250;
          id v255 = v251;
        }
        uint64_t v256 = v81[35];
        uint64_t v257 = &a1[v256];
        uint64_t v258 = &a2[v256];
        *(void *)uint64_t v257 = *(void *)v258;
        *((void *)v257 + 1) = *((void *)v258 + 1);
        break;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_223350F94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ItemRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ItemRecord()
{
  uint64_t result = qword_26AD5F680;
  if (!qword_26AD5F680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_22335103C(_OWORD *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      long long v4 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v4;
      long long v5 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v5;
      long long v6 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v6;
      uint64_t v7 = (int *)type metadata accessor for ActionRecord();
      uint64_t v8 = v7[10];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_22342C130();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v13(v10, 1, v11))
      {
        uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v26 = v7[11];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = &a2[v26];
      if (v13(&a2[v26], 1, v11))
      {
        uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v27, v28, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)&a2[v7[12]];
      *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)&a2[v7[13]];
      *((unsigned char *)a1 + v7[14]) = a2[v7[14]];
      *((unsigned char *)a1 + v7[15]) = a2[v7[15]];
      uint64_t v30 = v7[16];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = &a2[v30];
      if (v13(&a2[v30], 1, v11))
      {
        uint64_t v33 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v32, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v31, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + v7[17]) = *(_OWORD *)&a2[v7[17]];
      *(_OWORD *)((char *)a1 + v7[18]) = *(_OWORD *)&a2[v7[18]];
      *(_OWORD *)((char *)a1 + v7[19]) = *(_OWORD *)&a2[v7[19]];
      uint64_t v34 = v7[20];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = &a2[v34];
      *((void *)v35 + 6) = *((void *)v36 + 6);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      long long v37 = *((_OWORD *)v36 + 1);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v37;
      uint64_t v38 = v7[21];
      uint64_t v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = &a2[v38];
      long long v41 = *((_OWORD *)v40 + 1);
      *uint64_t v39 = *(_OWORD *)v40;
      v39[1] = v41;
      long long v42 = v7 + 22;
      break;
    default:
      long long v15 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v15;
      long long v16 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v16;
      long long v17 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v17;
      uint64_t v18 = (int *)type metadata accessor for MessageRecord();
      uint64_t v19 = v18[10];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_22342C130();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      if (v24(v21, 1, v22))
      {
        uint64_t v25 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v43 = v18[11];
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = &a2[v43];
      if (v24(&a2[v43], 1, v22))
      {
        uint64_t v46 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v44, v45, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v44, 0, 1, v22);
      }
      *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)&a2[v18[12]];
      *((unsigned char *)a1 + v18[13]) = a2[v18[13]];
      uint64_t v47 = v18[14];
      uint64_t v48 = (char *)a1 + v47;
      uint64_t v49 = &a2[v47];
      if (v24(&a2[v47], 1, v22))
      {
        uint64_t v50 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v48, v49, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v48, 0, 1, v22);
      }
      uint64_t v51 = v18[15];
      id v52 = (char *)a1 + v51;
      id v53 = &a2[v51];
      if (v24(&a2[v51], 1, v22))
      {
        uint64_t v54 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v52, v53, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v52, 0, 1, v22);
      }
      uint64_t v55 = v18[16];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = &a2[v55];
      if (v24(&a2[v55], 1, v22))
      {
        uint64_t v58 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v56, v57, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v56, 0, 1, v22);
      }
      uint64_t v59 = v18[17];
      long long v60 = (char *)a1 + v59;
      uint64_t v61 = &a2[v59];
      if (v24(&a2[v59], 1, v22))
      {
        uint64_t v62 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v60, v61, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v60, 0, 1, v22);
      }
      uint64_t v63 = v18[18];
      id v64 = (char *)a1 + v63;
      id v65 = &a2[v63];
      long long v66 = *((_OWORD *)v65 + 1);
      *(_OWORD *)id v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v66;
      *((void *)v64 + 4) = *((void *)v65 + 4);
      uint64_t v67 = v18[19];
      uint64_t v68 = (char *)a1 + v67;
      id v69 = &a2[v67];
      v68[8] = v69[8];
      *(void *)uint64_t v68 = *(void *)v69;
      uint64_t v70 = v18[20];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = &a2[v70];
      *(void *)uint64_t v71 = *(void *)v72;
      v71[8] = v72[8];
      uint64_t v73 = v18[21];
      uint64_t v74 = (char *)a1 + v73;
      uint64_t v75 = &a2[v73];
      *(void *)uint64_t v74 = *(void *)v75;
      v74[8] = v75[8];
      *(_OWORD *)((char *)a1 + v18[22]) = *(_OWORD *)&a2[v18[22]];
      uint64_t v76 = v18[23];
      uint64_t v77 = (char *)a1 + v76;
      id v78 = &a2[v76];
      *(void *)uint64_t v77 = *(void *)v78;
      v77[8] = v78[8];
      *(_OWORD *)((char *)a1 + v18[24]) = *(_OWORD *)&a2[v18[24]];
      *(_OWORD *)((char *)a1 + v18[25]) = *(_OWORD *)&a2[v18[25]];
      uint64_t v79 = v18[26];
      uint64_t v80 = (char *)a1 + v79;
      id v81 = &a2[v79];
      *(void *)uint64_t v80 = *(void *)v81;
      v80[8] = v81[8];
      *(_OWORD *)((char *)a1 + v18[27]) = *(_OWORD *)&a2[v18[27]];
      *(_OWORD *)((char *)a1 + v18[28]) = *(_OWORD *)&a2[v18[28]];
      *(_OWORD *)((char *)a1 + v18[29]) = *(_OWORD *)&a2[v18[29]];
      *(_OWORD *)((char *)a1 + v18[30]) = *(_OWORD *)&a2[v18[30]];
      uint64_t v82 = v18[31];
      uint64_t v83 = (char *)a1 + v82;
      uint64_t v84 = &a2[v82];
      if (v24(&a2[v82], 1, v22))
      {
        uint64_t v85 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v83, v84, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v83, 0, 1, v22);
      }
      *(_OWORD *)((char *)a1 + v18[32]) = *(_OWORD *)&a2[v18[32]];
      *((unsigned char *)a1 + v18[33]) = a2[v18[33]];
      uint64_t v86 = v18[34];
      uint64_t v87 = (_OWORD *)((char *)a1 + v86);
      uint64_t v88 = &a2[v86];
      long long v89 = *((_OWORD *)v88 + 1);
      _OWORD *v87 = *(_OWORD *)v88;
      v87[1] = v89;
      long long v42 = v18 + 35;
      break;
  }
  *(_OWORD *)((char *)a1 + *v42) = *(_OWORD *)&a2[*v42];
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_2233519B4(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_223350F94((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        long long v4 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v4;
        long long v5 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v5;
        long long v6 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v6;
        uint64_t v7 = (int *)type metadata accessor for ActionRecord();
        uint64_t v8 = v7[10];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_22342C130();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        if (v13(v10, 1, v11))
        {
          uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v26 = v7[11];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        if (v13(&a2[v26], 1, v11))
        {
          uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v27, v28, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
        }
        *(_OWORD *)&a1[v7[12]] = *(_OWORD *)&a2[v7[12]];
        *(_OWORD *)&a1[v7[13]] = *(_OWORD *)&a2[v7[13]];
        a1[v7[14]] = a2[v7[14]];
        a1[v7[15]] = a2[v7[15]];
        uint64_t v30 = v7[16];
        uint64_t v31 = &a1[v30];
        uint64_t v32 = &a2[v30];
        if (v13(&a2[v30], 1, v11))
        {
          uint64_t v33 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v32, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v31, 0, 1, v11);
        }
        *(_OWORD *)&a1[v7[17]] = *(_OWORD *)&a2[v7[17]];
        *(_OWORD *)&a1[v7[18]] = *(_OWORD *)&a2[v7[18]];
        *(_OWORD *)&a1[v7[19]] = *(_OWORD *)&a2[v7[19]];
        uint64_t v34 = v7[20];
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        *((void *)v35 + 6) = *((void *)v36 + 6);
        *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
        long long v37 = *((_OWORD *)v36 + 1);
        *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v37;
        uint64_t v38 = v7[21];
        uint64_t v39 = &a1[v38];
        uint64_t v40 = &a2[v38];
        long long v41 = *((_OWORD *)v40 + 1);
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v41;
        long long v42 = v7 + 22;
        break;
      default:
        long long v15 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v15;
        long long v16 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v16;
        long long v17 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v17;
        uint64_t v18 = (int *)type metadata accessor for MessageRecord();
        uint64_t v19 = v18[10];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        uint64_t v22 = sub_22342C130();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        if (v24(v21, 1, v22))
        {
          uint64_t v25 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v43 = v18[11];
        uint64_t v44 = &a1[v43];
        uint64_t v45 = &a2[v43];
        if (v24(&a2[v43], 1, v22))
        {
          uint64_t v46 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v44, v45, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v44, 0, 1, v22);
        }
        *(_OWORD *)&a1[v18[12]] = *(_OWORD *)&a2[v18[12]];
        a1[v18[13]] = a2[v18[13]];
        uint64_t v47 = v18[14];
        uint64_t v48 = &a1[v47];
        uint64_t v49 = &a2[v47];
        if (v24(&a2[v47], 1, v22))
        {
          uint64_t v50 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v48, v49, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v48, 0, 1, v22);
        }
        uint64_t v51 = v18[15];
        id v52 = &a1[v51];
        id v53 = &a2[v51];
        if (v24(&a2[v51], 1, v22))
        {
          uint64_t v54 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v52, v53, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v52, 0, 1, v22);
        }
        uint64_t v55 = v18[16];
        uint64_t v56 = &a1[v55];
        uint64_t v57 = &a2[v55];
        if (v24(&a2[v55], 1, v22))
        {
          uint64_t v58 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v56, v57, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v56, 0, 1, v22);
        }
        uint64_t v59 = v18[17];
        long long v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        if (v24(&a2[v59], 1, v22))
        {
          uint64_t v62 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v60, v61, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v60, 0, 1, v22);
        }
        uint64_t v63 = v18[18];
        id v64 = &a1[v63];
        id v65 = &a2[v63];
        long long v66 = *((_OWORD *)v65 + 1);
        *(_OWORD *)id v64 = *(_OWORD *)v65;
        *((_OWORD *)v64 + 1) = v66;
        *((void *)v64 + 4) = *((void *)v65 + 4);
        uint64_t v67 = v18[19];
        uint64_t v68 = &a1[v67];
        id v69 = &a2[v67];
        v68[8] = v69[8];
        *(void *)uint64_t v68 = *(void *)v69;
        uint64_t v70 = v18[20];
        uint64_t v71 = &a1[v70];
        uint64_t v72 = &a2[v70];
        *(void *)uint64_t v71 = *(void *)v72;
        v71[8] = v72[8];
        uint64_t v73 = v18[21];
        uint64_t v74 = &a1[v73];
        uint64_t v75 = &a2[v73];
        *(void *)uint64_t v74 = *(void *)v75;
        v74[8] = v75[8];
        *(_OWORD *)&a1[v18[22]] = *(_OWORD *)&a2[v18[22]];
        uint64_t v76 = v18[23];
        uint64_t v77 = &a1[v76];
        id v78 = &a2[v76];
        *(void *)uint64_t v77 = *(void *)v78;
        v77[8] = v78[8];
        *(_OWORD *)&a1[v18[24]] = *(_OWORD *)&a2[v18[24]];
        *(_OWORD *)&a1[v18[25]] = *(_OWORD *)&a2[v18[25]];
        uint64_t v79 = v18[26];
        uint64_t v80 = &a1[v79];
        id v81 = &a2[v79];
        *(void *)uint64_t v80 = *(void *)v81;
        v80[8] = v81[8];
        *(_OWORD *)&a1[v18[27]] = *(_OWORD *)&a2[v18[27]];
        *(_OWORD *)&a1[v18[28]] = *(_OWORD *)&a2[v18[28]];
        *(_OWORD *)&a1[v18[29]] = *(_OWORD *)&a2[v18[29]];
        *(_OWORD *)&a1[v18[30]] = *(_OWORD *)&a2[v18[30]];
        uint64_t v82 = v18[31];
        uint64_t v83 = &a1[v82];
        uint64_t v84 = &a2[v82];
        if (v24(&a2[v82], 1, v22))
        {
          uint64_t v85 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v83, v84, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v83, 0, 1, v22);
        }
        *(_OWORD *)&a1[v18[32]] = *(_OWORD *)&a2[v18[32]];
        a1[v18[33]] = a2[v18[33]];
        uint64_t v86 = v18[34];
        uint64_t v87 = &a1[v86];
        uint64_t v88 = &a2[v86];
        long long v89 = *((_OWORD *)v88 + 1);
        *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
        *((_OWORD *)v87 + 1) = v89;
        long long v42 = v18 + 35;
        break;
    }
    *(_OWORD *)&a1[*v42] = *(_OWORD *)&a2[*v42];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_223352334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_22335235C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_223352388()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_223352398()
{
  uint64_t result = type metadata accessor for MessageRecord();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ActionRecord();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_223352464()
{
  return sub_22342D060();
}

uint64_t sub_2233524AC()
{
  return sub_22342D050();
}

uint64_t sub_2233524DC()
{
  return sub_22342D060();
}

uint64_t sub_223352520@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22335463C(*a1);
  *a2 = result;
  return result;
}

void sub_22335254C(unsigned char *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_22335255C()
{
  return sub_22342C450();
}

uint64_t sub_2233525BC(char *a1, char *a2)
{
  return sub_2233F4F7C(*a1, *a2);
}

uint64_t sub_2233525C8()
{
  return sub_22342D060();
}

uint64_t sub_223352640()
{
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22335269C()
{
  return sub_22342D060();
}

uint64_t sub_223352710@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_223352770(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65707954627553;
  if (*v1) {
    uint64_t v2 = 0x6570795467736DLL;
  }
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_2233527A8()
{
  if (*v0) {
    return 0x6570795467736DLL;
  }
  else {
    return 0x65707954627553;
  }
}

uint64_t sub_2233527DC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_223352840(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_22335284C(uint64_t a1)
{
  unint64_t v2 = sub_223322B6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_223352888(uint64_t a1)
{
  unint64_t v2 = sub_223322B6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2233528C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for ActionRecord();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v51 = (uint64_t)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v47 = (uint64_t)v44 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v50 = (uint64_t)v44 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v49 = (uint64_t)v44 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v48 = (uint64_t)v44 - v12;
  uint64_t v13 = type metadata accessor for MessageRecord();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  long long v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v44 - v17;
  uint64_t v19 = sub_22331E640(&qword_26AD604E8);
  uint64_t v52 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ItemRecord();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v54 = a1;
  sub_223321F60(a1, v25);
  sub_223322B6C();
  uint64_t v26 = (uint64_t)v55;
  sub_22342D080();
  if (!v26)
  {
    uint64_t v45 = v16;
    uint64_t v46 = v24;
    uint64_t v55 = v18;
    uint64_t v28 = v22;
    uint64_t v29 = v52;
    uint64_t v30 = v53;
    LOBYTE(v56[0]) = 0;
    uint64_t v31 = v19;
    uint64_t v32 = sub_22342CDC0();
    uint64_t v34 = v33;
    LOBYTE(v56[0]) = 1;
    sub_223322BC0();
    sub_22342CE30();
    uint64_t v27 = (uint64_t)v54;
    v44[1] = v28;
    if (v34)
    {
      if (v32 == 0x4D65707954627553 && v34 == 0xEA00000000006773)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      char v35 = sub_22342CF60();
      swift_bridgeObjectRelease();
      if (v35)
      {
LABEL_8:
        char v57 = 0;
LABEL_9:
        sub_223322120(v27, (uint64_t)v56);
        uint64_t v36 = (uint64_t)v55;
        sub_22331B1DC(v56, (uint64_t)v55);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v31);
LABEL_12:
        uint64_t v37 = (uint64_t)v46;
        sub_223353ABC(v36, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for MessageRecord);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        sub_223353ABC(v37, v30, (uint64_t (*)(void))type metadata accessor for ItemRecord);
        return _s17MessagesCloudSync9SyncFilesVwxx_0(v27);
      }
    }
    switch(v57)
    {
      case 1:
        sub_223322120(v27, (uint64_t)v56);
        uint64_t v36 = (uint64_t)v45;
        sub_22331B1DC(v56, (uint64_t)v45);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v31);
        goto LABEL_12;
      case 2:
        sub_223322120(v27, (uint64_t)v56);
        uint64_t v39 = v48;
        sub_2233DDF08(v56, v48);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v31);
        uint64_t v37 = (uint64_t)v46;
        sub_223353ABC(v39, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ActionRecord);
        break;
      case 3:
        sub_223322120(v27, (uint64_t)v56);
        uint64_t v40 = v50;
        sub_2233DDF08(v56, v50);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v31);
        uint64_t v37 = (uint64_t)v46;
        sub_223353ABC(v40, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ActionRecord);
        break;
      case 4:
        sub_223322120(v27, (uint64_t)v56);
        uint64_t v41 = v51;
        sub_2233DDF08(v56, v51);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v31);
        uint64_t v37 = (uint64_t)v46;
        sub_223353ABC(v41, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ActionRecord);
        break;
      case 5:
        sub_223322120(v27, (uint64_t)v56);
        uint64_t v42 = v49;
        sub_2233DDF08(v56, v49);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v31);
        uint64_t v37 = (uint64_t)v46;
        sub_223353ABC(v42, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ActionRecord);
        break;
      case 6:
        sub_223322120(v27, (uint64_t)v56);
        uint64_t v43 = v47;
        sub_2233DDF08(v56, v47);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v31);
        uint64_t v37 = (uint64_t)v46;
        sub_223353ABC(v43, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ActionRecord);
        break;
      default:
        goto LABEL_9;
    }
    goto LABEL_13;
  }
  uint64_t v27 = (uint64_t)v54;
  return _s17MessagesCloudSync9SyncFilesVwxx_0(v27);
}

void sub_223353000()
{
  qword_26AD632E0 = MEMORY[0x263F8EE80];
}

uint64_t sub_223353014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ItemRecord();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2233540D4(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      a1[3] = type metadata accessor for ActionRecord();
      uint64_t v7 = sub_223354138(&qword_267FA2920, (void (*)(uint64_t))type metadata accessor for ActionRecord);
      uint64_t v8 = type metadata accessor for ActionRecord;
      break;
    default:
      a1[3] = type metadata accessor for MessageRecord();
      uint64_t v7 = sub_223354138((unint64_t *)&unk_26AD5F918, (void (*)(uint64_t))type metadata accessor for MessageRecord);
      uint64_t v8 = type metadata accessor for MessageRecord;
      break;
  }
  uint64_t v9 = v8;
  a1[4] = v7;
  uint64_t v10 = sub_223348E4C(a1);
  return sub_223353ABC((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))v9);
}

uint64_t sub_2233531AC()
{
  sub_223353014(v4);
  uint64_t v0 = v5;
  uint64_t v1 = v6;
  sub_223321F60(v4, v5);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v4);
  return v2;
}

uint64_t sub_223353228()
{
  sub_223353014(v4);
  uint64_t v0 = v5;
  uint64_t v1 = v6;
  sub_223321F60(v4, v5);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(v0, v1);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v4);
  return v2;
}

uint64_t sub_2233532A4()
{
  sub_223353014(v4);
  uint64_t v0 = v5;
  uint64_t v1 = v6;
  sub_223321F60(v4, v5);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(v0, v1);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v4);
  return v2;
}

uint64_t sub_223353320(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_223353340, 0, 0);
}

uint64_t sub_223353340()
{
  sub_223353014(v0 + 2);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_223321F60(v0 + 2, v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 104) + **(int **)(v2 + 104));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_223353460;
  uint64_t v4 = v0[7];
  return v6(v4, v1, v2);
}

uint64_t sub_223353460(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2233535F4;
  }
  else
  {
    *(unsigned char *)(v4 + 88) = a1;
    uint64_t v5 = sub_223353588;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_223353588()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned char *)(v0 + 88) & 1;
  return v1(v2);
}

uint64_t sub_2233535F4()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_223353658(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_223353678, 0, 0);
}

uint64_t sub_223353678()
{
  sub_223353014(v0 + 2);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_223321F60(v0 + 2, v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 112) + **(int **)(v2 + 112));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_223353798;
  uint64_t v4 = v0[7];
  return v6(v4, v1, v2);
}

uint64_t sub_223353798()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233535F4;
  }
  else {
    uint64_t v2 = sub_2233538AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2233538AC()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_223353910@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2233528C4(a1, a2);
}

uint64_t sub_223353928(void *a1)
{
  uint64_t v2 = sub_22331E640(&qword_267FA2928);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_223322B6C();
  sub_22342D090();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_223353A38(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_223354138(&qword_26AD5F670, (void (*)(uint64_t))type metadata accessor for ItemRecord);
  uint64_t result = sub_223354138(&qword_26AD5F668, (void (*)(uint64_t))type metadata accessor for ItemRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_223353ABC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_223353B24(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = qword_26AD5F660;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v5 = qword_26AD632E0;
    if (*(void *)(qword_26AD632E0 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v6 = sub_22339C2E8(v3, a2);
      if (v7)
      {
        uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
        swift_endAccess();
        uint64_t result = swift_bridgeObjectRelease();
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return result;
        }
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v11 = qword_26AD632E0;
        qword_26AD632E0 = 0x8000000000000000;
        uint64_t v10 = v8 + 1;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = qword_26AD632E0;
    qword_26AD632E0 = 0x8000000000000000;
    uint64_t v10 = 0;
LABEL_10:
    sub_2233CE0D8(v10, v3, a2, isUniquelyReferenced_nonNull_native);
    qword_26AD632E0 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_223353CB4(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_22342BDD0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_223353D74, 0, 0);
}

uint64_t sub_223353D74()
{
  uint64_t v1 = qword_26AD630F8;
  v0[6] = qword_26AD630F8;
  if (v1)
  {
    uint64_t v2 = qword_26AD63100;
    v0[7] = qword_26AD63100;
    v0[8] = *(void *)(v2 + 32);
    v0[9] = (v2 + 32) & 0xFFFFFFFFFFFFLL | 0x177D000000000000;
    if (qword_26AD5EE88 != -1) {
      swift_once();
    }
    sub_22342C5B0();
    uint64_t v4 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_223353EC8, v4, v3);
  }
  else
  {
    sub_22334283C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5(0);
  }
}

uint64_t sub_223353EC8()
{
  *(unsigned char *)(v0 + 80) = (*(uint64_t (**)(void))(v0 + 64))(*(void *)(v0 + 16)) & 1;
  return MEMORY[0x270FA2498](sub_223353F44, 0, 0);
}

uint64_t sub_223353F44()
{
  if ((*(unsigned char *)(v0 + 80) & 1) == 0)
  {
    if (qword_26AD5EED8 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v4 = *(void **)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    id v5 = objc_msgSend(v4, sel_guid);
    id v6 = objc_msgSend(v4, sel_cloudKitRecordID);
    IMDMessageRecordAddGUIDAndCKRecordIDToDeleteFromCloudKit();

    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A00]), sel_init);
    sub_22342C2D0();
    sub_22342BDC0();
    uint64_t v8 = (void *)sub_22342BDB0();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    objc_msgSend(v7, sel_postNotification_, v8, 0, 0, 0, 0);
  }
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v10 = *(unsigned __int8 *)(v0 + 80);
  return v9(v10);
}

uint64_t sub_2233540D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_223354138(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemRecordError()
{
  return &type metadata for ItemRecordError;
}

unsigned char *_s17MessagesCloudSync15ItemRecordErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223354264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemRecord.CodingKeys()
{
  return &type metadata for ItemRecord.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ItemType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2233543F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemType()
{
  return &type metadata for ItemType;
}

unint64_t sub_223354434()
{
  unint64_t result = qword_267FA2930;
  if (!qword_267FA2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2930);
  }
  return result;
}

unint64_t sub_22335448C()
{
  unint64_t result = qword_267FA2938;
  if (!qword_267FA2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2938);
  }
  return result;
}

unint64_t sub_2233544E4()
{
  unint64_t result = qword_267FA2940;
  if (!qword_267FA2940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2940);
  }
  return result;
}

unint64_t sub_22335453C()
{
  unint64_t result = qword_26AD5F658;
  if (!qword_26AD5F658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F658);
  }
  return result;
}

unint64_t sub_223354594()
{
  unint64_t result = qword_26AD5F650;
  if (!qword_26AD5F650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F650);
  }
  return result;
}

unint64_t sub_2233545E8()
{
  unint64_t result = qword_26AD60160;
  if (!qword_26AD60160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD60160);
  }
  return result;
}

uint64_t sub_22335463C(char a1)
{
  if ((a1 & 0xF8) != 0) {
    return 7;
  }
  else {
    return (0x605040302010007uLL >> (8 * a1));
  }
}

ValueMetadata *type metadata accessor for ReportDiagnosticTelemetryStep()
{
  return &type metadata for ReportDiagnosticTelemetryStep;
}

uint64_t sub_223354680()
{
  sub_22342BD80();
  swift_allocObject();
  uint64_t result = sub_22342BD70();
  qword_267FAD6F0 = result;
  return result;
}

uint64_t sub_2233546C0(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2960 + dword_267FA2960);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223335C74;
  return v7(a1, a2);
}

uint64_t sub_223354774(uint64_t result)
{
  uint64_t v1 = result + 64;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v17 = *(void *)(result + 72);
    if (v17)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v17 = *(void *)(result + 80);
      if (v17)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v17 = *(void *)(result + 88);
        if (v17)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v17 = *(void *)(result + 96);
          if (v17)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v17 = *(void *)(result + 104);
            if (!v17) {
              goto LABEL_43;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v7 = __clz(__rbit64(v17)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 56);
  uint64_t result = *(void *)(v10 + 8 * v7);
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_7:
    uint64_t v13 = *(void *)(v10 + 8 * v12);
    if (v13 < result) {
      uint64_t result = v13;
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 1;
  if (v14 + 1 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 2;
  if (v14 + 2 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 3;
  if (v14 + 3 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v16);
  if (v15)
  {
    uint64_t v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v15 = *(void *)(v1 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_43:
  uint64_t v18 = 0;
  uint64_t v19 = 6;
  if (v9 > 6) {
    uint64_t v19 = v9;
  }
  uint64_t v20 = v19 - 6;
  while (v20 != v18)
  {
    unint64_t v17 = *(void *)(result + 112 + 8 * v18++);
    if (v17)
    {
      uint64_t v6 = v18 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

uint64_t sub_22335496C(uint64_t result)
{
  uint64_t v1 = result + 64;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v17 = *(void *)(result + 72);
    if (v17)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v17 = *(void *)(result + 80);
      if (v17)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v17 = *(void *)(result + 88);
        if (v17)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v17 = *(void *)(result + 96);
          if (v17)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v17 = *(void *)(result + 104);
            if (!v17) {
              goto LABEL_43;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v7 = __clz(__rbit64(v17)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 56);
  uint64_t result = *(void *)(v10 + 8 * v7);
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_7:
    uint64_t v13 = *(void *)(v10 + 8 * v12);
    if (result <= v13) {
      uint64_t result = v13;
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 1;
  if (v14 + 1 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 2;
  if (v14 + 2 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 3;
  if (v14 + 3 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v16);
  if (v15)
  {
    uint64_t v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v15 = *(void *)(v1 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_43:
  uint64_t v18 = 0;
  uint64_t v19 = 6;
  if (v9 > 6) {
    uint64_t v19 = v9;
  }
  uint64_t v20 = v19 - 6;
  while (v20 != v18)
  {
    unint64_t v17 = *(void *)(result + 112 + 8 * v18++);
    if (v17)
    {
      uint64_t v6 = v18 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

unint64_t sub_223354B64(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x70756F724778616DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_223354C70(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_267FA2970);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_223321F60(a1, a1[3]);
  sub_22335642C();
  sub_22342D090();
  v8[15] = 0;
  sub_22342CED0();
  if (!v1)
  {
    v8[14] = 1;
    sub_22342CED0();
    v8[13] = 2;
    sub_22342CED0();
    v8[12] = 3;
    sub_22342CED0();
    v8[11] = 4;
    sub_22342CED0();
    v8[10] = 5;
    sub_22342CED0();
    v8[9] = 6;
    sub_22342CED0();
    v8[8] = 7;
    sub_22342CED0();
    v8[7] = 8;
    sub_22342CED0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_223354EE8()
{
  return sub_223354B64(*v0);
}

uint64_t sub_223354EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_223356480(a1, a2);
  *a3 = result;
  return result;
}

void sub_223354F18(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_223354F24(uint64_t a1)
{
  unint64_t v2 = sub_22335642C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_223354F60(uint64_t a1)
{
  unint64_t v2 = sub_22335642C();
  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_223354F9C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2233567F4(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_223354FF0(void *a1)
{
  return sub_223354C70(a1);
}

uint64_t sub_223355008(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    MEMORY[0x223CB62D0](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_223355174(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v17 = (unint64_t *)result;
  uint64_t v18 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_18:
    if (*(uint64_t *)(*(void *)(v3 + 56) + 8 * v11) >= 2)
    {
      sub_223323208();
      swift_bridgeObjectRetain();
      if (*(void *)(sub_22342CA30() + 16) < 3uLL)
      {
        swift_bridgeObjectRelease();
        __n128 result = swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        char v15 = sub_22342C400();
        swift_bridgeObjectRelease();
        uint64_t v3 = a3;
        __n128 result = swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          *(unint64_t *)((char *)v17 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
          BOOL v12 = __OFADD__(v18++, 1);
          if (v12) {
            goto LABEL_31;
          }
        }
      }
    }
  }
  BOOL v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v4 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 2;
  if (v4 + 2 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 3;
  if (v4 + 3 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return sub_223322714(v17, a2, v18, v3);
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2233553D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v17 = (unint64_t *)result;
  uint64_t v18 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_18:
    if (*(uint64_t *)(*(void *)(v3 + 56) + 8 * v11) >= 2)
    {
      sub_223323208();
      swift_bridgeObjectRetain();
      if (*(void *)(sub_22342CA30() + 16) < 3uLL)
      {
        swift_bridgeObjectRelease();
        __n128 result = swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        char v15 = sub_22342C400();
        swift_bridgeObjectRelease();
        uint64_t v3 = a3;
        __n128 result = swift_bridgeObjectRelease();
        if (v15)
        {
          *(unint64_t *)((char *)v17 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
          BOOL v12 = __OFADD__(v18++, 1);
          if (v12) {
            goto LABEL_31;
          }
        }
      }
    }
  }
  BOOL v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v4 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 2;
  if (v4 + 2 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 3;
  if (v4 + 3 >= v9) {
    return sub_223322714(v17, a2, v18, v3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return sub_223322714(v17, a2, v18, v3);
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_223355634@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_223355008(v2, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2233553D4);
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_223355008(v4, (uint64_t (*)(char *, unint64_t, uint64_t))sub_223355174);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v5 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = v5 + 64;
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v11 = -1;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    while (1)
    {
      if (v12)
      {
        unint64_t v14 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v15 = v14 | (v7 << 6);
      }
      else
      {
        int64_t v18 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_83;
        }
        if (v18 >= v13)
        {
LABEL_26:
          uint64_t v21 = *(void *)(v5 + 16);
          if (v21)
          {
            uint64_t v22 = v8 / v21;
            if (*(void *)(v3 + 16)) {
              goto LABEL_28;
            }
LABEL_65:
            uint64_t v37 = 0;
            uint64_t v38 = v22;
            goto LABEL_54;
          }
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
          goto LABEL_87;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v18);
        ++v7;
        if (!v19)
        {
          int64_t v7 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_26;
          }
          unint64_t v19 = *(void *)(v9 + 8 * v7);
          if (!v19)
          {
            int64_t v7 = v18 + 2;
            if (v18 + 2 >= v13) {
              goto LABEL_26;
            }
            unint64_t v19 = *(void *)(v9 + 8 * v7);
            if (!v19)
            {
              int64_t v7 = v18 + 3;
              if (v18 + 3 >= v13) {
                goto LABEL_26;
              }
              unint64_t v19 = *(void *)(v9 + 8 * v7);
              if (!v19)
              {
                int64_t v7 = v18 + 4;
                if (v18 + 4 >= v13) {
                  goto LABEL_26;
                }
                unint64_t v19 = *(void *)(v9 + 8 * v7);
                if (!v19)
                {
                  int64_t v20 = v18 + 5;
                  if (v20 >= v13) {
                    goto LABEL_26;
                  }
                  unint64_t v19 = *(void *)(v9 + 8 * v20);
                  if (!v19)
                  {
                    while (1)
                    {
                      int64_t v7 = v20 + 1;
                      if (__OFADD__(v20, 1)) {
                        break;
                      }
                      if (v7 >= v13) {
                        goto LABEL_26;
                      }
                      unint64_t v19 = *(void *)(v9 + 8 * v7);
                      ++v20;
                      if (v19) {
                        goto LABEL_25;
                      }
                    }
LABEL_87:
                    __break(1u);
LABEL_88:
                    __break(1u);
                    return result;
                  }
                  int64_t v7 = v20;
                }
              }
            }
          }
        }
LABEL_25:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v15 = __clz(__rbit64(v19)) + (v7 << 6);
      }
      uint64_t v16 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      BOOL v17 = __OFADD__(v8, v16);
      v8 += v16;
      if (v17)
      {
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
    }
  }
  uint64_t v22 = 0;
  if (!*(void *)(v3 + 16)) {
    goto LABEL_65;
  }
LABEL_28:
  int64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = v3 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & *(void *)(v3 + 64);
  int64_t v29 = (unint64_t)(v26 + 63) >> 6;
  while (1)
  {
    if (v28)
    {
      unint64_t v30 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v31 = v30 | (v23 << 6);
      goto LABEL_32;
    }
    int64_t v33 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      goto LABEL_84;
    }
    if (v33 >= v29) {
      break;
    }
    unint64_t v34 = *(void *)(v25 + 8 * v33);
    ++v23;
    if (!v34)
    {
      int64_t v23 = v33 + 1;
      if (v33 + 1 >= v29) {
        break;
      }
      unint64_t v34 = *(void *)(v25 + 8 * v23);
      if (!v34)
      {
        int64_t v23 = v33 + 2;
        if (v33 + 2 >= v29) {
          break;
        }
        unint64_t v34 = *(void *)(v25 + 8 * v23);
        if (!v34)
        {
          int64_t v23 = v33 + 3;
          if (v33 + 3 >= v29) {
            break;
          }
          unint64_t v34 = *(void *)(v25 + 8 * v23);
          if (!v34)
          {
            int64_t v23 = v33 + 4;
            if (v33 + 4 >= v29) {
              break;
            }
            unint64_t v34 = *(void *)(v25 + 8 * v23);
            if (!v34)
            {
              int64_t v35 = v33 + 5;
              if (v35 >= v29) {
                break;
              }
              unint64_t v34 = *(void *)(v25 + 8 * v35);
              if (!v34)
              {
                while (1)
                {
                  int64_t v23 = v35 + 1;
                  if (__OFADD__(v35, 1)) {
                    goto LABEL_88;
                  }
                  if (v23 >= v29) {
                    goto LABEL_52;
                  }
                  unint64_t v34 = *(void *)(v25 + 8 * v23);
                  ++v35;
                  if (v34) {
                    goto LABEL_51;
                  }
                }
              }
              int64_t v23 = v35;
            }
          }
        }
      }
    }
LABEL_51:
    unint64_t v28 = (v34 - 1) & v34;
    unint64_t v31 = __clz(__rbit64(v34)) + (v23 << 6);
LABEL_32:
    uint64_t v32 = *(void *)(*(void *)(v3 + 56) + 8 * v31);
    BOOL v17 = __OFADD__(v24, v32);
    v24 += v32;
    if (v17) {
      goto LABEL_82;
    }
  }
LABEL_52:
  uint64_t v36 = *(void *)(v3 + 16);
  if (!v36) {
    goto LABEL_86;
  }
  uint64_t v37 = v24 / v36;
  uint64_t v38 = v22 + v24 / v36;
  if (__OFADD__(v22, v24 / v36))
  {
    __break(1u);
    goto LABEL_67;
  }
LABEL_54:
  uint64_t v62 = v22;
  if (!*(void *)(v5 + 16))
  {
LABEL_67:
    uint64_t v43 = 0;
    goto LABEL_68;
  }
  uint64_t v39 = swift_retain();
  uint64_t v40 = sub_223354774(v39);
  char v42 = v41;
  swift_release();
  if (v42) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = v40;
  }
  if (!*(void *)(v5 + 16))
  {
LABEL_68:
    uint64_t v48 = 0;
    if (!*(void *)(v3 + 16)) {
      goto LABEL_63;
    }
    goto LABEL_69;
  }
  uint64_t v44 = swift_retain();
  uint64_t v45 = sub_22335496C(v44);
  char v47 = v46;
  swift_release();
  if (v47) {
    uint64_t v48 = 0;
  }
  else {
    uint64_t v48 = v45;
  }
  if (!*(void *)(v3 + 16))
  {
LABEL_63:
    uint64_t v49 = 0;
    goto LABEL_76;
  }
LABEL_69:
  uint64_t v50 = swift_retain();
  uint64_t v51 = sub_223354774(v50);
  char v53 = v52;
  swift_release();
  if (v53) {
    uint64_t v49 = 0;
  }
  else {
    uint64_t v49 = v51;
  }
  if (*(void *)(v3 + 16))
  {
    uint64_t v54 = swift_retain();
    uint64_t v55 = sub_22335496C(v54);
    char v57 = v56;
    swift_release();
    if (v57) {
      uint64_t v55 = 0;
    }
  }
  else
  {
LABEL_76:
    uint64_t v55 = 0;
  }
  if (v38 >= 0) {
    uint64_t v58 = v38;
  }
  else {
    uint64_t v58 = v38 + 1;
  }
  uint64_t v59 = v58 >> 1;
  uint64_t v60 = *(void *)(v5 + 16);
  swift_release();
  uint64_t v61 = *(void *)(v3 + 16);
  uint64_t result = swift_release();
  *a1 = v43;
  a1[1] = v48;
  a1[2] = v49;
  a1[3] = v55;
  a1[4] = v60;
  a1[5] = v61;
  a1[6] = v62;
  a1[7] = v37;
  a1[8] = v59;
  return result;
}

uint64_t sub_223355A94(uint64_t a1, uint64_t a2)
{
  v2[41] = a1;
  v2[42] = a2;
  sub_22342C340();
  v2[43] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_223355B24, 0, 0);
}

uint64_t sub_223355B24()
{
  uint64_t v38 = v0;
  type metadata accessor for CloudState();
  if (!sub_223422524())
  {
    if (qword_26AD5F100 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26AD63240;
    uint64_t v2 = (void *)sub_22342C660();
    uint64_t v3 = (void *)sub_22342C2D0();
    objc_msgSend(v1, sel_setObject_forKey_, v2, v3);

    if (sub_22337C9A4())
    {
      uint64_t v4 = (_OWORD *)(v0 + 16);
      sub_223355634((uint64_t *)(v0 + 16));
      swift_bridgeObjectRelease();
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_22342C200();
      sub_223323374(v5, (uint64_t)qword_26AD63108);
      uint64_t v6 = sub_22342C1E0();
      os_log_type_t v7 = sub_22342C720();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136315138;
        uint64_t v37 = v9;
        long long v10 = *(_OWORD *)(v0 + 64);
        *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 48);
        *(_OWORD *)(v0 + 208) = v10;
        *(void *)(v0 + 224) = *(void *)(v0 + 80);
        long long v11 = *(_OWORD *)(v0 + 32);
        *(_OWORD *)(v0 + 160) = *v4;
        *(_OWORD *)(v0 + 176) = v11;
        uint64_t v12 = sub_22342C360();
        *(void *)(v0 + 320) = sub_22339BC14(v12, v13, &v37);
        sub_22342CA10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_223317000, v6, v7, "Posting duplicates telemetry with value: %s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v9, -1, -1);
        MEMORY[0x223CB62D0](v8, -1, -1);
      }

      if (qword_267FA2068 != -1) {
        swift_once();
      }
      long long v14 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 136) = v14;
      *(void *)(v0 + 152) = *(void *)(v0 + 80);
      long long v15 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 88) = *v4;
      *(_OWORD *)(v0 + 104) = v15;
      sub_223356348();
      uint64_t v16 = sub_22342BD60();
      *(void *)(v0 + 352) = v16;
      *(void *)(v0 + 360) = v17;
      uint64_t v18 = v16;
      unint64_t v19 = v17;
      sub_22342C330();
      uint64_t v20 = sub_22342C310();
      *(void *)(v0 + 368) = v21;
      if (v21)
      {
        uint64_t v22 = v20;
        uint64_t v23 = v21;
        uint64_t v24 = (void *)swift_task_alloc();
        *(void *)(v0 + 376) = v24;
        *uint64_t v24 = v0;
        v24[1] = sub_2233561B0;
        uint64_t v26 = *(void *)(v0 + 328);
        uint64_t v25 = *(void *)(v0 + 336);
        char v44 = 97;
        uint64_t v43 = 47;
        char v42 = 2;
        uint64_t v41 = 21;
        uint64_t v40 = "performStep(context:)";
        return sub_223400994(v26, v25, v22, v23, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/ReportDiagnosticTelemetryStep.swift", 121, 2);
      }
      unint64_t v28 = sub_22342C1E0();
      os_log_type_t v29 = sub_22342C700();
      if (os_log_type_enabled(v28, v29))
      {
        unint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v37 = v36;
        *(_DWORD *)unint64_t v30 = 136315138;
        long long v31 = *(_OWORD *)(v0 + 64);
        *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 48);
        *(_OWORD *)(v0 + 280) = v31;
        *(void *)(v0 + 296) = *(void *)(v0 + 80);
        long long v32 = *(_OWORD *)(v0 + 32);
        *(_OWORD *)(v0 + 232) = *v4;
        *(_OWORD *)(v0 + 248) = v32;
        uint64_t v33 = sub_22342C360();
        *(void *)(v0 + 304) = sub_22339BC14(v33, v34, &v37);
        sub_22342CA10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_223317000, v28, v29, "Failed to get json string for statistics: %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v36, -1, -1);
        MEMORY[0x223CB62D0](v30, -1, -1);
      }
      sub_22331EA68(v18, v19);
    }
  }
  swift_task_dealloc();
  int64_t v35 = *(uint64_t (**)(void, void))(v0 + 8);
  return v35(0, 0);
}

uint64_t sub_2233561B0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2233562C8, 0, 0);
}

uint64_t sub_2233562C8()
{
  uint64_t v1 = v0[44];
  unint64_t v2 = v0[45];
  sub_22337D564();
  sub_22331EA68(v1, v2);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void, void))v0[1];
  return v3(0, 0);
}

unint64_t sub_223356348()
{
  unint64_t result = qword_267FA2968;
  if (!qword_267FA2968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2968);
  }
  return result;
}

__n128 initializeWithCopy for DuplicateStatistics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DuplicateStatistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DuplicateStatistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DuplicateStatistics()
{
  return &type metadata for DuplicateStatistics;
}

unint64_t sub_22335642C()
{
  unint64_t result = qword_267FA2978;
  if (!qword_267FA2978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2978);
  }
  return result;
}

uint64_t sub_223356480(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000223436780 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002234367A0 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002234367C0 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70756F724778616DLL && a2 == 0xED0000746E756F43 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002234367E0 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000223436800 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000223436820 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000223436840 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000223436860)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_22342CF60();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_2233567F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_22331E640(&qword_267FA2980);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_22335642C();
  sub_22342D080();
  if (v2) {
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = sub_22342CE20();
  char v30 = 1;
  uint64_t v10 = sub_22342CE20();
  char v29 = 2;
  uint64_t v22 = sub_22342CE20();
  char v28 = 3;
  uint64_t v21 = sub_22342CE20();
  char v27 = 4;
  uint64_t v20 = sub_22342CE20();
  char v26 = 5;
  uint64_t v19 = sub_22342CE20();
  char v25 = 6;
  uint64_t v18 = sub_22342CE20();
  char v24 = 7;
  uint64_t v17 = sub_22342CE20();
  char v23 = 8;
  uint64_t v11 = sub_22342CE20();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  uint64_t v13 = v21;
  a2[2] = v22;
  a2[3] = v13;
  uint64_t v14 = v19;
  a2[4] = v20;
  a2[5] = v14;
  uint64_t v15 = v17;
  a2[6] = v18;
  a2[7] = v15;
  a2[8] = v11;
  return result;
}

uint64_t getEnumTagSinglePayload for DuplicateStatistics.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DuplicateStatistics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223356C38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateStatistics.CodingKeys()
{
  return &type metadata for DuplicateStatistics.CodingKeys;
}

unint64_t sub_223356C74()
{
  unint64_t result = qword_267FA2988;
  if (!qword_267FA2988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2988);
  }
  return result;
}

unint64_t sub_223356CCC()
{
  unint64_t result = qword_267FA2990;
  if (!qword_267FA2990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2990);
  }
  return result;
}

unint64_t sub_223356D24()
{
  unint64_t result = qword_267FA2998[0];
  if (!qword_267FA2998[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267FA2998);
  }
  return result;
}

unint64_t sub_223356D78(char a1)
{
  unint64_t result = 1684632935;
  switch(a1)
  {
    case 1:
      unint64_t result = 6518387;
      break;
    case 2:
      unint64_t result = 0x615465676E616863;
      break;
    case 3:
      unint64_t result = 0x614E64726F636572;
      break;
    case 4:
      unint64_t result = 0x795464726F636572;
      break;
    case 5:
      unint64_t result = 0x656D614E656E6F7ALL;
      break;
    case 6:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DatabaseRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223356F64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseRecord.CodingKeys()
{
  return &type metadata for DatabaseRecord.CodingKeys;
}

void *sub_223356F9C(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v64 = a2[1];
        *a1 = *a2;
        a1[1] = v64;
        uint64_t v65 = a2[3];
        a1[2] = a2[2];
        a1[3] = v65;
        uint64_t v66 = a2[5];
        uint64_t v67 = a2;
        a1[4] = a2[4];
        a1[5] = v66;
        uint64_t v68 = a2[7];
        a1[6] = a2[6];
        a1[7] = v68;
        uint64_t v69 = a2[8];
        uint64_t v70 = a2[9];
        a1[8] = v69;
        a1[9] = v70;
        uint64_t v71 = v67[11];
        a1[10] = v67[10];
        a1[11] = v71;
        uint64_t v72 = (int *)type metadata accessor for ChatRecord(0);
        uint64_t v73 = v72[10];
        __dstc = (char *)a1 + v73;
        v612 = (char *)v67 + v73;
        uint64_t v74 = sub_22342C130();
        v594 = *(void **)(v74 - 8);
        uint64_t v75 = (unsigned int (*)(char *, uint64_t, uint64_t))v594[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v75(v612, 1, v74))
        {
          uint64_t v76 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dstc, v612, *(void *)(*(void *)(v76 - 8) + 64));
          uint64_t v77 = (char *)a2;
          id v78 = v594;
        }
        else
        {
          id v78 = v594;
          ((void (*)(char *, char *, uint64_t))v594[2])(__dstc, v612, v74);
          ((void (*)(char *, void, uint64_t, uint64_t))v594[7])(__dstc, 0, 1, v74);
          uint64_t v77 = (char *)a2;
        }
        uint64_t v152 = v72[11];
        uint64_t v153 = (char *)a1 + v152;
        char v154 = &v77[v152];
        if (v75(&v77[v152], 1, v74))
        {
          uint64_t v155 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v153, v154, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v78[2])(v153, v154, v74);
          ((void (*)(char *, void, uint64_t, uint64_t))v78[7])(v153, 0, 1, v74);
        }
        uint64_t v165 = v72[12];
        id v166 = (void *)((char *)a1 + v165);
        uint64_t v167 = &v77[v165];
        uint64_t v168 = *((void *)v167 + 1);
        *id v166 = *(void *)v167;
        v166[1] = v168;
        uint64_t v169 = v72[13];
        uint64_t v170 = (char *)a1 + v169;
        uint64_t v171 = &v77[v169];
        v170[8] = v171[8];
        *(void *)uint64_t v170 = *(void *)v171;
        uint64_t v172 = v72[14];
        uint64_t v173 = (char *)a1 + v172;
        uint64_t v174 = &v77[v172];
        *(void *)uint64_t v173 = *(void *)v174;
        v173[8] = v174[8];
        *(void *)((char *)a1 + v72[15]) = *(void *)&v77[v72[15]];
        uint64_t v175 = v72[16];
        uint64_t v176 = (void *)((char *)a1 + v175);
        uint64_t v177 = &v77[v175];
        uint64_t v615 = *((void *)v177 + 1);
        void *v176 = *(void *)v177;
        v176[1] = v615;
        uint64_t v178 = v72[17];
        uint64_t v179 = (void *)((char *)a1 + v178);
        uint64_t v180 = &v77[v178];
        __dstf = (void *)*((void *)v180 + 1);
        *uint64_t v179 = *(void *)v180;
        v179[1] = __dstf;
        uint64_t v181 = v72[18];
        uint64_t v182 = (void *)((char *)a1 + v181);
        unint64_t v183 = &v77[v181];
        v598 = (void *)*((void *)v183 + 1);
        *uint64_t v182 = *(void *)v183;
        v182[1] = v598;
        uint64_t v184 = v72[19];
        uint64_t v185 = (void *)((char *)a1 + v184);
        uint64_t v186 = &v77[v184];
        uint64_t v187 = *((void *)v186 + 1);
        *uint64_t v185 = *(void *)v186;
        v185[1] = v187;
        uint64_t v188 = v77;
        *(void *)((char *)a1 + v72[20]) = *(void *)&v77[v72[20]];
        uint64_t v189 = v72[21];
        uint64_t v190 = (void *)((char *)a1 + v189);
        unint64_t v191 = &v77[v189];
        uint64_t v192 = *((void *)v191 + 1);
        *uint64_t v190 = *(void *)v191;
        v190[1] = v192;
        uint64_t v193 = v72[22];
        uint64_t v194 = (char *)a1 + v193;
        int64_t v195 = &v77[v193];
        *(void *)uint64_t v194 = *(void *)v195;
        v194[8] = v195[8];
        uint64_t v196 = v72[23];
        uint64_t v197 = (char *)a1 + v196;
        uint64_t v198 = &v77[v196];
        *(void *)uint64_t v197 = *(void *)v198;
        v197[8] = v198[8];
        uint64_t v199 = v72[24];
        uint64_t v200 = (void *)((char *)a1 + v199);
        uint64_t v201 = &v77[v199];
        uint64_t v202 = *((void *)v201 + 1);
        *uint64_t v200 = *(void *)v201;
        v200[1] = v202;
        uint64_t v203 = v72[25];
        uint64_t v204 = (char *)a1 + v203;
        uint64_t v205 = &v77[v203];
        v204[8] = v205[8];
        *(void *)uint64_t v204 = *(void *)v205;
        uint64_t v206 = v72[26];
        uint64_t v207 = (char *)a1 + v206;
        uint64_t v208 = &v77[v206];
        *(_OWORD *)uint64_t v207 = *(_OWORD *)v208;
        *((_WORD *)v207 + 8) = *((_WORD *)v208 + 8);
        uint64_t v209 = v72[27];
        uint64_t v210 = (void *)((char *)a1 + v209);
        uint64_t v211 = &v77[v209];
        uint64_t v212 = *((void *)v211 + 1);
        *uint64_t v210 = *(void *)v211;
        v210[1] = v212;
        uint64_t v213 = v72[28];
        unint64_t v214 = (char *)a1 + v213;
        uint64_t v215 = &v77[v213];
        *(void *)unint64_t v214 = *(void *)v215;
        v214[8] = v215[8];
        uint64_t v216 = v72[29];
        char v217 = (void *)((char *)a1 + v216);
        char v218 = &v77[v216];
        uint64_t v219 = *((void *)v218 + 1);
        *char v217 = *(void *)v218;
        v217[1] = v219;
        *(void *)((char *)a1 + v72[30]) = *(void *)((char *)v188 + v72[30]);
        uint64_t v220 = v72[31];
        uint64_t v221 = *(void **)((char *)v188 + v220);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v221 != (void *)1) {
          id v222 = v221;
        }
        *(void *)((char *)a1 + v220) = v221;
        break;
      case 2u:
        type metadata accessor for ItemRecord();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v325 = a2[1];
            *a1 = *a2;
            a1[1] = v325;
            uint64_t v326 = a2[3];
            a1[2] = a2[2];
            a1[3] = v326;
            uint64_t v327 = a2[5];
            long long v328 = a2;
            a1[4] = a2[4];
            a1[5] = v327;
            uint64_t v329 = a2[7];
            a1[6] = a2[6];
            a1[7] = v329;
            uint64_t v330 = a2[8];
            uint64_t v331 = a2[9];
            a1[8] = v330;
            a1[9] = v331;
            uint64_t v332 = v328[11];
            a1[10] = v328[10];
            a1[11] = v332;
            uint64_t v333 = type metadata accessor for MessageRecord();
            uint64_t v334 = *(int *)(v333 + 40);
            v579 = (char *)a1 + v334;
            v583 = (int *)v333;
            v335 = (char *)v328 + v334;
            uint64_t v336 = sub_22342C130();
            v600 = *(void **)(v336 - 8);
            uint64_t v337 = (unsigned int (*)(char *, uint64_t, uint64_t))v600[6];
            uint64_t v338 = v336;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v337(v335, 1, v338))
            {
              uint64_t v339 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v579, v335, *(void *)(*(void *)(v339 - 8) + 64));
              uint64_t v340 = v600;
            }
            else
            {
              uint64_t v340 = v600;
              ((void (*)(char *, char *, uint64_t))v600[2])(v579, v335, v338);
              ((void (*)(char *, void, uint64_t, uint64_t))v600[7])(v579, 0, 1, v338);
            }
            v398 = v583;
            uint64_t v399 = v583[11];
            uint64_t v400 = (char *)a1 + v399;
            v401 = (char *)a2 + v399;
            if (v337((char *)a2 + v399, 1, v338))
            {
              uint64_t v402 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v400, v401, *(void *)(*(void *)(v402 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v340[2])(v400, v401, v338);
              ((void (*)(char *, void, uint64_t, uint64_t))v340[7])(v400, 0, 1, v338);
            }
            uint64_t v411 = v583[12];
            uint64_t v412 = (void *)((char *)a1 + v411);
            v413 = (void *)((char *)a2 + v411);
            uint64_t v414 = v413[1];
            *uint64_t v412 = *v413;
            v412[1] = v414;
            *((unsigned char *)a1 + v583[13]) = *((unsigned char *)a2 + v583[13]);
            uint64_t v415 = v583[14];
            uint64_t v416 = (char *)a1 + v415;
            v417 = (char *)a2 + v415;
            swift_bridgeObjectRetain();
            if (v337(v417, 1, v338))
            {
              uint64_t v418 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v416, v417, *(void *)(*(void *)(v418 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v340[2])(v416, v417, v338);
              ((void (*)(char *, void, uint64_t, uint64_t))v340[7])(v416, 0, 1, v338);
            }
            uint64_t v423 = v583[15];
            v424 = (char *)a1 + v423;
            v425 = (char *)a2 + v423;
            if (v337((char *)a2 + v423, 1, v338))
            {
              uint64_t v426 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v424, v425, *(void *)(*(void *)(v426 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v340[2])(v424, v425, v338);
              ((void (*)(char *, void, uint64_t, uint64_t))v340[7])(v424, 0, 1, v338);
            }
            uint64_t v431 = v583[16];
            v432 = (char *)a1 + v431;
            uint64_t v433 = (char *)a2 + v431;
            if (v337((char *)a2 + v431, 1, v338))
            {
              uint64_t v434 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v432, v433, *(void *)(*(void *)(v434 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v340[2])(v432, v433, v338);
              ((void (*)(char *, void, uint64_t, uint64_t))v340[7])(v432, 0, 1, v338);
            }
            uint64_t v439 = v583[17];
            v440 = (char *)a1 + v439;
            unint64_t v441 = (char *)a2 + v439;
            if (v337((char *)a2 + v439, 1, v338))
            {
              uint64_t v442 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v440, v441, *(void *)(*(void *)(v442 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v340[2])(v440, v441, v338);
              ((void (*)(char *, void, uint64_t, uint64_t))v340[7])(v440, 0, 1, v338);
            }
            uint64_t v451 = v583[18];
            v452 = (char *)a1 + v451;
            v453 = (char *)a2 + v451;
            uint64_t v454 = *(void *)((char *)a2 + v451 + 8);
            uint64_t v589 = v338;
            if (v454 == 1)
            {
              long long v455 = *((_OWORD *)v453 + 1);
              *(_OWORD *)v452 = *(_OWORD *)v453;
              *((_OWORD *)v452 + 1) = v455;
              *((void *)v452 + 4) = *((void *)v453 + 4);
            }
            else
            {
              *(void *)v452 = *(void *)v453;
              *((void *)v452 + 1) = v454;
              v456 = v453 + 16;
              unint64_t v457 = *((void *)v453 + 3);
              swift_bridgeObjectRetain();
              if (v457 >> 60 == 15)
              {
                *((_OWORD *)v452 + 1) = *v456;
              }
              else
              {
                uint64_t v510 = *(void *)v456;
                sub_22331E684(v510, v457);
                *((void *)v452 + 2) = v510;
                *((void *)v452 + 3) = v457;
              }
              uint64_t v511 = (void *)*((void *)v453 + 4);
              *((void *)v452 + 4) = v511;
              id v512 = v511;
            }
            uint64_t v513 = v583[19];
            uint64_t v514 = (char *)a1 + v513;
            uint64_t v515 = (char *)a2 + v513;
            *(void *)uint64_t v514 = *(void *)v515;
            v514[8] = v515[8];
            uint64_t v516 = v583[20];
            v517 = (char *)a1 + v516;
            v518 = (char *)a2 + v516;
            v517[8] = v518[8];
            *(void *)v517 = *(void *)v518;
            uint64_t v519 = v583[21];
            id v520 = (char *)a1 + v519;
            id v521 = (char *)a2 + v519;
            *(void *)id v520 = *(void *)v521;
            v520[8] = v521[8];
            uint64_t v522 = v583[22];
            id v523 = (void *)((char *)a1 + v522);
            uint64_t v524 = (void *)((char *)a2 + v522);
            uint64_t v525 = v524[1];
            *id v523 = *v524;
            v523[1] = v525;
            uint64_t v526 = v583[23];
            uint64_t v527 = (char *)a1 + v526;
            v528 = (char *)a2 + v526;
            *(void *)uint64_t v527 = *(void *)v528;
            v527[8] = v528[8];
            uint64_t v529 = v583[24];
            v530 = (void *)((char *)a1 + v529);
            v531 = (void *)((char *)a2 + v529);
            uint64_t v532 = v531[1];
            void *v530 = *v531;
            v530[1] = v532;
            uint64_t v533 = v583[25];
            v534 = (void *)((char *)a1 + v533);
            v535 = (void *)((char *)a2 + v533);
            uint64_t v536 = v535[1];
            void *v534 = *v535;
            v534[1] = v536;
            uint64_t v537 = v583[26];
            v538 = (char *)a1 + v537;
            v539 = (char *)a2 + v537;
            *(void *)v538 = *(void *)v539;
            v538[8] = v539[8];
            uint64_t v540 = v583[27];
            v541 = (void *)((char *)a1 + v540);
            uint64_t v542 = (void *)((char *)a2 + v540);
            uint64_t v543 = v542[1];
            void *v541 = *v542;
            v541[1] = v543;
            uint64_t v544 = v583[28];
            v545 = (void *)((char *)a1 + v544);
            v546 = (void *)((char *)a2 + v544);
            uint64_t v547 = v546[1];
            void *v545 = *v546;
            v545[1] = v547;
            uint64_t v548 = v583[29];
            v549 = (char *)a1 + v548;
            v550 = (void *)((char *)a2 + v548);
            unint64_t v551 = *(void *)((char *)a2 + v548 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v551 >> 60 == 15)
            {
              *(_OWORD *)v549 = *(_OWORD *)v550;
            }
            else
            {
              uint64_t v552 = *v550;
              sub_22331E684(*v550, v551);
              *(void *)v549 = v552;
              *((void *)v549 + 1) = v551;
            }
            uint64_t v501 = v589;
            v509 = v600;
            uint64_t v553 = v583[30];
            uint64_t v259 = (char *)a2;
            v554 = (void *)((char *)a1 + v553);
            v555 = (void *)((char *)a2 + v553);
            uint64_t v556 = v555[1];
            void *v554 = *v555;
            v554[1] = v556;
            uint64_t v557 = v583[31];
            uint64_t v507 = (char *)a1 + v557;
            v508 = (char *)a2 + v557;
            swift_bridgeObjectRetain();
            if (!v337(v508, 1, v589)) {
              goto LABEL_156;
            }
            goto LABEL_155;
          case 2u:
          case 3u:
          case 4u:
            uint64_t v23 = a2[1];
            *a1 = *a2;
            a1[1] = v23;
            uint64_t v24 = a2[3];
            a1[2] = a2[2];
            a1[3] = v24;
            uint64_t v25 = a2[5];
            a1[4] = a2[4];
            a1[5] = v25;
            uint64_t v26 = a2[7];
            a1[6] = a2[6];
            a1[7] = v26;
            uint64_t v27 = a2[9];
            a1[8] = a2[8];
            a1[9] = v27;
            uint64_t v28 = a2[11];
            a1[10] = a2[10];
            a1[11] = v28;
            uint64_t v29 = type metadata accessor for ActionRecord();
            uint64_t v30 = *(int *)(v29 + 40);
            v584 = (char *)a1 + v30;
            v586 = (int *)v29;
            char v31 = (char *)a2 + v30;
            uint64_t v32 = sub_22342C130();
            v580 = *(void **)(v32 - 8);
            uint64_t v33 = (unsigned int (*)(char *, uint64_t, uint64_t))v580[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v591 = v33;
            if (v33(v31, 1, v32))
            {
              uint64_t v34 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v584, v31, *(void *)(*(void *)(v34 - 8) + 64));
              int64_t v35 = v580;
            }
            else
            {
              int64_t v35 = v580;
              ((void (*)(char *, char *, uint64_t))v580[2])(v584, v31, v32);
              ((void (*)(char *, void, uint64_t, uint64_t))v580[7])(v584, 0, 1, v32);
            }
            uint64_t v261 = v586;
            uint64_t v262 = v586[11];
            uint64_t v259 = (char *)a2;
            uint64_t v263 = (char *)a1 + v262;
            v264 = (char *)a2 + v262;
            if (v591((char *)a2 + v262, 1, v32))
            {
              uint64_t v265 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v35[2])(v263, v264, v32);
              ((void (*)(char *, void, uint64_t, uint64_t))v35[7])(v263, 0, 1, v32);
            }
            uint64_t v266 = v586[12];
            uint64_t v267 = (void *)((char *)a1 + v266);
            v268 = (void *)((char *)a2 + v266);
            uint64_t v269 = v268[1];
            *uint64_t v267 = *v268;
            v267[1] = v269;
            uint64_t v270 = v586[13];
            uint64_t v271 = (void *)((char *)a1 + v270);
            uint64_t v272 = (void *)((char *)a2 + v270);
            uint64_t v273 = v272[1];
            *uint64_t v271 = *v272;
            v271[1] = v273;
            *((unsigned char *)a1 + v586[14]) = *((unsigned char *)a2 + v586[14]);
            *((unsigned char *)a1 + v586[15]) = *((unsigned char *)a2 + v586[15]);
            uint64_t v274 = v586[16];
            uint64_t v275 = (char *)a1 + v274;
            uint64_t v276 = (char *)a2 + v274;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v591(v276, 1, v32))
            {
              uint64_t v277 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v275, v276, *(void *)(*(void *)(v277 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v35[2])(v275, v276, v32);
              ((void (*)(char *, void, uint64_t, uint64_t))v35[7])(v275, 0, 1, v32);
            }
            uint64_t v278 = v586[17];
            uint64_t v279 = (void *)((char *)a1 + v278);
            long long v280 = (void *)((char *)a2 + v278);
            uint64_t v281 = v280[1];
            *uint64_t v279 = *v280;
            v279[1] = v281;
            uint64_t v282 = v586[18];
            uint64_t v283 = (void *)((char *)a1 + v282);
            id v284 = (void *)((char *)a2 + v282);
            uint64_t v285 = v284[1];
            *uint64_t v283 = *v284;
            v283[1] = v285;
            uint64_t v286 = v586[19];
            id v287 = (void *)((char *)a1 + v286);
            uint64_t v288 = (void *)((char *)a2 + v286);
            uint64_t v289 = v288[1];
            *id v287 = *v288;
            v287[1] = v289;
            uint64_t v290 = v586[20];
            uint64_t v291 = (char *)a1 + v290;
            v292 = (char *)a2 + v290;
            v293 = *(void **)((char *)a2 + v290 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v293 == (void *)1)
            {
              long long v294 = *((_OWORD *)v292 + 1);
              *(_OWORD *)uint64_t v291 = *(_OWORD *)v292;
              *((_OWORD *)v291 + 1) = v294;
              *((_OWORD *)v291 + 2) = *((_OWORD *)v292 + 2);
              *((void *)v291 + 6) = *((void *)v292 + 6);
            }
            else
            {
              *uint64_t v291 = *v292;
              uint64_t v295 = (void *)*((void *)v292 + 2);
              v296 = (void *)*((void *)v292 + 3);
              *((void *)v291 + 1) = v293;
              *((void *)v291 + 2) = v295;
              v297 = (void *)*((void *)v292 + 4);
              uint64_t v298 = (void *)*((void *)v292 + 5);
              *((void *)v291 + 3) = v296;
              *((void *)v291 + 4) = v297;
              uint64_t v299 = (void *)*((void *)v292 + 6);
              *((void *)v291 + 5) = v298;
              *((void *)v291 + 6) = v299;
              id v300 = v293;
              id v301 = v295;
              id v302 = v296;
              id v303 = v297;
              id v304 = v298;
              uint64_t v259 = (char *)a2;
              id v305 = v299;
            }
            uint64_t v306 = v586[21];
            uint64_t v307 = (char *)a1 + v306;
            v308 = &v259[v306];
            v309 = *(void **)v308;
            if (*(void *)v308 == 1) {
              goto LABEL_84;
            }
            goto LABEL_100;
          case 5u:
          case 6u:
            uint64_t v245 = a2[1];
            *a1 = *a2;
            a1[1] = v245;
            uint64_t v246 = a2[3];
            a1[2] = a2[2];
            a1[3] = v246;
            uint64_t v247 = a2[5];
            long long v248 = a2;
            a1[4] = a2[4];
            a1[5] = v247;
            uint64_t v249 = a2[7];
            a1[6] = a2[6];
            a1[7] = v249;
            uint64_t v250 = a2[8];
            uint64_t v251 = a2[9];
            a1[8] = v250;
            a1[9] = v251;
            uint64_t v252 = v248[11];
            a1[10] = v248[10];
            a1[11] = v252;
            uint64_t v253 = type metadata accessor for ActionRecord();
            uint64_t v254 = *(int *)(v253 + 40);
            v585 = (char *)a1 + v254;
            v587 = (int *)v253;
            id v255 = (char *)v248 + v254;
            uint64_t v256 = sub_22342C130();
            v581 = *(void **)(v256 - 8);
            uint64_t v257 = (unsigned int (*)(char *, uint64_t, uint64_t))v581[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v257(v255, 1, v256))
            {
              uint64_t v258 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v585, v255, *(void *)(*(void *)(v258 - 8) + 64));
              uint64_t v259 = (char *)a2;
              v260 = v581;
            }
            else
            {
              v260 = v581;
              ((void (*)(char *, char *, uint64_t))v581[2])(v585, v255, v256);
              ((void (*)(char *, void, uint64_t, uint64_t))v581[7])(v585, 0, 1, v256);
              uint64_t v259 = (char *)a2;
            }
            uint64_t v261 = v587;
            uint64_t v341 = v587[11];
            v342 = (char *)a1 + v341;
            v343 = &v259[v341];
            v601 = v257;
            if (v257(&v259[v341], 1, v256))
            {
              uint64_t v344 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v342, v343, *(void *)(*(void *)(v344 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v260[2])(v342, v343, v256);
              ((void (*)(char *, void, uint64_t, uint64_t))v260[7])(v342, 0, 1, v256);
            }
            uint64_t v345 = v587[12];
            v346 = (void *)((char *)a1 + v345);
            v347 = &v259[v345];
            uint64_t v348 = *((void *)v347 + 1);
            void *v346 = *(void *)v347;
            v346[1] = v348;
            uint64_t v349 = v587[13];
            v350 = (void *)((char *)a1 + v349);
            id v351 = &v259[v349];
            uint64_t v352 = *((void *)v351 + 1);
            void *v350 = *(void *)v351;
            v350[1] = v352;
            *((unsigned char *)a1 + v587[14]) = v259[v587[14]];
            *((unsigned char *)a1 + v587[15]) = v259[v587[15]];
            uint64_t v353 = v587[16];
            id v354 = (char *)a1 + v353;
            id v355 = &v259[v353];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v601(v355, 1, v256))
            {
              uint64_t v356 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v354, v355, *(void *)(*(void *)(v356 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v260[2])(v354, v355, v256);
              ((void (*)(char *, void, uint64_t, uint64_t))v260[7])(v354, 0, 1, v256);
            }
            uint64_t v357 = v587[17];
            long long v358 = (void *)((char *)a1 + v357);
            v359 = &v259[v357];
            uint64_t v360 = *((void *)v359 + 1);
            *long long v358 = *(void *)v359;
            v358[1] = v360;
            uint64_t v361 = v587[18];
            id v362 = (void *)((char *)a1 + v361);
            id v363 = &v259[v361];
            uint64_t v364 = *((void *)v363 + 1);
            *id v362 = *(void *)v363;
            v362[1] = v364;
            uint64_t v365 = v587[19];
            uint64_t v366 = (void *)((char *)a1 + v365);
            v367 = &v259[v365];
            uint64_t v368 = *((void *)v367 + 1);
            *uint64_t v366 = *(void *)v367;
            v366[1] = v368;
            uint64_t v369 = v587[20];
            uint64_t v370 = (char *)a1 + v369;
            v371 = &v259[v369];
            v372 = *(void **)&v259[v369 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v372 == (void *)1)
            {
              long long v373 = *((_OWORD *)v371 + 1);
              *(_OWORD *)uint64_t v370 = *(_OWORD *)v371;
              *((_OWORD *)v370 + 1) = v373;
              *((_OWORD *)v370 + 2) = *((_OWORD *)v371 + 2);
              *((void *)v370 + 6) = *((void *)v371 + 6);
            }
            else
            {
              *uint64_t v370 = *v371;
              uint64_t v374 = (void *)*((void *)v371 + 2);
              v375 = (void *)*((void *)v371 + 3);
              *((void *)v370 + 1) = v372;
              *((void *)v370 + 2) = v374;
              v376 = (void *)*((void *)v371 + 4);
              uint64_t v377 = (void *)*((void *)v371 + 5);
              *((void *)v370 + 3) = v375;
              *((void *)v370 + 4) = v376;
              uint64_t v378 = (void *)*((void *)v371 + 6);
              *((void *)v370 + 5) = v377;
              *((void *)v370 + 6) = v378;
              id v379 = v372;
              id v380 = v374;
              id v381 = v375;
              id v382 = v376;
              id v383 = v377;
              uint64_t v259 = (char *)a2;
              id v384 = v378;
            }
            uint64_t v385 = v587[21];
            uint64_t v307 = (char *)a1 + v385;
            v308 = &v259[v385];
            v309 = *(void **)v308;
            if (*(void *)v308 == 1)
            {
LABEL_84:
              long long v310 = *((_OWORD *)v308 + 1);
              *(_OWORD *)uint64_t v307 = *(_OWORD *)v308;
              *((_OWORD *)v307 + 1) = v310;
            }
            else
            {
LABEL_100:
              uint64_t v386 = (void *)*((void *)v308 + 1);
              v387 = (void *)*((void *)v308 + 2);
              *(void *)uint64_t v307 = v309;
              *((void *)v307 + 1) = v386;
              v388 = (void *)*((void *)v308 + 3);
              *((void *)v307 + 2) = v387;
              *((void *)v307 + 3) = v388;
              id v389 = v309;
              id v390 = v386;
              id v391 = v387;
              id v392 = v388;
            }
            uint64_t v393 = v261[22];
            break;
          default:
            uint64_t v311 = a2[1];
            uint64_t v312 = a2;
            *a1 = *a2;
            a1[1] = v311;
            uint64_t v313 = a2[3];
            a1[2] = a2[2];
            a1[3] = v313;
            uint64_t v314 = a2[5];
            a1[4] = a2[4];
            a1[5] = v314;
            uint64_t v315 = a2[7];
            a1[6] = a2[6];
            a1[7] = v315;
            uint64_t v316 = a2[8];
            uint64_t v317 = a2[9];
            a1[8] = v316;
            a1[9] = v317;
            uint64_t v318 = v312[11];
            a1[10] = v312[10];
            a1[11] = v318;
            v599 = (int *)type metadata accessor for MessageRecord();
            uint64_t v319 = v599[10];
            v582 = (char *)a1 + v319;
            v320 = (char *)v312 + v319;
            uint64_t v321 = sub_22342C130();
            uint64_t v588 = *(void *)(v321 - 8);
            id v322 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v588 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v322(v320, 1, v321))
            {
              uint64_t v323 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v582, v320, *(void *)(*(void *)(v323 - 8) + 64));
              uint64_t v324 = v588;
            }
            else
            {
              uint64_t v324 = v588;
              (*(void (**)(char *, char *, uint64_t))(v588 + 16))(v582, v320, v321);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v588 + 56))(v582, 0, 1, v321);
            }
            uint64_t v394 = v599[11];
            v395 = (char *)a1 + v394;
            uint64_t v396 = (char *)a2 + v394;
            if (v322((char *)a2 + v394, 1, v321))
            {
              uint64_t v397 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v395, v396, *(void *)(*(void *)(v397 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v324 + 16))(v395, v396, v321);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v324 + 56))(v395, 0, 1, v321);
            }
            uint64_t v403 = v599[12];
            v404 = (void *)((char *)a1 + v403);
            v405 = (void *)((char *)a2 + v403);
            uint64_t v406 = v405[1];
            void *v404 = *v405;
            v404[1] = v406;
            *((unsigned char *)a1 + v599[13]) = *((unsigned char *)a2 + v599[13]);
            uint64_t v407 = v599[14];
            v408 = (char *)a1 + v407;
            uint64_t v409 = (char *)a2 + v407;
            swift_bridgeObjectRetain();
            if (v322(v409, 1, v321))
            {
              uint64_t v410 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v408, v409, *(void *)(*(void *)(v410 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v324 + 16))(v408, v409, v321);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v324 + 56))(v408, 0, 1, v321);
            }
            uint64_t v419 = v599[15];
            v420 = (char *)a1 + v419;
            v421 = (char *)a2 + v419;
            if (v322((char *)a2 + v419, 1, v321))
            {
              uint64_t v422 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v420, v421, *(void *)(*(void *)(v422 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v324 + 16))(v420, v421, v321);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v324 + 56))(v420, 0, 1, v321);
            }
            uint64_t v427 = v599[16];
            v428 = (char *)a1 + v427;
            v429 = (char *)a2 + v427;
            if (v322((char *)a2 + v427, 1, v321))
            {
              uint64_t v430 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v428, v429, *(void *)(*(void *)(v430 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v324 + 16))(v428, v429, v321);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v324 + 56))(v428, 0, 1, v321);
            }
            uint64_t v435 = v599[17];
            v436 = (char *)a1 + v435;
            uint64_t v437 = (char *)a2 + v435;
            if (v322((char *)a2 + v435, 1, v321))
            {
              uint64_t v438 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v436, v437, *(void *)(*(void *)(v438 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v324 + 16))(v436, v437, v321);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v324 + 56))(v436, 0, 1, v321);
            }
            uint64_t v443 = v599[18];
            v444 = (char *)a1 + v443;
            v445 = (char *)a2 + v443;
            uint64_t v446 = *(void *)((char *)a2 + v443 + 8);
            if (v446 == 1)
            {
              uint64_t v447 = v321;
              long long v448 = *((_OWORD *)v445 + 1);
              *(_OWORD *)v444 = *(_OWORD *)v445;
              *((_OWORD *)v444 + 1) = v448;
              *((void *)v444 + 4) = *((void *)v445 + 4);
            }
            else
            {
              uint64_t v447 = v321;
              *(void *)v444 = *(void *)v445;
              *((void *)v444 + 1) = v446;
              v449 = v445 + 16;
              unint64_t v450 = *((void *)v445 + 3);
              swift_bridgeObjectRetain();
              if (v450 >> 60 == 15)
              {
                *((_OWORD *)v444 + 1) = *v449;
              }
              else
              {
                uint64_t v458 = *(void *)v449;
                sub_22331E684(v458, v450);
                *((void *)v444 + 2) = v458;
                *((void *)v444 + 3) = v450;
              }
              long long v459 = (void *)*((void *)v445 + 4);
              *((void *)v444 + 4) = v459;
              id v460 = v459;
            }
            uint64_t v461 = v599[19];
            id v462 = (char *)a1 + v461;
            uint64_t v463 = (char *)a2 + v461;
            *(void *)id v462 = *(void *)v463;
            v462[8] = v463[8];
            uint64_t v464 = v599[20];
            v465 = (char *)a1 + v464;
            uint64_t v466 = (char *)a2 + v464;
            v465[8] = v466[8];
            *(void *)v465 = *(void *)v466;
            uint64_t v467 = v599[21];
            v468 = (char *)a1 + v467;
            uint64_t v469 = (char *)a2 + v467;
            *(void *)v468 = *(void *)v469;
            v468[8] = v469[8];
            uint64_t v470 = v599[22];
            v471 = (void *)((char *)a1 + v470);
            uint64_t v472 = (void *)((char *)a2 + v470);
            uint64_t v473 = v472[1];
            void *v471 = *v472;
            v471[1] = v473;
            uint64_t v474 = v599[23];
            uint64_t v475 = (char *)a1 + v474;
            uint64_t v476 = (char *)a2 + v474;
            *(void *)uint64_t v475 = *(void *)v476;
            v475[8] = v476[8];
            uint64_t v477 = v599[24];
            v478 = (void *)((char *)a1 + v477);
            uint64_t v479 = (void *)((char *)a2 + v477);
            uint64_t v480 = v479[1];
            void *v478 = *v479;
            v478[1] = v480;
            uint64_t v481 = v599[25];
            uint64_t v482 = (void *)((char *)a1 + v481);
            uint64_t v483 = (void *)((char *)a2 + v481);
            uint64_t v484 = v483[1];
            *uint64_t v482 = *v483;
            v482[1] = v484;
            uint64_t v485 = v599[26];
            uint64_t v486 = (char *)a1 + v485;
            uint64_t v487 = (char *)a2 + v485;
            *(void *)uint64_t v486 = *(void *)v487;
            v486[8] = v487[8];
            uint64_t v488 = v599[27];
            v489 = (void *)((char *)a1 + v488);
            uint64_t v490 = (void *)((char *)a2 + v488);
            uint64_t v491 = v490[1];
            void *v489 = *v490;
            v489[1] = v491;
            uint64_t v492 = v599[28];
            uint64_t v493 = (void *)((char *)a1 + v492);
            uint64_t v494 = (void *)((char *)a2 + v492);
            uint64_t v495 = v494[1];
            *uint64_t v493 = *v494;
            v493[1] = v495;
            uint64_t v496 = v599[29];
            uint64_t v497 = (char *)a1 + v496;
            uint64_t v498 = (void *)((char *)a2 + v496);
            unint64_t v499 = *(void *)((char *)a2 + v496 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v499 >> 60 == 15)
            {
              *(_OWORD *)uint64_t v497 = *(_OWORD *)v498;
            }
            else
            {
              uint64_t v500 = *v498;
              sub_22331E684(*v498, v499);
              *(void *)uint64_t v497 = v500;
              *((void *)v497 + 1) = v499;
            }
            uint64_t v501 = v447;
            v398 = v599;
            uint64_t v502 = v599[30];
            uint64_t v259 = (char *)a2;
            uint64_t v503 = (void *)((char *)a1 + v502);
            v504 = (void *)((char *)a2 + v502);
            uint64_t v505 = v504[1];
            *uint64_t v503 = *v504;
            v503[1] = v505;
            uint64_t v506 = v599[31];
            uint64_t v507 = (char *)a1 + v506;
            v508 = (char *)a2 + v506;
            swift_bridgeObjectRetain();
            if (v322(v508, 1, v501))
            {
LABEL_155:
              uint64_t v558 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v507, v508, *(void *)(*(void *)(v558 - 8) + 64));
            }
            else
            {
              v509 = (void *)v588;
LABEL_156:
              ((void (*)(char *, char *, uint64_t))v509[2])(v507, v508, v501);
              ((void (*)(char *, void, uint64_t, uint64_t))v509[7])(v507, 0, 1, v501);
            }
            uint64_t v559 = v398[32];
            uint64_t v560 = (void *)((char *)a1 + v559);
            v561 = &v259[v559];
            uint64_t v562 = *((void *)v561 + 1);
            *uint64_t v560 = *(void *)v561;
            v560[1] = v562;
            *((unsigned char *)a1 + v398[33]) = v259[v398[33]];
            uint64_t v563 = v398[34];
            v564 = (char *)a1 + v563;
            v565 = &v259[v563];
            v566 = *(void **)&v259[v563];
            swift_bridgeObjectRetain();
            if (v566 == (void *)1)
            {
              long long v567 = *((_OWORD *)v565 + 1);
              *(_OWORD *)v564 = *(_OWORD *)v565;
              *((_OWORD *)v564 + 1) = v567;
            }
            else
            {
              v568 = (void *)*((void *)v565 + 1);
              v569 = (void *)*((void *)v565 + 2);
              *(void *)v564 = v566;
              *((void *)v564 + 1) = v568;
              v570 = (void *)*((void *)v565 + 3);
              *((void *)v564 + 2) = v569;
              *((void *)v564 + 3) = v570;
              id v571 = v566;
              id v572 = v568;
              id v573 = v569;
              id v574 = v570;
            }
            uint64_t v393 = v398[35];
            break;
        }
        v575 = (void *)((char *)a1 + v393);
        v576 = &v259[v393];
        uint64_t v577 = *((void *)v576 + 1);
        void *v575 = *(void *)v576;
        v575[1] = v577;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v36 = a2[1];
        *a1 = *a2;
        a1[1] = v36;
        uint64_t v37 = a2[3];
        a1[2] = a2[2];
        a1[3] = v37;
        uint64_t v38 = a2[5];
        uint64_t v39 = a2;
        a1[4] = a2[4];
        a1[5] = v38;
        uint64_t v40 = a2[7];
        a1[6] = a2[6];
        a1[7] = v40;
        uint64_t v41 = a2[9];
        a1[8] = a2[8];
        a1[9] = v41;
        uint64_t v42 = a2[10];
        uint64_t v43 = a2[11];
        a1[10] = v42;
        a1[11] = v43;
        uint64_t v44 = type metadata accessor for AttachmentRecord();
        uint64_t v45 = *(int *)(v44 + 40);
        v592 = (char *)a1 + v45;
        __dsta = (char *)v39 + v45;
        v610 = (int *)v44;
        uint64_t v46 = sub_22342C130();
        uint64_t v47 = *(void *)(v46 - 8);
        uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v48(__dsta, 1, v46))
        {
          uint64_t v49 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v592, __dsta, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v592, __dsta, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v592, 0, 1, v46);
        }
        char v106 = a2;
        uint64_t v107 = v610;
        uint64_t v108 = v47;
        uint64_t v109 = v610[11];
        uint64_t v110 = (char *)a1 + v109;
        uint64_t v111 = (char *)a2 + v109;
        if (v48((char *)a2 + v109, 1, v46))
        {
          uint64_t v112 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v110, v111, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v110, 0, 1, v46);
        }
        uint64_t v118 = v610[12];
        uint64_t v119 = (void *)((char *)a1 + v118);
        uint64_t v120 = (void *)((char *)a2 + v118);
        uint64_t v121 = v120[1];
        *uint64_t v119 = *v120;
        v119[1] = v121;
        uint64_t v122 = v610[13];
        uint64_t v123 = (char *)a1 + v122;
        uint64_t v124 = (void *)((char *)a2 + v122);
        uint64_t v125 = *(void *)((char *)a2 + v122 + 192);
        swift_bridgeObjectRetain();
        if (v125)
        {
          *uint64_t v123 = *(unsigned char *)v124;
          *((void *)v123 + 1) = v124[1];
          v123[16] = *((unsigned char *)v124 + 16);
          uint64_t v126 = v124[4];
          *((void *)v123 + 3) = v124[3];
          *((void *)v123 + 4) = v126;
          uint64_t v127 = v124[6];
          *((void *)v123 + 5) = v124[5];
          *((void *)v123 + 6) = v127;
          v123[64] = *((unsigned char *)v124 + 64);
          *((void *)v123 + 7) = v124[7];
          uint64_t v128 = v124[10];
          *((void *)v123 + 9) = v124[9];
          *((void *)v123 + 10) = v128;
          v123[88] = *((unsigned char *)v124 + 88);
          uint64_t v129 = v124[13];
          *((void *)v123 + 12) = v124[12];
          *((void *)v123 + 13) = v129;
          uint64_t v130 = v124[15];
          *((void *)v123 + 14) = v124[14];
          *((void *)v123 + 15) = v130;
          v123[128] = *((unsigned char *)v124 + 128);
          uint64_t v131 = v124[18];
          *((void *)v123 + 17) = v124[17];
          *((void *)v123 + 18) = v131;
          v123[160] = *((unsigned char *)v124 + 160);
          *((void *)v123 + 19) = v124[19];
          v123[176] = *((unsigned char *)v124 + 176);
          *((void *)v123 + 21) = v124[21];
          *((void *)v123 + 23) = v124[23];
          *((void *)v123 + 24) = v125;
          uint64_t v132 = v124[26];
          *((void *)v123 + 25) = v124[25];
          *((void *)v123 + 26) = v132;
          uint64_t v133 = v124[28];
          *((void *)v123 + 27) = v124[27];
          *((void *)v123 + 28) = v133;
          v597 = v124 + 29;
          unint64_t v134 = v124[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v134 >> 60 == 15)
          {
            *(_OWORD *)(v123 + 232) = *(_OWORD *)v597;
          }
          else
          {
            uint64_t v236 = *v597;
            sub_22331E684(*v597, v134);
            *((void *)v123 + 29) = v236;
            *((void *)v123 + 30) = v134;
          }
          char v106 = a2;
          uint64_t v237 = v124 + 31;
          unint64_t v238 = v124[32];
          if (v238 >> 60 == 15)
          {
            *(_OWORD *)(v123 + 248) = *(_OWORD *)v237;
          }
          else
          {
            uint64_t v239 = *v237;
            sub_22331E684(*v237, v124[32]);
            *((void *)v123 + 31) = v239;
            *((void *)v123 + 32) = v238;
          }
          uint64_t v240 = v124 + 33;
          unint64_t v241 = v124[34];
          if (v241 >> 60 == 15)
          {
            *(_OWORD *)(v123 + 264) = *(_OWORD *)v240;
          }
          else
          {
            uint64_t v242 = *v240;
            sub_22331E684(*v240, v124[34]);
            *((void *)v123 + 33) = v242;
            *((void *)v123 + 34) = v241;
          }
          uint64_t v107 = v610;
          *((void *)v123 + 35) = v124[35];
          v123[288] = *((unsigned char *)v124 + 288);
          uint64_t v243 = v124[38];
          *((void *)v123 + 37) = v124[37];
          *((void *)v123 + 38) = v243;
          *((void *)v123 + 39) = v124[39];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v123, v124, 0x140uLL);
        }
        uint64_t v244 = v107[14];
        id v144 = (char *)a1 + v244;
        uint64_t v145 = (char *)v106 + v244;
        unint64_t v146 = *((void *)v145 + 1);
        if (v146 >> 60 != 15) {
          goto LABEL_36;
        }
        *(_OWORD *)id v144 = *(_OWORD *)v145;
        break;
      case 4u:
        uint64_t v50 = a2[1];
        *a1 = *a2;
        a1[1] = v50;
        uint64_t v51 = a2[3];
        a1[2] = a2[2];
        a1[3] = v51;
        uint64_t v52 = a2[5];
        char v53 = a2;
        a1[4] = a2[4];
        a1[5] = v52;
        uint64_t v54 = a2[7];
        a1[6] = a2[6];
        a1[7] = v54;
        uint64_t v55 = a2[8];
        uint64_t v56 = a2[9];
        a1[8] = v55;
        a1[9] = v56;
        uint64_t v57 = v53[11];
        a1[10] = v53[10];
        a1[11] = v57;
        uint64_t v58 = type metadata accessor for RecoverableMessageRecord();
        uint64_t v59 = *(int *)(v58 + 40);
        __dstb = (char *)a1 + v59;
        v611 = (int *)v58;
        v593 = (char *)v53 + v59;
        uint64_t v60 = sub_22342C130();
        uint64_t v61 = *(void *)(v60 - 8);
        uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v62(v593, 1, v60))
        {
          uint64_t v63 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dstb, v593, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dstb, v593, v60);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(__dstb, 0, 1, v60);
        }
        uint64_t v113 = v61;
        uint64_t v114 = v611[11];
        uint64_t v115 = (char *)a1 + v114;
        uint64_t v116 = (char *)a2 + v114;
        if (v62((char *)a2 + v114, 1, v60))
        {
          uint64_t v117 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v115, v116, v60);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v115, 0, 1, v60);
        }
        uint64_t v135 = v611[12];
        uint64_t v136 = (void *)((char *)a1 + v135);
        uint64_t v137 = (void *)((char *)a2 + v135);
        uint64_t v138 = v137[1];
        *uint64_t v136 = *v137;
        v136[1] = v138;
        uint64_t v139 = v611[13];
        uint64_t v140 = (char *)a1 + v139;
        unint64_t v141 = (char *)a2 + v139;
        swift_bridgeObjectRetain();
        if (v62(v141, 1, v60))
        {
          uint64_t v142 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v140, v141, v60);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v140, 0, 1, v60);
        }
        uint64_t v143 = v611[14];
        id v144 = (char *)a1 + v143;
        uint64_t v145 = (char *)a2 + v143;
        unint64_t v146 = *((void *)v145 + 1);
        if (v146 >> 60 == 15)
        {
          *(_OWORD *)id v144 = *(_OWORD *)v145;
        }
        else
        {
LABEL_36:
          uint64_t v147 = *(void *)v145;
          sub_22331E684(*(void *)v145, *((void *)v145 + 1));
          *(void *)id v144 = v147;
          *((void *)v144 + 1) = v146;
        }
        break;
      case 5u:
        uint64_t v79 = a2[1];
        *a1 = *a2;
        a1[1] = v79;
        uint64_t v80 = a2[3];
        a1[2] = a2[2];
        a1[3] = v80;
        uint64_t v81 = a2[5];
        uint64_t v82 = a2;
        a1[4] = a2[4];
        a1[5] = v81;
        uint64_t v83 = a2[7];
        a1[6] = a2[6];
        a1[7] = v83;
        uint64_t v84 = a2[8];
        uint64_t v85 = a2[9];
        a1[8] = v84;
        a1[9] = v85;
        uint64_t v86 = v82[11];
        a1[10] = v82[10];
        a1[11] = v86;
        uint64_t updated = type metadata accessor for MessageUpdateRecord();
        uint64_t v88 = *(int *)(updated + 40);
        v595 = (char *)a1 + v88;
        __dstd = (int *)updated;
        v613 = (char *)v82 + v88;
        uint64_t v89 = sub_22342C130();
        uint64_t v90 = *(void *)(v89 - 8);
        uint64_t v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v91(v613, 1, v89))
        {
          uint64_t v92 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v595, v613, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v595, v613, v89);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v595, 0, 1, v89);
        }
        uint64_t v156 = __dstd[11];
        uint64_t v157 = (char *)a1 + v156;
        uint64_t v158 = (char *)a2 + v156;
        if (v91((char *)a2 + v156, 1, v89))
        {
          uint64_t v159 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v157, v158, *(void *)(*(void *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v157, v158, v89);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v157, 0, 1, v89);
        }
        uint64_t v223 = __dstd[12];
        uint64_t v224 = (void *)((char *)a1 + v223);
        uint64_t v225 = (void *)((char *)a2 + v223);
        uint64_t v226 = v225[1];
        *uint64_t v224 = *v225;
        v224[1] = v226;
        uint64_t v227 = __dstd[13];
        id v228 = (void *)((char *)a1 + v227);
        uint64_t v229 = (void *)((char *)a2 + v227);
        uint64_t v230 = v229[1];
        *id v228 = *v229;
        v228[1] = v230;
        uint64_t v231 = __dstd[14];
        uint64_t v232 = (char *)a1 + v231;
        uint64_t v233 = (_OWORD *)((char *)a2 + v231);
        unint64_t v234 = *(void *)((char *)a2 + v231 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v234 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v232 = *v233;
        }
        else
        {
          uint64_t v235 = *(void *)v233;
          sub_22331E684(v235, v234);
          *(void *)uint64_t v232 = v235;
          *((void *)v232 + 1) = v234;
        }
        break;
      case 6u:
        uint64_t v93 = a2[1];
        *a1 = *a2;
        a1[1] = v93;
        uint64_t v94 = a2[3];
        a1[2] = a2[2];
        a1[3] = v94;
        uint64_t v95 = a2[5];
        uint64_t v96 = a2;
        a1[4] = a2[4];
        a1[5] = v95;
        uint64_t v97 = a2[7];
        a1[6] = a2[6];
        a1[7] = v97;
        uint64_t v98 = a2[8];
        uint64_t v99 = a2[9];
        a1[8] = v98;
        a1[9] = v99;
        uint64_t v100 = v96[11];
        a1[10] = v96[10];
        a1[11] = v100;
        uint64_t v101 = type metadata accessor for UnknownRecord();
        uint64_t v102 = *(int *)(v101 + 40);
        v596 = (char *)a1 + v102;
        __dste = (int *)v101;
        v614 = (char *)v96 + v102;
        uint64_t v16 = sub_22342C130();
        uint64_t v103 = *(void *)(v16 - 8);
        uint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v104(v614, 1, v16))
        {
          uint64_t v105 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v596, v614, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v596, v614, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v596, 0, 1, v16);
        }
        uint64_t v19 = (char *)a2;
        uint64_t v20 = __dste;
        uint64_t v21 = (void *)v103;
        uint64_t v160 = __dste[11];
        uint64_t v149 = (char *)a1 + v160;
        id v150 = (char *)a2 + v160;
        if (!v104((char *)a2 + v160, 1, v16)) {
          goto LABEL_49;
        }
        goto LABEL_39;
      default:
        uint64_t v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        uint64_t v6 = a2[3];
        a1[2] = a2[2];
        a1[3] = v6;
        uint64_t v7 = a2[5];
        int v8 = a2;
        a1[4] = a2[4];
        a1[5] = v7;
        uint64_t v9 = a2[7];
        a1[6] = a2[6];
        a1[7] = v9;
        uint64_t v10 = a2[8];
        uint64_t v11 = a2[9];
        a1[8] = v10;
        a1[9] = v11;
        uint64_t v12 = v8[11];
        a1[10] = v8[10];
        a1[11] = v12;
        uint64_t v13 = type metadata accessor for ChatLockRecord();
        uint64_t v14 = *(int *)(v13 + 40);
        __dst = (char *)a1 + v14;
        uint64_t v609 = v13;
        uint64_t v15 = (char *)v8 + v14;
        uint64_t v16 = sub_22342C130();
        v590 = *(void **)(v16 - 8);
        uint64_t v17 = (unsigned int (*)(char *, uint64_t, uint64_t))v590[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17(v15, 1, v16))
        {
          uint64_t v18 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
          uint64_t v19 = (char *)a2;
          uint64_t v20 = (int *)v609;
          uint64_t v21 = v590;
        }
        else
        {
          uint64_t v21 = v590;
          ((void (*)(char *, char *, uint64_t))v590[2])(__dst, v15, v16);
          ((void (*)(char *, void, uint64_t, uint64_t))v590[7])(__dst, 0, 1, v16);
          uint64_t v19 = (char *)a2;
          uint64_t v20 = (int *)v609;
        }
        uint64_t v148 = v20[11];
        uint64_t v149 = (char *)a1 + v148;
        id v150 = &v19[v148];
        if (v17(&v19[v148], 1, v16))
        {
LABEL_39:
          uint64_t v151 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
LABEL_49:
          ((void (*)(char *, char *, uint64_t))v21[2])(v149, v150, v16);
          ((void (*)(char *, void, uint64_t, uint64_t))v21[7])(v149, 0, 1, v16);
        }
        uint64_t v161 = v20[12];
        v162 = (void *)((char *)a1 + v161);
        uint64_t v163 = &v19[v161];
        uint64_t v164 = *((void *)v163 + 1);
        void *v162 = *(void *)v163;
        v162[1] = v164;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_223359ACC(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for ChatLockRecord();
      goto LABEL_52;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v3 = (int *)type metadata accessor for ChatRecord(0);
      uint64_t v4 = a1 + v3[10];
      uint64_t v5 = sub_22342C130();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (!v7(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      }
      uint64_t v8 = a1 + v3[11];
      if (!v7(v8, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void **)(a1 + v3[31]);
      if (v9 != (void *)1)
      {
      }
      return;
    case 2u:
      type metadata accessor for ItemRecord();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v50 = (int *)type metadata accessor for MessageRecord();
          uint64_t v51 = a1 + v50[10];
          uint64_t v52 = sub_22342C130();
          uint64_t v53 = *(void *)(v52 - 8);
          uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
          if (!v54(v51, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
          }
          uint64_t v55 = a1 + v50[11];
          if (!v54(v55, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v52);
          }
          swift_bridgeObjectRelease();
          uint64_t v56 = a1 + v50[14];
          if (!v54(v56, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56, v52);
          }
          uint64_t v57 = a1 + v50[15];
          if (!v54(v57, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v57, v52);
          }
          uint64_t v58 = a1 + v50[16];
          if (!v54(v58, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v58, v52);
          }
          uint64_t v59 = a1 + v50[17];
          if (!v54(v59, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v59, v52);
          }
          uint64_t v60 = a1 + v50[18];
          if (*(void *)(v60 + 8) != 1)
          {
            swift_bridgeObjectRelease();
            unint64_t v61 = *(void *)(v60 + 24);
            if (v61 >> 60 != 15) {
              sub_22331EA68(*(void *)(v60 + 16), v61);
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v62 = (uint64_t *)(a1 + v50[29]);
          unint64_t v63 = v62[1];
          if (v63 >> 60 != 15) {
            sub_22331EA68(*v62, v63);
          }
          swift_bridgeObjectRelease();
          uint64_t v64 = a1 + v50[31];
          if (!v54(v64, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v64, v52);
          }
          swift_bridgeObjectRelease();
          uint64_t v65 = (id *)(a1 + v50[34]);
          if (*v65 != (id)1)
          {
          }
          goto LABEL_56;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = (int *)type metadata accessor for ActionRecord();
          uint64_t v11 = a1 + v10[10];
          uint64_t v12 = sub_22342C130();
          uint64_t v13 = *(void *)(v12 - 8);
          uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
          if (!v14(v11, 1, v12)) {
            (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
          }
          uint64_t v15 = a1 + v10[11];
          if (!v14(v15, 1, v12)) {
            (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v16 = a1 + v10[16];
          if (!v14(v16, 1, v12)) {
            (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v17 = a1 + v10[20];
          uint64_t v18 = *(void **)(v17 + 8);
          if (v18 != (void *)1)
          {
          }
          uint64_t v19 = (id *)(a1 + v10[21]);
          if (*v19 != (id)1)
          {
          }
          goto LABEL_56;
        default:
          return;
      }
      return;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t updated = (int *)type metadata accessor for AttachmentRecord();
      uint64_t v21 = a1 + updated[10];
      uint64_t v22 = sub_22342C130();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
      if (!v24(v21, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
      }
      uint64_t v25 = a1 + updated[11];
      if (!v24(v25, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)(a1 + updated[13]);
      if (!v26[24]) {
        goto LABEL_46;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v27 = v26[30];
      if (v27 >> 60 != 15) {
        sub_22331EA68(v26[29], v27);
      }
      unint64_t v28 = v26[32];
      if (v28 >> 60 != 15) {
        sub_22331EA68(v26[31], v28);
      }
      unint64_t v29 = v26[34];
      if (v29 >> 60 != 15) {
        sub_22331EA68(v26[33], v29);
      }
LABEL_45:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_46:
      uint64_t v41 = (uint64_t *)(a1 + updated[14]);
      unint64_t v42 = v41[1];
      if (v42 >> 60 != 15)
      {
        uint64_t v43 = *v41;
        sub_22331EA68(v43, v42);
      }
      return;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t updated = (int *)type metadata accessor for RecoverableMessageRecord();
      uint64_t v30 = a1 + updated[10];
      uint64_t v31 = sub_22342C130();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      if (!v33(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
      uint64_t v34 = a1 + updated[11];
      if (!v33(v34, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v31);
      }
      swift_bridgeObjectRelease();
      uint64_t v35 = a1 + updated[13];
      if (!v33(v35, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v31);
      }
      goto LABEL_46;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t updated = (int *)type metadata accessor for MessageUpdateRecord();
      uint64_t v36 = a1 + updated[10];
      uint64_t v37 = sub_22342C130();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      if (!v39(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
      }
      uint64_t v40 = a1 + updated[11];
      if (!v39(v40, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
      }
      goto LABEL_45;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for UnknownRecord();
LABEL_52:
      uint64_t v44 = v2;
      uint64_t v45 = a1 + *(int *)(v2 + 40);
      uint64_t v46 = sub_22342C130();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
      if (!v48(v45, 1, v46)) {
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
      }
      uint64_t v49 = a1 + *(int *)(v44 + 44);
      if (!v48(v49, 1, v46)) {
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v46);
      }
LABEL_56:
      swift_bridgeObjectRelease();
      return;
    default:
      return;
  }
}

void *sub_22335A8A0(void *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v55 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v55;
      uint64_t v56 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v56;
      uint64_t v57 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v57;
      uint64_t v58 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v58;
      uint64_t v59 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v59;
      uint64_t v60 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v60;
      unint64_t v61 = (int *)type metadata accessor for ChatRecord(0);
      uint64_t v62 = v61[10];
      v564 = a2;
      __dstb = (char *)a1 + v62;
      uint64_t v558 = &a2[v62];
      uint64_t v63 = sub_22342C130();
      uint64_t v64 = *(void *)(v63 - 8);
      uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v65(v558, 1, v63))
      {
        uint64_t v66 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(__dstb, v558, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(__dstb, v558, v63);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(__dstb, 0, 1, v63);
      }
      uint64_t v97 = a1;
      uint64_t v140 = v61[11];
      unint64_t v141 = (char *)a1 + v140;
      uint64_t v142 = &v564[v140];
      if (v65(&v564[v140], 1, v63))
      {
        uint64_t v143 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v141, v142, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v141, v142, v63);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v141, 0, 1, v63);
      }
      uint64_t v157 = v61[12];
      uint64_t v158 = (void *)((char *)a1 + v157);
      uint64_t v159 = &v564[v157];
      uint64_t v160 = *((void *)v159 + 1);
      *uint64_t v158 = *(void *)v159;
      v158[1] = v160;
      uint64_t v161 = v61[13];
      v162 = (char *)a1 + v161;
      uint64_t v163 = &v564[v161];
      v162[8] = v163[8];
      *(void *)v162 = *(void *)v163;
      uint64_t v164 = v61[14];
      uint64_t v165 = (char *)a1 + v164;
      id v166 = &v564[v164];
      *(void *)uint64_t v165 = *(void *)v166;
      v165[8] = v166[8];
      *(void *)((char *)a1 + v61[15]) = *(void *)&v564[v61[15]];
      uint64_t v167 = v61[16];
      uint64_t v168 = (void *)((char *)a1 + v167);
      uint64_t v169 = &v564[v167];
      __dste = (void *)*((void *)v169 + 1);
      void *v168 = *(void *)v169;
      v168[1] = __dste;
      uint64_t v170 = v61[17];
      uint64_t v171 = (void *)((char *)a1 + v170);
      uint64_t v172 = &v564[v170];
      uint64_t v547 = (void *)*((void *)v172 + 1);
      *uint64_t v171 = *(void *)v172;
      v171[1] = v547;
      uint64_t v173 = v61[18];
      uint64_t v174 = (void *)((char *)a1 + v173);
      uint64_t v175 = &v564[v173];
      uint64_t v541 = *((void *)v175 + 1);
      void *v174 = *(void *)v175;
      v174[1] = v541;
      uint64_t v176 = v61[19];
      uint64_t v177 = (void *)((char *)a1 + v176);
      uint64_t v178 = &v564[v176];
      uint64_t v179 = *((void *)v178 + 1);
      *uint64_t v177 = *(void *)v178;
      v177[1] = v179;
      *(void *)((char *)a1 + v61[20]) = *(void *)&v564[v61[20]];
      uint64_t v180 = v61[21];
      uint64_t v181 = (void *)((char *)a1 + v180);
      uint64_t v182 = &v564[v180];
      uint64_t v183 = *((void *)v182 + 1);
      *uint64_t v181 = *(void *)v182;
      v181[1] = v183;
      uint64_t v184 = v61[22];
      uint64_t v185 = (char *)a1 + v184;
      uint64_t v186 = &v564[v184];
      *(void *)uint64_t v185 = *(void *)v186;
      v185[8] = v186[8];
      uint64_t v187 = v61[23];
      uint64_t v188 = (char *)a1 + v187;
      uint64_t v189 = &v564[v187];
      *(void *)uint64_t v188 = *(void *)v189;
      v188[8] = v189[8];
      uint64_t v190 = v61[24];
      unint64_t v191 = (void *)((char *)a1 + v190);
      uint64_t v192 = &v564[v190];
      uint64_t v193 = *((void *)v192 + 1);
      *unint64_t v191 = *(void *)v192;
      v191[1] = v193;
      uint64_t v194 = v61[25];
      int64_t v195 = (char *)a1 + v194;
      uint64_t v196 = &v564[v194];
      v195[8] = v196[8];
      *(void *)int64_t v195 = *(void *)v196;
      uint64_t v197 = v61[26];
      uint64_t v198 = (char *)a1 + v197;
      uint64_t v199 = &v564[v197];
      *(_OWORD *)uint64_t v198 = *(_OWORD *)v199;
      *((_WORD *)v198 + 8) = *((_WORD *)v199 + 8);
      uint64_t v200 = v61[27];
      uint64_t v201 = (void *)((char *)a1 + v200);
      uint64_t v202 = &v564[v200];
      uint64_t v203 = *((void *)v202 + 1);
      *uint64_t v201 = *(void *)v202;
      v201[1] = v203;
      uint64_t v204 = v61[28];
      uint64_t v205 = (char *)a1 + v204;
      uint64_t v206 = &v564[v204];
      *(void *)uint64_t v205 = *(void *)v206;
      v205[8] = v206[8];
      uint64_t v207 = v61[29];
      uint64_t v208 = (void *)((char *)a1 + v207);
      uint64_t v209 = &v564[v207];
      uint64_t v210 = *((void *)v209 + 1);
      *uint64_t v208 = *(void *)v209;
      v208[1] = v210;
      *(void *)((char *)a1 + v61[30]) = *(void *)&v564[v61[30]];
      uint64_t v211 = v61[31];
      uint64_t v212 = *(void **)&v564[v211];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v212 != (void *)1) {
        id v213 = v212;
      }
      *(void *)((char *)a1 + v211) = v212;
      goto LABEL_97;
    case 2u:
      type metadata accessor for ItemRecord();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v279 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v279;
          uint64_t v280 = *((void *)a2 + 3);
          a1[2] = *((void *)a2 + 2);
          a1[3] = v280;
          uint64_t v281 = *((void *)a2 + 5);
          a1[4] = *((void *)a2 + 4);
          a1[5] = v281;
          uint64_t v282 = *((void *)a2 + 7);
          a1[6] = *((void *)a2 + 6);
          a1[7] = v282;
          uint64_t v283 = *((void *)a2 + 9);
          a1[8] = *((void *)a2 + 8);
          a1[9] = v283;
          uint64_t v284 = *((void *)a2 + 11);
          a1[10] = *((void *)a2 + 10);
          a1[11] = v284;
          uint64_t v285 = (int *)type metadata accessor for MessageRecord();
          uint64_t v286 = v285[10];
          uint64_t v529 = &a2[v286];
          v531 = (char *)a1 + v286;
          uint64_t v287 = sub_22342C130();
          uint64_t v548 = *(void **)(v287 - 8);
          uint64_t v288 = (unsigned int (*)(char *, uint64_t, uint64_t))v548[6];
          uint64_t v289 = v287;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v290 = v288;
          swift_bridgeObjectRetain();
          if (v288(v529, 1, v289))
          {
            uint64_t v291 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v531, v529, *(void *)(*(void *)(v291 - 8) + 64));
            v292 = v548;
          }
          else
          {
            v292 = v548;
            ((void (*)(char *, char *, uint64_t))v548[2])(v531, v529, v289);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v531, 0, 1, v289);
          }
          uint64_t v356 = v285[11];
          uint64_t v97 = a1;
          uint64_t v357 = (char *)a1 + v356;
          long long v358 = &a2[v356];
          if (v290(&a2[v356], 1, v289))
          {
            uint64_t v359 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v357, v358, *(void *)(*(void *)(v359 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v292[2])(v357, v358, v289);
            ((void (*)(char *, void, uint64_t, uint64_t))v292[7])(v357, 0, 1, v289);
          }
          uint64_t v368 = v285[12];
          uint64_t v369 = (void *)((char *)a1 + v368);
          uint64_t v370 = &a2[v368];
          uint64_t v371 = *((void *)v370 + 1);
          *uint64_t v369 = *(void *)v370;
          v369[1] = v371;
          *((unsigned char *)a1 + v285[13]) = a2[v285[13]];
          uint64_t v372 = v285[14];
          long long v373 = (char *)a1 + v372;
          uint64_t v374 = &a2[v372];
          swift_bridgeObjectRetain();
          if (v290(v374, 1, v289))
          {
            uint64_t v375 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v373, v374, *(void *)(*(void *)(v375 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v292[2])(v373, v374, v289);
            ((void (*)(char *, void, uint64_t, uint64_t))v292[7])(v373, 0, 1, v289);
          }
          uint64_t v380 = v285[15];
          id v381 = (char *)a1 + v380;
          id v382 = &a2[v380];
          if (v290(&a2[v380], 1, v289))
          {
            uint64_t v383 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v381, v382, *(void *)(*(void *)(v383 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v292[2])(v381, v382, v289);
            ((void (*)(char *, void, uint64_t, uint64_t))v292[7])(v381, 0, 1, v289);
          }
          uint64_t v388 = v285[16];
          id v389 = (char *)a1 + v388;
          id v390 = &a2[v388];
          if (v290(&a2[v388], 1, v289))
          {
            uint64_t v391 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v389, v390, *(void *)(*(void *)(v391 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v292[2])(v389, v390, v289);
            ((void (*)(char *, void, uint64_t, uint64_t))v292[7])(v389, 0, 1, v289);
          }
          uint64_t v396 = v285[17];
          uint64_t v397 = (char *)a1 + v396;
          v398 = &a2[v396];
          uint64_t v542 = v289;
          v535 = v290;
          if (v290(&a2[v396], 1, v289))
          {
            uint64_t v399 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v397, v398, *(void *)(*(void *)(v399 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v292[2])(v397, v398, v289);
            ((void (*)(char *, void, uint64_t, uint64_t))v292[7])(v397, 0, 1, v289);
          }
          uint64_t v407 = v285[18];
          v408 = (char *)a1 + v407;
          uint64_t v409 = &a2[v407];
          uint64_t v410 = *(void *)&a2[v407 + 8];
          if (v410 == 1)
          {
            long long v411 = *((_OWORD *)v409 + 1);
            *(_OWORD *)v408 = *(_OWORD *)v409;
            *((_OWORD *)v408 + 1) = v411;
            *((void *)v408 + 4) = *((void *)v409 + 4);
          }
          else
          {
            *(void *)v408 = *(void *)v409;
            *((void *)v408 + 1) = v410;
            uint64_t v412 = v409 + 16;
            unint64_t v413 = *((void *)v409 + 3);
            swift_bridgeObjectRetain();
            if (v413 >> 60 == 15)
            {
              *((_OWORD *)v408 + 1) = *v412;
            }
            else
            {
              uint64_t v464 = *(void *)v412;
              sub_22331E684(v464, v413);
              *((void *)v408 + 2) = v464;
              *((void *)v408 + 3) = v413;
            }
            v465 = (void *)*((void *)v409 + 4);
            *((void *)v408 + 4) = v465;
            id v466 = v465;
          }
          uint64_t v467 = v285[19];
          v468 = (char *)a1 + v467;
          uint64_t v469 = &a2[v467];
          *(void *)v468 = *(void *)v469;
          v468[8] = v469[8];
          uint64_t v470 = v285[20];
          v471 = (char *)a1 + v470;
          uint64_t v472 = &a2[v470];
          v471[8] = v472[8];
          *(void *)v471 = *(void *)v472;
          uint64_t v473 = v285[21];
          uint64_t v474 = (char *)a1 + v473;
          uint64_t v475 = &a2[v473];
          *(void *)uint64_t v474 = *(void *)v475;
          v474[8] = v475[8];
          uint64_t v476 = v285[22];
          uint64_t v477 = (void *)((char *)a1 + v476);
          v478 = &a2[v476];
          uint64_t v479 = *((void *)v478 + 1);
          void *v477 = *(void *)v478;
          v477[1] = v479;
          uint64_t v480 = v285[23];
          uint64_t v481 = (char *)a1 + v480;
          uint64_t v482 = &a2[v480];
          *(void *)uint64_t v481 = *(void *)v482;
          v481[8] = v482[8];
          uint64_t v483 = v285[24];
          uint64_t v484 = (void *)((char *)a1 + v483);
          uint64_t v485 = &a2[v483];
          uint64_t v486 = *((void *)v485 + 1);
          void *v484 = *(void *)v485;
          v484[1] = v486;
          uint64_t v487 = v285[25];
          uint64_t v488 = (void *)((char *)a1 + v487);
          v489 = &a2[v487];
          uint64_t v490 = *((void *)v489 + 1);
          void *v488 = *(void *)v489;
          v488[1] = v490;
          uint64_t v491 = v285[26];
          uint64_t v492 = (char *)a1 + v491;
          uint64_t v493 = &a2[v491];
          *(void *)uint64_t v492 = *(void *)v493;
          v492[8] = v493[8];
          uint64_t v494 = v285[27];
          uint64_t v495 = (void *)((char *)a1 + v494);
          uint64_t v496 = &a2[v494];
          uint64_t v497 = *((void *)v496 + 1);
          void *v495 = *(void *)v496;
          v495[1] = v497;
          uint64_t v498 = v285[28];
          unint64_t v499 = (void *)((char *)a1 + v498);
          uint64_t v500 = &a2[v498];
          uint64_t v501 = *((void *)v500 + 1);
          void *v499 = *(void *)v500;
          v499[1] = v501;
          uint64_t v502 = v285[29];
          uint64_t v503 = (char *)a1 + v502;
          v504 = (uint64_t *)&a2[v502];
          unint64_t v505 = *(void *)&a2[v502 + 8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v505 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v503 = *(_OWORD *)v504;
          }
          else
          {
            uint64_t v506 = *v504;
            sub_22331E684(*v504, v505);
            *(void *)uint64_t v503 = v506;
            *((void *)v503 + 1) = v505;
          }
          uint64_t v507 = v285[30];
          v508 = (void *)((char *)a1 + v507);
          v509 = &a2[v507];
          uint64_t v510 = *((void *)v509 + 1);
          void *v508 = *(void *)v509;
          v508[1] = v510;
          uint64_t v511 = v285[31];
          id v462 = (char *)a1 + v511;
          uint64_t v463 = &a2[v511];
          swift_bridgeObjectRetain();
          if (!v535(v463, 1, v542)) {
            goto LABEL_152;
          }
          goto LABEL_151;
        case 2u:
        case 3u:
        case 4u:
          uint64_t v17 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v17;
          uint64_t v18 = *((void *)a2 + 3);
          a1[2] = *((void *)a2 + 2);
          a1[3] = v18;
          uint64_t v19 = *((void *)a2 + 5);
          a1[4] = *((void *)a2 + 4);
          a1[5] = v19;
          uint64_t v20 = *((void *)a2 + 7);
          a1[6] = *((void *)a2 + 6);
          a1[7] = v20;
          uint64_t v21 = *((void *)a2 + 9);
          a1[8] = *((void *)a2 + 8);
          a1[9] = v21;
          uint64_t v22 = *((void *)a2 + 11);
          a1[10] = *((void *)a2 + 10);
          a1[11] = v22;
          uint64_t v23 = type metadata accessor for ActionRecord();
          uint64_t v24 = *(int *)(v23 + 40);
          uint64_t v537 = (char *)a1 + v24;
          uint64_t v540 = (int *)v23;
          uint64_t v532 = &a2[v24];
          uint64_t v25 = sub_22342C130();
          uint64_t v26 = *(void *)(v25 - 8);
          unint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v28 = v27;
          if (v27(v532, 1, v25))
          {
            uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v537, v532, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v537, v532, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v537, 0, 1, v25);
          }
          uint64_t v249 = v26;
          uint64_t v250 = v540;
          uint64_t v251 = v540[11];
          uint64_t v97 = a1;
          uint64_t v252 = (char *)a1 + v251;
          uint64_t v253 = &a2[v251];
          if (v27(&a2[v251], 1, v25))
          {
            uint64_t v254 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v252, v253, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v252, 0, 1, v25);
          }
          uint64_t v255 = v540[12];
          uint64_t v256 = (void *)((char *)a1 + v255);
          uint64_t v257 = &a2[v255];
          uint64_t v258 = *((void *)v257 + 1);
          void *v256 = *(void *)v257;
          v256[1] = v258;
          uint64_t v259 = v540[13];
          v260 = (void *)((char *)a1 + v259);
          uint64_t v261 = &a2[v259];
          uint64_t v262 = *((void *)v261 + 1);
          void *v260 = *(void *)v261;
          v260[1] = v262;
          *((unsigned char *)a1 + v540[14]) = a2[v540[14]];
          *((unsigned char *)a1 + v540[15]) = a2[v540[15]];
          uint64_t v263 = v540[16];
          v264 = (char *)a1 + v263;
          uint64_t v265 = &a2[v263];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v28(v265, 1, v25)) {
            goto LABEL_78;
          }
          goto LABEL_88;
        case 5u:
        case 6u:
          uint64_t v237 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v237;
          uint64_t v238 = *((void *)a2 + 3);
          a1[2] = *((void *)a2 + 2);
          a1[3] = v238;
          uint64_t v239 = *((void *)a2 + 5);
          a1[4] = *((void *)a2 + 4);
          a1[5] = v239;
          uint64_t v240 = *((void *)a2 + 7);
          a1[6] = *((void *)a2 + 6);
          a1[7] = v240;
          uint64_t v241 = *((void *)a2 + 9);
          a1[8] = *((void *)a2 + 8);
          a1[9] = v241;
          uint64_t v242 = *((void *)a2 + 11);
          a1[10] = *((void *)a2 + 10);
          a1[11] = v242;
          uint64_t v243 = type metadata accessor for ActionRecord();
          uint64_t v244 = *(int *)(v243 + 40);
          uint64_t v533 = (char *)a1 + v244;
          v538 = (int *)v243;
          uint64_t v245 = &a2[v244];
          uint64_t v25 = sub_22342C130();
          uint64_t v246 = *(void *)(v25 - 8);
          uint64_t v247 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v246 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v247(v245, 1, v25))
          {
            uint64_t v248 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v533, v245, *(void *)(*(void *)(v248 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v246 + 16))(v533, v245, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v246 + 56))(v533, 0, 1, v25);
          }
          uint64_t v97 = a1;
          uint64_t v249 = v246;
          uint64_t v250 = v538;
          v293 = v247;
          uint64_t v294 = v538[11];
          uint64_t v295 = (char *)a1 + v294;
          v296 = &a2[v294];
          if (v293(&a2[v294], 1, v25))
          {
            uint64_t v297 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v295, v296, *(void *)(*(void *)(v297 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v249 + 16))(v295, v296, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v249 + 56))(v295, 0, 1, v25);
          }
          uint64_t v298 = v538[12];
          uint64_t v299 = (void *)((char *)a1 + v298);
          id v300 = &a2[v298];
          uint64_t v301 = *((void *)v300 + 1);
          *uint64_t v299 = *(void *)v300;
          v299[1] = v301;
          uint64_t v302 = v538[13];
          id v303 = (void *)((char *)a1 + v302);
          id v304 = &a2[v302];
          uint64_t v305 = *((void *)v304 + 1);
          *id v303 = *(void *)v304;
          v303[1] = v305;
          *((unsigned char *)a1 + v538[14]) = a2[v538[14]];
          *((unsigned char *)a1 + v538[15]) = a2[v538[15]];
          uint64_t v306 = v538[16];
          v264 = (char *)a1 + v306;
          uint64_t v265 = &a2[v306];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v293(v265, 1, v25))
          {
LABEL_78:
            uint64_t v266 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v264, v265, *(void *)(*(void *)(v266 - 8) + 64));
          }
          else
          {
LABEL_88:
            (*(void (**)(char *, char *, uint64_t))(v249 + 16))(v264, v265, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v249 + 56))(v264, 0, 1, v25);
          }
          uint64_t v307 = v250[17];
          v308 = (void *)((char *)v97 + v307);
          v309 = &a2[v307];
          uint64_t v310 = *((void *)v309 + 1);
          void *v308 = *(void *)v309;
          v308[1] = v310;
          uint64_t v311 = v250[18];
          uint64_t v312 = (void *)((char *)v97 + v311);
          uint64_t v313 = &a2[v311];
          uint64_t v314 = *((void *)v313 + 1);
          void *v312 = *(void *)v313;
          v312[1] = v314;
          uint64_t v315 = v250[19];
          uint64_t v316 = (void *)((char *)v97 + v315);
          uint64_t v317 = &a2[v315];
          uint64_t v318 = *((void *)v317 + 1);
          void *v316 = *(void *)v317;
          v316[1] = v318;
          uint64_t v319 = v250[20];
          v320 = (char *)v97 + v319;
          uint64_t v321 = &a2[v319];
          id v322 = *(void **)&a2[v319 + 8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v322 == (void *)1)
          {
            long long v323 = *((_OWORD *)v321 + 1);
            *(_OWORD *)v320 = *(_OWORD *)v321;
            *((_OWORD *)v320 + 1) = v323;
            *((_OWORD *)v320 + 2) = *((_OWORD *)v321 + 2);
            *((void *)v320 + 6) = *((void *)v321 + 6);
          }
          else
          {
            char *v320 = *v321;
            uint64_t v324 = (void *)*((void *)v321 + 2);
            uint64_t v325 = (void *)*((void *)v321 + 3);
            *((void *)v320 + 1) = v322;
            *((void *)v320 + 2) = v324;
            uint64_t v326 = (void *)*((void *)v321 + 4);
            uint64_t v327 = (void *)*((void *)v321 + 5);
            *((void *)v320 + 3) = v325;
            *((void *)v320 + 4) = v326;
            long long v328 = (void *)*((void *)v321 + 6);
            *((void *)v320 + 5) = v327;
            *((void *)v320 + 6) = v328;
            id v329 = v322;
            id v330 = v324;
            id v331 = v325;
            id v332 = v326;
            id v333 = v327;
            id v334 = v328;
          }
          uint64_t v335 = v250[21];
          uint64_t v336 = (char *)v97 + v335;
          uint64_t v337 = &a2[v335];
          uint64_t v338 = *(void **)v337;
          if (*(void *)v337 == 1)
          {
            long long v339 = *((_OWORD *)v337 + 1);
            *(_OWORD *)uint64_t v336 = *(_OWORD *)v337;
            *((_OWORD *)v336 + 1) = v339;
          }
          else
          {
            uint64_t v340 = (void *)*((void *)v337 + 1);
            uint64_t v341 = (void *)*((void *)v337 + 2);
            *(void *)uint64_t v336 = v338;
            *((void *)v336 + 1) = v340;
            v342 = (void *)*((void *)v337 + 3);
            *((void *)v336 + 2) = v341;
            *((void *)v336 + 3) = v342;
            id v343 = v338;
            id v344 = v340;
            id v345 = v341;
            id v346 = v342;
          }
          uint64_t v347 = v250[22];
          break;
        default:
          uint64_t v267 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v267;
          uint64_t v268 = *((void *)a2 + 3);
          uint64_t v269 = a1;
          a1[2] = *((void *)a2 + 2);
          a1[3] = v268;
          uint64_t v270 = *((void *)a2 + 5);
          v269[4] = *((void *)a2 + 4);
          v269[5] = v270;
          uint64_t v271 = *((void *)a2 + 7);
          v269[6] = *((void *)a2 + 6);
          v269[7] = v271;
          uint64_t v272 = *((void *)a2 + 9);
          v269[8] = *((void *)a2 + 8);
          v269[9] = v272;
          uint64_t v273 = *((void *)a2 + 11);
          v269[10] = *((void *)a2 + 10);
          v269[11] = v273;
          uint64_t v274 = type metadata accessor for MessageRecord();
          uint64_t v275 = *(int *)(v274 + 40);
          v539 = (char *)v269 + v275;
          v530 = (int *)v274;
          v534 = &a2[v275];
          uint64_t v276 = sub_22342C130();
          uint64_t v548 = *(void **)(v276 - 8);
          uint64_t v277 = (unsigned int (*)(char *, uint64_t, uint64_t))v548[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v277(v534, 1, v276))
          {
            uint64_t v278 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v539, v534, *(void *)(*(void *)(v278 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v548[2])(v539, v534, v276);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v539, 0, 1, v276);
          }
          uint64_t v285 = v530;
          uint64_t v352 = v530[11];
          uint64_t v97 = a1;
          uint64_t v353 = (char *)a1 + v352;
          id v354 = &a2[v352];
          if (v277(&a2[v352], 1, v276))
          {
            uint64_t v355 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v353, v354, *(void *)(*(void *)(v355 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v548[2])(v353, v354, v276);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v353, 0, 1, v276);
          }
          uint64_t v360 = v530[12];
          uint64_t v361 = (void *)((char *)a1 + v360);
          id v362 = &a2[v360];
          uint64_t v363 = *((void *)v362 + 1);
          void *v361 = *(void *)v362;
          v361[1] = v363;
          *((unsigned char *)a1 + v530[13]) = a2[v530[13]];
          uint64_t v364 = v530[14];
          uint64_t v365 = (char *)a1 + v364;
          uint64_t v366 = &a2[v364];
          swift_bridgeObjectRetain();
          if (v277(v366, 1, v276))
          {
            uint64_t v367 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v365, v366, *(void *)(*(void *)(v367 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v548[2])(v365, v366, v276);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v365, 0, 1, v276);
          }
          uint64_t v376 = v530[15];
          uint64_t v377 = (char *)a1 + v376;
          uint64_t v378 = &a2[v376];
          if (v277(&a2[v376], 1, v276))
          {
            uint64_t v379 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v377, v378, *(void *)(*(void *)(v379 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v548[2])(v377, v378, v276);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v377, 0, 1, v276);
          }
          uint64_t v384 = v530[16];
          uint64_t v385 = (char *)a1 + v384;
          uint64_t v386 = &a2[v384];
          if (v277(&a2[v384], 1, v276))
          {
            uint64_t v387 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v385, v386, *(void *)(*(void *)(v387 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v548[2])(v385, v386, v276);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v385, 0, 1, v276);
          }
          uint64_t v392 = v530[17];
          uint64_t v393 = (char *)a1 + v392;
          uint64_t v394 = &a2[v392];
          uint64_t v542 = v276;
          if (v277(&a2[v392], 1, v276))
          {
            uint64_t v395 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v393, v394, *(void *)(*(void *)(v395 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v548[2])(v393, v394, v276);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v393, 0, 1, v276);
          }
          uint64_t v400 = v530[18];
          v401 = (char *)a1 + v400;
          uint64_t v402 = &a2[v400];
          uint64_t v403 = *(void *)&a2[v400 + 8];
          if (v403 == 1)
          {
            long long v404 = *((_OWORD *)v402 + 1);
            *(_OWORD *)v401 = *(_OWORD *)v402;
            *((_OWORD *)v401 + 1) = v404;
            *((void *)v401 + 4) = *((void *)v402 + 4);
          }
          else
          {
            *(void *)v401 = *(void *)v402;
            *((void *)v401 + 1) = v403;
            v405 = v402 + 16;
            unint64_t v406 = *((void *)v402 + 3);
            swift_bridgeObjectRetain();
            if (v406 >> 60 == 15)
            {
              *((_OWORD *)v401 + 1) = *v405;
            }
            else
            {
              uint64_t v414 = *(void *)v405;
              sub_22331E684(v414, v406);
              *((void *)v401 + 2) = v414;
              *((void *)v401 + 3) = v406;
            }
            uint64_t v415 = (void *)*((void *)v402 + 4);
            *((void *)v401 + 4) = v415;
            id v416 = v415;
          }
          uint64_t v536 = v277;
          uint64_t v417 = v530[19];
          uint64_t v418 = (char *)a1 + v417;
          uint64_t v419 = &a2[v417];
          *(void *)uint64_t v418 = *(void *)v419;
          v418[8] = v419[8];
          uint64_t v420 = v530[20];
          v421 = (char *)a1 + v420;
          uint64_t v422 = &a2[v420];
          v421[8] = v422[8];
          *(void *)v421 = *(void *)v422;
          uint64_t v423 = v530[21];
          v424 = (char *)a1 + v423;
          v425 = &a2[v423];
          *(void *)v424 = *(void *)v425;
          v424[8] = v425[8];
          uint64_t v426 = v530[22];
          uint64_t v427 = (void *)((char *)a1 + v426);
          v428 = &a2[v426];
          uint64_t v429 = *((void *)v428 + 1);
          *uint64_t v427 = *(void *)v428;
          v427[1] = v429;
          uint64_t v430 = v530[23];
          uint64_t v431 = (char *)a1 + v430;
          v432 = &a2[v430];
          *(void *)uint64_t v431 = *(void *)v432;
          v431[8] = v432[8];
          uint64_t v433 = v530[24];
          uint64_t v434 = (void *)((char *)a1 + v433);
          uint64_t v435 = &a2[v433];
          uint64_t v436 = *((void *)v435 + 1);
          *uint64_t v434 = *(void *)v435;
          v434[1] = v436;
          uint64_t v437 = v530[25];
          uint64_t v438 = (void *)((char *)a1 + v437);
          uint64_t v439 = &a2[v437];
          uint64_t v440 = *((void *)v439 + 1);
          *uint64_t v438 = *(void *)v439;
          v438[1] = v440;
          uint64_t v441 = v530[26];
          uint64_t v442 = (char *)a1 + v441;
          uint64_t v443 = &a2[v441];
          *(void *)uint64_t v442 = *(void *)v443;
          v442[8] = v443[8];
          uint64_t v444 = v530[27];
          v445 = (void *)((char *)a1 + v444);
          uint64_t v446 = &a2[v444];
          uint64_t v447 = *((void *)v446 + 1);
          void *v445 = *(void *)v446;
          v445[1] = v447;
          uint64_t v448 = v530[28];
          v449 = (void *)((char *)a1 + v448);
          unint64_t v450 = &a2[v448];
          uint64_t v451 = *((void *)v450 + 1);
          void *v449 = *(void *)v450;
          v449[1] = v451;
          uint64_t v452 = v530[29];
          v453 = (char *)a1 + v452;
          uint64_t v454 = (uint64_t *)&a2[v452];
          unint64_t v455 = *(void *)&a2[v452 + 8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v455 >> 60 == 15)
          {
            *(_OWORD *)v453 = *(_OWORD *)v454;
          }
          else
          {
            uint64_t v456 = *v454;
            sub_22331E684(*v454, v455);
            *(void *)v453 = v456;
            *((void *)v453 + 1) = v455;
          }
          uint64_t v457 = v530[30];
          uint64_t v458 = (void *)((char *)a1 + v457);
          long long v459 = &a2[v457];
          uint64_t v460 = *((void *)v459 + 1);
          void *v458 = *(void *)v459;
          v458[1] = v460;
          uint64_t v461 = v530[31];
          id v462 = (char *)a1 + v461;
          uint64_t v463 = &a2[v461];
          swift_bridgeObjectRetain();
          if (v536(v463, 1, v542))
          {
LABEL_151:
            uint64_t v512 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v462, v463, *(void *)(*(void *)(v512 - 8) + 64));
          }
          else
          {
LABEL_152:
            ((void (*)(char *, char *, uint64_t))v548[2])(v462, v463, v542);
            ((void (*)(char *, void, uint64_t, uint64_t))v548[7])(v462, 0, 1, v542);
          }
          uint64_t v513 = v285[32];
          uint64_t v514 = (void *)((char *)v97 + v513);
          uint64_t v515 = &a2[v513];
          uint64_t v516 = *((void *)v515 + 1);
          *uint64_t v514 = *(void *)v515;
          v514[1] = v516;
          *((unsigned char *)v97 + v285[33]) = a2[v285[33]];
          uint64_t v517 = v285[34];
          v518 = (char *)v97 + v517;
          uint64_t v519 = &a2[v517];
          id v520 = *(void **)&a2[v517];
          swift_bridgeObjectRetain();
          if (v520 == (void *)1)
          {
            long long v521 = *((_OWORD *)v519 + 1);
            *(_OWORD *)v518 = *(_OWORD *)v519;
            *((_OWORD *)v518 + 1) = v521;
          }
          else
          {
            uint64_t v522 = (void *)*((void *)v519 + 1);
            id v523 = (void *)*((void *)v519 + 2);
            *(void *)v518 = v520;
            *((void *)v518 + 1) = v522;
            uint64_t v524 = (void *)*((void *)v519 + 3);
            *((void *)v518 + 2) = v523;
            *((void *)v518 + 3) = v524;
            id v525 = v520;
            id v526 = v522;
            id v527 = v523;
            id v528 = v524;
          }
          uint64_t v347 = v285[35];
          break;
      }
      uint64_t v348 = (void *)((char *)v97 + v347);
      uint64_t v349 = &a2[v347];
      uint64_t v350 = *((void *)v349 + 1);
      void *v348 = *(void *)v349;
      v348[1] = v350;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_97;
    case 3u:
      uint64_t v30 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v30;
      uint64_t v31 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v31;
      uint64_t v32 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v32;
      uint64_t v33 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v33;
      uint64_t v34 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v34;
      uint64_t v35 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v35;
      uint64_t v556 = (int *)type metadata accessor for AttachmentRecord();
      uint64_t v36 = v556[10];
      uint64_t v543 = (char *)a1 + v36;
      uint64_t v563 = a2;
      uint64_t v37 = &a2[v36];
      uint64_t v38 = sub_22342C130();
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40(v37, 1, v38))
      {
        uint64_t v41 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v543, v37, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v543, v37, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v543, 0, 1, v38);
      }
      uint64_t v97 = a1;
      uint64_t v96 = v563;
      uint64_t v98 = v556;
      uint64_t v99 = v39;
      uint64_t v100 = v556[11];
      uint64_t v101 = (char *)a1 + v100;
      uint64_t v102 = (char *)v563 + v100;
      if (v40((char *)v563 + v100, 1, v38))
      {
        uint64_t v103 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v101, v102, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v101, 0, 1, v38);
      }
      uint64_t v108 = v556[12];
      uint64_t v109 = (void *)((char *)a1 + v108);
      uint64_t v110 = (void *)((char *)v563 + v108);
      uint64_t v111 = v110[1];
      *uint64_t v109 = *v110;
      v109[1] = v111;
      uint64_t v112 = v556[13];
      uint64_t v113 = (char *)a1 + v112;
      uint64_t v114 = (void *)((char *)v563 + v112);
      uint64_t v115 = *(void *)((char *)v563 + v112 + 192);
      swift_bridgeObjectRetain();
      if (v115)
      {
        *uint64_t v113 = *(unsigned char *)v114;
        *((void *)v113 + 1) = v114[1];
        v113[16] = *((unsigned char *)v114 + 16);
        uint64_t v116 = v114[4];
        *((void *)v113 + 3) = v114[3];
        *((void *)v113 + 4) = v116;
        uint64_t v117 = v114[6];
        *((void *)v113 + 5) = v114[5];
        *((void *)v113 + 6) = v117;
        v113[64] = *((unsigned char *)v114 + 64);
        *((void *)v113 + 7) = v114[7];
        uint64_t v118 = v114[10];
        *((void *)v113 + 9) = v114[9];
        *((void *)v113 + 10) = v118;
        v113[88] = *((unsigned char *)v114 + 88);
        uint64_t v119 = v114[13];
        *((void *)v113 + 12) = v114[12];
        *((void *)v113 + 13) = v119;
        uint64_t v120 = v114[15];
        *((void *)v113 + 14) = v114[14];
        *((void *)v113 + 15) = v120;
        v113[128] = *((unsigned char *)v114 + 128);
        uint64_t v121 = v114[18];
        *((void *)v113 + 17) = v114[17];
        *((void *)v113 + 18) = v121;
        v113[160] = *((unsigned char *)v114 + 160);
        *((void *)v113 + 19) = v114[19];
        v113[176] = *((unsigned char *)v114 + 176);
        *((void *)v113 + 21) = v114[21];
        *((void *)v113 + 23) = v114[23];
        *((void *)v113 + 24) = v115;
        uint64_t v122 = v114[26];
        *((void *)v113 + 25) = v114[25];
        *((void *)v113 + 26) = v122;
        uint64_t v123 = v114[28];
        *((void *)v113 + 27) = v114[27];
        *((void *)v113 + 28) = v123;
        v546 = v114 + 29;
        unint64_t v124 = v114[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v124 >> 60 == 15)
        {
          *(_OWORD *)(v113 + 232) = *(_OWORD *)v546;
        }
        else
        {
          uint64_t v228 = *v546;
          sub_22331E684(*v546, v124);
          *((void *)v113 + 29) = v228;
          *((void *)v113 + 30) = v124;
        }
        uint64_t v97 = a1;
        uint64_t v96 = v563;
        uint64_t v98 = v556;
        uint64_t v229 = v114 + 31;
        unint64_t v230 = v114[32];
        if (v230 >> 60 == 15)
        {
          *(_OWORD *)(v113 + 248) = *(_OWORD *)v229;
        }
        else
        {
          uint64_t v231 = *v229;
          sub_22331E684(*v229, v114[32]);
          *((void *)v113 + 31) = v231;
          *((void *)v113 + 32) = v230;
        }
        uint64_t v232 = v114 + 33;
        unint64_t v233 = v114[34];
        if (v233 >> 60 == 15)
        {
          *(_OWORD *)(v113 + 264) = *(_OWORD *)v232;
        }
        else
        {
          uint64_t v234 = *v232;
          sub_22331E684(*v232, v114[34]);
          *((void *)v113 + 33) = v234;
          *((void *)v113 + 34) = v233;
        }
        *((void *)v113 + 35) = v114[35];
        v113[288] = *((unsigned char *)v114 + 288);
        uint64_t v235 = v114[38];
        *((void *)v113 + 37) = v114[37];
        *((void *)v113 + 38) = v235;
        *((void *)v113 + 39) = v114[39];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v113, v114, 0x140uLL);
      }
      uint64_t v236 = v98[14];
      unint64_t v134 = (char *)v97 + v236;
      uint64_t v135 = (char *)v96 + v236;
      goto LABEL_67;
    case 4u:
      uint64_t v42 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v42;
      uint64_t v43 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v43;
      uint64_t v44 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v44;
      uint64_t v45 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v45;
      uint64_t v46 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v46;
      uint64_t v47 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v47;
      uint64_t v48 = type metadata accessor for RecoverableMessageRecord();
      uint64_t v49 = *(int *)(v48 + 40);
      __dsta = (char *)a1 + v49;
      uint64_t v557 = (int *)v48;
      uint64_t v50 = &a2[v49];
      uint64_t v51 = sub_22342C130();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53(v50, 1, v51))
      {
        uint64_t v54 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(__dsta, v50, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dsta, v50, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dsta, 0, 1, v51);
      }
      uint64_t v104 = v557[11];
      uint64_t v97 = a1;
      uint64_t v105 = (char *)a1 + v104;
      char v106 = &a2[v104];
      if (v53(&a2[v104], 1, v51))
      {
        uint64_t v107 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v105, v106, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v105, 0, 1, v51);
      }
      uint64_t v125 = v557[12];
      uint64_t v126 = (void *)((char *)a1 + v125);
      uint64_t v127 = &a2[v125];
      uint64_t v128 = *((void *)v127 + 1);
      void *v126 = *(void *)v127;
      v126[1] = v128;
      uint64_t v129 = v557[13];
      uint64_t v130 = (char *)a1 + v129;
      uint64_t v131 = &a2[v129];
      swift_bridgeObjectRetain();
      if (v53(v131, 1, v51))
      {
        uint64_t v132 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v130, v131, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v130, 0, 1, v51);
      }
      uint64_t v133 = v557[14];
      unint64_t v134 = (char *)a1 + v133;
      uint64_t v135 = &a2[v133];
LABEL_67:
      unint64_t v224 = *((void *)v135 + 1);
      if (v224 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v134 = *(_OWORD *)v135;
        goto LABEL_97;
      }
      uint64_t v225 = *(void *)v135;
      goto LABEL_70;
    case 5u:
      uint64_t v67 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v67;
      uint64_t v68 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v68;
      uint64_t v69 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v69;
      uint64_t v70 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v70;
      uint64_t v71 = a2;
      uint64_t v72 = *((void *)a2 + 8);
      uint64_t v73 = *((void *)a2 + 9);
      a1[8] = v72;
      a1[9] = v73;
      uint64_t v74 = *((void *)v71 + 11);
      a1[10] = *((void *)v71 + 10);
      a1[11] = v74;
      uint64_t updated = type metadata accessor for MessageUpdateRecord();
      uint64_t v76 = *(int *)(updated + 40);
      uint64_t v544 = (char *)a1 + v76;
      __dstc = (int *)updated;
      v565 = v71;
      uint64_t v559 = &v71[v76];
      uint64_t v77 = sub_22342C130();
      uint64_t v78 = *(void *)(v77 - 8);
      uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v79(v559, 1, v77))
      {
        uint64_t v80 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v544, v559, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v544, v559, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v544, 0, 1, v77);
      }
      uint64_t v97 = a1;
      id v144 = v79;
      uint64_t v145 = __dstc[11];
      unint64_t v146 = (char *)a1 + v145;
      uint64_t v147 = &v565[v145];
      if (v144(&v565[v145], 1, v77))
      {
        uint64_t v148 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v146, v147, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v146, 0, 1, v77);
      }
      uint64_t v214 = __dstc[12];
      uint64_t v215 = (void *)((char *)a1 + v214);
      uint64_t v216 = &v565[v214];
      uint64_t v217 = *((void *)v216 + 1);
      *uint64_t v215 = *(void *)v216;
      v215[1] = v217;
      uint64_t v218 = __dstc[13];
      uint64_t v219 = (void *)((char *)a1 + v218);
      uint64_t v220 = &v565[v218];
      uint64_t v221 = *((void *)v220 + 1);
      *uint64_t v219 = *(void *)v220;
      v219[1] = v221;
      uint64_t v222 = __dstc[14];
      unint64_t v134 = (char *)a1 + v222;
      uint64_t v223 = &v565[v222];
      unint64_t v224 = *(void *)&v565[v222 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v224 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v134 = *(_OWORD *)v223;
      }
      else
      {
        uint64_t v225 = *(void *)v223;
LABEL_70:
        sub_22331E684(v225, v224);
        *(void *)unint64_t v134 = v225;
        *((void *)v134 + 1) = v224;
      }
LABEL_97:
      swift_storeEnumTagMultiPayload();
      return v97;
    case 6u:
      uint64_t v81 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v81;
      uint64_t v82 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v82;
      uint64_t v83 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v83;
      uint64_t v84 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v84;
      uint64_t v85 = a2;
      uint64_t v86 = *((void *)a2 + 8);
      uint64_t v87 = *((void *)a2 + 9);
      a1[8] = v86;
      a1[9] = v87;
      uint64_t v88 = *((void *)v85 + 11);
      a1[10] = *((void *)v85 + 10);
      a1[11] = v88;
      uint64_t v89 = type metadata accessor for UnknownRecord();
      uint64_t v90 = *(int *)(v89 + 40);
      v545 = (char *)a1 + v90;
      __dstd = (int *)v89;
      v566 = v85;
      uint64_t v560 = &v85[v90];
      uint64_t v91 = sub_22342C130();
      uint64_t v92 = *(void *)(v91 - 8);
      uint64_t v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v94 = v93;
      if (v93(v560, 1, v91))
      {
        uint64_t v95 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v545, v560, *(void *)(*(void *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v545, v560, v91);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v545, 0, 1, v91);
      }
      uint64_t v149 = v92;
      uint64_t v150 = __dstd[11];
      uint64_t v97 = a1;
      uint64_t v151 = (char *)a1 + v150;
      uint64_t v152 = &v566[v150];
      if (v94(&v566[v150], 1, v91))
      {
        uint64_t v153 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v151, v152, v91);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v151, 0, 1, v91);
      }
      uint64_t v226 = __dstd[12];
      uint64_t v155 = (void *)((char *)a1 + v226);
      uint64_t v156 = &v566[v226];
      goto LABEL_57;
    default:
      uint64_t v4 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v4;
      uint64_t v5 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v5;
      uint64_t v6 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v6;
      uint64_t v7 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v7;
      uint64_t v8 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v8;
      uint64_t v9 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v9;
      uint64_t v10 = type metadata accessor for ChatLockRecord();
      uint64_t v11 = *(int *)(v10 + 40);
      __dst = (char *)a1 + v11;
      uint64_t v555 = v10;
      uint64_t v562 = a2;
      uint64_t v12 = &a2[v11];
      uint64_t v13 = sub_22342C130();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        uint64_t v16 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
      uint64_t v97 = a1;
      uint64_t v136 = *(int *)(v555 + 44);
      uint64_t v137 = (char *)a1 + v136;
      uint64_t v138 = &v562[v136];
      if (v15(&v562[v136], 1, v13))
      {
        uint64_t v139 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v137, v138, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v137, 0, 1, v13);
      }
      uint64_t v154 = *(int *)(v555 + 48);
      uint64_t v155 = (void *)((char *)a1 + v154);
      uint64_t v156 = &v562[v154];
LABEL_57:
      uint64_t v227 = *((void *)v156 + 1);
      *uint64_t v155 = *(void *)v156;
      v155[1] = v227;
      swift_bridgeObjectRetain();
      goto LABEL_97;
  }
}

char *sub_22335D14C(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_2233670EC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
    uint64_t v542 = a2;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        unint64_t v28 = (int *)type metadata accessor for ChatRecord(0);
        uint64_t v29 = v28[10];
        v534 = &a1[v29];
        v539 = &a2[v29];
        uint64_t v30 = sub_22342C130();
        __dstd = *(void **)(v30 - 8);
        uint64_t v31 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstd[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31(v539, 1, v30))
        {
          uint64_t v32 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v534, v539, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))__dstd[2])(v534, v539, v30);
          ((void (*)(char *, void, uint64_t, uint64_t))__dstd[7])(v534, 0, 1, v30);
        }
        uint64_t v87 = v28[11];
        uint64_t v88 = &a1[v87];
        uint64_t v89 = &a2[v87];
        if (v31(&v542[v87], 1, v30))
        {
          uint64_t v90 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))__dstd[2])(v88, v89, v30);
          ((void (*)(char *, void, uint64_t, uint64_t))__dstd[7])(v88, 0, 1, v30);
        }
        uint64_t v100 = v28[12];
        uint64_t v101 = &a1[v100];
        uint64_t v102 = &v542[v100];
        *(void *)uint64_t v101 = *(void *)v102;
        *((void *)v101 + 1) = *((void *)v102 + 1);
        uint64_t v103 = v28[13];
        uint64_t v104 = &a1[v103];
        uint64_t v105 = &v542[v103];
        uint64_t v106 = *(void *)v105;
        v104[8] = v105[8];
        *(void *)uint64_t v104 = v106;
        uint64_t v107 = v28[14];
        uint64_t v108 = &a1[v107];
        uint64_t v109 = &v542[v107];
        uint64_t v110 = *(void *)v109;
        v108[8] = v109[8];
        *(void *)uint64_t v108 = v110;
        *(void *)&a1[v28[15]] = *(void *)&v542[v28[15]];
        uint64_t v111 = v28[16];
        uint64_t v112 = &a1[v111];
        uint64_t v113 = &v542[v111];
        *(void *)uint64_t v112 = *(void *)v113;
        *((void *)v112 + 1) = *((void *)v113 + 1);
        uint64_t v114 = v28[17];
        uint64_t v115 = &a1[v114];
        uint64_t v116 = &v542[v114];
        *(void *)uint64_t v115 = *(void *)v116;
        *((void *)v115 + 1) = *((void *)v116 + 1);
        uint64_t v117 = v28[18];
        uint64_t v118 = &a1[v117];
        uint64_t v119 = &v542[v117];
        *(void *)uint64_t v118 = *(void *)v119;
        *((void *)v118 + 1) = *((void *)v119 + 1);
        uint64_t v120 = v28[19];
        uint64_t v121 = &a1[v120];
        uint64_t v122 = &v542[v120];
        *(void *)uint64_t v121 = *(void *)v122;
        *((void *)v121 + 1) = *((void *)v122 + 1);
        *(void *)&a1[v28[20]] = *(void *)&v542[v28[20]];
        uint64_t v123 = v28[21];
        unint64_t v124 = &a1[v123];
        uint64_t v125 = &v542[v123];
        *(void *)unint64_t v124 = *(void *)v125;
        *((void *)v124 + 1) = *((void *)v125 + 1);
        uint64_t v126 = v28[22];
        uint64_t v127 = &a1[v126];
        uint64_t v128 = &v542[v126];
        uint64_t v129 = *(void *)v128;
        v127[8] = v128[8];
        *(void *)uint64_t v127 = v129;
        uint64_t v130 = v28[23];
        uint64_t v131 = &a1[v130];
        uint64_t v132 = &v542[v130];
        uint64_t v133 = *(void *)v132;
        v131[8] = v132[8];
        *(void *)uint64_t v131 = v133;
        uint64_t v134 = v28[24];
        uint64_t v135 = &a1[v134];
        uint64_t v136 = &v542[v134];
        *(void *)uint64_t v135 = *(void *)v136;
        *((void *)v135 + 1) = *((void *)v136 + 1);
        uint64_t v137 = v28[25];
        uint64_t v138 = &a1[v137];
        uint64_t v139 = &v542[v137];
        uint64_t v140 = *(void *)v139;
        v138[8] = v139[8];
        *(void *)uint64_t v138 = v140;
        uint64_t v141 = v28[26];
        uint64_t v142 = &a1[v141];
        uint64_t v143 = &v542[v141];
        long long v144 = *(_OWORD *)v143;
        *((_WORD *)v142 + 8) = *((_WORD *)v143 + 8);
        *(_OWORD *)uint64_t v142 = v144;
        uint64_t v145 = v28[27];
        unint64_t v146 = &a1[v145];
        uint64_t v147 = &v542[v145];
        *(void *)unint64_t v146 = *(void *)v147;
        *((void *)v146 + 1) = *((void *)v147 + 1);
        uint64_t v148 = v28[28];
        uint64_t v149 = &a1[v148];
        uint64_t v150 = &v542[v148];
        uint64_t v151 = *(void *)v150;
        v149[8] = v150[8];
        *(void *)uint64_t v149 = v151;
        uint64_t v152 = v28[29];
        uint64_t v153 = &a1[v152];
        uint64_t v154 = &v542[v152];
        *(void *)uint64_t v153 = *(void *)v154;
        *((void *)v153 + 1) = *((void *)v154 + 1);
        *(void *)&a1[v28[30]] = *(void *)&v542[v28[30]];
        uint64_t v155 = v28[31];
        uint64_t v156 = *(void **)&v542[v155];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v156 != (void *)1) {
          id v157 = v156;
        }
        *(void *)&a1[v155] = v156;
        goto LABEL_171;
      case 2u:
        type metadata accessor for ItemRecord();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            *((void *)a1 + 4) = *((void *)a2 + 4);
            *((void *)a1 + 5) = *((void *)a2 + 5);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            *((void *)a1 + 10) = *((void *)a2 + 10);
            *((void *)a1 + 11) = *((void *)a2 + 11);
            uint64_t v251 = type metadata accessor for MessageRecord();
            uint64_t v252 = *(int *)(v251 + 40);
            uint64_t v511 = &a1[v252];
            uint64_t v512 = (int *)v251;
            uint64_t v253 = &a2[v252];
            uint64_t v254 = sub_22342C130();
            __dstunint64_t i = *(void **)(v254 - 8);
            uint64_t v255 = (unsigned int (*)(char *, uint64_t, void *))__dsti[6];
            uint64_t v256 = (void *)v254;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v255(v253, 1, v256))
            {
              uint64_t v257 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v511, v253, *(void *)(*(void *)(v257 - 8) + 64));
              uint64_t v258 = __dsti;
            }
            else
            {
              uint64_t v258 = __dsti;
              ((void (*)(char *, char *, void *))__dsti[2])(v511, v253, v256);
              ((void (*)(char *, void, uint64_t, void *))__dsti[7])(v511, 0, 1, v256);
            }
            uint64_t v320 = v512[11];
            uint64_t v321 = &a1[v320];
            id v322 = &a2[v320];
            if (v255(&v542[v320], 1, v256))
            {
              uint64_t v323 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v321, v322, *(void *)(*(void *)(v323 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v258[2])(v321, v322, v256);
              ((void (*)(char *, void, uint64_t, void *))v258[7])(v321, 0, 1, v256);
            }
            uint64_t v331 = v512[12];
            id v332 = &a1[v331];
            id v333 = &v542[v331];
            *(void *)id v332 = *(void *)v333;
            *((void *)v332 + 1) = *((void *)v333 + 1);
            a1[v512[13]] = v542[v512[13]];
            uint64_t v334 = v512[14];
            uint64_t v335 = &a1[v334];
            uint64_t v336 = &v542[v334];
            swift_bridgeObjectRetain();
            if (v255(v336, 1, v256))
            {
              uint64_t v337 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v335, v336, *(void *)(*(void *)(v337 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v258[2])(v335, v336, v256);
              ((void (*)(char *, void, uint64_t, void *))v258[7])(v335, 0, 1, v256);
            }
            uint64_t v342 = v512[15];
            id v343 = &a1[v342];
            id v344 = &v542[v342];
            if (v255(&v542[v342], 1, v256))
            {
              uint64_t v345 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v343, v344, *(void *)(*(void *)(v345 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v258[2])(v343, v344, v256);
              ((void (*)(char *, void, uint64_t, void *))v258[7])(v343, 0, 1, v256);
            }
            uint64_t v350 = v512[16];
            id v351 = &a1[v350];
            uint64_t v352 = &v542[v350];
            if (v255(&v542[v350], 1, v256))
            {
              uint64_t v353 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v351, v352, *(void *)(*(void *)(v353 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v258[2])(v351, v352, v256);
              ((void (*)(char *, void, uint64_t, void *))v258[7])(v351, 0, 1, v256);
            }
            uint64_t v359 = v512[17];
            uint64_t v360 = &a1[v359];
            uint64_t v361 = &v542[v359];
            id v520 = v256;
            if (v255(&v542[v359], 1, v256))
            {
              uint64_t v362 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v360, v361, *(void *)(*(void *)(v362 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v258[2])(v360, v361, v256);
              ((void (*)(char *, void, uint64_t, void *))v258[7])(v360, 0, 1, v256);
            }
            uint64_t v371 = v512[18];
            uint64_t v372 = &a1[v371];
            long long v373 = &v542[v371];
            if (*(void *)&v542[v371 + 8] == 1)
            {
              long long v374 = *(_OWORD *)v373;
              long long v375 = *((_OWORD *)v373 + 1);
              *((void *)v372 + 4) = *((void *)v373 + 4);
              *(_OWORD *)uint64_t v372 = v374;
              *((_OWORD *)v372 + 1) = v375;
            }
            else
            {
              *(void *)uint64_t v372 = *(void *)v373;
              *((void *)v372 + 1) = *((void *)v373 + 1);
              uint64_t v376 = v373 + 16;
              unint64_t v377 = *((void *)v373 + 3);
              swift_bridgeObjectRetain();
              if (v377 >> 60 == 15)
              {
                *((_OWORD *)v372 + 1) = *v376;
              }
              else
              {
                uint64_t v445 = *(void *)v376;
                sub_22331E684(v445, v377);
                *((void *)v372 + 2) = v445;
                *((void *)v372 + 3) = v377;
              }
              uint64_t v446 = (void *)*((void *)v373 + 4);
              *((void *)v372 + 4) = v446;
              id v447 = v446;
            }
            uint64_t v448 = v512[19];
            v449 = &a1[v448];
            unint64_t v450 = &v542[v448];
            uint64_t v451 = *(void *)v450;
            v449[8] = v450[8];
            *(void *)v449 = v451;
            uint64_t v452 = v512[20];
            v453 = &a1[v452];
            uint64_t v454 = &v542[v452];
            uint64_t v455 = *(void *)v454;
            v453[8] = v454[8];
            *(void *)v453 = v455;
            uint64_t v456 = v512[21];
            uint64_t v457 = &a1[v456];
            uint64_t v458 = &v542[v456];
            uint64_t v459 = *(void *)v458;
            v457[8] = v458[8];
            *(void *)uint64_t v457 = v459;
            uint64_t v460 = v512[22];
            uint64_t v461 = &a1[v460];
            id v462 = &v542[v460];
            *(void *)uint64_t v461 = *(void *)v462;
            *((void *)v461 + 1) = *((void *)v462 + 1);
            uint64_t v463 = v512[23];
            uint64_t v464 = &a1[v463];
            v465 = &v542[v463];
            uint64_t v466 = *(void *)v465;
            v464[8] = v465[8];
            *(void *)uint64_t v464 = v466;
            uint64_t v467 = v512[24];
            v468 = &a1[v467];
            uint64_t v469 = &v542[v467];
            *(void *)v468 = *(void *)v469;
            *((void *)v468 + 1) = *((void *)v469 + 1);
            uint64_t v470 = v512[25];
            v471 = &a1[v470];
            uint64_t v472 = &v542[v470];
            *(void *)v471 = *(void *)v472;
            *((void *)v471 + 1) = *((void *)v472 + 1);
            uint64_t v473 = v512[26];
            uint64_t v474 = &a1[v473];
            uint64_t v475 = &v542[v473];
            uint64_t v476 = *(void *)v475;
            v474[8] = v475[8];
            *(void *)uint64_t v474 = v476;
            uint64_t v477 = v512[27];
            v478 = &a1[v477];
            uint64_t v479 = &v542[v477];
            *(void *)v478 = *(void *)v479;
            *((void *)v478 + 1) = *((void *)v479 + 1);
            uint64_t v480 = v512[28];
            uint64_t v481 = &a1[v480];
            uint64_t v482 = &v542[v480];
            *(void *)uint64_t v481 = *(void *)v482;
            *((void *)v481 + 1) = *((void *)v482 + 1);
            uint64_t v483 = v512[29];
            uint64_t v484 = &a1[v483];
            uint64_t v485 = (uint64_t *)&v542[v483];
            unint64_t v486 = *(void *)&v542[v483 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v486 >> 60 == 15)
            {
              *(_OWORD *)uint64_t v484 = *(_OWORD *)v485;
            }
            else
            {
              uint64_t v487 = *v485;
              sub_22331E684(*v485, v486);
              *(void *)uint64_t v484 = v487;
              *((void *)v484 + 1) = v486;
            }
            uint64_t v488 = v512[30];
            v489 = &a1[v488];
            uint64_t v490 = &v542[v488];
            *(void *)v489 = *(void *)v490;
            *((void *)v489 + 1) = *((void *)v490 + 1);
            uint64_t v491 = v512[31];
            uint64_t v492 = &a1[v491];
            uint64_t v493 = &v542[v491];
            swift_bridgeObjectRetain();
            if (v255(v493, 1, v520))
            {
              uint64_t v494 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v492, v493, *(void *)(*(void *)(v494 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))__dsti[2])(v492, v493, v520);
              ((void (*)(char *, void, uint64_t, void *))__dsti[7])(v492, 0, 1, v520);
            }
            uint64_t v495 = v512[32];
            uint64_t v496 = &a1[v495];
            uint64_t v497 = &v542[v495];
            *(void *)uint64_t v496 = *(void *)v497;
            *((void *)v496 + 1) = *((void *)v497 + 1);
            a1[v512[33]] = v542[v512[33]];
            uint64_t v498 = v512[34];
            unint64_t v499 = &a1[v498];
            uint64_t v500 = &v542[v498];
            uint64_t v501 = *(void **)&v542[v498];
            swift_bridgeObjectRetain();
            if (v501 == (void *)1)
            {
              long long v502 = *((_OWORD *)v500 + 1);
              *(_OWORD *)unint64_t v499 = *(_OWORD *)v500;
              *((_OWORD *)v499 + 1) = v502;
            }
            else
            {
              *(void *)unint64_t v499 = v501;
              uint64_t v503 = (void *)*((void *)v500 + 1);
              *((void *)v499 + 1) = v503;
              v504 = (void *)*((void *)v500 + 2);
              *((void *)v499 + 2) = v504;
              unint64_t v505 = (void *)*((void *)v500 + 3);
              *((void *)v499 + 3) = v505;
              id v506 = v501;
              id v507 = v503;
              id v508 = v504;
              id v509 = v505;
            }
            uint64_t v444 = v512[35];
            goto LABEL_168;
          case 2u:
          case 3u:
          case 4u:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            *((void *)a1 + 4) = *((void *)a2 + 4);
            *((void *)a1 + 5) = *((void *)a2 + 5);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            *((void *)a1 + 10) = *((void *)a2 + 10);
            *((void *)a1 + 11) = *((void *)a2 + 11);
            uint64_t v9 = type metadata accessor for ActionRecord();
            uint64_t v10 = *(int *)(v9 + 40);
            uint64_t v516 = &a1[v10];
            __dsta = (int *)v9;
            uint64_t v11 = &a2[v10];
            uint64_t v12 = sub_22342C130();
            uint64_t v513 = *(void **)(v12 - 8);
            uint64_t v13 = (unsigned int (*)(char *, uint64_t, uint64_t))v513[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v13(v11, 1, v12))
            {
              uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v516, v11, *(void *)(*(void *)(v14 - 8) + 64));
              uint64_t v15 = v513;
            }
            else
            {
              uint64_t v15 = v513;
              ((void (*)(char *, char *, uint64_t))v513[2])(v516, v11, v12);
              ((void (*)(char *, void, uint64_t, uint64_t))v513[7])(v516, 0, 1, v12);
            }
            uint64_t v188 = __dsta[11];
            uint64_t v189 = &a1[v188];
            uint64_t v190 = &a2[v188];
            if (v13(&v542[v188], 1, v12))
            {
              uint64_t v191 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v189, v190, *(void *)(*(void *)(v191 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v15[2])(v189, v190, v12);
              ((void (*)(char *, void, uint64_t, uint64_t))v15[7])(v189, 0, 1, v12);
            }
            uint64_t v192 = __dsta[12];
            uint64_t v193 = &a1[v192];
            uint64_t v194 = &v542[v192];
            *(void *)uint64_t v193 = *(void *)v194;
            *((void *)v193 + 1) = *((void *)v194 + 1);
            uint64_t v195 = __dsta[13];
            uint64_t v196 = &a1[v195];
            uint64_t v197 = &v542[v195];
            *(void *)uint64_t v196 = *(void *)v197;
            *((void *)v196 + 1) = *((void *)v197 + 1);
            a1[__dsta[14]] = v542[__dsta[14]];
            a1[__dsta[15]] = v542[__dsta[15]];
            uint64_t v198 = __dsta[16];
            uint64_t v199 = &a1[v198];
            uint64_t v200 = &v542[v198];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v13(v200, 1, v12))
            {
              uint64_t v201 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v15[2])(v199, v200, v12);
              ((void (*)(char *, void, uint64_t, uint64_t))v15[7])(v199, 0, 1, v12);
            }
            uint64_t v202 = __dsta[17];
            uint64_t v203 = &a1[v202];
            uint64_t v204 = &v542[v202];
            *(void *)uint64_t v203 = *(void *)v204;
            *((void *)v203 + 1) = *((void *)v204 + 1);
            uint64_t v205 = __dsta[18];
            uint64_t v206 = &a1[v205];
            uint64_t v207 = &v542[v205];
            *(void *)uint64_t v206 = *(void *)v207;
            *((void *)v206 + 1) = *((void *)v207 + 1);
            uint64_t v208 = __dsta[19];
            uint64_t v209 = &a1[v208];
            uint64_t v210 = &v542[v208];
            *(void *)uint64_t v209 = *(void *)v210;
            *((void *)v209 + 1) = *((void *)v210 + 1);
            uint64_t v211 = __dsta[20];
            uint64_t v212 = &a1[v211];
            id v213 = &v542[v211];
            uint64_t v214 = *(void *)&v542[v211 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v214 == 1)
            {
              long long v215 = *(_OWORD *)v213;
              long long v216 = *((_OWORD *)v213 + 1);
              long long v217 = *((_OWORD *)v213 + 2);
              *((void *)v212 + 6) = *((void *)v213 + 6);
              *((_OWORD *)v212 + 1) = v216;
              *((_OWORD *)v212 + 2) = v217;
              *(_OWORD *)uint64_t v212 = v215;
            }
            else
            {
              *uint64_t v212 = *v213;
              uint64_t v218 = (void *)*((void *)v213 + 1);
              *((void *)v212 + 1) = v218;
              uint64_t v219 = (void *)*((void *)v213 + 2);
              *((void *)v212 + 2) = v219;
              uint64_t v220 = (void *)*((void *)v213 + 3);
              *((void *)v212 + 3) = v220;
              uint64_t v221 = (void *)*((void *)v213 + 4);
              *((void *)v212 + 4) = v221;
              uint64_t v222 = (void *)*((void *)v213 + 5);
              *((void *)v212 + 5) = v222;
              uint64_t v223 = (void *)*((void *)v213 + 6);
              *((void *)v212 + 6) = v223;
              id v224 = v218;
              id v225 = v219;
              id v226 = v220;
              id v227 = v221;
              id v228 = v222;
              id v229 = v223;
            }
            uint64_t v230 = __dsta[21];
            uint64_t v231 = &a1[v230];
            uint64_t v232 = &v542[v230];
            unint64_t v233 = *(void **)v232;
            if (*(void *)v232 == 1)
            {
              long long v234 = *((_OWORD *)v232 + 1);
              *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
              *((_OWORD *)v231 + 1) = v234;
            }
            else
            {
              *(void *)uint64_t v231 = v233;
              uint64_t v235 = (void *)*((void *)v232 + 1);
              *((void *)v231 + 1) = v235;
              uint64_t v236 = (void *)*((void *)v232 + 2);
              *((void *)v231 + 2) = v236;
              uint64_t v237 = (void *)*((void *)v232 + 3);
              *((void *)v231 + 3) = v237;
              id v238 = v233;
              id v239 = v235;
              id v240 = v236;
              id v241 = v237;
            }
            uint64_t v242 = __dsta[22];
            uint64_t v243 = &a1[v242];
            uint64_t v244 = &v542[v242];
            *(void *)uint64_t v243 = *(void *)v244;
            *((void *)v243 + 1) = *((void *)v244 + 1);
            goto LABEL_170;
          case 5u:
          case 6u:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            *((void *)a1 + 4) = *((void *)a2 + 4);
            *((void *)a1 + 5) = *((void *)a2 + 5);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            *((void *)a1 + 10) = *((void *)a2 + 10);
            *((void *)a1 + 11) = *((void *)a2 + 11);
            uint64_t v180 = type metadata accessor for ActionRecord();
            uint64_t v181 = *(int *)(v180 + 40);
            v518 = &a1[v181];
            __dstg = (int *)v180;
            uint64_t v182 = &a2[v181];
            uint64_t v183 = sub_22342C130();
            uint64_t v514 = *(void **)(v183 - 8);
            uint64_t v184 = (unsigned int (*)(char *, uint64_t, uint64_t))v514[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v184(v182, 1, v183))
            {
              uint64_t v185 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v518, v182, *(void *)(*(void *)(v185 - 8) + 64));
              uint64_t v186 = a2;
              uint64_t v187 = v514;
            }
            else
            {
              uint64_t v187 = v514;
              ((void (*)(char *, char *, uint64_t))v514[2])(v518, v182, v183);
              ((void (*)(char *, void, uint64_t, uint64_t))v514[7])(v518, 0, 1, v183);
              uint64_t v186 = a2;
            }
            uint64_t v259 = __dstg[11];
            v260 = &a1[v259];
            uint64_t v261 = &v186[v259];
            if (v184(&v186[v259], 1, v183))
            {
              uint64_t v262 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v260, v261, *(void *)(*(void *)(v262 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v187[2])(v260, v261, v183);
              ((void (*)(char *, void, uint64_t, uint64_t))v187[7])(v260, 0, 1, v183);
            }
            uint64_t v263 = __dstg[12];
            v264 = &a1[v263];
            uint64_t v265 = &v186[v263];
            *(void *)v264 = *(void *)v265;
            *((void *)v264 + 1) = *((void *)v265 + 1);
            uint64_t v266 = __dstg[13];
            uint64_t v267 = &a1[v266];
            uint64_t v268 = &v186[v266];
            *(void *)uint64_t v267 = *(void *)v268;
            *((void *)v267 + 1) = *((void *)v268 + 1);
            a1[__dstg[14]] = v186[__dstg[14]];
            a1[__dstg[15]] = v186[__dstg[15]];
            uint64_t v269 = __dstg[16];
            uint64_t v270 = &a1[v269];
            uint64_t v271 = &v186[v269];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v184(v271, 1, v183))
            {
              uint64_t v272 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v270, v271, *(void *)(*(void *)(v272 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v187[2])(v270, v271, v183);
              ((void (*)(char *, void, uint64_t, uint64_t))v187[7])(v270, 0, 1, v183);
            }
            uint64_t v273 = __dstg[17];
            uint64_t v274 = &a1[v273];
            uint64_t v275 = &v186[v273];
            *(void *)uint64_t v274 = *(void *)v275;
            *((void *)v274 + 1) = *((void *)v275 + 1);
            uint64_t v276 = __dstg[18];
            uint64_t v277 = &a1[v276];
            uint64_t v278 = &v186[v276];
            *(void *)uint64_t v277 = *(void *)v278;
            *((void *)v277 + 1) = *((void *)v278 + 1);
            uint64_t v279 = __dstg[19];
            uint64_t v280 = &a1[v279];
            uint64_t v281 = &v186[v279];
            *(void *)uint64_t v280 = *(void *)v281;
            *((void *)v280 + 1) = *((void *)v281 + 1);
            uint64_t v282 = __dstg[20];
            uint64_t v283 = &a1[v282];
            uint64_t v284 = &v186[v282];
            uint64_t v285 = *(void *)&v186[v282 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v285 == 1)
            {
              long long v286 = *(_OWORD *)v284;
              long long v287 = *((_OWORD *)v284 + 1);
              long long v288 = *((_OWORD *)v284 + 2);
              *((void *)v283 + 6) = *((void *)v284 + 6);
              *((_OWORD *)v283 + 1) = v287;
              *((_OWORD *)v283 + 2) = v288;
              *(_OWORD *)uint64_t v283 = v286;
            }
            else
            {
              *uint64_t v283 = *v284;
              uint64_t v289 = (void *)*((void *)v284 + 1);
              *((void *)v283 + 1) = v289;
              uint64_t v290 = (void *)*((void *)v284 + 2);
              *((void *)v283 + 2) = v290;
              uint64_t v291 = (void *)*((void *)v284 + 3);
              *((void *)v283 + 3) = v291;
              v292 = (void *)*((void *)v284 + 4);
              *((void *)v283 + 4) = v292;
              v293 = (void *)*((void *)v284 + 5);
              *((void *)v283 + 5) = v293;
              uint64_t v294 = (void *)*((void *)v284 + 6);
              *((void *)v283 + 6) = v294;
              id v295 = v289;
              id v296 = v290;
              id v297 = v291;
              id v298 = v292;
              id v299 = v293;
              id v300 = v294;
            }
            uint64_t v301 = __dstg[21];
            uint64_t v302 = &a1[v301];
            id v303 = &v186[v301];
            id v304 = *(void **)v303;
            if (*(void *)v303 == 1)
            {
              long long v305 = *((_OWORD *)v303 + 1);
              *(_OWORD *)uint64_t v302 = *(_OWORD *)v303;
              *((_OWORD *)v302 + 1) = v305;
            }
            else
            {
              *(void *)uint64_t v302 = v304;
              uint64_t v306 = (void *)*((void *)v303 + 1);
              *((void *)v302 + 1) = v306;
              uint64_t v307 = (void *)*((void *)v303 + 2);
              *((void *)v302 + 2) = v307;
              v308 = (void *)*((void *)v303 + 3);
              *((void *)v302 + 3) = v308;
              id v309 = v304;
              id v310 = v306;
              id v311 = v307;
              id v312 = v308;
            }
            uint64_t v313 = __dstg[22];
            uint64_t v314 = &a1[v313];
            uint64_t v315 = &v186[v313];
            goto LABEL_169;
          default:
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = *((void *)a2 + 3);
            *((void *)a1 + 4) = *((void *)a2 + 4);
            *((void *)a1 + 5) = *((void *)a2 + 5);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            *((void *)a1 + 7) = *((void *)a2 + 7);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *((void *)a1 + 9) = *((void *)a2 + 9);
            *((void *)a1 + 10) = *((void *)a2 + 10);
            *((void *)a1 + 11) = *((void *)a2 + 11);
            __dsth = (int *)type metadata accessor for MessageRecord();
            uint64_t v245 = __dsth[10];
            uint64_t v515 = &a1[v245];
            uint64_t v246 = &a2[v245];
            uint64_t v247 = sub_22342C130();
            uint64_t v519 = *(void **)(v247 - 8);
            uint64_t v248 = (unsigned int (*)(char *, uint64_t, uint64_t))v519[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v248(v246, 1, v247))
            {
              uint64_t v249 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v515, v246, *(void *)(*(void *)(v249 - 8) + 64));
              uint64_t v250 = v519;
            }
            else
            {
              uint64_t v250 = v519;
              ((void (*)(char *, char *, uint64_t))v519[2])(v515, v246, v247);
              ((void (*)(char *, void, uint64_t, uint64_t))v519[7])(v515, 0, 1, v247);
            }
            uint64_t v316 = __dsth[11];
            uint64_t v317 = &a1[v316];
            uint64_t v318 = &a2[v316];
            if (v248(&v542[v316], 1, v247))
            {
              uint64_t v319 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v317, v318, *(void *)(*(void *)(v319 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v250[2])(v317, v318, v247);
              ((void (*)(char *, void, uint64_t, uint64_t))v250[7])(v317, 0, 1, v247);
            }
            uint64_t v324 = __dsth[12];
            uint64_t v325 = &a1[v324];
            uint64_t v326 = &v542[v324];
            *(void *)uint64_t v325 = *(void *)v326;
            *((void *)v325 + 1) = *((void *)v326 + 1);
            a1[__dsth[13]] = v542[__dsth[13]];
            uint64_t v327 = __dsth[14];
            long long v328 = &a1[v327];
            id v329 = &v542[v327];
            swift_bridgeObjectRetain();
            if (v248(v329, 1, v247))
            {
              uint64_t v330 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v328, v329, *(void *)(*(void *)(v330 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v250[2])(v328, v329, v247);
              ((void (*)(char *, void, uint64_t, uint64_t))v250[7])(v328, 0, 1, v247);
            }
            uint64_t v338 = __dsth[15];
            long long v339 = &a1[v338];
            uint64_t v340 = &v542[v338];
            if (v248(&v542[v338], 1, v247))
            {
              uint64_t v341 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v339, v340, *(void *)(*(void *)(v341 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v250[2])(v339, v340, v247);
              ((void (*)(char *, void, uint64_t, uint64_t))v250[7])(v339, 0, 1, v247);
            }
            uint64_t v346 = __dsth[16];
            uint64_t v347 = &a1[v346];
            uint64_t v348 = &v542[v346];
            if (v248(&v542[v346], 1, v247))
            {
              uint64_t v349 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v347, v348, *(void *)(*(void *)(v349 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v250[2])(v347, v348, v247);
              ((void (*)(char *, void, uint64_t, uint64_t))v250[7])(v347, 0, 1, v247);
            }
            uint64_t v354 = __dsth[17];
            uint64_t v355 = &a1[v354];
            uint64_t v356 = &v542[v354];
            if (v248(&v542[v354], 1, v247))
            {
              uint64_t v357 = v247;
              uint64_t v358 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v355, v356, *(void *)(*(void *)(v358 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v250[2])(v355, v356, v247);
              uint64_t v357 = v247;
              ((void (*)(char *, void, uint64_t, uint64_t))v250[7])(v355, 0, 1, v247);
            }
            uint64_t v363 = __dsth[18];
            uint64_t v364 = &a1[v363];
            uint64_t v365 = &v542[v363];
            if (*(void *)&v542[v363 + 8] == 1)
            {
              uint64_t v366 = v248;
              long long v367 = *(_OWORD *)v365;
              long long v368 = *((_OWORD *)v365 + 1);
              *((void *)v364 + 4) = *((void *)v365 + 4);
              *(_OWORD *)uint64_t v364 = v367;
              *((_OWORD *)v364 + 1) = v368;
            }
            else
            {
              *(void *)uint64_t v364 = *(void *)v365;
              *((void *)v364 + 1) = *((void *)v365 + 1);
              uint64_t v369 = v365 + 16;
              unint64_t v370 = *((void *)v365 + 3);
              swift_bridgeObjectRetain();
              if (v370 >> 60 == 15)
              {
                *((_OWORD *)v364 + 1) = *v369;
              }
              else
              {
                uint64_t v378 = *(void *)v369;
                sub_22331E684(v378, v370);
                *((void *)v364 + 2) = v378;
                *((void *)v364 + 3) = v370;
              }
              uint64_t v366 = v248;
              uint64_t v379 = (void *)*((void *)v365 + 4);
              *((void *)v364 + 4) = v379;
              id v380 = v379;
            }
            uint64_t v381 = __dsth[19];
            id v382 = &a1[v381];
            uint64_t v383 = &v542[v381];
            uint64_t v384 = *(void *)v383;
            v382[8] = v383[8];
            *(void *)id v382 = v384;
            uint64_t v385 = __dsth[20];
            uint64_t v386 = &a1[v385];
            uint64_t v387 = &v542[v385];
            uint64_t v388 = *(void *)v387;
            v386[8] = v387[8];
            *(void *)uint64_t v386 = v388;
            uint64_t v389 = __dsth[21];
            id v390 = &a1[v389];
            uint64_t v391 = &v542[v389];
            uint64_t v392 = *(void *)v391;
            v390[8] = v391[8];
            *(void *)id v390 = v392;
            uint64_t v393 = __dsth[22];
            uint64_t v394 = &a1[v393];
            uint64_t v395 = &v542[v393];
            *(void *)uint64_t v394 = *(void *)v395;
            *((void *)v394 + 1) = *((void *)v395 + 1);
            uint64_t v396 = __dsth[23];
            uint64_t v397 = &a1[v396];
            v398 = &v542[v396];
            uint64_t v399 = *(void *)v398;
            v397[8] = v398[8];
            *(void *)uint64_t v397 = v399;
            uint64_t v400 = __dsth[24];
            v401 = &a1[v400];
            uint64_t v402 = &v542[v400];
            *(void *)v401 = *(void *)v402;
            *((void *)v401 + 1) = *((void *)v402 + 1);
            uint64_t v403 = __dsth[25];
            long long v404 = &a1[v403];
            v405 = &v542[v403];
            *(void *)long long v404 = *(void *)v405;
            *((void *)v404 + 1) = *((void *)v405 + 1);
            uint64_t v406 = __dsth[26];
            uint64_t v407 = &a1[v406];
            v408 = &v542[v406];
            uint64_t v409 = *(void *)v408;
            v407[8] = v408[8];
            *(void *)uint64_t v407 = v409;
            uint64_t v410 = __dsth[27];
            long long v411 = &a1[v410];
            uint64_t v412 = &v542[v410];
            *(void *)long long v411 = *(void *)v412;
            *((void *)v411 + 1) = *((void *)v412 + 1);
            uint64_t v413 = __dsth[28];
            uint64_t v414 = &a1[v413];
            uint64_t v415 = &v542[v413];
            *(void *)uint64_t v414 = *(void *)v415;
            *((void *)v414 + 1) = *((void *)v415 + 1);
            uint64_t v416 = __dsth[29];
            uint64_t v417 = &a1[v416];
            uint64_t v418 = (uint64_t *)&v542[v416];
            unint64_t v419 = *(void *)&v542[v416 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v419 >> 60 == 15)
            {
              *(_OWORD *)uint64_t v417 = *(_OWORD *)v418;
            }
            else
            {
              uint64_t v420 = *v418;
              sub_22331E684(*v418, v419);
              *(void *)uint64_t v417 = v420;
              *((void *)v417 + 1) = v419;
            }
            v421 = __dsth;
            uint64_t v422 = __dsth[30];
            uint64_t v423 = &a1[v422];
            v424 = &v542[v422];
            *(void *)uint64_t v423 = *(void *)v424;
            *((void *)v423 + 1) = *((void *)v424 + 1);
            uint64_t v425 = __dsth[31];
            uint64_t v426 = &a1[v425];
            uint64_t v427 = &v542[v425];
            swift_bridgeObjectRetain();
            if (v366(v427, 1, v357))
            {
              uint64_t v428 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v426, v427, *(void *)(*(void *)(v428 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v519[2])(v426, v427, v357);
              ((void (*)(char *, void, uint64_t, uint64_t))v519[7])(v426, 0, 1, v357);
            }
            uint64_t v429 = __dsth[32];
            uint64_t v430 = &a1[v429];
            uint64_t v431 = &v542[v429];
            *(void *)uint64_t v430 = *(void *)v431;
            *((void *)v430 + 1) = *((void *)v431 + 1);
            a1[__dsth[33]] = v542[__dsth[33]];
            uint64_t v432 = __dsth[34];
            uint64_t v433 = &a1[v432];
            uint64_t v434 = &v542[v432];
            uint64_t v435 = *(void **)&v542[v432];
            swift_bridgeObjectRetain();
            if (v435 == (void *)1)
            {
              long long v436 = *((_OWORD *)v434 + 1);
              *(_OWORD *)uint64_t v433 = *(_OWORD *)v434;
              *((_OWORD *)v433 + 1) = v436;
            }
            else
            {
              *(void *)uint64_t v433 = v435;
              uint64_t v437 = (void *)*((void *)v434 + 1);
              *((void *)v433 + 1) = v437;
              uint64_t v438 = (void *)*((void *)v434 + 2);
              *((void *)v433 + 2) = v438;
              uint64_t v439 = (void *)*((void *)v434 + 3);
              *((void *)v433 + 3) = v439;
              id v440 = v435;
              id v441 = v437;
              id v442 = v438;
              v421 = __dsth;
              id v443 = v439;
            }
            uint64_t v444 = v421[35];
LABEL_168:
            uint64_t v314 = &a1[v444];
            uint64_t v315 = &v542[v444];
LABEL_169:
            *(void *)uint64_t v314 = *(void *)v315;
            *((void *)v314 + 1) = *((void *)v315 + 1);
LABEL_170:
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
            break;
        }
        goto LABEL_171;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t v16 = type metadata accessor for AttachmentRecord();
        uint64_t v17 = *(int *)(v16 + 40);
        __dstb = &a1[v17];
        uint64_t v532 = &a2[v17];
        v538 = (int *)v16;
        uint64_t v18 = sub_22342C130();
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20(v532, 1, v18))
        {
          uint64_t v21 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dstb, v532, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dstb, v532, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dstb, 0, 1, v18);
        }
        uint64_t v44 = v542;
        uint64_t v45 = v538;
        uint64_t v46 = v19;
        uint64_t v47 = v538[11];
        uint64_t v48 = &a1[v47];
        uint64_t v49 = &v542[v47];
        if (v20(&v542[v47], 1, v18))
        {
          uint64_t v50 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v48, v49, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v18);
        }
        uint64_t v56 = v538[12];
        uint64_t v57 = &a1[v56];
        uint64_t v58 = &v542[v56];
        *(void *)uint64_t v57 = *(void *)v58;
        *((void *)v57 + 1) = *((void *)v58 + 1);
        uint64_t v59 = v538[13];
        uint64_t v60 = &a1[v59];
        unint64_t v61 = &v542[v59];
        uint64_t v62 = *(void *)&v542[v59 + 192];
        swift_bridgeObjectRetain();
        if (v62)
        {
          *uint64_t v60 = *v61;
          uint64_t v63 = *((void *)v61 + 1);
          v60[16] = v61[16];
          *((void *)v60 + 1) = v63;
          *((void *)v60 + 3) = *((void *)v61 + 3);
          *((void *)v60 + 4) = *((void *)v61 + 4);
          *((void *)v60 + 5) = *((void *)v61 + 5);
          *((void *)v60 + 6) = *((void *)v61 + 6);
          uint64_t v64 = *((void *)v61 + 7);
          v60[64] = v61[64];
          *((void *)v60 + 7) = v64;
          *((void *)v60 + 9) = *((void *)v61 + 9);
          *((void *)v60 + 10) = *((void *)v61 + 10);
          v60[88] = v61[88];
          *((void *)v60 + 12) = *((void *)v61 + 12);
          *((void *)v60 + 13) = *((void *)v61 + 13);
          *((void *)v60 + 14) = *((void *)v61 + 14);
          *((void *)v60 + 15) = *((void *)v61 + 15);
          v60[128] = v61[128];
          *((void *)v60 + 17) = *((void *)v61 + 17);
          *((void *)v60 + 18) = *((void *)v61 + 18);
          uint64_t v65 = *((void *)v61 + 19);
          v60[160] = v61[160];
          *((void *)v60 + 19) = v65;
          uint64_t v66 = *((void *)v61 + 21);
          v60[176] = v61[176];
          *((void *)v60 + 21) = v66;
          *((void *)v60 + 23) = *((void *)v61 + 23);
          *((void *)v60 + 24) = *((void *)v61 + 24);
          *((void *)v60 + 25) = *((void *)v61 + 25);
          *((void *)v60 + 26) = *((void *)v61 + 26);
          *((void *)v60 + 27) = *((void *)v61 + 27);
          *((void *)v60 + 28) = *((void *)v61 + 28);
          uint64_t v67 = (uint64_t *)(v61 + 232);
          unint64_t v68 = *((void *)v61 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v68 >> 60 == 15)
          {
            *(_OWORD *)(v60 + 232) = *(_OWORD *)v67;
          }
          else
          {
            uint64_t v170 = *v67;
            sub_22331E684(*v67, v68);
            *((void *)v60 + 29) = v170;
            *((void *)v60 + 30) = v68;
          }
          uint64_t v44 = v542;
          uint64_t v45 = v538;
          uint64_t v171 = (uint64_t *)(v61 + 248);
          unint64_t v172 = *((void *)v61 + 32);
          if (v172 >> 60 == 15)
          {
            *(_OWORD *)(v60 + 248) = *(_OWORD *)v171;
          }
          else
          {
            uint64_t v173 = *v171;
            sub_22331E684(*v171, *((void *)v61 + 32));
            *((void *)v60 + 31) = v173;
            *((void *)v60 + 32) = v172;
          }
          uint64_t v174 = (uint64_t *)(v61 + 264);
          unint64_t v175 = *((void *)v61 + 34);
          if (v175 >> 60 == 15)
          {
            *(_OWORD *)(v60 + 264) = *(_OWORD *)v174;
          }
          else
          {
            uint64_t v176 = *v174;
            sub_22331E684(*v174, *((void *)v61 + 34));
            *((void *)v60 + 33) = v176;
            *((void *)v60 + 34) = v175;
          }
          uint64_t v177 = *((void *)v61 + 35);
          v60[288] = v61[288];
          *((void *)v60 + 35) = v177;
          *((void *)v60 + 37) = *((void *)v61 + 37);
          *((void *)v60 + 38) = *((void *)v61 + 38);
          *((void *)v60 + 39) = *((void *)v61 + 39);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v60, v61, 0x140uLL);
        }
        uint64_t v178 = v45[14];
        uint64_t v165 = &a1[v178];
        uint64_t v179 = (long long *)((char *)v44 + v178);
        unint64_t v167 = *((void *)v179 + 1);
        if (v167 >> 60 == 15)
        {
          long long v168 = *v179;
          goto LABEL_67;
        }
        uint64_t v169 = *(void *)v179;
        goto LABEL_69;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t v22 = type metadata accessor for RecoverableMessageRecord();
        uint64_t v23 = *(int *)(v22 + 40);
        __dstc = &a1[v23];
        uint64_t v533 = (int *)v22;
        uint64_t v517 = &a2[v23];
        uint64_t v24 = sub_22342C130();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v26(v517, 1, v24))
        {
          uint64_t v27 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dstc, v517, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dstc, v517, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dstc, 0, 1, v24);
        }
        uint64_t v51 = v25;
        uint64_t v52 = v533[11];
        uint64_t v53 = &a1[v52];
        uint64_t v54 = &v542[v52];
        if (v26(&v542[v52], 1, v24))
        {
          uint64_t v55 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v53, v54, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v53, 0, 1, v24);
        }
        uint64_t v69 = v533[12];
        uint64_t v70 = &a1[v69];
        uint64_t v71 = &v542[v69];
        *(void *)uint64_t v70 = *(void *)v71;
        *((void *)v70 + 1) = *((void *)v71 + 1);
        uint64_t v72 = v533[13];
        uint64_t v73 = &a1[v72];
        uint64_t v74 = &v542[v72];
        swift_bridgeObjectRetain();
        if (v26(v74, 1, v24))
        {
          uint64_t v75 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v73, v74, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v73, 0, 1, v24);
        }
        uint64_t v76 = v533[14];
        uint64_t v77 = &a1[v76];
        uint64_t v78 = &v542[v76];
        unint64_t v79 = *((void *)v78 + 1);
        if (v79 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
        }
        else
        {
          uint64_t v80 = *(void *)v78;
          sub_22331E684(*(void *)v78, *((void *)v78 + 1));
          *(void *)uint64_t v77 = v80;
          *((void *)v77 + 1) = v79;
        }
        goto LABEL_171;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t updated = type metadata accessor for MessageUpdateRecord();
        uint64_t v34 = *(int *)(updated + 40);
        __dste = &a1[v34];
        v535 = (int *)updated;
        uint64_t v540 = &a2[v34];
        uint64_t v35 = sub_22342C130();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37(v540, 1, v35))
        {
          uint64_t v38 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dste, v540, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dste, v540, v35);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dste, 0, 1, v35);
        }
        uint64_t v91 = v535[11];
        uint64_t v92 = &a1[v91];
        uint64_t v93 = &a2[v91];
        if (v37(&v542[v91], 1, v35))
        {
          uint64_t v94 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v92, v93, v35);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v92, 0, 1, v35);
        }
        uint64_t v158 = v535[12];
        uint64_t v159 = &a1[v158];
        uint64_t v160 = &v542[v158];
        *(void *)uint64_t v159 = *(void *)v160;
        *((void *)v159 + 1) = *((void *)v160 + 1);
        uint64_t v161 = v535[13];
        v162 = &a1[v161];
        uint64_t v163 = &v542[v161];
        *(void *)v162 = *(void *)v163;
        *((void *)v162 + 1) = *((void *)v163 + 1);
        uint64_t v164 = v535[14];
        uint64_t v165 = &a1[v164];
        id v166 = (long long *)&v542[v164];
        unint64_t v167 = *(void *)&v542[v164 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v167 >> 60 == 15)
        {
          long long v168 = *v166;
LABEL_67:
          *(_OWORD *)uint64_t v165 = v168;
        }
        else
        {
          uint64_t v169 = *(void *)v166;
LABEL_69:
          sub_22331E684(v169, v167);
          *(void *)uint64_t v165 = v169;
          *((void *)v165 + 1) = v167;
        }
        goto LABEL_171;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t v39 = type metadata accessor for UnknownRecord();
        uint64_t v40 = *(int *)(v39 + 40);
        __dstf = &a1[v40];
        uint64_t v536 = (int *)v39;
        uint64_t v541 = &a2[v40];
        uint64_t v5 = sub_22342C130();
        uint64_t v41 = *(void *)(v5 - 8);
        uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v42(v541, 1, v5))
        {
          uint64_t v43 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dstf, v541, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(__dstf, v541, v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(__dstf, 0, 1, v5);
        }
        uint64_t v81 = v542;
        uint64_t v82 = v536;
        uint64_t v83 = v41;
        uint64_t v95 = v536[11];
        uint64_t v85 = &a1[v95];
        uint64_t v86 = &v542[v95];
        if (v42(&v542[v95], 1, v5)) {
          goto LABEL_47;
        }
        goto LABEL_38;
      default:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        uint64_t v3 = type metadata accessor for ChatLockRecord();
        uint64_t v4 = *(int *)(v3 + 40);
        __dst = &a1[v4];
        v531 = (int *)v3;
        uint64_t v537 = &a2[v4];
        uint64_t v5 = sub_22342C130();
        uint64_t v6 = *(void *)(v5 - 8);
        uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7(v537, 1, v5))
        {
          uint64_t v8 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(__dst, v537, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(__dst, v537, v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
        }
        uint64_t v81 = v542;
        uint64_t v82 = v531;
        uint64_t v83 = v6;
        uint64_t v84 = v531[11];
        uint64_t v85 = &a1[v84];
        uint64_t v86 = &v542[v84];
        if (v7(&v542[v84], 1, v5))
        {
LABEL_47:
          uint64_t v96 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v85, v86, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
LABEL_38:
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v85, v86, v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v5);
        }
        uint64_t v97 = v82[12];
        uint64_t v98 = &a1[v97];
        uint64_t v99 = (void *)((char *)v81 + v97);
        *(void *)uint64_t v98 = *v99;
        *((void *)v98 + 1) = v99[1];
        swift_bridgeObjectRetain();
LABEL_171:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for DatabaseRecord()
{
  uint64_t result = qword_26AD5FBC0;
  if (!qword_26AD5FBC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_2233600BC(_OWORD *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v15 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v15;
      long long v16 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v16;
      long long v17 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v17;
      uint64_t v18 = (int *)type metadata accessor for ChatRecord(0);
      uint64_t v19 = v18[10];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_22342C130();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      if (v24(v21, 1, v22))
      {
        uint64_t v25 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v83 = v18[11];
      uint64_t v84 = (char *)a1 + v83;
      uint64_t v85 = &a2[v83];
      if (v24(&a2[v83], 1, v22))
      {
        uint64_t v86 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v84, v85, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v84, 0, 1, v22);
      }
      *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)&a2[v18[12]];
      uint64_t v96 = v18[13];
      uint64_t v97 = (char *)a1 + v96;
      uint64_t v98 = &a2[v96];
      v97[8] = v98[8];
      *(void *)uint64_t v97 = *(void *)v98;
      uint64_t v99 = v18[14];
      uint64_t v100 = (char *)a1 + v99;
      uint64_t v101 = &a2[v99];
      *(void *)uint64_t v100 = *(void *)v101;
      v100[8] = v101[8];
      *(void *)((char *)a1 + v18[15]) = *(void *)&a2[v18[15]];
      *(_OWORD *)((char *)a1 + v18[16]) = *(_OWORD *)&a2[v18[16]];
      *(_OWORD *)((char *)a1 + v18[17]) = *(_OWORD *)&a2[v18[17]];
      *(_OWORD *)((char *)a1 + v18[18]) = *(_OWORD *)&a2[v18[18]];
      *(_OWORD *)((char *)a1 + v18[19]) = *(_OWORD *)&a2[v18[19]];
      *(void *)((char *)a1 + v18[20]) = *(void *)&a2[v18[20]];
      *(_OWORD *)((char *)a1 + v18[21]) = *(_OWORD *)&a2[v18[21]];
      uint64_t v102 = v18[22];
      uint64_t v103 = (char *)a1 + v102;
      uint64_t v104 = &a2[v102];
      *(void *)uint64_t v103 = *(void *)v104;
      v103[8] = v104[8];
      uint64_t v105 = v18[23];
      uint64_t v106 = (char *)a1 + v105;
      uint64_t v107 = &a2[v105];
      v106[8] = v107[8];
      *(void *)uint64_t v106 = *(void *)v107;
      *(_OWORD *)((char *)a1 + v18[24]) = *(_OWORD *)&a2[v18[24]];
      uint64_t v108 = v18[25];
      uint64_t v109 = (char *)a1 + v108;
      uint64_t v110 = &a2[v108];
      v109[8] = v110[8];
      *(void *)uint64_t v109 = *(void *)v110;
      uint64_t v111 = v18[26];
      uint64_t v112 = (char *)a1 + v111;
      uint64_t v113 = &a2[v111];
      *((_WORD *)v112 + 8) = *((_WORD *)v113 + 8);
      *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
      *(_OWORD *)((char *)a1 + v18[27]) = *(_OWORD *)&a2[v18[27]];
      uint64_t v114 = v18[28];
      uint64_t v115 = (char *)a1 + v114;
      uint64_t v116 = &a2[v114];
      *(void *)uint64_t v115 = *(void *)v116;
      v115[8] = v116[8];
      *(_OWORD *)((char *)a1 + v18[29]) = *(_OWORD *)&a2[v18[29]];
      *(void *)((char *)a1 + v18[30]) = *(void *)&a2[v18[30]];
      *(void *)((char *)a1 + v18[31]) = *(void *)&a2[v18[31]];
      break;
    case 2u:
      type metadata accessor for ItemRecord();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          long long v147 = *((_OWORD *)a2 + 1);
          *a1 = *(_OWORD *)a2;
          a1[1] = v147;
          long long v148 = *((_OWORD *)a2 + 3);
          a1[2] = *((_OWORD *)a2 + 2);
          a1[3] = v148;
          long long v149 = *((_OWORD *)a2 + 5);
          a1[4] = *((_OWORD *)a2 + 4);
          a1[5] = v149;
          uint64_t v140 = (int *)type metadata accessor for MessageRecord();
          uint64_t v150 = v140[10];
          uint64_t v151 = (char *)a1 + v150;
          uint64_t v152 = &a2[v150];
          uint64_t v144 = sub_22342C130();
          uint64_t v153 = *(void *)(v144 - 8);
          uint64_t v271 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48);
          uint64_t v268 = v153;
          if (v271(v152, 1, v144))
          {
            uint64_t v154 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v151, v152, v144);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v151, 0, 1, v144);
          }
          uint64_t v167 = v140[11];
          long long v168 = (char *)a1 + v167;
          uint64_t v169 = &a2[v167];
          uint64_t v170 = v271;
          if (v271(&a2[v167], 1, v144))
          {
            uint64_t v171 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v168, v169, v144);
            uint64_t v170 = v271;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v168, 0, 1, v144);
          }
          *(_OWORD *)((char *)a1 + v140[12]) = *(_OWORD *)&a2[v140[12]];
          *((unsigned char *)a1 + v140[13]) = a2[v140[13]];
          uint64_t v176 = v140[14];
          uint64_t v177 = (char *)a1 + v176;
          uint64_t v178 = &a2[v176];
          if (v170(&a2[v176], 1, v144))
          {
            uint64_t v179 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v177, v178, v144);
            uint64_t v170 = v271;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v177, 0, 1, v144);
          }
          uint64_t v184 = v140[15];
          uint64_t v185 = (char *)a1 + v184;
          uint64_t v186 = &a2[v184];
          if (v170(&a2[v184], 1, v144))
          {
            uint64_t v187 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v185, v186, v144);
            uint64_t v170 = v271;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v185, 0, 1, v144);
          }
          uint64_t v192 = v140[16];
          uint64_t v193 = (char *)a1 + v192;
          uint64_t v194 = &a2[v192];
          if (v170(&a2[v192], 1, v144))
          {
            uint64_t v195 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v193, v194, *(void *)(*(void *)(v195 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v193, v194, v144);
            uint64_t v170 = v271;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v193, 0, 1, v144);
          }
          uint64_t v200 = v140[17];
          uint64_t v201 = (char *)a1 + v200;
          uint64_t v202 = &a2[v200];
          if (v170(&a2[v200], 1, v144))
          {
            uint64_t v203 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v201, v202, *(void *)(*(void *)(v203 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v201, v202, v144);
            uint64_t v170 = v271;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v201, 0, 1, v144);
          }
          uint64_t v226 = v140[18];
          id v227 = (char *)a1 + v226;
          id v228 = &a2[v226];
          long long v229 = *((_OWORD *)v228 + 1);
          *(_OWORD *)id v227 = *(_OWORD *)v228;
          *((_OWORD *)v227 + 1) = v229;
          *((void *)v227 + 4) = *((void *)v228 + 4);
          uint64_t v230 = v140[19];
          uint64_t v231 = (char *)a1 + v230;
          uint64_t v232 = &a2[v230];
          v231[8] = v232[8];
          *(void *)uint64_t v231 = *(void *)v232;
          uint64_t v233 = v140[20];
          long long v234 = (char *)a1 + v233;
          uint64_t v235 = &a2[v233];
          *(void *)long long v234 = *(void *)v235;
          v234[8] = v235[8];
          uint64_t v236 = v140[21];
          uint64_t v237 = (char *)a1 + v236;
          id v238 = &a2[v236];
          *(void *)uint64_t v237 = *(void *)v238;
          v237[8] = v238[8];
          *(_OWORD *)((char *)a1 + v140[22]) = *(_OWORD *)&a2[v140[22]];
          uint64_t v239 = v140[23];
          id v240 = (char *)a1 + v239;
          id v241 = &a2[v239];
          *(void *)id v240 = *(void *)v241;
          v240[8] = v241[8];
          *(_OWORD *)((char *)a1 + v140[24]) = *(_OWORD *)&a2[v140[24]];
          *(_OWORD *)((char *)a1 + v140[25]) = *(_OWORD *)&a2[v140[25]];
          uint64_t v242 = v140[26];
          uint64_t v243 = (char *)a1 + v242;
          uint64_t v244 = &a2[v242];
          *(void *)uint64_t v243 = *(void *)v244;
          v243[8] = v244[8];
          *(_OWORD *)((char *)a1 + v140[27]) = *(_OWORD *)&a2[v140[27]];
          *(_OWORD *)((char *)a1 + v140[28]) = *(_OWORD *)&a2[v140[28]];
          *(_OWORD *)((char *)a1 + v140[29]) = *(_OWORD *)&a2[v140[29]];
          *(_OWORD *)((char *)a1 + v140[30]) = *(_OWORD *)&a2[v140[30]];
          uint64_t v245 = v140[31];
          id v224 = (char *)a1 + v245;
          id v225 = &a2[v245];
          if (!v170(&a2[v245], 1, v144)) {
            goto LABEL_96;
          }
          goto LABEL_99;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          long long v26 = *((_OWORD *)a2 + 1);
          *a1 = *(_OWORD *)a2;
          a1[1] = v26;
          long long v27 = *((_OWORD *)a2 + 3);
          a1[2] = *((_OWORD *)a2 + 2);
          a1[3] = v27;
          long long v28 = *((_OWORD *)a2 + 5);
          a1[4] = *((_OWORD *)a2 + 4);
          a1[5] = v28;
          uint64_t v29 = (int *)type metadata accessor for ActionRecord();
          uint64_t v30 = v29[10];
          uint64_t v31 = (char *)a1 + v30;
          uint64_t v32 = &a2[v30];
          uint64_t v33 = sub_22342C130();
          uint64_t v34 = *(void *)(v33 - 8);
          uint64_t v269 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
          if (v269(v32, 1, v33))
          {
            uint64_t v35 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
          }
          uint64_t v130 = v29[11];
          uint64_t v131 = (char *)a1 + v130;
          uint64_t v132 = &a2[v130];
          if (v269(&a2[v130], 1, v33))
          {
            uint64_t v133 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v131, v132, v33);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v131, 0, 1, v33);
          }
          *(_OWORD *)((char *)a1 + v29[12]) = *(_OWORD *)&a2[v29[12]];
          *(_OWORD *)((char *)a1 + v29[13]) = *(_OWORD *)&a2[v29[13]];
          *((unsigned char *)a1 + v29[14]) = a2[v29[14]];
          *((unsigned char *)a1 + v29[15]) = a2[v29[15]];
          uint64_t v134 = v29[16];
          uint64_t v135 = (char *)a1 + v134;
          uint64_t v136 = &a2[v134];
          if (!v269(&a2[v134], 1, v33)) {
            goto LABEL_107;
          }
          goto LABEL_106;
        case 6u:
          long long v155 = *((_OWORD *)a2 + 1);
          *a1 = *(_OWORD *)a2;
          a1[1] = v155;
          long long v156 = *((_OWORD *)a2 + 3);
          a1[2] = *((_OWORD *)a2 + 2);
          a1[3] = v156;
          long long v157 = *((_OWORD *)a2 + 5);
          a1[4] = *((_OWORD *)a2 + 4);
          a1[5] = v157;
          uint64_t v29 = (int *)type metadata accessor for ActionRecord();
          uint64_t v158 = v29[10];
          uint64_t v159 = (char *)a1 + v158;
          uint64_t v160 = &a2[v158];
          uint64_t v33 = sub_22342C130();
          uint64_t v34 = *(void *)(v33 - 8);
          uint64_t v272 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
          if (v272(v160, 1, v33))
          {
            uint64_t v161 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v159, v160, v33);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v159, 0, 1, v33);
          }
          uint64_t v252 = v29[11];
          uint64_t v253 = (char *)a1 + v252;
          uint64_t v254 = &a2[v252];
          if (v272(&a2[v252], 1, v33))
          {
            uint64_t v255 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v253, v254, *(void *)(*(void *)(v255 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v253, v254, v33);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v253, 0, 1, v33);
          }
          *(_OWORD *)((char *)a1 + v29[12]) = *(_OWORD *)&a2[v29[12]];
          *(_OWORD *)((char *)a1 + v29[13]) = *(_OWORD *)&a2[v29[13]];
          *((unsigned char *)a1 + v29[14]) = a2[v29[14]];
          *((unsigned char *)a1 + v29[15]) = a2[v29[15]];
          uint64_t v256 = v29[16];
          uint64_t v135 = (char *)a1 + v256;
          uint64_t v136 = &a2[v256];
          if (v272(&a2[v256], 1, v33))
          {
LABEL_106:
            uint64_t v257 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v135, v136, *(void *)(*(void *)(v257 - 8) + 64));
          }
          else
          {
LABEL_107:
            (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v135, v136, v33);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v135, 0, 1, v33);
          }
          *(_OWORD *)((char *)a1 + v29[17]) = *(_OWORD *)&a2[v29[17]];
          *(_OWORD *)((char *)a1 + v29[18]) = *(_OWORD *)&a2[v29[18]];
          *(_OWORD *)((char *)a1 + v29[19]) = *(_OWORD *)&a2[v29[19]];
          uint64_t v258 = v29[20];
          uint64_t v259 = (char *)a1 + v258;
          v260 = &a2[v258];
          *((void *)v259 + 6) = *((void *)v260 + 6);
          long long v261 = *((_OWORD *)v260 + 2);
          long long v262 = *(_OWORD *)v260;
          *((_OWORD *)v259 + 1) = *((_OWORD *)v260 + 1);
          *((_OWORD *)v259 + 2) = v261;
          *(_OWORD *)uint64_t v259 = v262;
          uint64_t v263 = v29[21];
          v264 = (_OWORD *)((char *)a1 + v263);
          uint64_t v265 = &a2[v263];
          long long v266 = *((_OWORD *)v265 + 1);
          _OWORD *v264 = *(_OWORD *)v265;
          v264[1] = v266;
          uint64_t v251 = v29 + 22;
          break;
        default:
          long long v137 = *((_OWORD *)a2 + 1);
          *a1 = *(_OWORD *)a2;
          a1[1] = v137;
          long long v138 = *((_OWORD *)a2 + 3);
          a1[2] = *((_OWORD *)a2 + 2);
          a1[3] = v138;
          long long v139 = *((_OWORD *)a2 + 5);
          a1[4] = *((_OWORD *)a2 + 4);
          a1[5] = v139;
          uint64_t v140 = (int *)type metadata accessor for MessageRecord();
          uint64_t v141 = v140[10];
          uint64_t v142 = (char *)a1 + v141;
          uint64_t v143 = &a2[v141];
          uint64_t v144 = sub_22342C130();
          uint64_t v145 = *(void *)(v144 - 8);
          uint64_t v270 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48);
          uint64_t v268 = v145;
          if (v270(v143, 1, v144))
          {
            uint64_t v146 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v142, v143, v144);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
          }
          uint64_t v162 = v140[11];
          uint64_t v163 = (char *)a1 + v162;
          uint64_t v164 = &a2[v162];
          uint64_t v165 = v270;
          if (v270(&a2[v162], 1, v144))
          {
            uint64_t v166 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v163, v164, v144);
            uint64_t v165 = v270;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v163, 0, 1, v144);
          }
          *(_OWORD *)((char *)a1 + v140[12]) = *(_OWORD *)&a2[v140[12]];
          *((unsigned char *)a1 + v140[13]) = a2[v140[13]];
          uint64_t v172 = v140[14];
          uint64_t v173 = (char *)a1 + v172;
          uint64_t v174 = &a2[v172];
          if (v165(&a2[v172], 1, v144))
          {
            uint64_t v175 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v173, v174, v144);
            uint64_t v165 = v270;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v173, 0, 1, v144);
          }
          uint64_t v180 = v140[15];
          uint64_t v181 = (char *)a1 + v180;
          uint64_t v182 = &a2[v180];
          if (v165(&a2[v180], 1, v144))
          {
            uint64_t v183 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v181, v182, v144);
            uint64_t v165 = v270;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v181, 0, 1, v144);
          }
          uint64_t v188 = v140[16];
          uint64_t v189 = (char *)a1 + v188;
          uint64_t v190 = &a2[v188];
          if (v165(&a2[v188], 1, v144))
          {
            uint64_t v191 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v189, v190, *(void *)(*(void *)(v191 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v189, v190, v144);
            uint64_t v165 = v270;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v189, 0, 1, v144);
          }
          uint64_t v196 = v140[17];
          uint64_t v197 = (char *)a1 + v196;
          uint64_t v198 = &a2[v196];
          if (v165(&a2[v196], 1, v144))
          {
            uint64_t v199 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v197, v198, v144);
            uint64_t v165 = v270;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v197, 0, 1, v144);
          }
          uint64_t v204 = v140[18];
          uint64_t v205 = (char *)a1 + v204;
          uint64_t v206 = &a2[v204];
          long long v207 = *((_OWORD *)v206 + 1);
          *(_OWORD *)uint64_t v205 = *(_OWORD *)v206;
          *((_OWORD *)v205 + 1) = v207;
          *((void *)v205 + 4) = *((void *)v206 + 4);
          uint64_t v208 = v140[19];
          uint64_t v209 = (char *)a1 + v208;
          uint64_t v210 = &a2[v208];
          v209[8] = v210[8];
          *(void *)uint64_t v209 = *(void *)v210;
          uint64_t v211 = v140[20];
          uint64_t v212 = (char *)a1 + v211;
          id v213 = &a2[v211];
          *(void *)uint64_t v212 = *(void *)v213;
          v212[8] = v213[8];
          uint64_t v214 = v140[21];
          long long v215 = (char *)a1 + v214;
          long long v216 = &a2[v214];
          *(void *)long long v215 = *(void *)v216;
          v215[8] = v216[8];
          *(_OWORD *)((char *)a1 + v140[22]) = *(_OWORD *)&a2[v140[22]];
          uint64_t v217 = v140[23];
          uint64_t v218 = (char *)a1 + v217;
          uint64_t v219 = &a2[v217];
          *(void *)uint64_t v218 = *(void *)v219;
          v218[8] = v219[8];
          *(_OWORD *)((char *)a1 + v140[24]) = *(_OWORD *)&a2[v140[24]];
          *(_OWORD *)((char *)a1 + v140[25]) = *(_OWORD *)&a2[v140[25]];
          uint64_t v220 = v140[26];
          uint64_t v221 = (char *)a1 + v220;
          uint64_t v222 = &a2[v220];
          *(void *)uint64_t v221 = *(void *)v222;
          v221[8] = v222[8];
          *(_OWORD *)((char *)a1 + v140[27]) = *(_OWORD *)&a2[v140[27]];
          *(_OWORD *)((char *)a1 + v140[28]) = *(_OWORD *)&a2[v140[28]];
          *(_OWORD *)((char *)a1 + v140[29]) = *(_OWORD *)&a2[v140[29]];
          *(_OWORD *)((char *)a1 + v140[30]) = *(_OWORD *)&a2[v140[30]];
          uint64_t v223 = v140[31];
          id v224 = (char *)a1 + v223;
          id v225 = &a2[v223];
          if (v165(&a2[v223], 1, v144))
          {
LABEL_99:
            uint64_t v246 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
            memcpy(v224, v225, *(void *)(*(void *)(v246 - 8) + 64));
          }
          else
          {
LABEL_96:
            (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v224, v225, v144);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v224, 0, 1, v144);
          }
          *(_OWORD *)((char *)a1 + v140[32]) = *(_OWORD *)&a2[v140[32]];
          *((unsigned char *)a1 + v140[33]) = a2[v140[33]];
          uint64_t v247 = v140[34];
          uint64_t v248 = (_OWORD *)((char *)a1 + v247);
          uint64_t v249 = &a2[v247];
          long long v250 = *((_OWORD *)v249 + 1);
          *uint64_t v248 = *(_OWORD *)v249;
          v248[1] = v250;
          uint64_t v251 = v140 + 35;
          break;
      }
      *(_OWORD *)((char *)a1 + *v251) = *(_OWORD *)&a2[*v251];
      swift_storeEnumTagMultiPayload();
      break;
    case 3u:
      long long v36 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v36;
      long long v37 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v37;
      long long v38 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v38;
      uint64_t v39 = (int *)type metadata accessor for AttachmentRecord();
      uint64_t v40 = v39[10];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = &a2[v40];
      uint64_t v43 = sub_22342C130();
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
      if (v45(v42, 1, v43))
      {
        uint64_t v46 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      uint64_t v87 = v39[11];
      uint64_t v88 = (char *)a1 + v87;
      uint64_t v89 = &a2[v87];
      if (v45(&a2[v87], 1, v43))
      {
        uint64_t v90 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v88, v89, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v88, 0, 1, v43);
      }
      *(_OWORD *)((char *)a1 + v39[12]) = *(_OWORD *)&a2[v39[12]];
      memcpy((char *)a1 + v39[13], &a2[v39[13]], 0x140uLL);
      goto LABEL_39;
    case 4u:
      long long v47 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v47;
      long long v48 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v48;
      long long v49 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v49;
      uint64_t v39 = (int *)type metadata accessor for RecoverableMessageRecord();
      uint64_t v50 = v39[10];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = &a2[v50];
      uint64_t v53 = sub_22342C130();
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      if (v55(v52, 1, v53))
      {
        uint64_t v56 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      uint64_t v91 = v39[11];
      uint64_t v92 = (char *)a1 + v91;
      uint64_t v93 = &a2[v91];
      if (v55(&a2[v91], 1, v53))
      {
        uint64_t v94 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v92, v93, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v92, 0, 1, v53);
      }
      *(_OWORD *)((char *)a1 + v39[12]) = *(_OWORD *)&a2[v39[12]];
      uint64_t v117 = v39[13];
      uint64_t v118 = (char *)a1 + v117;
      uint64_t v119 = &a2[v117];
      if (v55(&a2[v117], 1, v53))
      {
        uint64_t v120 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v118, v119, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v118, 0, 1, v53);
      }
LABEL_39:
      uint64_t v95 = v39[14];
      goto LABEL_40;
    case 5u:
      long long v57 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v57;
      long long v58 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v58;
      long long v59 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v59;
      uint64_t updated = (int *)type metadata accessor for MessageUpdateRecord();
      uint64_t v61 = updated[10];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = &a2[v61];
      uint64_t v64 = sub_22342C130();
      uint64_t v65 = *(void *)(v64 - 8);
      uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
      if (v66(v63, 1, v64))
      {
        uint64_t v67 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      uint64_t v121 = updated[11];
      uint64_t v122 = (char *)a1 + v121;
      uint64_t v123 = &a2[v121];
      if (v66(&a2[v121], 1, v64))
      {
        uint64_t v124 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v122, v123, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v122, 0, 1, v64);
      }
      *(_OWORD *)((char *)a1 + updated[12]) = *(_OWORD *)&a2[updated[12]];
      *(_OWORD *)((char *)a1 + updated[13]) = *(_OWORD *)&a2[updated[13]];
      uint64_t v129 = updated[14];
      goto LABEL_51;
    case 6u:
      long long v68 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v68;
      long long v69 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v69;
      long long v70 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v70;
      uint64_t v71 = (int *)type metadata accessor for UnknownRecord();
      uint64_t v72 = v71[10];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = &a2[v72];
      uint64_t v75 = sub_22342C130();
      uint64_t v76 = *(void *)(v75 - 8);
      uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
      if (v77(v74, 1, v75))
      {
        uint64_t v78 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      uint64_t v125 = v71[11];
      uint64_t v126 = (char *)a1 + v125;
      uint64_t v127 = &a2[v125];
      if (v77(&a2[v125], 1, v75))
      {
        uint64_t v128 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v126, v127, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v126, 0, 1, v75);
      }
      uint64_t v129 = v71[12];
LABEL_51:
      *(_OWORD *)((char *)a1 + v129) = *(_OWORD *)&a2[v129];
      break;
    default:
      long long v4 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v4;
      long long v5 = *((_OWORD *)a2 + 3);
      a1[2] = *((_OWORD *)a2 + 2);
      a1[3] = v5;
      long long v6 = *((_OWORD *)a2 + 5);
      a1[4] = *((_OWORD *)a2 + 4);
      a1[5] = v6;
      uint64_t v7 = (int *)type metadata accessor for ChatLockRecord();
      uint64_t v8 = v7[10];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_22342C130();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v13(v10, 1, v11))
      {
        uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v79 = v7[11];
      uint64_t v80 = (char *)a1 + v79;
      uint64_t v81 = &a2[v79];
      if (v13(&a2[v79], 1, v11))
      {
        uint64_t v82 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
        memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v80, v81, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v80, 0, 1, v11);
      }
      uint64_t v95 = v7[12];
LABEL_40:
      *(_OWORD *)((char *)a1 + v95) = *(_OWORD *)&a2[v95];
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_223361F98(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_2233670EC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v15 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v15;
        long long v16 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v16;
        long long v17 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v17;
        uint64_t v18 = (int *)type metadata accessor for ChatRecord(0);
        uint64_t v19 = v18[10];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        uint64_t v22 = sub_22342C130();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        if (v24(v21, 1, v22))
        {
          uint64_t v25 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v83 = v18[11];
        uint64_t v84 = &a1[v83];
        uint64_t v85 = &a2[v83];
        if (v24(&a2[v83], 1, v22))
        {
          uint64_t v86 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v84, v85, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v84, 0, 1, v22);
        }
        *(_OWORD *)&a1[v18[12]] = *(_OWORD *)&a2[v18[12]];
        uint64_t v104 = v18[13];
        uint64_t v105 = &a1[v104];
        uint64_t v106 = &a2[v104];
        v105[8] = v106[8];
        *(void *)uint64_t v105 = *(void *)v106;
        uint64_t v107 = v18[14];
        uint64_t v108 = &a1[v107];
        uint64_t v109 = &a2[v107];
        *(void *)uint64_t v108 = *(void *)v109;
        v108[8] = v109[8];
        *(void *)&a1[v18[15]] = *(void *)&a2[v18[15]];
        *(_OWORD *)&a1[v18[16]] = *(_OWORD *)&a2[v18[16]];
        *(_OWORD *)&a1[v18[17]] = *(_OWORD *)&a2[v18[17]];
        *(_OWORD *)&a1[v18[18]] = *(_OWORD *)&a2[v18[18]];
        *(_OWORD *)&a1[v18[19]] = *(_OWORD *)&a2[v18[19]];
        *(void *)&a1[v18[20]] = *(void *)&a2[v18[20]];
        *(_OWORD *)&a1[v18[21]] = *(_OWORD *)&a2[v18[21]];
        uint64_t v110 = v18[22];
        uint64_t v111 = &a1[v110];
        uint64_t v112 = &a2[v110];
        *(void *)uint64_t v111 = *(void *)v112;
        v111[8] = v112[8];
        uint64_t v113 = v18[23];
        uint64_t v114 = &a1[v113];
        uint64_t v115 = &a2[v113];
        v114[8] = v115[8];
        *(void *)uint64_t v114 = *(void *)v115;
        *(_OWORD *)&a1[v18[24]] = *(_OWORD *)&a2[v18[24]];
        uint64_t v116 = v18[25];
        uint64_t v117 = &a1[v116];
        uint64_t v118 = &a2[v116];
        v117[8] = v118[8];
        *(void *)uint64_t v117 = *(void *)v118;
        uint64_t v119 = v18[26];
        uint64_t v120 = &a1[v119];
        uint64_t v121 = &a2[v119];
        *((_WORD *)v120 + 8) = *((_WORD *)v121 + 8);
        *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
        *(_OWORD *)&a1[v18[27]] = *(_OWORD *)&a2[v18[27]];
        uint64_t v122 = v18[28];
        uint64_t v123 = &a1[v122];
        uint64_t v124 = &a2[v122];
        *(void *)uint64_t v123 = *(void *)v124;
        v123[8] = v124[8];
        *(_OWORD *)&a1[v18[29]] = *(_OWORD *)&a2[v18[29]];
        *(void *)&a1[v18[30]] = *(void *)&a2[v18[30]];
        *(void *)&a1[v18[31]] = *(void *)&a2[v18[31]];
        break;
      case 2u:
        type metadata accessor for ItemRecord();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            long long v157 = *((_OWORD *)a2 + 1);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v157;
            long long v158 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v158;
            long long v159 = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
            *((_OWORD *)a1 + 5) = v159;
            uint64_t v150 = (int *)type metadata accessor for MessageRecord();
            uint64_t v160 = v150[10];
            uint64_t v161 = &a1[v160];
            uint64_t v162 = &a2[v160];
            uint64_t v154 = sub_22342C130();
            uint64_t v163 = *(void *)(v154 - 8);
            uint64_t v258 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48);
            uint64_t v255 = v163;
            if (v258(v162, 1, v154))
            {
              uint64_t v164 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v161, v162, v154);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v161, 0, 1, v154);
            }
            uint64_t v170 = v150[11];
            uint64_t v171 = &a1[v170];
            uint64_t v172 = &a2[v170];
            uint64_t v173 = v258;
            if (v258(&a2[v170], 1, v154))
            {
              uint64_t v174 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v171, v172, v154);
              uint64_t v173 = v258;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v171, 0, 1, v154);
            }
            *(_OWORD *)&a1[v150[12]] = *(_OWORD *)&a2[v150[12]];
            a1[v150[13]] = a2[v150[13]];
            uint64_t v179 = v150[14];
            uint64_t v180 = &a1[v179];
            uint64_t v181 = &a2[v179];
            if (v173(&a2[v179], 1, v154))
            {
              uint64_t v182 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v180, v181, v154);
              uint64_t v173 = v258;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v180, 0, 1, v154);
            }
            uint64_t v187 = v150[15];
            uint64_t v188 = &a1[v187];
            uint64_t v189 = &a2[v187];
            if (v173(&a2[v187], 1, v154))
            {
              uint64_t v190 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v188, v189, v154);
              uint64_t v173 = v258;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v188, 0, 1, v154);
            }
            uint64_t v195 = v150[16];
            uint64_t v196 = &a1[v195];
            uint64_t v197 = &a2[v195];
            if (v173(&a2[v195], 1, v154))
            {
              uint64_t v198 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v196, v197, *(void *)(*(void *)(v198 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v196, v197, v154);
              uint64_t v173 = v258;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v196, 0, 1, v154);
            }
            uint64_t v203 = v150[17];
            uint64_t v204 = &a1[v203];
            uint64_t v205 = &a2[v203];
            if (v173(&a2[v203], 1, v154))
            {
              uint64_t v206 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v204, v205, *(void *)(*(void *)(v206 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v204, v205, v154);
              uint64_t v173 = v258;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v204, 0, 1, v154);
            }
            uint64_t v229 = v150[18];
            uint64_t v230 = &a1[v229];
            uint64_t v231 = &a2[v229];
            long long v232 = *((_OWORD *)v231 + 1);
            *(_OWORD *)uint64_t v230 = *(_OWORD *)v231;
            *((_OWORD *)v230 + 1) = v232;
            *((void *)v230 + 4) = *((void *)v231 + 4);
            uint64_t v233 = v150[19];
            long long v234 = &a1[v233];
            uint64_t v235 = &a2[v233];
            v234[8] = v235[8];
            *(void *)long long v234 = *(void *)v235;
            uint64_t v236 = v150[20];
            uint64_t v237 = &a1[v236];
            id v238 = &a2[v236];
            *(void *)uint64_t v237 = *(void *)v238;
            v237[8] = v238[8];
            uint64_t v239 = v150[21];
            id v240 = &a1[v239];
            id v241 = &a2[v239];
            *(void *)id v240 = *(void *)v241;
            v240[8] = v241[8];
            *(_OWORD *)&a1[v150[22]] = *(_OWORD *)&a2[v150[22]];
            uint64_t v242 = v150[23];
            uint64_t v243 = &a1[v242];
            uint64_t v244 = &a2[v242];
            *(void *)uint64_t v243 = *(void *)v244;
            v243[8] = v244[8];
            *(_OWORD *)&a1[v150[24]] = *(_OWORD *)&a2[v150[24]];
            *(_OWORD *)&a1[v150[25]] = *(_OWORD *)&a2[v150[25]];
            uint64_t v245 = v150[26];
            uint64_t v246 = &a1[v245];
            uint64_t v247 = &a2[v245];
            *(void *)uint64_t v246 = *(void *)v247;
            v246[8] = v247[8];
            *(_OWORD *)&a1[v150[27]] = *(_OWORD *)&a2[v150[27]];
            *(_OWORD *)&a1[v150[28]] = *(_OWORD *)&a2[v150[28]];
            *(_OWORD *)&a1[v150[29]] = *(_OWORD *)&a2[v150[29]];
            *(_OWORD *)&a1[v150[30]] = *(_OWORD *)&a2[v150[30]];
            uint64_t v248 = v150[31];
            id v227 = &a1[v248];
            id v228 = &a2[v248];
            if (!v173(&a2[v248], 1, v154)) {
              goto LABEL_97;
            }
            goto LABEL_100;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            long long v26 = *((_OWORD *)a2 + 1);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v26;
            long long v27 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v27;
            long long v28 = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
            *((_OWORD *)a1 + 5) = v28;
            uint64_t v29 = (int *)type metadata accessor for ActionRecord();
            uint64_t v30 = v29[10];
            uint64_t v31 = &a1[v30];
            uint64_t v32 = &a2[v30];
            uint64_t v33 = sub_22342C130();
            uint64_t v34 = *(void *)(v33 - 8);
            uint64_t v256 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
            if (v256(v32, 1, v33))
            {
              uint64_t v35 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
            }
            uint64_t v130 = v29[11];
            uint64_t v131 = &a1[v130];
            uint64_t v132 = &a2[v130];
            if (v256(&a2[v130], 1, v33))
            {
              uint64_t v133 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v131, v132, v33);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v131, 0, 1, v33);
            }
            *(_OWORD *)&a1[v29[12]] = *(_OWORD *)&a2[v29[12]];
            *(_OWORD *)&a1[v29[13]] = *(_OWORD *)&a2[v29[13]];
            a1[v29[14]] = a2[v29[14]];
            a1[v29[15]] = a2[v29[15]];
            uint64_t v134 = v29[16];
            uint64_t v135 = &a1[v134];
            uint64_t v136 = &a2[v134];
            if (v256(&a2[v134], 1, v33))
            {
              uint64_t v137 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v135, v136, v33);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v135, 0, 1, v33);
            }
            *(_OWORD *)&a1[v29[17]] = *(_OWORD *)&a2[v29[17]];
            *(_OWORD *)&a1[v29[18]] = *(_OWORD *)&a2[v29[18]];
            *(_OWORD *)&a1[v29[19]] = *(_OWORD *)&a2[v29[19]];
            uint64_t v138 = v29[20];
            long long v139 = &a1[v138];
            uint64_t v140 = &a2[v138];
            *((void *)v139 + 6) = *((void *)v140 + 6);
            *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
            long long v141 = *((_OWORD *)v140 + 1);
            *(_OWORD *)long long v139 = *(_OWORD *)v140;
            *((_OWORD *)v139 + 1) = v141;
            uint64_t v142 = v29[21];
            uint64_t v143 = &a1[v142];
            uint64_t v144 = &a2[v142];
            long long v145 = *((_OWORD *)v144 + 1);
            *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
            *((_OWORD *)v143 + 1) = v145;
            uint64_t v146 = v29 + 22;
            break;
          default:
            long long v147 = *((_OWORD *)a2 + 1);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v147;
            long long v148 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v148;
            long long v149 = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
            *((_OWORD *)a1 + 5) = v149;
            uint64_t v150 = (int *)type metadata accessor for MessageRecord();
            uint64_t v151 = v150[10];
            uint64_t v152 = &a1[v151];
            uint64_t v153 = &a2[v151];
            uint64_t v154 = sub_22342C130();
            uint64_t v155 = *(void *)(v154 - 8);
            uint64_t v257 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48);
            uint64_t v255 = v155;
            if (v257(v153, 1, v154))
            {
              uint64_t v156 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v152, v153, v154);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v152, 0, 1, v154);
            }
            uint64_t v165 = v150[11];
            uint64_t v166 = &a1[v165];
            uint64_t v167 = &a2[v165];
            long long v168 = v257;
            if (v257(&a2[v165], 1, v154))
            {
              uint64_t v169 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v166, v167, v154);
              long long v168 = v257;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v166, 0, 1, v154);
            }
            *(_OWORD *)&a1[v150[12]] = *(_OWORD *)&a2[v150[12]];
            a1[v150[13]] = a2[v150[13]];
            uint64_t v175 = v150[14];
            uint64_t v176 = &a1[v175];
            uint64_t v177 = &a2[v175];
            if (v168(&a2[v175], 1, v154))
            {
              uint64_t v178 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v176, v177, v154);
              long long v168 = v257;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v176, 0, 1, v154);
            }
            uint64_t v183 = v150[15];
            uint64_t v184 = &a1[v183];
            uint64_t v185 = &a2[v183];
            if (v168(&a2[v183], 1, v154))
            {
              uint64_t v186 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v184, v185, v154);
              long long v168 = v257;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v184, 0, 1, v154);
            }
            uint64_t v191 = v150[16];
            uint64_t v192 = &a1[v191];
            uint64_t v193 = &a2[v191];
            if (v168(&a2[v191], 1, v154))
            {
              uint64_t v194 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v192, v193, v154);
              long long v168 = v257;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v192, 0, 1, v154);
            }
            uint64_t v199 = v150[17];
            uint64_t v200 = &a1[v199];
            uint64_t v201 = &a2[v199];
            if (v168(&a2[v199], 1, v154))
            {
              uint64_t v202 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v200, v201, v154);
              long long v168 = v257;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v200, 0, 1, v154);
            }
            uint64_t v207 = v150[18];
            uint64_t v208 = &a1[v207];
            uint64_t v209 = &a2[v207];
            long long v210 = *((_OWORD *)v209 + 1);
            *(_OWORD *)uint64_t v208 = *(_OWORD *)v209;
            *((_OWORD *)v208 + 1) = v210;
            *((void *)v208 + 4) = *((void *)v209 + 4);
            uint64_t v211 = v150[19];
            uint64_t v212 = &a1[v211];
            id v213 = &a2[v211];
            v212[8] = v213[8];
            *(void *)uint64_t v212 = *(void *)v213;
            uint64_t v214 = v150[20];
            long long v215 = &a1[v214];
            long long v216 = &a2[v214];
            *(void *)long long v215 = *(void *)v216;
            v215[8] = v216[8];
            uint64_t v217 = v150[21];
            uint64_t v218 = &a1[v217];
            uint64_t v219 = &a2[v217];
            *(void *)uint64_t v218 = *(void *)v219;
            v218[8] = v219[8];
            *(_OWORD *)&a1[v150[22]] = *(_OWORD *)&a2[v150[22]];
            uint64_t v220 = v150[23];
            uint64_t v221 = &a1[v220];
            uint64_t v222 = &a2[v220];
            *(void *)uint64_t v221 = *(void *)v222;
            v221[8] = v222[8];
            *(_OWORD *)&a1[v150[24]] = *(_OWORD *)&a2[v150[24]];
            *(_OWORD *)&a1[v150[25]] = *(_OWORD *)&a2[v150[25]];
            uint64_t v223 = v150[26];
            id v224 = &a1[v223];
            id v225 = &a2[v223];
            *(void *)id v224 = *(void *)v225;
            v224[8] = v225[8];
            *(_OWORD *)&a1[v150[27]] = *(_OWORD *)&a2[v150[27]];
            *(_OWORD *)&a1[v150[28]] = *(_OWORD *)&a2[v150[28]];
            *(_OWORD *)&a1[v150[29]] = *(_OWORD *)&a2[v150[29]];
            *(_OWORD *)&a1[v150[30]] = *(_OWORD *)&a2[v150[30]];
            uint64_t v226 = v150[31];
            id v227 = &a1[v226];
            id v228 = &a2[v226];
            if (v168(&a2[v226], 1, v154))
            {
LABEL_100:
              uint64_t v249 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
              memcpy(v227, v228, *(void *)(*(void *)(v249 - 8) + 64));
            }
            else
            {
LABEL_97:
              (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v227, v228, v154);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v227, 0, 1, v154);
            }
            *(_OWORD *)&a1[v150[32]] = *(_OWORD *)&a2[v150[32]];
            a1[v150[33]] = a2[v150[33]];
            uint64_t v250 = v150[34];
            uint64_t v251 = &a1[v250];
            uint64_t v252 = &a2[v250];
            long long v253 = *((_OWORD *)v252 + 1);
            *(_OWORD *)uint64_t v251 = *(_OWORD *)v252;
            *((_OWORD *)v251 + 1) = v253;
            uint64_t v146 = v150 + 35;
            break;
        }
        *(_OWORD *)&a1[*v146] = *(_OWORD *)&a2[*v146];
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        long long v36 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v36;
        long long v37 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v37;
        long long v38 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v38;
        uint64_t v39 = (int *)type metadata accessor for AttachmentRecord();
        uint64_t v40 = v39[10];
        uint64_t v41 = &a1[v40];
        uint64_t v42 = &a2[v40];
        uint64_t v43 = sub_22342C130();
        uint64_t v44 = *(void *)(v43 - 8);
        uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
        if (v45(v42, 1, v43))
        {
          uint64_t v46 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        uint64_t v87 = v39[11];
        uint64_t v88 = &a1[v87];
        uint64_t v89 = &a2[v87];
        if (v45(&a2[v87], 1, v43))
        {
          uint64_t v90 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v88, v89, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v88, 0, 1, v43);
        }
        *(_OWORD *)&a1[v39[12]] = *(_OWORD *)&a2[v39[12]];
        memcpy(&a1[v39[13]], &a2[v39[13]], 0x140uLL);
        goto LABEL_51;
      case 4u:
        long long v47 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v47;
        long long v48 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v48;
        long long v49 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v49;
        uint64_t v39 = (int *)type metadata accessor for RecoverableMessageRecord();
        uint64_t v50 = v39[10];
        uint64_t v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        uint64_t v53 = sub_22342C130();
        uint64_t v54 = *(void *)(v53 - 8);
        uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
        if (v55(v52, 1, v53))
        {
          uint64_t v56 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        }
        uint64_t v91 = v39[11];
        uint64_t v92 = &a1[v91];
        uint64_t v93 = &a2[v91];
        if (v55(&a2[v91], 1, v53))
        {
          uint64_t v94 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v92, v93, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v92, 0, 1, v53);
        }
        *(_OWORD *)&a1[v39[12]] = *(_OWORD *)&a2[v39[12]];
        uint64_t v125 = v39[13];
        uint64_t v126 = &a1[v125];
        uint64_t v127 = &a2[v125];
        if (v55(&a2[v125], 1, v53))
        {
          uint64_t v128 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v126, v127, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v126, 0, 1, v53);
        }
LABEL_51:
        uint64_t v103 = v39[14];
        goto LABEL_52;
      case 5u:
        long long v57 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v57;
        long long v58 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v58;
        long long v59 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v59;
        uint64_t updated = (int *)type metadata accessor for MessageUpdateRecord();
        uint64_t v61 = updated[10];
        uint64_t v62 = &a1[v61];
        uint64_t v63 = &a2[v61];
        uint64_t v64 = sub_22342C130();
        uint64_t v65 = *(void *)(v64 - 8);
        uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
        if (v66(v63, 1, v64))
        {
          uint64_t v67 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
        }
        uint64_t v95 = updated[11];
        uint64_t v96 = &a1[v95];
        uint64_t v97 = &a2[v95];
        if (v66(&a2[v95], 1, v64))
        {
          uint64_t v98 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v96, v97, v64);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v96, 0, 1, v64);
        }
        *(_OWORD *)&a1[updated[12]] = *(_OWORD *)&a2[updated[12]];
        *(_OWORD *)&a1[updated[13]] = *(_OWORD *)&a2[updated[13]];
        uint64_t v129 = updated[14];
        goto LABEL_49;
      case 6u:
        long long v68 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v68;
        long long v69 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v69;
        long long v70 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v70;
        uint64_t v71 = (int *)type metadata accessor for UnknownRecord();
        uint64_t v72 = v71[10];
        uint64_t v73 = &a1[v72];
        uint64_t v74 = &a2[v72];
        uint64_t v75 = sub_22342C130();
        uint64_t v76 = *(void *)(v75 - 8);
        uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
        if (v77(v74, 1, v75))
        {
          uint64_t v78 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        uint64_t v99 = v71[11];
        uint64_t v100 = &a1[v99];
        uint64_t v101 = &a2[v99];
        if (v77(&a2[v99], 1, v75))
        {
          uint64_t v102 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v100, v101, v75);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v100, 0, 1, v75);
        }
        uint64_t v129 = v71[12];
LABEL_49:
        *(_OWORD *)&a1[v129] = *(_OWORD *)&a2[v129];
        break;
      default:
        long long v4 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v4;
        long long v5 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v5;
        long long v6 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v6;
        uint64_t v7 = (int *)type metadata accessor for ChatLockRecord();
        uint64_t v8 = v7[10];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_22342C130();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        if (v13(v10, 1, v11))
        {
          uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v79 = v7[11];
        uint64_t v80 = &a1[v79];
        uint64_t v81 = &a2[v79];
        if (v13(&a2[v79], 1, v11))
        {
          uint64_t v82 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
          memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v80, v81, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v80, 0, 1, v11);
        }
        uint64_t v103 = v7[12];
LABEL_52:
        *(_OWORD *)&a1[v103] = *(_OWORD *)&a2[v103];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_223363BB8()
{
  uint64_t result = type metadata accessor for ChatLockRecord();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ChatRecord(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ItemRecord();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for AttachmentRecord();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for RecoverableMessageRecord();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for MessageUpdateRecord();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for UnknownRecord();
              if (v7 <= 0x3F)
              {
                swift_initEnumMetadataMultiPayload();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_223363DA8(char a1)
{
  unint64_t result = 1684632935;
  switch(a1)
  {
    case 1:
      unint64_t result = 6518387;
      break;
    case 2:
      unint64_t result = 0x615465676E616863;
      break;
    case 3:
      unint64_t result = 0x614E64726F636572;
      break;
    case 4:
      unint64_t result = 0x795464726F636572;
      break;
    case 5:
      unint64_t result = 0x656D614E656E6F7ALL;
      break;
    case 6:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_223363EC8(unsigned __int8 *a1, char *a2)
{
  return sub_2233F45C4(*a1, *a2);
}

uint64_t sub_223363ED4()
{
  return sub_22342D060();
}

uint64_t sub_223363F1C()
{
  return sub_2233C3E1C();
}

uint64_t sub_223363F24()
{
  return sub_22342D060();
}

uint64_t sub_223363F68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_223366E84();
  *a1 = result;
  return result;
}

unint64_t sub_223363F98@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_223356D78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_223363FC4()
{
  return sub_223363DA8(*v0);
}

uint64_t sub_223363FCC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_223366E84();
  *a1 = result;
  return result;
}

void sub_223363FF4(void *a1@<X8>)
{
  *a1 = &unk_26D66C0D0;
}

uint64_t sub_223364004(uint64_t a1)
{
  unint64_t v2 = sub_223321FA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_223364040(uint64_t a1)
{
  unint64_t v2 = sub_223321FA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22336407C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t updated = type metadata accessor for MessageUpdateRecord();
  MEMORY[0x270FA5388](updated - 8);
  long long v57 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RecoverableMessageRecord();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v53 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttachmentRecord();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v56 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ItemRecord();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v52 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ChatRecord(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ChatLockRecord();
  MEMORY[0x270FA5388](v14 - 8);
  long long v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_22331E640(&qword_26AD60508);
  uint64_t v55 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (uint64_t *)((char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = a1[3];
  long long v58 = a1;
  sub_223321F60(a1, v23);
  sub_223321FA4();
  uint64_t v24 = v60;
  sub_22342D080();
  if (v24)
  {
    uint64_t v25 = (uint64_t)v58;
  }
  else
  {
    long long v49 = v16;
    uint64_t v50 = v13;
    uint64_t v27 = (uint64_t)v56;
    uint64_t v26 = (uint64_t)v57;
    uint64_t v28 = v55;
    uint64_t v60 = v22;
    uint64_t v51 = v20;
    LOBYTE(v59[0]) = 3;
    uint64_t v48 = sub_22342CE10();
    uint64_t v30 = v29;
    LOBYTE(v59[0]) = 4;
    uint64_t v31 = sub_22342CE10();
    uint64_t v33 = v32;
    uint64_t v47 = v17;
    uint64_t v34 = v31;
    swift_bridgeObjectRetain();
    switch(sub_2233D8CBC())
    {
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v58;
        sub_223322120((uint64_t)v58, (uint64_t)v59);
        uint64_t v43 = (uint64_t)v50;
        sub_223397000(v59, (uint64_t)v50);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v47);
        uint64_t v35 = v60;
        sub_223366F34(v43, (uint64_t)v60, type metadata accessor for ChatRecord);
        break;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v58;
        sub_223322120((uint64_t)v58, (uint64_t)v59);
        uint64_t v44 = v52;
        sub_2233528C4(v59, v52);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v47);
        uint64_t v35 = v60;
        sub_223366F34(v44, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for ItemRecord);
        break;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v58;
        sub_223322120((uint64_t)v58, (uint64_t)v59);
        sub_22342A2E8(v59, v27);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v47);
        uint64_t v35 = v60;
        sub_223366F34(v27, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for AttachmentRecord);
        break;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v58;
        sub_223322120((uint64_t)v58, (uint64_t)v59);
        uint64_t v45 = v53;
        sub_22336F474(v59, v53);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v47);
        uint64_t v35 = v60;
        sub_223366F34(v45, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord);
        break;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v58;
        sub_223322120((uint64_t)v58, (uint64_t)v59);
        sub_22338DDF8(v59, v26);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v47);
        uint64_t v35 = v60;
        sub_223366F34(v26, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord);
        break;
      case 6u:
      case 7u:
        (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v47);
        uint64_t v35 = v60;
        *uint64_t v60 = v48;
        v35[1] = v30;
        v35[2] = v34;
        v35[3] = v33;
        long long v36 = (int *)type metadata accessor for UnknownRecord();
        *((_OWORD *)v35 + 2) = 0u;
        *((_OWORD *)v35 + 3) = 0u;
        *((_OWORD *)v35 + 4) = 0u;
        *((_OWORD *)v35 + 5) = 0u;
        long long v37 = (char *)v35 + v36[10];
        uint64_t v38 = sub_22342C130();
        uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
        v39(v37, 1, 1, v38);
        v39((char *)v35 + v36[11], 1, 1, v38);
        uint64_t v40 = (uint64_t *)((char *)v35 + v36[12]);
        *uint64_t v40 = 0;
        v40[1] = 0;
        uint64_t v25 = (uint64_t)v58;
        break;
      default:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v58;
        sub_223322120((uint64_t)v58, (uint64_t)v59);
        uint64_t v42 = (uint64_t)v49;
        sub_22336825C(v59, (uint64_t)v49);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v47);
        uint64_t v35 = v60;
        sub_223366F34(v42, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for ChatLockRecord);
        break;
    }
    swift_storeEnumTagMultiPayload();
    sub_223366F34((uint64_t)v35, v54, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
  }
  return _s17MessagesCloudSync9SyncFilesVwxx_0(v25);
}

uint64_t sub_2233648B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v31 = a1;
  uint64_t v3 = sub_22331E640(&qword_267FA2A08);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22331E640(&qword_267FA2A10);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22331E640(&qword_267FA2928);
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ChatRecord(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ChatLockRecord();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223366ED0(v2, (uint64_t)v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_223366F34((uint64_t)v20, (uint64_t)v14, type metadata accessor for ChatRecord);
      sub_22339840C(v31);
      uint64_t result = sub_2233670EC((uint64_t)v14, type metadata accessor for ChatRecord);
      break;
    case 2u:
      sub_2233670EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
      sub_223321F60(v31, v31[3]);
      sub_223322B6C();
      sub_22342D090();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v9);
      break;
    case 3u:
      goto LABEL_12;
    case 4u:
      sub_2233670EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
      sub_223321F60(v31, v31[3]);
      sub_223367098();
      sub_22342D090();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v8, v28);
      break;
    case 5u:
      sub_2233670EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
      sub_223321F60(v31, v31[3]);
      sub_223367044();
      sub_22342D090();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v5, v30);
      break;
    case 6u:
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_22342C200();
      sub_223323374(v22, (uint64_t)qword_26AD63108);
      uint64_t v23 = sub_22342C1E0();
      os_log_type_t v24 = sub_22342C700();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_223317000, v23, v24, "Tried to encode unknown database record.", v25, 2u);
        MEMORY[0x223CB62D0](v25, -1, -1);
      }

LABEL_12:
      uint64_t result = sub_2233670EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
      break;
    default:
      sub_223366F34((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ChatLockRecord);
      sub_22336886C(v31);
      uint64_t result = sub_2233670EC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ChatLockRecord);
      break;
  }
  return result;
}

uint64_t sub_223364E6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223366ED0(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      a1[3] = type metadata accessor for ChatRecord(0);
      uint64_t v7 = sub_223366F9C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
      uint64_t v8 = type metadata accessor for ChatRecord;
      break;
    case 2u:
      a1[3] = type metadata accessor for ItemRecord();
      uint64_t v7 = sub_223366F9C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
      break;
    case 3u:
      a1[3] = type metadata accessor for AttachmentRecord();
      uint64_t v7 = sub_223366F9C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
      break;
    case 4u:
      a1[3] = type metadata accessor for RecoverableMessageRecord();
      uint64_t v7 = sub_223366F9C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
      break;
    case 5u:
      a1[3] = type metadata accessor for MessageUpdateRecord();
      uint64_t v7 = sub_223366F9C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
      break;
    case 6u:
      a1[3] = type metadata accessor for UnknownRecord();
      uint64_t v7 = sub_223366F9C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
      break;
    default:
      a1[3] = type metadata accessor for ChatLockRecord();
      uint64_t v7 = sub_223366F9C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
      break;
  }
  uint64_t v9 = v8;
  a1[4] = v7;
  uint64_t v10 = sub_223348E4C(a1);
  return sub_223366F34((uint64_t)v6, (uint64_t)v10, v9);
}

uint64_t sub_2233651A8()
{
  uint64_t v1 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v13[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223366ED0(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t updated = type metadata accessor for ChatRecord(0);
      uint64_t v4 = sub_223366F9C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
      uint64_t v5 = type metadata accessor for ChatRecord;
      break;
    case 2u:
      uint64_t updated = type metadata accessor for ItemRecord();
      uint64_t v4 = sub_223366F9C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
      break;
    case 3u:
      uint64_t updated = type metadata accessor for AttachmentRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
      break;
    case 4u:
      uint64_t updated = type metadata accessor for RecoverableMessageRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
      break;
    case 5u:
      uint64_t updated = type metadata accessor for MessageUpdateRecord();
      uint64_t v4 = sub_223366F9C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
      break;
    case 6u:
      uint64_t updated = type metadata accessor for UnknownRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
      break;
    default:
      uint64_t updated = type metadata accessor for ChatLockRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
      break;
  }
  uint64_t v6 = v5;
  uint64_t v15 = v4;
  uint64_t v7 = sub_223348E4C(v13);
  sub_223366F34((uint64_t)v3, (uint64_t)v7, v6);
  uint64_t v8 = updated;
  uint64_t v9 = v15;
  sub_223321F60(v13, updated);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v13);
  return v10;
}

uint64_t sub_223365528()
{
  uint64_t v1 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v13[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223366ED0(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t updated = type metadata accessor for ChatRecord(0);
      uint64_t v4 = sub_223366F9C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
      uint64_t v5 = type metadata accessor for ChatRecord;
      break;
    case 2u:
      uint64_t updated = type metadata accessor for ItemRecord();
      uint64_t v4 = sub_223366F9C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
      break;
    case 3u:
      uint64_t updated = type metadata accessor for AttachmentRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
      break;
    case 4u:
      uint64_t updated = type metadata accessor for RecoverableMessageRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
      break;
    case 5u:
      uint64_t updated = type metadata accessor for MessageUpdateRecord();
      uint64_t v4 = sub_223366F9C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
      break;
    case 6u:
      uint64_t updated = type metadata accessor for UnknownRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
      break;
    default:
      uint64_t updated = type metadata accessor for ChatLockRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
      break;
  }
  uint64_t v6 = v5;
  uint64_t v15 = v4;
  uint64_t v7 = sub_223348E4C(v13);
  sub_223366F34((uint64_t)v3, (uint64_t)v7, v6);
  uint64_t v8 = updated;
  uint64_t v9 = v15;
  sub_223321F60(v13, updated);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v8, v9);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v13);
  return v10;
}

uint64_t sub_2233658A8()
{
  uint64_t v1 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v13[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223366ED0(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t updated = type metadata accessor for ChatRecord(0);
      uint64_t v4 = sub_223366F9C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
      uint64_t v5 = type metadata accessor for ChatRecord;
      break;
    case 2u:
      uint64_t updated = type metadata accessor for ItemRecord();
      uint64_t v4 = sub_223366F9C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
      break;
    case 3u:
      uint64_t updated = type metadata accessor for AttachmentRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
      break;
    case 4u:
      uint64_t updated = type metadata accessor for RecoverableMessageRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
      break;
    case 5u:
      uint64_t updated = type metadata accessor for MessageUpdateRecord();
      uint64_t v4 = sub_223366F9C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
      break;
    case 6u:
      uint64_t updated = type metadata accessor for UnknownRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
      break;
    default:
      uint64_t updated = type metadata accessor for ChatLockRecord();
      uint64_t v4 = sub_223366F9C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
      break;
  }
  uint64_t v6 = v5;
  uint64_t v15 = v4;
  uint64_t v7 = sub_223348E4C(v13);
  sub_223366F34((uint64_t)v3, (uint64_t)v7, v6);
  uint64_t v8 = updated;
  uint64_t v9 = v15;
  sub_223321F60(v13, updated);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 56))(v8, v9);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v13);
  return v10;
}

uint64_t sub_223365C28(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for DatabaseRecord();
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_223365CBC, 0, 0);
}

uint64_t sub_223365CBC()
{
  sub_223366ED0(v0[8], v0[10]);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for ChatRecord(0);
      v0[6] = sub_223366F9C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = type metadata accessor for ChatRecord;
      break;
    case 2u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for ItemRecord();
      v0[6] = sub_223366F9C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
      break;
    case 3u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for AttachmentRecord();
      v0[6] = sub_223366F9C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
      break;
    case 4u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for RecoverableMessageRecord();
      v0[6] = sub_223366F9C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
      break;
    case 5u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for MessageUpdateRecord();
      v0[6] = sub_223366F9C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
      break;
    case 6u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for UnknownRecord();
      v0[6] = sub_223366F9C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
      break;
    default:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for ChatLockRecord();
      v0[6] = sub_223366F9C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
      break;
  }
  sub_223366F34(v1, (uint64_t)v2, v3);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_223321F60(v0 + 2, v4);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 104) + **(int **)(v5 + 104));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_223366104;
  uint64_t v7 = v0[7];
  return v9(v7, v4, v5);
}

uint64_t sub_223366104(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2233662A4;
  }
  else
  {
    *(unsigned char *)(v4 + 104) = a1;
    uint64_t v5 = sub_22336622C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_22336622C()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned char *)(v0 + 104) & 1;
  return v1(v2);
}

uint64_t sub_2233662A4()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_223366314(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for DatabaseRecord();
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2233663A8, 0, 0);
}

uint64_t sub_2233663A8()
{
  sub_223366ED0(v0[8], v0[10]);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for ChatRecord(0);
      v0[6] = sub_223366F9C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = type metadata accessor for ChatRecord;
      break;
    case 2u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for ItemRecord();
      v0[6] = sub_223366F9C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
      break;
    case 3u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for AttachmentRecord();
      v0[6] = sub_223366F9C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
      break;
    case 4u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for RecoverableMessageRecord();
      v0[6] = sub_223366F9C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
      break;
    case 5u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for MessageUpdateRecord();
      v0[6] = sub_223366F9C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
      break;
    case 6u:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for UnknownRecord();
      v0[6] = sub_223366F9C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
      break;
    default:
      uint64_t v1 = v0[10];
      v0[5] = type metadata accessor for ChatLockRecord();
      v0[6] = sub_223366F9C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
      uint64_t v2 = sub_223348E4C(v0 + 2);
      uint64_t v3 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
      break;
  }
  sub_223366F34(v1, (uint64_t)v2, v3);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_223321F60(v0 + 2, v4);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 112) + **(int **)(v5 + 112));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2233667F0;
  uint64_t v7 = v0[7];
  return v9(v7, v4, v5);
}

uint64_t sub_2233667F0()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233662A4;
  }
  else {
    uint64_t v2 = sub_223366904;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_223366904()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22336697C()
{
  sub_223364E6C(v3);
  uint64_t v0 = v4;
  if (v4)
  {
    uint64_t v1 = v5;
    sub_223321F60(v3, v4);
    uint64_t v0 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(v0, v1);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v3);
  }
  else
  {
    sub_223366FE4((uint64_t)v3);
  }
  return v0;
}

uint64_t sub_223366A10(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_223366AA4;
  return sub_223365C28(a1);
}

uint64_t sub_223366AA4(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7(a1 & 1);
  }
}

uint64_t sub_223366BD4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_223331EB0;
  return sub_223366314(a1);
}

uint64_t sub_223366C68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22336407C(a1, a2);
}

uint64_t sub_223366C80(void *a1)
{
  return sub_2233648B4(a1);
}

uint64_t sub_223366C98(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_223366F9C((unint64_t *)&qword_26AD5FBB8, (void (*)(uint64_t))type metadata accessor for DatabaseRecord);
  uint64_t result = sub_223366F9C(&qword_267FA29B0, (void (*)(uint64_t))type metadata accessor for DatabaseRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_223366D20()
{
  unint64_t result = qword_267FA29B8;
  if (!qword_267FA29B8)
  {
    sub_2233378D8(&qword_267FA29C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA29B8);
  }
  return result;
}

unint64_t sub_223366D80()
{
  unint64_t result = qword_267FA29C8;
  if (!qword_267FA29C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267FA29C8);
  }
  return result;
}

unint64_t sub_223366DD8()
{
  unint64_t result = qword_26AD5FBB0;
  if (!qword_26AD5FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5FBB0);
  }
  return result;
}

unint64_t sub_223366E30()
{
  unint64_t result = qword_26AD5FBA8;
  if (!qword_26AD5FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5FBA8);
  }
  return result;
}

uint64_t sub_223366E84()
{
  unint64_t v0 = sub_22342CDA0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_223366ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatabaseRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_223366F34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_223366F9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_223366FE4(uint64_t a1)
{
  uint64_t v2 = sub_22331E640(&qword_267FA2A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_223367044()
{
  unint64_t result = qword_26AD5FDF8;
  if (!qword_26AD5FDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5FDF8);
  }
  return result;
}

unint64_t sub_223367098()
{
  unint64_t result = qword_267FA2A18[0];
  if (!qword_267FA2A18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267FA2A18);
  }
  return result;
}

uint64_t sub_2233670EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_22336714C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = a2[11];
    uint64_t v12 = a3[10];
    __dst = (char *)a1 + v12;
    uint64_t v27 = (char *)a2 + v12;
    a1[10] = a2[10];
    a1[11] = v11;
    uint64_t v13 = sub_22342C130();
    uint64_t v28 = *(void *)(v13 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v27, 1, v13))
    {
      uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(__dst, v27, *(void *)(*(void *)(v15 - 8) + 64));
      uint64_t v16 = v28;
    }
    else
    {
      uint64_t v16 = v28;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v18 = a3[11];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v14((char *)a2 + v18, 1, v13))
    {
      uint64_t v21 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v20, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v13);
    }
    uint64_t v22 = a3[12];
    uint64_t v23 = (uint64_t *)((char *)v4 + v22);
    os_log_type_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2233673F8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_22342C130();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 44);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

void *sub_22336753C(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v9 = *((void *)a2 + 9);
  a1[8] = *((void *)a2 + 8);
  a1[9] = v9;
  uint64_t v10 = *((void *)a2 + 11);
  uint64_t v11 = a3[10];
  __dst = (char *)a1 + v11;
  uint64_t v26 = &a2[v11];
  a1[10] = *((void *)a2 + 10);
  a1[11] = v10;
  uint64_t v12 = sub_22342C130();
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v14 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v26, 1, v14))
  {
    uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(__dst, v26, *(void *)(*(void *)(v15 - 8) + 64));
    uint64_t v16 = v27;
  }
  else
  {
    uint64_t v16 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v26, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v17 = a3[11];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = &a2[v17];
  if (v13(&a2[v17], 1, v14))
  {
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v19, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v14);
  }
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *uint64_t v22 = *(void *)v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_223367794(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22342C130();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (void *)((char *)a2 + v21);
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_223367AFC(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  long long v8 = *((_OWORD *)a2 + 5);
  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = &a2[v9];
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v8;
  uint64_t v12 = sub_22342C130();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  int v18 = &a2[v16];
  if (v14(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  return a1;
}

char *sub_223367CE0(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_22342C130();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v17(&a1[v21], 1, v15);
  int v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v22, v23, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v23, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
LABEL_13:
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_223367FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_223367FEC);
}

uint64_t sub_223367FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_2233680AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2233680C0);
}

uint64_t sub_2233680C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ChatLockRecord()
{
  uint64_t result = qword_26AD5FAE8;
  if (!qword_26AD5FAE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2233681B8()
{
  sub_223321460();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22336825C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v35 - v7;
  uint64_t v9 = sub_22331E640(&qword_267FA2A40);
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ChatLockRecord();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (void *)((char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v40 = a1;
  sub_223321F60(a1, v15);
  sub_223368E58();
  uint64_t v16 = v41;
  sub_22342D080();
  if (v16) {
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v40);
  }
  uint64_t v41 = v8;
  uint64_t v17 = v38;
  char v50 = 0;
  uint64_t *v14 = sub_22342CDC0();
  v14[1] = v18;
  char v49 = 1;
  uint64_t v19 = v17;
  v14[2] = sub_22342CDC0();
  v14[3] = v20;
  char v48 = 2;
  v14[4] = sub_22342CDC0();
  v14[5] = v21;
  char v47 = 3;
  v14[6] = sub_22342CDC0();
  long long v36 = v14;
  v14[7] = v22;
  char v46 = 4;
  uint64_t v23 = sub_22342CDC0();
  int v24 = v36;
  v36[8] = v23;
  v24[9] = v25;
  char v45 = 5;
  v24[10] = sub_22342CDC0();
  v24[11] = v26;
  sub_22342C130();
  char v44 = 6;
  uint64_t v27 = sub_223368FCC(&qword_26AD5F408, MEMORY[0x263F07490]);
  uint64_t v28 = (uint64_t)v41;
  v35[1] = v27;
  v35[2] = 0;
  sub_22342CDF0();
  uint64_t v29 = v12;
  sub_223332AEC(v28, (uint64_t)v24 + *(int *)(v12 + 40));
  char v43 = 7;
  sub_22342CDF0();
  sub_223332AEC((uint64_t)v6, (uint64_t)v24 + *(int *)(v12 + 44));
  char v42 = 8;
  uint64_t v30 = sub_22342CDC0();
  uint64_t v32 = v31;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v39);
  uint64_t v33 = (uint64_t *)((char *)v24 + *(int *)(v29 + 48));
  uint64_t *v33 = v30;
  v33[1] = v32;
  sub_223368F0C((uint64_t)v24, v37);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v40);
  return sub_223368F70((uint64_t)v24);
}

uint64_t sub_22336886C(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_267FA2A50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_223321F60(a1, a1[3]);
  sub_223368E58();
  sub_22342D090();
  v8[31] = 0;
  sub_22342CE70();
  if (!v1)
  {
    v8[30] = 1;
    sub_22342CE70();
    v8[29] = 2;
    sub_22342CE70();
    v8[28] = 3;
    sub_22342CE70();
    v8[27] = 4;
    sub_22342CE70();
    v8[26] = 5;
    sub_22342CE70();
    type metadata accessor for ChatLockRecord();
    v8[25] = 6;
    sub_22342C130();
    sub_223368FCC(&qword_267FA2A58, MEMORY[0x263F07490]);
    sub_22342CEA0();
    v8[24] = 7;
    sub_22342CEA0();
    v8[15] = 8;
    sub_22342CE70();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_223368B60(char a1)
{
  unint64_t result = 1684632935;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65636976726573;
      break;
    case 2:
      unint64_t result = 0x615465676E616863;
      break;
    case 3:
      unint64_t result = 0x614E64726F636572;
      break;
    case 4:
      unint64_t result = 0x795464726F636572;
      break;
    case 5:
      unint64_t result = 0x656D614E656E6F7ALL;
      break;
    case 6:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_223368C88()
{
  return sub_223368B60(*v0);
}

uint64_t sub_223368C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_223369240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_223368CB8(uint64_t a1)
{
  unint64_t v2 = sub_223368E58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_223368CF4(uint64_t a1)
{
  unint64_t v2 = sub_223368E58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_223368D30()
{
  return sub_223369020(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_223368D6C()
{
  return sub_223369014(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_223368DA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22336825C(a1, a2);
}

uint64_t sub_223368DBC(void *a1)
{
  return sub_22336886C(a1);
}

uint64_t sub_223368DD4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_223368FCC(&qword_267FA2A30, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
  uint64_t result = sub_223368FCC(&qword_267FA2A38, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_223368E58()
{
  unint64_t result = qword_267FA2A48;
  if (!qword_267FA2A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2A48);
  }
  return result;
}

uint64_t sub_223368EAC(uint64_t a1)
{
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_223368F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChatLockRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_223368F70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChatLockRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_223368FCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_223369014(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_223369020(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

unsigned char *storeEnumTagSinglePayload for ChatLockRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223369100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatLockRecord.CodingKeys()
{
  return &type metadata for ChatLockRecord.CodingKeys;
}

unint64_t sub_22336913C()
{
  unint64_t result = qword_267FA2A60;
  if (!qword_267FA2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2A60);
  }
  return result;
}

unint64_t sub_223369194()
{
  unint64_t result = qword_267FA2A68;
  if (!qword_267FA2A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2A68);
  }
  return result;
}

unint64_t sub_2233691EC()
{
  unint64_t result = qword_267FA2A70;
  if (!qword_267FA2A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2A70);
  }
  return result;
}

uint64_t sub_223369240(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632935 && a2 == 0xE400000000000000;
  if (v2 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636976726573 && a2 == 0xE700000000000000 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615465676E616863 && a2 == 0xE900000000000067 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E64726F636572 && a2 == 0xEA0000000000656DLL || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x795464726F636572 && a2 == 0xEA00000000006570 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E656E6F7ALL && a2 == 0xE800000000000000 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002234358D0 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002234358F0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_22342CF60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_223369600()
{
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_processInfo);
  id v1 = objc_msgSend(v0, sel_environment);

  uint64_t v2 = sub_22342C270();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_22339C2E8(0x49545345545F5349, 0xEF434E59535F474ELL), (v4 & 1) != 0))
  {
    uint64_t v5 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v3);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v7 == 49 && v6 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      char v9 = sub_22342CF60();
      swift_bridgeObjectRelease();
      return v9 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

ValueMetadata *type metadata accessor for PrepareDatabaseStep()
{
  return &type metadata for PrepareDatabaseStep;
}

uint64_t sub_223369738(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2A90 + dword_267FA2A90);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223335C74;
  return v7(a1, a2);
}

uint64_t sub_2233697EC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_22336980C, 0, 0);
}

uint64_t sub_22336980C()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  unsigned __int8 v2 = objc_msgSend(v1, sel_isUnderFirstDataProtectionLock);

  if (v2)
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_22342C200();
    sub_223323374(v3, (uint64_t)qword_26AD63108);
    char v4 = sub_22342C1E0();
    os_log_type_t v5 = sub_22342C700();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_223317000, v4, v5, "Under first data protection lock could not proceed with sync", v6, 2u);
      MEMORY[0x223CB62D0](v6, -1, -1);
    }

    sub_223332C04();
    swift_allocError();
    *uint64_t v7 = 4;
    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22342C200();
    v0[3] = sub_223323374(v10, (uint64_t)qword_26AD63108);
    uint64_t v11 = sub_22342C1E0();
    os_log_type_t v12 = sub_22342C720();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_223317000, v11, v12, "Not under first data protection lock, proceeding to reload store if necessary", v13, 2u);
      MEMORY[0x223CB62D0](v13, -1, -1);
    }
    uint64_t v14 = v0[2];

    uint64_t v15 = v14 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_syncDatabase;
    v0[4] = *(void *)(v14 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_syncDatabase);
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v16 + 16) + **(int **)(v16 + 16));
    swift_unknownObjectRetain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[5] = v18;
    void *v18 = v0;
    v18[1] = sub_223369B3C;
    return v19(ObjectType, v16);
  }
}

uint64_t sub_223369B3C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    unsigned __int8 v2 = sub_223369CBC;
  }
  else {
    unsigned __int8 v2 = sub_223369C50;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_223369C50()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void, void))(v0 + 8);
  return v1(0, 0);
}

uint64_t sub_223369CBC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = sub_22342C1E0();
  os_log_type_t v2 = sub_22342C700();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_223317000, v1, v2, "Could not load sync store cannot continue sync.", v3, 2u);
    MEMORY[0x223CB62D0](v3, -1, -1);
  }

  swift_willThrow();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_223369D9C(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  swift_beginAccess();
  unint64_t v8 = sub_22336BB38(a4);
  swift_endAccess();
  if (!*(void *)(v8 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_22339E3E0(a3);
  if ((v10 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v11 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t result = swift_bridgeObjectRelease();
  BOOL v15 = __OFADD__(v13, a1);
  a1 += v13;
  if (!v15)
  {
    BOOL v15 = __OFADD__(v12, a2);
    a2 += v12;
    if (!v15) {
      goto LABEL_8;
    }
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2233CE6A0(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    return sub_22336C1F0(v8, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_223369ED8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  unint64_t v4 = sub_2233C5DA4((uint64_t)&unk_26D66B9D0);
  unint64_t v5 = sub_2233C5DA4((uint64_t)&unk_26D66BA50);
  unint64_t v6 = sub_2233C5DA4((uint64_t)&unk_26D66BAD0);
  unint64_t v7 = sub_2233C5DA4((uint64_t)&unk_26D66BB50);
  unint64_t result = sub_2233C5DA4((uint64_t)&unk_26D66BBD0);
  *(unsigned char *)a2 = v3;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(a2 + 64) = result;
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = v9;
  return result;
}

uint64_t sub_223369F7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for SyncStatsCollector()
{
  return self;
}

uint64_t destroy for SyncStatsCollector.State()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SyncStatsCollector.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SyncStatsCollector.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SyncStatsCollector.State(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SyncStatsCollector.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncStatsCollector.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncStatsCollector.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncStatsCollector.State()
{
  return &type metadata for SyncStatsCollector.State;
}

uint64_t sub_22336A3A0()
{
  return v0;
}

unint64_t sub_22336A3AC(char a1)
{
  unint64_t result = 0x536C616974696E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C69666B636162;
      break;
    case 2:
      unint64_t result = 0x6369646F69726570;
      break;
    case 3:
      unint64_t result = 0x795370756B636162;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x6C6E4F746E756F63;
      break;
    case 6:
      unint64_t result = 0x74696E4972657375;
      break;
    case 7:
      unint64_t result = 0x7274656D656C6574;
      break;
    case 8:
      unint64_t result = 0x7361685074736574;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_22336A504(char a1)
{
  unint64_t result = 0x536C616974696E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C69666B636162;
      break;
    case 2:
      unint64_t result = 0x6369646F69726570;
      break;
    case 3:
      unint64_t result = 0x795370756B636162;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x6C6E4F746E756F63;
      break;
    case 6:
      unint64_t result = 0x74696E4972657375;
      break;
    case 7:
      unint64_t result = 0x7274656D656C6574;
      break;
    case 8:
      unint64_t result = 0x7361685074736574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22336A65C(unsigned __int8 *a1, char *a2)
{
  return sub_2233F54E8(*a1, *a2);
}

uint64_t sub_22336A668()
{
  return sub_22342D060();
}

uint64_t sub_22336A6B0()
{
  return sub_2233C421C();
}

uint64_t sub_22336A6B8()
{
  return sub_22342D060();
}

uint64_t sub_22336A6FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22336C294();
  *a1 = result;
  return result;
}

unint64_t sub_22336A72C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_22336A3AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_22336A758()
{
  return sub_22336A504(*v0);
}

uint64_t sub_22336A760@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22336C294();
  *a1 = result;
  return result;
}

void sub_22336A788(void *a1@<X8>)
{
  *a1 = &unk_26D66C1F8;
}

uint64_t sub_22336A798(uint64_t a1)
{
  unint64_t v2 = sub_22336B788();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22336A7D4(uint64_t a1)
{
  unint64_t v2 = sub_22336B788();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22336A810(unsigned __int8 *a1, char *a2)
{
  return sub_2233F5810(*a1, *a2);
}

uint64_t sub_22336A81C()
{
  return sub_223337A9C();
}

uint64_t sub_22336A824()
{
  return sub_2233C43A8();
}

uint64_t sub_22336A82C()
{
  return sub_223396AC0();
}

uint64_t sub_22336A834@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22336C2E0();
  *a1 = result;
  return result;
}

void sub_22336A864(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x73736572676F7270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7374616863;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x736567617373656DLL;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      *(void *)a1 = 0x656D686361747461;
      *(void *)(a1 + 8) = 0xEB0000000073746ELL;
      break;
    case 4:
      *(void *)a1 = 0xD000000000000013;
      *(void *)(a1 + 8) = 0x80000002234359E0;
      break;
    case 5:
      strcpy((char *)a1, "messageUpdates");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_22336A950()
{
  unint64_t result = 0x73736572676F7270;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7374616863;
      break;
    case 2:
      unint64_t result = 0x736567617373656DLL;
      break;
    case 3:
      unint64_t result = 0x656D686361747461;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x556567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22336AA28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22336C2E0();
  *a1 = result;
  return result;
}

void sub_22336AA50(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_22336AA5C(uint64_t a1)
{
  unint64_t v2 = sub_22336B83C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22336AA98(uint64_t a1)
{
  unint64_t v2 = sub_22336B83C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22336AAD4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_22331E640(&qword_267FA2A98);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22331E640(&qword_267FA2AA0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  unint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v45 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = sub_22331E640(&qword_267FA2AA8);
  uint64_t v54 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)a1;
  sub_223321F60(a1, a1[3]);
  sub_22336B788();
  uint64_t v18 = v57;
  sub_22342D080();
  uint64_t v19 = v18;
  if (v18) {
    goto LABEL_2;
  }
  char v50 = v11;
  char v48 = v8;
  long long v57 = v16;
  uint64_t v20 = v55;
  uint64_t v21 = v56;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  v22(v13, 1, 1, v56);
  uint64_t v23 = qword_26D66C208;
  if (qword_26D66C208)
  {
    char v47 = (void (*)(uint64_t, void, uint64_t, uint64_t))v22;
    uint64_t v52 = 0;
    uint64_t v49 = v17;
    int v24 = &byte_26D66C218;
    while (1)
    {
      uint64_t v26 = *v24++;
      uint64_t v25 = v26;
      LOBYTE(v59) = v26;
      if (sub_22342CE50()) {
        break;
      }
      if (!--v23)
      {
        uint64_t v17 = v49;
        uint64_t v19 = v52;
        goto LABEL_8;
      }
    }
    char v34 = byte_2234306BE[v25];
    LOBYTE(v59) = v25;
    sub_22336B83C();
    uint64_t v38 = (uint64_t)v50;
    uint64_t v39 = v57;
    uint64_t v40 = v52;
    sub_22342CDB0();
    if (v40)
    {
      sub_22336B7DC((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v14);
      uint64_t v17 = v49;
LABEL_2:
      _s17MessagesCloudSync9SyncFilesVwxx_0(v17);
      return swift_bridgeObjectRelease_n();
    }
    sub_22336B7DC((uint64_t)v13);
    v47(v38, 0, 1, v21);
    sub_22336B890(v38, (uint64_t)v13);
    uint64_t v41 = (uint64_t)v48;
    sub_22336B8F8((uint64_t)v13, (uint64_t)v48);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v41, 1, v21) != 1)
    {
      char v50 = (char *)v14;
      char v42 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v51, v41, v21);
      sub_22331E640(&qword_26AD5EEF0);
      char v58 = 1;
      sub_22336BA08(&qword_267FA2AB0, (void (*)(void))sub_22336B960, (void (*)(void))sub_22336B9B4);
      char v43 = v42;
      sub_22342CE30();
      unint64_t v28 = v59;
      char v58 = 2;
      sub_22342CE30();
      char v48 = (char *)v59;
      char v58 = 3;
      sub_22342CE30();
      char v47 = (void (*)(uint64_t, void, uint64_t, uint64_t))v59;
      char v58 = 4;
      sub_22342CE30();
      char v46 = v13;
      unint64_t v32 = v59;
      char v58 = 5;
      sub_22342CE30();
      uint64_t v52 = 0;
      unint64_t v33 = v59;
      uint64_t v44 = v54;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v56);
      sub_22336B7DC((uint64_t)v46);
      (*(void (**)(char *, char *))(v44 + 8))(v57, v50);
      uint64_t v17 = v49;
      swift_bridgeObjectRelease();
      unint64_t v30 = (unint64_t)v47;
      unint64_t v29 = (unint64_t)v48;
      goto LABEL_9;
    }
    sub_22336B7DC(v41);
    uint64_t v17 = v49;
    uint64_t v19 = 0;
  }
LABEL_8:
  uint64_t v52 = v19;
  uint64_t v27 = MEMORY[0x263F8EE78];
  unint64_t v28 = sub_2233C5DA4(MEMORY[0x263F8EE78]);
  unint64_t v29 = sub_2233C5DA4(v27);
  unint64_t v30 = sub_2233C5DA4(v27);
  uint64_t v31 = (uint64_t)v13;
  unint64_t v32 = sub_2233C5DA4(v27);
  unint64_t v33 = sub_2233C5DA4(v27);
  swift_bridgeObjectRelease_n();
  sub_22336B7DC(v31);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v14);
  char v34 = 9;
LABEL_9:
  uint64_t v35 = v53;
  char *v53 = v34;
  *((void *)v35 + 1) = 0;
  *((void *)v35 + 2) = 0;
  v35[24] = 0;
  *((void *)v35 + 4) = v28;
  *((void *)v35 + 5) = v29;
  *((void *)v35 + 6) = v30;
  *((void *)v35 + 7) = v32;
  uint64_t v36 = MEMORY[0x263F8EE78];
  *((void *)v35 + 8) = v33;
  *((void *)v35 + 9) = v36;
  *((void *)v35 + 10) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v17);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22336B37C(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_26AD5EF60);
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22331E640(&qword_26AD5EF68);
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(char *)v1;
  uint64_t v11 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v24 = v1[6];
  uint64_t v25 = v10;
  uint64_t v12 = v1[7];
  uint64_t v22 = v1[8];
  uint64_t v23 = v12;
  sub_223321F60(a1, a1[3]);
  sub_22336B788();
  uint64_t v13 = v6;
  sub_22342D090();
  LOBYTE(v31) = byte_2234306C7[v9];
  sub_22336B83C();
  sub_22342CE60();
  uint64_t v31 = v11;
  uint64_t v14 = v28;
  char v30 = 1;
  sub_22331E640(&qword_26AD5EEF0);
  sub_22336BA08((unint64_t *)&unk_26AD5EEF8, (void (*)(void))sub_22336BA90, (void (*)(void))sub_22336BAE4);
  uint64_t v15 = v5;
  uint64_t v16 = v29;
  sub_22342CEE0();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v13);
  }
  else
  {
    uint64_t v18 = v24;
    unint64_t v29 = v8;
    uint64_t v19 = v27;
    uint64_t v31 = v25;
    char v30 = 2;
    sub_22342CEE0();
    uint64_t v31 = v18;
    char v30 = 3;
    sub_22342CEE0();
    uint64_t v31 = v23;
    char v30 = 4;
    sub_22342CEE0();
    uint64_t v20 = v26;
    uint64_t v31 = v22;
    char v30 = 5;
    sub_22342CEE0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v29, v13);
  }
}

uint64_t sub_22336B758@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_22336AAD4(a1, a2);
}

uint64_t sub_22336B770(void *a1)
{
  return sub_22336B37C(a1);
}

unint64_t sub_22336B788()
{
  unint64_t result = qword_26AD5EE10;
  if (!qword_26AD5EE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE10);
  }
  return result;
}

uint64_t sub_22336B7DC(uint64_t a1)
{
  uint64_t v2 = sub_22331E640(&qword_267FA2AA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22336B83C()
{
  unint64_t result = qword_26AD5EDE8;
  if (!qword_26AD5EDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EDE8);
  }
  return result;
}

uint64_t sub_22336B890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_267FA2AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22336B8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_267FA2AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22336B960()
{
  unint64_t result = qword_267FA2AB8;
  if (!qword_267FA2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2AB8);
  }
  return result;
}

unint64_t sub_22336B9B4()
{
  unint64_t result = qword_267FA2AC0;
  if (!qword_267FA2AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2AC0);
  }
  return result;
}

uint64_t sub_22336BA08(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2233378D8(&qword_26AD5EEF0);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22336BA90()
{
  unint64_t result = qword_26AD5EE40;
  if (!qword_26AD5EE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE40);
  }
  return result;
}

unint64_t sub_22336BAE4()
{
  unint64_t result = qword_26AD5EE70;
  if (!qword_26AD5EE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE70);
  }
  return result;
}

unint64_t sub_22336BB38(char a1)
{
  if ((a1 - 1) > 4u)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    return sub_2233C5DA4(v3);
  }
  else
  {
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return v4;
  }
}

uint64_t sub_22336BCA8()
{
  sub_22342BD80();
  swift_allocObject();
  uint64_t result = sub_22342BD70();
  qword_26AD5EDD8 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for SyncStatsCollector.State.RootKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22336BDB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncStatsCollector.State.RootKeys()
{
  return &type metadata for SyncStatsCollector.State.RootKeys;
}

uint64_t getEnumTagSinglePayload for SyncStatsCollector.State.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SyncStatsCollector.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22336BF48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncStatsCollector.State.CodingKeys()
{
  return &type metadata for SyncStatsCollector.State.CodingKeys;
}

unint64_t sub_22336BF84()
{
  unint64_t result = qword_267FA2AC8;
  if (!qword_267FA2AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2AC8);
  }
  return result;
}

unint64_t sub_22336BFDC()
{
  unint64_t result = qword_267FA2AD0;
  if (!qword_267FA2AD0)
  {
    sub_2233378D8(&qword_267FA2AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2AD0);
  }
  return result;
}

unint64_t sub_22336C03C()
{
  unint64_t result = qword_267FA2AE0;
  if (!qword_267FA2AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267FA2AE0);
  }
  return result;
}

unint64_t sub_22336C094()
{
  unint64_t result = qword_26AD5EDF8;
  if (!qword_26AD5EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EDF8);
  }
  return result;
}

unint64_t sub_22336C0EC()
{
  unint64_t result = qword_26AD5EDF0;
  if (!qword_26AD5EDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EDF0);
  }
  return result;
}

unint64_t sub_22336C144()
{
  unint64_t result = qword_26AD5EE08;
  if (!qword_26AD5EE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE08);
  }
  return result;
}

unint64_t sub_22336C19C()
{
  unint64_t result = qword_26AD5EE00;
  if (!qword_26AD5EE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE00);
  }
  return result;
}

uint64_t sub_22336C1F0(uint64_t a1, char a2)
{
  if ((a2 - 1) >= 5u)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getKeyPath();
    swift_setAtWritableKeyPath();
    swift_release();
  }
  return swift_endAccess();
}

uint64_t sub_22336C294()
{
  unint64_t v0 = sub_22342CDA0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_22336C2E0()
{
  unint64_t v0 = sub_22342CDA0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

void *sub_22336C330(uint64_t a1)
{
  uint64_t v27 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return (void *)MEMORY[0x263F8EE78];
  }
  v23[1] = a1;
  v23[2] = v1;
  uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v8 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_223366ED0(v7, (uint64_t)v5);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t updated = type metadata accessor for ChatRecord(0);
        uint64_t v11 = sub_22336D84C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
        uint64_t v12 = type metadata accessor for ChatRecord;
        break;
      case 2u:
        uint64_t updated = type metadata accessor for ItemRecord();
        uint64_t v11 = sub_22336D84C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
        uint64_t v12 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
        break;
      case 3u:
        uint64_t updated = type metadata accessor for AttachmentRecord();
        uint64_t v11 = sub_22336D84C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
        uint64_t v12 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
        break;
      case 4u:
        uint64_t updated = type metadata accessor for RecoverableMessageRecord();
        uint64_t v11 = sub_22336D84C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
        uint64_t v12 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
        break;
      case 5u:
        uint64_t updated = type metadata accessor for MessageUpdateRecord();
        uint64_t v11 = sub_22336D84C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
        uint64_t v12 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
        break;
      case 6u:
        uint64_t updated = type metadata accessor for UnknownRecord();
        uint64_t v11 = sub_22336D84C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
        uint64_t v12 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
        break;
      default:
        uint64_t updated = type metadata accessor for ChatLockRecord();
        uint64_t v11 = sub_22336D84C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
        uint64_t v12 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
        break;
    }
    uint64_t v13 = v12;
    uint64_t v26 = v11;
    uint64_t v14 = sub_223348E4C(v24);
    sub_22336D894((uint64_t)v5, (uint64_t)v14, v13);
    uint64_t v15 = updated;
    uint64_t v16 = v26;
    sub_223321F60(v24, updated);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
    uint64_t v19 = v18;
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v24);
    if (v19)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_22338B314(0, v9[2] + 1, 1, v9);
      }
      unint64_t v21 = v9[2];
      unint64_t v20 = v9[3];
      if (v21 >= v20 >> 1) {
        uint64_t v9 = sub_22338B314((void *)(v20 > 1), v21 + 1, 1, v9);
      }
      _OWORD v9[2] = v21 + 1;
      uint64_t v10 = &v9[2 * v21];
      v10[4] = v17;
      v10[5] = v19;
    }
    v7 += v8;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_22336C7C0()
{
  type metadata accessor for ImportContextFactory();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_26AD63308 = v0;
  return result;
}

uint64_t sub_22336C7FC(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = type metadata accessor for DatabaseRecord();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22336C8D8, v1, 0);
}

uint64_t sub_22336C8D8()
{
  uint64_t v1 = v0 + 10;
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v49 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v0[10] + 16);
  uint64_t v4 = swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v5 = v0 + 2;
    uint64_t v6 = v0[13];
    uint64_t v7 = *(void *)(v6 + 72);
    uint64_t v8 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    unint64_t v48 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v47 = v3;
    uint64_t v9 = v3;
    while (1)
    {
      uint64_t v11 = v0[15];
      uint64_t v10 = v0[16];
      sub_223366ED0(v8, v10);
      sub_223366ED0(v10, v11);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v12 = v0[15];
          v0[5] = type metadata accessor for ChatRecord(0);
          v0[6] = sub_22336D84C(&qword_26AD5F278, (void (*)(uint64_t))type metadata accessor for ChatRecord);
          uint64_t v13 = sub_223348E4C(v5);
          uint64_t v14 = type metadata accessor for ChatRecord;
          break;
        case 2u:
          uint64_t v12 = v0[15];
          v0[5] = type metadata accessor for ItemRecord();
          v0[6] = sub_22336D84C(&qword_26AD5F678, (void (*)(uint64_t))type metadata accessor for ItemRecord);
          uint64_t v13 = sub_223348E4C(v5);
          uint64_t v14 = (uint64_t (*)(void))type metadata accessor for ItemRecord;
          break;
        case 3u:
          uint64_t v12 = v0[15];
          v0[5] = type metadata accessor for AttachmentRecord();
          v0[6] = sub_22336D84C(&qword_267FA29E8, (void (*)(uint64_t))type metadata accessor for AttachmentRecord);
          uint64_t v13 = sub_223348E4C(v5);
          uint64_t v14 = (uint64_t (*)(void))type metadata accessor for AttachmentRecord;
          break;
        case 4u:
          uint64_t v12 = v0[15];
          v0[5] = type metadata accessor for RecoverableMessageRecord();
          v0[6] = sub_22336D84C(&qword_267FA29E0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
          uint64_t v13 = sub_223348E4C(v5);
          uint64_t v14 = (uint64_t (*)(void))type metadata accessor for RecoverableMessageRecord;
          break;
        case 5u:
          uint64_t v12 = v0[15];
          v0[5] = type metadata accessor for MessageUpdateRecord();
          v0[6] = sub_22336D84C(&qword_26AD5FE20, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
          uint64_t v13 = sub_223348E4C(v5);
          uint64_t v14 = (uint64_t (*)(void))type metadata accessor for MessageUpdateRecord;
          break;
        case 6u:
          uint64_t v12 = v0[15];
          v0[5] = type metadata accessor for UnknownRecord();
          v0[6] = sub_22336D84C(&qword_267FA29D8, (void (*)(uint64_t))type metadata accessor for UnknownRecord);
          uint64_t v13 = sub_223348E4C(v5);
          uint64_t v14 = (uint64_t (*)(void))type metadata accessor for UnknownRecord;
          break;
        default:
          uint64_t v12 = v0[15];
          v0[5] = type metadata accessor for ChatLockRecord();
          v0[6] = sub_22336D84C(&qword_267FA29F0, (void (*)(uint64_t))type metadata accessor for ChatLockRecord);
          uint64_t v13 = sub_223348E4C(v5);
          uint64_t v14 = (uint64_t (*)(void))type metadata accessor for ChatLockRecord;
          break;
      }
      sub_22336D894(v12, (uint64_t)v13, v14);
      uint64_t v15 = v0[5];
      uint64_t v16 = v0[6];
      sub_223321F60(v5, v15);
      (*(void (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
      uint64_t v18 = v17;
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v5);
      if (v18) {
        break;
      }
LABEL_16:
      char v21 = sub_22342CF60();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_21;
      }
      sub_22336D7F0(v0[16]);
LABEL_4:
      v8 += v7;
      if (!--v9)
      {
        uint64_t v3 = v47;
        uint64_t v1 = v0 + 10;
        goto LABEL_27;
      }
    }
    uint64_t v19 = sub_22342CDA0();
    swift_bridgeObjectRelease();
    switch(v19)
    {
      case 0:
        unint64_t v20 = "timeExpressiveSendPlayed";
        goto LABEL_19;
      case 2:
        goto LABEL_20;
      case 4:
        unint64_t v20 = "MessageEncryptedV3";
LABEL_19:
        if (((unint64_t)v20 | 0x8000000000000000) != 0x80000002234357D0) {
          goto LABEL_16;
        }
LABEL_20:
        swift_bridgeObjectRelease();
        break;
      default:
        goto LABEL_16;
    }
LABEL_21:
    sub_22336D894(v0[16], v0[14], (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_223372554(0, *(void *)(v2 + 16) + 1, 1);
      uint64_t v2 = v49;
    }
    unint64_t v23 = *(void *)(v2 + 16);
    unint64_t v22 = *(void *)(v2 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_223372554(v22 > 1, v23 + 1, 1);
      uint64_t v2 = v49;
    }
    uint64_t v24 = v0[14];
    *(void *)(v2 + 16) = v23 + 1;
    sub_22336D894(v24, v2 + v48 + v23 * v7, (uint64_t (*)(void))type metadata accessor for DatabaseRecord);
    goto LABEL_4;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_22336C330(v2);
  v0[17] = v25;
  v0[18] = 0;
  swift_release();
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_22342C200();
  sub_223323374(v26, (uint64_t)qword_26AD63330);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_22342C1E0();
  os_log_type_t v28 = sub_22342C720();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 134218240;
    *(v1 - 2) = v25[2];
    sub_22342CA10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2048;
    *(v1 - 1) = v3;
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v27, v28, "Extracted %ld guids from %ld records when creating import context", (uint8_t *)v29, 0x16u);
    MEMORY[0x223CB62D0](v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v30 = qword_26AD630F8;
  v0[19] = qword_26AD630F8;
  if (v30)
  {
    uint64_t v31 = qword_26AD63100;
    v0[20] = qword_26AD63100;
    v0[21] = *(void *)(v31 + 48);
    v0[22] = (v31 + 48) & 0xFFFFFFFFFFFFLL | 0x455B000000000000;
    if (qword_26AD5EE88 != -1) {
      swift_once();
    }
    sub_22342C5B0();
    uint64_t v33 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_22336D31C, v33, v32);
  }
  else
  {
    sub_22334283C();
    char v34 = (void *)swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease();
    id v35 = v34;
    id v36 = v34;
    uint64_t v37 = sub_22342C1E0();
    os_log_type_t v38 = sub_22342C700();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = v1 - 3;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138412290;
      id v42 = v34;
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      *uint64_t v39 = v43;
      sub_22342CA10();
      *uint64_t v41 = v43;

      _os_log_impl(&dword_223317000, v37, v38, "Error when fetching chat properties for import context: %@", v40, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v41, -1, -1);
      MEMORY[0x223CB62D0](v40, -1, -1);
    }
    else
    {
    }
    unint64_t v44 = sub_2233C5FE8(MEMORY[0x263F8EE78]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = (uint64_t (*)(unint64_t))v0[1];
    return v45(v44);
  }
}

uint64_t sub_22336D31C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 184) = (*(uint64_t (**)(void))(v0 + 168))(*(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_22336D3AC, v1, 0);
}

uint64_t sub_22336D3AC()
{
  uint64_t v12 = v0;
  uint64_t v1 = (void *)v0[23];
  if (v1)
  {
    unint64_t v10 = MEMORY[0x263F8EE80];
    uint64_t v2 = v1[2];
    if (v2)
    {
      uint64_t v3 = v0[18];
      uint64_t v4 = v1[4];
      swift_bridgeObjectRetain();
      v11[0] = v4;
      swift_bridgeObjectRetain();
      sub_22336D53C((uint64_t *)&v10, v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = v2 - 1;
      if (v7)
      {
        uint64_t v8 = v1 + 5;
        do
        {
          v11[0] = *v8;
          swift_bridgeObjectRetain();
          sub_22336D53C((uint64_t *)&v10, v11);
          swift_bridgeObjectRelease();
          ++v8;
          --v7;
        }
        while (v7);
      }
      swift_bridgeObjectRelease_n();
      unint64_t v6 = v10;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v6 = MEMORY[0x263F8EE80];
    }
  }
  else
  {
    unint64_t v6 = sub_2233C5FE8(MEMORY[0x263F8EE78]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(unint64_t))v0[1];
  return v9(v6);
}

uint64_t sub_22336D53C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_22342CB30();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_22339E34C((uint64_t)&v25), (v5 & 1) != 0))
  {
    sub_22332325C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_22334902C((uint64_t)&v25);
  if (!*((void *)&v24 + 1)) {
    return sub_223338A24((uint64_t)&v23);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_2233C2184(v7, (uint64_t)&v25);
  uint64_t v8 = *a1;
  if (*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_22339C2E8(0x496567617373656DLL, 0xE900000000000044);
    if (v10)
    {
      uint64_t v11 = *(void **)(*(void *)(v8 + 56) + 8 * v9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_22338B8AC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v13 = v11[2];
      unint64_t v12 = v11[3];
      if (v13 >= v12 >> 1) {
        uint64_t v11 = sub_22338B8AC((void *)(v12 > 1), v13 + 1, 1, v11);
      }
      uint64_t v11[2] = v13 + 1;
      uint64_t v14 = &v11[7 * v13];
      long long v15 = v25;
      long long v16 = v26;
      long long v17 = v27;
      *((_WORD *)v14 + 40) = v28;
      *((_OWORD *)v14 + 3) = v16;
      *((_OWORD *)v14 + 4) = v17;
      *((_OWORD *)v14 + 2) = v15;
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_22331E640(&qword_26AD60518);
  uint64_t v18 = swift_allocObject();
  long long v19 = v25;
  long long v20 = v26;
  *(_OWORD *)(v18 + 16) = xmmword_22342F870;
  *(_OWORD *)(v18 + 32) = v19;
  long long v21 = v27;
  *(_OWORD *)(v18 + 48) = v20;
  *(_OWORD *)(v18 + 64) = v21;
  *(_WORD *)(v18 + 80) = v28;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v23 = *a1;
  *a1 = 0x8000000000000000;
  sub_2233CE924(v18, 0x496567617373656DLL, 0xE900000000000044, isUniquelyReferenced_nonNull_native);
  *a1 = v23;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22336D79C()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for ImportContextFactory()
{
  return self;
}

uint64_t sub_22336D7F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DatabaseRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22336D84C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22336D894(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_22336D8FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  v20[1] = a6;
  v21[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22336DD4C(a3, (uint64_t)v13);
  uint64_t v14 = sub_22342C010();
  uint64_t v15 = *(void *)(v14 - 8);
  long long v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    long long v16 = (void *)sub_22342BF80();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  v21[0] = 0;
  id v17 = objc_msgSend(a5, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a1, a2, v16, a4 & 1, v21);

  id v18 = v21[0];
  if (v17)
  {
    sub_22342BFD0();
  }
  else
  {
    long long v19 = v18;
    sub_22342BF30();

    swift_willThrow();
  }
}

id sub_22336DAD4(uint64_t a1, void *a2)
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = (void *)sub_22342BF80();
  v6[0] = 0;
  LODWORD(a2) = objc_msgSend(a2, sel_removeItemAtURL_error_, v3, v6);

  if (a2) {
    return v6[0];
  }
  id v5 = v6[0];
  sub_22342BF30();

  return (id)swift_willThrow();
}

id sub_22336DB98(uint64_t a1, uint64_t a2, void *a3)
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v4 = (void *)sub_22342BF80();
  id v5 = (void *)sub_22342BF80();
  v8[0] = 0;
  LODWORD(a3) = objc_msgSend(a3, sel_moveItemAtURL_toURL_error_, v4, v5, v8);

  if (a3) {
    return v8[0];
  }
  id v7 = v8[0];
  sub_22342BF30();

  return (id)swift_willThrow();
}

id sub_22336DC7C(uint64_t a1, char a2, void *a3)
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  id v5 = (void *)sub_22342BF80();
  v8[0] = 0;
  LODWORD(a3) = objc_msgSend(a3, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, a2 & 1, 0, v8);

  if (a3) {
    return v8[0];
  }
  id v7 = v8[0];
  sub_22342BF30();

  return (id)swift_willThrow();
}

uint64_t sub_22336DD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for FileManagerProvider()
{
  return &type metadata for FileManagerProvider;
}

uint64_t *sub_22336DDC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = a2[11];
    uint64_t v12 = a3[10];
    __dst = (char *)a1 + v12;
    id v35 = (char *)a2 + v12;
    a1[10] = a2[10];
    a1[11] = v11;
    uint64_t v13 = sub_22342C130();
    uint64_t v36 = *(void *)(v13 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v35, 1, v13))
    {
      uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(__dst, v35, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v35, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v17 = a3[11];
    id v18 = (char *)v4 + v17;
    long long v19 = (char *)a2 + v17;
    if (v14((char *)a2 + v17, 1, v13))
    {
      uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v18, v19, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v18, 0, 1, v13);
    }
    uint64_t v21 = a3[12];
    uint64_t v22 = a3[13];
    long long v23 = (uint64_t *)((char *)v4 + v21);
    long long v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *long long v23 = *v24;
    v23[1] = v25;
    long long v26 = (char *)v4 + v22;
    long long v27 = (char *)a2 + v22;
    swift_bridgeObjectRetain();
    if (v14(v27, 1, v13))
    {
      uint64_t v28 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v26, 0, 1, v13);
    }
    uint64_t v29 = a3[14];
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = (char *)a2 + v29;
    unint64_t v32 = *((void *)v31 + 1);
    if (v32 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    }
    else
    {
      uint64_t v33 = *(void *)v31;
      sub_22331E684(*(void *)v31, *((void *)v31 + 1));
      *(void *)uint64_t v30 = v33;
      *((void *)v30 + 1) = v32;
    }
  }
  return v4;
}

uint64_t sub_22336E148(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_22342C130();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[11];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[13];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[14]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15)
  {
    uint64_t v13 = *v11;
    return sub_22331EA68(v13, v12);
  }
  return result;
}

void *sub_22336E304(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v9 = *((void *)a2 + 9);
  a1[8] = *((void *)a2 + 8);
  a1[9] = v9;
  uint64_t v10 = *((void *)a2 + 11);
  uint64_t v11 = a3[10];
  __dst = (char *)a1 + v11;
  char v34 = &a2[v11];
  a1[10] = *((void *)a2 + 10);
  a1[11] = v10;
  uint64_t v12 = sub_22342C130();
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v34, 1, v12))
  {
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(__dst, v34, *(void *)(*(void *)(v14 - 8) + 64));
    uint64_t v15 = v35;
  }
  else
  {
    uint64_t v15 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v34, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  id v18 = &a2[v16];
  if (v13(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = (void *)((char *)a1 + v20);
  long long v23 = &a2[v20];
  uint64_t v24 = *((void *)v23 + 1);
  *uint64_t v22 = *(void *)v23;
  v22[1] = v24;
  uint64_t v25 = (char *)a1 + v21;
  long long v26 = &a2[v21];
  swift_bridgeObjectRetain();
  if (v13(v26, 1, v12))
  {
    uint64_t v27 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v25, v26, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v25, 0, 1, v12);
  }
  uint64_t v28 = a3[14];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = &a2[v28];
  unint64_t v31 = *((void *)v30 + 1);
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *(void *)v30;
    sub_22331E684(*(void *)v30, *((void *)v30 + 1));
    *(void *)uint64_t v29 = v32;
    *((void *)v29 + 1) = v31;
  }
  return a1;
}

char *sub_22336E634(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22342C130();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[12];
  uint64_t v22 = &a1[v21];
  long long v23 = (void *)((char *)a2 + v21);
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[13];
  uint64_t v25 = &a1[v24];
  long long v26 = (char *)a2 + v24;
  int v27 = v11(&a1[v24], 1, v9);
  int v28 = v11(v26, 1, v9);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v25, v26, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
LABEL_18:
    uint64_t v29 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v25, v26, v9);
LABEL_19:
  uint64_t v30 = a3[14];
  unint64_t v31 = (uint64_t *)&a1[v30];
  uint64_t v32 = (void *)((char *)a2 + v30);
  unint64_t v33 = *(void *)((char *)a2 + v30 + 8);
  if (*(void *)&a1[v30 + 8] >> 60 != 15)
  {
    if (v33 >> 60 != 15)
    {
      uint64_t v35 = *v32;
      sub_22331E684(v35, v33);
      uint64_t v36 = *v31;
      unint64_t v37 = v31[1];
      *unint64_t v31 = v35;
      v31[1] = v33;
      sub_22331EA68(v36, v37);
      return a1;
    }
    sub_22331FFAC((uint64_t)v31);
    goto LABEL_24;
  }
  if (v33 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
    return a1;
  }
  uint64_t v34 = *v32;
  sub_22331E684(v34, v33);
  *unint64_t v31 = v34;
  v31[1] = v33;
  return a1;
}

_OWORD *sub_22336EB18(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  long long v8 = *((_OWORD *)a2 + 5);
  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = &a2[v9];
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v8;
  uint64_t v12 = sub_22342C130();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  int v18 = &a2[v16];
  if (v14(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = &a2[v20];
  if (v14(&a2[v20], 1, v12))
  {
    uint64_t v23 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v22, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)&a2[a3[14]];
  return a1;
}

char *sub_22336EDA0(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_22342C130();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v17(&a1[v21], 1, v15);
  int v25 = v17(v23, 1, v15);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v23, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
LABEL_12:
    uint64_t v26 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v22, v23, v15);
LABEL_13:
  uint64_t v27 = a3[12];
  int v28 = &a1[v27];
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *(void *)int v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[13];
  unint64_t v33 = &a1[v32];
  uint64_t v34 = (char *)a2 + v32;
  int v35 = v17(&a1[v32], 1, v15);
  int v36 = v17(v34, 1, v15);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v34, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v15);
LABEL_18:
    uint64_t v37 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v33, v34, v15);
LABEL_19:
  uint64_t v38 = a3[14];
  uint64_t v39 = (uint64_t *)&a1[v38];
  uint64_t v40 = (void *)((char *)a2 + v38);
  unint64_t v41 = *(void *)&a1[v38 + 8];
  if (v41 >> 60 != 15)
  {
    unint64_t v42 = v40[1];
    if (v42 >> 60 != 15)
    {
      uint64_t v43 = *v39;
      *uint64_t v39 = *v40;
      v39[1] = v42;
      sub_22331EA68(v43, v41);
      return a1;
    }
    sub_22331FFAC((uint64_t)v39);
  }
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  return a1;
}

uint64_t sub_22336F1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22336F1F8);
}

uint64_t sub_22336F1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_22336F2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22336F2CC);
}

uint64_t sub_22336F2CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for RecoverableMessageRecord()
{
  uint64_t result = qword_26AD5FF90;
  if (!qword_26AD5FF90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22336F3C4()
{
  sub_223321460();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_22336F474@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_22331E640(&qword_267FA2B00);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v59 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v56 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v51 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = sub_22331E640(&qword_26AD60508);
  uint64_t v60 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RecoverableMessageRecord();
  MEMORY[0x270FA5388](v16);
  int v18 = (uint64_t *)((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = a1[3];
  uint64_t v62 = a1;
  sub_223321F60(a1, v19);
  sub_223321FA4();
  uint64_t v20 = v61;
  sub_22342D080();
  if (v20) {
    return (id)_s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v62);
  }
  uint64_t v52 = v10;
  uint64_t v53 = v12;
  uint64_t v61 = (int *)v16;
  uint64_t v54 = v18;
  LOBYTE(v63) = 0;
  uint64_t v21 = v15;
  uint64_t v22 = sub_22342CDC0();
  int v24 = v54;
  *uint64_t v54 = v22;
  v24[1] = v25;
  LOBYTE(v63) = 1;
  v24[2] = sub_22342CDC0();
  uint64_t v24[3] = v26;
  LOBYTE(v63) = 2;
  v24[4] = sub_22342CDC0();
  v24[5] = v27;
  LOBYTE(v63) = 3;
  v24[6] = sub_22342CDC0();
  v24[7] = v28;
  LOBYTE(v63) = 4;
  v24[8] = sub_22342CDC0();
  v24[9] = v29;
  LOBYTE(v63) = 5;
  uint64_t v30 = sub_22342CDC0();
  uint64_t v31 = v54;
  v54[10] = v30;
  v31[11] = v32;
  uint64_t v33 = sub_22342C130();
  LOBYTE(v63) = 6;
  sub_2233702B0(&qword_26AD5F408, MEMORY[0x263F07490]);
  uint64_t v34 = (uint64_t)v53;
  sub_22342CDF0();
  sub_223332AEC(v34, (uint64_t)v31 + v61[10]);
  LOBYTE(v63) = 7;
  uint64_t v35 = (uint64_t)v52;
  sub_22342CDF0();
  uint64_t v36 = v35;
  uint64_t v37 = v61;
  sub_223332AEC(v36, (uint64_t)v31 + v61[11]);
  LOBYTE(v63) = 8;
  uint64_t v38 = sub_22342CDC0();
  uint64_t v51 = 0;
  uint64_t v52 = v21;
  uint64_t v53 = (char *)v13;
  uint64_t v39 = (uint64_t *)((char *)v31 + v37[12]);
  *uint64_t v39 = v38;
  v39[1] = v40;
  sub_223321F60(v62, v62[3]);
  sub_223367098();
  sub_22342D080();
  LOBYTE(v63) = 0;
  uint64_t v41 = sub_22342CE00();
  char v43 = v42;
  uint64_t v44 = 1;
  if ((v43 & 1) == 0)
  {
    id result = objc_msgSend(self, sel___im_dateWithNanosecondTimeIntervalSinceReferenceDate_, (double)v41);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v45 = result;
    sub_22342C100();

    uint64_t v44 = 0;
  }
  uint64_t v46 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v56, v44, 1, v33);
  sub_223332AEC(v46, (uint64_t)v54 + v61[13]);
  LOBYTE(v63) = 1;
  if (sub_22342CE50())
  {
    char v64 = 1;
    sub_223322B18();
    sub_22342CDF0();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
    (*(void (**)(char *, char *))(v60 + 8))(v52, v53);
    uint64_t v47 = v61[14];
    long long v48 = v63;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
    (*(void (**)(char *, char *))(v60 + 8))(v52, v53);
    uint64_t v47 = v61[14];
    long long v48 = xmmword_223430780;
  }
  uint64_t v49 = v55;
  *(_OWORD *)((char *)v54 + v47) = v48;
  uint64_t v50 = v54;
  sub_2233702F8((uint64_t)v54, v49);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v62);
  return (id)sub_22337035C((uint64_t)v50);
}

uint64_t sub_22336FDB8(char *a1, char *a2)
{
  return sub_2233F40C4(*a1, *a2);
}

uint64_t sub_22336FDC4()
{
  return sub_22342D060();
}

uint64_t sub_22336FE4C()
{
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22336FEC0()
{
  return sub_22342D060();
}

uint64_t sub_22336FF44@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_22336FFA4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x61446574656C6564;
  if (*v1) {
    uint64_t v2 = 0x79646F4274726170;
  }
  unint64_t v3 = 0xEA00000000006574;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_22336FFE8()
{
  if (*v0) {
    return 0x79646F4274726170;
  }
  else {
    return 0x61446574656C6564;
  }
}

uint64_t sub_223370028@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_22337008C(uint64_t a1)
{
  unint64_t v2 = sub_223367098();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2233700C8(uint64_t a1)
{
  unint64_t v2 = sub_223367098();
  return MEMORY[0x270FA00B8](a1, v2);
}

id sub_223370104@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22336F474(a1, a2);
}

uint64_t sub_22337011C(void *a1)
{
  uint64_t v2 = sub_22331E640(&qword_267FA2A10);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_223367098();
  sub_22342D090();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22337022C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_2233702B0(&qword_267FA2AF0, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
  uint64_t result = sub_2233702B0(&qword_267FA2AF8, (void (*)(uint64_t))type metadata accessor for RecoverableMessageRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2233702B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2233702F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecoverableMessageRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22337035C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RecoverableMessageRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for RecoverableMessageRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223370484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecoverableMessageRecord.CodingKeys()
{
  return &type metadata for RecoverableMessageRecord.CodingKeys;
}

unint64_t sub_2233704C0()
{
  unint64_t result = qword_267FA2B08;
  if (!qword_267FA2B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B08);
  }
  return result;
}

unint64_t sub_223370518()
{
  unint64_t result = qword_267FA2B10;
  if (!qword_267FA2B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B10);
  }
  return result;
}

unint64_t sub_223370570()
{
  unint64_t result = qword_267FA2B18;
  if (!qword_267FA2B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B18);
  }
  return result;
}

uint64_t sub_2233705C4(uint64_t a1)
{
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v79 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v67 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v67 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v67 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v67 - v14;
  uint64_t v16 = (int *)type metadata accessor for MessageRecord();
  uint64_t v17 = (uint64_t *)(a1 + v16[24]);
  uint64_t v18 = v17[1];
  if (v18)
  {
    uint64_t v19 = *v17;
    sub_22331E640(&qword_26AD60538);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F870;
    *(void *)(inited + 32) = 0x6E6F737265505A46;
    *(void *)(inited + 40) = 0xEA00000000004449;
    *(void *)(inited + 48) = v19;
    *(void *)(inited + 56) = v18;
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_2233C5C80(inited);
    sub_2233FD3B0(v21);
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_22342C260();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v78 = 0;
  }
  sub_223332B54(a1 + v16[14], (uint64_t)v15);
  uint64_t v22 = sub_22342C130();
  uint64_t v83 = *(void *)(v22 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
  int v24 = v23(v15, 1, v22);
  uint64_t v82 = 0;
  if (v24 != 1)
  {
    uint64_t v82 = sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v15, v22);
  }
  sub_223332B54(a1 + v16[15], (uint64_t)v13);
  if (v23(v13, 1, v22) == 1)
  {
    uint64_t v77 = 0;
  }
  else
  {
    uint64_t v77 = sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v13, v22);
  }
  sub_223332B54(a1 + v16[16], (uint64_t)v10);
  if (v23(v10, 1, v22) == 1)
  {
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v10, v22);
  }
  sub_223332B54(a1 + v16[17], (uint64_t)v7);
  if (v23(v7, 1, v22) == 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v7, v22);
  }
  if (*(void *)(a1 + v16[22] + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v75 = 0;
  }
  uint64_t v81 = 0;
  uint64_t v27 = (void *)(a1 + v16[18]);
  if (v27[1] != 1)
  {
    unint64_t v28 = v27[3];
    if (v28 >> 60 != 15)
    {
      uint64_t v29 = v27[2];
      sub_22331E684(v29, v27[3]);
      uint64_t v81 = sub_22342C050();
      sub_223322054(v29, v28);
    }
  }
  uint64_t v30 = a1 + v16[19];
  if (*(unsigned char *)(v30 + 8)) {
    unint64_t v31 = 0;
  }
  else {
    unint64_t v31 = *(void *)v30;
  }
  if ((v31 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  id v73 = (id)v31;
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_22342C2D0();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 24)) {
      goto LABEL_27;
    }
LABEL_30:
    uint64_t v72 = 0;
    if (v17[1]) {
      goto LABEL_28;
    }
    goto LABEL_31;
  }
  uint64_t v74 = 0;
  if (!*(void *)(a1 + 24)) {
    goto LABEL_30;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v72 = sub_22342C2D0();
  swift_bridgeObjectRelease();
  if (v17[1])
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_22342C2D0();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v71 = 0;
LABEL_32:
  long long v70 = (void *)v26;
  uint64_t v76 = (void *)v25;
  uint64_t v32 = a1 + v16[26];
  id v69 = *(id *)v32;
  int v33 = *(unsigned __int8 *)(v32 + 8);
  if (*(void *)(a1 + v16[28] + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = 0;
  }
  uint64_t v35 = a1 + v16[29];
  unint64_t v36 = *(void *)(v35 + 8);
  if (v36 >> 60 == 15)
  {
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v38 = *(void *)v35;
    sub_22331E684(*(void *)v35, *(void *)(v35 + 8));
    uint64_t v37 = (void *)sub_22342C050();
    sub_223322054(v38, v36);
  }
  if (*(void *)(a1 + v16[30] + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = (char *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = 0;
  }
  uint64_t v40 = v79;
  sub_223332B54(a1 + v16[31], (uint64_t)v79);
  if (v23(v40, 1, v22) == 1)
  {
    uint64_t v41 = 0;
  }
  else
  {
    char v42 = v40;
    uint64_t v41 = (void *)sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v42, v22);
  }
  uint64_t v43 = a1 + v16[20];
  if (*(unsigned char *)(v43 + 8))
  {
    LODWORD(v44) = 0;
    goto LABEL_48;
  }
  unint64_t v44 = *(void *)v43;
  if ((*(void *)v43 & 0x8000000000000000) != 0 || HIDWORD(v44))
  {
LABEL_55:
    uint64_t result = sub_22342CD30();
    __break(1u);
    return result;
  }
LABEL_48:
  if (v33) {
    id v45 = 0;
  }
  else {
    id v45 = v69;
  }
  uint64_t v46 = a1 + v16[23];
  if (*(unsigned char *)(v46 + 8)) {
    uint64_t v47 = 0;
  }
  else {
    uint64_t v47 = *(void *)v46;
  }
  id v48 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v66 = v47;
  LODWORD(v65) = v44;
  long long v63 = v39;
  char v64 = v41;
  id v68 = v37;
  uint64_t v61 = v34;
  uint64_t v62 = v37;
  id v60 = v45;
  uint64_t v83 = a1;
  uint64_t v49 = (void *)v71;
  uint64_t v50 = (void *)v72;
  id v80 = v41;
  uint64_t v51 = (void *)v74;
  uint64_t v79 = v39;
  uint64_t v52 = (void *)v81;
  uint64_t v54 = (void *)v77;
  uint64_t v53 = (void *)v78;
  uint64_t v55 = (void *)v82;
  uint64_t v56 = v76;
  uint64_t v57 = v70;
  id v69 = v34;
  uint64_t v58 = (void *)v75;
  id v73 = objc_msgSend(v48, sel_initWithSenderInfo_time_timeRead_timeDelivered_timePlayed_subject_body_bodyData_attributes_fileTransferGUIDs_flags_guid_messageID_account_accountID_service_handle_roomName_unformattedID_countryCode_expireState_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_bizIntent_locale_biaReferenceID_errorType_threadIdentifier_syndicationRanges_syncedSyndicationRanges_partCount_dateEdited_scheduleType_scheduleState_, v78, v82, v77, v76, v70, v75, 0, v81, 0, 0, v73, v74, 0, 0, 0, v72, v71,
          0,
          0,
          0,
          v60,
          v61,
          v62,
          v63,
          v64,
          0,
          0,
          0,
          v65,
          0,
          0,
          0,
          v66,
          0,
          0,
          0);

  sub_223323140(v83);
  return (uint64_t)v73;
}

void sub_223370E00(void *a1, void *a2, void *a3, void *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v106 = a5;
  uint64_t v11 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v103 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v103 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v103 - v21;
  if (!a1)
  {
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_22342C200();
    sub_223323374(v28, (uint64_t)qword_26AD63330);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_22342C1E0();
    os_log_type_t v30 = sub_22342C700();
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v112 = (unsigned int (*)(void, void, void))v32;
      *(_DWORD *)unint64_t v31 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v111 = sub_22339BC14(v106, a6, (uint64_t *)&v112);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v29, v30, "No Proto for IMMessageItem %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v32, -1, -1);
      MEMORY[0x223CB62D0](v31, -1, -1);

      if (a2) {
        goto LABEL_41;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (a2) {
        goto LABEL_41;
      }
    }
LABEL_48:
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_22342C200();
    sub_223323374(v69, (uint64_t)qword_26AD63330);
    swift_bridgeObjectRetain_n();
    long long v70 = sub_22342C1E0();
    os_log_type_t v71 = sub_22342C6E0();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v112 = (unsigned int (*)(void, void, void))v73;
      *(_DWORD *)uint64_t v72 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v111 = sub_22339BC14(v106, a6, (uint64_t *)&v112);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v70, v71, "No Proto2 for IMMessageItem %s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v73, -1, -1);
      MEMORY[0x223CB62D0](v72, -1, -1);

      if (a3) {
        goto LABEL_45;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (a3) {
        goto LABEL_45;
      }
    }
    goto LABEL_54;
  }
  unint64_t v105 = a6;
  sub_2233C29A0(a1, (uint64_t)&v103 - v21);
  uint64_t v23 = sub_22342C130();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v107 = v24;
  uint64_t v108 = v24 + 48;
  uint64_t v109 = v25;
  uint64_t v26 = 0;
  if (v25(v22, 1, v23) != 1)
  {
    uint64_t v26 = (void *)sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v22, v23);
  }
  objc_msgSend(v110, sel_setTimeExpressiveSendPlayed_, v26);

  sub_2233C29AC(a1, (uint64_t)v20);
  if (v109(v20, 1, v23) == 1)
  {
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = (void *)sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v20, v23);
  }
  objc_msgSend(v110, sel_setTimePlayed_, v27);

  sub_2233C29B8(a1, (uint64_t)v17);
  if (v109(v17, 1, v23) == 1)
  {
    int v33 = 0;
  }
  else
  {
    int v33 = (void *)sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v17, v23);
  }
  objc_msgSend(v110, sel_setTimeRead_, v33);

  id v34 = a1;
  id v35 = objc_msgSend(v34, sel_baloonBundleId);
  if (v35)
  {
    sub_22342C300();

    id v35 = (id)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  objc_msgSend(v110, sel_setBalloonBundleID_, v35);

  id v36 = v34;
  id v37 = objc_msgSend(v36, sel_expressiveSendId);
  if (v37)
  {
    sub_22342C300();

    id v37 = (id)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  objc_msgSend(v110, sel_setExpressiveSendStyleID_, v37);

  id v38 = v36;
  id v39 = objc_msgSend(v38, sel_messageBodyData);
  if (v39)
  {
    uint64_t v40 = sub_22342C070();
    unint64_t v42 = v41;

    id v39 = (id)sub_22342C050();
    sub_22331EA68(v40, v42);
  }
  else
  {
  }
  objc_msgSend(v110, sel_setBodyData_, v39);

  id v43 = v38;
  id v44 = objc_msgSend(v43, sel_messageSubject);
  if (v44)
  {
    sub_22342C300();

    id v44 = (id)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  objc_msgSend(v110, sel_setSubject_, v44);

  id v45 = v43;
  id v46 = objc_msgSend(v45, sel_messageSummaryInfo);
  if (v46)
  {
    uint64_t v47 = sub_22342C070();
    unint64_t v49 = v48;

    id v46 = (id)sub_22342C050();
    sub_22331EA68(v47, v49);
  }
  id v50 = (id)JWDecodeDictionary();

  if (v50)
  {
    uint64_t v104 = v23;
    uint64_t v51 = a2;
    uint64_t v52 = a3;
    uint64_t v53 = a4;
    uint64_t v54 = sub_22342C270();

    uint64_t v55 = (void *)sub_223342104(v54);
    swift_bridgeObjectRelease();

    if (v55)
    {
      sub_2233FD770((uint64_t)v55);
      swift_bridgeObjectRelease();
      uint64_t v55 = (void *)sub_22342C260();
      swift_bridgeObjectRelease();
    }
    a4 = v53;
    a3 = v52;
    a2 = v51;
    uint64_t v23 = v104;
  }
  else
  {

    uint64_t v55 = 0;
  }
  objc_msgSend(v110, sel_setMessageSummaryInfo_, v55);

  id v56 = v45;
  id v57 = objc_msgSend(v56, sel_payloadData);
  if (v57)
  {
    uint64_t v58 = sub_22342C070();
    unint64_t v60 = v59;

    id v57 = (id)sub_22342C050();
    sub_22331EA68(v58, v60);
  }
  else
  {
  }
  objc_msgSend(v110, sel_setPayloadData_, v57);

  sub_2233C29C4(a1, (uint64_t)v14);
  if (v109(v14, 1, v23) == 1)
  {
    uint64_t v61 = 0;
  }
  else
  {
    uint64_t v61 = (void *)sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v14, v23);
  }
  a6 = v105;
  id v62 = v110;
  objc_msgSend(v110, sel_setTimeDelivered_, v61);

  objc_msgSend(v62, sel_setExpireState_, objc_msgSend(v56, sel_expireState));
  if (!a2) {
    goto LABEL_48;
  }
LABEL_41:
  id v63 = a2;
  id v64 = objc_msgSend(v63, sel_threadIdentifier);
  if (v64)
  {
    uint64_t v65 = v64;
    sub_22342C300();

    uint64_t v66 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v66 = 0;
  }
  objc_msgSend(v110, sel_setThreadIdentifier_, v66);

  if (a3)
  {
LABEL_45:
    unsigned int v67 = objc_msgSend(a3, sel_cmmState);
    id v68 = v110;
    objc_msgSend(v110, sel_setCMMState_, v67);
    objc_msgSend(v68, sel_setCMMAssetOffset_, objc_msgSend(a3, sel_cmmAssetOffset));
    if (!a4) {
      return;
    }
    goto LABEL_60;
  }
LABEL_54:
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v74 = sub_22342C200();
  sub_223323374(v74, (uint64_t)qword_26AD63330);
  swift_bridgeObjectRetain_n();
  uint64_t v75 = sub_22342C1E0();
  os_log_type_t v76 = sub_22342C6E0();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    uint64_t v112 = (unsigned int (*)(void, void, void))v78;
    *(_DWORD *)uint64_t v77 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v111 = sub_22339BC14(v106, a6, (uint64_t *)&v112);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_223317000, v75, v76, "No Proto3 for IMMessageItem %s", v77, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v78, -1, -1);
    MEMORY[0x223CB62D0](v77, -1, -1);

    if (!a4) {
      return;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a4) {
      return;
    }
  }
LABEL_60:
  id v79 = a4;
  if (objc_msgSend(v79, sel_hasActualService))
  {
    id v80 = objc_msgSend(v79, sel_actualService);
    objc_msgSend(v110, sel_setService_, v80);
  }
  if (objc_msgSend(v79, sel_hasScheduleType) && objc_msgSend(v79, sel_hasScheduleState))
  {
    id v81 = v79;
    if (objc_msgSend(v81, sel_hasScheduleType))
    {
      unsigned int v82 = objc_msgSend(v81, sel_scheduleType);

      uint64_t v83 = v82;
    }
    else
    {

      uint64_t v83 = 0;
    }
    objc_msgSend(v110, sel_setScheduleType_, v83);
    id v84 = v81;
    if (objc_msgSend(v84, sel_hasScheduleState))
    {
      unsigned int v85 = objc_msgSend(v84, sel_scheduleState);

      uint64_t v86 = v85;
    }
    else
    {

      uint64_t v86 = 0;
    }
    objc_msgSend(v110, sel_setScheduleState_, v86);
  }
  if (objc_msgSend(v79, sel_hasActualParentChatId))
  {
    id v87 = objc_msgSend(v79, sel_actualParentChatId);
    if (v87)
    {
      uint64_t v88 = v87;
      uint64_t v89 = (void *)sub_22342C300();
      unint64_t v91 = v90;
      if (qword_26AD60210 != -1) {
        swift_once();
      }
      uint64_t v92 = sub_22342C200();
      sub_223323374(v92, (uint64_t)qword_26AD63330);
      id v93 = v110;
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_22342C1E0();
      os_log_type_t v95 = sub_22342C6E0();
      if (os_log_type_enabled(v94, v95))
      {
        id v110 = v89;
        uint64_t v96 = swift_slowAlloc();
        uint64_t v109 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v112 = (unsigned int (*)(void, void, void))v109;
        *(_DWORD *)uint64_t v96 = 136315394;
        id v97 = objc_msgSend(v93, sel_parentChatID);
        if (v97)
        {
          uint64_t v98 = v97;
          uint64_t v99 = sub_22342C300();
          unint64_t v101 = v100;
        }
        else
        {
          unint64_t v101 = 0xE300000000000000;
          uint64_t v99 = 7104878;
        }
        uint64_t v111 = sub_22339BC14(v99, v101, (uint64_t *)&v112);
        sub_22342CA10();

        swift_bridgeObjectRelease();
        *(_WORD *)(v96 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v111 = sub_22339BC14((uint64_t)v110, v91, (uint64_t *)&v112);
        sub_22342CA10();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_223317000, v94, v95, "Overriding %s with %s", (uint8_t *)v96, 0x16u);
        uint64_t v102 = v109;
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v102, -1, -1);
        MEMORY[0x223CB62D0](v96, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      objc_msgSend(v93, sel_setParentChatID_, v88);
    }
  }
}

id sub_223371DB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageRecord();
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223371F04();
  sub_2233230DC(a1, (uint64_t)v5);
  uint64_t v6 = (void *)sub_2233705C4((uint64_t)v5);
  uint64_t v7 = a1 + *(int *)(v3 + 144);
  uint64_t v8 = *(void **)v7;
  if (*(void *)v7 == 1) {
    return v6;
  }
  uint64_t v9 = *(void **)(v7 + 8);
  uint64_t v10 = *(void **)(v7 + 16);
  uint64_t v11 = *(void **)(v7 + 24);
  id v12 = v11;
  id v13 = v8;
  id v14 = v9;
  id v15 = v10;
  id result = objc_msgSend(v6, sel_guid);
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v18 = sub_22342C300();
    unint64_t v20 = v19;

    sub_223370E00(v8, v9, v10, v11, v18, v20);
    swift_bridgeObjectRelease();
    sub_223321FF8(v8, v9, v10, v11);
    return v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_223371F04()
{
  unint64_t result = qword_26AD60380;
  if (!qword_26AD60380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD60380);
  }
  return result;
}

uint64_t sub_223371F44()
{
  return sub_22342D060();
}

uint64_t sub_223371F94()
{
  return sub_22342C390();
}

uint64_t sub_223371FA8()
{
  return sub_22342D060();
}

uint64_t sub_223371FF4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_223372048(void *a1@<X8>)
{
  *a1 = 0x737470637470;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_223372060()
{
  return 0x737470637470;
}

uint64_t sub_223372074@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2233720CC(uint64_t a1)
{
  unint64_t v2 = sub_2233732CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_223372108(uint64_t a1)
{
  unint64_t v2 = sub_2233732CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_223372144()
{
  sub_22342BE60();
  swift_allocObject();
  uint64_t result = sub_22342BE50();
  qword_26AD63250 = result;
  return result;
}

uint64_t sub_223372184()
{
  sub_22342BEA0();
  swift_allocObject();
  uint64_t v0 = sub_22342BE90();
  uint64_t result = sub_22342BE70();
  qword_267FAD6F8 = v0;
  return result;
}

uint64_t sub_2233721D0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_22331E640(&qword_267FA2B20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_2233732CC();
  sub_22342D090();
  int64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    os_log_type_t v30 = v9;
    uint64_t v31 = v7;
    uint64_t v32 = v6;
    uint64_t v41 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2233725D4(0, v10, 0);
    uint64_t v11 = v41;
    uint64_t v29 = a2;
    id v12 = (uint64_t *)(a2 + 72);
    while (1)
    {
      uint64_t v33 = v11;
      uint64_t v34 = v3;
      uint64_t v13 = *(v12 - 5);
      uint64_t v14 = *(v12 - 4);
      uint64_t v16 = *(v12 - 3);
      uint64_t v15 = *(v12 - 2);
      uint64_t v18 = *(v12 - 1);
      uint64_t v17 = *v12;
      uint64_t v19 = qword_267FA2078;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19 != -1) {
        swift_once();
      }
      uint64_t v35 = v13;
      uint64_t v36 = v14;
      uint64_t v37 = v16;
      uint64_t v38 = v15;
      uint64_t v39 = v18;
      uint64_t v40 = v17;
      sub_223373374();
      uint64_t v20 = v34;
      uint64_t v21 = sub_22342BE80();
      uint64_t v3 = v20;
      if (v20) {
        break;
      }
      uint64_t v23 = v21;
      uint64_t v24 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v33;
      uint64_t v41 = v33;
      unint64_t v26 = *(void *)(v33 + 16);
      unint64_t v25 = *(void *)(v33 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_2233725D4(v25 > 1, v26 + 1, 1);
        uint64_t v11 = v41;
      }
      v12 += 6;
      *(void *)(v11 + 16) = v26 + 1;
      uint64_t v27 = v11 + 16 * v26;
      *(void *)(v27 + 32) = v23;
      *(void *)(v27 + 40) = v24;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v31;
        uint64_t v6 = v32;
        uint64_t v9 = v30;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v30, v32);
  }
  else
  {
LABEL_11:
    uint64_t v35 = v11;
    sub_22331E640(&qword_26AD5F3B0);
    sub_2233733C8(&qword_267FA2B30, (void (*)(void))sub_223373438);
    sub_22342CEE0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
}

char *sub_223372500@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_223372F8C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_22337252C(void *a1)
{
  return sub_2233721D0(a1, *v1);
}

uint64_t sub_223372548(uint64_t *a1, uint64_t *a2)
{
  return sub_22339BAE0(*a1, *a2);
}

uint64_t sub_223372554(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_223372614(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_223372574(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_223372854(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_223372594(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2233729BC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2233725B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_223372B28(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2233725D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_223372CB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2233725F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_223372E1C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_223372614(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_22331E640(&qword_26AD60520);
  uint64_t v10 = *(void *)(type metadata accessor for DatabaseRecord() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for DatabaseRecord() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_223372854(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22331E640(&qword_26AD60528);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_2233729BC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22331E640((uint64_t *)&unk_26AD5EF90);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_223372B28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22331E640(&qword_26AD5F3F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_223372CB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22331E640(&qword_267FA2B40);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_223372E1C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_22331E640((uint64_t *)&unk_26AD60550);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

char *sub_223372F8C(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_26AD5F3E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_2233732CC();
  sub_22342D080();
  if (v1)
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_22331E640(&qword_26AD5F3B0);
    sub_2233733C8(&qword_26AD5F3B8, (void (*)(void))sub_223322B18);
    sub_22342CDF0();
    unint64_t v26 = v6;
    unint64_t v6 = (char *)MEMORY[0x263F8EE78];
    if (v27) {
      uint64_t v8 = v27;
    }
    else {
      uint64_t v8 = MEMORY[0x263F8EE78];
    }
    int64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v23 = v4;
      uint64_t v24 = v3;
      unint64_t v25 = a1;
      uint64_t v31 = (char *)MEMORY[0x263F8EE78];
      sub_2233725B4(0, v9, 0);
      unint64_t v6 = v31;
      uint64_t v22 = v8;
      uint64_t v10 = (unint64_t *)(v8 + 40);
      do
      {
        uint64_t v11 = *(v10 - 1);
        unint64_t v12 = *v10;
        sub_22331E684(v11, *v10);
        if (qword_26AD5F360 != -1) {
          swift_once();
        }
        sub_223373320();
        sub_22342BE40();
        sub_22331EA68(v11, v12);
        uint64_t v14 = v27;
        uint64_t v13 = v28;
        long long v15 = v29;
        long long v16 = v30;
        uint64_t v31 = v6;
        unint64_t v18 = *((void *)v6 + 2);
        unint64_t v17 = *((void *)v6 + 3);
        if (v18 >= v17 >> 1)
        {
          long long v20 = v30;
          long long v21 = v29;
          sub_2233725B4(v17 > 1, v18 + 1, 1);
          long long v16 = v20;
          long long v15 = v21;
          unint64_t v6 = v31;
        }
        v10 += 2;
        *((void *)v6 + 2) = v18 + 1;
        uint64_t v19 = &v6[48 * v18];
        *((void *)v19 + 4) = v14;
        *((void *)v19 + 5) = v13;
        *((_OWORD *)v19 + 3) = v15;
        *((_OWORD *)v19 + 4) = v16;
        --v9;
      }
      while (v9);
      uint64_t v3 = v24;
      a1 = v25;
      uint64_t v4 = v23;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v26, v3);
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  }
  return v6;
}

unint64_t sub_2233732CC()
{
  unint64_t result = qword_26AD5F348;
  if (!qword_26AD5F348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F348);
  }
  return result;
}

unint64_t sub_223373320()
{
  unint64_t result = qword_26AD5F298[0];
  if (!qword_26AD5F298[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD5F298);
  }
  return result;
}

unint64_t sub_223373374()
{
  unint64_t result = qword_267FA2B28;
  if (!qword_267FA2B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B28);
  }
  return result;
}

uint64_t sub_2233733C8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2233378D8(&qword_26AD5F3B0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_223373438()
{
  unint64_t result = qword_267FA2B38;
  if (!qword_267FA2B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChatParticipants.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x223373528);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatParticipants.CodingKeys()
{
  return &type metadata for ChatParticipants.CodingKeys;
}

ValueMetadata *type metadata accessor for ChatParticipants()
{
  return &type metadata for ChatParticipants;
}

unint64_t sub_223373574()
{
  unint64_t result = qword_267FA2B48;
  if (!qword_267FA2B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B48);
  }
  return result;
}

unint64_t sub_2233735CC()
{
  unint64_t result = qword_26AD5F358;
  if (!qword_26AD5F358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F358);
  }
  return result;
}

unint64_t sub_223373624()
{
  unint64_t result = qword_26AD5F350;
  if (!qword_26AD5F350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F350);
  }
  return result;
}

uint64_t sub_223373678()
{
  type metadata accessor for RecordStoreRegistry();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x263F8EE80];
  qword_26AD63208 = result;
  return result;
}

void sub_2233736B4()
{
  qword_26AD63178 = MEMORY[0x263F8EE78];
}

uint64_t sub_2233736C8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = qword_26AD63210;
  if (qword_26AD63210)
  {
    uint64_t v3 = qword_26AD63228;
    if (qword_26AD63228)
    {
      uint64_t v4 = qword_26AD5F108;
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain_n();
      if (v4 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_26AD5F100;
      id v6 = (id)qword_26AD63120;
      if (v5 != -1) {
        swift_once();
      }
      int64_t v7 = (void *)qword_26AD63240;
      uint64_t v8 = type metadata accessor for CloudState();
      swift_allocObject();
      int64_t v9 = sub_2234226B4(v6, v7, v2, v3);
      a1[3] = v8;
      a1[4] = &off_26D673950;
      swift_unknownObjectRelease();
      uint64_t result = swift_unknownObjectRelease();
      *a1 = v9;
    }
    else
    {
      uint64_t v16 = qword_26AD5F0D8;
      swift_unknownObjectRetain();
      if (v16 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_22342C200();
      sub_223323374(v17, (uint64_t)qword_26AD63108);
      unint64_t v18 = sub_22342C1E0();
      os_log_type_t v19 = sub_22342C700();
      if (os_log_type_enabled(v18, v19))
      {
        long long v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v20 = 0;
        _os_log_impl(&dword_223317000, v18, v19, "No syncStateManager found for cloudState", v20, 2u);
        MEMORY[0x223CB62D0](v20, -1, -1);
      }

      sub_22337952C();
      swift_allocError();
      unsigned char *v21 = 1;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22342C200();
    sub_223323374(v11, (uint64_t)qword_26AD63108);
    unint64_t v12 = sub_22342C1E0();
    os_log_type_t v13 = sub_22342C700();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_223317000, v12, v13, "No syncTokenStore found for cloudState", v14, 2u);
      MEMORY[0x223CB62D0](v14, -1, -1);
    }

    sub_22337952C();
    swift_allocError();
    *long long v15 = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2233739EC@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  type metadata accessor for OSActivity();
  swift_allocObject();
  uint64_t v4 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  a2[3] = (uint64_t)&type metadata for SyncZoneInfo;
  a2[4] = (uint64_t)&off_26D672240;
  uint64_t result = swift_allocObject();
  *a2 = result;
  *(void *)(result + 16) = 0x3174616843;
  *(void *)(result + 24) = 0xE500000000000000;
  *(unsigned char *)(result + 32) = 1;
  *(void *)(result + 40) = 0xD000000000000010;
  *(void *)(result + 48) = 0x8000000223436BC0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = &unk_26D66C3C8;
  *(unsigned char *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(unsigned char *)(result + 88) = 1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 96) = v4;
  return result;
}

uint64_t sub_223373ACC@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  type metadata accessor for OSActivity();
  swift_allocObject();
  uint64_t v4 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  a2[3] = (uint64_t)&type metadata for SyncZoneInfo;
  a2[4] = (uint64_t)&off_26D672240;
  uint64_t result = swift_allocObject();
  *a2 = result;
  *(void *)(result + 16) = 1952540739;
  *(void *)(result + 24) = 0xE400000000000000;
  *(unsigned char *)(result + 32) = 0;
  *(void *)(result + 40) = 0xD000000000000018;
  *(void *)(result + 48) = 0x80000002234369A0;
  *(void *)(result + 56) = &unk_26D66C3F8;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(unsigned char *)(result + 88) = 1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 96) = v4;
  return result;
}

uint64_t sub_223373BA8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for OSActivity();
  swift_allocObject();
  uint64_t v8 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  a4[3] = (uint64_t)&type metadata for SyncZoneInfo;
  a4[4] = (uint64_t)&off_26D672240;
  uint64_t result = swift_allocObject();
  *a4 = result;
  *(void *)(result + 16) = 0x656D686361747441;
  *(void *)(result + 24) = 0xEA0000000000746ELL;
  *(unsigned char *)(result + 32) = 3;
  *(void *)(result + 40) = 0xD000000000000019;
  *(void *)(result + 48) = 0x80000002234369C0;
  *(void *)(result + 56) = a2;
  *(void *)(result + 64) = a3;
  *(unsigned char *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(unsigned char *)(result + 88) = 1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 96) = v8;
  return result;
}

uint64_t sub_223373C9C@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  type metadata accessor for OSActivity();
  swift_allocObject();
  uint64_t v4 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  a2[3] = (uint64_t)&type metadata for SyncZoneInfo;
  a2[4] = (uint64_t)&off_26D672240;
  uint64_t result = swift_allocObject();
  *a2 = result;
  *(void *)(result + 16) = 0xD000000000000011;
  *(void *)(result + 24) = 0x8000000223436B80;
  *(unsigned char *)(result + 32) = 8;
  *(void *)(result + 40) = 0xD00000000000001CLL;
  *(void *)(result + 48) = 0x8000000223436BA0;
  *(void *)(result + 56) = &unk_26D66C558;
  *(void *)(result + 64) = &unk_26D66C5B8;
  *(unsigned char *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(unsigned char *)(result + 88) = 1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 96) = v4;
  return result;
}

uint64_t sub_223373D8C@<X0>(unsigned char *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      char v20 = 1;
      sub_2233F0E8C();
      uint64_t v7 = v6;
      int v8 = a2 & 1;
      int64_t v9 = &v20;
      uint64_t v10 = a3;
      int v11 = 2;
      int v12 = 3;
      goto LABEL_9;
    case 2:
      char v21 = 2;
      os_log_type_t v13 = (void *)sub_22342C2D0();
      int64_t v14 = IMBagIntValueWithDefault();

      sub_2233F0E98(v14, 12);
      uint64_t v7 = v15;
      int v8 = a2 & 1;
      int64_t v9 = &v21;
      uint64_t v10 = a3;
      int v11 = 4;
      int v12 = 5;
      goto LABEL_9;
    case 3:
      char v22 = 3;
      sub_2233F1044();
      uint64_t v7 = v16;
      int v8 = a2 & 1;
      int64_t v9 = &v22;
      uint64_t v10 = a3;
      int v11 = 6;
      int v12 = 7;
      goto LABEL_9;
    case 4:
      return sub_2233759E4(a2 & 1, a3);
    case 5:
      return sub_223375388(a3);
    case 6:
      char v23 = 6;
      uint64_t v17 = (void *)sub_22342C2D0();
      IMBagIntValueWithDefault();

      sub_2233F119C();
      uint64_t v7 = v18;
      int v8 = a2 & 1;
      int64_t v9 = &v23;
      uint64_t v10 = a3;
      int v11 = 12;
      int v12 = 13;
LABEL_9:
      sub_22337645C((unsigned __int8 *)v9, v11, v12, v7, v8, v10);
      uint64_t result = swift_unknownObjectRelease();
      break;
    case 7:
      uint64_t result = sub_223375D64(a2 & 1, a3);
      break;
    case 8:
      uint64_t result = sub_223376184(a2 & 1, a3);
      break;
    case 9:
      sub_22337952C();
      swift_allocError();
      unsigned char *v19 = 2;
      uint64_t result = swift_willThrow();
      break;
    default:
      uint64_t result = (uint64_t)sub_223373FF0(a3);
      break;
  }
  return result;
}

id sub_223373FF0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for OSActivity();
  swift_allocObject();
  uint64_t v1 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v106[3] = &type metadata for SyncZoneInfo;
  v106[4] = &off_26D672240;
  uint64_t v2 = swift_allocObject();
  v106[0] = v2;
  *(void *)(v2 + 16) = 1952540739;
  *(void *)(v2 + 24) = 0xE400000000000000;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0x6F5465676E616863;
  *(void *)(v2 + 48) = 0xEB000000006E656BLL;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = &unk_26D66C398;
  *(unsigned char *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(unsigned char *)(v2 + 88) = 1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 96) = v1;
  sub_2233739EC(0, v105);
  swift_allocObject();
  uint64_t v3 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v104[3] = &type metadata for SyncZoneInfo;
  v104[4] = &off_26D672240;
  uint64_t v4 = swift_allocObject();
  v104[0] = v4;
  *(void *)(v4 + 16) = 0x6567617373654DLL;
  *(void *)(v4 + 24) = 0xE700000000000000;
  *(unsigned char *)(v4 + 32) = 2;
  *(void *)(v4 + 40) = 0xD000000000000013;
  *(void *)(v4 + 48) = 0x80000002234369E0;
  *(void *)(v4 + 80) = 0;
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(unsigned char *)(v4 + 72) = 0;
  *(unsigned char *)(v4 + 88) = 1;
  *(void *)(v4 + 104) = 0;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 96) = v3;
  swift_allocObject();
  uint64_t v5 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v103[3] = &type metadata for SyncZoneInfo;
  v103[4] = &off_26D672240;
  uint64_t v6 = swift_allocObject();
  v103[0] = v6;
  strcpy((char *)(v6 + 16), "ChatBotMessage");
  *(unsigned char *)(v6 + 31) = -18;
  *(unsigned char *)(v6 + 32) = 7;
  *(void *)(v6 + 40) = 0xD000000000000019;
  *(void *)(v6 + 48) = 0x8000000223436A00;
  *(void *)(v6 + 80) = 0;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = 0;
  *(unsigned char *)(v6 + 72) = 0;
  *(unsigned char *)(v6 + 88) = 1;
  *(void *)(v6 + 104) = 0;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 96) = v5;
  sub_223373BA8(0, (uint64_t)&unk_26D66C4B8, (uint64_t)&unk_26D66C518, v102);
  sub_223373C9C(0, v101);
  swift_allocObject();
  uint64_t v7 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v100[3] = &type metadata for SyncZoneInfo;
  v100[4] = &off_26D672240;
  uint64_t v8 = swift_allocObject();
  v100[0] = v8;
  *(void *)(v8 + 16) = 0x73657461647055;
  *(void *)(v8 + 24) = 0xE700000000000000;
  *(unsigned char *)(v8 + 32) = 4;
  *(void *)(v8 + 40) = 0xD000000000000011;
  *(void *)(v8 + 48) = 0x8000000223436A20;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  *(unsigned char *)(v8 + 72) = 1;
  *(void *)(v8 + 80) = 0;
  *(unsigned char *)(v8 + 88) = 1;
  *(void *)(v8 + 104) = 0;
  *(void *)(v8 + 112) = 0;
  *(void *)(v8 + 96) = v7;
  swift_allocObject();
  uint64_t v9 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v99[3] = &type metadata for SyncZoneInfo;
  v99[4] = &off_26D672240;
  uint64_t v10 = swift_allocObject();
  v99[0] = v10;
  *(void *)(v10 + 16) = 0xD000000000000012;
  *(void *)(v10 + 24) = 0x8000000223436A40;
  *(unsigned char *)(v10 + 32) = 5;
  *(void *)(v10 + 40) = 0xD00000000000001DLL;
  *(void *)(v10 + 48) = 0x8000000223436A60;
  *(void *)(v10 + 80) = 0;
  *(void *)(v10 + 56) = 0;
  *(void *)(v10 + 64) = 0;
  *(unsigned char *)(v10 + 72) = 0;
  *(unsigned char *)(v10 + 88) = 1;
  *(void *)(v10 + 104) = 0;
  *(void *)(v10 + 112) = 0;
  *(void *)(v10 + 96) = v9;
  swift_allocObject();
  uint64_t v11 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v98[3] = &type metadata for SyncZoneInfo;
  v98[4] = &off_26D672240;
  uint64_t v12 = swift_allocObject();
  v98[0] = v12;
  *(void *)(v12 + 16) = 0xD000000000000019;
  *(void *)(v12 + 24) = 0x8000000223436A80;
  *(unsigned char *)(v12 + 32) = 9;
  *(void *)(v12 + 40) = 0xD000000000000024;
  *(void *)(v12 + 48) = 0x8000000223436AA0;
  *(void *)(v12 + 80) = 0;
  *(void *)(v12 + 56) = 0;
  *(void *)(v12 + 64) = 0;
  *(unsigned char *)(v12 + 72) = 0;
  *(unsigned char *)(v12 + 88) = 1;
  *(void *)(v12 + 104) = 0;
  *(void *)(v12 + 112) = 0;
  *(void *)(v12 + 96) = v11;
  swift_allocObject();
  uint64_t v13 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v97[3] = &type metadata for SyncZoneInfo;
  v97[4] = &off_26D672240;
  uint64_t v14 = swift_allocObject();
  v97[0] = v14;
  *(void *)(v14 + 16) = 0xD000000000000010;
  *(void *)(v14 + 24) = 0x8000000223436AD0;
  *(unsigned char *)(v14 + 32) = 6;
  *(void *)(v14 + 40) = 0xD00000000000001BLL;
  *(void *)(v14 + 48) = 0x8000000223436AF0;
  *(void *)(v14 + 80) = 0;
  *(void *)(v14 + 56) = 0;
  *(void *)(v14 + 64) = 0;
  *(unsigned char *)(v14 + 72) = 0;
  *(unsigned char *)(v14 + 88) = 1;
  *(void *)(v14 + 104) = 0;
  *(void *)(v14 + 112) = 0;
  *(void *)(v14 + 96) = v13;
  if (qword_26AD5F000 != -1) {
    swift_once();
  }
  id v15 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 0);
  if (!v15) {
    goto LABEL_13;
  }
  id v16 = v15;
  id v17 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 1);
  if (!v17)
  {
LABEL_12:
    swift_unknownObjectRelease();
LABEL_13:
    sub_22337952C();
    swift_allocError();
    unsigned char *v26 = 3;
    swift_willThrow();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v97);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v98);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v99);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v100);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v101);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v102);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v103);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v104);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v105);
    return (id)_s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v106);
  }
  id v18 = v17;
  id v19 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 2);
  if (!v19)
  {
LABEL_11:
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  id v20 = v19;
  uint64_t v21 = qword_26AD63228;
  if (!qword_26AD63228 || (uint64_t v22 = qword_26AD63200) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_2233F0D30();
  uint64_t v90 = v23;
  sub_22331E640((uint64_t *)&unk_26AD5EF80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_223430B80;
  uint64_t v25 = qword_26AD63218;
  if (!qword_26AD63218)
  {
    type metadata accessor for NoOpPreReqVerifier();
    uint64_t v25 = swift_allocObject();
  }
  uint64_t v28 = qword_26AD63220;
  *(void *)(v24 + 56) = &type metadata for SyncPreReqsVerifierStep;
  *(void *)(v24 + 64) = &off_26D673768;
  uint64_t v29 = swift_allocObject();
  *(void *)(v24 + 32) = v29;
  *(unsigned char *)(v29 + 16) = 0;
  *(void *)(v29 + 24) = 0;
  *(void *)(v29 + 32) = 0;
  *(void *)(v29 + 40) = v25;
  *(void *)(v29 + 48) = v28;
  *(void *)(v24 + 96) = &type metadata for PrepareDatabaseStep;
  *(void *)(v24 + 104) = &off_26D66E9A8;
  *(unsigned char *)(v24 + 72) = 0;
  *(void *)(v24 + 80) = 0;
  *(void *)(v24 + 88) = 0;
  sub_22331E640((uint64_t *)&unk_26AD5F170);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_22342F920;
  *(void *)(v30 + 32) = v16;
  *(void *)(v30 + 40) = v18;
  *(void *)(v30 + 48) = v20;
  *(void *)&long long v107 = v30;
  sub_22342C4D0();
  uint64_t v31 = v107;
  *(void *)(v24 + 136) = &type metadata for LocalStateManagementStep;
  *(void *)(v24 + 144) = &off_26D66DE28;
  uint64_t v32 = swift_allocObject();
  *(void *)(v24 + 112) = v32;
  *(void *)(v32 + 16) = 1;
  *(unsigned char *)(v32 + 24) = 0;
  *(void *)(v32 + 32) = 0;
  *(void *)(v32 + 40) = 0;
  *(void *)(v32 + 48) = v31;
  *(void *)(v32 + 56) = v21;
  sub_22331E640(&qword_26AD5EF78);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_223430B90;
  sub_223322120((uint64_t)v106, v33 + 32);
  sub_223322120((uint64_t)v105, v33 + 72);
  sub_223322120((uint64_t)v104, v33 + 112);
  sub_223322120((uint64_t)v102, v33 + 152);
  sub_223322120((uint64_t)v100, v33 + 192);
  sub_223322120((uint64_t)v99, v33 + 232);
  sub_223322120((uint64_t)v97, v33 + 272);
  sub_223322120((uint64_t)v103, v33 + 312);
  sub_223322120((uint64_t)v101, v33 + 352);
  sub_223322120((uint64_t)v98, v33 + 392);
  *(void *)(v24 + 176) = &type metadata for RecordZonesPrepStep;
  *(void *)(v24 + 184) = &off_26D6708F8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v24 + 152) = v34;
  *(void *)(v34 + 16) = 0x6D6F44616964654DLL;
  *(void *)(v34 + 24) = 0xEB000000006E6961;
  *(unsigned char *)(v34 + 32) = 0;
  *(void *)(v34 + 40) = 0;
  *(void *)(v34 + 48) = 0;
  *(void *)(v34 + 56) = v33;
  *(void *)(v34 + 64) = v22;
  *(void *)(v24 + 216) = &type metadata for PrepareStatisticsStep;
  *(void *)(v24 + 224) = &off_26D66E2C0;
  *(unsigned char *)(v24 + 192) = 0;
  *(void *)(v24 + 200) = 0;
  *(void *)(v24 + 208) = 0;
  uint64_t v92 = v24;
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_22342F1F0;
  sub_223322120((uint64_t)v106, (uint64_t)&v107);
  type metadata accessor for CloudState();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v91 = v22;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  BOOL v36 = sub_223422524();
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  type metadata accessor for DuplicateCountReadHandler();
  uint64_t v38 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v38 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v35 + 56) = &type metadata for RecordZoneReader;
  *(void *)(v35 + 64) = &off_26D6704C0;
  uint64_t v39 = swift_allocObject();
  *(void *)(v35 + 32) = v39;
  *(void *)(v39 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v39 + 96) = &off_26D6705C8;
  uint64_t v40 = swift_allocObject();
  *(void *)(v39 + 64) = v40;
  *(CFAbsoluteTime *)(v40 + 16) = Current;
  *(void *)(v40 + 24) = 0;
  *(unsigned char *)(v40 + 32) = !v36;
  *(void *)(v40 + 40) = v38;
  *(unsigned char *)(v39 + 16) = 1;
  sub_223332E10(&v107, v39 + 24);
  *(void *)(v39 + 104) = 0;
  *(unsigned char *)(v39 + 112) = 1;
  *(_WORD *)(v39 + 113) = 256;
  *(unsigned char *)(v39 + 115) = 1;
  *(void *)(v39 + 120) = 0;
  *(void *)(v39 + 128) = 0;
  sub_223322120((uint64_t)v105, (uint64_t)&v107);
  CFAbsoluteTime v41 = CFAbsoluteTimeGetCurrent();
  uint64_t v42 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v42 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v35 + 96) = &type metadata for RecordZoneReader;
  *(void *)(v35 + 104) = &off_26D6704C0;
  uint64_t v43 = swift_allocObject();
  *(void *)(v35 + 72) = v43;
  *(void *)(v43 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v43 + 96) = &off_26D6705C8;
  uint64_t v44 = swift_allocObject();
  *(void *)(v43 + 64) = v44;
  *(CFAbsoluteTime *)(v44 + 16) = v41;
  *(void *)(v44 + 24) = 0;
  *(unsigned char *)(v44 + 32) = 0;
  *(void *)(v44 + 40) = v42;
  *(unsigned char *)(v43 + 16) = 1;
  sub_223332E10(&v107, v43 + 24);
  *(void *)(v43 + 104) = 0;
  *(unsigned char *)(v43 + 112) = 1;
  *(_WORD *)(v43 + 113) = 256;
  *(unsigned char *)(v43 + 115) = 1;
  *(void *)(v43 + 120) = 0;
  *(void *)(v43 + 128) = 0;
  if (qword_26AD5EEA0 != -1) {
    swift_once();
  }
  uint64_t v45 = qword_26AD63190;
  *(void *)(v35 + 136) = &type metadata for ImportStep;
  *(void *)(v35 + 144) = &off_26D66DEF0;
  uint64_t v46 = swift_allocObject();
  *(void *)(v35 + 112) = v46;
  *(unsigned char *)(v46 + 16) = 0;
  *(void *)(v46 + 24) = 0;
  *(void *)(v46 + 32) = 0;
  *(void *)(v46 + 40) = &unk_26D66C5F8;
  *(void *)(v46 + 48) = v45;
  *(void *)(v92 + 256) = &type metadata for MultiStepSyncStep;
  *(void *)(v92 + 264) = &off_26D66FD10;
  uint64_t v47 = swift_allocObject();
  *(void *)(v92 + 232) = v47;
  *(unsigned char *)(v47 + 16) = 0;
  *(void *)(v47 + 32) = 0;
  *(void *)(v47 + 40) = 0;
  *(void *)(v47 + 24) = v35;
  *(_WORD *)(v47 + 48) = 1;
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_223430BA0;
  sub_223322120((uint64_t)v104, (uint64_t)&v107);
  swift_retain();
  CFAbsoluteTime v49 = CFAbsoluteTimeGetCurrent();
  uint64_t v50 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v50 + 112) = MEMORY[0x263F8EE80];
  os_log_type_t v95 = &type metadata for SyncStoreReadHandler;
  uint64_t v96 = &off_26D6705C8;
  uint64_t v51 = swift_allocObject();
  *(void *)&long long v94 = v51;
  *(CFAbsoluteTime *)(v51 + 16) = v49;
  *(void *)(v51 + 24) = 0;
  *(unsigned char *)(v51 + 32) = 0;
  *(void *)(v51 + 40) = v50;
  uint64_t v52 = (void *)sub_22342C2D0();
  uint64_t v53 = IMBagIntValueWithDefault();

  *(void *)(v48 + 56) = &type metadata for RecordZoneReader;
  *(void *)(v48 + 64) = &off_26D6704C0;
  uint64_t v54 = swift_allocObject();
  *(void *)(v48 + 32) = v54;
  *(unsigned char *)(v54 + 16) = 0;
  sub_223332E10(&v107, v54 + 24);
  sub_223332E10(&v94, v54 + 64);
  *(void *)(v54 + 104) = v53;
  *(unsigned char *)(v54 + 112) = 0;
  *(_WORD *)(v54 + 113) = 257;
  *(unsigned char *)(v54 + 115) = 1;
  *(void *)(v54 + 120) = 0;
  *(void *)(v54 + 128) = 0;
  uint64_t v108 = &type metadata for RecordZoneReader;
  uint64_t v109 = &off_26D6704C0;
  uint64_t v55 = swift_allocObject();
  *(void *)&long long v107 = v55;
  sub_223322120((uint64_t)v103, v55 + 24);
  CFAbsoluteTime v56 = CFAbsoluteTimeGetCurrent();
  uint64_t v57 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v57 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v55 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v55 + 96) = &off_26D6705C8;
  uint64_t v58 = swift_allocObject();
  *(void *)(v55 + 64) = v58;
  *(CFAbsoluteTime *)(v58 + 16) = v56;
  *(void *)(v58 + 24) = 0;
  *(unsigned char *)(v58 + 32) = 0;
  *(void *)(v58 + 40) = v57;
  unint64_t v59 = (void *)sub_22342C2D0();
  uint64_t v60 = IMBagIntValueWithDefault();

  *(unsigned char *)(v55 + 16) = 0;
  *(void *)(v55 + 104) = v60;
  *(unsigned char *)(v55 + 112) = 0;
  *(_WORD *)(v55 + 113) = 257;
  *(unsigned char *)(v55 + 115) = 1;
  *(void *)(v55 + 120) = 0;
  *(void *)(v55 + 128) = 0;
  uint64_t v61 = self;
  id result = objc_msgSend(v61, sel_sharedInstance);
  if (!result)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
  id v62 = result;
  id v63 = objc_msgSend(result, sel_deviceType);

  if (v63 == (id)2)
  {
    sub_223322120((uint64_t)&v107, v48 + 72);
  }
  else
  {
    *(void *)(v48 + 96) = &type metadata for NoOpSyncStep;
    *(void *)(v48 + 104) = &off_26D66FCD0;
    *(unsigned char *)(v48 + 72) = 0;
    *(void *)(v48 + 80) = 0;
    *(void *)(v48 + 88) = 0;
  }
  uint64_t v64 = MEMORY[0x263F8EE80];
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v107);
  sub_223322120((uint64_t)v102, (uint64_t)&v107);
  CFAbsoluteTime v65 = CFAbsoluteTimeGetCurrent();
  uint64_t v66 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v66 + 112) = v64;
  os_log_type_t v95 = &type metadata for SyncStoreReadHandler;
  uint64_t v96 = &off_26D6705C8;
  uint64_t v67 = swift_allocObject();
  *(void *)&long long v94 = v67;
  *(CFAbsoluteTime *)(v67 + 16) = v65;
  *(void *)(v67 + 24) = 0;
  *(unsigned char *)(v67 + 32) = 0;
  *(void *)(v67 + 40) = v66;
  id v68 = (void *)sub_22342C2D0();
  uint64_t v69 = IMBagIntValueWithDefault();

  *(void *)(v48 + 136) = &type metadata for RecordZoneReader;
  *(void *)(v48 + 144) = &off_26D6704C0;
  uint64_t v70 = swift_allocObject();
  *(void *)(v48 + 112) = v70;
  *(unsigned char *)(v70 + 16) = 0;
  sub_223332E10(&v107, v70 + 24);
  sub_223332E10(&v94, v70 + 64);
  *(void *)(v70 + 104) = v69;
  *(unsigned char *)(v70 + 112) = 0;
  *(_WORD *)(v70 + 113) = 257;
  *(unsigned char *)(v70 + 115) = 1;
  *(void *)(v70 + 120) = 0;
  *(void *)(v70 + 128) = 0;
  uint64_t v108 = &type metadata for RecordZoneReader;
  uint64_t v109 = &off_26D6704C0;
  uint64_t v71 = swift_allocObject();
  *(void *)&long long v107 = v71;
  sub_223322120((uint64_t)v101, v71 + 24);
  CFAbsoluteTime v72 = CFAbsoluteTimeGetCurrent();
  uint64_t v73 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v73 + 112) = v64;
  *(void *)(v71 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v71 + 96) = &off_26D6705C8;
  uint64_t v74 = swift_allocObject();
  *(void *)(v71 + 64) = v74;
  *(CFAbsoluteTime *)(v74 + 16) = v72;
  *(void *)(v74 + 24) = 0;
  *(unsigned char *)(v74 + 32) = 0;
  *(void *)(v74 + 40) = v73;
  uint64_t v75 = (void *)sub_22342C2D0();
  uint64_t v76 = IMBagIntValueWithDefault();

  *(unsigned char *)(v71 + 16) = 0;
  *(void *)(v71 + 104) = v76;
  *(unsigned char *)(v71 + 112) = 0;
  *(_WORD *)(v71 + 113) = 257;
  *(unsigned char *)(v71 + 115) = 1;
  *(void *)(v71 + 120) = 0;
  *(void *)(v71 + 128) = 0;
  id result = objc_msgSend(v61, sel_sharedInstance);
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v77 = result;
  id v78 = objc_msgSend(result, sel_deviceType);

  if (v78 == (id)2)
  {
    sub_223322120((uint64_t)&v107, v48 + 152);
  }
  else
  {
    *(void *)(v48 + 176) = &type metadata for NoOpSyncStep;
    *(void *)(v48 + 184) = &off_26D66FCD0;
    *(unsigned char *)(v48 + 152) = 0;
    *(void *)(v48 + 160) = 0;
    *(void *)(v48 + 168) = 0;
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v107);
  uint64_t v79 = qword_26AD63190;
  *(void *)(v48 + 216) = &type metadata for ImportStep;
  *(void *)(v48 + 224) = &off_26D66DEF0;
  uint64_t v80 = swift_allocObject();
  *(void *)(v48 + 192) = v80;
  *(unsigned char *)(v80 + 16) = 0;
  *(void *)(v80 + 24) = 0;
  *(void *)(v80 + 32) = 0;
  *(void *)(v80 + 40) = &unk_26D66C620;
  *(void *)(v80 + 48) = v79;
  *(void *)(v92 + 296) = &type metadata for MultiStepSyncStep;
  *(void *)(v92 + 304) = &off_26D66FD10;
  uint64_t v81 = swift_allocObject();
  *(void *)(v92 + 272) = v81;
  *(unsigned char *)(v81 + 16) = 0;
  *(void *)(v81 + 32) = 0;
  *(void *)(v81 + 40) = 0;
  *(void *)(v81 + 24) = v48;
  *(_WORD *)(v81 + 48) = 1;
  *(void *)(v92 + 336) = &type metadata for ReportDiagnosticTelemetryStep;
  *(void *)(v92 + 344) = &off_26D66E5A8;
  *(unsigned char *)(v92 + 312) = 0;
  *(void *)(v92 + 320) = 0;
  *(void *)(v92 + 328) = 0;
  uint64_t v82 = qword_26AD63220;
  if (qword_26AD63220)
  {
    swift_retain();
    id v83 = (id)v82;
  }
  else
  {
    id v84 = objc_allocWithZone((Class)NoOpBackupController);
    swift_retain();
    id v83 = objc_msgSend(v84, sel_init);
  }
  *(void *)(v92 + 376) = &type metadata for SyncCompleteStep;
  *(void *)(v92 + 384) = &off_26D6713D0;
  uint64_t v85 = swift_allocObject();
  *(void *)(v92 + 352) = v85;
  *(unsigned char *)(v85 + 16) = 0;
  *(void *)(v85 + 24) = 0;
  *(void *)(v85 + 32) = 0;
  *(void *)(v85 + 40) = v83;
  os_log_type_t v95 = &type metadata for CloudKitSyncRetryStrategy;
  uint64_t v96 = &off_26D66F430;
  uint64_t v86 = type metadata accessor for SyncJob();
  uint64_t v87 = swift_allocObject();
  uint64_t v88 = sub_2233310D8((uint64_t)&v94, (uint64_t)&type metadata for CloudKitSyncRetryStrategy);
  MEMORY[0x270FA5388](v88);
  (*(void (**)(void))(v89 + 16))();
  uint64_t v108 = &type metadata for CloudKitSyncRetryStrategy;
  uint64_t v109 = &off_26D66F430;
  *(unsigned char *)(v87 + 17) = 0;
  *(void *)(v87 + 24) = v91;
  sub_223332E10(&v107, v87 + 32);
  *(unsigned char *)(v87 + 72) = 1;
  *(void *)(v87 + 80) = v90;
  *(void *)(v87 + 88) = v92;
  *(_DWORD *)(v87 + 96) = 0x1000000;
  *(unsigned char *)(v87 + 16) = 0;
  *(unsigned char *)(v87 + 100) = 1;
  *(void *)(v87 + 104) = 0;
  *(void *)(v87 + 112) = 0;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v94);
  a1[3] = v86;
  a1[4] = (uint64_t)&off_26D66F718;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *a1 = v87;
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v97);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v98);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v99);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v100);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v101);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v102);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v103);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v104);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v105);
  return (id)_s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v106);
}

uint64_t sub_223375388@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for OSActivity();
  swift_allocObject();
  uint64_t v1 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v30[3] = &type metadata for SyncZoneInfo;
  v30[4] = &off_26D672240;
  uint64_t v2 = swift_allocObject();
  v30[0] = v2;
  *(void *)(v2 + 16) = 1952540739;
  *(void *)(v2 + 24) = 0xE400000000000000;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0x6F5465676E616863;
  *(void *)(v2 + 48) = 0xEB000000006E656BLL;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = &unk_26D66C398;
  *(unsigned char *)(v2 + 72) = 1;
  *(void *)(v2 + 80) = 0;
  *(unsigned char *)(v2 + 88) = 1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 96) = v1;
  swift_allocObject();
  uint64_t v3 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v29[3] = &type metadata for SyncZoneInfo;
  v29[4] = &off_26D672240;
  uint64_t v4 = swift_allocObject();
  v29[0] = v4;
  *(void *)(v4 + 16) = 0x6567617373654DLL;
  *(void *)(v4 + 24) = 0xE700000000000000;
  *(unsigned char *)(v4 + 32) = 2;
  *(void *)(v4 + 40) = 0xD000000000000013;
  *(void *)(v4 + 48) = 0x80000002234369E0;
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(unsigned char *)(v4 + 72) = 1;
  *(void *)(v4 + 80) = 0;
  *(unsigned char *)(v4 + 88) = 1;
  *(void *)(v4 + 104) = 0;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 96) = v3;
  sub_223373BA8(1, (uint64_t)&unk_26D66C478, 0, v28);
  swift_allocObject();
  uint64_t v5 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v27[3] = &type metadata for SyncZoneInfo;
  v27[4] = &off_26D672240;
  uint64_t v6 = swift_allocObject();
  v27[0] = v6;
  *(void *)(v6 + 16) = 0x73657461647055;
  *(void *)(v6 + 24) = 0xE700000000000000;
  *(unsigned char *)(v6 + 32) = 4;
  *(void *)(v6 + 40) = 0xD000000000000011;
  *(void *)(v6 + 48) = 0x8000000223436A20;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = 0;
  *(unsigned char *)(v6 + 72) = 1;
  *(void *)(v6 + 80) = 0;
  *(unsigned char *)(v6 + 88) = 1;
  *(void *)(v6 + 104) = 0;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 96) = v5;
  swift_allocObject();
  uint64_t v7 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v26[3] = &type metadata for SyncZoneInfo;
  v26[4] = &off_26D672240;
  uint64_t v8 = swift_allocObject();
  v26[0] = v8;
  *(void *)(v8 + 16) = 0xD000000000000012;
  *(void *)(v8 + 24) = 0x8000000223436A40;
  *(unsigned char *)(v8 + 32) = 5;
  *(void *)(v8 + 40) = 0xD00000000000001DLL;
  *(void *)(v8 + 48) = 0x8000000223436A60;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  *(unsigned char *)(v8 + 72) = 1;
  *(void *)(v8 + 80) = 0;
  *(unsigned char *)(v8 + 88) = 1;
  *(void *)(v8 + 104) = 0;
  *(void *)(v8 + 112) = 0;
  *(void *)(v8 + 96) = v7;
  swift_allocObject();
  uint64_t v9 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v25[3] = &type metadata for SyncZoneInfo;
  v25[4] = &off_26D672240;
  uint64_t v10 = swift_allocObject();
  v25[0] = v10;
  *(void *)(v10 + 16) = 0xD000000000000010;
  *(void *)(v10 + 24) = 0x8000000223436AD0;
  *(unsigned char *)(v10 + 32) = 6;
  *(void *)(v10 + 40) = 0xD00000000000001BLL;
  *(void *)(v10 + 48) = 0x8000000223436AF0;
  *(void *)(v10 + 56) = 0;
  *(void *)(v10 + 64) = 0;
  *(unsigned char *)(v10 + 72) = 1;
  *(void *)(v10 + 80) = 0;
  *(unsigned char *)(v10 + 88) = 1;
  *(void *)(v10 + 104) = 0;
  *(void *)(v10 + 112) = 0;
  *(void *)(v10 + 96) = v9;
  uint64_t v11 = qword_26AD63200;
  if (qword_26AD63200)
  {
    swift_unknownObjectRetain_n();
    sub_2233F0D30();
    uint64_t v22 = v12;
    sub_22331E640((uint64_t *)&unk_26AD5EF80);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_22342F870;
    sub_22331E640(&qword_26AD5EF78);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_223430BB0;
    sub_223322120((uint64_t)v30, v14 + 32);
    sub_223322120((uint64_t)v29, v14 + 72);
    sub_223322120((uint64_t)v28, v14 + 112);
    sub_223322120((uint64_t)v27, v14 + 152);
    sub_223322120((uint64_t)v26, v14 + 192);
    sub_223322120((uint64_t)v25, v14 + 232);
    *(void *)(v13 + 56) = &type metadata for RecordZonesPrepStep;
    *(void *)(v13 + 64) = &off_26D6708F8;
    uint64_t v15 = swift_allocObject();
    *(void *)(v13 + 32) = v15;
    *(void *)(v15 + 16) = 0x6D6F44616964654DLL;
    *(void *)(v15 + 24) = 0xEB000000006E6961;
    *(unsigned char *)(v15 + 32) = 0;
    *(void *)(v15 + 40) = 0;
    *(void *)(v15 + 48) = 0;
    *(void *)(v15 + 56) = v14;
    *(void *)(v15 + 64) = v11;
    uint64_t v24[3] = &type metadata for CloudKitSyncRetryStrategy;
    v24[4] = &off_26D66F430;
    uint64_t v16 = type metadata accessor for SyncJob();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = sub_2233310D8((uint64_t)v24, (uint64_t)&type metadata for CloudKitSyncRetryStrategy);
    MEMORY[0x270FA5388](v18);
    (*(void (**)(void))(v19 + 16))();
    uint64_t v32 = &type metadata for CloudKitSyncRetryStrategy;
    uint64_t v33 = &off_26D66F430;
    *(unsigned char *)(v17 + 17) = 5;
    *(void *)(v17 + 24) = v11;
    sub_223332E10(&v31, v17 + 32);
    *(unsigned char *)(v17 + 72) = 1;
    *(void *)(v17 + 80) = v22;
    *(void *)(v17 + 88) = v13;
    *(_DWORD *)(v17 + 96) = 151519232;
    *(unsigned char *)(v17 + 16) = 0;
    *(unsigned char *)(v17 + 100) = 1;
    *(void *)(v17 + 104) = 0;
    *(void *)(v17 + 112) = 0;
    swift_unknownObjectRetain();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v24);
    a1[3] = v16;
    a1[4] = (uint64_t)&off_26D66F718;
    swift_unknownObjectRelease();
    *a1 = v17;
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v25);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v26);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v27);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v28);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v29);
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v30);
  }
  else
  {
    sub_22337952C();
    swift_allocError();
    unsigned char *v21 = 4;
    swift_willThrow();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v25);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v26);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v27);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v28);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v29);
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v30);
  }
}

uint64_t sub_2233759E4@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_223373BA8(0, (uint64_t)&unk_26D66C4B8, (uint64_t)&unk_26D66C518, v25);
  if (qword_26AD5F000 != -1) {
    swift_once();
  }
  id v5 = objc_msgSend((id)qword_26AD63208, sel_assetStore);
  if (v5)
  {
    id v6 = v5;
    if (qword_26AD63200) {
      id v20 = (id)qword_26AD63200;
    }
    else {
      id v20 = objc_msgSend(objc_allocWithZone((Class)NoOpErrorAnalyzer), sel_init);
    }
    swift_unknownObjectRetain();
    sub_2233F0E8C();
    uint64_t v10 = v9;
    sub_22331E640((uint64_t *)&unk_26AD5EF80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_22342F1E0;
    uint64_t v29 = v2;
    uint64_t v21 = v10;
    if (qword_26AD63218)
    {
      uint64_t v12 = qword_26AD63218;
    }
    else
    {
      type metadata accessor for NoOpPreReqVerifier();
      uint64_t v12 = swift_allocObject();
    }
    uint64_t v13 = qword_26AD63220;
    *(void *)(v11 + 56) = &type metadata for SyncPreReqsVerifierStep;
    *(void *)(v11 + 64) = &off_26D673768;
    uint64_t v14 = swift_allocObject();
    *(void *)(v11 + 32) = v14;
    *(unsigned char *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = v12;
    *(void *)(v14 + 48) = v13;
    *(void *)(v11 + 96) = &type metadata for AttachmentAssetDownloadStep;
    *(void *)(v11 + 104) = &off_26D673830;
    uint64_t v15 = swift_allocObject();
    *(void *)(v11 + 72) = v15;
    sub_223322120((uint64_t)v25, v15 + 40);
    *(unsigned char *)(v15 + 16) = 1;
    *(void *)(v15 + 80) = v6;
    *(void *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = 0;
    uint64_t v23 = &type metadata for CloudKitSyncRetryStrategy;
    uint64_t v24 = &off_26D66F430;
    uint64_t v16 = type metadata accessor for SyncJob();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = sub_2233310D8((uint64_t)v22, (uint64_t)&type metadata for CloudKitSyncRetryStrategy);
    MEMORY[0x270FA5388](v18);
    (*(void (**)(void))(v19 + 16))();
    uint64_t v27 = &type metadata for CloudKitSyncRetryStrategy;
    uint64_t v28 = &off_26D66F430;
    *(unsigned char *)(v17 + 17) = 4;
    *(void *)(v17 + 24) = v20;
    sub_223332E10(&v26, v17 + 32);
    *(unsigned char *)(v17 + 72) = a1 & 1;
    *(void *)(v17 + 80) = v21;
    *(void *)(v17 + 88) = v11;
    *(_DWORD *)(v17 + 96) = 185204736;
    *(unsigned char *)(v17 + 16) = 0;
    *(unsigned char *)(v17 + 100) = 0;
    *(void *)(v17 + 104) = 0;
    *(void *)(v17 + 112) = 0;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v22);
    a2[3] = v16;
    a2[4] = (uint64_t)&off_26D66F718;
    swift_unknownObjectRelease();
    *a2 = v17;
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v25);
  }
  else
  {
    sub_22337952C();
    swift_allocError();
    *uint64_t v7 = 3;
    swift_willThrow();
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v25);
  }
}

uint64_t sub_223375D64@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_223373ACC(0, v26);
  uint64_t v5 = qword_26AD63200;
  if (qword_26AD63200)
  {
    swift_unknownObjectRetain();
    sub_2233F12F0();
    uint64_t v22 = v6;
    sub_22331E640((uint64_t *)&unk_26AD5EF80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_223430BA0;
    uint64_t v30 = v2;
    if (qword_26AD63218)
    {
      uint64_t v8 = qword_26AD63218;
    }
    else
    {
      type metadata accessor for NoOpPreReqVerifier();
      uint64_t v8 = swift_allocObject();
    }
    uint64_t v11 = qword_26AD63220;
    *(void *)(v7 + 56) = &type metadata for SyncPreReqsVerifierStep;
    *(void *)(v7 + 64) = &off_26D673768;
    uint64_t v12 = swift_allocObject();
    *(void *)(v7 + 32) = v12;
    *(unsigned char *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = v8;
    *(void *)(v12 + 48) = v11;
    sub_22331E640(&qword_26AD5EF78);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_22342F870;
    sub_223322120((uint64_t)v26, v13 + 32);
    *(void *)(v7 + 96) = &type metadata for RecordZonesPrepStep;
    *(void *)(v7 + 104) = &off_26D6708F8;
    uint64_t v14 = swift_allocObject();
    *(void *)(v7 + 72) = v14;
    *(void *)(v14 + 16) = 0x6D6F44616964654DLL;
    *(void *)(v14 + 24) = 0xEB000000006E6961;
    *(unsigned char *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = 0;
    *(void *)(v14 + 48) = 0;
    *(void *)(v14 + 56) = v13;
    *(void *)(v14 + 64) = v5;
    *(void *)(v7 + 136) = &type metadata for TelemetryCheckStep;
    *(void *)(v7 + 144) = &off_26D66F888;
    *(unsigned char *)(v7 + 112) = 0;
    *(void *)(v7 + 120) = 0;
    *(void *)(v7 + 128) = 0;
    sub_223322120((uint64_t)v26, (uint64_t)&v27);
    uint64_t Handler = type metadata accessor for DuplicateCountReadHandler();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_defaultActor_initialize();
    *(void *)(v16 + 112) = MEMORY[0x263F8EE80];
    *(void *)(v7 + 176) = &type metadata for RecordZoneReader;
    *(void *)(v7 + 184) = &off_26D6704C0;
    uint64_t v17 = swift_allocObject();
    *(void *)(v7 + 152) = v17;
    *(void *)(v17 + 88) = Handler;
    *(void *)(v17 + 96) = &off_26D6720F0;
    *(void *)(v17 + 64) = v16;
    *(unsigned char *)(v17 + 16) = 1;
    sub_223332E10(&v27, v17 + 24);
    *(void *)(v17 + 104) = 0;
    *(unsigned char *)(v17 + 112) = 1;
    *(_WORD *)(v17 + 113) = 0;
    *(unsigned char *)(v17 + 115) = 1;
    *(void *)(v17 + 120) = 0;
    *(void *)(v17 + 128) = 0;
    *(void *)(v7 + 216) = &type metadata for ReportDiagnosticTelemetryStep;
    *(void *)(v7 + 224) = &off_26D66E5A8;
    *(unsigned char *)(v7 + 192) = 0;
    *(void *)(v7 + 200) = 0;
    *(void *)(v7 + 208) = 0;
    uint64_t v24 = &type metadata for CloudKitSyncRetryStrategy;
    uint64_t v25 = &off_26D66F430;
    uint64_t v18 = type metadata accessor for SyncJob();
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = sub_2233310D8((uint64_t)v23, (uint64_t)&type metadata for CloudKitSyncRetryStrategy);
    MEMORY[0x270FA5388](v20);
    (*(void (**)(void))(v21 + 16))();
    uint64_t v28 = &type metadata for CloudKitSyncRetryStrategy;
    uint64_t v29 = &off_26D66F430;
    *(unsigned char *)(v19 + 17) = 7;
    *(void *)(v19 + 24) = v5;
    sub_223332E10(&v27, v19 + 32);
    *(unsigned char *)(v19 + 72) = a1 & 1;
    *(void *)(v19 + 80) = v22;
    *(void *)(v19 + 88) = v7;
    *(_DWORD *)(v19 + 96) = 252575744;
    *(unsigned char *)(v19 + 16) = 0;
    *(unsigned char *)(v19 + 100) = 1;
    *(void *)(v19 + 104) = 0;
    *(void *)(v19 + 112) = 0;
    swift_unknownObjectRetain();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v23);
    a2[3] = v18;
    a2[4] = (uint64_t)&off_26D66F718;
    swift_unknownObjectRelease();
    *a2 = v19;
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v26);
  }
  else
  {
    sub_22337952C();
    swift_allocError();
    unsigned char *v9 = 4;
    swift_willThrow();
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v26);
  }
}

uint64_t sub_223376184@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  if (qword_26AD63200) {
    id v18 = (id)qword_26AD63200;
  }
  else {
    id v18 = objc_msgSend(objc_allocWithZone((Class)NoOpErrorAnalyzer), sel_init);
  }
  swift_unknownObjectRetain();
  sub_2233F0D30();
  uint64_t v17 = v4;
  sub_22331E640((uint64_t *)&unk_26AD5EF80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22342F1E0;
  if (qword_26AD63218)
  {
    uint64_t v6 = qword_26AD63218;
  }
  else
  {
    type metadata accessor for NoOpPreReqVerifier();
    uint64_t v6 = swift_allocObject();
  }
  uint64_t v7 = qword_26AD63220;
  *(void *)(v5 + 56) = &type metadata for SyncPreReqsVerifierStep;
  *(void *)(v5 + 64) = &off_26D673768;
  uint64_t v8 = swift_allocObject();
  *(void *)(v5 + 32) = v8;
  *(unsigned char *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = qword_26AD5EEA0;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26AD63190;
  *(void *)(v5 + 96) = &type metadata for ImportStragglersStep;
  *(void *)(v5 + 104) = &off_26D6723C8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v5 + 72) = v11;
  *(unsigned char *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = 0;
  *(void *)(v11 + 40) = v10;
  uint64_t v20 = &type metadata for CloudKitSyncRetryStrategy;
  uint64_t v21 = &off_26D66F430;
  uint64_t v12 = type metadata accessor for SyncJob();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = sub_2233310D8((uint64_t)v19, (uint64_t)&type metadata for CloudKitSyncRetryStrategy);
  MEMORY[0x270FA5388](v14);
  (*(void (**)(void))(v15 + 16))();
  uint64_t v23 = &type metadata for CloudKitSyncRetryStrategy;
  uint64_t v24 = &off_26D66F430;
  *(unsigned char *)(v13 + 17) = 9;
  *(void *)(v13 + 24) = v18;
  sub_223332E10(&v22, v13 + 32);
  *(unsigned char *)(v13 + 72) = a1 & 1;
  *(void *)(v13 + 80) = v17;
  *(void *)(v13 + 88) = v5;
  *(_DWORD *)(v13 + 96) = 185204736;
  *(unsigned char *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 100) = 0;
  *(void *)(v13 + 104) = 0;
  *(void *)(v13 + 112) = 0;
  swift_retain();
  uint64_t result = _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v19);
  a2[3] = v12;
  a2[4] = (uint64_t)&off_26D66F718;
  *a2 = v13;
  return result;
}

uint64_t sub_22337645C@<X0>(unsigned __int8 *a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  id v298 = a6;
  int v294 = a5;
  int v295 = a2;
  uint64_t v297 = a4;
  int v296 = a3;
  unint64_t v299 = *a1;
  type metadata accessor for OSActivity();
  swift_allocObject();
  uint64_t v6 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v315[3] = &type metadata for SyncZoneInfo;
  v315[4] = &off_26D672240;
  uint64_t v7 = swift_allocObject();
  v315[0] = v7;
  *(void *)(v7 + 16) = 1952540739;
  *(void *)(v7 + 24) = 0xE400000000000000;
  *(unsigned char *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0x6F5465676E616863;
  *(void *)(v7 + 48) = 0xEB000000006E656BLL;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 64) = &unk_26D66C398;
  *(unsigned char *)(v7 + 72) = 0;
  *(void *)(v7 + 80) = 0;
  *(unsigned char *)(v7 + 88) = 1;
  *(void *)(v7 + 104) = 0;
  *(void *)(v7 + 112) = 0;
  *(void *)(v7 + 96) = v6;
  sub_2233739EC(0, v314);
  swift_allocObject();
  uint64_t v8 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v313[3] = &type metadata for SyncZoneInfo;
  v313[4] = &off_26D672240;
  uint64_t v9 = swift_allocObject();
  v313[0] = v9;
  *(void *)(v9 + 16) = 0x6567617373654DLL;
  *(void *)(v9 + 24) = 0xE700000000000000;
  *(unsigned char *)(v9 + 32) = 2;
  *(void *)(v9 + 40) = 0xD000000000000013;
  *(void *)(v9 + 48) = 0x80000002234369E0;
  *(void *)(v9 + 80) = 0;
  *(void *)(v9 + 56) = 0;
  *(void *)(v9 + 64) = 0;
  *(unsigned char *)(v9 + 72) = 0;
  *(unsigned char *)(v9 + 88) = 1;
  *(void *)(v9 + 104) = 0;
  *(void *)(v9 + 112) = 0;
  *(void *)(v9 + 96) = v8;
  swift_allocObject();
  uint64_t v10 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v312[3] = &type metadata for SyncZoneInfo;
  v312[4] = &off_26D672240;
  uint64_t v11 = swift_allocObject();
  v312[0] = v11;
  strcpy((char *)(v11 + 16), "ChatBotMessage");
  *(unsigned char *)(v11 + 31) = -18;
  *(unsigned char *)(v11 + 32) = 7;
  *(void *)(v11 + 40) = 0xD000000000000019;
  *(void *)(v11 + 48) = 0x8000000223436A00;
  *(void *)(v11 + 80) = 0;
  *(void *)(v11 + 56) = 0;
  *(void *)(v11 + 64) = 0;
  *(unsigned char *)(v11 + 72) = 0;
  *(unsigned char *)(v11 + 88) = 1;
  *(void *)(v11 + 104) = 0;
  *(void *)(v11 + 112) = 0;
  *(void *)(v11 + 96) = v10;
  sub_223373BA8(0, (uint64_t)&unk_26D66C478, 0, v311);
  sub_223373C9C(0, v310);
  swift_allocObject();
  uint64_t v12 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v309[3] = &type metadata for SyncZoneInfo;
  v309[4] = &off_26D672240;
  uint64_t v13 = swift_allocObject();
  v309[0] = v13;
  *(void *)(v13 + 16) = 0x73657461647055;
  *(void *)(v13 + 24) = 0xE700000000000000;
  *(unsigned char *)(v13 + 32) = 4;
  *(void *)(v13 + 40) = 0xD000000000000011;
  *(void *)(v13 + 48) = 0x8000000223436A20;
  *(void *)(v13 + 80) = 0;
  *(void *)(v13 + 56) = 0;
  *(void *)(v13 + 64) = 0;
  *(unsigned char *)(v13 + 72) = 0;
  *(unsigned char *)(v13 + 88) = 1;
  *(void *)(v13 + 104) = 0;
  *(void *)(v13 + 112) = 0;
  *(void *)(v13 + 96) = v12;
  swift_allocObject();
  uint64_t v14 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v308[3] = &type metadata for SyncZoneInfo;
  v308[4] = &off_26D672240;
  uint64_t v15 = swift_allocObject();
  v308[0] = v15;
  *(void *)(v15 + 16) = 0xD000000000000012;
  *(void *)(v15 + 24) = 0x8000000223436A40;
  *(unsigned char *)(v15 + 32) = 5;
  *(void *)(v15 + 40) = 0xD00000000000001DLL;
  *(void *)(v15 + 48) = 0x8000000223436A60;
  *(void *)(v15 + 80) = 0;
  *(void *)(v15 + 56) = 0;
  *(void *)(v15 + 64) = 0;
  *(unsigned char *)(v15 + 72) = 0;
  *(unsigned char *)(v15 + 88) = 1;
  *(void *)(v15 + 104) = 0;
  *(void *)(v15 + 112) = 0;
  *(void *)(v15 + 96) = v14;
  swift_allocObject();
  uint64_t v16 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v307[3] = &type metadata for SyncZoneInfo;
  v307[4] = &off_26D672240;
  uint64_t v17 = swift_allocObject();
  v307[0] = v17;
  *(void *)(v17 + 16) = 0xD000000000000019;
  *(void *)(v17 + 24) = 0x8000000223436A80;
  *(unsigned char *)(v17 + 32) = 9;
  *(void *)(v17 + 40) = 0xD000000000000024;
  *(void *)(v17 + 48) = 0x8000000223436AA0;
  *(void *)(v17 + 80) = 0;
  *(void *)(v17 + 56) = 0;
  *(void *)(v17 + 64) = 0;
  *(unsigned char *)(v17 + 72) = 0;
  *(unsigned char *)(v17 + 88) = 1;
  *(void *)(v17 + 104) = 0;
  *(void *)(v17 + 112) = 0;
  *(void *)(v17 + 96) = v16;
  swift_allocObject();
  uint64_t v18 = sub_22338EEC0("messages-cloud-sync", 19, 2);
  v306[3] = &type metadata for SyncZoneInfo;
  v306[4] = &off_26D672240;
  uint64_t v19 = swift_allocObject();
  v306[0] = v19;
  *(void *)(v19 + 16) = 0xD000000000000010;
  *(void *)(v19 + 24) = 0x8000000223436AD0;
  *(unsigned char *)(v19 + 32) = 6;
  *(void *)(v19 + 40) = 0xD00000000000001BLL;
  *(void *)(v19 + 48) = 0x8000000223436AF0;
  *(void *)(v19 + 80) = 0;
  *(void *)(v19 + 56) = 0;
  *(void *)(v19 + 64) = 0;
  *(unsigned char *)(v19 + 72) = 0;
  *(unsigned char *)(v19 + 88) = 1;
  *(void *)(v19 + 104) = 0;
  *(void *)(v19 + 112) = 0;
  *(void *)(v19 + 96) = v18;
  if (qword_26AD5F000 != -1) {
    swift_once();
  }
  id v20 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 0);
  if (!v20) {
    goto LABEL_42;
  }
  id v21 = v20;
  id v22 = objc_msgSend((id)qword_26AD63208, sel_deletingStoreFor_, 0);
  if (!v22)
  {
LABEL_41:
    swift_unknownObjectRelease();
LABEL_42:
    sub_22337952C();
    swift_allocError();
    *uint64_t v40 = 3;
    swift_willThrow();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v306);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v307);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v308);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v309);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v310);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v311);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v312);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v313);
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v314);
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v315);
  }
  id v23 = v22;
  id v24 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 1);
  if (!v24)
  {
LABEL_40:
    swift_unknownObjectRelease();
    goto LABEL_41;
  }
  unint64_t v25 = (unint64_t)v24;
  id v293 = objc_msgSend((id)qword_26AD63208, sel_deletingStoreFor_, 1);
  if (!v293)
  {
LABEL_39:
    swift_unknownObjectRelease();
    goto LABEL_40;
  }
  id v26 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 3);
  if (!v26)
  {
LABEL_38:
    swift_unknownObjectRelease();
    goto LABEL_39;
  }
  id v27 = v26;
  id v292 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 4);
  if (!v292)
  {
LABEL_37:
    swift_unknownObjectRelease();
    goto LABEL_38;
  }
  id v291 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 5);
  if (!v291)
  {
LABEL_36:
    swift_unknownObjectRelease();
    goto LABEL_37;
  }
  id v290 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 2);
  if (!v290)
  {
LABEL_35:
    swift_unknownObjectRelease();
    goto LABEL_36;
  }
  id v28 = objc_msgSend((id)qword_26AD63208, sel_deletingStoreFor_, 2);
  if (!v28)
  {
LABEL_34:
    swift_unknownObjectRelease();
    goto LABEL_35;
  }
  id v289 = v28;
  id v29 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 6);
  if (!v29)
  {
    unint64_t v299 = v25;
LABEL_33:
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  id v288 = v29;
  id v30 = objc_msgSend((id)qword_26AD63208, sel_deletingStoreFor_, 6);
  if (!v30)
  {
LABEL_32:
    swift_unknownObjectRelease();
    unint64_t v299 = (unint64_t)v293;
    goto LABEL_33;
  }
  id v287 = v30;
  id v31 = objc_msgSend((id)qword_26AD63208, sel_recordStoreFor_, 7);
  if (!v31)
  {
    id v35 = v291;
LABEL_31:
    swift_unknownObjectRelease();
    id v293 = v27;
    id v292 = v35;
    goto LABEL_32;
  }
  id v32 = v31;
  id v33 = objc_msgSend((id)qword_26AD63208, sel_deletingStoreFor_, 7);
  if (!v33)
  {
    id v285 = v32;
    id v37 = v290;
    id v36 = v291;
    goto LABEL_30;
  }
  id v284 = v32;
  id v285 = v33;
  if (!qword_26AD63228 || (uint64_t v281 = qword_26AD63200) == 0)
  {
    swift_unknownObjectRelease();
    id v292 = v291;
    id v36 = v290;
    id v37 = v289;
    id v38 = v287;
    id v287 = v284;
    id v288 = v38;
LABEL_30:
    swift_unknownObjectRelease();
    id v27 = v292;
    id v292 = v36;
    id v35 = v37;
    id v39 = v287;
    id v287 = v285;
    id v288 = v39;
    goto LABEL_31;
  }
  uint64_t v279 = qword_26AD63228;
  uint64_t v280 = sub_22331E640((uint64_t *)&unk_26AD5EF80);
  uint64_t v283 = swift_allocObject();
  *(_OWORD *)(v283 + 16) = xmmword_223430BC0;
  uint64_t v34 = qword_26AD63218;
  if (qword_26AD63218)
  {
    uint64_t v282 = (void *)qword_26AD63218;
  }
  else
  {
    type metadata accessor for NoOpPreReqVerifier();
    uint64_t v34 = swift_allocObject();
    uint64_t v282 = 0;
  }
  uint64_t v42 = qword_26AD63220;
  uint64_t v43 = v283;
  *(void *)(v283 + 56) = &type metadata for SyncPreReqsVerifierStep;
  *(void *)(v43 + 64) = &off_26D673768;
  uint64_t v44 = swift_allocObject();
  *(void *)(v43 + 32) = v44;
  *(unsigned char *)(v44 + 16) = 0;
  *(void *)(v44 + 24) = 0;
  *(void *)(v44 + 32) = 0;
  *(void *)(v44 + 40) = v34;
  *(void *)(v44 + 48) = v42;
  *(void *)(v43 + 96) = &type metadata for PrepareDatabaseStep;
  *(void *)(v43 + 104) = &off_26D66E9A8;
  *(unsigned char *)(v43 + 72) = 0;
  *(void *)(v43 + 80) = 0;
  *(void *)(v43 + 88) = 0;
  sub_22331E640((uint64_t *)&unk_26AD5F170);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_223430BD0;
  *(void *)(v45 + 32) = v21;
  *(void *)(v45 + 40) = v25;
  id v46 = v284;
  *(void *)(v45 + 48) = v290;
  *(void *)(v45 + 56) = v46;
  *(void *)&long long v316 = v45;
  sub_22342C4D0();
  uint64_t v47 = v316;
  *(void *)(v43 + 136) = &type metadata for LocalStateManagementStep;
  *(void *)(v43 + 144) = &off_26D66DE28;
  uint64_t v48 = swift_allocObject();
  *(void *)(v43 + 112) = v48;
  *(void *)(v48 + 16) = 1;
  *(unsigned char *)(v48 + 24) = 0;
  *(void *)(v48 + 32) = 0;
  *(void *)(v48 + 40) = 0;
  uint64_t v49 = v279;
  *(void *)(v48 + 48) = v47;
  *(void *)(v48 + 56) = v49;
  sub_22331E640(&qword_26AD5EF78);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_223430B90;
  sub_223322120((uint64_t)v315, v50 + 32);
  sub_223322120((uint64_t)v314, v50 + 72);
  sub_223322120((uint64_t)v313, v50 + 112);
  sub_223322120((uint64_t)v311, v50 + 152);
  sub_223322120((uint64_t)v309, v50 + 192);
  sub_223322120((uint64_t)v308, v50 + 232);
  sub_223322120((uint64_t)v306, v50 + 272);
  sub_223322120((uint64_t)v312, v50 + 312);
  sub_223322120((uint64_t)v310, v50 + 352);
  sub_223322120((uint64_t)v307, v50 + 392);
  *(void *)(v43 + 176) = &type metadata for RecordZonesPrepStep;
  *(void *)(v43 + 184) = &off_26D6708F8;
  uint64_t v51 = swift_allocObject();
  *(void *)(v43 + 152) = v51;
  *(void *)(v51 + 16) = 0x6D6F44616964654DLL;
  *(void *)(v51 + 24) = 0xEB000000006E6961;
  *(unsigned char *)(v51 + 32) = 0;
  *(void *)(v51 + 40) = 0;
  *(void *)(v51 + 48) = 0;
  *(void *)(v51 + 56) = v50;
  *(void *)(v51 + 64) = v281;
  *(void *)(v43 + 216) = &type metadata for PrepareStatisticsStep;
  *(void *)(v43 + 224) = &off_26D66E2C0;
  *(unsigned char *)(v43 + 192) = 0;
  *(void *)(v43 + 200) = 0;
  *(void *)(v43 + 208) = 0;
  uint64_t v52 = swift_allocObject();
  long long v277 = xmmword_22342F1F0;
  *(_OWORD *)(v52 + 16) = xmmword_22342F1F0;
  sub_223322120((uint64_t)v315, (uint64_t)&v316);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t Handler = (ValueMetadata *)type metadata accessor for DuplicateCountReadHandler();
  uint64_t v54 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v54 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v52 + 56) = &type metadata for RecordZoneReader;
  *(void *)(v52 + 64) = &off_26D6704C0;
  uint64_t v55 = swift_allocObject();
  *(void *)(v52 + 32) = v55;
  *(void *)(v55 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v55 + 96) = &off_26D6705C8;
  uint64_t v56 = swift_allocObject();
  *(void *)(v55 + 64) = v56;
  *(CFAbsoluteTime *)(v56 + 16) = Current;
  *(void *)(v56 + 24) = 0;
  *(unsigned char *)(v56 + 32) = 0;
  *(void *)(v56 + 40) = v54;
  *(unsigned char *)(v55 + 16) = 1;
  sub_223332E10(&v316, v55 + 24);
  *(void *)(v55 + 104) = 0;
  *(unsigned char *)(v55 + 112) = 1;
  *(_WORD *)(v55 + 113) = 256;
  *(unsigned char *)(v55 + 115) = 1;
  *(void *)(v55 + 120) = 0;
  *(void *)(v55 + 128) = 0;
  sub_223322120((uint64_t)v314, (uint64_t)&v316);
  CFAbsoluteTime v57 = CFAbsoluteTimeGetCurrent();
  uint64_t v58 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v58 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v52 + 96) = &type metadata for RecordZoneReader;
  *(void *)(v52 + 104) = &off_26D6704C0;
  uint64_t v59 = swift_allocObject();
  uint64_t v282 = (void *)v52;
  *(void *)(v52 + 72) = v59;
  *(void *)(v59 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v59 + 96) = &off_26D6705C8;
  uint64_t v60 = swift_allocObject();
  *(void *)(v59 + 64) = v60;
  *(CFAbsoluteTime *)(v60 + 16) = v57;
  *(void *)(v60 + 24) = 0;
  *(unsigned char *)(v60 + 32) = 0;
  *(void *)(v60 + 40) = v58;
  *(unsigned char *)(v59 + 16) = 1;
  sub_223332E10(&v316, v59 + 24);
  *(void *)(v59 + 104) = 0;
  *(unsigned char *)(v59 + 112) = 1;
  *(_WORD *)(v59 + 113) = 256;
  *(unsigned char *)(v59 + 115) = 1;
  *(void *)(v59 + 120) = 0;
  *(void *)(v59 + 128) = 0;
  if (qword_26AD5EEA0 != -1) {
    swift_once();
  }
  uint64_t v61 = qword_26AD63190;
  id v62 = v282;
  v282[17] = &type metadata for ImportStep;
  v62[18] = &off_26D66DEF0;
  uint64_t v63 = swift_allocObject();
  v62[14] = v63;
  *(unsigned char *)(v63 + 16) = 0;
  *(void *)(v63 + 24) = 0;
  *(void *)(v63 + 32) = 0;
  *(void *)(v63 + 40) = &unk_26D66C648;
  *(void *)(v63 + 48) = v61;
  uint64_t v64 = (void *)v283;
  *(void *)(v283 + 256) = &type metadata for MultiStepSyncStep;
  v64[33] = &off_26D66FD10;
  uint64_t v65 = swift_allocObject();
  v64[29] = v65;
  *(unsigned char *)(v65 + 16) = 0;
  *(void *)(v65 + 32) = 0;
  *(void *)(v65 + 40) = 0;
  *(void *)(v65 + 24) = v62;
  *(_WORD *)(v65 + 48) = 1;
  sub_223322120((uint64_t)v311, (uint64_t)&v316);
  swift_retain();
  CFAbsoluteTime v66 = CFAbsoluteTimeGetCurrent();
  uint64_t v282 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v282[14] = MEMORY[0x263F8EE80];
  v64[37] = &type metadata for RecordZoneReader;
  v64[38] = &off_26D6704C0;
  uint64_t v67 = swift_allocObject();
  v64[34] = v67;
  *(void *)(v67 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v67 + 96) = &off_26D6705C8;
  uint64_t v68 = swift_allocObject();
  *(void *)(v67 + 64) = v68;
  *(CFAbsoluteTime *)(v68 + 16) = v66;
  *(void *)(v68 + 24) = 0;
  *(unsigned char *)(v68 + 32) = 0;
  *(void *)(v68 + 40) = v282;
  *(unsigned char *)(v67 + 16) = 1;
  sub_223332E10(&v316, v67 + 24);
  *(void *)(v67 + 104) = 0;
  *(unsigned char *)(v67 + 112) = 1;
  *(_WORD *)(v67 + 113) = 256;
  *(unsigned char *)(v67 + 115) = 1;
  *(void *)(v67 + 120) = 0;
  *(void *)(v67 + 128) = 0;
  uint64_t v317 = &type metadata for RecordZoneReader;
  uint64_t v318 = &off_26D6704C0;
  uint64_t v69 = swift_allocObject();
  *(void *)&long long v316 = v69;
  sub_223322120((uint64_t)v310, v69 + 24);
  CFAbsoluteTime v70 = CFAbsoluteTimeGetCurrent();
  uint64_t v71 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v71 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v69 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v69 + 96) = &off_26D6705C8;
  uint64_t v72 = swift_allocObject();
  *(void *)(v69 + 64) = v72;
  *(CFAbsoluteTime *)(v72 + 16) = v70;
  *(void *)(v72 + 24) = 0;
  *(unsigned char *)(v72 + 32) = 0;
  *(void *)(v72 + 40) = v71;
  *(unsigned char *)(v69 + 16) = 1;
  *(void *)(v69 + 104) = 0;
  *(unsigned char *)(v69 + 112) = 1;
  *(_WORD *)(v69 + 113) = 256;
  *(unsigned char *)(v69 + 115) = 1;
  *(void *)(v69 + 120) = 0;
  *(void *)(v69 + 128) = 0;
  uint64_t v282 = self;
  id v73 = objc_msgSend(v282, sel_sharedInstance);
  if (!v73)
  {
    __break(1u);
    goto LABEL_124;
  }
  uint64_t v74 = v73;
  id v75 = objc_msgSend(v73, sel_deviceType);

  id v278 = v27;
  if (v75 == (id)2)
  {
    uint64_t v76 = v283;
    sub_223322120((uint64_t)&v316, v283 + 312);
  }
  else
  {
    uint64_t v76 = v283;
    *(void *)(v283 + 336) = &type metadata for NoOpSyncStep;
    *(void *)(v76 + 344) = &off_26D66FCD0;
    *(unsigned char *)(v76 + 312) = 0;
    *(void *)(v76 + 320) = 0;
    *(void *)(v76 + 328) = 0;
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v316);
  sub_223322120((uint64_t)v308, (uint64_t)&v316);
  CFAbsoluteTime v77 = CFAbsoluteTimeGetCurrent();
  uint64_t v78 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v78 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v76 + 376) = &type metadata for RecordZoneReader;
  *(void *)(v76 + 384) = &off_26D6704C0;
  uint64_t v79 = swift_allocObject();
  *(void *)(v76 + 352) = v79;
  *(void *)(v79 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v79 + 96) = &off_26D6705C8;
  uint64_t v80 = swift_allocObject();
  *(void *)(v79 + 64) = v80;
  *(CFAbsoluteTime *)(v80 + 16) = v77;
  *(void *)(v80 + 24) = 0;
  *(unsigned char *)(v80 + 32) = 0;
  *(void *)(v80 + 40) = v78;
  *(unsigned char *)(v79 + 16) = 1;
  sub_223332E10(&v316, v79 + 24);
  *(void *)(v79 + 104) = 0;
  *(unsigned char *)(v79 + 112) = 1;
  *(_WORD *)(v79 + 113) = 256;
  *(unsigned char *)(v79 + 115) = 1;
  *(void *)(v79 + 120) = 0;
  *(void *)(v79 + 128) = 0;
  uint64_t v317 = &type metadata for RecordZoneReader;
  uint64_t v318 = &off_26D6704C0;
  uint64_t v81 = swift_allocObject();
  *(void *)&long long v316 = v81;
  sub_223322120((uint64_t)v307, v81 + 24);
  CFAbsoluteTime v82 = CFAbsoluteTimeGetCurrent();
  uint64_t v83 = MEMORY[0x263F8EE80];
  uint64_t v84 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v84 + 112) = v83;
  *(void *)(v81 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v81 + 96) = &off_26D6705C8;
  uint64_t v85 = swift_allocObject();
  *(void *)(v81 + 64) = v85;
  *(CFAbsoluteTime *)(v85 + 16) = v82;
  *(void *)(v85 + 24) = 0;
  *(unsigned char *)(v85 + 32) = 0;
  *(void *)(v85 + 40) = v84;
  *(unsigned char *)(v81 + 16) = 1;
  *(void *)(v81 + 104) = 0;
  *(unsigned char *)(v81 + 112) = 1;
  *(_WORD *)(v81 + 113) = 256;
  *(unsigned char *)(v81 + 115) = 1;
  *(void *)(v81 + 120) = 0;
  *(void *)(v81 + 128) = 0;
  id v86 = objc_msgSend(v282, sel_sharedInstance);
  if (!v86)
  {
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
    JUMPOUT(0x2233794D0);
  }
  uint64_t v87 = v86;
  id v88 = objc_msgSend(v86, sel_deviceType);

  uint64_t v89 = v283;
  if (v88 == (id)2)
  {
    sub_223322120((uint64_t)&v316, v283 + 392);
  }
  else
  {
    *(void *)(v283 + 416) = &type metadata for NoOpSyncStep;
    *(void *)(v89 + 424) = &off_26D66FCD0;
    *(unsigned char *)(v89 + 392) = 0;
    *(void *)(v89 + 400) = 0;
    *(void *)(v89 + 408) = 0;
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v316);
  sub_223322120((uint64_t)v306, (uint64_t)&v316);
  CFAbsoluteTime v90 = CFAbsoluteTimeGetCurrent();
  uint64_t v91 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v91 + 112) = v83;
  *(void *)(v89 + 456) = &type metadata for RecordZoneReader;
  *(void *)(v89 + 464) = &off_26D6704C0;
  uint64_t v92 = swift_allocObject();
  *(void *)(v89 + 432) = v92;
  *(void *)(v92 + 88) = &type metadata for SyncStoreReadHandler;
  *(void *)(v92 + 96) = &off_26D6705C8;
  uint64_t v93 = swift_allocObject();
  *(void *)(v92 + 64) = v93;
  *(CFAbsoluteTime *)(v93 + 16) = v90;
  *(void *)(v93 + 24) = 0;
  *(unsigned char *)(v93 + 32) = 0;
  *(void *)(v93 + 40) = v91;
  *(unsigned char *)(v92 + 16) = 1;
  sub_223332E10(&v316, v92 + 24);
  *(void *)(v92 + 104) = 0;
  *(unsigned char *)(v92 + 112) = 1;
  *(_WORD *)(v92 + 113) = 256;
  *(unsigned char *)(v92 + 115) = 1;
  *(void *)(v92 + 120) = 0;
  *(void *)(v92 + 128) = 0;
  switch(v299)
  {
    case 1uLL:
      swift_bridgeObjectRelease();
      goto LABEL_57;
    default:
      char v94 = sub_22342CF60();
      swift_bridgeObjectRelease();
      if (v94)
      {
LABEL_57:
        uint64_t v95 = qword_26AD63190;
        *(void *)(v89 + 496) = &type metadata for ImportStragglersStep;
        *(void *)(v89 + 504) = &off_26D6723C8;
        uint64_t v96 = swift_allocObject();
        *(void *)(v89 + 472) = v96;
        *(unsigned char *)(v96 + 16) = 0;
        *(void *)(v96 + 24) = 0;
        *(void *)(v96 + 32) = 0;
        *(void *)(v96 + 40) = v95;
        swift_retain();
      }
      else
      {
        *(void *)(v89 + 496) = &type metadata for NoOpSyncStep;
        *(void *)(v89 + 504) = &off_26D66FCD0;
        *(unsigned char *)(v89 + 472) = 0;
        *(void *)(v89 + 480) = 0;
        *(void *)(v89 + 488) = 0;
      }
      uint64_t v97 = swift_allocObject();
      *(_OWORD *)(v97 + 16) = v277;
      sub_223322120((uint64_t)v313, (uint64_t)&v316);
      CFAbsoluteTime v98 = CFAbsoluteTimeGetCurrent();
      uint64_t v99 = swift_allocObject();
      swift_defaultActor_initialize();
      *(void *)(v99 + 112) = MEMORY[0x263F8EE80];
      id v304 = &type metadata for SyncStoreReadHandler;
      long long v305 = &off_26D6705C8;
      uint64_t v100 = swift_allocObject();
      *(void *)&long long v303 = v100;
      *(CFAbsoluteTime *)(v100 + 16) = v98;
      *(void *)(v100 + 24) = 0;
      *(unsigned char *)(v100 + 32) = 0;
      *(void *)&long long v277 = 0xD000000000000031;
      *(void *)(v100 + 40) = v99;
      uint64_t v280 = 0x8000000223436B10;
      unint64_t v101 = (void *)sub_22342C2D0();
      uint64_t v276 = IMBagIntValueWithDefault();

      *(void *)(v97 + 56) = &type metadata for RecordZoneReader;
      *(void *)(v97 + 64) = &off_26D6704C0;
      uint64_t v102 = swift_allocObject();
      uint64_t v275 = v97;
      *(void *)(v97 + 32) = v102;
      *(unsigned char *)(v102 + 16) = 0;
      sub_223332E10(&v316, v102 + 24);
      sub_223332E10(&v303, v102 + 64);
      *(void *)(v102 + 104) = v276;
      *(unsigned char *)(v102 + 112) = 0;
      *(_WORD *)(v102 + 113) = 256;
      *(unsigned char *)(v102 + 115) = 1;
      *(void *)(v102 + 120) = 0;
      *(void *)(v102 + 128) = 0;
      uint64_t v317 = &type metadata for RecordZoneReader;
      uint64_t v318 = &off_26D6704C0;
      uint64_t v103 = swift_allocObject();
      *(void *)&long long v316 = v103;
      sub_223322120((uint64_t)v312, v103 + 24);
      CFAbsoluteTime v104 = CFAbsoluteTimeGetCurrent();
      uint64_t v105 = swift_allocObject();
      swift_defaultActor_initialize();
      *(void *)(v105 + 112) = MEMORY[0x263F8EE80];
      *(void *)(v103 + 88) = &type metadata for SyncStoreReadHandler;
      *(void *)(v103 + 96) = &off_26D6705C8;
      uint64_t v106 = swift_allocObject();
      *(void *)(v103 + 64) = v106;
      *(CFAbsoluteTime *)(v106 + 16) = v104;
      *(void *)(v106 + 24) = 0;
      *(unsigned char *)(v106 + 32) = 0;
      *(void *)(v106 + 40) = v105;
      long long v107 = (void *)sub_22342C2D0();
      uint64_t v108 = IMBagIntValueWithDefault();

      *(unsigned char *)(v103 + 16) = 0;
      *(void *)(v103 + 104) = v108;
      *(unsigned char *)(v103 + 112) = 0;
      *(_WORD *)(v103 + 113) = 256;
      *(unsigned char *)(v103 + 115) = 1;
      *(void *)(v103 + 120) = 0;
      *(void *)(v103 + 128) = 0;
      id v109 = objc_msgSend(v282, sel_sharedInstance);
      if (!v109) {
        goto LABEL_125;
      }
      id v110 = v109;
      id v111 = objc_msgSend(v109, sel_deviceType);

      if (v111 == (id)2)
      {
        uint64_t v112 = v275;
        sub_223322120((uint64_t)&v316, v275 + 72);
      }
      else
      {
        uint64_t v112 = v275;
        *(void *)(v275 + 96) = &type metadata for NoOpSyncStep;
        *(void *)(v112 + 104) = &off_26D66FCD0;
        *(unsigned char *)(v112 + 72) = 0;
        *(void *)(v112 + 80) = 0;
        *(void *)(v112 + 88) = 0;
      }
      uint64_t v113 = v283;
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v316);
      uint64_t v114 = qword_26AD63190;
      *(void *)(v112 + 136) = &type metadata for ImportStep;
      *(void *)(v112 + 144) = &off_26D66DEF0;
      uint64_t v115 = swift_allocObject();
      *(void *)(v112 + 112) = v115;
      *(unsigned char *)(v115 + 16) = 0;
      *(_OWORD *)(v115 + 24) = 0u;
      *(void *)(v115 + 40) = &unk_26D66C670;
      *(void *)(v115 + 48) = v114;
      *(void *)(v113 + 536) = &type metadata for MultiStepSyncStep;
      *(void *)(v113 + 544) = &off_26D66FD10;
      uint64_t v116 = swift_allocObject();
      *(void *)(v113 + 512) = v116;
      *(unsigned char *)(v116 + 16) = 1;
      *(void *)(v116 + 24) = v112;
      *(_OWORD *)(v116 + 32) = 0u;
      *(_WORD *)(v116 + 48) = 257;
      *(void *)(v113 + 576) = &type metadata for ImportStep;
      *(void *)(v113 + 584) = &off_26D66DEF0;
      uint64_t v117 = swift_allocObject();
      *(void *)(v113 + 552) = v117;
      *(unsigned char *)(v117 + 16) = 0;
      *(_OWORD *)(v117 + 24) = 0u;
      *(void *)(v117 + 40) = &unk_26D66C698;
      *(void *)(v117 + 48) = v114;
      sub_223322120((uint64_t)v309, (uint64_t)&v316);
      swift_retain_n();
      CFAbsoluteTime v118 = CFAbsoluteTimeGetCurrent();
      uint64_t v119 = swift_allocObject();
      swift_defaultActor_initialize();
      *(void *)(v119 + 112) = MEMORY[0x263F8EE80];
      *(void *)(v113 + 616) = &type metadata for RecordZoneReader;
      *(void *)(v113 + 624) = &off_26D6704C0;
      uint64_t v120 = swift_allocObject();
      *(void *)(v113 + 592) = v120;
      *(void *)(v120 + 88) = &type metadata for SyncStoreReadHandler;
      *(void *)(v120 + 96) = &off_26D6705C8;
      uint64_t v121 = swift_allocObject();
      *(void *)(v120 + 64) = v121;
      *(CFAbsoluteTime *)(v121 + 16) = v118;
      *(void *)(v121 + 24) = 0;
      *(unsigned char *)(v121 + 32) = 0;
      *(void *)(v121 + 40) = v119;
      *(unsigned char *)(v120 + 16) = 1;
      sub_223332E10(&v316, v120 + 24);
      *(void *)(v120 + 104) = 0;
      *(unsigned char *)(v120 + 112) = 1;
      *(_WORD *)(v120 + 113) = 256;
      *(unsigned char *)(v120 + 115) = 1;
      *(_OWORD *)(v120 + 120) = 0u;
      uint64_t v122 = qword_26AD63190;
      *(void *)(v113 + 656) = &type metadata for ImportStep;
      *(void *)(v113 + 664) = &off_26D66DEF0;
      uint64_t v123 = swift_allocObject();
      *(void *)(v113 + 632) = v123;
      *(unsigned char *)(v123 + 16) = 0;
      *(_OWORD *)(v123 + 24) = 0u;
      *(void *)(v123 + 40) = &unk_26D66C6C0;
      *(void *)(v123 + 48) = v122;
      *(void *)(v113 + 696) = &type metadata for PrepareStatisticsStep;
      *(void *)(v113 + 704) = &off_26D66E2C0;
      *(unsigned char *)(v113 + 672) = 0;
      *(_OWORD *)(v113 + 680) = 0u;
      sub_223322120((uint64_t)v315, (uint64_t)&v316);
      uint64_t v124 = type metadata accessor for LiveDataDeleteHandler();
      uint64_t v125 = (void *)swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v126 = MEMORY[0x263F8EE78];
      v125[15] = MEMORY[0x263F8EE78];
      v125[16] = sub_2233C634C(v126);
      v125[14] = v23;
      id v304 = (ValueMetadata *)v124;
      long long v305 = &off_26D66F4D8;
      *(void *)&long long v303 = v125;
      if (qword_26AD5F100 != -1) {
        swift_once();
      }
      uint64_t v127 = sub_223323DE0(8, 0);
      if (v128)
      {
        uint64_t v130 = (void *)sub_22342C2D0();
        uint64_t v129 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v129 = v127;
      }
      *(void *)(v113 + 736) = &type metadata for RecordZoneDeleter;
      *(void *)(v113 + 744) = &off_26D66FFC0;
      uint64_t v131 = swift_allocObject();
      *(void *)(v113 + 712) = v131;
      sub_223332E10(&v316, v131 + 16);
      sub_223332E10(&v303, v131 + 56);
      *(unsigned char *)(v131 + 96) = 1;
      *(void *)(v131 + 104) = v129;
      *(unsigned char *)(v131 + 112) = 0;
      *(void *)(v131 + 120) = 0;
      *(void *)(v131 + 128) = 0;
      sub_223322120((uint64_t)v313, (uint64_t)&v316);
      uint64_t v132 = (ValueMetadata *)v124;
      uint64_t v133 = (void *)swift_allocObject();
      id v134 = v293;
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v135 = MEMORY[0x263F8EE78];
      v133[15] = MEMORY[0x263F8EE78];
      v133[16] = sub_2233C634C(v135);
      v133[14] = v134;
      *(void *)(v113 + 776) = &type metadata for RecordZoneDeleter;
      *(void *)(v113 + 784) = &off_26D66FFC0;
      uint64_t v136 = swift_allocObject();
      *(void *)(v113 + 752) = v136;
      *(void *)(v136 + 80) = v132;
      *(void *)(v136 + 88) = &off_26D66F4D8;
      *(void *)(v136 + 56) = v133;
      sub_223332E10(&v316, v136 + 16);
      *(unsigned char *)(v136 + 96) = 1;
      *(void *)(v136 + 104) = 100;
      *(unsigned char *)(v136 + 112) = 0;
      *(void *)(v136 + 120) = 0;
      *(void *)(v136 + 128) = 0;
      sub_223322120((uint64_t)v311, (uint64_t)&v316);
      uint64_t v137 = (void *)swift_allocObject();
      id v138 = v289;
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v139 = MEMORY[0x263F8EE78];
      v137[15] = MEMORY[0x263F8EE78];
      v137[16] = sub_2233C634C(v139);
      v137[14] = v138;
      *(void *)(v113 + 816) = &type metadata for RecordZoneDeleter;
      *(void *)(v113 + 824) = &off_26D66FFC0;
      uint64_t v140 = swift_allocObject();
      *(void *)(v113 + 792) = v140;
      *(void *)(v140 + 80) = v132;
      *(void *)(v140 + 88) = &off_26D66F4D8;
      *(void *)(v140 + 56) = v137;
      sub_223332E10(&v316, v140 + 16);
      *(unsigned char *)(v140 + 96) = 1;
      *(void *)(v140 + 104) = 100;
      *(unsigned char *)(v140 + 112) = 0;
      *(void *)(v140 + 120) = 0;
      *(void *)(v140 + 128) = 0;
      sub_223322120((uint64_t)v308, (uint64_t)&v316);
      long long v141 = (void *)swift_allocObject();
      id v142 = v287;
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v143 = MEMORY[0x263F8EE78];
      v141[15] = MEMORY[0x263F8EE78];
      v141[16] = sub_2233C634C(v143);
      v141[14] = v142;
      *(void *)(v113 + 856) = &type metadata for RecordZoneDeleter;
      *(void *)(v113 + 864) = &off_26D66FFC0;
      uint64_t v144 = swift_allocObject();
      *(void *)(v113 + 832) = v144;
      *(void *)(v144 + 80) = v132;
      *(void *)(v144 + 88) = &off_26D66F4D8;
      *(void *)(v144 + 56) = v141;
      sub_223332E10(&v316, v144 + 16);
      *(unsigned char *)(v144 + 96) = 1;
      *(void *)(v144 + 104) = 100;
      *(unsigned char *)(v144 + 112) = 0;
      *(void *)(v144 + 120) = 0;
      *(void *)(v144 + 128) = 0;
      sub_223322120((uint64_t)v306, (uint64_t)&v316);
      long long v145 = (void *)swift_allocObject();
      id v146 = v285;
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v147 = MEMORY[0x263F8EE78];
      v145[15] = MEMORY[0x263F8EE78];
      v145[16] = sub_2233C634C(v147);
      v145[14] = v146;
      id v304 = v132;
      long long v305 = &off_26D66F4D8;
      *(void *)&long long v303 = v145;
      uint64_t v148 = sub_223323DE0(8, 0);
      if (v149)
      {
        uint64_t v151 = (void *)sub_22342C2D0();
        uint64_t v150 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v150 = v148;
      }
      uint64_t v152 = v283;
      *(void *)(v283 + 896) = &type metadata for RecordZoneDeleter;
      *(void *)(v152 + 904) = &off_26D66FFC0;
      uint64_t v153 = swift_allocObject();
      *(void *)(v152 + 872) = v153;
      sub_223332E10(&v316, v153 + 16);
      sub_223332E10(&v303, v153 + 56);
      *(unsigned char *)(v153 + 96) = 1;
      *(void *)(v153 + 104) = v150;
      *(unsigned char *)(v153 + 112) = 0;
      *(void *)(v153 + 120) = 0;
      *(void *)(v153 + 128) = 0;
      sub_223322120((uint64_t)v314, (uint64_t)&v316);
      uint64_t v154 = type metadata accessor for LiveDataWriteHandler();
      uint64_t v155 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v156 = MEMORY[0x263F8EE78];
      v155[15] = MEMORY[0x263F8EE78];
      v155[16] = sub_2233C634C(v156);
      v155[14] = v21;
      id v304 = (ValueMetadata *)v154;
      long long v305 = &off_26D672DD8;
      uint64_t Handler = (ValueMetadata *)v154;
      *(void *)&long long v303 = v155;
      uint64_t v157 = sub_223323DE0(7, 0);
      if (v158)
      {
        uint64_t v160 = (void *)sub_22342C2D0();
        uint64_t v159 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v159 = v157;
      }
      id v161 = v292;
      *(void *)(v152 + 936) = &type metadata for RecordZoneWriter;
      *(void *)(v152 + 944) = &off_26D66E1A0;
      uint64_t v162 = swift_allocObject();
      *(void *)(v152 + 912) = v162;
      *(void *)(v162 + 16) = 2;
      *(unsigned char *)(v162 + 24) = 1;
      sub_223332E10(&v316, v162 + 40);
      sub_223332E10(&v303, v162 + 80);
      *(void *)(v162 + 120) = 0;
      *(void *)(v162 + 128) = 0;
      *(void *)(v162 + 32) = v159;
      sub_223322120((uint64_t)v315, (uint64_t)&v316);
      uint64_t v163 = Handler;
      uint64_t v164 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v165 = MEMORY[0x263F8EE78];
      v164[15] = MEMORY[0x263F8EE78];
      v164[16] = sub_2233C634C(v165);
      v164[14] = v21;
      id v304 = v163;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v164;
      uint64_t v166 = sub_223323DE0(7, 0);
      if (v167)
      {
        uint64_t v169 = (void *)sub_22342C2D0();
        uint64_t v168 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v168 = v166;
      }
      *(void *)(v152 + 976) = &type metadata for RecordZoneWriter;
      *(void *)(v152 + 984) = &off_26D66E1A0;
      uint64_t v170 = swift_allocObject();
      *(void *)(v152 + 952) = v170;
      *(void *)(v170 + 16) = 1;
      *(unsigned char *)(v170 + 24) = 1;
      sub_223332E10(&v316, v170 + 40);
      sub_223332E10(&v303, v170 + 80);
      *(void *)(v170 + 120) = 0;
      *(void *)(v170 + 128) = 0;
      *(void *)(v170 + 32) = v168;
      sub_223322120((uint64_t)v313, (uint64_t)&v316);
      uint64_t v171 = Handler;
      uint64_t v172 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v173 = MEMORY[0x263F8EE78];
      v172[15] = MEMORY[0x263F8EE78];
      v172[16] = sub_2233C634C(v173);
      v172[14] = v25;
      id v304 = v171;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v172;
      uint64_t v174 = sub_223323DE0(7, 0);
      if (v175)
      {
        uint64_t v177 = (void *)sub_22342C2D0();
        uint64_t v176 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v176 = v174;
      }
      *(void *)(v152 + 1016) = &type metadata for RecordZoneWriter;
      *(void *)(v152 + 1024) = &off_26D66E1A0;
      uint64_t v178 = swift_allocObject();
      *(void *)(v152 + 992) = v178;
      *(void *)(v178 + 16) = 3;
      *(unsigned char *)(v178 + 24) = 1;
      sub_223332E10(&v316, v178 + 40);
      sub_223332E10(&v303, v178 + 80);
      *(void *)(v178 + 120) = 0;
      *(void *)(v178 + 128) = 0;
      *(void *)(v178 + 32) = v176;
      sub_223322120((uint64_t)v312, (uint64_t)&v303);
      uint64_t v179 = Handler;
      uint64_t v180 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v181 = MEMORY[0x263F8EE78];
      v180[15] = MEMORY[0x263F8EE78];
      v180[16] = sub_2233C634C(v181);
      v180[14] = v25;
      uint64_t v301 = v179;
      uint64_t v302 = &off_26D672DD8;
      *(void *)&long long v300 = v180;
      uint64_t v182 = sub_223323DE0(7, 0);
      if (v183)
      {
        uint64_t v185 = (void *)sub_22342C2D0();
        uint64_t v184 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v184 = v182;
      }
      uint64_t v317 = &type metadata for RecordZoneWriter;
      uint64_t v318 = &off_26D66E1A0;
      uint64_t v186 = swift_allocObject();
      *(void *)&long long v316 = v186;
      *(void *)(v186 + 16) = 4;
      *(unsigned char *)(v186 + 24) = 1;
      sub_223332E10(&v303, v186 + 40);
      sub_223332E10(&v300, v186 + 80);
      *(void *)(v186 + 120) = 0;
      *(void *)(v186 + 128) = 0;
      *(void *)(v186 + 32) = v184;
      id v187 = objc_msgSend(v282, sel_sharedInstance);
      if (!v187) {
        goto LABEL_126;
      }
      uint64_t v188 = v187;
      id v189 = objc_msgSend(v187, sel_deviceType);

      if (v189 == (id)2)
      {
        sub_223322120((uint64_t)&v316, v152 + 1032);
      }
      else
      {
        *(void *)(v152 + 1056) = &type metadata for NoOpSyncStep;
        *(void *)(v152 + 1064) = &off_26D66FCD0;
        *(unsigned char *)(v152 + 1032) = 0;
        *(_OWORD *)(v152 + 1040) = 0u;
      }
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v316);
      sub_223322120((uint64_t)v309, (uint64_t)&v316);
      uint64_t v190 = Handler;
      uint64_t v191 = (void *)swift_allocObject();
      id v192 = v278;
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v193 = MEMORY[0x263F8EE78];
      v191[15] = MEMORY[0x263F8EE78];
      v191[16] = sub_2233C634C(v193);
      v191[14] = v192;
      id v304 = v190;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v191;
      uint64_t v194 = sub_223323DE0(7, 0);
      if (v195)
      {
        uint64_t v197 = (void *)sub_22342C2D0();
        uint64_t v196 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v196 = v194;
      }
      *(void *)(v152 + 1096) = &type metadata for RecordZoneWriter;
      *(void *)(v152 + 1104) = &off_26D66E1A0;
      uint64_t v198 = swift_allocObject();
      *(void *)(v152 + 1072) = v198;
      *(void *)(v198 + 16) = 0;
      *(unsigned char *)(v198 + 24) = 1;
      sub_223332E10(&v316, v198 + 40);
      sub_223332E10(&v303, v198 + 80);
      *(void *)(v198 + 120) = 0;
      *(void *)(v198 + 128) = 0;
      *(void *)(v198 + 32) = v196;
      sub_223322120((uint64_t)v309, (uint64_t)&v316);
      uint64_t v199 = Handler;
      uint64_t v200 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v201 = MEMORY[0x263F8EE78];
      v200[15] = MEMORY[0x263F8EE78];
      v200[16] = sub_2233C634C(v201);
      v200[14] = v161;
      id v304 = v199;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v200;
      uint64_t v202 = sub_223323DE0(7, 0);
      if (v203)
      {
        uint64_t v205 = (void *)sub_22342C2D0();
        uint64_t v204 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v204 = v202;
      }
      id v206 = v291;
      *(void *)(v152 + 1136) = &type metadata for RecordZoneWriter;
      *(void *)(v152 + 1144) = &off_26D66E1A0;
      uint64_t v207 = swift_allocObject();
      *(void *)(v152 + 1112) = v207;
      *(void *)(v207 + 16) = 0;
      *(unsigned char *)(v207 + 24) = 1;
      sub_223332E10(&v316, v207 + 40);
      sub_223332E10(&v303, v207 + 80);
      *(void *)(v207 + 120) = 0;
      *(void *)(v207 + 128) = 0;
      *(void *)(v207 + 32) = v204;
      sub_223322120((uint64_t)v309, (uint64_t)&v316);
      uint64_t v208 = Handler;
      uint64_t v209 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v210 = MEMORY[0x263F8EE78];
      v209[15] = MEMORY[0x263F8EE78];
      v209[16] = sub_2233C634C(v210);
      v209[14] = v206;
      id v304 = v208;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v209;
      uint64_t v211 = sub_223323DE0(7, 0);
      if (v212)
      {
        uint64_t v214 = (void *)sub_22342C2D0();
        uint64_t v213 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v213 = v211;
      }
      id v215 = v290;
      *(void *)(v152 + 1176) = &type metadata for RecordZoneWriter;
      *(void *)(v152 + 1184) = &off_26D66E1A0;
      uint64_t v216 = swift_allocObject();
      *(void *)(v152 + 1152) = v216;
      *(void *)(v216 + 16) = 0;
      *(unsigned char *)(v216 + 24) = 1;
      sub_223332E10(&v316, v216 + 40);
      sub_223332E10(&v303, v216 + 80);
      *(void *)(v216 + 120) = 0;
      *(void *)(v216 + 128) = 0;
      *(void *)(v216 + 32) = v213;
      sub_223322120((uint64_t)v308, (uint64_t)&v316);
      uint64_t v217 = Handler;
      uint64_t v218 = (void *)swift_allocObject();
      id v219 = v288;
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v220 = MEMORY[0x263F8EE78];
      v218[15] = MEMORY[0x263F8EE78];
      v218[16] = sub_2233C634C(v220);
      v218[14] = v219;
      id v304 = v217;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v218;
      uint64_t v221 = sub_223323DE0(7, 0);
      if (v222)
      {
        id v224 = (void *)sub_22342C2D0();
        uint64_t v223 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v223 = v221;
      }
      *(void *)(v152 + 1216) = &type metadata for RecordZoneWriter;
      *(void *)(v152 + 1224) = &off_26D66E1A0;
      uint64_t v225 = swift_allocObject();
      *(void *)(v152 + 1192) = v225;
      *(void *)(v225 + 16) = 3;
      *(unsigned char *)(v225 + 24) = 1;
      sub_223332E10(&v316, v225 + 40);
      sub_223332E10(&v303, v225 + 80);
      *(void *)(v225 + 120) = 0;
      *(void *)(v225 + 128) = 0;
      *(void *)(v225 + 32) = v223;
      sub_223322120((uint64_t)v307, (uint64_t)&v303);
      uint64_t v226 = Handler;
      id v227 = (void *)swift_allocObject();
      id v228 = v288;
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v229 = MEMORY[0x263F8EE78];
      v227[15] = MEMORY[0x263F8EE78];
      v227[16] = sub_2233C634C(v229);
      v227[14] = v228;
      uint64_t v301 = v226;
      uint64_t v302 = &off_26D672DD8;
      *(void *)&long long v300 = v227;
      uint64_t v230 = sub_223323DE0(7, 0);
      if (v231)
      {
        uint64_t v233 = (void *)sub_22342C2D0();
        uint64_t v232 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v232 = v230;
      }
      uint64_t v317 = &type metadata for RecordZoneWriter;
      uint64_t v318 = &off_26D66E1A0;
      uint64_t v234 = swift_allocObject();
      *(void *)&long long v316 = v234;
      *(void *)(v234 + 16) = 4;
      *(unsigned char *)(v234 + 24) = 1;
      sub_223332E10(&v303, v234 + 40);
      sub_223332E10(&v300, v234 + 80);
      *(void *)(v234 + 120) = 0;
      *(void *)(v234 + 128) = 0;
      *(void *)(v234 + 32) = v232;
      id v235 = objc_msgSend(v282, sel_sharedInstance);
      uint64_t v236 = v283;
      if (!v235) {
        goto LABEL_127;
      }
      uint64_t v237 = v235;
      id v238 = objc_msgSend(v235, sel_deviceType);

      if (v238 == (id)2)
      {
        sub_223322120((uint64_t)&v316, v283 + 1232);
      }
      else
      {
        *(void *)(v283 + 1256) = &type metadata for NoOpSyncStep;
        *(void *)(v236 + 1264) = &off_26D66FCD0;
        *(unsigned char *)(v236 + 1232) = 0;
        *(_OWORD *)(v236 + 1240) = 0u;
      }
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v316);
      sub_223322120((uint64_t)v311, (uint64_t)&v316);
      uint64_t v239 = Handler;
      id v240 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v241 = MEMORY[0x263F8EE78];
      v240[15] = MEMORY[0x263F8EE78];
      v240[16] = sub_2233C634C(v241);
      v240[14] = v215;
      id v304 = v239;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v240;
      uint64_t v242 = sub_223323DE0(7, 0);
      if (v243)
      {
        uint64_t v245 = (void *)sub_22342C2D0();
        uint64_t v244 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v244 = v242;
      }
      *(void *)(v236 + 1296) = &type metadata for RecordZoneWriter;
      *(void *)(v236 + 1304) = &off_26D66E1A0;
      uint64_t v246 = swift_allocObject();
      *(void *)(v236 + 1272) = v246;
      *(void *)(v246 + 16) = 3;
      *(unsigned char *)(v246 + 24) = 1;
      sub_223332E10(&v316, v246 + 40);
      sub_223332E10(&v303, v246 + 80);
      *(void *)(v246 + 120) = 0;
      *(void *)(v246 + 128) = 0;
      *(void *)(v246 + 32) = v244;
      sub_223322120((uint64_t)v310, (uint64_t)&v303);
      uint64_t v247 = Handler;
      uint64_t v248 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v249 = MEMORY[0x263F8EE78];
      v248[15] = MEMORY[0x263F8EE78];
      v248[16] = sub_2233C634C(v249);
      v248[14] = v215;
      uint64_t v301 = v247;
      uint64_t v302 = &off_26D672DD8;
      *(void *)&long long v300 = v248;
      uint64_t v250 = sub_223323DE0(7, 0);
      if (v251)
      {
        long long v253 = (void *)sub_22342C2D0();
        uint64_t v252 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v252 = v250;
      }
      id v254 = v284;
      id v255 = v282;
      uint64_t v317 = &type metadata for RecordZoneWriter;
      uint64_t v318 = &off_26D66E1A0;
      uint64_t v256 = swift_allocObject();
      *(void *)&long long v316 = v256;
      *(void *)(v256 + 16) = 4;
      *(unsigned char *)(v256 + 24) = 1;
      sub_223332E10(&v303, v256 + 40);
      sub_223332E10(&v300, v256 + 80);
      *(void *)(v256 + 120) = 0;
      *(void *)(v256 + 128) = 0;
      *(void *)(v256 + 32) = v252;
      id v257 = objc_msgSend(v255, sel_sharedInstance);
      if (!v257) {
        goto LABEL_128;
      }
      uint64_t v258 = v257;
      id v259 = objc_msgSend(v257, sel_deviceType);

      if (v259 == (id)2)
      {
        sub_223322120((uint64_t)&v316, v236 + 1312);
      }
      else
      {
        *(void *)(v236 + 1336) = &type metadata for NoOpSyncStep;
        *(void *)(v236 + 1344) = &off_26D66FCD0;
        *(unsigned char *)(v236 + 1312) = 0;
        *(_OWORD *)(v236 + 1320) = 0u;
      }
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v316);
      sub_223322120((uint64_t)v306, (uint64_t)&v316);
      v260 = Handler;
      long long v261 = (void *)swift_allocObject();
      swift_unknownObjectRetain();
      swift_defaultActor_initialize();
      uint64_t v262 = MEMORY[0x263F8EE78];
      v261[15] = MEMORY[0x263F8EE78];
      v261[16] = sub_2233C634C(v262);
      v261[14] = v254;
      id v304 = v260;
      long long v305 = &off_26D672DD8;
      *(void *)&long long v303 = v261;
      uint64_t v263 = sub_223323DE0(7, 0);
      if (v264)
      {
        long long v266 = (void *)sub_22342C2D0();
        uint64_t v265 = IMBagIntValueWithDefault();
      }
      else
      {
        uint64_t v265 = v263;
      }
      *(void *)(v236 + 1376) = &type metadata for RecordZoneWriter;
      *(void *)(v236 + 1384) = &off_26D66E1A0;
      uint64_t v267 = swift_allocObject();
      *(void *)(v236 + 1352) = v267;
      *(void *)(v267 + 16) = 0;
      *(unsigned char *)(v267 + 24) = 1;
      sub_223332E10(&v316, v267 + 40);
      sub_223332E10(&v303, v267 + 80);
      *(_OWORD *)(v267 + 120) = 0u;
      *(void *)(v267 + 32) = v265;
      *(void *)(v236 + 1416) = &type metadata for ReportRecordFailuresTelemetryStep;
      *(void *)(v236 + 1424) = &off_26D672948;
      *(unsigned char *)(v236 + 1392) = 0;
      *(_OWORD *)(v236 + 1400) = 0u;
      id v268 = (id)qword_26AD63220;
      if (qword_26AD63220)
      {
        uint64_t v280 = qword_26AD63220;
      }
      else
      {
        id v268 = objc_msgSend(objc_allocWithZone((Class)NoOpBackupController), sel_init);
        uint64_t v280 = 0;
      }
      *(void *)(v236 + 1456) = &type metadata for SyncCompleteStep;
      *(void *)(v236 + 1464) = &off_26D6713D0;
      uint64_t v269 = swift_allocObject();
      *(void *)(v236 + 1432) = v269;
      *(unsigned char *)(v269 + 16) = 0;
      *(void *)(v269 + 24) = 0;
      *(void *)(v269 + 32) = 0;
      *(void *)(v269 + 40) = v268;
      id v304 = &type metadata for CloudKitSyncRetryStrategy;
      long long v305 = &off_26D66F430;
      uint64_t v282 = (void *)type metadata accessor for SyncJob();
      uint64_t v270 = swift_allocObject();
      uint64_t v271 = sub_2233310D8((uint64_t)&v303, (uint64_t)&type metadata for CloudKitSyncRetryStrategy);
      uint64_t Handler = (ValueMetadata *)&v275;
      MEMORY[0x270FA5388](v271);
      (*(void (**)(void))(v272 + 16))();
      char v273 = v294 & 1;
      uint64_t v317 = &type metadata for CloudKitSyncRetryStrategy;
      uint64_t v318 = &off_26D66F430;
      *(unsigned char *)(v270 + 17) = v299;
      *(void *)(v270 + 24) = v281;
      sub_223332E10(&v316, v270 + 32);
      *(unsigned char *)(v270 + 72) = v273;
      *(void *)(v270 + 80) = v297;
      *(void *)(v270 + 88) = v236;
      *(_WORD *)(v270 + 96) = 0;
      *(unsigned char *)(v270 + 98) = v295;
      *(unsigned char *)(v270 + 99) = v296;
      *(unsigned char *)(v270 + 16) = 0;
      *(unsigned char *)(v270 + 100) = 1;
      *(void *)(v270 + 104) = 0;
      *(void *)(v270 + 112) = 0;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v303);
      uint64_t v274 = v298;
      v298[3] = (uint64_t)v282;
      v274[4] = (uint64_t)&off_26D66F718;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      *uint64_t v274 = v270;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v306);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v307);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v308);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v309);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v310);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v311);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v312);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v313);
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v314);
      uint64_t result = _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v315);
      break;
  }
  return result;
}

uint64_t sub_2233794F8()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for CloudSyncFactory()
{
  return self;
}

unint64_t sub_22337952C()
{
  unint64_t result = qword_267FA2B50;
  if (!qword_267FA2B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B50);
  }
  return result;
}

uint64_t sub_223379580()
{
  return sub_2233797B8(MEMORY[0x263F8EEE8], MEMORY[0x263F8EEE8]);
}

uint64_t sub_2233795AC()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_223379604()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 24);
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 64);
  if (*(void *)(v0 + 120)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_223379654()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_2233796B4()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 40);
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_223379704()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_223379754()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22337978C()
{
  return sub_2233797B8(MEMORY[0x263F8EEA0], MEMORY[0x263F8EED8]);
}

uint64_t sub_2233797B8(void (*a1)(void), void (*a2)(void))
{
  if (v2[3]) {
    swift_release();
  }
  a1(v2[5]);
  a2(v2[6]);
  return MEMORY[0x270FA0238](v2, 56, 7);
}

uint64_t sub_223379828()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 50, 7);
}

uint64_t sub_223379870()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 56);
  if (*(void *)(v0 + 120)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_2233798C0()
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 40);
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 80);
  if (*(void *)(v0 + 120)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_223379910()
{
  return sub_223379940(MEMORY[0x263F8EEE8]);
}

uint64_t sub_223379928()
{
  return sub_223379940(MEMORY[0x263F8EED8]);
}

uint64_t sub_223379940(void (*a1)(void))
{
  if (*(void *)(v1 + 24)) {
    swift_release();
  }
  a1(*(void *)(v1 + 40));
  return MEMORY[0x270FA0238](v1, 48, 7);
}

uint64_t getEnumTagSinglePayload for CloudSyncFactoryError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CloudSyncFactoryError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223379AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncFactoryError()
{
  return &type metadata for CloudSyncFactoryError;
}

unint64_t sub_223379B30()
{
  unint64_t result = qword_267FA2B58;
  if (!qword_267FA2B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B58);
  }
  return result;
}

id CloudSyncSummary.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CloudSyncSummary.init()()
{
}

id CloudSyncSummary.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudSyncSummary();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CloudSyncSummary()
{
  return self;
}

uint64_t method lookup function for CloudSyncSummary(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CloudSyncSummary);
}

uint64_t destroy for AttachmentAsset()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AttachmentAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AttachmentAsset(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AttachmentAsset(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AttachmentAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentAsset(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AttachmentAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentAsset()
{
  return &type metadata for AttachmentAsset;
}

uint64_t sub_223379F44(unsigned __int8 *a1, char *a2)
{
  return sub_2233F444C(*a1, *a2);
}

uint64_t sub_223379F50()
{
  return sub_22342D060();
}

uint64_t sub_22337A020()
{
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22337A0D8()
{
  return sub_22342D060();
}

uint64_t sub_22337A1A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22337A5A4();
  *a1 = result;
  return result;
}

void sub_22337A1D4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x4C5255656C6966;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702521203;
      goto LABEL_3;
    case 2:
      *a1 = 0x727574616E676973;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 1684632949;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_22337A264()
{
  uint64_t result = 0x4C5255656C6966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702521203;
      break;
    case 2:
      uint64_t result = 0x727574616E676973;
      break;
    case 3:
      uint64_t result = 1684632949;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22337A2E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22337A5A4();
  *a1 = result;
  return result;
}

void sub_22337A310(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_22337A31C(uint64_t a1)
{
  unint64_t v2 = sub_22337A8C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22337A358(uint64_t a1)
{
  unint64_t v2 = sub_22337A8C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22337A394(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_267FA2B88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_223321F60(a1, a1[3]);
  sub_22337A8C4();
  sub_22342D090();
  v8[15] = 0;
  sub_22342CEC0();
  if (!v1)
  {
    v8[14] = 1;
    sub_22342CE90();
    v8[13] = 2;
    sub_22342CE70();
    v8[12] = 3;
    sub_22342CE70();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

double sub_22337A548@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_22337A5F0(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_22337A58C(void *a1)
{
  return sub_22337A394(a1);
}

uint64_t sub_22337A5A4()
{
  unint64_t v0 = sub_22342CDA0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_22337A5F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_22331E640(&qword_267FA2B78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_22337A8C4();
  sub_22342D080();
  if (v2) {
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_22342CE10();
  uint64_t v11 = v10;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22342CDE0();
  int v25 = v13;
  uint64_t v24 = v12;
  char v27 = 2;
  uint64_t v22 = sub_22342CDC0();
  uint64_t v23 = v14;
  char v26 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_22342CDC0();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v24;
  *(unsigned char *)(a2 + 24) = v25 & 1;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v17;
  return result;
}

unint64_t sub_22337A8C4()
{
  unint64_t result = qword_267FA2B80;
  if (!qword_267FA2B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AttachmentAsset.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22337A9E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentAsset.CodingKeys()
{
  return &type metadata for AttachmentAsset.CodingKeys;
}

unint64_t sub_22337AA20()
{
  unint64_t result = qword_267FA2B90;
  if (!qword_267FA2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B90);
  }
  return result;
}

unint64_t sub_22337AA78()
{
  unint64_t result = qword_267FA2B98;
  if (!qword_267FA2B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2B98);
  }
  return result;
}

unint64_t sub_22337AAD0()
{
  unint64_t result = qword_267FA2BA0;
  if (!qword_267FA2BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2BA0);
  }
  return result;
}

uint64_t sub_22337AB24(uint64_t a1, unint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v33 = MEMORY[0x263F8EE78];
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_223372594(0, v7, 0);
      uint64_t v8 = a1;
      uint64_t v3 = v33;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v9 = (int)a1;
        }
        else {
          uint64_t v9 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v9 = 0;
      }
      int v26 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v9 < (int)a1 || v9 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v10 = sub_22342BDF0();
            if (!v10) {
              goto LABEL_46;
            }
            uint64_t v11 = v10;
            uint64_t v12 = sub_22342BE10();
            uint64_t v13 = v9 - v12;
            if (__OFSUB__(v9, v12)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v9 < *(void *)(v8 + 16)) {
              goto LABEL_38;
            }
            if (v9 >= *(void *)(v8 + 24)) {
              goto LABEL_40;
            }
            uint64_t v15 = sub_22342BDF0();
            if (!v15) {
              goto LABEL_47;
            }
            uint64_t v11 = v15;
            uint64_t v16 = sub_22342BE10();
            uint64_t v13 = v9 - v16;
            if (__OFSUB__(v9, v16)) {
              goto LABEL_41;
            }
          }
          char v14 = *(unsigned char *)(v11 + v13);
          uint64_t v8 = a1;
        }
        else
        {
          if (v9 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          char v27 = v8;
          int v28 = *(_DWORD *)((char *)&a1 + 1);
          __int16 v29 = *(_WORD *)((char *)&a1 + 5);
          char v30 = HIBYTE(a1);
          int v31 = a2;
          __int16 v32 = WORD2(a2);
          char v14 = *(&v27 + v9);
        }
        sub_22331E640(&qword_267FA28D0);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_22342F870;
        *(void *)(v17 + 56) = MEMORY[0x263F8E778];
        *(void *)(v17 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v17 + 32) = v14;
        unint64_t v2 = sub_22342C320();
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        uint64_t v33 = v3;
        unint64_t v21 = *(void *)(v3 + 16);
        unint64_t v20 = *(void *)(v3 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_223372594(v20 > 1, v21 + 1, 1);
          uint64_t v8 = a1;
          uint64_t v3 = v33;
        }
        *(void *)(v3 + 16) = v21 + 1;
        uint64_t v22 = v3 + 16 * v21;
        *(void *)(v22 + 32) = v2;
        *(void *)(v22 + 40) = v19;
        ++v9;
        --v7;
        --v4;
        LODWORD(v2) = v26;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_22337AF00@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v84 = a2;
  id v86 = a4;
  v88[2] = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_22342BD50();
  uint64_t v81 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v80 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22342C010();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v78 = (char *)&v72 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v79 = (char *)&v72 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v72 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v72 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v85 = (char *)&v72 - v24;
  int v25 = a1;
  id v26 = objc_msgSend(a1, sel_fileURL);
  if (v26)
  {
    char v27 = v26;
    uint64_t v77 = v6;
    sub_22342BFD0();

    uint64_t v29 = v12 + 32;
    int v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v28(v10, v23, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    uint64_t v82 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v28(v85, v10, v11);
      id v30 = objc_msgSend(v25, sel_UUID);
      if (v30)
      {
        int v31 = v30;
        uint64_t v32 = sub_22342C300();
        uint64_t v34 = v33;

        id v35 = objc_msgSend(v25, sel_signature);
        if (v35)
        {
          id v36 = v35;
          id v73 = (void (*)(char *, uint64_t, uint64_t))v28;
          uint64_t v74 = v32;
          uint64_t v72 = v29;
          uint64_t v76 = sub_22342C070();
          unint64_t v38 = v37;

          sub_22337BF38();
          unint64_t v75 = v38;
          uint64_t v56 = v11;
          CFAbsoluteTime v57 = (void *)*sub_223321F60(v83, v83[3]);
          LOBYTE(v88[0]) = 0;
          sub_22342BF40();
          uint64_t v58 = (void *)sub_22342C2D0();
          swift_bridgeObjectRelease();
          unsigned int v59 = objc_msgSend(v57, sel_fileExistsAtPath_isDirectory_, v58, v88);

          if (v59 && (v88[0] & 1) != 0)
          {
            uint64_t v60 = v56;
          }
          else
          {
            uint64_t v61 = (void **)sub_223321F60(v83, v83[3]);
            sub_22336DC7C((uint64_t)v20, 1, *v61);
            uint64_t v60 = v56;
          }
          unint64_t v62 = v75;
          (*(void (**)(char *, uint64_t))(v82 + 8))(v20, v60);
          uint64_t v63 = v79;
          sub_22337BF38();
          uint64_t v84 = v60;
          uint64_t v64 = v76;
          v88[0] = sub_22337AB24(v76, v62);
          sub_22331E640(&qword_26AD60280);
          sub_22333787C();
          sub_22342C2B0();
          swift_bridgeObjectRelease();
          v88[0] = v74;
          v88[1] = v34;
          sub_22342C3B0();
          sub_22342C3B0();
          swift_bridgeObjectRelease();
          uint64_t v65 = (uint64_t)v78;
          sub_22342BFA0();
          swift_bridgeObjectRelease();
          CFAbsoluteTime v66 = (void **)sub_223321F60(v83, v83[3]);
          uint64_t v67 = (uint64_t)v85;
          sub_22336DB98((uint64_t)v85, v65, *v66);
          uint64_t v68 = v84;
          (*(void (**)(char *, uint64_t))(v82 + 8))(v63, v84);
          sub_22331EA68(v64, v62);
          uint64_t v69 = v86;
          CFAbsoluteTime v70 = v73;
          v73((char *)v86, v67, v68);
          uint64_t v71 = type metadata accessor for SyncFiles.FileMove();
          v70((char *)v69 + *(int *)(v71 + 20), v65, v68);
          sub_22331E640(&qword_26AD5F3F8);
          return swift_storeEnumTagMultiPayload();
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v51 = (void **)sub_223321F60(v83, v83[3]);
      uint64_t v52 = (uint64_t)v85;
      sub_22336DAD4((uint64_t)v85, *v51);
      uint64_t v53 = v82;
      sub_22337D47C();
      uint64_t v54 = swift_allocError();
      *uint64_t v55 = 1;
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v11);
      *id v86 = v54;
      sub_22331E640(&qword_26AD5F3F8);
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_22337D41C((uint64_t)v10);
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_22342C200();
  sub_223323374(v39, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  id v40 = v25;
  CFAbsoluteTime v41 = sub_22342C1E0();
  os_log_type_t v42 = sub_22342C700();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = (void *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v88[0] = v45;
    *(_DWORD *)uint64_t v43 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_22339BC14(v84, a3, v88);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 2112;
    uint64_t v87 = (uint64_t)v40;
    id v46 = v40;
    sub_22342CA10();
    void *v44 = v40;

    _os_log_impl(&dword_223317000, v41, v42, "Error, we failed to get the fileURL for with key %s for %@", (uint8_t *)v43, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v44, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v45, -1, -1);
    MEMORY[0x223CB62D0](v43, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v47 = v86;
  sub_22337D47C();
  uint64_t v48 = swift_allocError();
  *uint64_t v49 = 0;
  uint64_t *v47 = v48;
  sub_22331E640(&qword_26AD5F3F8);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22337BF38()
{
  uint64_t v0 = sub_22342C010();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - v5;
  id v7 = (id)IMSMSDirectoryURL();
  sub_22342BFD0();

  uint64_t v10 = 1668184435;
  unint64_t v11 = 0xE400000000000000;
  sub_223323208();
  sub_22342CA40();
  sub_22342BF90();
  swift_bridgeObjectRelease();
  uint64_t v10 = 0x737465737361;
  unint64_t v11 = 0xE600000000000000;
  sub_22342CA40();
  sub_22342BF90();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  return ((uint64_t (*)(char *, uint64_t))v8)(v6, v0);
}

uint64_t sub_22337C0F4()
{
  sub_22342BE60();
  swift_allocObject();
  uint64_t result = sub_22342BE50();
  qword_267FA2BA8 = result;
  return result;
}

uint64_t sub_22337C134()
{
  sub_22342BEA0();
  swift_allocObject();
  uint64_t v0 = sub_22342BE90();
  uint64_t result = sub_22342BE70();
  qword_267FA2BB0 = v0;
  return result;
}

uint64_t sub_22337C180(void *a1)
{
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22342C010();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v28 - v10;
  id v12 = objc_msgSend(a1, sel_fileURL);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_22342BFD0();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v4, v9, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v14(v11, v4, v5);
      sub_22342C140();
      char v15 = sub_22337C580((uint64_t)v11);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return v15 & 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_22337D41C((uint64_t)v4);
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_22342C200();
  sub_223323374(v16, (uint64_t)qword_26AD63108);
  id v17 = a1;
  uint64_t v18 = sub_22342C1E0();
  os_log_type_t v19 = sub_22342C700();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v29 = v21;
    *(_DWORD *)unint64_t v20 = 136315138;
    id v22 = objc_msgSend(v17, sel_UUID);
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = sub_22342C300();
      unint64_t v26 = v25;
    }
    else
    {
      unint64_t v26 = 0xE800000000000000;
      uint64_t v24 = 0x3E6469206C696E3CLL;
    }
    uint64_t v28 = sub_22339BC14(v24, v26, &v29);
    sub_22342CA10();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v18, v19, "Asset %s has no file url.", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v21, -1, -1);
    MEMORY[0x223CB62D0](v20, -1, -1);
  }
  else
  {
  }
  char v15 = 0;
  return v15 & 1;
}

uint64_t sub_22337C580(uint64_t a1)
{
  uint64_t v2 = v1;
  id v8[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = (void *)*sub_223321F60(v2, v2[3]);
  LOBYTE(v8[0]) = 0;
  sub_22342BF40();
  uint64_t v5 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  LODWORD(v4) = objc_msgSend(v4, sel_fileExistsAtPath_isDirectory_, v5, v8);

  uint64_t result = 0;
  if (v4)
  {
    uint64_t v7 = (void **)sub_223321F60(v2, v2[3]);
    sub_22336DAD4(a1, *v7);
    return 1;
  }
  return result;
}

unint64_t sub_22337C9A4()
{
  uint64_t v0 = sub_22342BF50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22342C010();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  unint64_t v11 = (char *)&v20 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v20 - v12;
  id v14 = (id)IMSMSDirectoryURL();
  sub_22342BFD0();

  unint64_t v21 = 0xD00000000000001BLL;
  unint64_t v22 = 0x8000000223436CD0;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06E38], v0);
  sub_223323208();
  sub_22342BFF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  sub_22342BFB0();
  v15(v11, v4);
  uint64_t v16 = sub_22342C020();
  unint64_t v18 = v17;
  if (qword_267FA2080 != -1) {
    swift_once();
  }
  sub_22331E640(&qword_267FA2BB8);
  sub_22337D3B4(&qword_267FA2BC8);
  sub_22342BE40();
  v15(v13, v4);
  sub_22331EA68(v16, v18);
  return v21;
}

uint64_t sub_22337CE90(uint8_t *a1)
{
  id v36 = a1;
  uint64_t v1 = sub_22342BF50();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22342C010();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v35 - v11;
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)v35 - v13;
  id v15 = (id)IMSMSDirectoryURL();
  sub_22342BFD0();

  unint64_t v38 = (uint8_t *)0xD00000000000001BLL;
  unint64_t v39 = 0x8000000223436CD0;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F06E50], v1);
  sub_223323208();
  sub_22342BFF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v16 = v5;
  unint64_t v17 = v14;
  swift_bridgeObjectRelease();
  unint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v16);
  sub_22342BFB0();
  uint64_t v40 = v16;
  v18(v12, v16);
  if (qword_267FA2088 != -1) {
    swift_once();
  }
  unint64_t v38 = v36;
  sub_22331E640(&qword_267FA2BB8);
  sub_22337D3B4(&qword_267FA2BC0);
  os_log_type_t v19 = v37;
  uint64_t v20 = sub_22342BE80();
  if (v19)
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_22342C200();
    sub_223323374(v24, (uint64_t)qword_26AD63108);
    unint64_t v25 = v19;
    unint64_t v26 = v19;
    char v27 = sub_22342C1E0();
    os_log_type_t v28 = sub_22342C700();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      id v30 = (void *)swift_slowAlloc();
      id v36 = v29;
      unint64_t v37 = v18;
      *(_DWORD *)uint64_t v29 = 138412290;
      v35[1] = v29 + 4;
      int v31 = v19;
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
      unint64_t v38 = (uint8_t *)v32;
      unint64_t v18 = v37;
      sub_22342CA10();
      *id v30 = v32;
      unint64_t v17 = v14;

      uint64_t v33 = v36;
      _os_log_impl(&dword_223317000, v27, v28, "Failed to write diagnostics binary plist: %@", v36, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v30, -1, -1);
      MEMORY[0x223CB62D0](v33, -1, -1);
    }
    else
    {
    }
    return ((uint64_t (*)(char *, uint64_t))v18)(v17, v40);
  }
  else
  {
    uint64_t v22 = v20;
    unint64_t v23 = v21;
    sub_22342C080();
    v18(v14, v40);
    return sub_22331EA68(v22, v23);
  }
}

uint64_t sub_22337D3B4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2233378D8(&qword_267FA2BB8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22337D41C(uint64_t a1)
{
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22337D47C()
{
  unint64_t result = qword_267FA2BD0;
  if (!qword_267FA2BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2BD0);
  }
  return result;
}

uint64_t sub_22337D4D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SyncFiles.FileMove()
{
  uint64_t result = qword_26AD5F238;
  if (!qword_26AD5F238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22337D564()
{
  uint64_t v0 = sub_22342BF50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22342C010();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v17 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  id v14 = (id)IMSMSDirectoryURL();
  sub_22342BFD0();

  v17[2] = 0xD00000000000001BLL;
  v17[3] = 0x8000000223436CD0;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06E50], v0);
  sub_223323208();
  sub_22342BFF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  id v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  sub_22342BFB0();
  v15(v11, v4);
  id v16 = objc_msgSend(self, sel_defaultManager);
  sub_22336DAD4((uint64_t)v13, v16);
  v15(v13, v4);
}

unsigned char *storeEnumTagSinglePayload for SyncFiles.FileErrors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22337DA70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncFiles.FileErrors()
{
  return &type metadata for SyncFiles.FileErrors;
}

uint64_t initializeWithCopy for SyncFiles(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for SyncFiles(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for SyncFiles(uint64_t a1, uint64_t a2)
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SyncFiles()
{
  return &type metadata for SyncFiles;
}

uint64_t *sub_22337DB78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22342C010();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_22337DC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22342C010();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t sub_22337DD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22342C010();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22337DD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22342C010();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22337DE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22342C010();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22337DEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22342C010();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22337DF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22337DF74);
}

uint64_t sub_22337DF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22342C010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_22337DFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22337DFF4);
}

uint64_t sub_22337DFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22342C010();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_22337E064()
{
  uint64_t result = sub_22342C010();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22337E0F4()
{
  unint64_t result = qword_267FA2BE0;
  if (!qword_267FA2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2BE0);
  }
  return result;
}

void sub_22337E148(uint64_t a1, void *a2, int a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v36 = a7;
  uint64_t v37 = a5;
  uint64_t v40 = a4;
  int v39 = a3;
  id v43 = a2;
  uint64_t v8 = sub_22331E640(&qword_26AD602C8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v41 = v9 + 16;
  v12(v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v38 = v13 + v10;
  uint64_t v14 = swift_allocObject();
  id v15 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v15(v14 + v13, v11, v8);
  sub_22342C890();
  v12(v11, a1, v8);
  uint64_t v16 = swift_allocObject();
  os_log_type_t v42 = v15;
  v15(v16 + v13, v11, v8);
  sub_22342C8A0();
  if (v39)
  {
    v12(v11, a1, v8);
    uint64_t v17 = swift_allocObject();
    v42(v17 + v13, v11, v8);
    id v46 = sub_22337EDD8;
    uint64_t v47 = v17;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22337EBEC;
    uint64_t v45 = &unk_26D66F358;
    unint64_t v18 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v43, sel_setPerRecordProgressBlock_, v18);
    _Block_release(v18);
  }
  v12(v11, a1, v8);
  uint64_t v19 = swift_allocObject();
  v42(v19 + v13, v11, v8);
  id v20 = v43;
  sub_22342C870();
  if ((*v40 & 1) == 0)
  {
    *uint64_t v40 = 1;
    uint64_t v21 = v37;
    uint64_t v22 = *(void *)(v37 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudDatabase + 24);
    uint64_t v23 = *(void *)(v37 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudDatabase + 32);
    sub_223321F60((void *)(v37 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudDatabase), v22);
    (*(void (**)(id, uint64_t, uint64_t))(v23 + 8))(v20, v22, v23);
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_22342C200();
    sub_223323374(v24, (uint64_t)qword_26AD63108);
    sub_223322120(v36, (uint64_t)aBlock);
    swift_unknownObjectRetain_n();
    id v25 = v20;
    unint64_t v26 = sub_22342C1E0();
    os_log_type_t v27 = sub_22342C720();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v50 = v30;
      *(_DWORD *)uint64_t v28 = 136315650;
      int v31 = sub_223321F60(aBlock, (uint64_t)v45);
      uint64_t v32 = *v31;
      unint64_t v33 = v31[1];
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_22339BC14(v32, v33, &v50);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)aBlock);
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v48 = 0x2E636E7973;
      unint64_t v49 = 0xE500000000000000;
      sub_223321F60((void *)(v21 + 16), *(void *)(v21 + 40));
      sub_2233C7210();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      sub_22342C3B0();
      sub_22342C170();
      sub_223337988();
      sub_22342CF10();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      uint64_t v48 = sub_22339BC14(v48, v49, &v50);
      sub_22342CA10();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2112;
      uint64_t v48 = (uint64_t)v25;
      id v34 = v25;
      sub_22342CA10();
      *uint64_t v29 = v25;

      _os_log_impl(&dword_223317000, v26, v27, "Added write operation for %s (sync: %s): %@", (uint8_t *)v28, 0x20u);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v30, -1, -1);
      MEMORY[0x223CB62D0](v28, -1, -1);
    }
    else
    {
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)aBlock);

      swift_unknownObjectRelease_n();
    }
  }
}

uint64_t sub_22337E7AC(void *a1, void *a2, char a3)
{
  uint64_t v6 = sub_22331E640(&qword_26AD602A8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v14 = a1;
    id v15 = a2;
    char v16 = 1;
    sub_22337EE80(a2);
    id v11 = a1;
  }
  else
  {
    uint64_t v14 = a2;
    id v15 = 0;
    char v16 = 0;
    id v10 = a2;
  }
  sub_22331E640(&qword_26AD602C8);
  sub_22342C600();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_22337E8DC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_22337EA40(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22337E7AC);
}

uint64_t sub_22337E8F4(void *a1, void *a2, char a3)
{
  uint64_t v6 = sub_22331E640(&qword_26AD602A8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v14 = a1;
    id v15 = a2;
    char v16 = 65;
    id v11 = a1;
    sub_22337EE74(a2, 1);
  }
  else
  {
    uint64_t v14 = a1;
    id v15 = 0;
    char v16 = 64;
    id v10 = a1;
  }
  sub_22331E640(&qword_26AD602C8);
  sub_22342C600();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_22337EA28(uint64_t a1, uint64_t a2, char a3)
{
  return sub_22337EA40(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22337E8F4);
}

uint64_t sub_22337EA40(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = a3 & 1;
  uint64_t v8 = *(void *)(sub_22331E640(&qword_26AD602C8) - 8);
  uint64_t v9 = v4 + ((*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a4(a1, a2, v7, v9);
}

uint64_t sub_22337EAE0(void *a1, double a2)
{
  uint64_t v4 = sub_22331E640(&qword_26AD602A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = a1;
  *(double *)&v10[2] = a2;
  char v11 = 0x80;
  id v8 = a1;
  sub_22331E640(&qword_26AD602C8);
  sub_22342C600();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_22337EBEC(uint64_t a1, void *a2, double a3)
{
  uint64_t v5 = *(void (**)(double))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a3);
  swift_release();
}

uint64_t sub_22337EC64(void *a1, char a2)
{
  if (a2) {
    id v2 = a1;
  }
  sub_22331E640(&qword_26AD602C8);
  return sub_22342C610();
}

uint64_t sub_22337ECBC(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_22331E640(&qword_26AD602C8);
  return sub_22337EC64(a1, v3);
}

uint64_t sub_22337ED44()
{
  uint64_t v1 = sub_22331E640(&qword_26AD602C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_22337EDD8(void *a1, double a2)
{
  sub_22331E640(&qword_26AD602C8);
  return sub_22337EAE0(a1, a2);
}

uint64_t sub_22337EE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_22337EE6C()
{
  return swift_release();
}

id sub_22337EE74(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

id sub_22337EE80(id a1)
{
  return a1;
}

void _s16ZoneWritesResultOwxx(uint64_t a1)
{
}

uint64_t _s16ZoneWritesResultOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2233417C4(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s16ZoneWritesResultOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2233417C4(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_223341738(v6, v7, v8);
  return a1;
}

uint64_t _s16ZoneWritesResultOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  unsigned __int8 v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_223341738(v4, v5, v6);
  return a1;
}

uint64_t _s16ZoneWritesResultOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s16ZoneWritesResultOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_22337F034(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_22337F040(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_22337F050(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *_s16ZoneWritesResultOMa()
{
  return &_s16ZoneWritesResultON;
}

uint64_t sub_22337F074()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for TimeoutManager()
{
  return self;
}

uint64_t sub_22337F0D0(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  v2[6] = swift_task_alloc();
  uint64_t v3 = sub_22342C010();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22337F1C0, 0, 0);
}

uint64_t sub_22337F1C0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for ChatRecord(0) + 120));
  if (v2 && *(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    sub_22339C2E8(28775, 0xE200000000000000);
    if (v3)
    {
      uint64_t v4 = v0[7];
      uint64_t v5 = v0[8];
      uint64_t v6 = v0[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_22342BFE0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
      {
        uint64_t v7 = v0[6];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22337D41C(v7);
        goto LABEL_7;
      }
      id v10 = (void *)v0[4];
      uint64_t v11 = v0[9];
      (*(void (**)(uint64_t, void, void))(v0[8] + 32))(v11, v0[6], v0[7]);
      uint64_t v12 = (void **)sub_223321F60(v10, v10[3]);
      sub_22336DAD4(v11, *v12);
      (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_7:
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_22337F610()
{
  char v3 = (uint64_t (__cdecl *)())((char *)&dword_267FA2C00 + dword_267FA2C00);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_223366AA4;
  return v3();
}

uint64_t sub_22337F6B0(uint64_t a1)
{
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_223331EB0;
  return sub_22337F0D0(a1);
}

uint64_t sub_22337F744()
{
  v1[7] = v0;
  v1[8] = type metadata accessor for ChatRecord(0);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22337F7F4, 0, 0);
}

uint64_t sub_22337F7F4()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[7];
  v0[12] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[13] = v2;
  if (v2)
  {
    uint64_t v3 = qword_26AD630F8;
    v0[14] = qword_26AD630F8;
    if (v3)
    {
      uint64_t v4 = qword_26AD63100;
      v0[15] = qword_26AD63100;
      v0[16] = *(void *)(v4 + 16);
      v0[17] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0x3A06000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      v0[18] = sub_22342C5B0();
      uint64_t v6 = sub_22342C560();
      return MEMORY[0x270FA2498](sub_22337FC18, v6, v5);
    }
    else
    {
      sub_22334283C();
      swift_allocError();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v19 = (uint64_t (*)(void))v0[1];
      return v19();
    }
  }
  else
  {
    if (qword_26AD60210 != -1)
    {
      swift_once();
      uint64_t v1 = v0[7];
    }
    uint64_t v8 = v0[9];
    uint64_t v7 = v0[10];
    uint64_t v9 = sub_22342C200();
    sub_223323374(v9, (uint64_t)qword_26AD63330);
    sub_223380354(v1, v7);
    sub_223380354(v1, v8);
    id v10 = sub_22342C1E0();
    os_log_type_t v11 = sub_22342C6E0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = v0[10];
    if (v12)
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v28[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v16 = v0[10];
      uint64_t v27 = v15;
      if (*(void *)(v13 + 24))
      {
        uint64_t v17 = *(void *)(v16 + 16);
        unint64_t v18 = *(void *)(v13 + 24);
      }
      else
      {
        unint64_t v18 = 0xE500000000000000;
        uint64_t v17 = 0x3E6C696E3CLL;
      }
      uint64_t v21 = v0[11];
      uint64_t v22 = v0[9];
      swift_bridgeObjectRetain();
      v0[4] = sub_22339BC14(v17, v18, v28);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233803B8(v16);
      *(_WORD *)(v14 + 12) = 2080;
      sub_223380354(v22, v21);
      uint64_t v23 = sub_22342C360();
      v0[5] = sub_22339BC14(v23, v24, v28);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233803B8(v22);
      _os_log_impl(&dword_223317000, v10, v11, "Service %s is not supported, do not import chat %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v27, -1, -1);
      MEMORY[0x223CB62D0](v14, -1, -1);
    }
    else
    {
      uint64_t v20 = v0[9];
      sub_2233803B8(v0[10]);
      sub_2233803B8(v20);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v25 = (uint64_t (*)(void))v0[1];
    return v25(0);
  }
}

uint64_t sub_22337FC18()
{
  *(unsigned char *)(v0 + 192) = (*(uint64_t (**)(void, void))(v0 + 128))(*(void *)(v0 + 96), *(void *)(v0 + 104)) & 1;
  return MEMORY[0x270FA2498](sub_22337FC94, 0, 0);
}

uint64_t sub_22337FC94()
{
  uint64_t v46 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 192);
  if (v1 != 1)
  {
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v17 = sub_22342C200();
    sub_223323374(v17, (uint64_t)qword_26AD63330);
    sub_223380354(v16, v15);
    sub_223380354(v16, v14);
    uint64_t v9 = sub_22342C1E0();
    os_log_type_t v18 = sub_22342C6E0();
    BOOL v19 = os_log_type_enabled(v9, v18);
    uint64_t v20 = *(void *)(v0 + 80);
    if (v19)
    {
      os_log_type_t v43 = v18;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v45[0] = v42;
      *(_DWORD *)uint64_t v21 = 136315394;
      unint64_t v22 = *(void *)(v20 + 24);
      uint64_t v23 = *(void *)(v0 + 80);
      unsigned int v44 = v1;
      if (v22)
      {
        uint64_t v24 = *(void *)(v23 + 16);
        unint64_t v25 = v22;
      }
      else
      {
        unint64_t v25 = 0xE500000000000000;
        uint64_t v24 = 0x3E6C696E3CLL;
      }
      uint64_t v36 = *(void *)(v0 + 88);
      uint64_t v37 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 32) = sub_22339BC14(v24, v25, v45);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233803B8(v23);
      *(_WORD *)(v21 + 12) = 2080;
      sub_223380354(v37, v36);
      uint64_t v38 = sub_22342C360();
      *(void *)(v0 + 40) = sub_22339BC14(v38, v39, v45);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233803B8(v37);
      _os_log_impl(&dword_223317000, v9, v43, "Service %s is not supported, do not import chat %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v42, -1, -1);
      MEMORY[0x223CB62D0](v21, -1, -1);

      uint64_t v1 = v44;
      goto LABEL_26;
    }
    uint64_t v26 = *(void *)(v0 + 72);
    sub_2233803B8(*(void *)(v0 + 80));
    sub_2233803B8(v26);
LABEL_15:

LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v40(v1);
  }
  uint64_t v2 = (uint64_t *)(*(void *)(v0 + 56) + *(int *)(*(void *)(v0 + 64) + 68));
  unint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    uint64_t v5 = self;
    swift_bridgeObjectRetain();
    if ((objc_msgSend(v5, sel_supportsBusinessChat) & 1) == 0)
    {
      uint64_t v6 = (void *)sub_22342C2D0();
      int v7 = MEMORY[0x223CB5AA0]();

      if (v7)
      {
        if (qword_26AD60210 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_22342C200();
        sub_223323374(v8, (uint64_t)qword_26AD63330);
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_22342C1E0();
        os_log_type_t v10 = sub_22342C6E0();
        if (os_log_type_enabled(v9, v10))
        {
          os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
          uint64_t v12 = swift_slowAlloc();
          v45[0] = v12;
          *(_DWORD *)os_log_type_t v11 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 48) = sub_22339BC14(v4, v3, v45);
          sub_22342CA10();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_223317000, v9, v10, "Business chat is not supported, do not import chat %s", v11, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x223CB62D0](v12, -1, -1);
          uint64_t v13 = v11;
          uint64_t v1 = 1;
          MEMORY[0x223CB62D0](v13, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = qword_26AD630F8;
  *(void *)(v0 + 152) = qword_26AD630F8;
  if (v27)
  {
    uint64_t v28 = *(void *)(v0 + 88);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v30 = qword_26AD63100;
    *(void *)(v0 + 160) = qword_26AD63100;
    sub_223380354(v29, v28);
    int v31 = (objc_class *)type metadata accessor for ChatRecordKeyedDataSource(0);
    id v32 = objc_allocWithZone(v31);
    sub_223380354(v28, (uint64_t)v32 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord);
    *(void *)(v0 + 16) = v32;
    *(void *)(v0 + 24) = v31;
    *(void *)(v0 + 168) = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
    sub_2233803B8(v28);
    *(void *)(v0 + 176) = *(void *)(v30 + 8);
    *(void *)(v0 + 184) = (v30 + 8) & 0xFFFFFFFFFFFFLL | 0xC482000000000000;
    uint64_t v34 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_2233802BC, v34, v33);
  }
  else
  {
    sub_22334283C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
    return v35();
  }
}

uint64_t sub_2233802BC()
{
  uint64_t v1 = *(void **)(v0 + 168);
  (*(void (**)(void *))(v0 + 176))(v1);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t sub_223380354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChatRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2233803B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChatRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_223380414(uint64_t a1)
{
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActionRecord();
  if (*(void *)(a1 + *(int *)(v5 + 68) + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_223332B54(a1 + *(int *)(v5 + 64), (uint64_t)v4);
  uint64_t v7 = sub_22342C130();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
  {
    uint64_t v9 = (void *)sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    os_log_type_t v10 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithSender_time_guid_type_, v6, v9, v10, 3);

  if (v11) {
    sub_223380838(a1);
  }
  else {
    __break(1u);
  }
}

void sub_2233805F8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  if (v4)
  {
    objc_msgSend(v3, sel_setActionType_, objc_msgSend(v4, sel_groupActionType));
    sub_223383158();
    if (v5)
    {
      id v13 = (id)sub_22342C2D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v13 = 0;
    }
    objc_msgSend(v3, sel_setOtherHandle_, v13);
  }
  else
  {
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_22342C200();
    sub_223323374(v8, (uint64_t)qword_26AD63330);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_22342C1E0();
    os_log_type_t v10 = sub_22342C700();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v14 = v12;
      *(_DWORD *)id v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_22339BC14(a2, a3, &v14);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v9, v10, "No Proto for IMGroupActionItem %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v12, -1, -1);
      MEMORY[0x223CB62D0](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_223380838(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_223380894(char a1)
{
  return qword_223430FD8[a1];
}

uint64_t sub_2233808A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_22342BF20();
  int v6 = CKCanRetryForError();

  if (v6)
  {
    uint64_t v7 = (void *)sub_22342BF20();
    id v8 = (id)CKEarliestStartDateAfterError();

    if (v8)
    {
      sub_22342C100();

      uint64_t v9 = sub_22342C130();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
    }
    else
    {
      uint64_t v13 = sub_22342C130();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    }
    return sub_223332AEC((uint64_t)v4, a1);
  }
  else
  {
    uint64_t v10 = sub_22342C130();
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v11(a1, 1, 1, v10);
  }
}

ValueMetadata *type metadata accessor for CloudKitSyncRetryStrategy()
{
  return &type metadata for CloudKitSyncRetryStrategy;
}

uint64_t sub_223380A6C(uint64_t a1)
{
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 16) + 16) && (sub_22339E5E0(a1), (v3 & 1) != 0)) {
    return swift_unknownObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_223380B0C(uint64_t a1)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 16) + 16)) {
    return 0;
  }
  sub_22339E5E0(a1);
  if ((v3 & 1) == 0) {
    return 0;
  }
  uint64_t v4 = swift_dynamicCastObjCProtocolConditional();
  if (v4) {
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t sub_223380BD8()
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v0 + 16) + 16)) {
    return 0;
  }
  sub_22339E5E0(2);
  if ((v1 & 1) == 0) {
    return 0;
  }
  uint64_t v2 = swift_dynamicCastObjCProtocolConditional();
  if (v2) {
    swift_unknownObjectRetain();
  }
  return v2;
}

uint64_t type metadata accessor for RecordStoreRegistry()
{
  return self;
}

unint64_t sub_223380D74(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 11:
    case 12:
    case 16:
    case 18:
    case 27:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD000000000000022;
      break;
    case 14:
      unint64_t result = 0xD000000000000027;
      break;
    case 15:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000017;
      break;
    case 19:
      unint64_t result = 0xD000000000000014;
      break;
    case 20:
      unint64_t result = 0xD000000000000016;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 23:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 24:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 25:
      unint64_t result = 0xD000000000000026;
      break;
    case 26:
      unint64_t result = 0xD000000000000028;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_223380FDC(uint64_t a1)
{
  uint64_t v2 = sub_22342CC30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22342CC40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (long long *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(long long *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(long long *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F8DCB0])
  {
    (*(void (**)(long long *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v11 = sub_22331E640(&qword_267FA2C08);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, (char *)v9 + *(int *)(v11 + 48), v2);
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0x6D73694D65707954;
    unint64_t v13 = 0xEE00203A68637461;
LABEL_10:
    uint64_t v26 = v12;
    unint64_t v27 = v13;
    uint64_t v20 = sub_22342CC10();
    uint64_t v21 = sub_22331E640(&qword_267FA2C10);
    MEMORY[0x223CB4D60](v20, v21);
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    sub_22342CC20();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    uint64_t v19 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v19;
  }
  if (v10 == *MEMORY[0x263F8DCC0])
  {
    (*(void (**)(long long *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v14 = sub_22331E640(&qword_267FA2C08);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, (char *)v9 + *(int *)(v14 + 48), v2);
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0x746F4E65756C6156;
    unsigned int v15 = 1853189958;
LABEL_9:
    unint64_t v13 = v15 | 0xEF203A6400000000;
    goto LABEL_10;
  }
  if (v10 != *MEMORY[0x263F8DCA8])
  {
    if (v10 != *MEMORY[0x263F8DCB8])
    {
      (*(void (**)(long long *, uint64_t))(v7 + 8))(v9, v6);
      return 0xD000000000000016;
    }
    (*(void (**)(long long *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, long long *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0x72726F4361746144;
    unsigned int v15 = 1702129781;
    goto LABEL_9;
  }
  (*(void (**)(long long *, uint64_t))(v7 + 96))(v9, v6);
  uint64_t v16 = (char *)v9 + *(int *)(sub_22331E640(&qword_267FA2C18) + 48);
  sub_223332E10(v9, (uint64_t)&v26);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v16, v2);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_22342CBB0();
  sub_22342C3B0();
  sub_223321F60(&v26, v28);
  sub_22342CF40();
  sub_22342C3B0();
  uint64_t v17 = sub_22342CC10();
  uint64_t v18 = sub_22331E640(&qword_267FA2C10);
  MEMORY[0x223CB4D60](v17, v18);
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22342C3B0();
  sub_22342CC20();
  sub_22342C3B0();
  swift_bridgeObjectRelease();
  uint64_t v19 = v24;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)&v26);
  return v19;
}

void sub_223381530(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_22331E640(&qword_26AD5EF40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22342CC40();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[5] = (uint64_t)a2;
  id v14 = a2;
  sub_22331E640(&qword_26AD5EFB0);
  int v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v15)
  {
    v16(v9, 0, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    id v17 = objc_msgSend(self, sel_sharedInstance);
    if (v17)
    {
      uint64_t v18 = v17;
      sub_223380D74(a1);
      uint64_t v19 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      uint64_t v20 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v21, v13, v10);
      unint64_t v22 = (void *)sub_22342BF20();

      uint64_t v23 = (void *)sub_22342C2D0();
      sub_223380FDC((uint64_t)v13);
      uint64_t v24 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_forceAutoBugCaptureWithSubType_errorPayload_type_context_, v19, v22, v23, v24);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  v16(v9, 1, 1, v10);
  sub_2233818F4((uint64_t)v9);
  id v25 = objc_msgSend(self, sel_sharedInstance);
  if (!v25)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v26 = v25;
  sub_223380D74(a1);
  unint64_t v27 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)sub_22342BF20();
  uint64_t v29 = (void *)sub_22342C2D0();
  if (!a4)
  {
    swift_getErrorValue();
    sub_223349728(v31[2]);
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_forceAutoBugCaptureWithSubType_errorPayload_type_context_, v27, v28, v29, v30);
}

uint64_t sub_2233818F4(uint64_t a1)
{
  uint64_t v2 = sub_22331E640(&qword_26AD5EF40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SyncDiagnosticError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2233819F0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncDiagnosticError()
{
  return &type metadata for SyncDiagnosticError;
}

unint64_t sub_223381A2C()
{
  unint64_t result = qword_267FA2C20;
  if (!qword_267FA2C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267FA2C20);
  }
  return result;
}

uint64_t sub_223381A80(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_223372574(0, v1, 0);
  uint64_t v2 = v32;
  uint64_t result = sub_2234077BC(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v25 = v3 + 80;
  int64_t v26 = v1;
  int v27 = v5;
  uint64_t v28 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v29 = v7;
    uint64_t v12 = *(void **)(*(void *)(v3 + 48) + 8 * v6);
    unint64_t v13 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v6);
    uint64_t v14 = v13[1];
    uint64_t v15 = v3;
    unint64_t v16 = *(void *)(v32 + 16);
    unint64_t v17 = *(void *)(v32 + 24);
    uint64_t v30 = *v13;
    int64_t v31 = v16 + 1;
    id v18 = v12;
    uint64_t result = swift_bridgeObjectRetain();
    if (v16 >= v17 >> 1) {
      uint64_t result = sub_223372574(v17 > 1, v31, 1);
    }
    *(void *)(v32 + 16) = v31;
    uint64_t v19 = v32 + 32 * v16;
    *(void *)(v19 + 32) = v18;
    *(void *)(v19 + 40) = v30;
    *(void *)(v19 + 48) = v14;
    *(unsigned char *)(v19 + 56) = 1;
    int64_t v9 = 1 << *(unsigned char *)(v15 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v28;
    uint64_t v20 = *(void *)(v28 + 8 * v11);
    if ((v20 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v15;
    int v5 = v27;
    if (*(_DWORD *)(v15 + 36) != v27) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v26;
    }
    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v26;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(v25 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v29 + 1;
    uint64_t v6 = v9;
    if (v29 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_223381CB0(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_223381D40, v1, 0);
}

uint64_t sub_223381D40()
{
  v0[6] = *(void *)(v0[5] + 112);
  v0[2] = 0;
  sub_22342C5B0();
  v0[7] = sub_22342C5A0();
  uint64_t v2 = sub_22342C560();
  return MEMORY[0x270FA2498](sub_223381E18, v2, v1);
}

uint64_t sub_223381E18()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  swift_release();
  id v4 = objc_msgSend(v1, sel_batchOfRecordIDsToDeleteWithLimit_error_, v3, v0 + 2);
  int v5 = (void *)v0[2];
  v0[8] = v4;
  v0[9] = v5;
  id v6 = v5;
  return MEMORY[0x270FA2498](sub_223381EF0, v2, 0);
}

uint64_t sub_223381EF0()
{
  uint64_t v1 = (void *)v0[8];
  if (v1)
  {
    uint64_t v2 = v0[5];
    sub_22334199C(0, (unint64_t *)&qword_26AD60338);
    sub_2233829B0();
    uint64_t v3 = sub_22342C270();

    *(void *)(v2 + 128) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_223381A80(v3);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_223323FAC(v4);
    uint64_t v7 = v6;
LABEL_7:
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v12(v5, v7);
  }
  uint64_t v8 = (void *)v0[9];
  int64_t v9 = (void *)sub_22342BF30();

  swift_willThrow();
  int64_t v10 = (void *)sub_22342BF20();
  sub_22334199C(0, (unint64_t *)&qword_26AD60458);
  if (qword_26AD603E8 != -1) {
    swift_once();
  }
  if (sub_22342C9E0())
  {
    uint64_t v5 = sub_223323FAC(MEMORY[0x263F8EE78]);
    uint64_t v7 = v11;

    goto LABEL_7;
  }
  swift_willThrow();

  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_223382130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v6 + 72) = a5;
  *(void *)(v6 + 56) = a4;
  *(void *)(v6 + 64) = v5;
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a3;
  return MEMORY[0x270FA2498](sub_223382158, v5, 0);
}

uint64_t sub_223382158()
{
  uint64_t v62 = v0;
  if (*(unsigned char *)(v0 + 72))
  {
    unint64_t v22 = *(void **)(v0 + 56);
    id v23 = v22;
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v25 = *(void **)(v0 + 48);
    unint64_t v24 = *(void **)(v0 + 56);
    uint64_t v26 = sub_22342C200();
    sub_223323374(v26, (uint64_t)qword_26AD63108);
    id v27 = v25;
    sub_22337EE74(v24, 1);
    swift_unknownObjectRetain();
    id v28 = v27;
    sub_22337EE74(v24, 1);
    swift_unknownObjectRetain();
    uint64_t v29 = sub_22342C1E0();
    os_log_type_t v30 = sub_22342C700();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v33 = *(void **)(v0 + 48);
    uint64_t v32 = *(void **)(v0 + 56);
    if (v31)
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v56 = v32;
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v61 = v59;
      *(_DWORD *)uint64_t v34 = 138412802;
      os_log_type_t type = v30;
      *(void *)(v0 + 16) = v33;
      id v36 = v33;
      sub_22342CA10();
      *uint64_t v35 = v33;

      *(_WORD *)(v34 + 12) = 2112;
      id v37 = v22;
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 16) = v38;
      sub_22342CA10();
      v35[1] = v38;
      sub_2233829A4(v56, 1);
      sub_2233829A4(v56, 1);
      *(_WORD *)(v34 + 22) = 2080;
      sub_22342C170();
      sub_223337988();
      uint64_t v39 = sub_22342CF10();
      *(void *)(v0 + 16) = sub_22339BC14(v39, v40, &v61);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_223317000, v29, type, "Delete Sync failed to delete record to CK %@ %@ %s", (uint8_t *)v34, 0x20u);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v35, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v59, -1, -1);
      MEMORY[0x223CB62D0](v34, -1, -1);

      sub_2233829A4(v56, 1);
      goto LABEL_24;
    }
    sub_2233829A4(*(id *)(v0 + 56), 1);

    sub_2233829A4(v32, 1);
    sub_2233829A4(v32, 1);
    swift_unknownObjectRelease_n();
    goto LABEL_19;
  }
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 128);
  if (!*(void *)(v1 + 16))
  {
LABEL_14:
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v41 = *(void **)(v0 + 48);
    uint64_t v42 = sub_22342C200();
    sub_223323374(v42, (uint64_t)qword_26AD63108);
    id v43 = v41;
    uint64_t v29 = sub_22342C1E0();
    os_log_type_t v44 = sub_22342C700();
    BOOL v45 = os_log_type_enabled(v29, v44);
    uint64_t v46 = *(void **)(v0 + 48);
    if (v45)
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = v60;
      *(_DWORD *)uint64_t v47 = 136315138;
      id v48 = objc_msgSend(v46, sel_recordName);
      uint64_t v49 = sub_22342C300();
      unint64_t v51 = v50;

      *(void *)(v0 + 16) = sub_22339BC14(v49, v51, &v61);
      sub_22342CA10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_223317000, v29, v44, "Failed to find %s in batch map for guid update", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v60, -1, -1);
      MEMORY[0x223CB62D0](v47, -1, -1);
    }
    else
    {
    }
LABEL_19:

    goto LABEL_24;
  }
  id v2 = *(id *)(v0 + 48);
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_22339E390((uint64_t)v2);
  uint64_t v4 = *(void **)(v0 + 48);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_14;
  }
  uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v3);
  uint64_t v8 = *v6;
  unint64_t v7 = v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  int64_t v9 = *(void **)(v0 + 48);
  uint64_t v10 = sub_22342C200();
  sub_223323374(v10, (uint64_t)qword_26AD63108);
  id v11 = v9;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22342C1E0();
  os_log_type_t v13 = sub_22342C720();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(void **)(v0 + 48);
  if (v14)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v61 = v58;
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_22339BC14(v8, v7, &v61);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    id v17 = objc_msgSend(v15, sel_zoneID);
    id v18 = objc_msgSend(v17, sel_zoneName);

    uint64_t v19 = sub_22342C300();
    unint64_t v21 = v20;

    *(void *)(v0 + 16) = sub_22339BC14(v19, v21, &v61);
    sub_22342CA10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_223317000, v12, v13, "Deleted %s for %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v58, -1, -1);
    MEMORY[0x223CB62D0](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v52 = *(void *)(v0 + 64);
  uint64_t v53 = *(void **)(v0 + 48);
  swift_beginAccess();
  MEMORY[0x223CB4D20](v53);
  if (*(void *)((*(void *)(v52 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v52 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    sub_22342C4F0();
  sub_22342C530();
  sub_22342C4D0();
  swift_endAccess();
LABEL_24:
  uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
  return v54();
}

uint64_t sub_223382938()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for LiveDataDeleteHandler()
{
  return self;
}

void sub_2233829A4(id a1, char a2)
{
  if (a2) {
}
  }

unint64_t sub_2233829B0()
{
  unint64_t result = qword_26AD60340;
  if (!qword_26AD60340)
  {
    sub_22334199C(255, (unint64_t *)&qword_26AD60338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD60340);
  }
  return result;
}

uint64_t sub_223382A18()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_223382A38, v0, 0);
}

uint64_t sub_223382A38()
{
  v0[6] = *(void *)(v0[5] + 112);
  swift_beginAccess();
  sub_22334199C(0, (unint64_t *)&qword_26AD60338);
  swift_bridgeObjectRetain();
  v0[7] = sub_22342C490();
  swift_bridgeObjectRelease();
  sub_22342C5B0();
  v0[8] = sub_22342C5A0();
  uint64_t v2 = sub_22342C560();
  return MEMORY[0x270FA2498](sub_223382B28, v2, v1);
}

uint64_t sub_223382B28()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v3 = v0[5];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  objc_msgSend(v2, sel_clearTombstonesForRecordIDs_, v1);

  return MEMORY[0x270FA2498](sub_223382BB4, v3, 0);
}

uint64_t sub_223382BB4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 120) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = sub_2233C634C(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_223382C40(uint64_t a1)
{
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActionRecord();
  if (*(void *)(a1 + *(int *)(v5 + 68) + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_223332B54(a1 + *(int *)(v5 + 64), (uint64_t)v4);
  uint64_t v7 = sub_22342C130();
  uint64_t v8 = *(void *)(v7 - 8);
  int64_t v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
  {
    int64_t v9 = (void *)sub_22342C0A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithSender_time_guid_type_, v6, v9, v10, 4);

  if (v11) {
    sub_223380838(a1);
  }
  else {
    __break(1u);
  }
}

uint64_t sub_223382E24()
{
  type metadata accessor for ImportCoordinator();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x263F8EE80];
  qword_26AD63300 = result;
  return result;
}

uint64_t type metadata accessor for ImportCoordinator()
{
  return self;
}

void destroy for ActionProto(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for ActionProto(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  uint64_t v6 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  return a1;
}

uint64_t assignWithCopy for ActionProto(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 24);
  id v11 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v11;
  id v12 = v11;

  id v13 = *(void **)(a1 + 32);
  id v14 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v14;
  id v15 = v14;

  uint64_t v16 = *(void **)(a1 + 40);
  id v17 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v17;
  id v18 = v17;

  uint64_t v19 = *(void **)(a1 + 48);
  unint64_t v20 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v20;
  id v21 = v20;

  return a1;
}

__n128 initializeWithTake for ActionProto(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActionProto(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;

  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActionProto(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionProto(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionProto()
{
  return &type metadata for ActionProto;
}

uint64_t sub_223383158()
{
  switch(*(unsigned char *)v0)
  {
    case 1:
      int v4 = *(void **)(v0 + 24);
      if (!v4) {
        return 0;
      }
      id v2 = v4;
      id v3 = objc_msgSend(v2, sel_otherHandle);
      if (v3) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      uint64_t v5 = *(void **)(v0 + 40);
      if (!v5) {
        return 0;
      }
      id v2 = v5;
      id v3 = objc_msgSend(v2, sel_otherHandle);
      if (!v3) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      id v6 = *(void **)(v0 + 16);
      if (!v6) {
        return 0;
      }
      id v2 = v6;
      id v3 = objc_msgSend(v2, sel_otherHandle);
      if (v3) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 4:
      id v9 = *(void **)(v0 + 32);
      if (!v9) {
        return 0;
      }
      id v2 = v9;
      id v3 = objc_msgSend(v2, sel_otherHandle);
      if (!v3) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
      uint64_t v1 = *(void **)(v0 + 8);
      if (!v1) {
        return 0;
      }
      id v2 = v1;
      id v3 = objc_msgSend(v2, sel_otherHandle);
      if (v3)
      {
LABEL_13:
        uint64_t v7 = v3;
        uint64_t v8 = sub_22342C300();
      }
      else
      {
LABEL_16:

        return 0;
      }
      return v8;
  }
}

uint64_t sub_2233832B8(char *a1, unsigned __int8 *a2)
{
  return sub_2233F4C28(*a1, *a2);
}

uint64_t sub_2233832C4()
{
  return sub_22342D060();
}

uint64_t sub_22338336C()
{
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_223383400()
{
  return sub_22342D060();
}

uint64_t sub_2233834A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_223384110();
  *a1 = result;
  return result;
}

void sub_2233834D4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  if (v2 != 1) {
    unint64_t v4 = 0xE900000000000032;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = 0x6F746F725067736DLL;
  }
  else {
    uint64_t v6 = 0x6570795467736DLL;
  }
  if (!v5) {
    unint64_t v3 = v4;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_223383538()
{
  if (*v0) {
    return 0x6F746F725067736DLL;
  }
  else {
    return 0x6570795467736DLL;
  }
}

uint64_t sub_223383598@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_223384110();
  *a1 = result;
  return result;
}

void sub_2233835C0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2233835CC(uint64_t a1)
{
  unint64_t v2 = sub_223383E5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_223383608(uint64_t a1)
{
  unint64_t v2 = sub_223383E5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_223383644()
{
  uint64_t v1 = *(void **)(v0 + 48);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_messageSummaryInfo);
  if (v3)
  {
    uint64_t v4 = sub_22342C070();
    unint64_t v6 = v5;

    id v3 = (id)sub_22342C050();
    sub_22331EA68(v4, v6);
  }
  id v7 = (id)JWDecodeDictionary();

  if (v7)
  {
    uint64_t v8 = sub_22342C270();

    unint64_t v9 = sub_223342104(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v9 = 0;
  }

  return v9;
}

double sub_223383738@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_223383788(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

void sub_223383788(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_22331E640(&qword_267FA2C40);
  unint64_t v6 = *(void (***)(char *, void))(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_223383E5C();
  sub_22342D080();
  if (v2)
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);

    return;
  }
  char v50 = 0;
  sub_223383EB0();
  sub_22342CE30();
  uint64_t v9 = v48;
  char v50 = 1;
  unint64_t v10 = sub_223322B18();
  sub_22342CDF0();
  unint64_t v11 = v49;
  id v43 = a2;
  os_log_type_t v44 = v6;
  uint64_t v46 = v9;
  uint64_t v47 = v5;
  unint64_t v45 = v10;
  if (v49 >> 60 == 15)
  {
    id v12 = 0;
    id v13 = 0;
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
  }
  else
  {
    id v42 = v48;
    id v17 = (void *)sub_22342C050();
    id v18 = objc_msgSend(v17, sel__FTOptionallyDecompressData);

    if (v18)
    {
      uint64_t v19 = sub_22342C070();
      unint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      unint64_t v21 = 0xF000000000000000;
    }
    switch(v46)
    {
      case 1:
        if (v21 >> 60 == 15)
        {
          id v23 = 0;
        }
        else
        {
          id v23 = (void *)sub_22342C050();
          sub_223322054(v19, v21);
        }
        id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B040]), sel_initWithData_, v23);

        id v12 = 0;
        goto LABEL_30;
      case 2:
        if (v21 >> 60 == 15)
        {
          unint64_t v24 = 0;
        }
        else
        {
          unint64_t v24 = (void *)sub_22342C050();
          sub_223322054(v19, v21);
        }
        id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B050]), sel_initWithData_, v24);

        id v12 = 0;
        id v13 = 0;
        id v14 = 0;
        id v15 = 0;
        goto LABEL_33;
      case 3:
        if (v21 >> 60 == 15)
        {
          uint64_t v25 = 0;
        }
        else
        {
          uint64_t v25 = (void *)sub_22342C050();
          sub_223322054(v19, v21);
        }
        id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B090]), sel_initWithData_, v25);

        id v12 = 0;
        id v13 = 0;
        goto LABEL_31;
      case 4:
        if (v21 >> 60 == 15)
        {
          uint64_t v26 = 0;
        }
        else
        {
          uint64_t v26 = (void *)sub_22342C050();
          sub_223322054(v19, v21);
        }
        id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B030]), sel_initWithData_, v26);

        id v13 = 0;
LABEL_30:
        id v14 = 0;
LABEL_31:
        id v15 = 0;
        break;
      default:
        if (v21 >> 60 == 15)
        {
          unint64_t v22 = 0;
        }
        else
        {
          unint64_t v22 = (void *)sub_22342C050();
          sub_223322054(v19, v21);
        }
        id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B038]), sel_initWithData_, v22);

        id v12 = 0;
        id v13 = 0;
        id v14 = 0;
        break;
    }
    id v16 = 0;
LABEL_33:
    sub_223322054((uint64_t)v42, v11);
  }
  char v50 = 2;
  sub_22342CDF0();
  if (v49 >> 60 != 15)
  {
    id v41 = (id)v49;
    id v42 = v48;
    unint64_t v45 = sub_22342C050();
    id v28 = objc_msgSend((id)v45, sel__FTOptionallyDecompressData);

    if (v28)
    {
      uint64_t v40 = sub_22342C070();
      unint64_t v45 = v29;

      if (v46 == 3)
      {
        if (v45 >> 60 == 15)
        {
          id v28 = 0;
        }
        else
        {
          uint64_t v31 = v40;
          uint64_t v32 = sub_22342C050();
          uint64_t v33 = v31;
          id v28 = (id)v32;
          sub_223322054(v33, v45);
        }
        goto LABEL_44;
      }
    }
    else
    {
      if (v46 == 3)
      {
LABEL_44:
        id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B070]), sel_initWithData_, v28);
        uint64_t v35 = v28;
        id v27 = v34;

        sub_223322054((uint64_t)v42, (unint64_t)v41);
        v44[1](v8, v47);
        goto LABEL_45;
      }
      uint64_t v40 = 0;
      unint64_t v45 = 0xF000000000000000;
    }
    unint64_t v30 = (unint64_t)v41;
    v44[1](v8, v47);
    sub_223322054((uint64_t)v42, v30);
    sub_223322054(v40, v45);
    id v27 = 0;
    goto LABEL_45;
  }
  v44[1](v8, v47);
  id v27 = 0;
LABEL_45:
  uint64_t v47 = (uint64_t)v27;
  id v42 = v27;
  unint64_t v45 = (unint64_t)v15;
  os_log_type_t v44 = (void (**)(char *, void))v14;
  id v41 = v13;
  id v36 = v12;
  id v37 = v16;
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);

  uint64_t v38 = v43;
  *id v43 = v46;
  v38[1] = v15;
  void v38[2] = v14;
  v38[3] = v13;
  v38[4] = v12;
  uint64_t v39 = v47;
  v38[5] = v16;
  v38[6] = v39;
}

unint64_t sub_223383E5C()
{
  unint64_t result = qword_267FA2C48;
  if (!qword_267FA2C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2C48);
  }
  return result;
}

unint64_t sub_223383EB0()
{
  unint64_t result = qword_267FA2C50;
  if (!qword_267FA2C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2C50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionProto.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223383FD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionProto.CodingKeys()
{
  return &type metadata for ActionProto.CodingKeys;
}

unint64_t sub_22338400C()
{
  unint64_t result = qword_267FA2C58;
  if (!qword_267FA2C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2C58);
  }
  return result;
}

unint64_t sub_223384064()
{
  unint64_t result = qword_267FA2C60;
  if (!qword_267FA2C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2C60);
  }
  return result;
}

unint64_t sub_2233840BC()
{
  unint64_t result = qword_267FA2C68;
  if (!qword_267FA2C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2C68);
  }
  return result;
}

uint64_t sub_223384110()
{
  unint64_t v0 = sub_22342CDA0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t destroy for PendingRecordZoneChange(void **a1)
{
  return sub_2233246C4(*a1);
}

uint64_t initializeWithCopy for PendingRecordZoneChange(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_22332468C(*(void **)a2);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for PendingRecordZoneChange(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_22332468C(*(void **)a2);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_2233246C4(v7);
  return a1;
}

__n128 initializeWithTake for PendingRecordZoneChange(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PendingRecordZoneChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_2233246C4(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingRecordZoneChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingRecordZoneChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_223384334(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_22338433C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PendingRecordZoneChange()
{
  return &type metadata for PendingRecordZoneChange;
}

uint64_t sub_223384358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  uint64_t v5[2] = a1;
  return MEMORY[0x270FA2498](sub_223384380, 0, 0);
}

uint64_t sub_223384380()
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  void (*v4)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  id v16 = v0;
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  unsigned int v3 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16);
  v0[7] = v3;
  v0[8] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xA5B8000000000000;
  v3(&v15, v1);
  if v15 < 7u && ((0x5Fu >> v15))
  {
    uint64_t v8 = 0xE090D0C0B0A09uLL >> (8 * v15);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[9] = v9;
    void *v9 = v0;
    v9[1] = sub_2233846D4;
    unint64_t v11 = v0[2];
    unint64_t v10 = v0[3];
    unint64_t v22 = v8;
    unint64_t v21 = 59;
    unint64_t v20 = 2;
    uint64_t v19 = 22;
    id v18 = "stepStarting(context:)";
    return sub_223400994(v11, v10, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/Protocols/SyncJob.swift", 99, 2);
  }
  else
  {
    uint64_t v4 = (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v0[7];
    uint64_t v5 = v0[5];
    char v6 = v0[4];
    uint64_t v7 = *(id *)(*sub_223321F60((void *)(v0[2] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v0[2] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 24);
    v4((uint64_t *)((char *)&v15 + 1), v6, v5);
    id v13 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setObject_forKey_, v13, *MEMORY[0x263F4AAA0]);

    id v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_2233846D4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233847D0, 0, 0);
}

uint64_t sub_2233847D0()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  void *v9;
  uint64_t v10;

  uint64_t v9 = v0;
  uint64_t v1 = (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v0[7];
  uint64_t v2 = v0[5];
  unsigned int v3 = v0[4];
  uint64_t v4 = *(id *)(*sub_223321F60((void *)(v0[2] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v0[2] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 24);
  v1(&v8, v3, v2);
  uint64_t v5 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setObject_forKey_, v5, *MEMORY[0x263F4AAA0]);

  char v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_223384A08()
{
  swift_unknownObjectRelease();
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 32);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_223332C58(*(void *)(v0 + 104));
  return MEMORY[0x270FA0228](v0, 120, 7);
}

uint64_t type metadata accessor for SyncJob()
{
  return self;
}

void sub_223384A84(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)v1 + 17);
}

uint64_t sub_223384A94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_223384AA0()
{
  return *(unsigned __int8 *)(*(void *)v0 + 96);
}

uint64_t sub_223384AAC()
{
  return *(unsigned __int8 *)(*(void *)v0 + 97);
}

uint64_t sub_223384AB8()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16);
}

uint64_t sub_223384AC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  sub_223331FA4(v1);
  return v1;
}

uint64_t sub_223384AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[5] = &off_26D66F718;
  v8[6] = v3;
  void v8[3] = a2;
  v8[4] = a3;
  v8[1] = sub_223334A58;
  id v8[2] = a1;
  return MEMORY[0x270FA2498](sub_223384380, 0, 0);
}

uint64_t sub_223384BC4(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_267FA2C80 + dword_267FA2C80);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_223331EB0;
  return v5(a1);
}

uint64_t sub_223384C8C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_223384CAC, 0, 0);
}

uint64_t sub_223384CAC()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
  objc_msgSend(*(id *)(*sub_223321F60(v1, v1[3]) + 24), sel_removeObjectForKey_, *MEMORY[0x263F4AAA0]);
  objc_msgSend(*(id *)(*sub_223321F60(v1, v1[3]) + 24), sel_removeObjectForKey_, *MEMORY[0x263F4AA98]);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_223384D6C()
{
  v1[260] = v0;
  uint64_t v2 = sub_22342C200();
  v1[261] = v2;
  v1[262] = *(void *)(v2 - 8);
  v1[263] = swift_task_alloc();
  v1[264] = swift_task_alloc();
  v1[265] = type metadata accessor for AttachmentRecord();
  v1[266] = swift_task_alloc();
  v1[267] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_223384E7C, 0, 0);
}

uint64_t sub_223384E7C()
{
  uint64_t v1 = *(void *)(v0 + 2080);
  uint64_t v2 = *(int *)(*(void *)(v0 + 2120) + 52);
  *(_DWORD *)(v0 + 2416) = v2;
  sub_223387C64(v1 + v2, v0 + 336);
  sub_223387C64(v0 + 336, v0 + 16);
  if (sub_223387CCC(v0 + 16) == 1)
  {
    uint64_t v3 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
  }
  id v4 = (id)IMMessageGuidFromIMFileTransferGuid();

  if (v4)
  {
    uint64_t v5 = sub_22342C300();
    uint64_t v7 = v6;

    uint64_t v8 = qword_26AD5EED8;
    swift_bridgeObjectRetain();
    if (v8 != -1) {
      swift_once();
    }
    sub_2233AD2E4(v5, v7);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *(void *)(v0 + 2160) = v7;
  *(void *)(v0 + 2152) = v5;
  *(void *)(v0 + 2144) = v10;
  uint64_t v11 = qword_26AD630F8;
  *(void *)(v0 + 2168) = qword_26AD630F8;
  if (v11)
  {
    uint64_t v12 = qword_26AD63100;
    *(void *)(v0 + 2176) = qword_26AD63100;
    *(void *)(v0 + 2184) = *(void *)(v12 + 96);
    *(void *)(v0 + 2192) = (v12 + 96) & 0xFFFFFFFFFFFFLL | 0x4C2F000000000000;
    if (qword_26AD5EE88 != -1) {
      swift_once();
    }
    *(void *)(v0 + 2200) = sub_22342C5B0();
    uint64_t v14 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_223385118, v14, v13);
  }
  else
  {
    sub_22334283C();
    swift_allocError();
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_223385118()
{
  (*(void (**)(void))(v0 + 2184))(*(void *)(v0 + 2144));
  return MEMORY[0x270FA2498](sub_223385194, 0, 0);
}

uint64_t sub_223385194()
{
  sub_223387C64(*(void *)(v0 + 2080) + *(int *)(v0 + 2416), v0 + 976);
  sub_223387C64(v0 + 976, v0 + 656);
  if (sub_223387CCC(v0 + 656) != 1)
  {
    *(void *)(v0 + 2208) = *(void *)(v0 + 840);
    *(void *)(v0 + 2216) = *(void *)(v0 + 848);
    uint64_t v5 = qword_26AD630F8;
    *(void *)(v0 + 2224) = qword_26AD630F8;
    if (v5)
    {
      uint64_t v6 = qword_26AD63100;
      *(void *)(v0 + 2232) = qword_26AD63100;
      *(void *)(v0 + 2240) = *(void *)(v6 + 104);
      *(void *)(v0 + 2248) = (v6 + 104) & 0xFFFFFFFFFFFFLL | 0x4B50000000000000;
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_22342C560();
      uint64_t v9 = v8;
      uint64_t v10 = sub_223385588;
LABEL_5:
      return MEMORY[0x270FA2498](v10, v7, v9);
    }
    id v18 = *(void **)(v0 + 2144);
    sub_22334283C();
    swift_allocError();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();

    goto LABEL_20;
  }
  uint64_t v1 = *(void *)(v0 + 2128);
  uint64_t v2 = *(void *)(v0 + 2080);
  unsigned __int8 v3 = sub_223386FE4();
  sub_223387CE4();
  sub_223387D24(v2, v1);
  id v4 = sub_2233BAF54(v1, 1);
  *(void *)(v0 + 2304) = v4;
  uint64_t v11 = v4;
  if (v3) {
    uint64_t v12 = 5;
  }
  else {
    uint64_t v12 = 0;
  }
  objc_msgSend(v4, sel__setTransferState_, v12);
  if ((v3 & 1) != 0 && objc_msgSend(v11, sel_thumbnailMode) == (id)1) {
    objc_msgSend(v11, sel__setTransferState_, 9);
  }
  uint64_t v13 = *(void *)(v0 + 2144);
  objc_msgSend(v11, sel_setCloudKitSyncState_, 1);
  if (v13)
  {
    uint64_t v14 = *(void **)(v0 + 2144);
    self;
    if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
    {
      uint64_t v15 = qword_26AD630F8;
      *(void *)(v0 + 2312) = qword_26AD630F8;
      if (v15)
      {
        uint64_t v16 = qword_26AD63100;
        *(void *)(v0 + 2320) = qword_26AD63100;
        *(void *)(v0 + 2328) = *(void *)(v16 + 112);
        *(void *)(v0 + 2336) = (v16 + 112) & 0xFFFFFFFFFFFFLL | 0x848E000000000000;
        uint64_t v7 = sub_22342C560();
        uint64_t v9 = v17;
        uint64_t v10 = sub_2233860E0;
        goto LABEL_5;
      }
      sub_22334283C();
      swift_allocError();
      swift_willThrow();

LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = qword_26AD630F8;
  *(void *)(v0 + 2384) = qword_26AD630F8;
  if (v20)
  {
    uint64_t v21 = qword_26AD63100;
    *(void *)(v0 + 2392) = qword_26AD63100;
    *(void *)(v0 + 2400) = *(void *)(v21 + 112);
    *(void *)(v0 + 2408) = (v21 + 112) & 0xFFFFFFFFFFFFLL | 0x848E000000000000;
    uint64_t v7 = sub_22342C560();
    uint64_t v9 = v22;
    uint64_t v10 = sub_223386928;
    goto LABEL_5;
  }
  id v23 = *(void **)(v0 + 2144);
  sub_22334283C();
  swift_allocError();
  swift_willThrow();

LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_223385588()
{
  *(void *)(v0 + 2256) = (*(uint64_t (**)(void, void))(v0 + 2240))(*(void *)(v0 + 2208), *(void *)(v0 + 2216));
  return MEMORY[0x270FA2498](sub_22338560C, 0, 0);
}

uint64_t sub_22338560C()
{
  uint64_t v1 = *(void **)(v0 + 2256);
  if (v1)
  {
    objc_msgSend(*(id *)(v0 + 2256), sel_setCloudKitSyncState_, 1);
    id v2 = objc_msgSend(v1, sel_stickerUserInfo);
    if (v2)
    {
      unsigned __int8 v3 = v2;
      id v4 = (_OWORD *)(v0 + 1976);
      uint64_t v5 = sub_22342C270();

      *(void *)(v0 + 2040) = sub_22342C300();
      *(void *)(v0 + 2048) = v6;
      sub_22342CB30();
      if (*(void *)(v5 + 16) && (unint64_t v7 = sub_22339E34C(v0 + 1936), (v8 & 1) != 0))
      {
        sub_22332325C(*(void *)(v5 + 56) + 32 * v7, v0 + 1976);
      }
      else
      {
        *id v4 = 0u;
        *(_OWORD *)(v0 + 1992) = 0u;
      }
      swift_bridgeObjectRelease();
      sub_22334902C(v0 + 1936);
      if (!*(void *)(v0 + 2000)) {
        goto LABEL_39;
      }
      if ((swift_dynamicCast() & 1) != 0 && *(unsigned char *)(v0 + 2420) == 1)
      {
        id v4 = (_OWORD *)(v0 + 2008);
        sub_223387C64(*(void *)(v0 + 2080) + *(int *)(v0 + 2416), v0 + 1296);
        sub_223387C64(v0 + 1296, v0 + 1616);
        if (sub_223387CCC(v0 + 1616) != 1
          && (*(void *)(v0 + 1872) >> 60 != 15 ? (uint64_t v14 = (void *)sub_22342C050()) : (uint64_t v14 = 0),
              (id v28 = (id)JWDecodeDictionary(), v14, v28)
           && (uint64_t v29 = sub_22342C270(), v28, v30 = sub_223342104(v29), swift_bridgeObjectRelease(), v30)))
        {
          uint64_t v31 = sub_22342C300();
          if (*(void *)(v30 + 16) && (unint64_t v33 = sub_22339C2E8(v31, v32), (v34 & 1) != 0))
          {
            sub_22332325C(*(void *)(v30 + 56) + 32 * v33, v0 + 2008);
          }
          else
          {
            *id v4 = 0u;
            *(_OWORD *)(v0 + 2024) = 0u;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v0 + 2032))
          {
LABEL_39:
            sub_2233232B8((uint64_t)v4, qword_26AD5F180);
            goto LABEL_40;
          }
        }
        else
        {
          *id v4 = 0u;
          *(_OWORD *)(v0 + 2024) = 0u;
        }
        sub_2233232B8(v0 + 2008, qword_26AD5F180);
        objc_msgSend(v1, sel_setCloudKitSyncState_, 0);
      }
    }
LABEL_40:
    uint64_t v35 = *(void *)(v0 + 2136);
    uint64_t v36 = *(void *)(v0 + 2080);
    sub_223387CE4();
    sub_223387D24(v36, v35);
    id v37 = sub_2233BAF54(v35, 0);
    *(void *)(v0 + 2264) = v37;
    id v40 = objc_msgSend(v37, sel_previewGenerationVersion);
    if ((uint64_t)objc_msgSend(v1, sel_previewGenerationVersion) >= (uint64_t)v40)
    {
      id v43 = objc_msgSend(v1, sel_previewGenerationVersion);
      if ((uint64_t)objc_msgSend(v37, sel_previewGenerationVersion) >= (uint64_t)v43)
      {
LABEL_50:
        uint64_t v44 = *(void *)(v0 + 2080);
        if (*(void *)(v44 + 56))
        {
          unint64_t v45 = (void *)sub_22342C2D0();
          uint64_t v44 = *(void *)(v0 + 2080);
        }
        else
        {
          unint64_t v45 = 0;
        }
        uint64_t v46 = *(void *)(v0 + 2120);
        objc_msgSend(v1, sel_setCloudKitRecordID_, v45);

        if (*(void *)(v44 + *(int *)(v46 + 56) + 8) >> 60 == 15) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = (void *)sub_22342C050();
        }
        objc_msgSend(v1, sel_setCloudKitServerChangeTokenBlob_, v47);

        uint64_t v48 = qword_26AD630F8;
        *(void *)(v0 + 2272) = qword_26AD630F8;
        if (v48)
        {
          uint64_t v49 = qword_26AD63100;
          *(void *)(v0 + 2280) = qword_26AD63100;
          *(void *)(v0 + 2288) = *(void *)(v49 + 112);
          *(void *)(v0 + 2296) = (v49 + 112) & 0xFFFFFFFFFFFFLL | 0x848E000000000000;
          uint64_t v20 = sub_22342C560();
          uint64_t v22 = v50;
          id v23 = sub_223385DD4;
          goto LABEL_58;
        }
        unint64_t v51 = *(void **)(v0 + 2144);
        sub_22334283C();
        swift_allocError();
        swift_willThrow();

        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      id v41 = 0;
      id v42 = &selRef_setCloudKitSyncState_;
    }
    else
    {
      objc_msgSend(v1, sel_setPreviewGenerationState_, objc_msgSend(v37, sel_previewGenerationState));
      id v41 = objc_msgSend(v37, sel_previewGenerationVersion);
      id v42 = &selRef_setPreviewGenerationVersion_;
    }
    objc_msgSend(v1, *v42, v41);
    goto LABEL_50;
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 2128);
  uint64_t v10 = *(void *)(v0 + 2080);
  uint64_t v11 = sub_223386FE4();
  sub_223387CE4();
  sub_223387D24(v10, v9);
  id v12 = sub_2233BAF54(v9, 1);
  uint64_t v13 = v12;
  *(void *)(v0 + 2304) = v12;
  if (v11) {
    uint64_t v15 = 5;
  }
  else {
    uint64_t v15 = 0;
  }
  objc_msgSend(v12, sel__setTransferState_, v15);
  if ((v11 & 1) != 0 && objc_msgSend(v13, sel_thumbnailMode) == (id)1) {
    objc_msgSend(v13, sel__setTransferState_, 9);
  }
  uint64_t v16 = *(void *)(v0 + 2144);
  objc_msgSend(v13, sel_setCloudKitSyncState_, 1);
  if (v16)
  {
    uint64_t v17 = *(void **)(v0 + 2144);
    self;
    if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
    {
      uint64_t v18 = qword_26AD630F8;
      *(void *)(v0 + 2312) = qword_26AD630F8;
      if (!v18)
      {
        sub_22334283C();
        swift_allocError();
        swift_willThrow();

LABEL_41:
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      uint64_t v19 = qword_26AD63100;
      *(void *)(v0 + 2320) = qword_26AD63100;
      *(void *)(v0 + 2328) = *(void *)(v19 + 112);
      *(void *)(v0 + 2336) = (v19 + 112) & 0xFFFFFFFFFFFFLL | 0x848E000000000000;
      uint64_t v20 = sub_22342C560();
      uint64_t v22 = v21;
      id v23 = sub_2233860E0;
LABEL_58:
      return MEMORY[0x270FA2498](v23, v20, v22);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = qword_26AD630F8;
  *(void *)(v0 + 2384) = qword_26AD630F8;
  if (v24)
  {
    uint64_t v25 = qword_26AD63100;
    *(void *)(v0 + 2392) = qword_26AD63100;
    *(void *)(v0 + 2400) = *(void *)(v25 + 112);
    *(void *)(v0 + 2408) = (v25 + 112) & 0xFFFFFFFFFFFFLL | 0x848E000000000000;
    uint64_t v20 = sub_22342C560();
    uint64_t v22 = v26;
    id v23 = sub_223386928;
    goto LABEL_58;
  }
  id v27 = *(void **)(v0 + 2144);
  sub_22334283C();
  swift_allocError();
  swift_willThrow();

LABEL_42:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_223385DD4()
{
  (*(void (**)(void, void, void))(v0 + 2288))(*(void *)(v0 + 2256), *(void *)(v0 + 2152), *(void *)(v0 + 2160));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_223385E64, 0, 0);
}

uint64_t sub_223385E64()
{
  uint64_t v19 = v0;
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  sub_223323374(*(void *)(v0 + 2088), (uint64_t)qword_26AD63330);
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_22342C1E0();
  os_log_type_t v2 = sub_22342C6E0();
  BOOL v3 = os_log_type_enabled(v1, v2);
  unint64_t v4 = *(void *)(v0 + 2216);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 2208);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 2056) = sub_22339BC14(v5, v4, &v18);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_223317000, v1, v2, "Stored attachment for existing transfer %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v7, -1, -1);
    MEMORY[0x223CB62D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v8 = objc_msgSend(*(id *)(v0 + 2256), sel_guid);
  uint64_t v9 = *(void **)(v0 + 2264);
  uint64_t v10 = *(void **)(v0 + 2256);
  uint64_t v11 = *(void **)(v0 + 2144);
  if (v8)
  {
    id v12 = v8;
    uint64_t v13 = sub_22342C300();
    uint64_t v15 = v14;
  }
  else
  {

    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, void))(v0 + 8);
  return v16(v13, v15, 0);
}

uint64_t sub_2233860E0()
{
  (*(void (**)(void, void, void))(v0 + 2328))(*(void *)(v0 + 2304), *(void *)(v0 + 2152), *(void *)(v0 + 2160));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_223386170, 0, 0);
}

uint64_t sub_223386170()
{
  uint64_t v62 = v0;
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 2304);
  uint64_t v2 = *(void *)(v0 + 2112);
  uint64_t v3 = *(void *)(v0 + 2096);
  uint64_t v4 = *(void *)(v0 + 2088);
  uint64_t v5 = sub_223323374(v4, (uint64_t)qword_26AD63330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  uint64_t v7 = sub_22342C1E0();
  os_log_type_t v8 = sub_22342C6E0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void **)(v0 + 2304);
  uint64_t v11 = &off_2646A9000;
  if (v9)
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v61 = v60;
    *(_DWORD *)id v12 = 136315138;
    id v13 = objc_msgSend(v10, sel_guid);
    uint64_t v14 = *(void **)(v0 + 2304);
    if (!v13)
    {

      __break(1u);
      return MEMORY[0x270FA2498](v51, v52, v53);
    }
    uint64_t v15 = v13;
    uint64_t v57 = *(void *)(v0 + 2096);
    uint64_t v58 = *(void *)(v0 + 2088);
    uint64_t v59 = *(void *)(v0 + 2112);
    uint64_t v16 = sub_22342C300();
    unint64_t v18 = v17;

    *(void *)(v0 + 2064) = sub_22339BC14(v16, v18, &v61);
    sub_22342CA10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_223317000, v7, v8, "Stored attachment for transfer %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v60, -1, -1);
    MEMORY[0x223CB62D0](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v58);
    uint64_t v11 = &off_2646A9000;
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 2112);
    uint64_t v20 = *(void *)(v0 + 2096);
    uint64_t v21 = *(void *)(v0 + 2088);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  *(void *)(v0 + 2344) = v22;
  if (!v22) {
    goto LABEL_21;
  }
  id v23 = (void *)v22;
  id v24 = *(id *)(v0 + 2144);
  id v25 = objc_msgSend(v23, sel_balloonBundleID);
  if (!v25)
  {
    sub_22342C300();
    goto LABEL_14;
  }
  uint64_t v26 = v25;
  uint64_t v27 = sub_22342C300();
  uint64_t v29 = v28;

  uint64_t v30 = sub_22342C300();
  if (!v29)
  {
LABEL_14:
    uint64_t v32 = *(void **)(v0 + 2144);
    swift_bridgeObjectRelease();
LABEL_15:

    unint64_t v33 = *(void **)(v0 + 2344);
    id v34 = *(id *)(v0 + 2144);
    if ((objc_msgSend(v33, sel_isAudioMessage) & 1) != 0
      || (objc_msgSend(*(id *)(v0 + 2304), sel_isSticker) & 1) != 0
      || objc_msgSend(*(id *)(v0 + 2304), sel_hideAttachment)
      || objc_msgSend(*(id *)(v0 + 2304), sel_isLocation))
    {
      uint64_t v35 = *(void **)(v0 + 2144);
    }
    else
    {
      uint64_t v35 = *(void **)(v0 + 2144);
      objc_msgSend(*(id *)(v0 + 2304), sel_isContact);
    }

LABEL_21:
    id v36 = [*(id *)(v0 + 2304) (SEL)v11[434]];
    id v37 = *(void **)(v0 + 2304);
    uint64_t v38 = *(void **)(v0 + 2144);
    if (v36)
    {
      uint64_t v39 = v36;
      uint64_t v40 = sub_22342C300();
      uint64_t v42 = v41;
    }
    else
    {

      uint64_t v40 = 0;
      uint64_t v42 = 0;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v43 = *(uint64_t (**)(uint64_t, uint64_t, void))(v0 + 8);
    return v43(v40, v42, 0);
  }
  if (v27 != v30 || v29 != v31)
  {
    char v45 = sub_22342CF60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_28;
    }
    uint64_t v32 = *(void **)(v0 + 2144);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_28:
  uint64_t v46 = qword_26AD630F8;
  *(void *)(v0 + 2352) = qword_26AD630F8;
  if (v46)
  {
    uint64_t v47 = qword_26AD63100;
    *(void *)(v0 + 2360) = qword_26AD63100;
    *(void *)(v0 + 2368) = *(void *)(v47 + 312);
    *(void *)(v0 + 2376) = (v47 + 312) & 0xFFFFFFFFFFFFLL | 0xD999000000000000;
    uint64_t v48 = sub_22342C560();
    uint64_t v50 = v49;
    unint64_t v51 = sub_223386730;
    uint64_t v52 = v48;
    uint64_t v53 = v50;
    return MEMORY[0x270FA2498](v51, v52, v53);
  }
  uint64_t v54 = *(void **)(v0 + 2304);
  uint64_t v55 = *(void **)(v0 + 2144);
  sub_22334283C();
  swift_allocError();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
  return v56();
}

uint64_t sub_223386730()
{
  (*(void (**)(void))(v0 + 2368))(*(void *)(v0 + 2304));
  return MEMORY[0x270FA2498](sub_2233867AC, 0, 0);
}

uint64_t sub_2233867AC()
{
  uint64_t v1 = *(void **)(v0 + 2344);
  id v2 = *(id *)(v0 + 2144);
  if ((objc_msgSend(v1, sel_isAudioMessage) & 1) != 0
    || (objc_msgSend(*(id *)(v0 + 2304), sel_isSticker) & 1) != 0
    || objc_msgSend(*(id *)(v0 + 2304), sel_hideAttachment)
    || objc_msgSend(*(id *)(v0 + 2304), sel_isLocation))
  {
    uint64_t v3 = *(void **)(v0 + 2144);
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 2144);
    objc_msgSend(*(id *)(v0 + 2304), sel_isContact);
  }

  id v4 = objc_msgSend(*(id *)(v0 + 2304), sel_guid);
  uint64_t v5 = *(void **)(v0 + 2304);
  id v6 = *(void **)(v0 + 2144);
  if (v4)
  {
    uint64_t v7 = v4;
    uint64_t v8 = sub_22342C300();
    uint64_t v10 = v9;
  }
  else
  {

    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, void))(v0 + 8);
  return v11(v8, v10, 0);
}

uint64_t sub_223386928()
{
  (*(void (**)(void, void, void))(v0 + 2400))(*(void *)(v0 + 2304), 0, 0);
  return MEMORY[0x270FA2498](sub_2233869AC, 0, 0);
}

void sub_2233869AC()
{
  uint64_t v35 = v0;
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 2304);
  uint64_t v2 = *(void *)(v0 + 2104);
  uint64_t v3 = *(void *)(v0 + 2096);
  uint64_t v4 = *(void *)(v0 + 2088);
  uint64_t v5 = sub_223323374(v4, (uint64_t)qword_26AD63330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  uint64_t v7 = sub_22342C1E0();
  os_log_type_t v8 = sub_22342C6E0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void **)(v0 + 2304);
  uint64_t v11 = &off_2646A9000;
  if (v9)
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = v33;
    *(_DWORD *)id v12 = 136315138;
    id v13 = objc_msgSend(v10, sel_guid);
    uint64_t v14 = *(void **)(v0 + 2304);
    if (!v13)
    {

      __break(1u);
      return;
    }
    uint64_t v15 = v13;
    uint64_t v30 = *(void *)(v0 + 2096);
    uint64_t v31 = *(void *)(v0 + 2088);
    uint64_t v32 = *(void *)(v0 + 2104);
    uint64_t v16 = sub_22342C300();
    unint64_t v18 = v17;

    *(void *)(v0 + 2072) = sub_22339BC14(v16, v18, &v34);
    sub_22342CA10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_223317000, v7, v8, "Stored attachment without associate-able message for transfer %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v33, -1, -1);
    MEMORY[0x223CB62D0](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
    uint64_t v11 = &off_2646A9000;
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 2104);
    uint64_t v20 = *(void *)(v0 + 2096);
    uint64_t v21 = *(void *)(v0 + 2088);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  id v22 = objc_msgSend(*(id *)(v0 + 2304), (SEL)v11[434], v30, v31, v32);
  id v23 = *(void **)(v0 + 2304);
  id v24 = *(void **)(v0 + 2144);
  if (v22)
  {
    id v25 = v22;
    uint64_t v26 = sub_22342C300();
    uint64_t v28 = v27;
  }
  else
  {

    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, void))(v0 + 8);
  v29(v26, v28, 0);
}

uint64_t sub_223386CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v2 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = sub_22342C010();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v20 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v19 - v12;
  sub_22342ACA8((uint64_t)v7);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v21(v7, 1, v8) == 1)
  {
    uint64_t v14 = v9;
    sub_2233232B8((uint64_t)v7, (uint64_t *)&unk_26AD5EFC0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
    id v25 = &type metadata for FileManagerProvider;
    uint64_t v26 = &off_26D66EBE0;
    v24[0] = objc_msgSend(self, sel_defaultManager);
    sub_22337C580((uint64_t)v13);
    sub_223348EB0((uint64_t)v24);
    uint64_t v14 = v9;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }
  sub_22342ACB8((uint64_t)v5);
  if (v21(v5, 1, v8) == 1) {
    return sub_2233232B8((uint64_t)v5, (uint64_t *)&unk_26AD5EFC0);
  }
  uint64_t v16 = v14;
  unint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v18 = (uint64_t)v20;
  v17(v20, v5, v8);
  id v25 = &type metadata for FileManagerProvider;
  uint64_t v26 = &off_26D66EBE0;
  v24[0] = objc_msgSend(self, sel_defaultManager);
  sub_22337C580(v18);
  sub_223348EB0((uint64_t)v24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v18, v8);
}

id sub_223386FE4()
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_22342C010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for AttachmentRecord();
  sub_223387C64(v0 + *(int *)(v8 + 52), (uint64_t)v16);
  sub_223387C64((uint64_t)v16, (uint64_t)v17);
  if (sub_223387CCC((uint64_t)v17) == 1 || !v18 || !*(void *)(v18 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  sub_22339C2E8(6386028, 0xE300000000000000);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22342BFE0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_9:
    sub_2233232B8((uint64_t)v3, (uint64_t *)&unk_26AD5EFC0);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v10 = objc_msgSend(self, sel_defaultManager);
  char v15 = 0;
  sub_22342BF40();
  uint64_t v11 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_fileExistsAtPath_isDirectory_, v11, &v15);

  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

uint64_t sub_2233872D0(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_22331E640((uint64_t *)&unk_26AD5EFC0);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  uint64_t v3 = sub_22342C010();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2233873E0, 0, 0);
}

uint64_t sub_2233873E0()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  sub_22342ACA8(v3);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v4(v3, 1, v1) == 1)
  {
    sub_2233232B8(v0[7], (uint64_t *)&unk_26AD5EFC0);
  }
  else
  {
    uint64_t v5 = (void *)v0[4];
    uint64_t v6 = v0[11];
    (*(void (**)(uint64_t, void, void))(v0[9] + 32))(v6, v0[7], v0[8]);
    uint64_t v7 = (void **)sub_223321F60(v5, v5[3]);
    sub_22336DAD4(v6, *v7);
    (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  }
  uint64_t v8 = v0[8];
  uint64_t v9 = v0[6];
  sub_22342ACB8(v9);
  if (v4(v9, 1, v8) == 1)
  {
    sub_2233232B8(v0[6], (uint64_t *)&unk_26AD5EFC0);
  }
  else
  {
    uint64_t v10 = v0[10];
    uint64_t v11 = (void *)v0[4];
    (*(void (**)(uint64_t, void, void))(v0[9] + 32))(v10, v0[6], v0[8]);
    id v12 = (void **)sub_223321F60(v11, v11[3]);
    sub_22336DAD4(v10, *v12);
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_223387918()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2233879A8;
  return sub_223384D6C();
}

uint64_t sub_2233879A8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 32) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_223387B54;
  }
  else
  {
    *(void *)(v6 + 40) = a2;
    *(void *)(v6 + 48) = a1;
    uint64_t v7 = sub_223387ADC;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_223387ADC()
{
  sub_223386CB8(v0[6], v0[5]);
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  return v1(1);
}

uint64_t sub_223387B54()
{
  sub_223386CB8(0, 0);
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_223387BD0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_223331EB0;
  return sub_2233872D0(a1);
}

uint64_t sub_223387C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_267FA2CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_223387CCC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 192);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unint64_t sub_223387CE4()
{
  unint64_t result = qword_267FA2CB8;
  if (!qword_267FA2CB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267FA2CB8);
  }
  return result;
}

uint64_t sub_223387D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for AttachmentRecordError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x223387E24);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentRecordError()
{
  return &type metadata for AttachmentRecordError;
}

unint64_t sub_223387E60()
{
  unint64_t result = qword_267FA2CC0;
  if (!qword_267FA2CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2CC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TelemetryCheckStep()
{
  return &type metadata for TelemetryCheckStep;
}

uint64_t sub_223387EC4()
{
  return MEMORY[0x270FA2498](sub_223387EE0, 0, 0);
}

uint64_t sub_223387EE0()
{
  type metadata accessor for CloudState();
  if (sub_223422524())
  {
    sub_223332C04();
    swift_allocError();
    unsigned char *v1 = 5;
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    unsigned int v4 = *(uint64_t (**)(void, void))(v0 + 8);
    return v4(0, 0);
  }
}

uint64_t sub_223387FC4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0228](v0, 65, 7);
}

uint64_t type metadata accessor for TimeoutHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TimeoutHandler.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2233880F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeoutHandler.State()
{
  return &type metadata for TimeoutHandler.State;
}

unint64_t sub_223388130()
{
  unint64_t result = qword_267FA2CE0;
  if (!qword_267FA2CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2CE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncCounts()
{
  return &type metadata for SyncCounts;
}

uint64_t sub_223388194(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_26AD5EF70);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_2233886E0();
  sub_22342D090();
  char v10 = 0;
  sub_22342CED0();
  if (!v1)
  {
    char v9 = 1;
    sub_22342CED0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2233882FC()
{
  if (*v0) {
    return 0x736572756C696166;
  }
  else {
    return 0x6573736563637573;
  }
}

uint64_t sub_22338833C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22338843C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_223388364(uint64_t a1)
{
  unint64_t v2 = sub_2233886E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2233883A0(uint64_t a1)
{
  unint64_t v2 = sub_2233886E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_2233883DC(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_2233883F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22338853C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_223388420(void *a1)
{
  return sub_223388194(a1);
}

uint64_t sub_22338843C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6573736563637573 && a2 == 0xE900000000000073;
  if (v2 || (sub_22342CF60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736572756C696166 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_22342CF60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22338853C(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_267FA2CE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_223321F60(a1, v7);
  sub_2233886E0();
  sub_22342D080();
  if (!v1)
  {
    v9[15] = 0;
    uint64_t v7 = sub_22342CE20();
    v9[14] = 1;
    sub_22342CE20();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  return v7;
}

unint64_t sub_2233886E0()
{
  unint64_t result = qword_26AD5EE58;
  if (!qword_26AD5EE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE58);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SyncCounts.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223388800);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncCounts.CodingKeys()
{
  return &type metadata for SyncCounts.CodingKeys;
}

unint64_t sub_22338883C()
{
  unint64_t result = qword_267FA2CF0;
  if (!qword_267FA2CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2CF0);
  }
  return result;
}

unint64_t sub_223388894()
{
  unint64_t result = qword_26AD5EE68;
  if (!qword_26AD5EE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE68);
  }
  return result;
}

unint64_t sub_2233888EC()
{
  unint64_t result = qword_26AD5EE60;
  if (!qword_26AD5EE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5EE60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MultiStepRepeatPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223388A0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiStepRepeatPolicy()
{
  return &type metadata for MultiStepRepeatPolicy;
}

ValueMetadata *type metadata accessor for MultiStepContinuePolicy()
{
  return &type metadata for MultiStepContinuePolicy;
}

unint64_t sub_223388A5C()
{
  unint64_t result = qword_267FA2CF8;
  if (!qword_267FA2CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2CF8);
  }
  return result;
}

uint64_t sub_223388AB0(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_223388AD0, 0, 0);
}

uint64_t sub_223388AD0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
  *(void *)(v0 + 56) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_223388B54, v1, 0);
}

uint64_t sub_223388B54()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 40);
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 184);
  id v4 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 184) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_22338B204(0, v3[2] + 1, 1, v3);
    *(void *)(v1 + 184) = v3;
  }
  unint64_t v7 = v3[2];
  unint64_t v6 = v3[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v3 = sub_22338B204((void *)(v6 > 1), v7 + 1, 1, v3);
    *(void *)(v1 + 184) = v3;
  }
  uint64_t v8 = *(void *)(v0 + 40);
  v3[2] = v7 + 1;
  v3[v7 + 4] = v8;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_223388C7C, 0, 0);
}

uint64_t sub_223388C7C()
{
  sub_223321F60((void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  uint64_t v1 = sub_223423BB8();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    swift_unknownObjectRetain();
    uint64_t v3 = (void *)sub_22342BF20();
    objc_msgSend(v2, sel_appendError_, v3);
    swift_unknownObjectRelease();
  }
  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_223388D34()
{
  return sub_22338A128();
}

uint64_t sub_223388D58()
{
  sub_22338BEB8();
  uint64_t v0 = sub_22342CF30();
  if (!v0) {
    uint64_t v0 = swift_allocError();
  }
  uint64_t v1 = (void *)v0;
  uint64_t v2 = (void *)sub_22342BF20();

  id v3 = objc_msgSend(v2, sel_userInfo);
  uint64_t v4 = sub_22342C270();

  uint64_t v5 = sub_22342C300();
  if (!*(void *)(v4 + 16) || (unint64_t v7 = sub_22339C2E8(v5, v6), (v8 & 1) == 0))
  {
    long long v15 = 0u;
    long long v16 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_22332325C(*(void *)(v4 + 56) + 32 * v7, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_9:
    sub_223338A24((uint64_t)&v15);
    goto LABEL_10;
  }
  sub_223349AC8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    *(void *)&long long v15 = objc_msgSend(v2, sel_code);
    uint64_t v10 = sub_22342CF10();
    goto LABEL_11;
  }
  objc_msgSend(v2, sel_code);
  *(void *)&long long v15 = sub_22342CF10();
  *((void *)&v15 + 1) = v9;
  sub_22342C3B0();
  objc_msgSend(v14, sel_code);
  sub_22342CF10();
  sub_22342C3B0();

  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)&v15 + 1);
  uint64_t v10 = v15;
LABEL_11:
  *(void *)&long long v15 = v10;
  *((void *)&v15 + 1) = v11;
  sub_22342C3B0();
  id v12 = objc_msgSend(v2, sel_domain);
  sub_22342C300();

  sub_22342C3B0();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_223388FC4()
{
  return sub_223388D34();
}

uint64_t sub_223388FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *char v8 = v4;
  v8[1] = sub_22338CABC;
  v8[14] = v3;
  v8[12] = a3;
  v8[13] = &off_26D66F6F0;
  v8[10] = a1;
  v8[11] = a2;
  return MEMORY[0x270FA2498](sub_2233890D0, 0, 0);
}

uint64_t sub_2233890A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  return MEMORY[0x270FA2498](sub_2233890D0, 0, 0);
}

uint64_t sub_2233890D0()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  *(void *)(v0 + 120) = v3;
  char v4 = v3(v2, v1);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v2, v1);
  *(void *)(v0 + 128) = v5;
  uint64_t v6 = *(void *)(v5 + 16);
  *(void *)(v0 + 136) = v6;
  if (v6)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = v7;
    *(void *)(v0 + 144) = 0;
    *(unsigned char *)(v0 + 248) = v4 == 2;
    sub_223322120(v5 + 32, v0 + 16);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 48);
    sub_223321F60((void *)(v0 + 16), v8);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_223389394;
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 88);
    return sub_22338A730(v12, v11, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t v15 = *(void *)(MEMORY[0x263F8EE78] + 16);
    *(void *)(v0 + 192) = MEMORY[0x263F8EE78];
    *(void *)(v0 + 200) = v15;
    if (v15)
    {
      long long v16 = *(void **)(v14 + 32);
      *(void *)(v0 + 208) = v16;
      if (v15 == 1)
      {
        id v17 = v16;
        swift_willThrow();
        swift_bridgeObjectRelease();
        uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
        return v18();
      }
      else
      {
        uint64_t v20 = *(void *)(v0 + 80);
        uint64_t v21 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
        *(void *)(v0 + 216) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
        *(void *)(v0 + 224) = *(void *)(v20 + v21);
        id v22 = v16;
        *(void *)(v0 + 232) = 1;
        uint64_t v23 = *(void *)(v0 + 224);
        id v24 = *(void **)(*(void *)(v0 + 192) + 40);
        *(void *)(v0 + 240) = v24;
        swift_bridgeObjectRetain();
        id v25 = v24;
        swift_retain();
        return MEMORY[0x270FA2498](sub_223389834, v23, 0);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = *(uint64_t (**)(void, BOOL))(v0 + 8);
      return v19(0, v4 == 2);
    }
  }
}

uint64_t sub_223389394(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  *(unsigned char *)(v5 + 249) = a2;
  *(void *)(v5 + 176) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = sub_223389BE0;
  }
  else
  {
    *(void *)(v5 + 184) = a1;
    uint64_t v6 = sub_2233894C0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2233894C0(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 184);
  uint64_t v5 = *(void *)(v3 + 144);
  uint64_t v6 = v5 + v4;
  if (__OFADD__(v5, v4))
  {
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  int v7 = (*(unsigned __int8 (**)(void))(v3 + 120))(*(void *)(v3 + 96));
  if (!v7)
  {
    uint64_t v9 = 0;
    goto LABEL_14;
  }
  if (v7 == 1)
  {
    if (*(unsigned char *)(v3 + 249))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = sub_22342CF60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
LABEL_13:
        uint64_t v9 = *(unsigned __int8 *)(v3 + 248);
        goto LABEL_14;
      }
    }
    uint64_t v9 = 1;
    goto LABEL_14;
  }
  if ((*(unsigned char *)(v3 + 249) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    goto LABEL_14;
  }
  char v10 = sub_22342CF60();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0;
  if ((v10 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v11 = *(void *)(v3 + 160);
  uint64_t v12 = *(void *)(v3 + 136);
  uint64_t v13 = *(void *)(v3 + 152) + 1;
  _s17MessagesCloudSync9SyncFilesVwxx_0(v3 + 16);
  if (v13 == v12)
  {
    swift_bridgeObjectRelease();
    *(void *)(v3 + 192) = v11;
    uint64_t v14 = *(void *)(v11 + 16);
    *(void *)(v3 + 200) = v14;
    if (v14)
    {
      uint64_t v15 = *(void **)(v11 + 32);
      *(void *)(v3 + 208) = v15;
      if (v14 == 1)
      {
        id v16 = v15;
        swift_willThrow();
        swift_bridgeObjectRelease();
        id v17 = *(uint64_t (**)(void))(v3 + 8);
        return v17();
      }
      uint64_t v26 = *(void *)(v3 + 80);
      uint64_t v27 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
      *(void *)(v3 + 216) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
      *(void *)(v3 + 224) = *(void *)(v26 + v27);
      id v28 = v15;
      *(void *)(v3 + 232) = 1;
      uint64_t v29 = *(void *)(v3 + 224);
      uint64_t v30 = *(void **)(*(void *)(v3 + 192) + 40);
      *(void *)(v3 + 240) = v30;
      swift_bridgeObjectRetain();
      id v31 = v30;
      swift_retain();
      a1 = sub_223389834;
      a2 = v29;
      a3 = 0;
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    swift_bridgeObjectRelease();
    id v25 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    return v25(v6, v9);
  }
  else
  {
    uint64_t v19 = *(void *)(v3 + 152) + 1;
    *(void *)(v3 + 152) = v19;
    *(void *)(v3 + 160) = v11;
    *(void *)(v3 + 144) = v6;
    *(unsigned char *)(v3 + 248) = v9;
    sub_223322120(*(void *)(v3 + 128) + 40 * v19 + 32, v3 + 16);
    uint64_t v21 = *(void *)(v3 + 40);
    uint64_t v20 = *(void *)(v3 + 48);
    sub_223321F60((void *)(v3 + 16), v21);
    id v22 = (void *)swift_task_alloc();
    *(void *)(v3 + 168) = v22;
    *id v22 = v3;
    v22[1] = sub_223389394;
    uint64_t v24 = *(void *)(v3 + 80);
    uint64_t v23 = *(void *)(v3 + 88);
    return sub_22338A730(v24, v23, v21, v20);
  }
}

uint64_t sub_223389834()
{
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 224);
  swift_beginAccess();
  uint64_t v3 = *(void **)(v2 + 184);
  id v4 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 184) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v3 = sub_22338B204(0, v3[2] + 1, 1, v3);
    *(void *)(v9 + 184) = v3;
  }
  unint64_t v7 = v3[2];
  unint64_t v6 = v3[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v3 = sub_22338B204((void *)(v6 > 1), v7 + 1, 1, v3);
    *(void *)(v10 + 184) = v3;
  }
  uint64_t v8 = *(void *)(v0 + 240);
  v3[2] = v7 + 1;
  v3[v7 + 4] = v8;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_223389964, 0, 0);
}

uint64_t sub_223389964()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)(*(void *)(v0 + 80) + *(void *)(v0 + 216));
  uint64_t v2 = *(void **)(*sub_223321F60(v1, v1[3]) + 56);
  if (v2)
  {
    swift_unknownObjectRetain();
    uint64_t v3 = (void *)sub_22342BF20();
    objc_msgSend(v2, sel_appendError_, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_22342C200();
    sub_223323374(v4, (uint64_t)qword_26AD63108);
    uint64_t v5 = sub_22342C1E0();
    os_log_type_t v6 = sub_22342C700();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v19 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v9 = sub_223388D58();
      *(void *)(v7 + 4) = sub_22339BC14(v9, v10, &v19);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v5, v6, "Encountered error setting sync date: %s", (uint8_t *)v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v8, -1, -1);
      MEMORY[0x223CB62D0](v7, -1, -1);
    }
  }
  uint64_t v11 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 232) + 1;

  if (v12 == v11)
  {
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v16 = *(void *)(v0 + 232) + 1;
    *(void *)(v0 + 232) = v16;
    id v17 = *(void **)(*(void *)(v0 + 192) + 8 * v16 + 32);
    *(void *)(v0 + 240) = v17;
    id v18 = v17;
    swift_retain();
    return MEMORY[0x270FA2498](sub_223389834, v15, 0);
  }
}

uint64_t sub_223389BE0()
{
  if (((*(uint64_t (**)(void))(*(void *)(v0 + 104) + 24))(*(void *)(v0 + 96)) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
LABEL_3:
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  id v3 = *(id *)(v0 + 176);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *(void **)(v0 + 160);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v5 = sub_22338B204(0, v5[2] + 1, 1, *(void **)(v0 + 160));
  }
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    uint64_t v5 = sub_22338B204((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  uint64_t v8 = *(void **)(v0 + 176);
  uint64_t v5[2] = v7 + 1;
  uint64_t v9 = (void **)(v5 + 4);
  v5[v7 + 4] = v8;

  uint64_t v10 = *(unsigned __int8 *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 152) + 1;
  _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
  if (v13 == v12)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 192) = v5;
    uint64_t v14 = v5[2];
    *(void *)(v0 + 200) = v14;
    if (v14)
    {
      uint64_t v15 = *v9;
      *(void *)(v0 + 208) = *v9;
      if (v14 == 1)
      {
        id v16 = v15;
        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      uint64_t v24 = *(void *)(v0 + 80);
      uint64_t v25 = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector;
      *(void *)(v0 + 216) = OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState;
      *(void *)(v0 + 224) = *(void *)(v24 + v25);
      id v26 = v15;
      *(void *)(v0 + 232) = 1;
      uint64_t v27 = *(void *)(v0 + 224);
      id v28 = *(void **)(*(void *)(v0 + 192) + 40);
      *(void *)(v0 + 240) = v28;
      swift_bridgeObjectRetain();
      id v29 = v28;
      swift_retain();
      return MEMORY[0x270FA2498](sub_223389834, v27, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v23(v11, v10);
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 152) + 1;
    *(void *)(v0 + 152) = v17;
    *(void *)(v0 + 160) = v5;
    *(void *)(v0 + 144) = v11;
    *(unsigned char *)(v0 + 248) = v10;
    sub_223322120(*(void *)(v0 + 128) + 40 * v17 + 32, v0 + 16);
    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    sub_223321F60((void *)(v0 + 16), v18);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_223389394;
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 88);
    return sub_22338A730(v22, v21, v18, v19);
  }
}

uint64_t sub_223389F38(char *a1, char *a2)
{
  return sub_2233F5A3C(*a1, *a2);
}

uint64_t sub_223389F44()
{
  return sub_22342D060();
}

uint64_t sub_223389FBC()
{
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22338A020()
{
  return sub_22342D060();
}

uint64_t sub_22338A094@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_22338A0F4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701736292;
  if (*v1) {
    uint64_t v2 = 0x7972746572;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_22338A128()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity + 32);
  sub_223321F60((void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity), v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2))
  {
    sub_22342C300();
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F870;
    *(void *)(inited + 32) = sub_22342C300();
    *(void *)(inited + 40) = v4;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = 0xD00000000000001BLL;
    *(void *)(inited + 56) = 0x80000002234375E0;
    sub_2233C5EB0(inited);
    id v5 = objc_allocWithZone(MEMORY[0x263F087E8]);
    unint64_t v6 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    unint64_t v7 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, 0, v7);
    goto LABEL_22;
  }
  if (*(unsigned char *)(*sub_223321F60((void *)(v0 + 16), *(void *)(v0 + 40)) + 100))
  {
    sub_223321F60((void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    if (sub_223424450(2, 0))
    {
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_22342C200();
      sub_223323374(v8, (uint64_t)qword_26AD63108);
      uint64_t v9 = sub_22342C1E0();
      os_log_type_t v10 = sub_22342C700();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl(&dword_223317000, v9, v10, "Messages in iCloud Exit Record present in cache", v11, 2u);
        MEMORY[0x223CB62D0](v11, -1, -1);
      }

      goto LABEL_20;
    }
    if ((sub_223424450(1, 0) & 1) == 0)
    {
LABEL_20:
      sub_22342C300();
      sub_22331E640(&qword_26AD5EFA0);
      uint64_t v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_22342F870;
      *(void *)(v20 + 32) = sub_22342C300();
      *(void *)(v20 + 40) = v21;
      *(void *)(v20 + 72) = MEMORY[0x263F8D310];
      *(void *)(v20 + 48) = 0xD000000000000019;
      *(void *)(v20 + 56) = 0x80000002234375C0;
      sub_2233C5EB0(v20);
      id v22 = objc_allocWithZone(MEMORY[0x263F087E8]);
      unint64_t v6 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      unint64_t v7 = (void *)sub_22342C260();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v6, 1, v7);
      goto LABEL_22;
    }
  }
  uint64_t v12 = 0x100000000;
  if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_devicePolicy + 4)) {
    uint64_t v12 = 0;
  }
  unint64_t v13 = v12 | ((unint64_t)*(unsigned __int8 *)(v0
                                                    + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_devicePolicy
                                                    + 3) << 24);
  uint64_t v14 = 0x10000;
  if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_devicePolicy + 2)) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = 256;
  if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_devicePolicy + 1)) {
    uint64_t v15 = 0;
  }
  if (sub_22338BAE4(v0, v13 | v14 | v15 | *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_devicePolicy)))
  {
    sub_223321F60((void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    uint64_t result = (uint64_t)sub_2234225C0();
    if ((result & 1) == 0) {
      return result;
    }
    sub_22342C300();
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_22342F870;
    *(void *)(v17 + 32) = sub_22342C300();
    *(void *)(v17 + 40) = v18;
    *(void *)(v17 + 72) = MEMORY[0x263F8D310];
    *(void *)(v17 + 48) = 0xD00000000000001DLL;
    *(void *)(v17 + 56) = 0x80000002234375A0;
    sub_2233C5EB0(v17);
    id v19 = objc_allocWithZone(MEMORY[0x263F087E8]);
    unint64_t v6 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    unint64_t v7 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_initWithDomain_code_userInfo_, v6, 7, v7);
  }
  else
  {
    sub_22342C300();
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = xmmword_22342F870;
    *(void *)(v23 + 32) = sub_22342C300();
    *(void *)(v23 + 40) = v24;
    *(void *)(v23 + 72) = MEMORY[0x263F8D310];
    *(void *)(v23 + 48) = 0xD000000000000026;
    *(void *)(v23 + 56) = 0x8000000223437570;
    sub_2233C5EB0(v23);
    id v25 = objc_allocWithZone(MEMORY[0x263F087E8]);
    unint64_t v6 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    unint64_t v7 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_initWithDomain_code_userInfo_, v6, 4, v7);
  }
LABEL_22:

  return swift_willThrow();
}

uint64_t sub_22338A730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  uint64_t v5[2] = a1;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  os_log_type_t v10 = (void *)swift_task_alloc();
  v5[7] = v10;
  *os_log_type_t v10 = v5;
  v10[1] = sub_22338A848;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_22338A848()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22338A944, 0, 0);
}

uint64_t sub_22338A944()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[5];
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24);
  v0[8] = v5;
  v0[9] = (v4 + 24) & 0xFFFFFFFFFFFFLL | 0xB99B000000000000;
  v5(v3, v1, v2);
  uint64_t v6 = v0[4];
  unint64_t v7 = *(void (**)(void, void, uint64_t))(v0[5] + 32);
  v0[10] = v7;
  v0[11] = 0;
  v7(v0[2], v0[3], v6);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[5] + 48) + **(int **)(v0[5] + 48));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[12] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_22338AACC;
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[3];
  uint64_t v11 = v0[4];
  uint64_t v12 = v0[2];
  return v14(v12, v10, v11, v9);
}

uint64_t sub_22338AACC(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  uint64_t v6 = *v3;
  *(unsigned char *)(v5 + 136) = a2;
  *(void *)(v5 + 104) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v7 = *(uint64_t (**)(void))(v6 + 8);
    return v7();
  }
  else
  {
    *(void *)(v5 + 112) = a1;
    return MEMORY[0x270FA2498](sub_22338AC20, 0, 0);
  }
}

void sub_22338AC20()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = v2 + v1;
  *(void *)(v0 + 120) = v2 + v1;
  if (__OFADD__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    char v4 = (*(uint64_t (**)(void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 32));
    char v5 = *(unsigned char *)(v0 + 136) & 1;
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    if (*(unsigned char *)(v0 + 136))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v6 = sub_22342CF60();
      swift_bridgeObjectRelease();
      char v5 = 0;
      if ((v6 & 1) == 0)
      {
LABEL_5:
        *(unsigned char *)(v0 + 137) = v5;
        id v16 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 40) + 56)
                                                                      + **(int **)(*(void *)(v0 + 40) + 56));
        unint64_t v7 = (void *)swift_task_alloc();
        *(void *)(v0 + 128) = v7;
        *unint64_t v7 = v0;
        v7[1] = sub_22338AEE0;
        uint64_t v8 = *(void *)(v0 + 40);
        uint64_t v9 = *(void *)(v0 + 24);
        uint64_t v10 = *(void *)(v0 + 32);
        uint64_t v11 = *(void *)(v0 + 16);
        uint64_t v12 = v16;
LABEL_7:
        v12(v11, v9, v10, v8);
        return;
      }
    }
    uint64_t v13 = *(void *)(v0 + 104);
    (*(void (**)(void, void, void, void))(v0 + 64))(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
    if (!v13)
    {
      *(void *)(v0 + 88) = v3;
      (*(void (**)(void, void, void))(v0 + 80))(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
      uint64_t v17 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 40) + 48)
                                                                    + **(int **)(*(void *)(v0 + 40) + 48));
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_22338AACC;
      uint64_t v8 = *(void *)(v0 + 40);
      uint64_t v9 = *(void *)(v0 + 24);
      uint64_t v10 = *(void *)(v0 + 32);
      uint64_t v11 = *(void *)(v0 + 16);
      uint64_t v12 = v17;
      goto LABEL_7;
    }
    uint64_t v14 = *(void (**)(void))(v0 + 8);
    v14();
  }
}

uint64_t sub_22338AEE0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22338AFDC, 0, 0);
}

uint64_t sub_22338AFDC()
{
  uint64_t v1 = (void (*)(void))(*(uint64_t (**)(void))(*(void *)(v0 + 40) + 16))(*(void *)(v0 + 32));
  if (v1)
  {
    uint64_t v2 = (uint64_t)v1;
    v1();
    sub_223332C58(v2);
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 137);
  return v3(v4, v5);
}

unint64_t sub_22338B080()
{
  unint64_t result = qword_267FA2D00;
  if (!qword_267FA2D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2D00);
  }
  return result;
}

uint64_t sub_22338B0D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22338B0DC()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_22338B0E4()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_22338B0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 8);
  char v7 = *(unsigned char *)(v2 + 32);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, char))((char *)&dword_267FA2770 + dword_267FA2770);
  char v8 = *(unsigned char *)(v2 + 33);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_223335C74;
  return v11(a1, a2, v6, v7, v8);
}

uint64_t sub_22338B1C4()
{
  return sub_22338C948(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8), v0, 0, 0);
}

void *sub_22338B204(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22331E640(&qword_26AD5EFA8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22338BF0C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22338B314(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22331E640((uint64_t *)&unk_26AD5EF90);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22338C018(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22338B424(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_22331E640(&qword_26AD60520);
  uint64_t v10 = *(void *)(type metadata accessor for DatabaseRecord() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_22342CD30();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  uint64_t v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for DatabaseRecord() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_22338C204(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_22338B68C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22331E640(&qword_267FA2D78);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22338C35C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22338B79C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22331E640(&qword_267FA2D68);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22338C448(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22338B8AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22331E640(&qword_26AD60518);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_22338C10C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_22338B9D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_22331E640(&qword_267FA2D30);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22338C554(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22338BAE4(uint64_t a1, uint64_t a2)
{
  if ((a2 & 1) == 0)
  {
LABEL_5:
    __int16 v4 = sub_2233F8290();
    if ((a2 & 0xFF000100) == 0x1000100)
    {
      if (!(_BYTE)v4)
      {
        if (qword_26AD5F0D8 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_22342C200();
        sub_223323374(v12, (uint64_t)qword_26AD63108);
        unint64_t v6 = sub_22342C1E0();
        os_log_type_t v7 = sub_22342C700();
        if (!os_log_type_enabled(v6, v7)) {
          goto LABEL_24;
        }
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        uint64_t v9 = "Device Policy Violation: User was on wifi then network disconnected";
        goto LABEL_23;
      }
      if (v4 == 2)
      {
        if (qword_26AD5F0D8 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_22342C200();
        sub_223323374(v5, (uint64_t)qword_26AD63108);
        unint64_t v6 = sub_22342C1E0();
        os_log_type_t v7 = sub_22342C700();
        if (!os_log_type_enabled(v6, v7)) {
          goto LABEL_24;
        }
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        uint64_t v9 = "Device Policy Violation: User was on wifi then switched to cellular";
        goto LABEL_23;
      }
    }
    uint64_t v10 = 1;
    if ((a2 & 0x100010000) != 0x10000 || (v4 & 0x100) == 0) {
      return v10;
    }
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22342C200();
    sub_223323374(v11, (uint64_t)qword_26AD63108);
    unint64_t v6 = sub_22342C1E0();
    os_log_type_t v7 = sub_22342C700();
    if (!os_log_type_enabled(v6, v7))
    {
LABEL_24:

      return 0;
    }
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    uint64_t v9 = "Device Policy Violation: User was charging then went on battery";
LABEL_23:
    _os_log_impl(&dword_223317000, v6, v7, v9, v8, 2u);
    MEMORY[0x223CB62D0](v8, -1, -1);
    goto LABEL_24;
  }
  switch(*(unsigned char *)(*sub_223321F60((void *)(a1 + 16), *(void *)(a1 + 40)) + 17))
  {
    case 6:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      char v3 = sub_22342CF60();
      swift_bridgeObjectRelease();
      if (v3) {
        goto LABEL_5;
      }
      uint64_t v10 = 1;
      break;
  }
  return v10;
}

unint64_t sub_22338BEB8()
{
  unint64_t result = qword_267FA2D20;
  if (!qword_267FA2D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2D20);
  }
  return result;
}

uint64_t sub_22338BF0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_22331E640(&qword_26AD5EFB0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_22338C018(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_22338C10C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_22338C204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for DatabaseRecord() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

char *sub_22338C35C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    os_log_type_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_22338C448(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_22331E640(&qword_267FA2D70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

uint64_t sub_22338C554(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_22331E640(&qword_26AD5F3A8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for NoOpSyncStep()
{
  return &type metadata for NoOpSyncStep;
}

uint64_t destroy for MultiStepSyncStep(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for MultiStepSyncStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  unint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t assignWithCopy for MultiStepSyncStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 initializeWithTake for MultiStepSyncStep(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MultiStepSyncStep(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiStepSyncStep(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiStepSyncStep(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiStepSyncStep()
{
  return &type metadata for MultiStepSyncStep;
}

uint64_t sub_22338C948(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unsigned char *_s17MessagesCloudSync23MultiStepContinuePolicyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22338CA2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncStepResponse()
{
  return &type metadata for SyncStepResponse;
}

unint64_t sub_22338CA68()
{
  unint64_t result = qword_267FA2D80;
  if (!qword_267FA2D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2D80);
  }
  return result;
}

uint64_t *sub_22338CAC0(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = a2[11];
    uint64_t v12 = a3[10];
    __dst = (char *)a1 + v12;
    id v37 = (char *)a2 + v12;
    a1[10] = a2[10];
    a1[11] = v11;
    uint64_t v13 = sub_22342C130();
    uint64_t v38 = *(void *)(v13 - 8);
    size_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    uint64_t v15 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v37, 1, v15))
    {
      uint64_t v16 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(__dst, v37, *(void *)(*(void *)(v16 - 8) + 64));
      uint64_t v17 = v38;
    }
    else
    {
      uint64_t v17 = v38;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v37, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = a3[11];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v14((char *)a2 + v19, 1, v15))
    {
      uint64_t v22 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v15);
    }
    uint64_t v23 = a3[12];
    uint64_t v24 = a3[13];
    id v25 = (uint64_t *)((char *)v4 + v23);
    id v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    id v28 = (uint64_t *)((char *)v4 + v24);
    id v29 = (uint64_t *)((char *)a2 + v24);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[14];
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (_OWORD *)((char *)a2 + v31);
    unint64_t v34 = *(uint64_t *)((char *)a2 + v31 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v32 = *v33;
    }
    else
    {
      uint64_t v35 = *(void *)v33;
      sub_22331E684(v35, v34);
      *(void *)uint64_t v32 = v35;
      *((void *)v32 + 1) = v34;
    }
  }
  return v4;
}

uint64_t sub_22338CDC0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_22342C130();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[11];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(a1 + a2[14]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *v10;
    return sub_22331EA68(v12, v11);
  }
  return result;
}

void *sub_22338CF4C(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v9 = *((void *)a2 + 9);
  a1[8] = *((void *)a2 + 8);
  a1[9] = v9;
  uint64_t v10 = *((void *)a2 + 11);
  uint64_t v11 = a3[10];
  __dst = (char *)a1 + v11;
  unint64_t v34 = &a2[v11];
  a1[10] = *((void *)a2 + 10);
  a1[11] = v10;
  uint64_t v12 = sub_22342C130();
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v34, 1, v12))
  {
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(__dst, v34, *(void *)(*(void *)(v14 - 8) + 64));
    uint64_t v15 = v35;
  }
  else
  {
    uint64_t v15 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v34, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  if (v13(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = &a2[v20];
  uint64_t v24 = *((void *)v23 + 1);
  *uint64_t v22 = *(void *)v23;
  v22[1] = v24;
  id v25 = (void *)((char *)a1 + v21);
  id v26 = &a2[v21];
  uint64_t v27 = *((void *)v26 + 1);
  void *v25 = *(void *)v26;
  v25[1] = v27;
  uint64_t v28 = a3[14];
  id v29 = (char *)a1 + v28;
  uint64_t v30 = (uint64_t *)&a2[v28];
  unint64_t v31 = *(void *)&a2[v28 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)id v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *v30;
    sub_22331E684(*v30, v31);
    *(void *)id v29 = v32;
    *((void *)v29 + 1) = v31;
  }
  return a1;
}

char *sub_22338D1F8(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22342C130();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (void *)((char *)a2 + v21);
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[13];
  id v25 = &a1[v24];
  id v26 = (void *)((char *)a2 + v24);
  *(void *)id v25 = *v26;
  *((void *)v25 + 1) = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[14];
  uint64_t v28 = (uint64_t *)&a1[v27];
  id v29 = (void *)((char *)a2 + v27);
  unint64_t v30 = *(void *)((char *)a2 + v27 + 8);
  if (*(void *)&a1[v27 + 8] >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      uint64_t v32 = *v29;
      sub_22331E684(v32, v30);
      uint64_t v33 = *v28;
      unint64_t v34 = v28[1];
      uint64_t *v28 = v32;
      v28[1] = v30;
      sub_22331EA68(v33, v34);
      return a1;
    }
    sub_22331FFAC((uint64_t)v28);
    goto LABEL_18;
  }
  if (v30 >> 60 == 15)
  {
LABEL_18:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  uint64_t v31 = *v29;
  sub_22331E684(v31, v30);
  uint64_t *v28 = v31;
  v28[1] = v30;
  return a1;
}

_OWORD *sub_22338D60C(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  long long v8 = *((_OWORD *)a2 + 5);
  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = &a2[v9];
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v8;
  uint64_t v12 = sub_22342C130();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  int v18 = &a2[v16];
  if (v14(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)&a2[v20];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)&a2[a3[14]];
  return a1;
}

char *sub_22338D804(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_22342C130();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v17(&a1[v21], 1, v15);
  int v25 = v17(v23, 1, v15);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v23, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
LABEL_12:
    uint64_t v26 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v22, v23, v15);
LABEL_13:
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  id v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[13];
  uint64_t v33 = &a1[v32];
  unint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[14];
  uint64_t v38 = (uint64_t *)&a1[v37];
  uint64_t v39 = (void *)((char *)a2 + v37);
  unint64_t v40 = *(void *)&a1[v37 + 8];
  if (v40 >> 60 != 15)
  {
    unint64_t v41 = v39[1];
    if (v41 >> 60 != 15)
    {
      uint64_t v42 = *v38;
      uint64_t *v38 = *v39;
      v38[1] = v41;
      sub_22331EA68(v42, v40);
      return a1;
    }
    sub_22331FFAC((uint64_t)v38);
  }
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  return a1;
}

uint64_t sub_22338DB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22338DB7C);
}

uint64_t sub_22338DB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_22338DC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22338DC50);
}

uint64_t sub_22338DC50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MessageUpdateRecord()
{
  uint64_t result = qword_26AD5FE28;
  if (!qword_26AD5FE28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22338DD48()
{
  sub_223321460();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22338DDF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  unint64_t v41 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (uint64_t)v36 - v6;
  uint64_t v7 = sub_22331E640(&qword_26AD60508);
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22331E640(&qword_26AD60510);
  uint64_t v44 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for MessageUpdateRecord();
  MEMORY[0x270FA5388](updated);
  uint64_t v46 = (void *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_223321F60(a1, a1[3]);
  sub_223367044();
  uint64_t v15 = v45;
  sub_22342D080();
  if (v15) {
    return _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  }
  uint64_t v37 = (int *)updated;
  uint64_t v38 = v7;
  char v45 = v12;
  uint64_t v39 = v10;
  sub_223321F60(a1, a1[3]);
  sub_223321FA4();
  sub_22342D080();
  LOBYTE(v47) = 0;
  uint64_t v16 = sub_22342CDC0();
  uint64_t v17 = v46;
  *uint64_t v46 = v16;
  v17[1] = v18;
  LOBYTE(v47) = 1;
  int v19 = v9;
  v17[2] = sub_22342CDC0();
  v17[3] = v20;
  LOBYTE(v47) = 2;
  void v17[4] = sub_22342CDC0();
  v17[5] = v21;
  LOBYTE(v47) = 3;
  v17[6] = sub_22342CDC0();
  v17[7] = v22;
  LOBYTE(v47) = 4;
  v17[8] = sub_22342CDC0();
  v17[9] = v23;
  LOBYTE(v47) = 5;
  v17[10] = sub_22342CDC0();
  v17[11] = v24;
  uint64_t v25 = sub_22342C130();
  LOBYTE(v47) = 6;
  sub_22338EB68(&qword_26AD5F408, MEMORY[0x263F07490]);
  v36[1] = v25;
  sub_22342CDF0();
  uint64_t v26 = v37;
  sub_223332AEC(v42, (uint64_t)v17 + v37[10]);
  LOBYTE(v47) = 7;
  uint64_t v27 = (uint64_t)v41;
  sub_22342CDF0();
  sub_223332AEC(v27, (uint64_t)v17 + v26[11]);
  LOBYTE(v47) = 8;
  uint64_t v28 = sub_22342CDC0();
  id v29 = (uint64_t *)((char *)v46 + v37[12]);
  *id v29 = v28;
  v29[1] = v30;
  LOBYTE(v47) = 0;
  uint64_t v31 = sub_22342CDC0();
  uint64_t v32 = (uint64_t *)((char *)v46 + v37[13]);
  uint64_t *v32 = v31;
  v32[1] = v33;
  char v48 = 1;
  sub_223322B18();
  sub_22342CDF0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v38);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v39);
  uint64_t v34 = (uint64_t)v46;
  *(_OWORD *)((char *)v46 + v37[14]) = v47;
  sub_22338EBB0(v34, v40);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  return sub_22338EC14(v34);
}

uint64_t sub_22338E738(char *a1, char *a2)
{
  return sub_2233F421C(*a1, *a2);
}

uint64_t sub_22338E744()
{
  return sub_22342D060();
}

uint64_t sub_22338E7A4()
{
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22338E7E8()
{
  return sub_22342D060();
}

uint64_t sub_22338E844@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_22338E8A4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 29813;
  if (*v1) {
    uint64_t v2 = 28789;
  }
  *a1 = v2;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_22338E8C4()
{
  if (*v0) {
    return 28789;
  }
  else {
    return 29813;
  }
}

uint64_t sub_22338E8E0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_22338E944(uint64_t a1)
{
  unint64_t v2 = sub_223367044();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22338E980(uint64_t a1)
{
  unint64_t v2 = sub_223367044();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22338E9BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22338DDF8(a1, a2);
}

uint64_t sub_22338E9D4(void *a1)
{
  uint64_t v2 = sub_22331E640(&qword_267FA2A08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_223367044();
  sub_22342D090();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22338EAE4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_22338EB68(&qword_26AD5FE18, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
  uint64_t result = sub_22338EB68(&qword_26AD5FE10, (void (*)(uint64_t))type metadata accessor for MessageUpdateRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22338EB68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22338EBB0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for MessageUpdateRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_22338EC14(uint64_t a1)
{
  uint64_t updated = type metadata accessor for MessageUpdateRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for MessageUpdateRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22338ED3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageUpdateRecord.CodingKeys()
{
  return &type metadata for MessageUpdateRecord.CodingKeys;
}

unint64_t sub_22338ED78()
{
  unint64_t result = qword_267FA2D88;
  if (!qword_267FA2D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2D88);
  }
  return result;
}

unint64_t sub_22338EDD0()
{
  unint64_t result = qword_26AD5FE08;
  if (!qword_26AD5FE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5FE08);
  }
  return result;
}

unint64_t sub_22338EE28()
{
  unint64_t result = qword_26AD5FE00;
  if (!qword_26AD5FE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5FE00);
  }
  return result;
}

uint64_t sub_22338EE7C()
{
  uint64_t v1 = (void *)sub_22342BF20();
  unsigned int v2 = objc_msgSend(v0, sel_wasRecordArchived_, v1);

  return v2 ^ 1;
}

uint64_t sub_22338EEC0(char *a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  if (a3)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    unsigned int v8 = a1 >> 11;
    if (a1 >> 11 == 27)
    {
      __break(1u);
    }
    else
    {
      unsigned int v8 = a1 >> 16;
      if (a1 >> 16 > 0x10)
      {
        __break(1u);
      }
      else if ((a1 & 0xFFFFFF80) == 0)
      {
        if (a1 > 0xFF)
        {
          __break(1u);
          goto LABEL_21;
        }
        unsigned int v9 = ((_BYTE)a1 + 1);
LABEL_11:
        *(void *)description = (v9 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v9) & 0x38)) & 0x38));
        if (qword_26AD5EE98 == -1)
        {
LABEL_12:
          unsigned int v6 = qword_26AD5EE90;
          uint64_t v7 = description;
          goto LABEL_13;
        }
LABEL_21:
        swift_once();
        goto LABEL_12;
      }
      int v3 = (a1 & 0x3F) << 8;
      if (a1 < 0x800)
      {
        unsigned int v9 = (v3 | (a1 >> 6)) + 33217;
        goto LABEL_11;
      }
    }
    unsigned int v12 = (v3 | (a1 >> 6) & 0x3F) << 8;
    unsigned int v13 = (((v12 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
    unsigned int v14 = (v12 | (a1 >> 12)) + 8487393;
    if (v8) {
      unsigned int v9 = v13;
    }
    else {
      unsigned int v9 = v14;
    }
    goto LABEL_11;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (qword_26AD5EE98 != -1) {
LABEL_16:
  }
    swift_once();
  unsigned int v6 = qword_26AD5EE90;
  uint64_t v7 = a1;
LABEL_13:
  *(void *)(v4 + 16) = _os_activity_create(&dword_223317000, v7, v6, OS_ACTIVITY_FLAG_DEFAULT);
  swift_beginAccess();
  uint64_t v10 = swift_unknownObjectRetain();
  os_activity_scope_enter(v10, (os_activity_scope_state_t)(v4 + 24));
  swift_endAccess();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_22338F0B8()
{
  qword_26AD5EE90 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t sub_22338F0F4()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t type metadata accessor for OSActivity()
{
  return self;
}

uint64_t destroy for RecordZoneDeleter(uint64_t a1)
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1);
  uint64_t result = _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 40);
  if (*(void *)(a1 + 104))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for RecordZoneDeleter(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  uint64_t v6 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v6;
    *(void *)(a1 + 112) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  return a1;
}

uint64_t assignWithCopy for RecordZoneDeleter(uint64_t a1, uint64_t a2)
{
  sub_2233390AC((uint64_t *)a1, (uint64_t *)a2);
  sub_2233390AC((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  uint64_t v4 = *(void *)(a1 + 104);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v5 = *(void *)(a2 + 104);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v5;
      *(void *)(a1 + 112) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RecordZoneDeleter(uint64_t a1, uint64_t a2)
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 40);
  uint64_t v5 = *(void *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  if (!v7)
  {
    if (v5)
    {
      uint64_t v9 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v5;
      *(void *)(a1 + 112) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordZoneDeleter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordZoneDeleter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordZoneDeleter()
{
  return &type metadata for RecordZoneDeleter;
}

uint64_t sub_22338F4B8(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_22342CD40();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      unint64_t v25 = v3;
      unint64_t v26 = v3 + 32;
      uint64_t v23 = v4;
      uint64_t v24 = a2;
      unint64_t v22 = v3 & 0xC000000000000001;
      while (1)
      {
        if (v6) {
          id v7 = (id)MEMORY[0x223CB54A0](v5, v3);
        }
        else {
          id v7 = *(id *)(v26 + 8 * v5);
        }
        uint64_t v8 = v7;
        if (__OFADD__(v5++, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        uint64_t v10 = *a2;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v11 = v8;
          char v12 = sub_22342CB00();
          swift_bridgeObjectRelease();

          if ((v12 & 1) == 0) {
            goto LABEL_21;
          }
        }
        else
        {
          if (!*(void *)(v10 + 16)) {
            goto LABEL_21;
          }
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_22342C9D0();
          uint64_t v14 = -1 << *(unsigned char *)(v10 + 32);
          unint64_t v15 = v13 & ~v14;
          if (((*(void *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            goto LABEL_20;
          }
          sub_22334199C(0, (unint64_t *)&qword_26AD60338);
          id v16 = *(id *)(*(void *)(v10 + 48) + 8 * v15);
          char v17 = sub_22342C9E0();

          if ((v17 & 1) == 0)
          {
            uint64_t v18 = ~v14;
            while (1)
            {
              unint64_t v15 = (v15 + 1) & v18;
              if (((*(void *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
                break;
              }
              id v19 = *(id *)(*(void *)(v10 + 48) + 8 * v15);
              char v20 = sub_22342C9E0();

              if (v20) {
                goto LABEL_19;
              }
            }
LABEL_20:
            swift_bridgeObjectRelease();
            a2 = v24;
            unint64_t v3 = v25;
            unint64_t v6 = v22;
            uint64_t v4 = v23;
LABEL_21:
            sub_22341814C(&v27, v8);

            MEMORY[0x223CB4D20]();
            if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_22342C4F0();
            }
            sub_22342C530();
            sub_22342C4D0();
            goto LABEL_5;
          }
LABEL_19:

          swift_bridgeObjectRelease();
          a2 = v24;
          unint64_t v3 = v25;
          unint64_t v6 = v22;
          uint64_t v4 = v23;
        }
LABEL_5:
        if (v5 == v4)
        {
          swift_bridgeObjectRelease();
          return v28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_22338F784(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_22342CCA0();
    uint64_t result = sub_2234077BC(a1);
    uint64_t v4 = result;
    int v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    uint64_t v17 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_23;
      }
      uint64_t v18 = v7;
      id v11 = *(id *)(*(void *)(a1 + 48) + 8 * v4);
      sub_22342CC70();
      sub_22342CCB0();
      sub_22342CCC0();
      uint64_t result = sub_22342CC80();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v9) {
        goto LABEL_24;
      }
      uint64_t v12 = *(void *)(v8 + 8 * v10);
      if ((v12 & (1 << v4)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v13 = v12 & (-2 << (v4 & 0x3F));
      if (v13)
      {
        int64_t v9 = __clz(__rbit64(v13)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v14 = v10 + 1;
        unint64_t v15 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v15)
        {
          unint64_t v16 = *(void *)(v8 + 8 * v14);
          if (v16)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v16)) + (v14 << 6);
          }
          else
          {
            while (v15 - 2 != v10)
            {
              unint64_t v16 = *(void *)(a1 + 80 + 8 * v10++);
              if (v16)
              {
                unint64_t v14 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v18 + 1;
      uint64_t v4 = v9;
      if (v18 + 1 == v17) {
        return v19;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_22338F964(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return MEMORY[0x270FA2498](sub_22338F988, 0, 0);
}

uint64_t sub_22338F988()
{
  long long v15 = *(_OWORD *)(v0 + 128);
  uint64_t v1 = sub_223321F60((void *)(*(void *)(v0 + 144) + 24), *(void *)(*(void *)(v0 + 144) + 48));
  uint64_t v2 = v1[1];
  char v3 = *((unsigned char *)v1 + 16);
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  char v6 = *((unsigned char *)v1 + 56);
  uint64_t v7 = v1[8];
  char v8 = *((unsigned char *)v1 + 72);
  uint64_t v9 = v1[10];
  long long v10 = *(_OWORD *)(v1 + 5);
  long long v11 = *(_OWORD *)(v1 + 11);
  *(void *)(v0 + 16) = *v1;
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  *(_OWORD *)(v0 + 56) = v10;
  *(unsigned char *)(v0 + 72) = v6;
  *(void *)(v0 + 80) = v7;
  *(unsigned char *)(v0 + 88) = v8;
  *(void *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 104) = v11;
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 152) = v12;
  *(void *)(v12 + 16) = v0 + 16;
  *(_OWORD *)(v12 + 24) = v15;
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v13;
  void *v13 = v0;
  v13[1] = sub_22338FAF0;
  return MEMORY[0x270FA2360]();
}

uint64_t sub_22338FAF0()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_22338FC20;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_22338FC0C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22338FC0C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22338FC20()
{
  swift_task_dealloc();
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = sub_22342C200();
  sub_223323374(v2, (uint64_t)qword_26AD63108);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_22342C1E0();
  os_log_type_t v6 = sub_22342C700();
  BOOL v7 = os_log_type_enabled(v5, v6);
  char v8 = (void *)v0[21];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    long long v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v12;
    sub_22342CA10();
    *long long v10 = v12;

    _os_log_impl(&dword_223317000, v5, v6, "Encountered error fetching record counts: %@", v9, 0xCu);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v10, -1, -1);
    MEMORY[0x223CB62D0](v9, -1, -1);
  }
  else
  {
  }
  unint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_22338FE2C(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return MEMORY[0x270FA2498](sub_22338FE50, 0, 0);
}

uint64_t sub_22338FE50()
{
  long long v16 = *(_OWORD *)(v0 + 128);
  uint64_t v1 = sub_223321F60(*(void **)(v0 + 144), *(void *)(*(void *)(v0 + 144) + 24));
  uint64_t v2 = v1[1];
  char v3 = *((unsigned char *)v1 + 16);
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  char v6 = *((unsigned char *)v1 + 56);
  uint64_t v7 = v1[8];
  char v8 = *((unsigned char *)v1 + 72);
  uint64_t v9 = v1[10];
  long long v10 = *(_OWORD *)(v1 + 5);
  long long v11 = *(_OWORD *)(v1 + 11);
  *(void *)(v0 + 16) = *v1;
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  *(_OWORD *)(v0 + 56) = v10;
  *(unsigned char *)(v0 + 72) = v6;
  *(void *)(v0 + 80) = v7;
  *(unsigned char *)(v0 + 88) = v8;
  *(void *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 104) = v11;
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 152) = v12;
  *(void *)(v12 + 16) = v0 + 16;
  *(_OWORD *)(v12 + 24) = v16;
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v13;
  void *v13 = v0;
  v13[1] = sub_22338FFB4;
  uint64_t v14 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2360](v13, 0, 0, 0x6F6328746E756F63, 0xEF293A747865746ELL, sub_22339643C, v12, v14);
}

uint64_t sub_22338FFB4()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_223396AB8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_223396ABC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2233900D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2233900F4, 0, 0);
}

uint64_t sub_2233900F4()
{
  uint64_t v1 = sub_223321F60(*(void **)(v0 + 32), *(void *)(*(void *)(v0 + 32) + 24));
  sub_223404C78(*((unsigned char *)v1 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2233901E8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_223400994(v4, v3, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneDeleter.swift", 109, 2);
}

uint64_t sub_2233901E8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233902E4, 0, 0);
}

uint64_t sub_2233902E4()
{
  uint64_t v1 = sub_223321F60((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  uint64_t v2 = *(void **)(*v1 + 56);
  if (v2)
  {
    objc_msgSend(*(id *)(*v1 + 56), sel_startChanges);
    objc_msgSend(v2, sel_setSyncJobStateWithState_, 5);
    objc_msgSend(v2, sel_commitChanges);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_223390398(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (v2)
  {
    uint64_t v3 = v2;
    unsigned int v4 = objc_msgSend(v2, sel_isInternalInstall);

    if (v4)
    {
      id v5 = *(id *)(*sub_223321F60((void *)(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24))+ 24);
      uint64_t v6 = (void *)sub_22342C2D0();
      id v7 = objc_msgSend(v5, sel_objectForKey_, v6);

      if (v7)
      {
        sub_22342CA80();
        swift_unknownObjectRelease();
        sub_2233232B8((uint64_t)v13, qword_26AD5F180);
        sub_22342C300();
        sub_22331E640(&qword_26AD5EFA0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_22342F870;
        *(void *)(inited + 32) = sub_22342C300();
        *(void *)(inited + 40) = v9;
        *(void *)(inited + 72) = MEMORY[0x263F8D310];
        *(void *)(inited + 48) = 0xD000000000000040;
        *(void *)(inited + 56) = 0x80000002234377B0;
        sub_2233C5EB0(inited);
        id v10 = objc_allocWithZone(MEMORY[0x263F087E8]);
        long long v11 = (void *)sub_22342C2D0();
        swift_bridgeObjectRelease();
        uint64_t v12 = (void *)sub_22342C260();
        swift_bridgeObjectRelease();
        objc_msgSend(v10, sel_initWithDomain_code_userInfo_, v11, 1, v12);

        swift_willThrow();
      }
      else
      {
        memset(v13, 0, sizeof(v13));
        sub_2233232B8((uint64_t)v13, qword_26AD5F180);
      }
    }
  }
}

uint64_t sub_2233905D8(uint64_t a1, uint64_t a2)
{
  v3[92] = v2;
  v3[91] = a2;
  v3[90] = a1;
  sub_22331E640(&qword_26AD5E1C8);
  v3[93] = swift_task_alloc();
  uint64_t v4 = sub_22331E640(&qword_26AD602E0);
  v3[94] = v4;
  v3[95] = *(void *)(v4 - 8);
  v3[96] = swift_task_alloc();
  v3[97] = swift_task_alloc();
  uint64_t v5 = sub_22331E640(&qword_26AD602B8);
  v3[98] = v5;
  v3[99] = *(void *)(v5 - 8);
  v3[100] = swift_task_alloc();
  uint64_t v6 = sub_22331E640((uint64_t *)&unk_26AD60300);
  v3[101] = v6;
  v3[102] = *(void *)(v6 - 8);
  v3[103] = swift_task_alloc();
  v3[104] = swift_task_alloc();
  v3[105] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2233907C0, 0, 0);
}

uint64_t sub_2233907C0()
{
  uint64_t v16 = v0;
  uint64_t v1 = sub_223321F60(*(void **)(v0 + 736), *(void *)(*(void *)(v0 + 736) + 24));
  unint64_t v2 = sub_223421FB0(*((unsigned char *)v1 + 16));
  unint64_t v4 = v3;
  *(void *)(v0 + 848) = v2;
  *(void *)(v0 + 856) = v3;
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22342C200();
  *(void *)(v0 + 864) = sub_223323374(v5, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v6 = sub_22342C1E0();
  os_log_type_t v7 = sub_22342C720();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 712) = sub_22339BC14(v2, v4, &v15);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_22342C170();
    sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
    uint64_t v10 = sub_22342CF10();
    *(void *)(v0 + 656) = sub_22339BC14(v10, v11, &v15);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_223317000, v6, v7, "Starting deletes to %s (%s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v9, -1, -1);
    MEMORY[0x223CB62D0](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }

  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 872) = v12;
  *(void *)uint64_t v12 = v0;
  *(void *)(v12 + 8) = sub_223390AE4;
  long long v13 = *(_OWORD *)(v0 + 720);
  *(void *)(v12 + 272) = *(void *)(v0 + 736);
  *(_OWORD *)(v12 + 256) = v13;
  return MEMORY[0x270FA2498](sub_223392C94, 0, 0);
}

uint64_t sub_223390AE4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 880) = a1;
  *(void *)(v3 + 888) = v1;
  swift_task_dealloc();
  if (v1) {
    unint64_t v4 = sub_22339126C;
  }
  else {
    unint64_t v4 = sub_223390BFC;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_223390BFC()
{
  uint64_t v57 = v0;
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 896) = v2;
  if (v2)
  {
    uint64_t v49 = *(void *)(v0 + 832);
    uint64_t v50 = *(void *)(v0 + 824);
    uint64_t v46 = *(void *)(v0 + 840);
    uint64_t v47 = *(void *)(v0 + 816);
    uint64_t v48 = *(void *)(v0 + 808);
    uint64_t v44 = *(void *)(v0 + 800);
    uint64_t v43 = *(void *)(v0 + 792);
    uint64_t v45 = *(void *)(v0 + 784);
    uint64_t v51 = *(void *)(v0 + 776);
    uint64_t v52 = *(void *)(v0 + 760);
    uint64_t v53 = *(void *)(v0 + 752);
    uint64_t v54 = *(void *)(v0 + 768);
    uint64_t v3 = *(void **)(v0 + 736);
    uint64_t v4 = *(void *)(v0 + 728);
    uint64_t v5 = *(void *)(v0 + 720);
    uint64_t v41 = v5;
    uint64_t v42 = v4;
    *(_OWORD *)(v0 + 680) = 0u;
    sub_223322120((uint64_t)v3, v0 + 360);
    uint64_t v6 = sub_223321F60((void *)(v0 + 360), *(void *)(v0 + 384));
    unint64_t v7 = sub_22338F784(v1);
    swift_bridgeObjectRelease();
    long long v8 = *(_OWORD *)v6;
    long long v9 = *((_OWORD *)v6 + 2);
    *(_OWORD *)(v0 + 272) = *((_OWORD *)v6 + 1);
    *(_OWORD *)(v0 + 288) = v9;
    *(_OWORD *)(v0 + 256) = v8;
    long long v10 = *((_OWORD *)v6 + 3);
    long long v11 = *((_OWORD *)v6 + 4);
    long long v12 = *((_OWORD *)v6 + 5);
    *(void *)(v0 + 352) = v6[12];
    *(_OWORD *)(v0 + 320) = v11;
    *(_OWORD *)(v0 + 336) = v12;
    *(_OWORD *)(v0 + 304) = v10;
    id v40 = sub_2233951FC(v5, v4, v7);
    *(void *)(v0 + 904) = v40;
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 360);
    long long v13 = sub_223321F60(v3, v3[3]);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    char v39 = *((unsigned char *)v13 + 16);
    uint64_t v16 = v13[4];
    uint64_t v38 = v13[3];
    uint64_t v17 = v13[5];
    uint64_t v18 = v13[6];
    uint64_t v19 = v13[8];
    char v36 = *((unsigned char *)v13 + 72);
    char v37 = *((unsigned char *)v13 + 56);
    uint64_t v20 = v13[10];
    uint64_t v21 = v13[11];
    uint64_t v22 = v13[12];
    *(void *)(v0 + 424) = &type metadata for SyncZoneInfo;
    *(void *)(v0 + 432) = &off_26D672240;
    uint64_t v23 = swift_allocObject();
    *(void *)(v0 + 400) = v23;
    *(void *)(v23 + 16) = v15;
    *(void *)(v23 + 24) = v14;
    *(unsigned char *)(v23 + 32) = v39;
    *(void *)(v23 + 40) = v38;
    *(void *)(v23 + 48) = v16;
    *(void *)(v23 + 56) = v17;
    *(void *)(v23 + 64) = v18;
    *(unsigned char *)(v23 + 72) = v37;
    *(void *)(v23 + 80) = v19;
    *(unsigned char *)(v23 + 88) = v36;
    *(void *)(v23 + 96) = v20;
    *(void *)(v23 + 104) = v21;
    *(void *)(v23 + 112) = v22;
    *(unsigned char *)(v0 + 553) = 0;
    uint64_t v24 = swift_task_alloc();
    *(void *)(v24 + 16) = v40;
    *(unsigned char *)(v24 + 24) = 0;
    *(void *)(v24 + 32) = v0 + 553;
    *(void *)(v24 + 40) = v41;
    *(void *)(v24 + 48) = v42;
    *(void *)(v24 + 56) = v0 + 400;
    (*(void (**)(uint64_t, void, uint64_t))(v43 + 104))(v44, *MEMORY[0x263F8F680], v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22342C620();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v49, v46, v48);
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 400);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v50, v49, v48);
    sub_22334183C(&qword_26AD60310, (uint64_t *)&unk_26AD60300);
    sub_22342C5F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v54, v51, v53);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
    return MEMORY[0x270FA2498](sub_223391338, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_22342C1E0();
    os_log_type_t v26 = sub_22342C720();
    BOOL v27 = os_log_type_enabled(v25, v26);
    unint64_t v28 = *(void *)(v0 + 856);
    if (v27)
    {
      uint64_t v29 = *(void *)(v0 + 848);
      uint64_t v30 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v56[0] = v55;
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 696) = sub_22339BC14(v29, v28, v56);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      sub_22342C170();
      sub_223332BBC((unint64_t *)&qword_26AD5ED30, MEMORY[0x263F07508]);
      uint64_t v31 = sub_22342CF10();
      *(void *)(v0 + 704) = sub_22339BC14(v31, v32, v56);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_223317000, v25, v26, "Nothing more to delete for %s (%s)", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v55, -1, -1);
      MEMORY[0x223CB62D0](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }

    BOOL v33 = *(void *)(v0 + 896) != 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void, BOOL))(v0 + 8);
    return v34(0, v33);
  }
}

uint64_t sub_22339126C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_223391338()
{
  swift_beginAccess();
  uint64_t v1 = sub_22334183C(&qword_26AD602D8, &qword_26AD602E0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 912) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_223391428;
  uint64_t v3 = *(void *)(v0 + 752);
  return MEMORY[0x270FA1E80](v0 + 536, v3, v1);
}

uint64_t sub_223391428()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 920) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_223391AC8;
  }
  else
  {
    swift_endAccess();
    *(_OWORD *)(v2 + 928) = *(_OWORD *)(v2 + 536);
    *(unsigned char *)(v2 + 554) = *(unsigned char *)(v2 + 552);
    uint64_t v3 = sub_223391558;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_223391558(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v39 = v3;
  unsigned int v4 = *(unsigned __int8 *)(v3 + 554);
  if (v4 > 0xFD)
  {
    (*(void (**)(void, void))(*(void *)(v3 + 760) + 8))(*(void *)(v3 + 768), *(void *)(v3 + 752));
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v3 + 736);
    sub_223396854(v5, v3 + 136);
    uint64_t v6 = *(void *)(v3 + 688);
    sub_223396854(v5, v3 + 16);
    uint64_t v7 = *(void *)(v3 + 680);
    long long v8 = sub_22342C1E0();
    os_log_type_t v9 = sub_22342C720();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v36 = v7;
      uint64_t v10 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v38 = v35;
      *(_DWORD *)uint64_t v10 = 136315906;
      long long v11 = sub_223321F60((void *)(v3 + 136), *(void *)(v3 + 160));
      unint64_t v12 = sub_223421FB0(*((unsigned char *)v11 + 16));
      *(void *)(v3 + 616) = sub_22339BC14(v12, v13, &v38);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_22339688C(v3 + 136);
      *(_WORD *)(v10 + 12) = 2048;
      *(void *)(v3 + 624) = v6;
      sub_22342CA10();
      *(_WORD *)(v10 + 22) = 2080;
      uint64_t v14 = sub_223321F60((void *)(v3 + 16), *(void *)(v3 + 40));
      unint64_t v15 = sub_223421FB0(*((unsigned char *)v14 + 16));
      *(void *)(v3 + 632) = sub_22339BC14(v15, v16, &v38);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_22339688C(v3 + 16);
      *(_WORD *)(v10 + 32) = 2048;
      *(void *)(v3 + 640) = v36;
      sub_22342CA10();
      _os_log_impl(&dword_223317000, v8, v9, "%s: %lld records %s deleted, %lld failures", (uint8_t *)v10, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v35, -1, -1);
      MEMORY[0x223CB62D0](v10, -1, -1);
    }
    else
    {
      sub_22339688C(v3 + 136);
      sub_22339688C(v3 + 16);
    }

    sub_223321F60((void *)(*(void *)(v3 + 736) + 40), *(void *)(*(void *)(v3 + 736) + 64));
    char v37 = (uint64_t (__cdecl *)())((char *)&dword_267FA2C38 + dword_267FA2C38);
    BOOL v27 = (void *)swift_task_alloc();
    *(void *)(v3 + 960) = v27;
    *BOOL v27 = v3;
    v27[1] = sub_223392464;
    return v37();
  }
  if ((v4 & 0xC0) != 0x40)
  {
    sub_223341724(*(void **)(v3 + 928), *(void **)(v3 + 936), *(unsigned char *)(v3 + 554));
    goto LABEL_17;
  }
  if (v4)
  {
    uint64_t v28 = *(void *)(v3 + 680);
    BOOL v18 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v18)
    {
LABEL_21:
      __break(1u);
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    uint64_t v30 = *(void **)(v3 + 936);
    uint64_t v31 = *(void **)(v3 + 928);
    *(void *)(v3 + 680) = v29;
    *(void *)(v3 + 560) = 0;
    *(void *)(v3 + 568) = 0xE000000000000000;
    sub_2233417B0(v31, v30, v4);
    id v32 = v31;
    id v33 = v30;
    sub_22342CBB0();
    uint64_t v34 = *(void *)(v3 + 568);
    *(void *)(v3 + 592) = *(void *)(v3 + 560);
    *(void *)(v3 + 600) = v34;
    sub_22342C3B0();
    sub_22342C3B0();
    sub_22342C3B0();
    *(void *)(v3 + 576) = v32;
    *(void *)(v3 + 584) = v30;
    sub_22342CD00();
    sub_223381530(7, v30, *(void *)(v3 + 592), *(void *)(v3 + 600));
    sub_223341724(v31, v30, v4);
    sub_223341724(v31, v30, v4);
    swift_bridgeObjectRelease();

LABEL_17:
    a1 = sub_223391338;
    a2 = 0;
    a3 = 0;
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  uint64_t v17 = *(void *)(v3 + 688);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v20 = *(void **)(v3 + 928);
  uint64_t v21 = *(void **)(v3 + 936);
  uint64_t v22 = *(void *)(v3 + 736);
  *(void *)(v3 + 688) = v19;
  sub_223321F60((void *)(v22 + 40), *(void *)(v22 + 64));
  sub_2233417C4(v20, v21, v4);
  sub_2233417C4(v20, v21, v4);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v3 + 944) = v23;
  *uint64_t v23 = v3;
  v23[1] = sub_223392040;
  uint64_t v24 = *(void *)(v3 + 728);
  uint64_t v25 = *(void *)(v3 + 720);
  return sub_223382130(v25, v24, (uint64_t)v20, 0, 0);
}

uint64_t sub_223391AC8()
{
  swift_endAccess();
  return MEMORY[0x270FA2498](sub_223391B30, 0, 0);
}

uint64_t sub_223391B30()
{
  *(void *)(v0 + 608) = *(void *)(v0 + 920);
  sub_22331E640(&qword_26AD5EFB0);
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_223391BBC, 0, 0);
}

uint64_t sub_223391BBC()
{
  uint64_t v1 = *(void **)(v0 + 920);
  uint64_t v2 = *(void *)(v0 + 744);
  uint64_t v3 = *(void **)(v0 + 736);
  long long v25 = *(_OWORD *)(v0 + 720);
  (*(void (**)(void, void))(*(void *)(v0 + 760) + 8))(*(void *)(v0 + 768), *(void *)(v0 + 752));
  char v4 = *((unsigned char *)sub_223321F60(v3, v3[3]) + 16);
  uint64_t v5 = sub_22342C5D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = v4;
  *(_OWORD *)(v6 + 40) = v25;
  swift_unknownObjectRetain();
  sub_22332606C(v2, (uint64_t)&unk_267FA2DE0, v6);
  swift_release();
  id v7 = v1;
  id v8 = v1;
  os_log_type_t v9 = sub_22342C1E0();
  os_log_type_t v10 = sub_22342C700();
  if (os_log_type_enabled(v9, v10))
  {
    long long v11 = *(void **)(v0 + 920);
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    unint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 138412290;
    id v14 = v11;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 664) = v15;
    sub_22342CA10();
    void *v13 = v15;

    _os_log_impl(&dword_223317000, v9, v10, "Error handling batch completion with error %@", v12, 0xCu);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v13, -1, -1);
    MEMORY[0x223CB62D0](v12, -1, -1);
  }
  else
  {
    unint64_t v16 = *(void **)(v0 + 920);
  }
  uint64_t v17 = *(void *)(v0 + 720);

  sub_223321F60((void *)(v17 + 16), *(void *)(v17 + 40));
  swift_getObjectType();
  swift_unknownObjectRetain();
  char v18 = sub_22338EE7C();
  swift_unknownObjectRelease();
  if (v18)
  {
    uint64_t v19 = *(void **)(v0 + 920);
    uint64_t v20 = *(void **)(v0 + 904);
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_getErrorValue();
    sub_223349080(*(void *)(v0 + 448));
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_223381530(7, v19, 0xD000000000000027, 0x8000000223437740);
    swift_bridgeObjectRelease();
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_type_t v26 = (uint64_t (*)(uint64_t))((char *)&dword_267FA2D28 + dword_267FA2D28);
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 1000) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_2233928A0;
    uint64_t v24 = *(void *)(v0 + 920);
    return v26(v24);
  }
}

uint64_t sub_223392040()
{
  *(void *)(*(void *)v1 + 952) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233921F8;
  }
  else {
    uint64_t v2 = sub_223392154;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_223392154()
{
  uint64_t v1 = *(void **)(v0 + 936);
  uint64_t v2 = *(void **)(v0 + 928);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 554);
  sub_223341724(v2, v1, v3);
  sub_223341724(v2, v1, v3);
  sub_223341738(v2, v1, v3);
  return MEMORY[0x270FA2498](sub_223391338, 0, 0);
}

uint64_t sub_2233921F8()
{
  uint64_t v1 = *(void **)(v0 + 952);
  uint64_t v2 = *(void **)(v0 + 936);
  unsigned __int8 v3 = *(void **)(v0 + 928);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 554);
  sub_2233417B0(v3, v2, v4);
  id v5 = v1;
  sub_2233417B0(v3, v2, v4);
  id v6 = v1;
  id v7 = sub_22342C1E0();
  os_log_type_t v8 = sub_22342C700();
  BOOL v9 = os_log_type_enabled(v7, v8);
  os_log_type_t v10 = *(void **)(v0 + 952);
  unsigned __int8 v11 = *(unsigned char *)(v0 + 554);
  unint64_t v12 = *(void **)(v0 + 936);
  unint64_t v13 = *(void **)(v0 + 928);
  if (v9)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412546;
    id v16 = v10;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v14 + 4) = v17;
    *uint64_t v15 = v17;

    *(_WORD *)(v14 + 12) = 2112;
    *(void *)(v14 + 14) = v13;
    v15[1] = v13;
    sub_223341724(v13, v12, v11);
    _os_log_impl(&dword_223317000, v7, v8, "Error handling record delete: %@ for record ID: %@", (uint8_t *)v14, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v15, -1, -1);
    MEMORY[0x223CB62D0](v14, -1, -1);

    sub_223341724(v13, v12, v11);
    sub_223341724(v13, v12, v11);
    sub_223341738(v13, v12, v11);
  }
  else
  {
    sub_223341724(*(void **)(v0 + 928), *(void **)(v0 + 936), *(unsigned char *)(v0 + 554));

    sub_223341724(v13, v12, v11);
    sub_223341724(v13, v12, v11);

    sub_223341724(v13, v12, v11);
    sub_223341724(v13, v12, v11);
  }
  return MEMORY[0x270FA2498](sub_223391338, 0, 0);
}

uint64_t sub_223392464()
{
  *(void *)(*(void *)v1 + 968) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233927D4;
  }
  else {
    uint64_t v2 = sub_223392578;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_223392578()
{
  uint64_t v1 = *(void **)(v0 + 736);
  uint64_t v2 = *(void *)(*(void *)(v0 + 720) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
  *(void *)(v0 + 976) = v2;
  swift_beginAccess();
  *(void *)(v0 + 984) = *(void *)(v0 + 688);
  swift_beginAccess();
  *(void *)(v0 + 992) = *(void *)(v0 + 680);
  unsigned __int8 v3 = sub_223321F60(v1, v1[3]);
  *(unsigned char *)(v0 + 555) = sub_2234220F8(*((unsigned char *)v3 + 16));
  swift_retain();
  return MEMORY[0x270FA2498](sub_223392660, v2, 0);
}

uint64_t sub_223392660()
{
  sub_223369D9C(*(void *)(v0 + 984), *(void *)(v0 + 992), 2u, *(unsigned char *)(v0 + 555));
  swift_release();
  return MEMORY[0x270FA2498](sub_2233926E0, 0, 0);
}

void sub_2233926E0()
{
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = v1 + v2;
  if (__OFADD__(v1, v2))
  {
    __break(1u);
  }
  else
  {
    BOOL v4 = *(void *)(v0 + 896) != 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(void (**)(uint64_t, BOOL))(v0 + 8);
    v5(v3, v4);
  }
}

uint64_t sub_2233927D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233928A0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_22339299C, 0, 0);
}

uint64_t sub_22339299C()
{
  uint64_t v19 = v0;

  uint64_t v1 = *(void *)(v0 + 736);
  sub_223396854(v1, v0 + 136);
  uint64_t v2 = *(void *)(v0 + 688);
  sub_223396854(v1, v0 + 16);
  uint64_t v3 = *(void *)(v0 + 680);
  BOOL v4 = sub_22342C1E0();
  os_log_type_t v5 = sub_22342C720();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v15 = v3;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v6 = 136315906;
    id v7 = sub_223321F60((void *)(v0 + 136), *(void *)(v0 + 160));
    unint64_t v8 = sub_223421FB0(*((unsigned char *)v7 + 16));
    *(void *)(v0 + 616) = sub_22339BC14(v8, v9, &v18);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_22339688C(v0 + 136);
    *(_WORD *)(v6 + 12) = 2048;
    *(void *)(v0 + 624) = v2;
    sub_22342CA10();
    *(_WORD *)(v6 + 22) = 2080;
    os_log_type_t v10 = sub_223321F60((void *)(v0 + 16), *(void *)(v0 + 40));
    unint64_t v11 = sub_223421FB0(*((unsigned char *)v10 + 16));
    *(void *)(v0 + 632) = sub_22339BC14(v11, v12, &v18);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_22339688C(v0 + 16);
    *(_WORD *)(v6 + 32) = 2048;
    *(void *)(v0 + 640) = v15;
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v4, v5, "%s: %lld records %s deleted, %lld failures", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v16, -1, -1);
    MEMORY[0x223CB62D0](v6, -1, -1);
  }
  else
  {
    sub_22339688C(v0 + 136);
    sub_22339688C(v0 + 16);
  }

  sub_223321F60((void *)(*(void *)(v0 + 736) + 40), *(void *)(*(void *)(v0 + 736) + 64));
  uint64_t v17 = (uint64_t (__cdecl *)())((char *)&dword_267FA2C38 + dword_267FA2C38);
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 960) = v13;
  void *v13 = v0;
  v13[1] = sub_223392464;
  return v17();
}

uint64_t sub_223392C70(uint64_t a1, uint64_t a2)
{
  v3[33] = a2;
  v3[34] = v2;
  v3[32] = a1;
  return MEMORY[0x270FA2498](sub_223392C94, 0, 0);
}

uint64_t sub_223392C94()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[34];
  if (*(unsigned char *)(v1 + 96) == 1)
  {
    if (qword_26AD5F0D8 != -1)
    {
      swift_once();
      uint64_t v1 = v0[34];
    }
    uint64_t v2 = sub_22342C200();
    sub_223323374(v2, (uint64_t)qword_26AD63108);
    sub_223396854(v1, (uint64_t)(v0 + 2));
    uint64_t v3 = sub_22342C1E0();
    os_log_type_t v4 = sub_22342C720();
    if (os_log_type_enabled(v3, v4))
    {
      os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v15 = v6;
      *(_DWORD *)os_log_type_t v5 = 136315138;
      id v7 = sub_223321F60(v0 + 2, v0[5]);
      unint64_t v8 = sub_223421FB0(*((unsigned char *)v7 + 16));
      v0[31] = sub_22339BC14(v8, v9, &v15);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_22339688C((uint64_t)(v0 + 2));
      _os_log_impl(&dword_223317000, v3, v4, "Refetching records for delete operation in zone %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v6, -1, -1);
      MEMORY[0x223CB62D0](v5, -1, -1);
    }
    else
    {
      sub_22339688C((uint64_t)(v0 + 2));
    }

    unint64_t v13 = (void *)v0[34];
    sub_223321F60(v13 + 5, v13[8]);
    uint64_t v10 = v13[11];
    unint64_t v11 = (void *)swift_task_alloc();
    v0[36] = v11;
    *unint64_t v11 = v0;
    unint64_t v12 = sub_223393090;
  }
  else
  {
    sub_223321F60((void *)(v1 + 40), *(void *)(v1 + 64));
    uint64_t v10 = *(void *)(v1 + 88);
    unint64_t v11 = (void *)swift_task_alloc();
    v0[35] = v11;
    *unint64_t v11 = v0;
    unint64_t v12 = sub_223392F34;
  }
  v11[1] = v12;
  return sub_223381CB0(v10);
}

uint64_t sub_223392F34(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 376) = a2;
    *(void *)(v6 + 384) = a1;
    return MEMORY[0x270FA2498](sub_223393784, 0, 0);
  }
}

uint64_t sub_223393090(uint64_t a1, uint64_t a2)
{
  os_log_type_t v5 = (void *)*v3;
  uint64_t v6 = (void *)*v3;
  v5[37] = a2;
  v5[38] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = (uint64_t (*)(void))v6[1];
    return v7();
  }
  else
  {
    v5[39] = a1;
    return MEMORY[0x270FA2498](sub_2233931E0, 0, 0);
  }
}

uint64_t sub_2233931E0()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 296);
    uint64_t v3 = *(void *)(v0 + 264);
    uint64_t v4 = *(void *)(v0 + 256);
    os_log_type_t v5 = sub_223321F60(*(void **)(v0 + 272), *(void *)(*(void *)(v0 + 272) + 24));
    uint64_t v6 = sub_22338F784(v2);
    long long v7 = *(_OWORD *)v5;
    long long v8 = *((_OWORD *)v5 + 2);
    *(_OWORD *)(v0 + 152) = *((_OWORD *)v5 + 1);
    *(_OWORD *)(v0 + 168) = v8;
    *(_OWORD *)(v0 + 136) = v7;
    long long v9 = *((_OWORD *)v5 + 3);
    long long v10 = *((_OWORD *)v5 + 4);
    long long v11 = *((_OWORD *)v5 + 5);
    *(void *)(v0 + 232) = v5[12];
    *(_OWORD *)(v0 + 200) = v10;
    *(_OWORD *)(v0 + 216) = v11;
    *(_OWORD *)(v0 + 184) = v9;
    *(void *)(v0 + 320) = sub_22341F9C8(v6, 0, v4, v3);
    swift_bridgeObjectRelease();
    unint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v12;
    *unint64_t v12 = v0;
    v12[1] = sub_22339336C;
    uint64_t v14 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 264);
    return sub_2233FBEF4(v14, v13);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v16 = sub_2233C634C(MEMORY[0x263F8EE78]);
    uint64_t v17 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v17(v16);
  }
}

uint64_t sub_22339336C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  os_log_type_t v5 = (void *)*v2;
  v4[42] = a1;
  v4[43] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_223393620, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v4[44] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_2233934F8;
    uint64_t v7 = v4[37];
    return sub_223393CA4(v7, a1);
  }
}

uint64_t sub_2233934F8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    os_log_type_t v5 = sub_22339370C;
  }
  else
  {
    *(void *)(v4 + 368) = a1;
    os_log_type_t v5 = sub_223393690;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_223393620()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_223393690()
{
  uint64_t v1 = (void *)v0[40];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = v0[46];
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_22339370C()
{
  uint64_t v1 = *(void **)(v0 + 320);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_223393784()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2233937EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 24) = a6;
  *(unsigned char *)(v6 + 40) = a4;
  return MEMORY[0x270FA2498](sub_223393810, 0, 0);
}

uint64_t sub_223393810()
{
  sub_223404CB4(*(unsigned char *)(v0 + 40));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_22333F9BC;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_223400994(v3, v2, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneDeleter.swift", 109, 2);
}

uint64_t sub_2233938F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2DB0 + dword_267FA2DB0);
  uint64_t v6 = (void *)swift_task_alloc();
  v3[5] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2233939B8;
  return v8(a1, a2);
}

uint64_t sub_2233939B8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_223393AB4, 0, 0);
}

uint64_t sub_223393AB4()
{
  uint64_t v1 = sub_223321F60(*(void **)(v0 + 32), *(void *)(*(void *)(v0 + 32) + 24));
  sub_223404CB4(*((unsigned char *)v1 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_223393BA8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_223400994(v4, v3, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneDeleter.swift", 109, 2);
}

uint64_t sub_223393BA8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233368B0, 0, 0);
}

uint64_t sub_223393CA4(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = sub_22342C1B0();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_22342C1C0();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  sub_22331E640((uint64_t *)&unk_26AD5ED20);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v5 = sub_22342C130();
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_223393EB4, 0, 0);
}

uint64_t sub_223393EB4()
{
  id v142 = v0;
  uint64_t v1 = v0[18];
  uint64_t v139 = v0[17];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  sub_22342C120();
  sub_22342C1A0();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v6, *MEMORY[0x263F07870], v7);
  sub_22342C190();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v135 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v135(v2, 1, v139) == 1)
  {
    sub_2233232B8(v0[16], (uint64_t *)&unk_26AD5ED20);
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_22342C200();
    sub_223323374(v9, (uint64_t)qword_26AD63108);
    long long v10 = sub_22342C1E0();
    os_log_type_t v11 = sub_22342C700();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl(&dword_223317000, v10, v11, "Error creating latest permitted modification date.", v12, 2u);
      MEMORY[0x223CB62D0](v12, -1, -1);
    }
    uint64_t v13 = v0[26];
    uint64_t v14 = v0[18];
    uint64_t v15 = v0[17];

    sub_2233968BC();
    swift_allocError();
    unsigned char *v16 = 0;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  uint64_t v136 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 32);
  v136(v0[25], v0[16], v0[17]);
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v19 = v0[24];
  uint64_t v20 = v0[25];
  uint64_t v21 = v0[17];
  uint64_t v22 = v0[18];
  uint64_t v23 = sub_22342C200();
  sub_223323374(v23, (uint64_t)qword_26AD63108);
  uint64_t v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v130(v19, v20, v21);
  uint64_t v24 = sub_22342C1E0();
  os_log_type_t v25 = sub_22342C720();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v27 = v0[24];
  uint64_t v28 = v0[17];
  uint64_t v29 = v0[18];
  if (v26)
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v141[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    sub_223332BBC(&qword_26AD5F230, MEMORY[0x263F07490]);
    uint64_t v32 = sub_22342CF10();
    v0[6] = sub_22339BC14(v32, v33, v141);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    uint64_t v131 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v131(v27, v28);
    _os_log_impl(&dword_223317000, v24, v25, "Filtering chat recordIDs to those with modification date after %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v31, -1, -1);
    MEMORY[0x223CB62D0](v30, -1, -1);
  }
  else
  {
    uint64_t v131 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v131(v0[24], v0[17]);
  }

  uint64_t v34 = v0[8];
  if ((v34 & 0xC000000000000001) != 0)
  {
    uint64_t v35 = sub_22342CD10();
    uint64_t v133 = 0;
    uint64_t v36 = 0;
    unint64_t v37 = 0;
    unint64_t v38 = v35 | 0x8000000000000000;
  }
  else
  {
    uint64_t v39 = -1 << *(unsigned char *)(v34 + 32);
    uint64_t v36 = ~v39;
    uint64_t v133 = v34 + 64;
    uint64_t v40 = -v39;
    if (v40 < 64) {
      uint64_t v41 = ~(-1 << v40);
    }
    else {
      uint64_t v41 = -1;
    }
    unint64_t v37 = v41 & *(void *)(v34 + 64);
    unint64_t v38 = v0[8];
  }
  uint64_t v128 = v0[7];
  int64_t v132 = (unint64_t)(v36 + 64) >> 6;
  uint64_t v137 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[18] + 56);
  swift_bridgeObjectRetain();
  uint64_t v42 = 0;
  uint64_t v124 = (void *)MEMORY[0x263F8EE80];
  unint64_t v134 = v38;
  while (1)
  {
    if ((v38 & 0x8000000000000000) != 0)
    {
      uint64_t v48 = sub_22342CD20();
      if (!v48) {
        goto LABEL_78;
      }
      uint64_t v50 = v49;
      v0[3] = v48;
      sub_22334199C(0, (unint64_t *)&qword_26AD60338);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v44 = v0[2];
      swift_unknownObjectRelease();
      v0[5] = v50;
      sub_22334199C(0, (unint64_t *)&qword_26AD60450);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v51 = (id)v0[4];
      swift_unknownObjectRelease();
      uint64_t v47 = v42;
      uint64_t v45 = v37;
      if (!v44) {
        goto LABEL_78;
      }
      goto LABEL_46;
    }
    if (!v37) {
      break;
    }
    uint64_t v45 = (v37 - 1) & v37;
    unint64_t v46 = __clz(__rbit64(v37)) | (v42 << 6);
    uint64_t v47 = v42;
LABEL_45:
    uint64_t v55 = 8 * v46;
    uint64_t v56 = *(void **)(*(void *)(v38 + 56) + v55);
    uint64_t v44 = *(id *)(*(void *)(v38 + 48) + v55);
    id v51 = v56;
    if (!v44) {
      goto LABEL_78;
    }
LABEL_46:
    uint64_t v138 = v47;
    unint64_t v140 = v45;
    id v57 = objc_msgSend(v51, sel_modificationDate);
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v59 = v0[22];
      uint64_t v60 = v0[17];
      uint64_t v61 = v0[15];
      sub_22342C100();

      v136(v61, v59, v60);
      (*v137)(v61, 0, 1, v60);
      if (v135(v61, 1, v60) == 1) {
        goto LABEL_58;
      }
      uint64_t v62 = v0[25];
      uint64_t v63 = v0[23];
      uint64_t v64 = v0[21];
      uint64_t v65 = v0[17];
      v136(v63, v0[15], v65);
      if (sub_22342C0C0()) {
        uint64_t v66 = v63;
      }
      else {
        uint64_t v66 = v62;
      }
      v130(v64, v66, v65);
      if (sub_22342C0F0())
      {
        if (!*(void *)(v128 + 16)) {
          goto LABEL_55;
        }
        uint64_t v67 = v44;
        unint64_t v68 = sub_22339E390((uint64_t)v67);
        if (v69)
        {
          unint64_t v101 = (uint64_t *)(*(void *)(v128 + 56) + 16 * v68);
          uint64_t v103 = *v101;
          uint64_t v102 = v101[1];
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v141[0] = (uint64_t)v124;
          unint64_t v106 = sub_22339E390((uint64_t)v67);
          uint64_t v107 = v124[2];
          BOOL v108 = (v105 & 1) == 0;
          uint64_t result = v107 + v108;
          if (__OFADD__(v107, v108))
          {
            __break(1u);
LABEL_86:
            __break(1u);
            return result;
          }
          char v109 = v105;
          if (v124[3] >= result)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              if (v105) {
                goto LABEL_73;
              }
            }
            else
            {
              uint64_t result = (uint64_t)sub_2233CF1CC();
              uint64_t v124 = (void *)v141[0];
              if (v109) {
                goto LABEL_73;
              }
            }
          }
          else
          {
            sub_2233CC4F8(result, isUniquelyReferenced_nonNull_native);
            uint64_t v124 = (void *)v141[0];
            uint64_t result = sub_22339E390((uint64_t)v67);
            if ((v109 & 1) != (v110 & 1)) {
              goto LABEL_82;
            }
            unint64_t v106 = result;
            if (v109)
            {
LABEL_73:
              id v111 = (void *)(v124[7] + 16 * v106);
              swift_bridgeObjectRelease();
              void *v111 = v103;
              v111[1] = v102;
              goto LABEL_77;
            }
          }
          v124[(v106 >> 6) + 8] |= 1 << v106;
          *(void *)(v124[6] + 8 * v106) = v67;
          uint64_t v112 = (void *)(v124[7] + 16 * v106);
          *uint64_t v112 = v103;
          v112[1] = v102;
          uint64_t v113 = v124[2];
          BOOL v114 = __OFADD__(v113, 1);
          uint64_t v115 = v113 + 1;
          if (v114) {
            goto LABEL_86;
          }
          v124[2] = v115;
          uint64_t v116 = v67;
LABEL_77:
          unint64_t v38 = v134;
          uint64_t v117 = v0[23];
          uint64_t v118 = v0[21];
          uint64_t v119 = v0[17];
          swift_bridgeObjectRelease();

          v131(v118, v119);
          v131(v117, v119);
          uint64_t v42 = v138;
          unint64_t v37 = v140;
        }
        else
        {

LABEL_55:
          CFAbsoluteTime v70 = v51;
          uint64_t v71 = sub_22342C1E0();
          os_log_type_t v72 = sub_22342C700();
          if (os_log_type_enabled(v71, v72))
          {
            uint64_t v73 = swift_slowAlloc();
            uint64_t v74 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v73 = 138412290;
            *(void *)(v73 + 4) = v70;
            void *v74 = v51;

            _os_log_impl(&dword_223317000, v71, v72, "Fetched CKRecord with incorrect recordID, recordID not present in uniqueGuidsByRecordIDs: %@", (uint8_t *)v73, 0xCu);
            sub_22331E640((uint64_t *)&unk_26AD5F150);
            swift_arrayDestroy();
            MEMORY[0x223CB62D0](v74, -1, -1);
            MEMORY[0x223CB62D0](v73, -1, -1);
            unint64_t v75 = v44;
            uint64_t v44 = v70;
          }
          else
          {

            unint64_t v75 = v70;
          }
          unint64_t v38 = v134;
          uint64_t v42 = v138;
          unint64_t v37 = v140;

          uint64_t v98 = v0[23];
          uint64_t v99 = v0[21];
          uint64_t v100 = v0[17];

          v131(v99, v100);
          v131(v98, v100);
        }
      }
      else
      {
        uint64_t v82 = v0[25];
        uint64_t v83 = v0[19];
        uint64_t v84 = v0[17];
        v130(v0[20], v0[23], v84);
        v130(v83, v82, v84);
        uint64_t v85 = v44;
        id v86 = sub_22342C1E0();
        os_log_type_t v87 = sub_22342C720();
        BOOL v88 = os_log_type_enabled(v86, v87);
        uint64_t v89 = v0[23];
        uint64_t v90 = v0[20];
        uint64_t v129 = v0[21];
        uint64_t v91 = v0[19];
        uint64_t v92 = v0[17];
        if (v88)
        {
          uint64_t v127 = v0[23];
          uint64_t v93 = swift_slowAlloc();
          uint64_t v125 = (void *)swift_slowAlloc();
          uint64_t v126 = swift_slowAlloc();
          v141[0] = v126;
          *(_DWORD *)uint64_t v93 = 138412802;
          *(void *)(v93 + 4) = v85;
          *uint64_t v125 = v44;

          *(_WORD *)(v93 + 12) = 2080;
          sub_223332BBC(&qword_26AD5F230, MEMORY[0x263F07490]);
          uint64_t v94 = sub_22342CF10();
          *(void *)(v93 + 14) = sub_22339BC14(v94, v95, v141);
          swift_bridgeObjectRelease();
          v131(v90, v92);
          *(_WORD *)(v93 + 22) = 2080;
          uint64_t v96 = sub_22342CF10();
          *(void *)(v93 + 24) = sub_22339BC14(v96, v97, v141);
          swift_bridgeObjectRelease();
          v131(v91, v92);
          _os_log_impl(&dword_223317000, v86, v87, "Filtering out chat with record ID %@ modification date %s since it is after %s", (uint8_t *)v93, 0x20u);
          sub_22331E640((uint64_t *)&unk_26AD5F150);
          swift_arrayDestroy();
          MEMORY[0x223CB62D0](v125, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x223CB62D0](v126, -1, -1);
          MEMORY[0x223CB62D0](v93, -1, -1);

          v131(v129, v92);
          v131(v127, v92);
        }
        else
        {

          v131(v91, v92);
          v131(v90, v92);

          v131(v129, v92);
          v131(v89, v92);
        }
        uint64_t v42 = v138;
        unint64_t v37 = v140;
        unint64_t v38 = v134;
      }
    }
    else
    {
      (*v137)(v0[15], 1, 1, v0[17]);
LABEL_58:
      sub_2233232B8(v0[15], (uint64_t *)&unk_26AD5ED20);
      uint64_t v76 = v51;
      uint64_t v77 = sub_22342C1E0();
      os_log_type_t v78 = sub_22342C700();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = swift_slowAlloc();
        uint64_t v80 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = 138412290;
        *(void *)(v79 + 4) = v76;
        void *v80 = v51;

        _os_log_impl(&dword_223317000, v77, v78, "No modification date on record %@", (uint8_t *)v79, 0xCu);
        sub_22331E640((uint64_t *)&unk_26AD5F150);
        swift_arrayDestroy();
        uint64_t v81 = v80;
        unint64_t v38 = v134;
        MEMORY[0x223CB62D0](v81, -1, -1);
        MEMORY[0x223CB62D0](v79, -1, -1);
        uint64_t v43 = v77;
        uint64_t v77 = v76;
      }
      else
      {

        uint64_t v43 = v76;
        uint64_t v44 = v76;
      }
      uint64_t v42 = v138;
      unint64_t v37 = v140;
    }
  }
  int64_t v52 = v42 + 1;
  if (!__OFADD__(v42, 1))
  {
    if (v52 >= v132) {
      goto LABEL_78;
    }
    unint64_t v53 = *(void *)(v133 + 8 * v52);
    uint64_t v47 = v42 + 1;
    if (!v53)
    {
      uint64_t v47 = v42 + 2;
      if (v42 + 2 >= v132) {
        goto LABEL_78;
      }
      unint64_t v53 = *(void *)(v133 + 8 * v47);
      if (!v53)
      {
        uint64_t v47 = v42 + 3;
        if (v42 + 3 >= v132) {
          goto LABEL_78;
        }
        unint64_t v53 = *(void *)(v133 + 8 * v47);
        if (!v53)
        {
          uint64_t v47 = v42 + 4;
          if (v42 + 4 >= v132) {
            goto LABEL_78;
          }
          unint64_t v53 = *(void *)(v133 + 8 * v47);
          if (!v53)
          {
            uint64_t v47 = v42 + 5;
            if (v42 + 5 >= v132) {
              goto LABEL_78;
            }
            unint64_t v53 = *(void *)(v133 + 8 * v47);
            if (!v53)
            {
              uint64_t v54 = v42 + 6;
              while (v132 != v54)
              {
                unint64_t v53 = *(void *)(v133 + 8 * v54++);
                if (v53)
                {
                  uint64_t v47 = v54 - 1;
                  goto LABEL_44;
                }
              }
LABEL_78:
              uint64_t v121 = v0[25];
              uint64_t v120 = v0[26];
              uint64_t v122 = v0[17];
              sub_223342834();
              v131(v121, v122);
              v131(v120, v122);
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v123 = (uint64_t (*)(void *))v0[1];
              return v123(v124);
            }
          }
        }
      }
    }
LABEL_44:
    uint64_t v45 = (v53 - 1) & v53;
    unint64_t v46 = __clz(__rbit64(v53)) + (v47 << 6);
    goto LABEL_45;
  }
  __break(1u);
LABEL_82:
  sub_22334199C(0, (unint64_t *)&qword_26AD60338);
  return sub_22342CFB0();
}

uint64_t sub_223394FB4()
{
  return *(unsigned __int8 *)(v0 + 80);
}

void sub_223394FBC(uint64_t a1)
{
}

uint64_t sub_223394FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2E08 + dword_267FA2E08);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223334A58;
  return v7(a1, a2);
}

uint64_t sub_22339508C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2DC0 + dword_267FA2DC0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223335C74;
  return v7(a1, a2);
}

uint64_t sub_223395144(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2DA8 + dword_267FA2DA8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_223331EB0;
  return v7(a1, a2);
}

id sub_2233951FC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_22342CD40())
  {
    sub_22334894C(MEMORY[0x263F8EE78]);
    uint64_t v6 = v17;
  }
  else
  {
    uint64_t v6 = MEMORY[0x263F8EE88];
  }
  sub_22334199C(0, &qword_26AD603C0);
  v18[0] = v6;
  sub_22338F4B8(a3, v18);
  swift_bridgeObjectRelease();
  id v7 = (id)sub_22342C880();
  id v8 = sub_2233A8D70(a1, a2, 0x6574656C6564, 0xE600000000000000);
  objc_msgSend(v7, sel_setGroup_, v8);

  sub_223322120(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity, (uint64_t)v18);
  id v9 = objc_allocWithZone(MEMORY[0x263EFD778]);
  id v10 = v7;
  id v11 = objc_msgSend(v9, sel_init);
  objc_msgSend(v11, sel_setQualityOfService_, 17);
  objc_msgSend(v11, sel_setAllowsCellularAccess_, 1);
  uint64_t v12 = v19;
  uint64_t v13 = v20;
  sub_223321F60(v18, v19);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if (v14)
  {
    uint64_t v15 = v14;
    objc_msgSend(v11, sel_setAllowsCellularAccess_, 0);
    objc_msgSend(v11, sel_setXPCActivity_, v15);
    swift_unknownObjectRelease();
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v18);
  objc_msgSend(v10, sel_setConfiguration_, v11);

  objc_msgSend(v10, sel_setAtomic_, 0);
  objc_msgSend(v10, sel_setSavePolicy_, 1);
  return v10;
}

void sub_22339542C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_22331E640(&qword_26AD602A0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = swift_allocObject();
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v11 + 96) = v12;
  uint64_t v13 = *(void *)(a2 + 96);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v11 + 32) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v11 + 64) = v15;
  *(void *)(v11 + 112) = v13;
  *(void *)(v11 + 120) = a3;
  *(void *)(v11 + 128) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_22339660C(a2);
  swift_unknownObjectRetain();
  id v18 = sub_2233B5F80((uint64_t)sub_2233964A8, v11, (uint64_t)sub_223396588);
  swift_release();
  swift_release();
  uint64_t v19 = (void *)(a3 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudDatabase);
  uint64_t v20 = *(void *)(a3 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudDatabase + 24);
  uint64_t v21 = v19[4];
  sub_223321F60(v19, v20);
  (*(void (**)(id, uint64_t, uint64_t))(v21 + 8))(v18, v20, v21);
}

void sub_223395630(void *a1, id a2, char a3, uint64_t a4, uint64_t a5)
{
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = qword_26AD5F0D8;
    id v9 = a2;
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22342C200();
    sub_223323374(v10, (uint64_t)qword_26AD63108);
    sub_22337EE80(a2);
    sub_22339660C(a4);
    id v11 = a1;
    sub_22337EE80(a2);
    sub_22339660C(a4);
    id v12 = v11;
    uint64_t v13 = sub_22342C1E0();
    os_log_type_t v14 = sub_22342C720();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      os_log_type_t type = v14;
      uint64_t v16 = a4;
      uint64_t v17 = (void *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      v82[0] = v74;
      *(_DWORD *)uint64_t v15 = 136315650;
      unint64_t v18 = sub_223421FB0(*(unsigned char *)(v16 + 16));
      sub_22339BC14(v18, v19, v82);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_22339668C(v16);
      sub_22339668C(v16);
      *(_WORD *)(v15 + 12) = 2112;
      id v20 = v12;
      sub_22342CA10();
      *uint64_t v17 = v12;

      *(_WORD *)(v15 + 22) = 2112;
      unint64_t v80 = (unint64_t)v9;
      id v21 = v9;
      sub_22342CA10();
      v17[1] = a2;
      sub_223396680(a2);
      sub_223396680(a2);
      _os_log_impl(&dword_223317000, v13, type, "Got %s MessagesSummary: %@ %@", (uint8_t *)v15, 0x20u);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      uint64_t v22 = v17;
      a4 = v16;
      MEMORY[0x223CB62D0](v22, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v74, -1, -1);
      MEMORY[0x223CB62D0](v15, -1, -1);
    }
    else
    {
      sub_22339668C(a4);
      sub_22339668C(a4);

      sub_223396680(a2);
      sub_223396680(a2);
    }
    char v33 = *(unsigned char *)(a4 + 16);
    sub_2234220F8(v33);
    uint64_t v34 = (void *)sub_22342C980();
    swift_bridgeObjectRelease();
    if (!v34)
    {
      sub_22339660C(a4);
      sub_22339660C(a4);
      uint64_t v43 = sub_22342C1E0();
      uint64_t v44 = sub_22342C720();
      if (!os_log_type_enabled(v43, (os_log_type_t)v44))
      {
        sub_223396680(a2);
        sub_22339668C(a4);
        sub_22339668C(a4);

        return;
      }
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v82[0] = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      unint64_t v47 = sub_223421FB0(v33);
      sub_22339BC14(v47, v48, v82);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_22339668C(a4);
      sub_22339668C(a4);
      _os_log_impl(&dword_223317000, v43, (os_log_type_t)v44, "No value found for count of %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v46, -1, -1);
      MEMORY[0x223CB62D0](v45, -1, -1);

      id v32 = a2;
      goto LABEL_46;
    }
    v82[0] = (uint64_t)v34;
    swift_unknownObjectRetain();
    sub_22331E640((uint64_t *)&unk_26AD60370);
    sub_22331E640(&qword_26AD60290);
    if (!swift_dynamicCast())
    {
      swift_unknownObjectRetain();
      sub_22339660C(a4);
      swift_unknownObjectRetain();
      sub_22339660C(a4);
      swift_unknownObjectRetain();
      uint64_t v49 = sub_22342C1E0();
      os_log_type_t v50 = sub_22342C720();
      if (!os_log_type_enabled(v49, v50))
      {
        sub_223396680(a2);
        swift_unknownObjectRelease_n();
        sub_22339668C(a4);
        sub_22339668C(a4);

        swift_unknownObjectRelease_n();
        return;
      }
      uint64_t v51 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v82[0] = v52;
      *(_DWORD *)uint64_t v51 = 136315394;
      unint64_t v53 = sub_223421FB0(v33);
      sub_22339BC14(v53, v54, v82);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_22339668C(a4);
      sub_22339668C(a4);
      *(_WORD *)(v51 + 12) = 2080;
      id v77 = a2;
      id v55 = objc_msgSend(v34, sel_description);
      uint64_t v56 = sub_22342C300();
      unint64_t v58 = v57;

      sub_22339BC14(v56, v58, v82);
      sub_22342CA10();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v49, v50, "Unexpected type for count of %s:  %s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v52, -1, -1);
      MEMORY[0x223CB62D0](v51, -1, -1);
      swift_unknownObjectRelease_n();

      id v32 = v77;
      goto LABEL_46;
    }
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    if (v80 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_22342CD40();
      if (v35) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v35)
      {
LABEL_19:
        uint64_t v75 = a4;
        if (v35 < 1)
        {
          __break(1u);
          JUMPOUT(0x223396420);
        }
        uint64_t v36 = 0;
        id v37 = 0;
        id v38 = 0;
        do
        {
          if ((v80 & 0xC000000000000001) != 0) {
            id v39 = (id)MEMORY[0x223CB54A0](v36, v80);
          }
          else {
            id v39 = *(id *)(v80 + 8 * v36 + 32);
          }
          uint64_t v40 = v39;
          id v41 = objc_msgSend(v39, sel_longLongValue);
          if ((uint64_t)v41 < (uint64_t)v38) {
            id v38 = v41;
          }
          id v42 = objc_msgSend(v40, sel_longLongValue);

          if ((uint64_t)v42 > (uint64_t)v37) {
            id v37 = v42;
          }
          ++v36;
        }
        while (v35 != v36);
        swift_bridgeObjectRelease();
        uint64_t v83 = (uint64_t)v37;
        uint64_t v84 = (uint64_t)v38;
        a4 = v75;
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRelease();
LABEL_38:
    sub_22339660C(a4);
    sub_22339660C(a4);
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_22342C1E0();
    os_log_type_t v60 = sub_22342C720();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      v82[0] = v78;
      *(_DWORD *)uint64_t v61 = 136315906;
      unint64_t v62 = sub_223421FB0(v33);
      sub_22339BC14(v62, v63, v82);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_22339668C(a4);
      sub_22339668C(a4);
      *(_WORD *)(v61 + 12) = 2048;
      swift_beginAccess();
      sub_22342CA10();
      *(_WORD *)(v61 + 22) = 2048;
      swift_beginAccess();
      sub_22342CA10();
      *(_WORD *)(v61 + 32) = 2080;
      uint64_t v64 = sub_22334199C(0, (unint64_t *)&qword_26AD5EF30);
      uint64_t v65 = swift_bridgeObjectRetain();
      uint64_t v66 = MEMORY[0x223CB4D60](v65, v64);
      uint64_t v67 = a4;
      unint64_t v69 = v68;
      swift_bridgeObjectRelease();
      sub_22339BC14(v66, v69, v82);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      a4 = v67;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v59, v60, "Found count of %s: total %lld live %lld from %s", (uint8_t *)v61, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v78, -1, -1);
      MEMORY[0x223CB62D0](v61, -1, -1);
    }
    else
    {
      sub_22339668C(a4);
      sub_22339668C(a4);

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t v70 = v83;
    if (v83 >= 1)
    {
      swift_beginAccess();
      if (v84 <= 0) {
        uint64_t v71 = v70;
      }
      else {
        uint64_t v71 = v84;
      }
      os_log_type_t v72 = sub_223321F60((void *)(a5 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(a5 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
      sub_2233B3E18(v70, v71, *v72, a4);
      swift_unknownObjectRelease();
      id v32 = a2;
      goto LABEL_46;
    }
    sub_223396680(a2);
    swift_unknownObjectRelease();
    return;
  }
  id v23 = a2;
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_22342C200();
  sub_223323374(v24, (uint64_t)qword_26AD63108);
  sub_22337EE80(a2);
  sub_22339660C(a4);
  sub_22337EE80(a2);
  sub_22339660C(a4);
  log = sub_22342C1E0();
  os_log_type_t v25 = sub_22342C720();
  if (os_log_type_enabled(log, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v82[0] = v28;
    *(_DWORD *)uint64_t v26 = 136315394;
    unint64_t v29 = sub_223421FB0(*(unsigned char *)(a4 + 16));
    sub_22339BC14(v29, v30, v82);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_22339668C(a4);
    sub_22339668C(a4);
    *(_WORD *)(v26 + 12) = 2112;
    id v31 = a2;
    uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
    sub_22342CA10();
    *uint64_t v27 = v81;
    sub_223396680(a2);
    sub_223396680(a2);
    _os_log_impl(&dword_223317000, log, v25, "Failed fetching MessagesSummary for %s %@", (uint8_t *)v26, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v28, -1, -1);
    MEMORY[0x223CB62D0](v26, -1, -1);

    id v32 = a2;
LABEL_46:
    sub_223396680(v32);
    return;
  }
  sub_223396680(a2);
  sub_22339668C(a4);
  sub_22339668C(a4);
  sub_223396680(a2);
  sub_223396680(a2);
}

uint64_t sub_223396440()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 136, 7);
}

__n128 sub_2233964A8(void *a1, void *a2, char a3)
{
  uint64_t v4 = *(void *)(v3 + 120);
  long long v5 = *(_OWORD *)(v3 + 96);
  v9[4] = *(_OWORD *)(v3 + 80);
  v9[5] = v5;
  uint64_t v10 = *(void *)(v3 + 112);
  long long v6 = *(_OWORD *)(v3 + 32);
  v9[0] = *(_OWORD *)(v3 + 16);
  v9[1] = v6;
  long long v7 = *(_OWORD *)(v3 + 64);
  _OWORD v9[2] = *(_OWORD *)(v3 + 48);
  v9[3] = v7;
  sub_223395630(a1, a2, a3 & 1, (uint64_t)v9, v4);
  return result;
}

uint64_t sub_2233964F4()
{
  uint64_t v1 = sub_22331E640(&qword_26AD602A0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_223396588(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_22331E640(&qword_26AD602A0);
  sub_2233F0B20(a1, v3);
}

uint64_t sub_22339660C(uint64_t a1)
{
  return a1;
}

void sub_223396680(id a1)
{
}

uint64_t sub_22339668C(uint64_t a1)
{
  return a1;
}

uint64_t sub_223396700()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_223396760()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2233967A0()
{
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_223334A58;
  *(_OWORD *)(v3 + 16) = v4;
  *(unsigned char *)(v3 + 40) = v2;
  return MEMORY[0x270FA2498](sub_223393810, 0, 0);
}

uint64_t sub_223396854(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_22339688C(uint64_t a1)
{
  return a1;
}

unint64_t sub_2233968BC()
{
  unint64_t result = qword_267FA2E00;
  if (!qword_267FA2E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2E00);
  }
  return result;
}

__n128 sub_223396910(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  long long v5 = *(_OWORD *)(v3 + 80);
  v9[4] = *(_OWORD *)(v3 + 64);
  v9[5] = v5;
  uint64_t v10 = *(void *)(v3 + 96);
  long long v6 = *(_OWORD *)(v3 + 16);
  v9[0] = *(_OWORD *)v3;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(v3 + 48);
  _OWORD v9[2] = *(_OWORD *)(v3 + 32);
  v9[3] = v7;
  sub_22339542C(a1, (uint64_t)v9, v2, v4);
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecordZoneDeletingErrors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x223396A28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordZoneDeletingErrors()
{
  return &type metadata for RecordZoneDeletingErrors;
}

unint64_t sub_223396A64()
{
  unint64_t result = qword_267FA2E18;
  if (!qword_267FA2E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2E18);
  }
  return result;
}

uint64_t sub_223396AC0()
{
  return sub_22342D060();
}

uint64_t sub_223396BE0()
{
  return sub_22342D060();
}

uint64_t sub_223396CD4()
{
  return sub_22342D060();
}

uint64_t sub_223396E1C()
{
  return sub_22342D060();
}

uint64_t sub_223396EC4()
{
  return sub_22342D060();
}

uint64_t sub_223396F7C()
{
  return sub_22342D060();
}

unint64_t sub_223397000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v141 = a2;
  uint64_t v161 = *MEMORY[0x263EF8340];
  uint64_t v143 = sub_22331E640(&qword_26AD5F3C8);
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  uint64_t v144 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  unint64_t v145 = (unint64_t)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v147 = (uint64_t)&v138 - v7;
  uint64_t v8 = sub_22331E640(&qword_26AD60508);
  uint64_t v146 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (int *)type metadata accessor for ChatRecord(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  os_log_type_t v14 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v14 + 4) = 0u;
  *((_OWORD *)v14 + 5) = 0u;
  uint64_t v15 = &v14[*(int *)(v12 + 40)];
  uint64_t v16 = sub_22342C130();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v154 = (uint64_t)v15;
  v17(v15, 1, 1, v16);
  uint64_t v18 = (uint64_t)&v14[v11[11]];
  v17((char *)v18, 1, 1, v16);
  unint64_t v19 = &v14[v11[12]];
  *(void *)unint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v152 = v11;
  uint64_t v153 = v19;
  uint64_t v151 = v11[15];
  *(void *)&v14[v151] = 0;
  id v20 = &v14[v11[29]];
  *(void *)id v20 = 0;
  *((void *)v20 + 1) = 0;
  char v149 = v20;
  uint64_t v150 = v11[30];
  uint64_t v155 = a1;
  uint64_t v156 = (uint64_t *)v14;
  *(void *)&v14[v150] = 0;
  sub_223321F60(a1, a1[3]);
  sub_223321FA4();
  id v21 = v157;
  sub_22342D080();
  uint64_t v148 = v18;
  if (v21)
  {
    uint64_t v157 = v21;
    uint64_t v22 = v154;
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v155);
    int v25 = 0;
    int v26 = 0;
    LODWORD(v147) = 0;
    int v27 = 0;
    LODWORD(v146) = 0;
    int v28 = 0;
    int v29 = 0;
    int v30 = 0;
    goto LABEL_4;
  }
  LOBYTE(v159) = 0;
  uint64_t v23 = sub_22342CDC0();
  uint64_t v24 = v154;
  id v32 = v156;
  *uint64_t v156 = v23;
  v32[1] = v33;
  LOBYTE(v159) = 1;
  _OWORD v32[2] = sub_22342CDC0();
  v32[3] = v34;
  LOBYTE(v159) = 2;
  v32[4] = sub_22342CDC0();
  v32[5] = v35;
  LOBYTE(v159) = 3;
  v32[6] = sub_22342CDC0();
  v32[7] = v36;
  LOBYTE(v159) = 4;
  uint64_t v37 = sub_22342CDC0();
  uint64_t v140 = 0;
  v32[8] = v37;
  v32[9] = v38;
  LOBYTE(v159) = 5;
  v32[10] = sub_22342CDC0();
  v32[11] = v39;
  LOBYTE(v159) = 6;
  sub_22339E304(&qword_26AD5F408, MEMORY[0x263F07490]);
  sub_22342CDF0();
  sub_2233232B8(v24, &qword_26AD5F320);
  sub_223332AEC(v147, v24);
  LOBYTE(v159) = 7;
  sub_22342CDF0();
  sub_2233232B8(v18, &qword_26AD5F320);
  sub_223332AEC(v145, v18);
  LOBYTE(v159) = 8;
  uint64_t v41 = sub_22342CDC0();
  uint64_t v157 = 0;
  uint64_t v43 = v41;
  uint64_t v44 = v42;
  uint64_t v45 = v10;
  uint64_t v46 = v153;
  swift_bridgeObjectRelease();
  *uint64_t v46 = v43;
  v46[1] = v44;
  sub_223321F60(v155, v155[3]);
  sub_22339F64C();
  unint64_t v47 = v157;
  sub_22342D080();
  uint64_t v157 = v47;
  if (v47) {
    goto LABEL_29;
  }
  LOBYTE(v159) = 0;
  uint64_t v48 = sub_22342CDE0();
  uint64_t v157 = 0;
  uint64_t v49 = (char *)v156 + v152[13];
  *(void *)uint64_t v49 = v48;
  v49[8] = v50 & 1;
  LOBYTE(v159) = 1;
  uint64_t v51 = sub_22342CDE0();
  uint64_t v157 = 0;
  uint64_t v52 = (char *)v156 + v152[14];
  *(void *)uint64_t v52 = v51;
  v52[8] = v53 & 1;
  LOBYTE(v158) = 2;
  sub_223322B18();
  unint64_t v54 = v157;
  sub_22342CDF0();
  uint64_t v157 = v54;
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v143);
LABEL_29:
    (*(void (**)(char *, uint64_t))(v146 + 8))(v10, v8);
    int v30 = 0;
    int v29 = 0;
    int v28 = 0;
    LODWORD(v146) = 0;
    int v25 = 0;
    goto LABEL_30;
  }
  uint64_t v139 = (uint64_t)v159;
  unint64_t v145 = v160;
  if (v160 >> 60 == 15)
  {
    id v55 = (uint64_t *)((char *)v156 + v152[16]);
    *id v55 = 0;
    v55[1] = 0;
  }
  else
  {
    uint64_t v56 = v139;
    unint64_t v57 = v145;
    sub_22331E684(v139, v145);
    uint64_t v58 = sub_22342C060();
    unint64_t v60 = v59;
    sub_223322054(v56, v57);
    uint64_t v61 = (uint64_t *)((char *)v156 + v152[16]);
    *uint64_t v61 = v58;
    v61[1] = v60;
    uint64_t v62 = HIBYTE(v60) & 0xF;
    if ((v60 & 0x2000000000000000) == 0) {
      uint64_t v62 = v58 & 0xFFFFFFFFFFFFLL;
    }
    if (v62)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_22342C030();
      if (v64 >> 60 == 15) {
        goto LABEL_40;
      }
      uint64_t v65 = v63;
      unint64_t v66 = v64;
      uint64_t v67 = self;
      unint64_t v68 = (void *)sub_22342C050();
      id v159 = 0;
      id v69 = objc_msgSend(v67, sel_propertyListWithData_options_format_error_, v68, 0, 0, &v159);

      if (!v69)
      {
        id v84 = v159;
        uint64_t v85 = sub_22342BF30();

        uint64_t v157 = (void *)v85;
        swift_willThrow();
        sub_223322054(v65, v66);
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      id v70 = v159;
      sub_22342CA80();
      sub_223322054(v65, v66);
      swift_unknownObjectRelease();
      sub_22331E640(&qword_26AD5F3A8);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        uint64_t v71 = 0;
      }
      else
      {
        uint64_t v71 = v158;
        swift_bridgeObjectRelease();
      }
      uint64_t v72 = v151;
      uint64_t v73 = v156;
      swift_bridgeObjectRelease();
      *(uint64_t *)((char *)v73 + v72) = v71;
    }
  }
  LOBYTE(v159) = 3;
  uint64_t v74 = v157;
  uint64_t v75 = sub_22342CDC0();
  uint64_t v157 = v74;
  if (v74)
  {
LABEL_43:
    sub_223322054(v139, v145);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v143);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v45, v8);
    int v29 = 0;
    int v28 = 0;
    LODWORD(v146) = 0;
    int v25 = 0;
    int v30 = 1;
    goto LABEL_30;
  }
  uint64_t v77 = v75;
  uint64_t v78 = v76;
  uint64_t v79 = (uint64_t *)((char *)v156 + v152[17]);
  *uint64_t v79 = v75;
  v79[1] = v76;
  LOBYTE(v159) = 4;
  uint64_t v80 = sub_22342CDC0();
  uint64_t v157 = 0;
  uint64_t v81 = (uint64_t *)((char *)v156 + v152[18]);
  uint64_t *v81 = v80;
  v81[1] = v82;
  LOBYTE(v159) = 5;
  uint64_t v83 = sub_22342CDC0();
  uint64_t v157 = 0;
  id v86 = (uint64_t *)((char *)v156 + v152[19]);
  *id v86 = v83;
  v86[1] = v87;
  sub_223322120((uint64_t)v155, (uint64_t)&v159);
  BOOL v88 = v157;
  uint64_t v89 = sub_223372F8C(&v159);
  uint64_t v157 = v88;
  if (v88)
  {
    sub_223322054(v139, v145);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v143);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v45, v8);
    int v25 = 0;
    int v30 = 1;
    int v29 = 1;
    int v28 = 1;
    LODWORD(v146) = 1;
    goto LABEL_30;
  }
  *(uint64_t *)((char *)v156 + v152[20]) = (uint64_t)v89;
  LOBYTE(v159) = 7;
  uint64_t v90 = sub_22342CDC0();
  LODWORD(v147) = 1;
  uint64_t v157 = 0;
  uint64_t v91 = (uint64_t *)((char *)v156 + v152[21]);
  *uint64_t v91 = v90;
  v91[1] = v92;
  LOBYTE(v159) = 8;
  uint64_t v93 = sub_22342CDE0();
  uint64_t v157 = 0;
  uint64_t v94 = (char *)v156 + v152[22];
  *(void *)uint64_t v94 = v93;
  v94[8] = v95 & 1;
  LOBYTE(v159) = 9;
  uint64_t v96 = sub_22342CDE0();
  uint64_t v157 = 0;
  unint64_t v97 = (char *)v156 + v152[23];
  *(void *)unint64_t v97 = v96;
  v97[8] = v98 & 1;
  LOBYTE(v159) = 10;
  uint64_t v99 = sub_22342CDC0();
  uint64_t v157 = 0;
  uint64_t v100 = (uint64_t *)((char *)v156 + v152[24]);
  *uint64_t v100 = v99;
  v100[1] = v101;
  LOBYTE(v159) = 11;
  uint64_t v102 = sub_22342CE00();
  uint64_t v157 = 0;
  uint64_t v103 = (char *)v156 + v152[25];
  *(void *)uint64_t v103 = v102;
  v103[8] = v104 & 1;
  sub_223322120((uint64_t)v155, (uint64_t)&v159);
  char v105 = v157;
  unint64_t v106 = sub_223338584(&v159);
  if (v105)
  {

    unint64_t v106 = 0;
    uint64_t v107 = 0;
    char v109 = 0;
  }
  else
  {
    char v109 = v108 & 1;
  }
  uint64_t v157 = 0;
  char v110 = (char *)v156 + v152[26];
  *(void *)char v110 = v106;
  *((void *)v110 + 1) = v107;
  v110[16] = v109;
  v110[17] = v105 != 0;
  LOBYTE(v159) = 13;
  if (sub_22342CE50())
  {
    LOBYTE(v159) = 13;
    id v111 = v157;
    uint64_t v112 = sub_22342CDC0();
    uint64_t v157 = v111;
    if (v111)
    {
      sub_223322054(v139, v145);
      (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v143);
      (*(void (**)(char *, uint64_t))(v146 + 8))(v45, v8);
      int v26 = 1;
      _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v155);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v25 = 0;
      int v27 = 1;
      LODWORD(v146) = 1;
      int v28 = 1;
      int v29 = 1;
      int v30 = 1;
      uint64_t v22 = v154;
LABEL_25:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2233232B8(v22, &qword_26AD5F320);
      sub_2233232B8(v148, &qword_26AD5F320);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30)
      {
        swift_bridgeObjectRelease();
        if (!v29)
        {
LABEL_6:
          if (!v28) {
            goto LABEL_7;
          }
          goto LABEL_16;
        }
      }
      else if (!v29)
      {
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
      if (!v28)
      {
LABEL_7:
        if (!v146) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      if (!v146)
      {
LABEL_8:
        if (!v27) {
          goto LABEL_9;
        }
        goto LABEL_18;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      if (!v27)
      {
LABEL_9:
        if (!v147) {
          goto LABEL_10;
        }
        goto LABEL_19;
      }
LABEL_18:
      swift_bridgeObjectRelease();
      if (!v147)
      {
LABEL_10:
        if (!v26) {
          goto LABEL_11;
        }
        goto LABEL_20;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      if (!v26)
      {
LABEL_11:
        if (!v25)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
LABEL_12:
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      if (!v25) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    if (v113)
    {
      BOOL v114 = (uint64_t *)((char *)v156 + v152[27]);
      uint64_t *v114 = v112;
      v114[1] = v113;
      goto LABEL_66;
    }
  }
  if (v49[8]) {
    goto LABEL_65;
  }
  uint64_t v115 = *(void *)v49;
  if (sub_22342CF60())
  {
    if (v115 == 10) {
      goto LABEL_65;
    }
    goto LABEL_78;
  }
  if ((sub_22342C2A0() & 1) == 0) {
    goto LABEL_65;
  }
  unint64_t result = sub_22339ED5C(0x2DuLL, 0xE100000000000000);
  if ((result & 0x100000000) != 0)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if ((result & 0xFFFFFF80) != 0)
  {
LABEL_65:
    uint64_t v116 = (uint64_t *)((char *)v156 + v152[27]);
    *uint64_t v116 = 0;
    v116[1] = 0;
    goto LABEL_66;
  }
  unint64_t result = sub_22339ED5C(0x2DuLL, 0xE100000000000000);
  if ((result & 0x100000000) != 0)
  {
LABEL_81:
    __break(1u);
    return result;
  }
  if ((result & 0xFFFFFF00) != 0)
  {
    __break(1u);
    goto LABEL_80;
  }
  if (v115 == result) {
    goto LABEL_65;
  }
LABEL_78:
  uint64_t v137 = (uint64_t *)((char *)v156 + v152[27]);
  *uint64_t v137 = v77;
  v137[1] = v78;
  swift_bridgeObjectRetain();
LABEL_66:
  LOBYTE(v159) = 15;
  uint64_t v117 = v157;
  uint64_t v118 = sub_22342CDC0();
  uint64_t v157 = v117;
  if (v117) {
    goto LABEL_69;
  }
  uint64_t v120 = v118;
  uint64_t v121 = v119;
  uint64_t v122 = v149;
  swift_bridgeObjectRelease();
  *uint64_t v122 = v120;
  v122[1] = v121;
  sub_22331E640(&qword_26AD5F398);
  LOBYTE(v158) = 16;
  sub_22339F6A0();
  uint64_t v123 = v157;
  sub_22342CDF0();
  uint64_t v157 = v123;
  if (v123) {
    goto LABEL_69;
  }
  uint64_t v124 = (uint64_t)v159;
  uint64_t v125 = v150;
  uint64_t v126 = v156;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v126 + v125) = v124;
  LOBYTE(v159) = 14;
  uint64_t v127 = v157;
  uint64_t v128 = sub_22342CDE0();
  uint64_t v157 = v127;
  if (v127)
  {
LABEL_69:
    sub_223322054(v139, v145);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v143);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v45, v8);
    int v30 = 1;
    int v29 = 1;
    int v28 = 1;
    LODWORD(v146) = 1;
    int v25 = 1;
LABEL_30:
    uint64_t v22 = v154;
    uint64_t v40 = v140;
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v155);
    swift_bridgeObjectRelease();
    if (!v40) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    int v26 = v25;
    LODWORD(v147) = v25;
    int v27 = v25;
    goto LABEL_25;
  }
  if (v129) {
    uint64_t v130 = 1;
  }
  else {
    uint64_t v130 = v128;
  }
  uint64_t v131 = v155;
  int64_t v132 = (char *)v156 + v152[28];
  *(void *)int64_t v132 = v130;
  v132[8] = 0;
  sub_223322120((uint64_t)v131, (uint64_t)&v159);
  uint64_t v133 = v157;
  id v134 = sub_2233A28F4(&v159);
  if (v133)
  {
    sub_223322054(v139, v145);

    uint64_t v135 = 1;
  }
  else
  {
    uint64_t v135 = (uint64_t)v134;
    sub_223322054(v139, v145);
  }
  (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v143);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v45, v8);
  uint64_t v136 = (uint64_t)v156;
  *(uint64_t *)((char *)v156 + v152[31]) = v135;
  sub_223380354(v136, v141);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v155);
  return sub_2233803B8(v136);
}

uint64_t sub_22339840C(void *a1)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  uint64_t v45 = sub_22331E640(&qword_267FA2E88);
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v46 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_22331E640(&qword_267FA2E90);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  char v50 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22331E640(&qword_26AD5F320);
  MEMORY[0x270FA5388](v5 - 8);
  char v53 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v52 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v42 - v10;
  uint64_t v12 = sub_22331E640(&qword_267FA2E98);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v48 = a1;
  sub_223321F60(a1, v16);
  sub_223321FA4();
  uint64_t v17 = (char *)v12;
  sub_22342D090();
  LOBYTE(v56) = 0;
  uint64_t v18 = v54;
  sub_22342CE70();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v20 = (uint64_t)v11;
  uint64_t v21 = (uint64_t)v52;
  uint64_t v22 = (uint64_t)v53;
  uint64_t v54 = v13;
  LOBYTE(v56) = 1;
  sub_22342CE70();
  LOBYTE(v56) = 2;
  sub_22342CE70();
  long long v56 = v1[3];
  char v55 = 3;
  sub_22331E640(&qword_26AD60278);
  sub_22339F770();
  sub_22342CEE0();
  long long v56 = v1[4];
  char v55 = 4;
  sub_22342CEE0();
  long long v56 = v1[5];
  char v55 = 5;
  sub_22342CEE0();
  uint64_t v44 = (int *)type metadata accessor for ChatRecord(0);
  sub_22339F7DC((uint64_t)v1 + v44[10], v22);
  sub_223332AEC(v22, v20);
  LOBYTE(v56) = 6;
  sub_22342C130();
  sub_22339E304(&qword_267FA2A58, MEMORY[0x263F07490]);
  sub_22342CEA0();
  sub_2233232B8(v20, (uint64_t *)&unk_26AD5ED20);
  sub_22339F7DC((uint64_t)v1 + v44[11], v22);
  sub_223332AEC(v22, v21);
  LOBYTE(v56) = 7;
  sub_22342CEA0();
  sub_2233232B8(v21, (uint64_t *)&unk_26AD5ED20);
  LOBYTE(v56) = 8;
  swift_bridgeObjectRetain();
  sub_22342CE70();
  char v53 = v17;
  swift_bridgeObjectRelease();
  sub_223321F60(v48, v48[3]);
  sub_22339F64C();
  sub_22342D090();
  LOBYTE(v56) = 0;
  sub_22342CE90();
  uint64_t v52 = v15;
  uint64_t v43 = v1;
  LOBYTE(v56) = 1;
  sub_22342CE90();
  if (*(void *)((char *)v43 + v44[15]))
  {
    uint64_t v23 = self;
    swift_bridgeObjectRetain();
    uint64_t v24 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
    *(void *)&long long v56 = 0;
    id v25 = objc_msgSend(v23, sel_dataWithPropertyList_format_options_error_, v24, 200, 0, &v56);

    id v26 = (id)v56;
    if (v25)
    {
      uint64_t v27 = sub_22342C070();
      unint64_t v29 = v28;

      sub_22342C060();
      LOBYTE(v56) = 2;
      sub_22342CEC0();
      swift_bridgeObjectRelease();
      sub_22331EA68(v27, v29);
    }
    else
    {
      int v30 = v26;
      id v31 = (void *)sub_22342BF30();

      swift_willThrow();
    }
  }
  LOBYTE(v56) = 3;
  sub_22342CE70();
  LOBYTE(v56) = 4;
  sub_22342CE70();
  LOBYTE(v56) = 5;
  sub_22342CE70();
  LOBYTE(v56) = 7;
  sub_22342CE70();
  LOBYTE(v56) = 8;
  sub_22342CE90();
  LOBYTE(v56) = 10;
  sub_22342CE70();
  LOBYTE(v56) = 11;
  sub_22342CEB0();
  LOBYTE(v56) = 13;
  sub_22342CE70();
  LOBYTE(v56) = 14;
  sub_22342CE90();
  uint64_t v32 = *(void *)((char *)v43 + v44[20]);
  if (v32) {
    sub_2233721D0(v48, v32);
  }
  uint64_t v33 = (char *)v43 + v44[26];
  if ((v33[17] & 1) == 0) {
    sub_223338178(v48, *(void *)v33, *((void *)v33 + 1), v33[16] & 1);
  }
  uint64_t v34 = *(void **)((char *)v43 + v44[31]);
  if (v34 != (void *)1)
  {
    sub_223321F60(v48, v48[3]);
    sub_22339F844();
    sub_22342D090();
    if (v34)
    {
      id v35 = objc_msgSend(v34, sel_data);
      if (v35)
      {
        uint64_t v36 = v35;
        uint64_t v37 = sub_22342C070();
        unint64_t v39 = v38;
      }
      else
      {
        uint64_t v37 = 0;
        unint64_t v39 = 0xF000000000000000;
      }
      *(void *)&long long v56 = v37;
      *((void *)&v56 + 1) = v39;
      sub_22331E640(&qword_267FA2EA8);
      sub_22339F898();
      uint64_t v41 = v45;
      uint64_t v40 = v46;
      sub_22342CEE0();
      sub_22339F63C(v34);
      sub_223322054(v37, v39);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v41);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v45);
    }
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  return (*(uint64_t (**)(char *, char *))(v54 + 8))(v52, v53);
}

uint64_t sub_223399004(char a1)
{
  uint64_t result = 7107699;
  switch(a1)
  {
    case 1:
      uint64_t result = 6648947;
      break;
    case 2:
      uint64_t result = 1886351984;
      break;
    case 3:
      uint64_t result = 6580579;
      break;
    case 4:
      uint64_t result = 1701667182;
      break;
    case 5:
      uint64_t result = 6580583;
      break;
    case 6:
      uint64_t result = 0x737470637470;
      break;
    case 7:
      uint64_t result = 6840684;
      break;
    case 8:
      uint64_t result = 1953261926;
      break;
    case 9:
      uint64_t result = 2037543283;
      break;
    case 10:
      uint64_t result = 1684629359;
      break;
    case 11:
      uint64_t result = 7174002;
      break;
    case 12:
      uint64_t result = 0x313030706F7270;
      break;
    case 13:
      uint64_t result = 0x656D616E6D6F6F72;
      break;
    case 14:
      uint64_t result = 0x74617453636E7973;
      break;
    case 15:
      uint64_t result = 1684631655;
      break;
    case 16:
      uint64_t result = 0x737465737361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_223399194(char a1)
{
  uint64_t result = 7107699;
  switch(a1)
  {
    case 1:
      uint64_t result = 6648947;
      break;
    case 2:
      uint64_t result = 1886351984;
      break;
    case 3:
      uint64_t result = 6580579;
      break;
    case 4:
      uint64_t result = 1701667182;
      break;
    case 5:
      uint64_t result = 6580583;
      break;
    case 6:
      uint64_t result = 0x737470637470;
      break;
    case 7:
      uint64_t result = 6840684;
      break;
    case 8:
      uint64_t result = 1953261926;
      break;
    case 9:
      uint64_t result = 2037543283;
      break;
    case 10:
      uint64_t result = 1684629359;
      break;
    case 11:
      uint64_t result = 7174002;
      break;
    case 12:
      uint64_t result = 0x313030706F7270;
      break;
    case 13:
      uint64_t result = 0x656D616E6D6F6F72;
      break;
    case 14:
      uint64_t result = 0x74617453636E7973;
      break;
    case 15:
      uint64_t result = 1684631655;
      break;
    case 16:
      uint64_t result = 0x737465737361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_223399324(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_223399004(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_223399004(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_22342CF60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2233993B0()
{
  char v1 = *v0;
  sub_22342D030();
  sub_223399004(v1);
  sub_22342C390();
  swift_bridgeObjectRelease();
  return sub_22342D060();
}

uint64_t sub_223399414()
{
  sub_223399004(*v0);
  sub_22342C390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_223399468()
{
  char v1 = *v0;
  sub_22342D030();
  sub_223399004(v1);
  sub_22342C390();
  swift_bridgeObjectRelease();
  return sub_22342D060();
}

uint64_t sub_2233994C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22339FC08();
  *a1 = result;
  return result;
}

uint64_t sub_2233994F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_223399004(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_223399524()
{
  return sub_223399194(*v0);
}

uint64_t sub_22339952C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22339FC08();
  *a1 = result;
  return result;
}

void sub_223399554(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

void sub_223399560(void *a1@<X8>)
{
  *a1 = &unk_26D66CA28;
}

uint64_t sub_223399570(uint64_t a1)
{
  unint64_t v2 = sub_22339F64C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2233995AC(uint64_t a1)
{
  unint64_t v2 = sub_22339F64C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2233995EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_223397000(a1, a2);
}

uint64_t sub_223399604(void *a1)
{
  return sub_22339840C(a1);
}

uint64_t sub_22339961C()
{
  uint64_t v1 = type metadata accessor for ChatRecord(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223380354(v0 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord, (uint64_t)v3);
  uint64_t v4 = *((void *)v3 + 8);
  swift_bridgeObjectRetain();
  sub_2233803B8((uint64_t)v3);
  return v4;
}

uint64_t type metadata accessor for ChatRecord(uint64_t a1)
{
  return sub_22339C380(a1, qword_26AD5F548);
}

uint64_t sub_2233997A8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_223399854()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_223399900()
{
  uint64_t v1 = type metadata accessor for ChatRecord(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223380354(v0 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord, (uint64_t)v3);
  uint64_t v4 = *((void *)v3 + 10);
  swift_bridgeObjectRetain();
  sub_2233803B8((uint64_t)v3);
  return v4;
}

uint64_t sub_22339999C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for ChatRecord(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a1 == 1684632935 && a2 == 0xE400000000000000 || (sub_22342CF60() & 1) != 0)
    {
      char v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord);
LABEL_6:
      uint64_t v9 = *v8;
LABEL_7:
      swift_bridgeObjectRetain();
      return v9;
    }
    if (a1 == 6518387 && a2 == 0xE300000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord + 16);
      goto LABEL_7;
    }
    if (a1 == 6580579 && a2 == 0xE300000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v10 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v11 = v5[17];
LABEL_16:
      char v8 = (uint64_t *)(v10 + v11);
      goto LABEL_6;
    }
    if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v10 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v11 = v5[18];
      goto LABEL_16;
    }
    if (a1 == 6580583 && a2 == 0xE300000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v10 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v11 = v5[19];
      goto LABEL_16;
    }
    if (a1 == 6840684 && a2 == 0xE300000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v10 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v11 = v5[21];
      goto LABEL_16;
    }
    if (a1 == 1684629359 && a2 == 0xE400000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v10 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v11 = v5[24];
      goto LABEL_16;
    }
    if (a1 == 1684631655 && a2 == 0xE400000000000000 || (sub_22342CF60() & 1) != 0)
    {
      sub_223380354(v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord, (uint64_t)v7);
      uint64_t v9 = *(void *)&v7[v5[29]];
      swift_bridgeObjectRetain();
      sub_2233803B8((uint64_t)v7);
      return v9;
    }
  }
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_22342C200();
  sub_223323374(v12, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_22342C1E0();
  os_log_type_t v14 = sub_22342C700();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    if (a2)
    {
      unint64_t v17 = a2;
    }
    else
    {
      a1 = 0x79656B206C696E28;
      unint64_t v17 = 0xEE002921656D614ELL;
    }
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_22339BC14(a1, v17, &v20);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v13, v14, "While decoding ChatRecord, unexpected string(forKey:%s request", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v16, -1, -1);
    MEMORY[0x223CB62D0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_223399F14(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = a1;
  if (a2)
  {
    BOOL v5 = a1 == 7107699 && a2 == 0xE300000000000000;
    if (v5 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v6 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v7 = type metadata accessor for ChatRecord(0);
      uint64_t result = 0;
      uint64_t v9 = *(int *)(v7 + 52);
      goto LABEL_8;
    }
    if (v4 == 6648947 && a2 == 0xE300000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v6 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v10 = type metadata accessor for ChatRecord(0);
      uint64_t result = 0;
      uint64_t v9 = *(int *)(v10 + 56);
      goto LABEL_8;
    }
    if (v4 == 1953261926 && a2 == 0xE400000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v6 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v11 = type metadata accessor for ChatRecord(0);
      uint64_t result = 0;
      uint64_t v9 = *(int *)(v11 + 88);
      goto LABEL_8;
    }
    if (v4 == 2037543283 && a2 == 0xE400000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v6 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v12 = type metadata accessor for ChatRecord(0);
      uint64_t result = 0;
      uint64_t v9 = *(int *)(v12 + 92);
      goto LABEL_8;
    }
    if (v4 == 7174002 && a2 == 0xE300000000000000 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v13 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v14 = type metadata accessor for ChatRecord(0);
      uint64_t result = 0;
      if ((*(unsigned char *)(v13 + *(int *)(v14 + 100) + 8) & 1) == 0) {
        return sub_22342D020();
      }
      return result;
    }
    if (v4 == 0x74617453636E7973 && a2 == 0xE900000000000065 || (sub_22342CF60() & 1) != 0)
    {
      uint64_t v6 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
      uint64_t v15 = type metadata accessor for ChatRecord(0);
      uint64_t result = 0;
      uint64_t v9 = *(int *)(v15 + 112);
LABEL_8:
      if ((*(unsigned char *)(v6 + v9 + 8) & 1) == 0) {
        return sub_22342C660();
      }
      return result;
    }
  }
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_22342C200();
  sub_223323374(v16, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  unint64_t v17 = sub_22342C1E0();
  os_log_type_t v18 = sub_22342C700();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v22 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    if (a2)
    {
      unint64_t v21 = a2;
    }
    else
    {
      uint64_t v4 = 0x79656B206C696E28;
      unint64_t v21 = 0xEE002921656D614ELL;
    }
    swift_bridgeObjectRetain();
    sub_22339BC14(v4, v21, &v22);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v17, v18, "While decoding ChatRecord, unexpected number(forKey:%s) request", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v20, -1, -1);
    MEMORY[0x223CB62D0](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

unint64_t sub_22339A3F0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for ChatRecord(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a1 == 1886351984 && a2 == 0xE400000000000000 || (sub_22342CF60() & 1) != 0)
    {
      sub_223380354(v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord, (uint64_t)v7);
      uint64_t v8 = *(void *)&v7[*(int *)(v5 + 60)];
      swift_bridgeObjectRetain();
      sub_2233803B8((uint64_t)v7);
      return v8;
    }
    if (a1 == 0x313030706F7270 && a2 == 0xE700000000000000 || (sub_22342CF60() & 1) != 0) {
      return sub_22339AB00();
    }
  }
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_22342C200();
  sub_223323374(v9, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_22342C1E0();
  os_log_type_t v11 = sub_22342C700();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    if (a2)
    {
      unint64_t v14 = a2;
    }
    else
    {
      a1 = 0x79656B206C696E28;
      unint64_t v14 = 0xEE002921656D614ELL;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_22339BC14(a1, v14, &v17);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v10, v11, "While decoding ChatRecord, unexpected dict(forKey:%s) request", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v13, -1, -1);
    MEMORY[0x223CB62D0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_22339A7B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = a1;
  if (!a2 || (a1 != 0x3130306F746F7270 || a2 != 0xE800000000000000) && (sub_22342CF60() & 1) == 0)
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22342C200();
    sub_223323374(v10, (uint64_t)qword_26AD63108);
    swift_bridgeObjectRetain_n();
    os_log_type_t v11 = sub_22342C1E0();
    os_log_type_t v12 = sub_22342C700();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      if (a2)
      {
        unint64_t v15 = a2;
      }
      else
      {
        uint64_t v4 = 0x79656B206C696E28;
        unint64_t v15 = 0xEE002921656D614ELL;
      }
      swift_bridgeObjectRetain();
      sub_22339BC14(v4, v15, &v17);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v11, v12, "While decoding ChatRecord, unexpected data(forKey:%s) request", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v14, -1, -1);
      MEMORY[0x223CB62D0](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  uint64_t v5 = v2 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
  uint64_t v6 = *(void **)(v5 + *(int *)(type metadata accessor for ChatRecord(0) + 124));
  if ((unint64_t)v6 < 2) {
    return 0;
  }
  id v7 = objc_msgSend(v6, sel_data);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_22342C070();

  return v9;
}

unint64_t sub_22339AB00()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
  uint64_t v2 = type metadata accessor for ChatRecord(0);
  uint64_t v3 = v1 + *(int *)(v2 + 104);
  if (*(unsigned char *)(v3 + 17) & 1) != 0 || (*(unsigned char *)(v3 + 16))
  {
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F870;
    *(void *)(inited + 32) = 29811;
    *(void *)(inited + 40) = 0xE200000000000000;
    uint64_t v9 = (uint64_t *)(v1 + *(int *)(v2 + 104));
    uint64_t v10 = *v9;
    LODWORD(v9) = *((unsigned __int8 *)v9 + 17);
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    if (v9) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = v10;
    }
    *(void *)(inited + 48) = v11;
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 8);
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F1E0;
    *(void *)(inited + 32) = 29811;
    *(void *)(inited + 40) = 0xE200000000000000;
    uint64_t v6 = (uint64_t *)(v1 + *(int *)(v2 + 104));
    uint64_t v7 = MEMORY[0x263F8D6C8];
    if (*((unsigned char *)v6 + 17)) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = *v6;
    }
    *(void *)(inited + 48) = v8;
    *(void *)(inited + 72) = v7;
    *(void *)(inited + 80) = 25715;
    *(void *)(inited + 120) = MEMORY[0x263F8E5C0];
    *(void *)(inited + 88) = 0xE200000000000000;
    *(void *)(inited + 96) = v4;
  }
  return sub_2233C5EB0(inited);
}

void *sub_22339AC24()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for ChatRecord(0) + 80));
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v28 = v3;
    uint64_t v6 = *(v4 - 5);
    uint64_t v7 = *(v4 - 4);
    uint64_t v8 = *(v4 - 3);
    uint64_t v9 = *(v4 - 2);
    uint64_t v11 = *(v4 - 1);
    uint64_t v10 = *v4;
    sub_22331E640(&qword_26AD60538);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F870;
    *(void *)(inited + 32) = sub_22342C300();
    *(void *)(inited + 40) = v13;
    *(void *)(inited + 48) = v6;
    *(void *)(inited + 56) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_2233C5C80(inited);
    if (v10)
    {
      uint64_t v15 = sub_22342C300();
      uint64_t v16 = v8;
      uint64_t v18 = v17;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_2233CEA6C(v11, v10, v15, v18, isUniquelyReferenced_nonNull_native);
      uint64_t v8 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9)
    {
      uint64_t v20 = sub_22342C300();
      uint64_t v22 = v21;
      char v23 = swift_isUniquelyReferenced_nonNull_native();
      sub_2233CEA6C(v8, v9, v20, v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unint64_t v24 = sub_2233FDB38(v14);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_22338B9D4(0, v5[2] + 1, 1, v5);
    }
    unint64_t v26 = v5[2];
    unint64_t v25 = v5[3];
    if (v26 >= v25 >> 1) {
      uint64_t v5 = sub_22338B9D4((void *)(v25 > 1), v26 + 1, 1, v5);
    }
    v4 += 6;
    uint64_t v5[2] = v26 + 1;
    v5[v26 + 4] = v24;
    uint64_t v3 = v28 - 1;
  }
  while (v28 != 1);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22339AEB0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (a2 && (a1 == 0x737470637470 && a2 == 0xE600000000000000 || (sub_22342CF60() & 1) != 0))
  {
    uint64_t v4 = sub_22339AC24();
    uint64_t v5 = sub_22339B100((uint64_t)v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22342C200();
    sub_223323374(v6, (uint64_t)qword_26AD63108);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_22342C1E0();
    os_log_type_t v8 = sub_22342C700();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v13 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      if (a2)
      {
        unint64_t v11 = a2;
      }
      else
      {
        uint64_t v3 = 0x79656B206C696E28;
        unint64_t v11 = 0xEE002921656D614ELL;
      }
      swift_bridgeObjectRetain();
      sub_22339BC14(v3, v11, &v13);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v7, v8, "While decoding ChatRecord, unexpected array(forKey:%s) request", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v10, -1, -1);
      MEMORY[0x223CB62D0](v9, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v5;
}

uint64_t sub_22339B100(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_2233725F4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      sub_22331E640(&qword_26AD5F3A8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2233725F4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2233725F4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_223323364(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22339B2E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ChatRecord(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v37[-v12];
  if (a2 && (a1 == 28775 && a2 == 0xE200000000000000 || (sub_22342CF60() & 1) != 0))
  {
    uint64_t v14 = (uint64_t)v3 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord;
    sub_223380354((uint64_t)v3 + OBJC_IVAR____TtC17MessagesCloudSync25ChatRecordKeyedDataSource_chatRecord, (uint64_t)v13);
    uint64_t v15 = *(void *)&v13[*(int *)(v8 + 120)];
    swift_bridgeObjectRetain();
    sub_2233803B8((uint64_t)v13);
    if (v15)
    {
      if (*(void *)(v15 + 16))
      {
        sub_22339C2E8(28775, 0xE200000000000000);
        if (v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_22342BFE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v40 = a3;
      swift_bridgeObjectRelease();
      if (qword_26AD5F0D8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_22342C200();
      sub_223323374(v24, (uint64_t)qword_26AD63108);
      id v25 = v4;
      swift_bridgeObjectRetain_n();
      id v26 = v25;
      uint64_t v27 = sub_22342C1E0();
      os_log_type_t v28 = sub_22342C700();
      int v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v42 = v39;
        *(_DWORD *)uint64_t v30 = 136315650;
        int v38 = v29;
        uint64_t v41 = sub_22339BC14(28775, 0xE200000000000000, &v42);
        sub_22342CA10();
        *(_WORD *)(v30 + 12) = 2080;
        sub_223380354(v14, (uint64_t)v11);
        id v31 = (uint64_t *)&v11[*(int *)(v8 + 116)];
        uint64_t v33 = *v31;
        unint64_t v32 = v31[1];
        swift_bridgeObjectRetain();
        sub_2233803B8((uint64_t)v11);
        if (v32) {
          uint64_t v34 = v33;
        }
        else {
          uint64_t v34 = 0xD000000000000010;
        }
        if (!v32) {
          unint64_t v32 = 0x8000000223437800;
        }
        uint64_t v41 = sub_22339BC14(v34, v32, &v42);
        sub_22342CA10();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_22339BC14(a1, a2, &v42);
        sub_22342CA10();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_223317000, v27, (os_log_type_t)v38, "While decoding ChatRecord, assets found in CKRecord, but no GroupPhoto asset found for %s, id %s assetURL(forKey:%s) request", (uint8_t *)v30, 0x20u);
        uint64_t v35 = v39;
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v35, -1, -1);
        MEMORY[0x223CB62D0](v30, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a3 = v40;
    }
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_22342C200();
    sub_223323374(v18, (uint64_t)qword_26AD63108);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_22342C1E0();
    os_log_type_t v20 = sub_22342C700();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v42 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      if (a2)
      {
        unint64_t v23 = a2;
      }
      else
      {
        a1 = 0x79656B206C696E28;
        unint64_t v23 = 0xEE002921656D614ELL;
      }
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_22339BC14(a1, v23, &v42);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v19, v20, "While decoding ChatRecord, unexpected assetURL(forKey:%s) request", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v22, -1, -1);
      MEMORY[0x223CB62D0](v21, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v36 = sub_22342C010();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a3, 1, 1, v36);
}

id ChatRecordKeyedDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ChatRecordKeyedDataSource.init()()
{
}

id ChatRecordKeyedDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChatRecordKeyedDataSource(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22339BAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a2 + 40);
    for (unint64_t i = (void *)(a1 + 40); ; i += 6)
    {
      uint64_t v6 = i[1];
      uint64_t v5 = i[2];
      uint64_t v7 = i[4];
      uint64_t v13 = i[3];
      uint64_t v9 = v3[1];
      uint64_t v8 = v3[2];
      uint64_t v11 = v3[3];
      uint64_t v10 = v3[4];
      if ((*(i - 1) != *(v3 - 1) || *i != *v3) && (sub_22342CF60() & 1) == 0) {
        break;
      }
      if (v5)
      {
        if (!v8 || (v6 != v9 || v5 != v8) && (sub_22342CF60() & 1) == 0) {
          return 0;
        }
      }
      else if (v8)
      {
        return 0;
      }
      if (v7)
      {
        if (!v10 || (v13 != v11 || v7 != v10) && (sub_22342CF60() & 1) == 0) {
          return 0;
        }
      }
      else if (v10)
      {
        return 0;
      }
      v3 += 6;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_22339BC14(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_22339BCE8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_22332325C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_22332325C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_22339BCE8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22342CA20();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_22339BEA4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_22342CC50();
  if (!v8)
  {
    sub_22342CD30();
    __break(1u);
LABEL_17:
    uint64_t result = sub_22342CD80();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_22339BEA4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_22339BF3C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22339C198(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_22339C198(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22339BF3C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_22339C0B4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_22342CBC0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_22342CD30();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_22342C3D0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_22342CD80();
    __break(1u);
LABEL_14:
    uint64_t result = sub_22342CD30();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_22339C0B4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_22331E640(&qword_26AD5F168);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  uint64_t v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22339C11C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_22342C3F0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x223CB4C80](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_22339C198(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_22331E640(&qword_26AD5F168);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_22342CD80();
  __break(1u);
  return result;
}

unint64_t sub_22339C2E8(uint64_t a1, uint64_t a2)
{
  sub_22342D030();
  sub_22342C390();
  uint64_t v4 = sub_22342D060();
  return sub_22339E64C(a1, a2, v4);
}

uint64_t type metadata accessor for ChatRecordKeyedDataSource(uint64_t a1)
{
  return sub_22339C380(a1, (uint64_t *)&unk_26AD5F370);
}

uint64_t sub_22339C380(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22339C3B8()
{
  return type metadata accessor for ChatRecordKeyedDataSource(0);
}

uint64_t sub_22339C3C0()
{
  uint64_t result = type metadata accessor for ChatRecord(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ChatRecordKeyedDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ChatRecordKeyedDataSource);
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.sourceRecordType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.sourceRecordName()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.sourceRecordChangeTag()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.sourceZoneName()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.string(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.number(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.dict(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.data(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.array(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ChatRecordKeyedDataSource.assetURL(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t *sub_22339C670(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v12 = a2[11];
    uint64_t v13 = a3[10];
    __dst = (char *)a1 + v13;
    uint64_t v83 = (char *)a2 + v13;
    a1[10] = a2[10];
    a1[11] = v12;
    uint64_t v14 = sub_22342C130();
    uint64_t v86 = *(void *)(v14 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
    uint64_t v16 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v83, 1, v16))
    {
      uint64_t v17 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(__dst, v83, *(void *)(*(void *)(v17 - 8) + 64));
      uint64_t v18 = v86;
    }
    else
    {
      uint64_t v18 = v86;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(__dst, v83, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v20 = a3[11];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v15((char *)a2 + v20, 1, v16))
    {
      uint64_t v23 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v22, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v16);
    }
    uint64_t v24 = a3[12];
    uint64_t v25 = a3[13];
    id v26 = (uint64_t *)((char *)v4 + v24);
    uint64_t v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    void *v26 = *v27;
    v26[1] = v28;
    int v29 = (char *)v4 + v25;
    uint64_t v30 = (char *)a2 + v25;
    *(void *)int v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[14];
    uint64_t v32 = a3[15];
    uint64_t v33 = (char *)v4 + v31;
    uint64_t v34 = (char *)a2 + v31;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *(uint64_t *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
    uint64_t v35 = a3[16];
    uint64_t v36 = a3[17];
    uint64_t v37 = (uint64_t *)((char *)v4 + v35);
    int v38 = (uint64_t *)((char *)a2 + v35);
    uint64_t v85 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v85;
    uint64_t v39 = (uint64_t *)((char *)v4 + v36);
    uint64_t v40 = (uint64_t *)((char *)a2 + v36);
    uint64_t v87 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v87;
    uint64_t v41 = a3[18];
    uint64_t v42 = a3[19];
    uint64_t v43 = (uint64_t *)((char *)v4 + v41);
    uint64_t v44 = (uint64_t *)((char *)a2 + v41);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = (uint64_t *)((char *)v4 + v42);
    uint64_t v47 = (uint64_t *)((char *)a2 + v42);
    uint64_t v84 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v84;
    uint64_t v48 = a3[21];
    *(uint64_t *)((char *)v4 + a3[20]) = *(uint64_t *)((char *)a2 + a3[20]);
    uint64_t v49 = (uint64_t *)((char *)v4 + v48);
    char v50 = (uint64_t *)((char *)a2 + v48);
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = a3[22];
    uint64_t v53 = a3[23];
    uint64_t v54 = (char *)v4 + v52;
    char v55 = (char *)a2 + v52;
    *(void *)uint64_t v54 = *(void *)v55;
    v54[8] = v55[8];
    long long v56 = (char *)v4 + v53;
    uint64_t v57 = (char *)a2 + v53;
    *(void *)long long v56 = *(void *)v57;
    v56[8] = v57[8];
    uint64_t v58 = a3[24];
    uint64_t v59 = a3[25];
    unint64_t v60 = (uint64_t *)((char *)v4 + v58);
    uint64_t v61 = (uint64_t *)((char *)a2 + v58);
    uint64_t v62 = v61[1];
    *unint64_t v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = (char *)v4 + v59;
    unint64_t v64 = (char *)a2 + v59;
    *(void *)uint64_t v63 = *(void *)v64;
    v63[8] = v64[8];
    uint64_t v65 = a3[26];
    uint64_t v66 = a3[27];
    uint64_t v67 = (char *)v4 + v65;
    unint64_t v68 = (char *)a2 + v65;
    *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
    *((_WORD *)v67 + 8) = *((_WORD *)v68 + 8);
    id v69 = (uint64_t *)((char *)v4 + v66);
    id v70 = (uint64_t *)((char *)a2 + v66);
    uint64_t v71 = v70[1];
    *id v69 = *v70;
    v69[1] = v71;
    uint64_t v72 = a3[28];
    uint64_t v73 = a3[29];
    uint64_t v74 = (char *)v4 + v72;
    uint64_t v75 = (char *)a2 + v72;
    *(void *)uint64_t v74 = *(void *)v75;
    v74[8] = v75[8];
    uint64_t v76 = (uint64_t *)((char *)v4 + v73);
    uint64_t v77 = (uint64_t *)((char *)a2 + v73);
    uint64_t v78 = v77[1];
    *uint64_t v76 = *v77;
    v76[1] = v78;
    uint64_t v79 = a3[31];
    *(uint64_t *)((char *)v4 + a3[30]) = *(uint64_t *)((char *)a2 + a3[30]);
    uint64_t v80 = *(void **)((char *)a2 + v79);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v80 == (void *)1)
    {
      *(uint64_t *)((char *)v4 + v79) = 1;
    }
    else
    {
      *(uint64_t *)((char *)v4 + v79) = (uint64_t)v80;
      id v81 = v80;
    }
  }
  return v4;
}

void sub_22339CB08(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_22342C130();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[11];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a1 + a2[31]);
  if (v9 != (void *)1)
  {
  }
}

void *sub_22339CD1C(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v7;
  uint64_t v8 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v8;
  uint64_t v9 = *((void *)a2 + 7);
  a1[6] = *((void *)a2 + 6);
  a1[7] = v9;
  uint64_t v10 = *((void *)a2 + 9);
  a1[8] = *((void *)a2 + 8);
  a1[9] = v10;
  uint64_t v11 = *((void *)a2 + 11);
  uint64_t v12 = a3[10];
  __dst = (char *)a1 + v12;
  id v81 = &a2[v12];
  a1[10] = *((void *)a2 + 10);
  a1[11] = v11;
  uint64_t v13 = sub_22342C130();
  uint64_t v84 = *(void *)(v13 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
  uint64_t v15 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v81, 1, v15))
  {
    uint64_t v16 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(__dst, v81, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v17 = v84;
  }
  else
  {
    uint64_t v17 = v84;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(__dst, v81, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v14(&a2[v18], 1, v15))
  {
    uint64_t v21 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v15);
  }
  uint64_t v22 = a3[12];
  uint64_t v23 = a3[13];
  uint64_t v24 = (void *)((char *)a1 + v22);
  uint64_t v25 = &a2[v22];
  uint64_t v26 = *((void *)v25 + 1);
  *uint64_t v24 = *(void *)v25;
  v24[1] = v26;
  uint64_t v27 = (char *)a1 + v23;
  uint64_t v28 = &a2[v23];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  uint64_t v29 = a3[14];
  uint64_t v30 = a3[15];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = &a2[v29];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *(void *)((char *)a1 + v30) = *(void *)&a2[v30];
  uint64_t v33 = a3[16];
  uint64_t v34 = a3[17];
  uint64_t v35 = (void *)((char *)a1 + v33);
  uint64_t v36 = &a2[v33];
  uint64_t v83 = *((void *)v36 + 1);
  *uint64_t v35 = *(void *)v36;
  v35[1] = v83;
  uint64_t v37 = (void *)((char *)a1 + v34);
  int v38 = &a2[v34];
  uint64_t v85 = *((void *)v38 + 1);
  *uint64_t v37 = *(void *)v38;
  v37[1] = v85;
  uint64_t v39 = a3[18];
  uint64_t v40 = a3[19];
  uint64_t v41 = (void *)((char *)a1 + v39);
  uint64_t v42 = &a2[v39];
  uint64_t v43 = *((void *)v42 + 1);
  *uint64_t v41 = *(void *)v42;
  v41[1] = v43;
  uint64_t v44 = (void *)((char *)a1 + v40);
  uint64_t v45 = &a2[v40];
  uint64_t v82 = *((void *)v45 + 1);
  void *v44 = *(void *)v45;
  v44[1] = v82;
  uint64_t v46 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)&a2[a3[20]];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = &a2[v46];
  uint64_t v49 = *((void *)v48 + 1);
  void *v47 = *(void *)v48;
  v47[1] = v49;
  uint64_t v50 = a3[22];
  uint64_t v51 = a3[23];
  uint64_t v52 = (char *)a1 + v50;
  uint64_t v53 = &a2[v50];
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v53[8];
  uint64_t v54 = (char *)a1 + v51;
  char v55 = &a2[v51];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v55[8];
  uint64_t v56 = a3[24];
  uint64_t v57 = a3[25];
  uint64_t v58 = (void *)((char *)a1 + v56);
  uint64_t v59 = &a2[v56];
  uint64_t v60 = *((void *)v59 + 1);
  *uint64_t v58 = *(void *)v59;
  v58[1] = v60;
  uint64_t v61 = (char *)a1 + v57;
  uint64_t v62 = &a2[v57];
  *(void *)uint64_t v61 = *(void *)v62;
  v61[8] = v62[8];
  uint64_t v63 = a3[26];
  uint64_t v64 = a3[27];
  uint64_t v65 = (char *)a1 + v63;
  uint64_t v66 = &a2[v63];
  *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
  *((_WORD *)v65 + 8) = *((_WORD *)v66 + 8);
  uint64_t v67 = (void *)((char *)a1 + v64);
  unint64_t v68 = &a2[v64];
  uint64_t v69 = *((void *)v68 + 1);
  *uint64_t v67 = *(void *)v68;
  v67[1] = v69;
  uint64_t v70 = a3[28];
  uint64_t v71 = a3[29];
  uint64_t v72 = (char *)a1 + v70;
  uint64_t v73 = &a2[v70];
  *(void *)uint64_t v72 = *(void *)v73;
  v72[8] = v73[8];
  uint64_t v74 = (void *)((char *)a1 + v71);
  uint64_t v75 = &a2[v71];
  uint64_t v76 = *((void *)v75 + 1);
  void *v74 = *(void *)v75;
  v74[1] = v76;
  uint64_t v77 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)&a2[a3[30]];
  uint64_t v78 = *(void **)&a2[v77];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v78 != (void *)1) {
    id v79 = v78;
  }
  *(void *)((char *)a1 + v77) = v78;
  return a1;
}

char *sub_22339D158(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22342C130();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[12];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (void *)((char *)a2 + v21);
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[13];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = a3[14];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  *(void *)&a1[a3[15]] = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[16];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = (void *)((char *)a2 + v32);
  *(void *)uint64_t v33 = *v34;
  *((void *)v33 + 1) = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[17];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = (void *)((char *)a2 + v35);
  *(void *)uint64_t v36 = *v37;
  *((void *)v36 + 1) = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[18];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = (void *)((char *)a2 + v38);
  *(void *)uint64_t v39 = *v40;
  *((void *)v39 + 1) = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[19];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = (void *)((char *)a2 + v41);
  *(void *)uint64_t v42 = *v43;
  *((void *)v42 + 1) = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)((char *)a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[21];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = (void *)((char *)a2 + v44);
  *(void *)uint64_t v45 = *v46;
  *((void *)v45 + 1) = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[22];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = *(void *)v49;
  v48[8] = v49[8];
  *(void *)uint64_t v48 = v50;
  uint64_t v51 = a3[23];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = (char *)a2 + v51;
  LOBYTE(v50) = v53[8];
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v50;
  uint64_t v54 = a3[24];
  char v55 = &a1[v54];
  uint64_t v56 = (void *)((char *)a2 + v54);
  *(void *)char v55 = *v56;
  *((void *)v55 + 1) = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[25];
  uint64_t v58 = &a1[v57];
  uint64_t v59 = (char *)a2 + v57;
  uint64_t v60 = *(void *)v59;
  v58[8] = v59[8];
  *(void *)uint64_t v58 = v60;
  uint64_t v61 = a3[26];
  uint64_t v62 = &a1[v61];
  uint64_t v63 = (char *)a2 + v61;
  LOWORD(v60) = *((_WORD *)v63 + 8);
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  *((_WORD *)v62 + 8) = v60;
  uint64_t v64 = a3[27];
  uint64_t v65 = &a1[v64];
  uint64_t v66 = (void *)((char *)a2 + v64);
  *(void *)uint64_t v65 = *v66;
  *((void *)v65 + 1) = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[28];
  unint64_t v68 = &a1[v67];
  uint64_t v69 = (char *)a2 + v67;
  uint64_t v70 = *(void *)v69;
  v68[8] = v69[8];
  *(void *)unint64_t v68 = v70;
  uint64_t v71 = a3[29];
  uint64_t v72 = &a1[v71];
  uint64_t v73 = (void *)((char *)a2 + v71);
  *(void *)uint64_t v72 = *v73;
  *((void *)v72 + 1) = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[30]] = *(void *)((char *)a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = a3[31];
  uint64_t v75 = &a1[v74];
  uint64_t v76 = *(void **)&a1[v74];
  uint64_t v77 = *(void **)((char *)a2 + v74);
  if (v76 != (void *)1)
  {
    if (v77 != (void *)1)
    {
      *(void *)uint64_t v75 = v77;
      id v79 = v77;

      return a1;
    }
    sub_22339D78C((uint64_t)&a1[v74]);
    uint64_t v77 = *(void **)((char *)a2 + v74);
    goto LABEL_18;
  }
  if (v77 == (void *)1)
  {
LABEL_18:
    *(void *)uint64_t v75 = v77;
    return a1;
  }
  *(void *)uint64_t v75 = v77;
  id v78 = v77;
  return a1;
}

uint64_t sub_22339D78C(uint64_t a1)
{
  return a1;
}

_OWORD *sub_22339D7E0(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  long long v8 = *((_OWORD *)a2 + 5);
  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = &a2[v9];
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v8;
  uint64_t v12 = sub_22342C130();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  int v18 = &a2[v16];
  if (v14(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = a3[14];
  uint64_t v24 = a3[15];
  uint64_t v25 = (char *)a1 + v23;
  uint64_t v26 = &a2[v23];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)((char *)a1 + v24) = *(void *)&a2[v24];
  uint64_t v27 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)&a2[a3[16]];
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)&a2[v27];
  uint64_t v28 = a3[19];
  *(_OWORD *)((char *)a1 + a3[18]) = *(_OWORD *)&a2[a3[18]];
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)&a2[v28];
  uint64_t v29 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)&a2[a3[20]];
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)&a2[v29];
  uint64_t v30 = a3[22];
  uint64_t v31 = a3[23];
  uint64_t v32 = (char *)a1 + v30;
  uint64_t v33 = &a2[v30];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = (char *)a1 + v31;
  uint64_t v35 = &a2[v31];
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = a3[25];
  *(_OWORD *)((char *)a1 + a3[24]) = *(_OWORD *)&a2[a3[24]];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = &a2[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = a3[26];
  uint64_t v40 = a3[27];
  uint64_t v41 = (char *)a1 + v39;
  uint64_t v42 = &a2[v39];
  long long v43 = *(_OWORD *)v42;
  *((_WORD *)v41 + 8) = *((_WORD *)v42 + 8);
  *(_OWORD *)uint64_t v41 = v43;
  *(_OWORD *)((char *)a1 + v40) = *(_OWORD *)&a2[v40];
  uint64_t v44 = a3[28];
  uint64_t v45 = a3[29];
  uint64_t v46 = (char *)a1 + v44;
  uint64_t v47 = &a2[v44];
  v46[8] = v47[8];
  *(void *)uint64_t v46 = *(void *)v47;
  *(_OWORD *)((char *)a1 + v45) = *(_OWORD *)&a2[v45];
  uint64_t v48 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)&a2[a3[30]];
  *(void *)((char *)a1 + v48) = *(void *)&a2[v48];
  return a1;
}

char *sub_22339DAF0(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  *((void *)a1 + 8) = a2[8];
  *((void *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  *((void *)a1 + 10) = a2[10];
  *((void *)a1 + 11) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_22342C130();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v17(&a1[v21], 1, v15);
  int v25 = v17(v23, 1, v15);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v23, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
LABEL_12:
    uint64_t v26 = sub_22331E640((uint64_t *)&unk_26AD5ED20);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v22, v23, v15);
LABEL_13:
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[13];
  uint64_t v33 = a3[14];
  uint64_t v34 = &a1[v32];
  uint64_t v35 = (char *)a2 + v32;
  v34[8] = v35[8];
  *(void *)uint64_t v34 = *(void *)v35;
  uint64_t v36 = &a1[v33];
  uint64_t v37 = (char *)a2 + v33;
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  *(void *)&a1[a3[15]] = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[16];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = (void *)((char *)a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *(void *)uint64_t v39 = v42;
  *((void *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[17];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *(void *)uint64_t v44 = v47;
  *((void *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[18];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = (void *)((char *)a2 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *(void *)uint64_t v49 = v52;
  *((void *)v49 + 1) = v51;
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[19];
  uint64_t v54 = &a1[v53];
  char v55 = (void *)((char *)a2 + v53);
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *(void *)uint64_t v54 = v57;
  *((void *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[20]] = *(void *)((char *)a2 + a3[20]);
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[21];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = (void *)((char *)a2 + v58);
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *(void *)uint64_t v59 = v62;
  *((void *)v59 + 1) = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[22];
  uint64_t v64 = a3[23];
  uint64_t v65 = &a1[v63];
  uint64_t v66 = (char *)a2 + v63;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = &a1[v64];
  unint64_t v68 = (char *)a2 + v64;
  *(void *)uint64_t v67 = *(void *)v68;
  v67[8] = v68[8];
  uint64_t v69 = a3[24];
  uint64_t v70 = &a1[v69];
  uint64_t v71 = (void *)((char *)a2 + v69);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  *(void *)uint64_t v70 = v73;
  *((void *)v70 + 1) = v72;
  swift_bridgeObjectRelease();
  uint64_t v74 = a3[25];
  uint64_t v75 = a3[26];
  uint64_t v76 = &a1[v74];
  uint64_t v77 = (char *)a2 + v74;
  *(void *)uint64_t v76 = *(void *)v77;
  v76[8] = v77[8];
  id v78 = &a1[v75];
  id v79 = (char *)a2 + v75;
  *(_OWORD *)id v78 = *(_OWORD *)v79;
  *((_WORD *)v78 + 8) = *((_WORD *)v79 + 8);
  uint64_t v80 = a3[27];
  id v81 = &a1[v80];
  uint64_t v82 = (void *)((char *)a2 + v80);
  uint64_t v84 = *v82;
  uint64_t v83 = v82[1];
  *(void *)id v81 = v84;
  *((void *)v81 + 1) = v83;
  swift_bridgeObjectRelease();
  uint64_t v85 = a3[28];
  uint64_t v86 = a3[29];
  uint64_t v87 = &a1[v85];
  BOOL v88 = (char *)a2 + v85;
  *(void *)uint64_t v87 = *(void *)v88;
  v87[8] = v88[8];
  uint64_t v89 = &a1[v86];
  uint64_t v90 = (void *)((char *)a2 + v86);
  uint64_t v92 = *v90;
  uint64_t v91 = v90[1];
  *(void *)uint64_t v89 = v92;
  *((void *)v89 + 1) = v91;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[30]] = *(void *)((char *)a2 + a3[30]);
  swift_bridgeObjectRelease();
  uint64_t v93 = a3[31];
  uint64_t v94 = &a1[v93];
  char v95 = *(void **)&a1[v93];
  uint64_t v96 = *(void *)((char *)a2 + v93);
  if (v95 != (void *)1)
  {
    if (v96 != 1)
    {
      *(void *)uint64_t v94 = v96;

      return a1;
    }
    sub_22339D78C((uint64_t)&a1[v93]);
    uint64_t v96 = *(void *)((char *)a2 + v93);
  }
  *(void *)uint64_t v94 = v96;
  return a1;
}

uint64_t sub_22339DFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22339E010);
}

uint64_t sub_22339E010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_22331E640(&qword_26AD5F320);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_22339E0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22339E0E4);
}

uint64_t sub_22339E0E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_22331E640(&qword_26AD5F320);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_22339E190()
{
  sub_223321460();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22339E280(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_22339E304(&qword_26AD5F270, (void (*)(uint64_t))type metadata accessor for ChatRecord);
  uint64_t result = sub_22339E304(&qword_26AD5F268, (void (*)(uint64_t))type metadata accessor for ChatRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22339E304(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22339E34C(uint64_t a1)
{
  uint64_t v2 = sub_22342CB10();
  return sub_22339E730(a1, v2);
}

unint64_t sub_22339E390(uint64_t a1)
{
  uint64_t v2 = sub_22342C9D0();
  return sub_22339EBAC(a1, v2, (unint64_t *)&qword_26AD60338);
}

unint64_t sub_22339E3E0(unsigned __int8 a1)
{
  sub_22342D030();
  sub_22342C390();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_22342D060();
  return sub_22339E7F8(a1, v2);
}

unint64_t sub_22339E4FC(uint64_t a1)
{
  sub_22342C300();
  sub_22342D030();
  sub_22342C390();
  uint64_t v2 = sub_22342D060();
  swift_bridgeObjectRelease();
  return sub_22339EA34(a1, v2);
}

unint64_t sub_22339E590(uint64_t a1)
{
  uint64_t v2 = sub_22342C9D0();
  return sub_22339EBAC(a1, v2, &qword_26AD60388);
}

unint64_t sub_22339E5E0(uint64_t a1)
{
  sub_22342D030();
  sub_22342D040();
  uint64_t v2 = sub_22342D060();
  return sub_22339ECC0(a1, v2);
}

unint64_t sub_22339E64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22342CF60() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22342CF60() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_22339E730(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_2233427D8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x223CB53C0](v9, a1);
      sub_22334902C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_22339E7F8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEE0064756F6C4369;
      unint64_t v8 = 0x6D6F724664616572;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x546E657474697277;
          unint64_t v7 = 0xEF64756F6C43696FLL;
          break;
        case 2:
          unint64_t v7 = 0x8000000223436020;
          unint64_t v8 = 0xD000000000000011;
          break;
        case 3:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x646574726F706D69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x6D6F724664616572;
      unint64_t v10 = 0xEE0064756F6C4369;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xEF64756F6C43696FLL;
          if (v8 == 0x546E657474697277) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          unint64_t v10 = 0x8000000223436020;
          unint64_t v9 = 0xD000000000000011;
          goto LABEL_11;
        case 3:
          unint64_t v10 = 0xE800000000000000;
          if (v8 == 0x646574726F706D69) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v9) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_22342CF60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_22339EA34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_22342C300();
    uint64_t v8 = v7;
    if (v6 == sub_22342C300() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_22342CF60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_22342C300();
          uint64_t v15 = v14;
          if (v13 == sub_22342C300() && v15 == v16) {
            break;
          }
          char v18 = sub_22342CF60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_22339EBAC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_22334199C(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_22342C9E0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_22342C9E0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_22339ECC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_22339ED5C(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_22339EE3C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_22342CBA0();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_22342CC50();
      }
      unsigned int v5 = sub_22342CC60();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_22339EE3C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_22339EEDC(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_22339EF4C(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_22339EEDC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_22339C11C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_22339EF4C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      _OWORD v13[2] = v3;
      uint64_t v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_22342CC50();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x270F9E998]();
    }
  }
  return result;
}

BOOL sub_22339F070(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (char v7 = sub_22342CF60(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = a1[3];
    uint64_t v10 = a2[3];
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (a1[2] != a2[2] || v9 != v10)
      {
        char v11 = sub_22342CF60();
        BOOL result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v12 = a1[5];
    uint64_t v13 = a2[5];
    if (v12)
    {
      if (!v13) {
        return 0;
      }
      if (a1[4] != a2[4] || v12 != v13)
      {
        char v14 = sub_22342CF60();
        BOOL result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    uint64_t v15 = a1[7];
    uint64_t v16 = a2[7];
    if (v15)
    {
      if (!v16) {
        return 0;
      }
      if (a1[6] != a2[6] || v15 != v16)
      {
        char v17 = sub_22342CF60();
        BOOL result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    char v18 = (int *)type metadata accessor for ChatRecord(0);
    int v19 = v18;
    uint64_t v20 = v18[13];
    uint64_t v21 = (void *)((char *)a1 + v20);
    char v22 = *((unsigned char *)a1 + v20 + 8);
    uint64_t v23 = (void *)((char *)a2 + v20);
    int v24 = *((unsigned __int8 *)a2 + v20 + 8);
    if (v22)
    {
      if (!v24) {
        return 0;
      }
    }
    else
    {
      if (*v21 != *v23) {
        LOBYTE(v24) = 1;
      }
      if (v24) {
        return 0;
      }
    }
    uint64_t v25 = v18[14];
    uint64_t v26 = (void *)((char *)a1 + v25);
    char v27 = *((unsigned char *)a1 + v25 + 8);
    uint64_t v28 = (void *)((char *)a2 + v25);
    int v29 = *((unsigned __int8 *)a2 + v25 + 8);
    if (v27)
    {
      if (!v29) {
        return 0;
      }
    }
    else
    {
      if (*v26 != *v28) {
        LOBYTE(v29) = 1;
      }
      if (v29) {
        return 0;
      }
    }
    uint64_t v30 = v18[16];
    uint64_t v31 = (void *)((char *)a1 + v30);
    uint64_t v32 = *(void *)((char *)a1 + v30 + 8);
    uint64_t v33 = (void *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    if (v32)
    {
      if (!v34) {
        return 0;
      }
      if (*v31 != *v33 || v32 != v34)
      {
        char v35 = sub_22342CF60();
        BOOL result = 0;
        if ((v35 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v34)
    {
      return 0;
    }
    uint64_t v36 = v19[17];
    uint64_t v37 = (void *)((char *)a1 + v36);
    uint64_t v38 = *(void *)((char *)a1 + v36 + 8);
    uint64_t v39 = (void *)((char *)a2 + v36);
    uint64_t v40 = v39[1];
    if (v38)
    {
      if (!v40) {
        return 0;
      }
      if (*v37 != *v39 || v38 != v40)
      {
        char v41 = sub_22342CF60();
        BOOL result = 0;
        if ((v41 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v40)
    {
      return 0;
    }
    uint64_t v42 = v19[18];
    uint64_t v43 = (void *)((char *)a1 + v42);
    uint64_t v44 = *(void *)((char *)a1 + v42 + 8);
    uint64_t v45 = (void *)((char *)a2 + v42);
    uint64_t v46 = v45[1];
    if (v44)
    {
      if (!v46) {
        return 0;
      }
      if (*v43 != *v45 || v44 != v46)
      {
        char v47 = sub_22342CF60();
        BOOL result = 0;
        if ((v47 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v46)
    {
      return 0;
    }
    uint64_t v48 = v19[19];
    uint64_t v49 = (void *)((char *)a1 + v48);
    uint64_t v50 = *(void *)((char *)a1 + v48 + 8);
    uint64_t v51 = (void *)((char *)a2 + v48);
    uint64_t v52 = v51[1];
    if (v50)
    {
      if (!v52) {
        return 0;
      }
      if (*v49 != *v51 || v50 != v52)
      {
        char v53 = sub_22342CF60();
        BOOL result = 0;
        if ((v53 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v52)
    {
      return 0;
    }
    uint64_t v54 = v19[20];
    uint64_t v55 = *(void *)((char *)a1 + v54);
    uint64_t v56 = *(void *)((char *)a2 + v54);
    if (v55)
    {
      if (!v56 || (sub_22339BAE0(v55, v56) & 1) == 0) {
        return 0;
      }
    }
    else if (v56)
    {
      return 0;
    }
    uint64_t v57 = v19[21];
    uint64_t v58 = (void *)((char *)a1 + v57);
    uint64_t v59 = *(void *)((char *)a1 + v57 + 8);
    uint64_t v60 = (void *)((char *)a2 + v57);
    uint64_t v61 = v60[1];
    if (v59)
    {
      if (!v61) {
        return 0;
      }
      if (*v58 != *v60 || v59 != v61)
      {
        char v62 = sub_22342CF60();
        BOOL result = 0;
        if ((v62 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v61)
    {
      return 0;
    }
    uint64_t v63 = v19[22];
    uint64_t v64 = (void *)((char *)a1 + v63);
    char v65 = *((unsigned char *)a1 + v63 + 8);
    uint64_t v66 = (void *)((char *)a2 + v63);
    int v67 = *((unsigned __int8 *)a2 + v63 + 8);
    if (v65)
    {
      if (!v67) {
        return 0;
      }
    }
    else
    {
      if (*v64 != *v66) {
        LOBYTE(v67) = 1;
      }
      if (v67) {
        return 0;
      }
    }
    uint64_t v68 = v19[23];
    uint64_t v69 = (void *)((char *)a1 + v68);
    char v70 = *((unsigned char *)a1 + v68 + 8);
    uint64_t v71 = (void *)((char *)a2 + v68);
    int v72 = *((unsigned __int8 *)a2 + v68 + 8);
    if (v70)
    {
      if (!v72) {
        return 0;
      }
    }
    else
    {
      if (*v69 != *v71) {
        LOBYTE(v72) = 1;
      }
      if (v72) {
        return 0;
      }
    }
    uint64_t v73 = v19[24];
    uint64_t v74 = (void *)((char *)a1 + v73);
    uint64_t v75 = *(void *)((char *)a1 + v73 + 8);
    uint64_t v76 = (void *)((char *)a2 + v73);
    uint64_t v77 = v76[1];
    if (v75)
    {
      if (!v77) {
        return 0;
      }
      if (*v74 != *v76 || v75 != v77)
      {
        char v78 = sub_22342CF60();
        BOOL result = 0;
        if ((v78 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v77)
    {
      return 0;
    }
    uint64_t v79 = v19[25];
    uint64_t v80 = (void *)((char *)a1 + v79);
    char v81 = *((unsigned char *)a1 + v79 + 8);
    uint64_t v82 = (void *)((char *)a2 + v79);
    int v83 = *((unsigned __int8 *)a2 + v79 + 8);
    if (v81)
    {
      if (!v83) {
        return 0;
      }
    }
    else
    {
      if (*v80 != *v82) {
        LOBYTE(v83) = 1;
      }
      if (v83) {
        return 0;
      }
    }
    uint64_t v84 = v19[26];
    uint64_t v85 = (char *)a1 + v84;
    char v86 = *((unsigned char *)a1 + v84 + 17);
    uint64_t v87 = (char *)a2 + v84;
    char v88 = v87[17];
    if (v86) {
      goto LABEL_109;
    }
    if ((v87[17] & 1) != 0 || *(void *)v85 != *(void *)v87) {
      return 0;
    }
    char v88 = v87[16];
    if (v85[16])
    {
LABEL_109:
      if ((v88 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if ((v87[16] & 1) != 0 || *((void *)v85 + 1) != *((void *)v87 + 1)) {
        return result;
      }
    }
    uint64_t v89 = v19[27];
    uint64_t v90 = (void *)((char *)a1 + v89);
    uint64_t v91 = *(void *)((char *)a1 + v89 + 8);
    uint64_t v92 = (void *)((char *)a2 + v89);
    uint64_t v93 = v92[1];
    if (v91)
    {
      if (!v93) {
        return 0;
      }
      if (*v90 != *v92 || v91 != v93)
      {
        char v94 = sub_22342CF60();
        BOOL result = 0;
        if ((v94 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v93)
    {
      return 0;
    }
    uint64_t v95 = v19[28];
    uint64_t v96 = (void *)((char *)a1 + v95);
    char v97 = *((unsigned char *)a1 + v95 + 8);
    char v98 = (void *)((char *)a2 + v95);
    int v99 = *((unsigned __int8 *)a2 + v95 + 8);
    if (v97)
    {
      if (!v99) {
        return 0;
      }
    }
    else
    {
      if (*v96 != *v98) {
        LOBYTE(v99) = 1;
      }
      if (v99) {
        return 0;
      }
    }
    uint64_t v100 = v19[31];
    uint64_t v101 = *(void **)((char *)a1 + v100);
    uint64_t v102 = *(void **)((char *)a2 + v100);
    if (v101 == (void *)1)
    {
      if (v102 == (void *)1) {
        return 1;
      }
    }
    else if (v102 != (void *)1)
    {
      if (v101)
      {
        if (!v102) {
          return 0;
        }
        sub_22334199C(0, (unint64_t *)&qword_267FA2E80);
        sub_22339F62C(v102);
        sub_22339F62C(v101);
        char v103 = sub_22342C9E0();
        sub_22339F63C(v102);
        sub_22339F63C(v101);
        return (v103 & 1) != 0;
      }
      if (!v102) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

id sub_22339F62C(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_22339F63C(id a1)
{
  if (a1 != (id)1) {
}
  }

unint64_t sub_22339F64C()
{
  unint64_t result = qword_26AD5F250;
  if (!qword_26AD5F250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F250);
  }
  return result;
}

unint64_t sub_22339F6A0()
{
  unint64_t result = qword_26AD5F3A0;
  if (!qword_26AD5F3A0)
  {
    sub_2233378D8(&qword_26AD5F398);
    sub_22339F71C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F3A0);
  }
  return result;
}

unint64_t sub_22339F71C()
{
  unint64_t result = qword_26AD5F328;
  if (!qword_26AD5F328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F328);
  }
  return result;
}

unint64_t sub_22339F770()
{
  unint64_t result = qword_267FA2EA0;
  if (!qword_267FA2EA0)
  {
    sub_2233378D8(&qword_26AD60278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2EA0);
  }
  return result;
}

uint64_t sub_22339F7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22331E640(&qword_26AD5F320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22339F844()
{
  unint64_t result = qword_26AD5F380;
  if (!qword_26AD5F380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F380);
  }
  return result;
}

unint64_t sub_22339F898()
{
  unint64_t result = qword_267FA2EB0;
  if (!qword_267FA2EB0)
  {
    sub_2233378D8(&qword_267FA2EA8);
    sub_223373438();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2EB0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ChatRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ChatRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22339FA68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatRecord.CodingKeys()
{
  return &type metadata for ChatRecord.CodingKeys;
}

unint64_t sub_22339FAA4()
{
  unint64_t result = qword_267FA2EB8;
  if (!qword_267FA2EB8)
  {
    sub_2233378D8(&qword_267FA2EC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2EB8);
  }
  return result;
}

unint64_t sub_22339FB04()
{
  unint64_t result = qword_267FA2EC8[0];
  if (!qword_267FA2EC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267FA2EC8);
  }
  return result;
}

unint64_t sub_22339FB5C()
{
  unint64_t result = qword_26AD5F260;
  if (!qword_26AD5F260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F260);
  }
  return result;
}

unint64_t sub_22339FBB4()
{
  unint64_t result = qword_26AD5F258;
  if (!qword_26AD5F258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F258);
  }
  return result;
}

uint64_t sub_22339FC08()
{
  unint64_t v0 = sub_22342CF70();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

uint64_t sub_22339FC5C()
{
  int v3 = (uint64_t (__cdecl *)())((char *)&dword_267FA2EE0 + dword_267FA2EE0);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_223366AA4;
  return v3();
}

id sub_22339FCFC(Class *a1)
{
  id v3 = 0;
  uint64_t v4 = v1 + *(int *)(type metadata accessor for MessageUpdateRecord() + 56);
  unint64_t v5 = *(void *)(v4 + 8);
  if (v5 >> 60 != 15)
  {
    uint64_t v6 = *(void *)v4;
    sub_22331E684(*(void *)v4, *(void *)(v4 + 8));
    BOOL v7 = (void *)sub_22342C050();
    id v8 = objc_msgSend(v7, sel__FTOptionallyDecompressData);

    if (v8)
    {
      uint64_t v9 = sub_22342C070();
      unint64_t v11 = v10;

      id v8 = (id)sub_22342C050();
      sub_22331EA68(v9, v11);
    }
    id v3 = objc_msgSend(objc_allocWithZone(*a1), sel_initWithData_, v8);

    sub_223322054(v6, v5);
  }
  return v3;
}

unint64_t sub_22339FDF0()
{
  id v0 = sub_22339FCFC((Class *)0x263F4B078);
  if (v0)
  {
    uint64_t v1 = v0;
    if (objc_msgSend(v0, sel_hasMsgid))
    {
      id v2 = objc_msgSend(v1, sel_msgid);
      uint64_t v3 = MEMORY[0x263F8EE80];
      if (v2)
      {
        uint64_t v4 = v2;
        uint64_t v5 = sub_22342C300();
        uint64_t v7 = v6;

        uint64_t v25 = MEMORY[0x263F8D310];
        *(void *)&long long v24 = v5;
        *((void *)&v24 + 1) = v7;
        sub_223323364(&v24, v23);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_2233CE3C0(v23, 4475213, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v3 = MEMORY[0x263F8EE80];
    }
    if (objc_msgSend(v1, sel_hasThreadGuid))
    {
      id v11 = objc_msgSend(v1, sel_threadGuid);
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = sub_22342C300();
        uint64_t v15 = v14;

        uint64_t v25 = MEMORY[0x263F8D310];
        *(void *)&long long v24 = v13;
        *((void *)&v24 + 1) = v15;
        sub_223323364(&v24, v23);
        char v16 = swift_isUniquelyReferenced_nonNull_native();
        sub_2233CE3C0(v23, 1145655124, 0xE400000000000000, v16);
        swift_bridgeObjectRelease();
      }
    }
    if (objc_msgSend(v1, sel_hasThreadPart)
      && (id v17 = objc_msgSend(v1, sel_threadPart)) != 0)
    {
      char v18 = v17;
      uint64_t v19 = sub_22342C300();
      uint64_t v21 = v20;

      uint64_t v25 = MEMORY[0x263F8D310];
      *(void *)&long long v24 = v19;
      *((void *)&v24 + 1) = v21;
      sub_223323364(&v24, v23);
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      sub_2233CE3C0(v23, 0x747261504F54, 0xE600000000000000, v22);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    return v3;
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    return sub_2233C5EB0(v9);
  }
}

unint64_t sub_2233A0048()
{
  id v0 = sub_22339FCFC((Class *)0x263F4B080);
  if (v0)
  {
    uint64_t v1 = v0;
    if (objc_msgSend(v0, sel_hasMsgid))
    {
      id v2 = objc_msgSend(v1, sel_msgid);
      uint64_t v3 = MEMORY[0x263F8EE80];
      if (v2)
      {
        uint64_t v4 = v2;
        uint64_t v5 = sub_22342C300();
        uint64_t v7 = v6;

        uint64_t v19 = MEMORY[0x263F8D310];
        *(void *)&long long v18 = v5;
        *((void *)&v18 + 1) = v7;
        sub_223323364(&v18, v17);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_2233CE3C0(v17, 4475213, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v3 = MEMORY[0x263F8EE80];
    }
    if (objc_msgSend(v1, sel_hasSr)
      && (id v11 = objc_msgSend(v1, sel_sr)) != 0)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_22342C300();
      uint64_t v15 = v14;

      uint64_t v19 = MEMORY[0x263F8D310];
      *(void *)&long long v18 = v13;
      *((void *)&v18 + 1) = v15;
      sub_223323364(&v18, v17);
      char v16 = swift_isUniquelyReferenced_nonNull_native();
      sub_2233CE3C0(v17, 21075, 0xE200000000000000, v16);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    return v3;
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    return sub_2233C5EB0(v9);
  }
}

unint64_t sub_2233A0204()
{
  id v0 = sub_22339FCFC((Class *)0x263F4B088);
  if (v0)
  {
    uint64_t v1 = v0;
    if (objc_msgSend(v0, sel_hasMsgid))
    {
      id v2 = objc_msgSend(v1, sel_msgid);
      uint64_t v3 = MEMORY[0x263F8EE80];
      if (v2)
      {
        uint64_t v4 = v2;
        uint64_t v5 = sub_22342C300();
        uint64_t v7 = v6;

        uint64_t v19 = MEMORY[0x263F8D310];
        *(void *)&long long v18 = v5;
        *((void *)&v18 + 1) = v7;
        sub_223323364(&v18, v17);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_2233CE3C0(v17, 4475213, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v3 = MEMORY[0x263F8EE80];
    }
    if (objc_msgSend(v1, sel_hasChatid)
      && (id v11 = objc_msgSend(v1, sel_chatid)) != 0)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_22342C300();
      uint64_t v15 = v14;

      uint64_t v19 = MEMORY[0x263F8D310];
      *(void *)&long long v18 = v13;
      *((void *)&v18 + 1) = v15;
      sub_223323364(&v18, v17);
      char v16 = swift_isUniquelyReferenced_nonNull_native();
      sub_2233CE3C0(v17, 0x444954414843, 0xE600000000000000, v16);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    return v3;
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    return sub_2233C5EB0(v9);
  }
}

uint64_t sub_2233A03C8()
{
  *(void *)(v1 + 152) = v0;
  return MEMORY[0x270FA2498](sub_2233A03E8, 0, 0);
}

uint64_t sub_2233A03E8()
{
  uint64_t v49 = v0;
  uint64_t v1 = v0[19];
  id v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MessageUpdateRecord() + 52));
  uint64_t v3 = *v2;
  v0[20] = *v2;
  unint64_t v4 = v2[1];
  v0[21] = v4;
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_22342CDA0();
    swift_bridgeObjectRelease();
    if (v5 == 2)
    {
      unint64_t v20 = sub_2233A0204();
      uint64_t v21 = qword_26AD630F8;
      v0[34] = v20;
      v0[35] = v21;
      if (v21)
      {
        uint64_t v22 = qword_26AD63100;
        v0[36] = qword_26AD63100;
        v0[37] = *(void *)(v22 + 256);
        v0[38] = (v22 + 256) & 0xFFFFFFFFFFFFLL | 0x2043000000000000;
        if (qword_26AD5EE88 != -1) {
          swift_once();
        }
        sub_22342C5B0();
        uint64_t v9 = sub_22342C560();
        uint64_t v11 = v23;
        uint64_t v12 = sub_2233A1998;
        goto LABEL_24;
      }
    }
    else if (v5 == 1)
    {
      unint64_t v24 = sub_2233A0048();
      uint64_t v25 = qword_26AD630F8;
      v0[28] = v24;
      v0[29] = v25;
      if (v25)
      {
        uint64_t v26 = qword_26AD63100;
        v0[30] = qword_26AD63100;
        v0[31] = *(void *)(v26 + 248);
        v0[32] = (v26 + 248) & 0xFFFFFFFFFFFFLL | 0x6AD6000000000000;
        if (qword_26AD5EE88 != -1) {
          swift_once();
        }
        sub_22342C5B0();
        uint64_t v9 = sub_22342C560();
        uint64_t v11 = v27;
        uint64_t v12 = sub_2233A12A8;
        goto LABEL_24;
      }
    }
    else
    {
      if (v5)
      {
        if (qword_26AD60210 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_22342C200();
        sub_223323374(v36, (uint64_t)qword_26AD63330);
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_22342C1E0();
        os_log_type_t v38 = sub_22342C720();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          v48[0] = v40;
          *(_DWORD *)uint64_t v39 = 136315138;
          swift_bridgeObjectRetain();
          v0[15] = sub_22339BC14(v3, v4, v48);
          sub_22342CA10();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_223317000, v37, v38, "Unrecognized update type, %s. Ignoring", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x223CB62D0](v40, -1, -1);
          MEMORY[0x223CB62D0](v39, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_22342C300();
        id v45 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v46 = (void *)sub_22342C2D0();
        swift_bridgeObjectRelease();
        id v43 = objc_msgSend(v45, sel_initWithDomain_code_userInfo_, v46, 0, 0);

        sub_223381530(22, v43, 0, 0);
        uint64_t v44 = 0;
        goto LABEL_39;
      }
      unint64_t v6 = sub_22339FDF0();
      uint64_t v7 = qword_26AD630F8;
      v0[22] = v6;
      v0[23] = v7;
      if (v7)
      {
        uint64_t v8 = qword_26AD63100;
        v0[24] = qword_26AD63100;
        v0[25] = *(void *)(v8 + 240);
        v0[26] = (v8 + 240) & 0xFFFFFFFFFFFFLL | 0xE5D2000000000000;
        if (qword_26AD5EE88 != -1) {
          swift_once();
        }
        sub_22342C5B0();
        uint64_t v9 = sub_22342C560();
        uint64_t v11 = v10;
        uint64_t v12 = sub_2233A0BB8;
LABEL_24:
        return MEMORY[0x270FA2498](v12, v9, v11);
      }
    }
    swift_bridgeObjectRelease();
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_22342C200();
    sub_223323374(v28, (uint64_t)qword_26AD63330);
    swift_bridgeObjectRetain();
    int v29 = sub_22342C1E0();
    os_log_type_t v30 = sub_22342C700();
    BOOL v31 = os_log_type_enabled(v29, v30);
    unint64_t v32 = v0[21];
    if (v31)
    {
      uint64_t v33 = v0[20];
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v48[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      swift_bridgeObjectRetain();
      v0[16] = sub_22339BC14(v33, v32, v48);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v29, v30, "Unable to apply message update %s, couldn't generate record from the data", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v35, -1, -1);
      MEMORY[0x223CB62D0](v34, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22342C300();
    id v41 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v42 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    id v43 = objc_msgSend(v41, sel_initWithDomain_code_userInfo_, v42, 2, 0);

    sub_223381530(24, v43, 0, 0);
    uint64_t v44 = 1;
LABEL_39:

    char v47 = (uint64_t (*)(uint64_t))v0[1];
    return v47(v44);
  }
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_22342C200();
  sub_223323374(v13, (uint64_t)qword_26AD63330);
  uint64_t v14 = sub_22342C1E0();
  os_log_type_t v15 = sub_22342C700();
  if (os_log_type_enabled(v14, v15))
  {
    char v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v16 = 0;
    _os_log_impl(&dword_223317000, v14, v15, "No update type for message update record, we should not ever end up in this state", v16, 2u);
    MEMORY[0x223CB62D0](v16, -1, -1);
  }

  sub_2233A2168();
  swift_allocError();
  *id v17 = 0;
  swift_willThrow();
  long long v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_2233A0BB8()
{
  *(void *)(v0 + 216) = (*(uint64_t (**)(void))(v0 + 200))(*(void *)(v0 + 176));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2233A0C3C, 0, 0);
}

uint64_t sub_2233A0C3C()
{
  uint64_t v39 = v0;
  uint64_t v1 = (void *)v0[27];
  v0[40] = v1;
  if (v1)
  {
    id v2 = v1;
    swift_bridgeObjectRelease();
    uint64_t v3 = qword_26AD630F8;
    v0[41] = qword_26AD630F8;
    if (v3)
    {
      uint64_t v4 = qword_26AD63100;
      v0[42] = qword_26AD63100;
      v0[43] = *(void *)(v4 + 264);
      v0[44] = (v4 + 264) & 0xFFFFFFFFFFFFLL | 0x462E000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      sub_22342C5B0();
      uint64_t v6 = sub_22342C560();
      return MEMORY[0x270FA2498](sub_2233A2088, v6, v5);
    }
    sub_22334283C();
    uint64_t v37 = (void *)swift_allocError();
    swift_willThrow();
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22342C200();
    sub_223323374(v15, (uint64_t)qword_26AD63330);
    id v16 = v2;
    id v17 = sub_22342C1E0();
    os_log_type_t v18 = sub_22342C700();
    uint64_t v36 = v16;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      v0[18] = v16;
      id v20 = v16;
      sub_22342CA10();
      *uint64_t v35 = v1;

      _os_log_impl(&dword_223317000, v17, v18, "Error handling message update for record: %@", v19, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v35, -1, -1);
      MEMORY[0x223CB62D0](v19, -1, -1);
    }
    else
    {
    }
    sub_22342C300();
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F870;
    *(void *)(inited + 32) = sub_22342C300();
    *(void *)(inited + 40) = v25;
    swift_getErrorValue();
    uint64_t v26 = v0[12];
    uint64_t v27 = v0[13];
    *(void *)(inited + 72) = v27;
    uint64_t v28 = sub_223348E4C((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v28, v26, v27);
    sub_2233C5EB0(inited);
    id v29 = objc_allocWithZone(MEMORY[0x263F087E8]);
    os_log_type_t v30 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    BOOL v31 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 1, v31);

    sub_223381530(23, v32, 0, 0);
  }
  else
  {
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22342C200();
    sub_223323374(v7, (uint64_t)qword_26AD63330);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22342C1E0();
    os_log_type_t v9 = sub_22342C700();
    BOOL v10 = os_log_type_enabled(v8, v9);
    unint64_t v11 = v0[21];
    if (v10)
    {
      uint64_t v12 = v0[20];
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v38 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      v0[16] = sub_22339BC14(v12, v11, &v38);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v8, v9, "Unable to apply message update %s, couldn't generate record from the data", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v14, -1, -1);
      MEMORY[0x223CB62D0](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22342C300();
    id v21 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v22 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v22, 2, 0);

    sub_223381530(24, v23, 0, 0);
  }
  uint64_t v33 = (uint64_t (*)(uint64_t))v0[1];
  return v33(1);
}

uint64_t sub_2233A12A8()
{
  *(void *)(v0 + 264) = (*(uint64_t (**)(void))(v0 + 248))(*(void *)(v0 + 224));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2233A132C, 0, 0);
}

uint64_t sub_2233A132C()
{
  uint64_t v39 = v0;
  uint64_t v1 = (void *)v0[33];
  v0[40] = v1;
  if (v1)
  {
    id v2 = v1;
    swift_bridgeObjectRelease();
    uint64_t v3 = qword_26AD630F8;
    v0[41] = qword_26AD630F8;
    if (v3)
    {
      uint64_t v4 = qword_26AD63100;
      v0[42] = qword_26AD63100;
      v0[43] = *(void *)(v4 + 264);
      v0[44] = (v4 + 264) & 0xFFFFFFFFFFFFLL | 0x462E000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      sub_22342C5B0();
      uint64_t v6 = sub_22342C560();
      return MEMORY[0x270FA2498](sub_2233A2088, v6, v5);
    }
    sub_22334283C();
    uint64_t v37 = (void *)swift_allocError();
    swift_willThrow();
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22342C200();
    sub_223323374(v15, (uint64_t)qword_26AD63330);
    id v16 = v2;
    id v17 = sub_22342C1E0();
    os_log_type_t v18 = sub_22342C700();
    uint64_t v36 = v16;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      v0[18] = v16;
      id v20 = v16;
      sub_22342CA10();
      *uint64_t v35 = v1;

      _os_log_impl(&dword_223317000, v17, v18, "Error handling message update for record: %@", v19, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v35, -1, -1);
      MEMORY[0x223CB62D0](v19, -1, -1);
    }
    else
    {
    }
    sub_22342C300();
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F870;
    *(void *)(inited + 32) = sub_22342C300();
    *(void *)(inited + 40) = v25;
    swift_getErrorValue();
    uint64_t v26 = v0[12];
    uint64_t v27 = v0[13];
    *(void *)(inited + 72) = v27;
    uint64_t v28 = sub_223348E4C((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v28, v26, v27);
    sub_2233C5EB0(inited);
    id v29 = objc_allocWithZone(MEMORY[0x263F087E8]);
    os_log_type_t v30 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    BOOL v31 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 1, v31);

    sub_223381530(23, v32, 0, 0);
  }
  else
  {
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22342C200();
    sub_223323374(v7, (uint64_t)qword_26AD63330);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22342C1E0();
    os_log_type_t v9 = sub_22342C700();
    BOOL v10 = os_log_type_enabled(v8, v9);
    unint64_t v11 = v0[21];
    if (v10)
    {
      uint64_t v12 = v0[20];
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v38 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      v0[16] = sub_22339BC14(v12, v11, &v38);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v8, v9, "Unable to apply message update %s, couldn't generate record from the data", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v14, -1, -1);
      MEMORY[0x223CB62D0](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22342C300();
    id v21 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v22 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v22, 2, 0);

    sub_223381530(24, v23, 0, 0);
  }
  uint64_t v33 = (uint64_t (*)(uint64_t))v0[1];
  return v33(1);
}

uint64_t sub_2233A1998()
{
  *(void *)(v0 + 312) = (*(uint64_t (**)(void))(v0 + 296))(*(void *)(v0 + 272));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2233A1A1C, 0, 0);
}

uint64_t sub_2233A1A1C()
{
  uint64_t v39 = v0;
  uint64_t v1 = (void *)v0[39];
  v0[40] = v1;
  if (v1)
  {
    id v2 = v1;
    swift_bridgeObjectRelease();
    uint64_t v3 = qword_26AD630F8;
    v0[41] = qword_26AD630F8;
    if (v3)
    {
      uint64_t v4 = qword_26AD63100;
      v0[42] = qword_26AD63100;
      v0[43] = *(void *)(v4 + 264);
      v0[44] = (v4 + 264) & 0xFFFFFFFFFFFFLL | 0x462E000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      sub_22342C5B0();
      uint64_t v6 = sub_22342C560();
      return MEMORY[0x270FA2498](sub_2233A2088, v6, v5);
    }
    sub_22334283C();
    uint64_t v37 = (void *)swift_allocError();
    swift_willThrow();
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22342C200();
    sub_223323374(v15, (uint64_t)qword_26AD63330);
    id v16 = v2;
    id v17 = sub_22342C1E0();
    os_log_type_t v18 = sub_22342C700();
    uint64_t v36 = v16;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      v0[18] = v16;
      id v20 = v16;
      sub_22342CA10();
      *uint64_t v35 = v1;

      _os_log_impl(&dword_223317000, v17, v18, "Error handling message update for record: %@", v19, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v35, -1, -1);
      MEMORY[0x223CB62D0](v19, -1, -1);
    }
    else
    {
    }
    sub_22342C300();
    sub_22331E640(&qword_26AD5EFA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22342F870;
    *(void *)(inited + 32) = sub_22342C300();
    *(void *)(inited + 40) = v25;
    swift_getErrorValue();
    uint64_t v26 = v0[12];
    uint64_t v27 = v0[13];
    *(void *)(inited + 72) = v27;
    uint64_t v28 = sub_223348E4C((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v28, v26, v27);
    sub_2233C5EB0(inited);
    id v29 = objc_allocWithZone(MEMORY[0x263F087E8]);
    os_log_type_t v30 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    BOOL v31 = (void *)sub_22342C260();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 1, v31);

    sub_223381530(23, v32, 0, 0);
  }
  else
  {
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22342C200();
    sub_223323374(v7, (uint64_t)qword_26AD63330);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22342C1E0();
    os_log_type_t v9 = sub_22342C700();
    BOOL v10 = os_log_type_enabled(v8, v9);
    unint64_t v11 = v0[21];
    if (v10)
    {
      uint64_t v12 = v0[20];
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v38 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      v0[16] = sub_22339BC14(v12, v11, &v38);
      sub_22342CA10();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_223317000, v8, v9, "Unable to apply message update %s, couldn't generate record from the data", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v14, -1, -1);
      MEMORY[0x223CB62D0](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22342C300();
    id v21 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v22 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v22, 2, 0);

    sub_223381530(24, v23, 0, 0);
  }
  uint64_t v33 = (uint64_t (*)(uint64_t))v0[1];
  return v33(1);
}

uint64_t sub_2233A2088()
{
  (*(void (**)(void))(v0 + 344))(*(void *)(v0 + 320));
  return MEMORY[0x270FA2498](sub_2233A20FC, 0, 0);
}

uint64_t sub_2233A20FC()
{
  uint64_t v1 = *(void **)(v0 + 320);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

unint64_t sub_2233A2168()
{
  unint64_t result = qword_267FA2EE8;
  if (!qword_267FA2EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2EE8);
  }
  return result;
}

unsigned char *_s14descr26D66B401O6ErrorsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2233A2288);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26D66B401O6ErrorsOMa()
{
  return &_s14descr26D66B401O6ErrorsON;
}

unint64_t sub_2233A22C4()
{
  unint64_t result = qword_267FA2EF0;
  if (!qword_267FA2EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2EF0);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for ChatProto(void **a1, void **a2)
{
  int v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for ChatProto(void **a1, void **a2)
{
  int v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void *initializeWithTake for ChatProto(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **assignWithTake for ChatProto(void **a1, void **a2)
{
  int v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ChatProto(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ChatProto(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatProto()
{
  return &type metadata for ChatProto;
}

uint64_t sub_2233A247C(void *a1, void *a2)
{
  uint64_t v4 = sub_22331E640(&qword_267FA2E88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_22339F844();
  sub_22342D090();
  if (a2)
  {
    id v8 = a2;
    id v9 = objc_msgSend(v8, sel_data);
    if (v9)
    {
      BOOL v10 = v9;
      uint64_t v11 = sub_22342C070();
      unint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      unint64_t v13 = 0xF000000000000000;
    }
    v15[0] = v11;
    v15[1] = v13;
    sub_22331E640(&qword_267FA2EA8);
    sub_22339F898();
    sub_22342CEE0();

    sub_223322054(v11, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2233A2620()
{
  return sub_22342D060();
}

uint64_t sub_2233A2674()
{
  return sub_22342C390();
}

uint64_t sub_2233A268C()
{
  return sub_22342D060();
}

uint64_t sub_2233A26DC()
{
  return 0x3130306F746F7270;
}

uint64_t sub_2233A26F4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2233A274C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2233A27A0(void *a1@<X8>)
{
  *a1 = 0x3130306F746F7270;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_2233A27BC(uint64_t a1)
{
  unint64_t v2 = sub_22339F844();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2233A27F8(uint64_t a1)
{
  unint64_t v2 = sub_22339F844();
  return MEMORY[0x270FA00B8](a1, v2);
}

id sub_2233A2834@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = sub_2233A28F4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2233A2860(void *a1)
{
  return sub_2233A247C(a1, *v1);
}

uint64_t sub_2233A287C(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_2233A2B54();
      id v4 = v3;
      id v5 = v2;
      char v6 = sub_22342C9E0();

      if (v6) {
        return 1;
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

id sub_2233A28F4(void *a1)
{
  uint64_t v3 = sub_22331E640(&qword_26AD5F3E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (id)a1[4];
  sub_223321F60(a1, a1[3]);
  sub_22339F844();
  sub_22342D080();
  if (!v1)
  {
    sub_223322B18();
    sub_22342CDF0();
    unint64_t v9 = v20;
    if (v20 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      id v7 = 0;
    }
    else
    {
      uint64_t v10 = v19;
      uint64_t v11 = (void *)sub_22342C050();
      id v12 = objc_msgSend(v11, sel__FTOptionallyDecompressData);

      if (v12)
      {
        uint64_t v13 = sub_22342C070();
        uint64_t v21 = v10;
        unint64_t v15 = v14;

        uint64_t v16 = v13;
        id v17 = (void *)sub_22342C050();
        unint64_t v18 = v15;
        uint64_t v10 = v21;
        sub_22331EA68(v16, v18);
      }
      else
      {
        id v17 = 0;
      }
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B028]), sel_initWithData_, v17);

      sub_223322054(v10, v9);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  return v7;
}

unint64_t sub_2233A2B54()
{
  unint64_t result = qword_267FA2E80;
  if (!qword_267FA2E80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267FA2E80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChatProto.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2233A2C30);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatProto.CodingKeys()
{
  return &type metadata for ChatProto.CodingKeys;
}

unint64_t sub_2233A2C6C()
{
  unint64_t result = qword_267FA2EF8;
  if (!qword_267FA2EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2EF8);
  }
  return result;
}

unint64_t sub_2233A2CC4()
{
  unint64_t result = qword_26AD5F390;
  if (!qword_26AD5F390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F390);
  }
  return result;
}

unint64_t sub_2233A2D1C()
{
  unint64_t result = qword_26AD5F388;
  if (!qword_26AD5F388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F388);
  }
  return result;
}

uint64_t destroy for RecordZoneReader(uint64_t a1)
{
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 8);
  uint64_t result = _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 48);
  if (*(void *)(a1 + 104))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for RecordZoneReader(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v6;
    *(void *)(a1 + 112) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  return a1;
}

uint64_t assignWithCopy for RecordZoneReader(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = (uint64_t *)(a1 + 48);
  sub_2233390AC((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  sub_2233390AC(v4, (uint64_t *)(a2 + 48));
  uint64_t v5 = *(void *)(a2 + 88);
  uint64_t v6 = *(void *)(a1 + 104);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v5;
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  uint64_t v7 = *(void *)(a2 + 104);
  if (!v6)
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v7;
      *(void *)(a1 + 112) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v7;
  *(void *)(a1 + 112) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RecordZoneReader(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s17MessagesCloudSync9SyncFilesVwxx_0(a1 + 48);
  uint64_t v4 = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  if (!v5)
  {
    if (v4)
    {
      uint64_t v8 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v4;
      *(void *)(a1 + 112) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v4;
  *(void *)(a1 + 112) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordZoneReader(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordZoneReader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordZoneReader()
{
  return &type metadata for RecordZoneReader;
}

void sub_2233A311C(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (v2)
  {
    int v3 = v2;
    unsigned int v4 = objc_msgSend(v2, sel_isInternalInstall);

    if (v4)
    {
      uint64_t v5 = (void *)(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
      id v6 = *(id *)(*sub_223321F60(v5, v5[3]) + 24);
      uint64_t v7 = (void *)sub_22342C2D0();
      id v8 = objc_msgSend(v6, sel_objectForKey_, v7);

      if (!v8)
      {
        long long v26 = 0u;
        long long v27 = 0u;
        sub_223338A24((uint64_t)&v26);
        return;
      }
      sub_22342CA80();
      swift_unknownObjectRelease();
      sub_223338A24((uint64_t)&v26);
      sub_22342C300();
      id v9 = *(id *)(*sub_223321F60(v5, v5[3]) + 24);
      uint64_t v10 = (void *)sub_22342C2D0();
      id v11 = objc_msgSend(v9, sel_objectForKey_, v10);

      if (v11)
      {
        sub_22342CA80();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v24 = 0u;
        long long v25 = 0u;
      }
      sub_223322AB4((uint64_t)&v24, (uint64_t)&v26, qword_26AD5F180);
      if (*((void *)&v27 + 1))
      {
        if (swift_dynamicCast()) {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_223338A24((uint64_t)&v26);
      }
      id v12 = *(id *)(*sub_223321F60(v5, v5[3]) + 24);
      uint64_t v13 = (void *)sub_22342C2D0();
      id v14 = objc_msgSend(v12, sel_objectForKey_, v13);

      if (v14)
      {
        sub_22342CA80();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v24 = 0u;
        long long v25 = 0u;
      }
      uint64_t v15 = MEMORY[0x263F8D310];
      sub_223322AB4((uint64_t)&v24, (uint64_t)&v26, qword_26AD5F180);
      if (*((void *)&v27 + 1))
      {
        sub_22334199C(0, (unint64_t *)&qword_26AD5EF30);
        if (swift_dynamicCast())
        {
          uint64_t v16 = (uint64_t)objc_msgSend(v23, sel_integerValue);

LABEL_20:
          sub_22331E640(&qword_26AD5EFA0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_22342F870;
          *(void *)(inited + 32) = sub_22342C300();
          *(void *)(inited + 40) = v18;
          *(void *)&long long v26 = 0;
          *((void *)&v26 + 1) = 0xE000000000000000;
          sub_22342CBB0();
          sub_22342C3B0();
          *(void *)&long long v24 = v16;
          sub_22342CF10();
          sub_22342C3B0();
          swift_bridgeObjectRelease();
          sub_22342C3B0();
          swift_bridgeObjectRetain();
          sub_22342C3B0();
          swift_bridgeObjectRelease();
          sub_22342C3B0();
          long long v19 = v26;
          *(void *)(inited + 72) = v15;
          *(_OWORD *)(inited + 48) = v19;
          sub_2233C5EB0(inited);
          id v20 = objc_allocWithZone(MEMORY[0x263F087E8]);
          uint64_t v21 = (void *)sub_22342C2D0();
          swift_bridgeObjectRelease();
          uint64_t v22 = (void *)sub_22342C260();
          swift_bridgeObjectRelease();
          objc_msgSend(v20, sel_initWithDomain_code_userInfo_, v21, v16, v22);

          swift_willThrow();
          return;
        }
      }
      else
      {
        sub_223338A24((uint64_t)&v26);
      }
      uint64_t v16 = 1;
      goto LABEL_20;
    }
  }
}

uint64_t sub_2233A35C8(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  return MEMORY[0x270FA2498](sub_2233A35EC, 0, 0);
}

uint64_t sub_2233A35EC()
{
  uint64_t v1 = v0[8];
  if (*(unsigned char *)(v1 + 99) == 1)
  {
    uint64_t v2 = sub_223321F60((void *)(v1 + 8), *(void *)(v1 + 32));
    sub_223404C50(*((unsigned char *)v2 + 16));
    int v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *int v3 = v0;
    v3[1] = sub_2233A3788;
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    return sub_223400994(v5, v4, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneReader.swift", 108, 2);
  }
  else if (*(unsigned char *)(v1 + 98) == 1)
  {
    uint64_t v7 = *(void *)(v0[6] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    v0[10] = v7;
    swift_retain();
    return MEMORY[0x270FA2498](sub_2233A3948, v7, 0);
  }
  else
  {
    id v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_2233A3788()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233A3884, 0, 0);
}

uint64_t sub_2233A3884()
{
  if (*(unsigned char *)(v0[8] + 98) == 1)
  {
    uint64_t v1 = *(void *)(v0[6] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    v0[10] = v1;
    swift_retain();
    return MEMORY[0x270FA2498](sub_2233A3948, v1, 0);
  }
  else
  {
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_2233A3948()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_beginAccess();
  *(void *)(v0 + 88) = *(void *)(v1 + 120);
  *(void *)(v0 + 96) = *(void *)(v1 + 128);
  *(unsigned char *)(v0 + 104) = *(unsigned char *)(v1 + 136);
  swift_release();
  return MEMORY[0x270FA2498](sub_2233A39E0, 0, 0);
}

uint64_t sub_2233A39E0()
{
  if (qword_26AD60200 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_22342C200();
  sub_223323374(v1, (uint64_t)qword_26AD63318);
  uint64_t v2 = sub_22342C1E0();
  os_log_type_t v3 = sub_22342C720();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 88);
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v6 = 134217984;
    if (v4 <= 1) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = v4;
    }
    *(double *)(v0 + 40) = fmin((double)v5 / (double)v7, 1.0);
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v2, v3, "Download Progress: %f", v6, 0xCu);
    MEMORY[0x223CB62D0](v6, -1, -1);
  }
  uint64_t v8 = *(void *)(v0 + 48);

  uint64_t v9 = (void *)(v8 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState);
  uint64_t v10 = sub_223321F60((void *)(v8 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(v8 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  id v11 = *(void **)(*v10 + 56);
  if (v11)
  {
    uint64_t v12 = *(unsigned __int8 *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v14 = *(void *)(v0 + 88);
    objc_msgSend(*(id *)(*v10 + 56), sel_startChanges);
    swift_retain();
    objc_msgSend(v11, sel_setSyncJobStateWithState_, 2);
    if (v13 <= 1) {
      uint64_t v15 = 1;
    }
    else {
      uint64_t v15 = v13;
    }
    objc_msgSend(v11, sel_setLastSyncDownloadProgress_, fmin((double)v14 / (double)v15, 1.0));
    objc_msgSend(v11, sel_setCloudKitHasAvailableRecordsToDownload_, v12);
    swift_release();
    objc_msgSend(v11, sel_commitChanges);
  }
  sub_223321F60(v9, v9[3]);
  uint64_t v16 = (void *)sub_223423BB8();
  if (v16) {
    objc_msgSend(v16, sel_sendBroadcastToClient);
  }
  id v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_2233A3C30(uint64_t a1, uint64_t a2)
{
  v3[135] = v2;
  v3[134] = a2;
  v3[133] = a1;
  uint64_t v4 = sub_22331E640((uint64_t *)&unk_26AD602F0);
  v3[136] = v4;
  v3[137] = *(void *)(v4 - 8);
  v3[138] = swift_task_alloc();
  v3[139] = swift_task_alloc();
  uint64_t v5 = sub_22331E640(&qword_26AD602C0);
  v3[140] = v5;
  v3[141] = *(void *)(v5 - 8);
  v3[142] = swift_task_alloc();
  uint64_t v6 = sub_22331E640(&qword_26AD60318);
  v3[143] = v6;
  v3[144] = *(void *)(v6 - 8);
  v3[145] = swift_task_alloc();
  v3[146] = swift_task_alloc();
  v3[147] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2233A3DE8, 0, 0);
}

uint64_t sub_2233A3DE8()
{
  uint64_t v88 = v0;
  uint64_t v1 = sub_223321F60((void *)(*(void *)(v0 + 1080) + 8), *(void *)(*(void *)(v0 + 1080) + 32));
  uint64_t v2 = *v1;
  *(void *)(v0 + 1184) = *v1;
  unint64_t v3 = v1[1];
  *(void *)(v0 + 1192) = v3;
  uint64_t v4 = qword_26AD5F0D8;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)(v0 + 936);
  uint64_t v6 = sub_22342C200();
  *(void *)(v0 + 1200) = v6;
  *(void *)(v0 + 1208) = sub_223323374(v6, (uint64_t)qword_26AD63108);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v7 = sub_22342C1E0();
  os_log_type_t v8 = sub_22342C720();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v87[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 1056) = sub_22339BC14(v2, v3, v87);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_22342C170();
    sub_223337988();
    uint64_t v11 = sub_22342CF10();
    *(void *)(v0 + 1032) = sub_22339BC14(v11, v12, v87);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_223317000, v7, v8, "Starting read from %s (%s)", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    uint64_t v13 = v10;
    uint64_t v5 = (void *)(v0 + 936);
    MEMORY[0x223CB62D0](v13, -1, -1);
    MEMORY[0x223CB62D0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }

  uint64_t v14 = *(void *)(v0 + 1080);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)(v0 + 992) = 0;
  if (*(unsigned char *)(v14 + 96))
  {
    uint64_t v15 = 1;
LABEL_9:
    *(void *)(v0 + 1216) = v15;
    swift_beginAccess();
    *(_DWORD *)(v0 + 916) = *MEMORY[0x263F8F680];
    uint64_t v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C720();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = *(void *)(v0 + 1216);
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134218240;
      *(void *)(v0 + 1040) = *(void *)(v0 + 992);
      sub_22342CA10();
      *(_WORD *)(v19 + 12) = 2048;
      *(void *)(v0 + 1048) = v18;
      sub_22342CA10();
      _os_log_impl(&dword_223317000, v16, v17, "Current Batch %lld, Max Batch %ld", (uint8_t *)v19, 0x16u);
      MEMORY[0x223CB62D0](v19, -1, -1);
    }
    unsigned int v76 = *(_DWORD *)(v0 + 916);
    uint64_t v77 = *(void *)(v0 + 1176);
    uint64_t v81 = *(void *)(v0 + 1168);
    uint64_t v82 = *(void *)(v0 + 1160);
    uint64_t v78 = *(void *)(v0 + 1152);
    *(void *)os_log_type_t type = *(void *)(v0 + 1144);
    uint64_t v73 = *(void *)(v0 + 1128);
    uint64_t v74 = *(void *)(v0 + 1136);
    uint64_t v75 = *(void *)(v0 + 1120);
    uint64_t v83 = *(void *)(v0 + 1112);
    uint64_t v84 = *(void *)(v0 + 1096);
    uint64_t v85 = *(void *)(v0 + 1088);
    uint64_t v86 = *(void *)(v0 + 1104);
    uint64_t v20 = *(void *)(v0 + 1080);
    uint64_t v21 = *(void *)(v0 + 1072);
    uint64_t v22 = *(void *)(v0 + 1064);
    uint64_t v71 = v22;
    uint64_t v72 = v21;

    id v23 = sub_223321F60((void *)(v20 + 8), *(void *)(v20 + 32));
    long long v25 = *((_OWORD *)v23 + 1);
    long long v24 = *((_OWORD *)v23 + 2);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)v23;
    *(_OWORD *)(v0 + 512) = v25;
    *(_OWORD *)(v0 + 528) = v24;
    long long v27 = *((_OWORD *)v23 + 4);
    long long v26 = *((_OWORD *)v23 + 5);
    long long v28 = *((_OWORD *)v23 + 3);
    *(void *)(v0 + 592) = v23[12];
    *(_OWORD *)(v0 + 560) = v27;
    *(_OWORD *)(v0 + 576) = v26;
    *(_OWORD *)(v0 + 544) = v28;
    id v70 = sub_2233A917C(v22, v21);
    *(void *)(v0 + 1288) = v70;
    id v29 = sub_223321F60((void *)(v20 + 8), *(void *)(v20 + 32));
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v69 = *((unsigned char *)v29 + 16);
    uint64_t v32 = v29[4];
    uint64_t v68 = v29[3];
    uint64_t v33 = v29[5];
    uint64_t v34 = v29[6];
    char v67 = *((unsigned char *)v29 + 56);
    uint64_t v35 = v29[8];
    char v36 = *((unsigned char *)v29 + 72);
    uint64_t v37 = v29[10];
    uint64_t v66 = v29[11];
    uint64_t v38 = v29[12];
    *(void *)(v0 + 624) = &type metadata for SyncZoneInfo;
    *(void *)(v0 + 632) = &off_26D672240;
    uint64_t v39 = swift_allocObject();
    *(void *)(v0 + 600) = v39;
    *(void *)(v39 + 16) = v31;
    *(void *)(v39 + 24) = v30;
    *(unsigned char *)(v39 + 32) = v69;
    *(void *)(v39 + 40) = v68;
    *(void *)(v39 + 48) = v32;
    *(void *)(v39 + 56) = v33;
    *(void *)(v39 + 64) = v34;
    *(unsigned char *)(v39 + 72) = v67;
    *(void *)(v39 + 80) = v35;
    *(unsigned char *)(v39 + 88) = v36;
    *(void *)(v39 + 96) = v37;
    *(void *)(v39 + 104) = v66;
    *(void *)(v39 + 112) = v38;
    *(unsigned char *)(v0 + 913) = 0;
    uint64_t v40 = (void *)swift_task_alloc();
    v40[2] = v70;
    v40[3] = v71;
    v40[4] = v72;
    v40[5] = v0 + 913;
    v40[6] = v0 + 600;
    (*(void (**)(uint64_t, void, uint64_t))(v73 + 104))(v74, v76, v75);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22342C620();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, os_log_type_t *))(v78 + 32))(v81, v77, *(os_log_type_t **)type);
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 600);
    (*(void (**)(uint64_t, uint64_t, os_log_type_t *))(v78 + 16))(v82, v81, *(os_log_type_t **)type);
    sub_22334183C(&qword_26AD60320, &qword_26AD60318);
    sub_22342C5F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v86, v83, v85);
    (*(void (**)(uint64_t, os_log_type_t *))(v78 + 8))(v81, *(os_log_type_t **)type);
    *(unsigned char *)(v0 + 1360) = 0;
    id v41 = sub_2233A4EF0;
    goto LABEL_12;
  }
  uint64_t v15 = *(void *)(v14 + 88);
  if (v15 >= 1) {
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  int v45 = *(unsigned __int8 *)(v14 + 97);
  sub_2233A962C(v14, v0 + 16);
  if (v45 == 1)
  {
    char v46 = *(unsigned char *)(v0 + 112);
    sub_2233A9664(v0 + 16);
    char v47 = v46 ^ 1;
  }
  else
  {
    sub_2233A9664(v0 + 16);
    char v47 = 0;
  }
  *(unsigned char *)(v0 + 914) = v47 & 1;
  uint64_t v48 = *(void *)(v0 + 1080);
  sub_2233A962C(v48, v0 + 256);
  sub_2233A962C(v48, v0 + 136);
  uint64_t v49 = sub_22342C1E0();
  os_log_type_t v50 = sub_22342C720();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    v87[0] = v79;
    *(_DWORD *)uint64_t v51 = 136315906;
    uint64_t v52 = sub_223321F60((void *)(v0 + 264), *(void *)(v0 + 288));
    unint64_t v53 = sub_223421FB0(*((unsigned char *)v52 + 16));
    *(void *)(v0 + 984) = sub_22339BC14(v53, v54, v87);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_2233A9664(v0 + 256);
    *(_WORD *)(v51 + 12) = 2048;
    swift_beginAccess();
    *(void *)(v0 + 1000) = *(void *)(v0 + 944);
    sub_22342CA10();
    *(_WORD *)(v51 + 22) = 2080;
    uint64_t v55 = sub_223321F60((void *)(v0 + 144), *(void *)(v0 + 168));
    unint64_t v56 = sub_223421FB0(*((unsigned char *)v55 + 16));
    *(void *)(v0 + 1008) = sub_22339BC14(v56, v57, v87);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_2233A9664(v0 + 136);
    *(_WORD *)(v51 + 32) = 2048;
    swift_beginAccess();
    *(void *)(v0 + 1024) = *(void *)(v0 + 936);
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v49, v50, "%s: %lld %s records saved, %lld failures", (uint8_t *)v51, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v79, -1, -1);
    MEMORY[0x223CB62D0](v51, -1, -1);
  }
  else
  {
    sub_2233A9664(v0 + 256);
    sub_2233A9664(v0 + 136);
  }

  swift_beginAccess();
  uint64_t v58 = *(void *)(v0 + 944);
  uint64_t v42 = swift_beginAccess();
  uint64_t v59 = *(void *)(v0 + 936);
  BOOL v60 = __OFADD__(v58, v59);
  uint64_t v61 = v58 + v59;
  *(void *)(v0 + 1224) = v61;
  if (v60)
  {
    __break(1u);
    return MEMORY[0x270FA2498](v42, v43, v44);
  }
  uint64_t v62 = swift_task_alloc();
  *(void *)(v0 + 1232) = v62;
  *(void *)uint64_t v62 = v0;
  *(void *)(v62 + 8) = sub_2233A4830;
  uint64_t v63 = *(void *)(v0 + 1080);
  long long v64 = *(_OWORD *)(v0 + 1064);
  *(void *)(v62 + 64) = 0;
  *(void *)(v62 + 72) = v63;
  *(void *)(v62 + 56) = v61;
  *(_OWORD *)(v62 + 40) = v64;
  id v41 = sub_2233A6C0C;
LABEL_12:
  uint64_t v42 = (uint64_t)v41;
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  return MEMORY[0x270FA2498](v42, v43, v44);
}

uint64_t sub_2233A4830()
{
  *(void *)(*(void *)v1 + 1240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233A4D04;
  }
  else {
    uint64_t v2 = sub_2233A4944;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2233A4944()
{
  uint64_t v1 = *(void *)(v0 + 1080);
  uint64_t v2 = *(void *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
  *(void *)(v0 + 1248) = v2;
  *(void *)(v0 + 1256) = *(void *)(v0 + 944);
  *(void *)(v0 + 1264) = *(void *)(v0 + 936);
  unint64_t v3 = sub_223321F60((void *)(v1 + 8), *(void *)(v1 + 32));
  *(unsigned char *)(v0 + 915) = sub_2234220F8(*((unsigned char *)v3 + 16));
  swift_retain();
  return MEMORY[0x270FA2498](sub_2233A49F4, v2, 0);
}

uint64_t sub_2233A49F4()
{
  sub_223369D9C(*(void *)(v0 + 1256), *(void *)(v0 + 1264), 0, *(unsigned char *)(v0 + 915));
  swift_release();
  return MEMORY[0x270FA2498](sub_2233A4A74, 0, 0);
}

uint64_t sub_2233A4A74()
{
  uint64_t v1 = *(void *)(v0 + 1248);
  swift_retain();
  return MEMORY[0x270FA2498](sub_2233A4AE4, v1, 0);
}

uint64_t sub_2233A4AE4()
{
  uint64_t v1 = v0[156];
  swift_beginAccess();
  v0[159] = *(void *)(v1 + 120);
  v0[160] = *(void *)(v1 + 128);
  swift_release();
  return MEMORY[0x270FA2498](sub_2233A4B74, 0, 0);
}

uint64_t sub_2233A4B74()
{
  if (qword_26AD60200 != -1) {
    swift_once();
  }
  sub_223323374(*(void *)(v0 + 1200), (uint64_t)qword_26AD63318);
  uint64_t v1 = sub_22342C1E0();
  os_log_type_t v2 = sub_22342C720();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 1280);
    uint64_t v4 = *(void *)(v0 + 1272);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    if (v3 <= 1) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = v3;
    }
    *(double *)(v0 + 976) = fmin((double)v4 / (double)v6, 1.0);
    sub_22342CA10();
    _os_log_impl(&dword_223317000, v1, v2, "Download Progress: %f", v5, 0xCu);
    MEMORY[0x223CB62D0](v5, -1, -1);
  }
  uint64_t v7 = *(void *)(v0 + 1064);

  uint64_t v8 = *sub_223321F60((void *)(v7 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore), *(void *)(v7 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore + 24));
  return MEMORY[0x270FA2498](sub_2233A4DB4, v8, 0);
}

uint64_t sub_2233A4D04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233A4DB4()
{
  sub_2233FBC70(*(void *)(v0 + 1272), *(void *)(v0 + 1280), 0);
  return MEMORY[0x270FA2498](sub_2233A4E24, 0, 0);
}

uint64_t sub_2233A4E24()
{
  char v1 = *(unsigned char *)(v0 + 914);
  uint64_t v2 = *(void *)(v0 + 1224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, BOOL))(v0 + 8);
  return v3(v2, (v1 & 1) == 0);
}

uint64_t sub_2233A4EF0()
{
  swift_beginAccess();
  uint64_t v1 = sub_22334183C(&qword_26AD602E8, (uint64_t *)&unk_26AD602F0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 1296) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2233A4FE0;
  uint64_t v3 = *(void *)(v0 + 1088);
  return MEMORY[0x270FA1E80](v0 + 896, v3, v1);
}

uint64_t sub_2233A4FE0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2233A5BD0;
  }
  else
  {
    swift_endAccess();
    *(_OWORD *)(v2 + 1312) = *(_OWORD *)(v2 + 896);
    *(unsigned char *)(v2 + 1361) = *(unsigned char *)(v2 + 912);
    uint64_t v3 = sub_2233A510C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2233A510C()
{
  uint64_t v108 = v0;
  uint64_t v1 = v0 + 914;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 1361);
  if (v2 > 0xFD)
  {
    uint64_t v3 = *(void **)(v0 + 1288);
    (*(void (**)(void, void))(*(void *)(v0 + 1096) + 8))(*(void *)(v0 + 1104), *(void *)(v0 + 1088));

    uint64_t v7 = *(void *)(v0 + 992);
    uint64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
    }
    else
    {
      char v9 = *(unsigned char *)(v0 + 1360);
      uint64_t v10 = *(void *)(v0 + 1216);
      *(void *)(v0 + 992) = v8;
      if (v8 < v10) {
        char v11 = 1;
      }
      else {
        char v11 = v9;
      }
      if (v8 < v10 && (v9 & 1) == 0)
      {
        uint64_t v106 = v0 + 600;
        unint64_t v12 = sub_22342C1E0();
        os_log_type_t v13 = sub_22342C720();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = *(void *)(v0 + 1216);
          uint64_t v15 = swift_slowAlloc();
          *(_DWORD *)uint64_t v15 = 134218240;
          *(void *)(v0 + 1040) = *(void *)(v0 + 992);
          sub_22342CA10();
          *(_WORD *)(v15 + 12) = 2048;
          *(void *)(v0 + 1048) = v14;
          sub_22342CA10();
          _os_log_impl(&dword_223317000, v12, v13, "Current Batch %lld, Max Batch %ld", (uint8_t *)v15, 0x16u);
          MEMORY[0x223CB62D0](v15, -1, -1);
        }
        unsigned int v95 = *(_DWORD *)(v0 + 916);
        uint64_t v99 = *(void *)(v0 + 1168);
        uint64_t v100 = *(void *)(v0 + 1160);
        uint64_t v96 = *(void *)(v0 + 1176);
        uint64_t v97 = *(void *)(v0 + 1152);
        uint64_t v98 = *(void *)(v0 + 1144);
        uint64_t v92 = *(void *)(v0 + 1128);
        uint64_t v93 = *(void *)(v0 + 1136);
        uint64_t v94 = *(void *)(v0 + 1120);
        uint64_t v101 = *(void *)(v0 + 1112);
        uint64_t v102 = *(void *)(v0 + 1096);
        uint64_t v104 = *(void *)(v0 + 1088);
        uint64_t v105 = *(void *)(v0 + 1104);
        uint64_t v16 = *(void *)(v0 + 1080);
        uint64_t v17 = *(void *)(v0 + 1072);
        uint64_t v18 = *(void *)(v0 + 1064);
        uint64_t v90 = v18;
        uint64_t v91 = v17;

        uint64_t v19 = sub_223321F60((void *)(v16 + 8), *(void *)(v16 + 32));
        long long v21 = *((_OWORD *)v19 + 1);
        long long v20 = *((_OWORD *)v19 + 2);
        *(_OWORD *)(v0 + 496) = *(_OWORD *)v19;
        *(_OWORD *)(v0 + 512) = v21;
        *(_OWORD *)(v0 + 528) = v20;
        long long v23 = *((_OWORD *)v19 + 4);
        long long v22 = *((_OWORD *)v19 + 5);
        long long v24 = *((_OWORD *)v19 + 3);
        *(void *)(v0 + 592) = v19[12];
        *(_OWORD *)(v0 + 560) = v23;
        *(_OWORD *)(v0 + 576) = v22;
        *(_OWORD *)(v0 + 544) = v24;
        id v89 = sub_2233A917C(v18, v17);
        *(void *)(v0 + 1288) = v89;
        long long v25 = sub_223321F60((void *)(v16 + 8), *(void *)(v16 + 32));
        uint64_t v27 = *v25;
        uint64_t v26 = v25[1];
        char v88 = *((unsigned char *)v25 + 16);
        uint64_t v28 = v25[4];
        uint64_t v29 = v25[5];
        uint64_t v30 = v25[6];
        char v31 = *((unsigned char *)v25 + 56);
        uint64_t v86 = v25[8];
        uint64_t v87 = v25[3];
        char v32 = *((unsigned char *)v25 + 72);
        uint64_t v33 = v25[10];
        uint64_t v85 = v25[11];
        uint64_t v34 = v25[12];
        *(void *)(v0 + 624) = &type metadata for SyncZoneInfo;
        *(void *)(v0 + 632) = &off_26D672240;
        uint64_t v35 = swift_allocObject();
        *(void *)(v0 + 600) = v35;
        *(void *)(v35 + 16) = v27;
        *(void *)(v35 + 24) = v26;
        *(unsigned char *)(v35 + 32) = v88;
        *(void *)(v35 + 40) = v87;
        *(void *)(v35 + 48) = v28;
        *(void *)(v35 + 56) = v29;
        *(void *)(v35 + 64) = v30;
        *(unsigned char *)(v35 + 72) = v31;
        *(void *)(v35 + 80) = v86;
        *(unsigned char *)(v35 + 88) = v32;
        *(void *)(v35 + 96) = v33;
        *(void *)(v35 + 104) = v85;
        *(void *)(v35 + 112) = v34;
        *(unsigned char *)(v0 + 913) = 0;
        char v36 = (void *)swift_task_alloc();
        void v36[2] = v89;
        v36[3] = v90;
        v36[4] = v91;
        v36[5] = v0 + 913;
        v36[6] = v106;
        (*(void (**)(uint64_t, void, uint64_t))(v92 + 104))(v93, v95, v94);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22342C620();
        swift_task_dealloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v99, v96, v98);
        _s17MessagesCloudSync9SyncFilesVwxx_0(v106);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v100, v99, v98);
        sub_22334183C(&qword_26AD60320, &qword_26AD60318);
        sub_22342C5F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32))(v105, v101, v104);
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v99, v98);
        BOOL v37 = 0;
        uint64_t v1 = v0 + 914;
        goto LABEL_14;
      }
      uint64_t v38 = *(void *)(v0 + 1080);
      swift_bridgeObjectRelease();
      int v39 = *(unsigned __int8 *)(v38 + 97);
      sub_2233A962C(v38, v0 + 16);
      if (v39 == 1)
      {
        char v40 = *(unsigned char *)(v0 + 112);
        sub_2233A9664(v0 + 16);
        v11 |= v40 ^ 1;
      }
      else
      {
        sub_2233A9664(v0 + 16);
      }
      *(unsigned char *)uint64_t v1 = v11 & 1;
      uint64_t v59 = *(void *)(v0 + 1080);
      sub_2233A962C(v59, v0 + 256);
      sub_2233A962C(v59, v0 + 136);
      BOOL v60 = sub_22342C1E0();
      os_log_type_t v61 = sub_22342C720();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = swift_slowAlloc();
        uint64_t v103 = swift_slowAlloc();
        v107[0] = v103;
        *(_DWORD *)uint64_t v62 = 136315906;
        uint64_t v63 = sub_223321F60((void *)(v0 + 264), *(void *)(v0 + 288));
        unint64_t v64 = sub_223421FB0(*((unsigned char *)v63 + 16));
        *(void *)(v0 + 984) = sub_22339BC14(v64, v65, v107);
        sub_22342CA10();
        swift_bridgeObjectRelease();
        sub_2233A9664(v0 + 256);
        *(_WORD *)(v62 + 12) = 2048;
        swift_beginAccess();
        *(void *)(v0 + 1000) = *(void *)(v0 + 944);
        sub_22342CA10();
        *(_WORD *)(v62 + 22) = 2080;
        uint64_t v66 = sub_223321F60((void *)(v0 + 144), *(void *)(v0 + 168));
        unint64_t v67 = sub_223421FB0(*((unsigned char *)v66 + 16));
        *(void *)(v0 + 1008) = sub_22339BC14(v67, v68, v107);
        sub_22342CA10();
        swift_bridgeObjectRelease();
        sub_2233A9664(v0 + 136);
        *(_WORD *)(v62 + 32) = 2048;
        uint64_t v1 = v0 + 914;
        swift_beginAccess();
        *(void *)(v0 + 1024) = *(void *)(v0 + 936);
        sub_22342CA10();
        _os_log_impl(&dword_223317000, v60, v61, "%s: %lld %s records saved, %lld failures", (uint8_t *)v62, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v103, -1, -1);
        MEMORY[0x223CB62D0](v62, -1, -1);
      }
      else
      {
        sub_2233A9664(v0 + 256);
        sub_2233A9664(v0 + 136);
      }

      swift_beginAccess();
      uint64_t v69 = *(void *)(v0 + 944);
      uint64_t v4 = swift_beginAccess();
      uint64_t v70 = *(void *)(v0 + 936);
      BOOL v71 = __OFADD__(v69, v70);
      uint64_t v72 = v69 + v70;
      *(void *)(v0 + 1224) = v72;
      if (!v71)
      {
        uint64_t v73 = swift_task_alloc();
        *(void *)(v0 + 1232) = v73;
        *(void *)uint64_t v73 = v0;
        *(void *)(v73 + 8) = sub_2233A4830;
        uint64_t v74 = *(void *)(v0 + 1080);
        long long v75 = *(_OWORD *)(v1 + 150);
        *(void *)(v73 + 64) = 0;
        *(void *)(v73 + 72) = v74;
        *(void *)(v73 + 56) = v72;
        *(_OWORD *)(v73 + 40) = v75;
        uint64_t v58 = sub_2233A6C0C;
        goto LABEL_32;
      }
    }
    __break(1u);
    return MEMORY[0x270FA2498](v4, v5, v6);
  }
  if (!(v2 >> 6))
  {
    uint64_t v41 = *(void *)(v0 + 1080);
    uint64_t v42 = sub_223321F60((void *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
    uint64_t v43 = sub_223321F60((void *)(v41 + 8), *(void *)(v41 + 32));
    uint64_t v45 = v43[3];
    unint64_t v44 = v43[4];
    char v46 = *(void **)(*v42 + 48);
    unsigned __int8 v47 = *(unsigned char *)(v0 + 1361);
    uint64_t v48 = *(void **)(v0 + 1320);
    uint64_t v49 = *(void **)(v0 + 1312);
    if (v46)
    {
      sub_2233A97C8(*(id *)(v0 + 1312), *(void **)(v0 + 1320), *(unsigned char *)(v0 + 1361));
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      os_log_type_t v50 = (void *)sub_22342C2D0();
      objc_msgSend(v46, sel_persistToken_forKey_, v49, v50);
      swift_unknownObjectRelease();

      sub_2233A9724(v49, v48, v47);
      uint64_t v51 = v49;
      uint64_t v52 = v48;
      unsigned __int8 v53 = v47;
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_2233A97C8(v49, v48, v47);
      swift_bridgeObjectRetain();
      unsigned int v76 = sub_22342C1E0();
      os_log_type_t v77 = sub_22342C700();
      BOOL v78 = os_log_type_enabled(v76, v77);
      unsigned __int8 v79 = *(unsigned char *)(v0 + 1361);
      uint64_t v80 = *(void **)(v0 + 1320);
      uint64_t v81 = *(void **)(v0 + 1312);
      if (v78)
      {
        uint64_t v82 = swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        v107[0] = v83;
        *(_DWORD *)uint64_t v82 = 136315394;
        *(void *)(v82 + 4) = sub_22339BC14(0xD00000000000001ELL, 0x8000000223437B40, v107);
        *(_WORD *)(v82 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v82 + 14) = sub_22339BC14(v45, v44, v107);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_223317000, v76, v77, "%s: Missing sync token store, did not update server change token for key (%s)", (uint8_t *)v82, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v83, -1, -1);
        MEMORY[0x223CB62D0](v82, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_2233A9724(v81, v80, v79);
      uint64_t v51 = v81;
      uint64_t v52 = v80;
      unsigned __int8 v53 = v79;
    }
    sub_2233A9724(v51, v52, v53);
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (v2 >> 6 != 1)
  {
    char v54 = v2 & 1;
    sub_2233A9694(*(id *)(v0 + 1312), *(void **)(v0 + 1320), v2);
    uint64_t v55 = swift_task_alloc();
    *(void *)(v0 + 1328) = v55;
    *(void *)uint64_t v55 = v0;
    *(void *)(v55 + 8) = sub_2233A5FD4;
    long long v56 = *(_OWORD *)(v0 + 1312);
    long long v57 = *(_OWORD *)(v0 + 1064);
    *(void *)(v55 + 96) = *(void *)(v0 + 1080);
    *(_OWORD *)(v55 + 80) = v57;
    *(void *)(v55 + 64) = v0 + 944;
    *(void *)(v55 + 72) = v0 + 936;
    *(unsigned char *)(v55 + 128) = v54;
    *(_OWORD *)(v55 + 48) = v56;
    uint64_t v58 = sub_2233A7E60;
    goto LABEL_32;
  }
  BOOL v37 = (*(unsigned char *)(v0 + 1312) & 1) == 0;
LABEL_14:
  *(unsigned char *)(v1 + 446) = v37;
LABEL_31:
  uint64_t v58 = sub_2233A4EF0;
LABEL_32:
  uint64_t v4 = (uint64_t)v58;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_2233A5BD0()
{
  swift_endAccess();
  return MEMORY[0x270FA2498](sub_2233A5C38, 0, 0);
}

uint64_t sub_2233A5C38()
{
  *(void *)(v0 + 1016) = *(void *)(v0 + 1304);
  sub_22331E640(&qword_26AD5EFB0);
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_2233A5CC4, 0, 0);
}

uint64_t sub_2233A5CC4()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void **)(v0 + 1304);
  uint64_t v2 = *(void *)(v0 + 1104);
  uint64_t v3 = *(void *)(v0 + 1096);
  uint64_t v4 = *(void *)(v0 + 1088);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRetain();
  id v5 = v1;
  swift_bridgeObjectRetain();
  id v6 = v1;
  uint64_t v7 = sub_22342C1E0();
  os_log_type_t v8 = sub_22342C720();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = *(void **)(v0 + 1304);
    unint64_t v10 = *(void *)(v0 + 1192);
    uint64_t v11 = *(void *)(v0 + 1184);
    uint64_t v12 = swift_slowAlloc();
    os_log_type_t v13 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v30 = v14;
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 928) = sub_22339BC14(v11, v10, &v30);
    sub_22342CA10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    id v15 = v9;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 920) = v16;
    sub_22342CA10();
    void *v13 = v16;

    _os_log_impl(&dword_223317000, v7, v8, "Error reading from %s %@", (uint8_t *)v12, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v14, -1, -1);
    MEMORY[0x223CB62D0](v12, -1, -1);
  }
  else
  {
    uint64_t v17 = *(void **)(v0 + 1304);
    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = *(void *)(v0 + 944);
  uint64_t v22 = *(void *)(v0 + 936);
  uint64_t v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
  }
  else
  {
    long long v24 = *(void **)(v0 + 1304);
    id v25 = v24;
    uint64_t v26 = swift_task_alloc();
    *(void *)(v0 + 1344) = v26;
    *(void *)uint64_t v26 = v0;
    *(void *)(v26 + 8) = sub_2233A62D8;
    uint64_t v27 = *(void *)(v0 + 1080);
    long long v28 = *(_OWORD *)(v0 + 1064);
    *(void *)(v26 + 64) = v24;
    *(void *)(v26 + 72) = v27;
    *(void *)(v26 + 56) = v23;
    *(_OWORD *)(v26 + 40) = v28;
    uint64_t v18 = sub_2233A6C0C;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  return MEMORY[0x270FA2498](v18, v19, v20);
}

uint64_t sub_2233A5FD4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233A60D0, 0, 0);
}

uint64_t sub_2233A60D0()
{
  if (*(unsigned char *)(*(void *)(v0 + 1080) + 98) == 1)
  {
    uint64_t v1 = *(void *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    *(void *)(v0 + 1336) = v1;
    swift_retain();
    uint64_t v2 = sub_2233A61B0;
    uint64_t v3 = v1;
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 1320);
    id v5 = *(void **)(v0 + 1312);
    unsigned __int8 v6 = *(unsigned char *)(v0 + 1361);
    sub_2233A9724(v5, v4, v6);
    sub_2233A9724(v5, v4, v6);
    uint64_t v2 = sub_2233A4EF0;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v2, v3, 0);
}

uint64_t sub_2233A61B0()
{
  uint64_t v1 = *(void *)(v0 + 1336);
  uint64_t v2 = swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 120);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 120) = v7;
    swift_release();
    uint64_t v2 = (uint64_t)sub_2233A6244;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_2233A6244()
{
  uint64_t v1 = *(void **)(v0 + 1320);
  uint64_t v2 = *(void **)(v0 + 1312);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 1361);
  sub_2233A9724(v2, v1, v3);
  sub_2233A9724(v2, v1, v3);
  return MEMORY[0x270FA2498](sub_2233A4EF0, 0, 0);
}

uint64_t sub_2233A62D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unsigned __int8 v3 = sub_2233A66E8;
  }
  else
  {

    unsigned __int8 v3 = sub_2233A63F4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2233A63F4()
{
  uint64_t v1 = *(void **)(*sub_223321F60((void *)(v0[133] + 16), *(void *)(v0[133] + 40)) + 24);
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)sub_22342BF20();
  unsigned int v3 = objc_msgSend(v1, sel_wasTokenExpired_, v2);
  swift_unknownObjectRelease();

  if (v3)
  {
    uint64_t v4 = (void *)v0[163];
    uint64_t v5 = v0[135];
    uint64_t v6 = v0[133];
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_223321F60((void *)(v5 + 8), *(void *)(v5 + 32));
    sub_223322120(v6 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState, (uint64_t)(v0 + 80));
    uint64_t v8 = v7[3];
    unint64_t v9 = v7[4];
    sub_223321F60(v0 + 80, v0[83]);
    swift_bridgeObjectRetain();
    sub_223422B18(0, v8, v9);
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)(v0 + 80));

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = (uint64_t (*)(void, uint64_t))v0[1];
    return v10(0, 1);
  }
  else
  {
    uint64_t v12 = (void *)v0[163];
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_getErrorValue();
    sub_223349080(v0[101]);
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_223381530(6, v12, 0xD000000000000013, 0x8000000223437B00);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_2233A66E8()
{
  uint64_t v32 = v0;
  uint64_t v1 = *(void **)(v0 + 1352);
  uint64_t v2 = *(void *)(v0 + 1080);

  sub_2233A962C(v2, v0 + 376);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_22342C1E0();
  os_log_type_t v6 = sub_22342C700();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void **)(v0 + 1352);
    uint64_t v8 = swift_slowAlloc();
    unint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v8 = 136315394;
    unint64_t v10 = sub_223321F60((void *)(v0 + 384), *(void *)(v0 + 408));
    unint64_t v11 = sub_223421FB0(*((unsigned char *)v10 + 16));
    *(void *)(v0 + 960) = sub_22339BC14(v11, v12, &v30);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    sub_2233A9664(v0 + 376);
    *(_WORD *)(v8 + 12) = 2112;
    id v13 = v7;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 952) = v14;
    sub_22342CA10();
    void *v9 = v14;

    _os_log_impl(&dword_223317000, v5, v6, "Error completing read step for zone (%s): %@", (uint8_t *)v8, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v29, -1, -1);
    MEMORY[0x223CB62D0](v8, -1, -1);
  }
  else
  {
    id v15 = *(void **)(v0 + 1352);

    sub_2233A9664(v0 + 376);
  }
  uint64_t v16 = *(void **)(*sub_223321F60((void *)(*(void *)(v0 + 1064) + 16), *(void *)(*(void *)(v0 + 1064) + 40))
                 + 24);
  swift_unknownObjectRetain();
  uint64_t v17 = (void *)sub_22342BF20();
  unsigned int v18 = objc_msgSend(v16, sel_wasTokenExpired_, v17);
  swift_unknownObjectRelease();

  if (v18)
  {
    uint64_t v19 = *(void **)(v0 + 1304);
    uint64_t v20 = *(void *)(v0 + 1080);
    uint64_t v21 = *(void *)(v0 + 1064);
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_223321F60((void *)(v20 + 8), *(void *)(v20 + 32));
    sub_223322120(v21 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState, v0 + 640);
    uint64_t v23 = v22[3];
    unint64_t v24 = v22[4];
    sub_223321F60((void *)(v0 + 640), *(void *)(v0 + 664));
    swift_bridgeObjectRetain();
    sub_223422B18(0, v23, v24);
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 640);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v25 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
    return v25(0, 1);
  }
  else
  {
    uint64_t v27 = *(void **)(v0 + 1304);
    uint64_t v30 = 0;
    uint64_t v31 = 0xE000000000000000;
    sub_22342CBB0();
    swift_bridgeObjectRelease();
    uint64_t v30 = 0xD000000000000013;
    uint64_t v31 = 0x8000000223437B00;
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    swift_getErrorValue();
    sub_223349080(*(void *)(v0 + 808));
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_223381530(6, v27, v30, v31);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_2233A6BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  return MEMORY[0x270FA2498](sub_2233A6C0C, 0, 0);
}

uint64_t sub_2233A6C0C()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)v0[9];
  uint64_t v3 = v2[9];
  uint64_t v4 = v2[10];
  sub_223321F60(v2 + 6, v3);
  if (v1)
  {
    uint64_t v5 = *(int **)(v4 + 24);
    id v6 = v1;
    id v15 = (int *)((char *)v5 + *v5);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_2233A6E08;
    uint64_t v8 = v0[8];
    uint64_t v9 = v0[6];
    uint64_t v10 = v0[5];
    unint64_t v11 = v2 + 1;
    uint64_t v12 = 1;
  }
  else
  {
    id v15 = (int *)(*(void *)(v4 + 24) + **(int **)(v4 + 24));
    id v13 = (void *)swift_task_alloc();
    v0[12] = v13;
    void *v13 = v0;
    v13[1] = sub_2233A6F1C;
    uint64_t v9 = v0[6];
    uint64_t v10 = v0[5];
    unint64_t v11 = v2 + 1;
    uint64_t v8 = 0;
    uint64_t v12 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))v15)(v10, v9, v11, v8, v12, v3, v4);
}

uint64_t sub_2233A6E08()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233A7288;
  }
  else {
    uint64_t v2 = sub_2233A704C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2233A6F1C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2233A757C, 0, 0);
  }
}

uint64_t sub_2233A704C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v1 + 98) == 1)
  {
    uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    *(void *)(v0 + 104) = v3;
    swift_retain();
    return MEMORY[0x270FA2498](sub_2233A72EC, v3, 0);
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_delegate);
    if (v4)
    {
      uint64_t v5 = *(void *)(v0 + 64);
      id v6 = sub_223321F60((void *)(v1 + 8), *(void *)(v1 + 32));
      uint64_t v7 = sub_223380894(*((unsigned char *)v6 + 16));
      sub_223321F60((void *)(v2 + 16), *(void *)(v2 + 40));
      sub_2233C7210();
      swift_unknownObjectRetain();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      sub_22342C3B0();
      sub_22342C170();
      sub_223337988();
      sub_22342CF10();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      uint64_t v8 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)sub_22342C150();
      if (v5) {
        uint64_t v10 = (void *)sub_22342BF20();
      }
      else {
        uint64_t v10 = 0;
      }
      objc_msgSend(v4, sel_syncCoordinatorFinishedFetchingRecordsOfType_name_identifier_count_error_, v7, v8, v9, *(void *)(v0 + 56), v10);
      swift_unknownObjectRelease();
    }
    unint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_2233A7288()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233A72EC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_beginAccess();
  *(void *)(v0 + 112) = *(void *)(v1 + 120);
  *(void *)(v0 + 120) = *(void *)(v1 + 128);
  *(unsigned char *)(v0 + 128) = *(unsigned char *)(v1 + 136);
  swift_release();
  return MEMORY[0x270FA2498](sub_2233A7384, 0, 0);
}

uint64_t sub_2233A7384()
{
  char v1 = *(unsigned char *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  sub_223321F60((void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  sub_22342379C(v3, v2, v1);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_delegate);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = sub_223321F60((void *)(*(void *)(v0 + 72) + 8), *(void *)(*(void *)(v0 + 72) + 32));
    uint64_t v8 = sub_223380894(*((unsigned char *)v7 + 16));
    sub_223321F60((void *)(v4 + 16), *(void *)(v4 + 40));
    sub_2233C7210();
    swift_unknownObjectRetain();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    sub_22342C170();
    sub_223337988();
    sub_22342CF10();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_22342C2D0();
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)sub_22342C150();
    if (v6) {
      unint64_t v11 = (void *)sub_22342BF20();
    }
    else {
      unint64_t v11 = 0;
    }
    objc_msgSend(v5, sel_syncCoordinatorFinishedFetchingRecordsOfType_name_identifier_count_error_, v8, v9, v10, *(void *)(v0 + 56), v11);
    swift_unknownObjectRelease();
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_2233A757C()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[5];
  if (*(unsigned char *)(v1 + 98) == 1)
  {
    uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    v0[13] = v3;
    swift_retain();
    return MEMORY[0x270FA2498](sub_2233A72EC, v3, 0);
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_delegate);
    if (v4)
    {
      uint64_t v5 = v0[8];
      uint64_t v6 = sub_223321F60((void *)(v1 + 8), *(void *)(v1 + 32));
      uint64_t v7 = sub_223380894(*((unsigned char *)v6 + 16));
      sub_223321F60((void *)(v2 + 16), *(void *)(v2 + 40));
      sub_2233C7210();
      swift_unknownObjectRetain();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      sub_22342C3B0();
      sub_22342C170();
      sub_223337988();
      sub_22342CF10();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      uint64_t v8 = (void *)sub_22342C2D0();
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)sub_22342C150();
      if (v5) {
        uint64_t v10 = (void *)sub_22342BF20();
      }
      else {
        uint64_t v10 = 0;
      }
      objc_msgSend(v4, sel_syncCoordinatorFinishedFetchingRecordsOfType_name_identifier_count_error_, v7, v8, v9, v0[7], v10);

      swift_unknownObjectRelease();
    }
    unint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_2233A77B0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return MEMORY[0x270FA2498](sub_2233A77D4, 0, 0);
}

uint64_t sub_2233A77D4()
{
  uint64_t v1 = v0[7];
  if (*(unsigned char *)(v1 + 99) == 1)
  {
    uint64_t v2 = sub_223321F60((void *)(v1 + 8), *(void *)(v1 + 32));
    sub_223404C8C(*((unsigned char *)v2 + 16));
    uint64_t v3 = (void *)swift_task_alloc();
    v0[8] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2233A7970;
    uint64_t v5 = v0[5];
    uint64_t v4 = v0[6];
    return sub_223400994(v5, v4, 0, 0, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MessagesCore/IMCore/MessagesCloudSync/SyncSteps/RecordZoneReader.swift", 108, 2);
  }
  else if (*(unsigned char *)(v1 + 98) == 1)
  {
    uint64_t v7 = *(void *)(v0[5] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    v0[9] = v7;
    swift_retain();
    return MEMORY[0x270FA2498](sub_2233A7B30, v7, 0);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_2233A7970()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233A7A6C, 0, 0);
}

uint64_t sub_2233A7A6C()
{
  if (*(unsigned char *)(v0[7] + 98) == 1)
  {
    uint64_t v1 = *(void *)(v0[5] + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_statsCollector);
    v0[9] = v1;
    swift_retain();
    return MEMORY[0x270FA2498](sub_2233A7B30, v1, 0);
  }
  else
  {
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_2233A7B30()
{
  uint64_t v1 = v0[9];
  swift_beginAccess();
  v0[10] = *(void *)(v1 + 120);
  v0[11] = *(void *)(v1 + 128);
  swift_release();
  return MEMORY[0x270FA2498](sub_2233A7BC0, 0, 0);
}

uint64_t sub_2233A7BC0()
{
  uint64_t v1 = *sub_223321F60((void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore), *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_countStore + 24));
  return MEMORY[0x270FA2498](sub_2233A7C3C, v1, 0);
}

uint64_t sub_2233A7C3C()
{
  sub_2233FBC70(*(void *)(v0 + 80), *(void *)(v0 + 88), 0);
  return MEMORY[0x270FA2498](sub_2233A7CA8, 0, 0);
}

uint64_t sub_2233A7CA8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_retain();
  return MEMORY[0x270FA2498](sub_2233A7D18, v1, 0);
}

uint64_t sub_2233A7D18()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 96) = *(void *)(v1 + 120);
  *(void *)(v0 + 104) = *(void *)(v1 + 128);
  *(unsigned char *)(v0 + 112) = *(unsigned char *)(v1 + 136);
  swift_release();
  return MEMORY[0x270FA2498](sub_2233A7D98, 0, 0);
}

uint64_t sub_2233A7D98()
{
  char v1 = *(unsigned char *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  sub_223321F60((void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  sub_22342379C(v3, v2, v1);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2233A7E30(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 96) = v7;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 80) = a6;
  *(void *)(v8 + 56) = a2;
  *(void *)(v8 + 64) = a4;
  *(unsigned char *)(v8 + 128) = a3;
  *(void *)(v8 + 48) = a1;
  return MEMORY[0x270FA2498](sub_2233A7E60, 0, 0);
}

uint64_t sub_2233A7E60()
{
  uint64_t v3 = *(void **)(v1 + 48);
  uint64_t v2 = *(void **)(v1 + 56);
  if ((*(unsigned char *)(v1 + 128) & 1) == 0)
  {
    uint64_t v4 = *(void **)(v1 + 96);
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    sub_223321F60(v4 + 6, v5);
    os_log_type_t type = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
    id v7 = v2;
    id v8 = v3;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v1 + 104) = v9;
    void *v9 = v1;
    v9[1] = sub_2233A82C4;
    uint64_t v10 = *(void *)(v1 + 88);
    uint64_t v11 = *(void *)(v1 + 48);
    uint64_t v12 = *(void *)(v1 + 56);
    uint64_t v13 = *(void *)(v1 + 80);
    return type(v13, v10, v4 + 1, v11, v12, 0, v5, v6);
  }
  id v15 = *(void **)(v1 + 72);
  if (__OFADD__(*v15, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  ++*v15;
  id v0 = v3;
  id v16 = v2;
  if (qword_26AD5F0D8 != -1) {
LABEL_14:
  }
    swift_once();
  uint64_t v17 = sub_22342C200();
  sub_223323374(v17, (uint64_t)qword_26AD63108);
  id v18 = v0;
  id v19 = v2;
  id v20 = v18;
  id v21 = v2;
  id v22 = v20;
  id v23 = v2;
  id v24 = v22;
  id v25 = v2;
  uint64_t v26 = sub_22342C1E0();
  os_log_type_t v27 = sub_22342C700();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v38 = *(void *)(v1 + 48);
    os_log_type_t typea = v27;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138412546;
    sub_2233A97DC();
    swift_allocError();
    *uint64_t v30 = v24;
    v30[1] = v2;
    id v31 = v24;
    id v32 = v2;
    uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v1 + 16) = v33;
    sub_22342CA10();
    *uint64_t v29 = v33;

    *(_WORD *)(v28 + 12) = 2112;
    *(void *)(v1 + 24) = v31;
    id v34 = v31;
    sub_22342CA10();
    v29[1] = v38;

    _os_log_impl(&dword_223317000, v26, typea, "Error during processing: %@ for record ID: %@", (uint8_t *)v28, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v29, -1, -1);
    MEMORY[0x223CB62D0](v28, -1, -1);
  }
  else
  {
  }
  int v39 = (uint64_t (*)(uint64_t))((char *)&dword_267FA2D28 + dword_267FA2D28);
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v1 + 120) = v35;
  *uint64_t v35 = v1;
  v35[1] = sub_2233A89CC;
  return v39((uint64_t)v2);
}

uint64_t sub_2233A82C4()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_2233A85C4;
  }
  else {
    uint64_t v3 = sub_2233A83F0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2233A83F0()
{
  sub_22342C970();
  switch(sub_2233D8CBC())
  {
    case 1u:
    case 3u:
    case 5u:
    case 6u:
    case 7u:
      goto LABEL_6;
    case 2u:
      uint64_t v1 = "MessageEncryptedV3";
      goto LABEL_4;
    case 4u:
      uint64_t v1 = "recoverableMessage";
LABEL_4:
      if (((unint64_t)(v1 - 32) | 0x8000000000000000) == 0x80000002234357A0) {
        goto LABEL_5;
      }
LABEL_6:
      uint64_t v5 = (void *)v0[6];
      uint64_t v4 = (void *)v0[7];
      char v6 = sub_22342CF60();
      swift_bridgeObjectRelease();

      if ((v6 & 1) == 0)
      {
        id v7 = (void *)v0[8];
        if (__OFADD__(*v7, 1))
        {
          __break(1u);
          JUMPOUT(0x2233A85A4);
        }
        ++*v7;
      }
      break;
    default:
LABEL_5:
      uint64_t v2 = (void *)v0[6];
      uint64_t v3 = (void *)v0[7];
      swift_bridgeObjectRelease();

      break;
  }
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_2233A85C4()
{
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = (void *)v0[14];
  uint64_t v3 = (void *)v0[7];
  uint64_t v4 = sub_22342C200();
  sub_223323374(v4, (uint64_t)qword_26AD63108);
  id v5 = v3;
  id v6 = v1;
  id v7 = v2;
  id v8 = v5;
  id v9 = v6;
  id v10 = v2;
  uint64_t v11 = sub_22342C1E0();
  os_log_type_t v12 = sub_22342C700();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = (void *)v0[14];
  id v16 = (void *)v0[6];
  id v15 = (void *)v0[7];
  if (v13)
  {
    os_log_type_t type = v12;
    uint64_t v17 = swift_slowAlloc();
    id v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 138412546;
    id v19 = v14;
    log = v11;
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v20;
    sub_22342CA10();
    void *v18 = v20;

    *(_WORD *)(v17 + 12) = 2112;
    v0[5] = v15;
    id v21 = v15;
    sub_22342CA10();
    v18[1] = v15;

    _os_log_impl(&dword_223317000, log, type, "Upsert failed: %@ for record: %@", (uint8_t *)v17, 0x16u);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v18, -1, -1);
    MEMORY[0x223CB62D0](v17, -1, -1);
  }
  else
  {
  }
  sub_22342C970();
  switch(sub_2233D8CBC())
  {
    case 1u:
    case 3u:
    case 5u:
    case 6u:
    case 7u:
      goto LABEL_11;
    case 2u:
      id v22 = "MessageEncryptedV3";
      goto LABEL_9;
    case 4u:
      id v22 = "recoverableMessage";
LABEL_9:
      if (((unint64_t)(v22 - 32) | 0x8000000000000000) == 0x80000002234357A0) {
        goto LABEL_10;
      }
LABEL_11:
      id v25 = (void *)v0[6];
      uint64_t v26 = (void *)v0[7];
      char v27 = sub_22342CF60();
      swift_bridgeObjectRelease();

      if ((v27 & 1) == 0)
      {
        uint64_t v28 = (void *)v0[8];
        if (__OFADD__(*v28, 1))
        {
          __break(1u);
          JUMPOUT(0x2233A89ACLL);
        }
        ++*v28;
      }
      break;
    default:
LABEL_10:
      id v23 = (void *)v0[6];
      id v24 = (void *)v0[7];
      swift_bridgeObjectRelease();

      break;
  }
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_2233A89CC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2233A8AC8, 0, 0);
}

uint64_t sub_2233A8AC8()
{
  uint64_t v1 = *(void **)(v0 + 56);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_2233A8B30(uint64_t a1)
{
}

uint64_t sub_2233A8B48(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2F40 + dword_267FA2F40);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_223334A58;
  return v7(a1, a2);
}

uint64_t sub_2233A8C00(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2F20 + dword_267FA2F20);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_223335C74;
  return v7(a1, a2);
}

uint64_t sub_2233A8CB8(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_267FA2F18 + dword_267FA2F18);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_223331EB0;
  return v7(a1, a2);
}

id sub_2233A8D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_223321F60((void *)(a1 + 16), *(void *)(a1 + 40));
  unint64_t v29 = sub_2233C7210();
  uint64_t v30 = v7;
  uint64_t v31 = *v4;
  uint64_t v32 = v4[1];
  sub_223322AB4((uint64_t)(v4 + 11), (uint64_t)v35, &qword_26AD60278);
  sub_223322AB4((uint64_t)v35, (uint64_t)&v33, &qword_26AD60278);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2233A9830((uint64_t)v35);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_22338B314(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_22338B314((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  id v8[2] = v10 + 1;
  uint64_t v11 = &v8[2 * v10];
  v11[4] = 1668184403;
  v11[5] = 0xE400000000000000;
  if (v30)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_22338B314(0, v8[2] + 1, 1, v8);
    }
    unint64_t v13 = v8[2];
    unint64_t v12 = v8[3];
    if (v13 >= v12 >> 1) {
      uint64_t v8 = sub_22338B314((void *)(v12 > 1), v13 + 1, 1, v8);
    }
    id v8[2] = v13 + 1;
    uint64_t v14 = &v8[2 * v13];
    v14[4] = v29;
    v14[5] = v30;
  }
  if (v32)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_22338B314(0, v8[2] + 1, 1, v8);
    }
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      uint64_t v8 = sub_22338B314((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    id v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v31;
    v17[5] = v32;
  }
  if (a4)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_22338B314(0, v8[2] + 1, 1, v8);
    }
    unint64_t v19 = v8[2];
    unint64_t v18 = v8[3];
    if (v19 >= v18 >> 1) {
      uint64_t v8 = sub_22338B314((void *)(v18 > 1), v19 + 1, 1, v8);
    }
    id v8[2] = v19 + 1;
    uint64_t v20 = &v8[2 * v19];
    v20[4] = a3;
    v20[5] = a4;
  }
  uint64_t v21 = v34;
  if (v34)
  {
    uint64_t v22 = v33;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_22338B314(0, v8[2] + 1, 1, v8);
    }
    unint64_t v24 = v8[2];
    unint64_t v23 = v8[3];
    if (v24 >= v23 >> 1) {
      uint64_t v8 = sub_22338B314((void *)(v23 > 1), v24 + 1, 1, v8);
    }
    id v8[2] = v24 + 1;
    id v25 = &v8[2 * v24];
    v25[4] = v22;
    uint64_t v25[5] = v21;
  }
  sub_22331E640(&qword_26AD60278);
  swift_arrayDestroy();
  sub_22331E640(&qword_26AD60280);
  sub_22334183C((unint64_t *)&qword_26AD60288, &qword_26AD60280);
  sub_22342C2B0();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD780]), sel_init);
  char v27 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setName_, v27);

  return v26;
}

id sub_2233A917C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_22334199C(0, &qword_26AD603C8);
  sub_22331E640((uint64_t *)&unk_26AD5F170);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_223432370;
  sub_22334199C(0, &qword_26AD60388);
  sub_223421FB0(*(unsigned char *)(v2 + 16));
  sub_22342C300();
  *(void *)(v6 + 32) = sub_22342C730();
  sub_22342C4D0();
  uint64_t v7 = sub_223321F60((void *)(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState), *(void *)(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_cloudState + 24));
  sub_2233A93E0(*v7, v2);
  id v8 = (id)sub_22342C920();
  id v9 = sub_2233A8D70(a1, a2, 0x6863746566, 0xE500000000000000);
  objc_msgSend(v8, sel_setGroup_, v9);

  unint64_t v10 = (void *)(a1 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_activity);
  id v11 = objc_allocWithZone(MEMORY[0x263EFD778]);
  id v12 = v8;
  id v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setQualityOfService_, 17);
  objc_msgSend(v13, sel_setAllowsCellularAccess_, 1);
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[4];
  sub_223321F60(v10, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  if (v16)
  {
    uint64_t v17 = v16;
    objc_msgSend(v13, sel_setAllowsCellularAccess_, 0);
    objc_msgSend(v13, sel_setXPCActivity_, v17);
    swift_unknownObjectRelease();
  }
  objc_msgSend(v12, sel_setConfiguration_, v13);

  objc_msgSend(v12, sel_setFetchAllChanges_, *(unsigned __int8 *)(v3 + 56));
  return v12;
}

unint64_t sub_2233A93E0(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = type metadata accessor for CloudState();
  uint64_t v20 = &off_26D673950;
  v18[0] = a1;
  sub_223321F60(v18, v19);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v6 = sub_2234228D8(v4, v5);
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 56);
  sub_22334199C(0, &qword_26AD603D0);
  swift_bridgeObjectRetain();
  id v8 = v6;
  id v9 = (void *)sub_22342C950();
  unint64_t v10 = v9;
  if ((v7 & 1) == 0 && !v6) {
    objc_msgSend(v9, sel_setFetchNewestChangesFirst_, 1);
  }
  sub_223421FB0(*(unsigned char *)(a2 + 16));
  id v11 = objc_allocWithZone(MEMORY[0x263EFD7F8]);
  id v12 = (void *)sub_22342C2D0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithZoneName_, v12);

  sub_22331E640(&qword_26AD60548);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22342F870;
  *(void *)(inited + 32) = objc_msgSend(v13, sel_zoneID);
  *(void *)(inited + 40) = v10;
  id v15 = v10;
  unint64_t v16 = sub_2233C6234(inited);

  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v18);
  return v16;
}

uint64_t sub_2233A95BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

void sub_2233A961C(uint64_t a1)
{
  sub_22340BE54(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char **)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_2233A962C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2233A9664(uint64_t a1)
{
  return a1;
}

id sub_2233A9694(id result, void *a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 2) {
    return sub_2233A96B8(result, a2, a3 & 1);
  }
  if (!(a3 >> 6)) {
    return result;
  }
  return result;
}

id sub_2233A96B8(void *a1, void *a2, char a3)
{
  id v4 = a1;
  if (a3)
  {
    unint64_t v5 = a2;
  }
  else
  {
    unint64_t v5 = a2;
  }
  return v5;
}

void sub_2233A9724(id a1, void *a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    sub_2233A9738(a1, a2, a3);
  }
}

void sub_2233A9738(id a1, void *a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 2)
  {
    sub_2233A975C(a1, a2, a3 & 1);
  }
  else if (!(a3 >> 6))
  {
  }
}

void sub_2233A975C(void *a1, void *a2, char a3)
{
  if (a3)
  {
    id v4 = a2;
  }
  else
  {
    id v4 = a2;
  }
}

id sub_2233A97C8(id result, void *a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return sub_2233A9694(result, a2, a3);
  }
  return result;
}

unint64_t sub_2233A97DC()
{
  unint64_t result = qword_267FA2F38;
  if (!qword_267FA2F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2F38);
  }
  return result;
}

uint64_t sub_2233A9830(uint64_t a1)
{
  return a1;
}

uint64_t sub_2233A985C()
{
  sub_22342BE60();
  swift_allocObject();
  uint64_t result = sub_22342BE50();
  qword_26AD632F8 = result;
  return result;
}

uint64_t sub_2233A989C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DatabaseRecord();
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v1, sel_data);
  if (!v6)
  {
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22342C200();
    sub_223323374(v11, (uint64_t)qword_26AD63330);
    id v12 = v1;
    id v13 = sub_22342C1E0();
    os_log_type_t v14 = sub_22342C700();
    if (os_log_type_enabled(v13, v14))
    {
      v39[2] = v3;
      unint64_t v15 = 0xD00000000000001CLL;
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v40 = v17;
      *(_DWORD *)unint64_t v16 = 136315138;
      id v18 = objc_msgSend(v12, sel_parent);
      unint64_t v19 = 0x8000000223437C10;
      if (v18)
      {
        uint64_t v20 = v18;
        id v21 = objc_msgSend(v18, sel_recordName);

        if (v21)
        {
          unint64_t v15 = sub_22342C300();
          unint64_t v19 = v22;
        }
      }
      v39[6] = sub_22339BC14(v15, v19, &v40);
      sub_22342CA10();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_223317000, v13, v14, "unknown domainModel, no data found for RemoteRecordData with recordName %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v17, -1, -1);
      MEMORY[0x223CB62D0](v16, -1, -1);
    }
    else
    {
    }
    id v24 = objc_msgSend(v12, sel_parent);
    id v25 = v24;
    if (v24)
    {
      id v26 = objc_msgSend(v24, sel_recordName);

      if (v26)
      {
        id v25 = (void *)sub_22342C300();
        uint64_t v28 = v27;

        goto LABEL_18;
      }
      id v25 = 0;
    }
    uint64_t v28 = 0;
LABEL_18:
    id v29 = objc_msgSend(v12, sel_parent);
    uint64_t v30 = v29;
    if (v29)
    {
      id v31 = objc_msgSend(v29, sel_recordType);

      if (v31)
      {
        uint64_t v30 = (void *)sub_22342C300();
        uint64_t v33 = v32;

LABEL_23:
        *(void *)a1 = v25;
        *(void *)(a1 + 8) = v28;
        *(void *)(a1 + 16) = v30;
        *(void *)(a1 + 24) = v33;
        uint64_t v34 = (int *)type metadata accessor for UnknownRecord();
        *(_OWORD *)(a1 + 32) = 0u;
        *(_OWORD *)(a1 + 48) = 0u;
        *(_OWORD *)(a1 + 64) = 0u;
        *(_OWORD *)(a1 + 80) = 0u;
        uint64_t v35 = a1 + v34[10];
        uint64_t v36 = sub_22342C130();
        BOOL v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
        v37(v35, 1, 1, v36);
        v37(a1 + v34[11], 1, 1, v36);
        uint64_t v38 = (void *)(a1 + v34[12]);
        void *v38 = 0;
        v38[1] = 0;
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v30 = 0;
    }
    uint64_t v33 = 0;
    goto LABEL_23;
  }
  char v7 = v6;
  uint64_t v8 = sub_22342C070();
  unint64_t v10 = v9;

  if (qword_26AD5FD40 != -1) {
    swift_once();
  }
  sub_2233AA0C4();
  sub_22342BE40();
  sub_22331EA68(v8, v10);
  return sub_2233AA11C((uint64_t)v5, a1);
}

uint64_t sub_2233AA0A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2233A989C(a1);
}

unint64_t sub_2233AA0C4()
{
  unint64_t result = qword_26AD5FBB8;
  if (!qword_26AD5FBB8)
  {
    type metadata accessor for DatabaseRecord();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5FBB8);
  }
  return result;
}

uint64_t sub_2233AA11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatabaseRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for SyncStoreReadHandler()
{
  return swift_release();
}

uint64_t initializeWithCopy for SyncStoreReadHandler(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SyncStoreReadHandler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MessageProto(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for SyncStoreReadHandler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncStoreReadHandler(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncStoreReadHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncStoreReadHandler()
{
  return &type metadata for SyncStoreReadHandler;
}

uint64_t sub_2233AA30C(uint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    a2;
    swift_bridgeObjectRetain();
    uint64_t v5 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      if (sub_22342C9A0())
      {
        self;
        uint64_t v6 = swift_dynamicCastObjCClass();
        uint64_t v7 = swift_bridgeObjectRelease();
        if (v6)
        {
          MEMORY[0x223CB4D20](v7);
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_22342C4F0();
          }
          sub_22342C530();
          sub_22342C4D0();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v8 = v11;
  }
  else
  {
    id v9 = a2;
    uint64_t v8 = MEMORY[0x263F8EE78];
  }

  swift_release();
  return v8;
}

uint64_t sub_2233AA49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 281) = a8;
  *(unsigned char *)(v8 + 280) = a6;
  *(void *)(v8 + 224) = a5;
  *(void *)(v8 + 232) = v10;
  *(void *)(v8 + 208) = a3;
  *(void *)(v8 + 216) = a4;
  *(void *)(v8 + 192) = a1;
  *(void *)(v8 + 200) = a2;
  return MEMORY[0x270FA2498](sub_2233AA4D4, 0, 0);
}

uint64_t sub_2233AA4D4()
{
  uint64_t v33 = v0;
  if (*(unsigned char *)(v0 + 280))
  {
    uint64_t v10 = *(void **)(v0 + 216);
    id v11 = v10;
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = sub_22342C200();
    sub_223323374(v13, (uint64_t)qword_26AD63108);
    sub_223322120(v12, v0 + 120);
    id v14 = v10;
    id v15 = v10;
    unint64_t v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C700();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v20 = *(void **)(v0 + 216);
    unint64_t v19 = *(void **)(v0 + 224);
    if (v18)
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = v31;
      *(_DWORD *)uint64_t v21 = 136315394;
      unint64_t v22 = sub_223321F60((void *)(v0 + 120), *(void *)(v0 + 144));
      os_log_type_t type = v17;
      uint64_t v24 = *v22;
      unint64_t v23 = v22[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 160) = sub_22339BC14(v24, v23, &v32);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 120);
      *(_WORD *)(v21 + 12) = 2080;
      *(void *)(v0 + 168) = v10;
      id v25 = v10;
      sub_22331E640(&qword_26AD5EFB0);
      uint64_t v26 = sub_22342C360();
      *(void *)(v0 + 176) = sub_22339BC14(v26, v27, &v32);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233ABE0C(v20, v19, 1);
      sub_2233ABE0C(v20, v19, 1);
      _os_log_impl(&dword_223317000, v16, type, "Read from %s encountered error: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v31, -1, -1);
      MEMORY[0x223CB62D0](v21, -1, -1);

      sub_2233ABE0C(v20, v19, 1);
    }
    else
    {
      sub_2233ABE0C(*(void **)(v0 + 216), *(void **)(v0 + 224), 1);
      _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 120);
      sub_2233ABE0C(v20, v19, 1);
      sub_2233ABE0C(v20, v19, 1);
    }
  }
  else
  {
    id v1 = *(id *)(v0 + 224);
    sub_22342C970();
    char v2 = sub_2233D8CBC();
    if (v2)
    {
      if (v2 == 7) {
        char v3 = 6;
      }
      else {
        char v3 = v2;
      }
      *(unsigned char *)(v0 + 282) = v3;
      uint64_t v4 = (void *)(*(void *)(v0 + 192) + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_syncDatabase);
      *(void *)(v0 + 240) = *v4;
      uint64_t v5 = v4[1];
      uint64_t ObjectType = swift_getObjectType();
      *(void *)(v0 + 184) = v1;
      uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 80) + **(int **)(v5 + 80));
      swift_unknownObjectRetain();
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 248) = v7;
      unint64_t v8 = sub_2233ABE58();
      *uint64_t v7 = v0;
      v7[1] = sub_2233AA924;
      return v30(v0 + 184, 1, v8, &off_26AD603F8, ObjectType, v5);
    }
  }
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_2233AA924(void *a1)
{
  *(void *)(*(void *)v2 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_unknownObjectRelease();
    uint64_t v4 = sub_2233AADB8;
  }
  else
  {
    sub_223396680(a1);
    swift_unknownObjectRelease();
    uint64_t v4 = sub_2233AAA68;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2233AAA68()
{
  int v1 = *(unsigned __int8 *)(v0 + 281);
  uint64_t v2 = *(void **)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 192);
  unsigned __int8 v5 = *(unsigned char *)(v0 + 282);
  uint64_t v6 = sub_223321F60(*(void **)(v0 + 208), *(void *)(*(void *)(v0 + 208) + 24));
  long long v8 = *((_OWORD *)v6 + 1);
  long long v7 = *((_OWORD *)v6 + 2);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v6;
  *(_OWORD *)(v0 + 32) = v8;
  *(_OWORD *)(v0 + 48) = v7;
  long long v10 = *((_OWORD *)v6 + 4);
  long long v9 = *((_OWORD *)v6 + 5);
  long long v11 = *((_OWORD *)v6 + 3);
  *(void *)(v0 + 112) = v6[12];
  *(_OWORD *)(v0 + 80) = v10;
  *(_OWORD *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 64) = v11;
  sub_2233ABE98(v2, v4, v3, v0 + 16, v5);
  if (v1 == 1)
  {
    BOOL v18 = (char *)&dword_267FA35D8 + dword_267FA35D8;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_2233AABDC;
    uint64_t v13 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 216);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v18)(v15, v14, v13, 0);
  }
  else
  {

    os_log_type_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_2233AABDC()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2233AAD54;
  }
  else {
    uint64_t v2 = sub_2233AACF0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2233AACF0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233AAD54()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233AADB8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233AAE1C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9)
{
  *(void *)(v9 + 144) = a9;
  *(unsigned char *)(v9 + 185) = a8;
  *(double *)(v9 + 136) = a2;
  *(unsigned char *)(v9 + 184) = a6;
  *(void *)(v9 + 120) = a4;
  *(void *)(v9 + 128) = a5;
  *(void *)(v9 + 112) = a1;
  return MEMORY[0x270FA2498](sub_2233AAE50, 0, 0);
}

uint64_t sub_2233AAE50()
{
  uint64_t v31 = v0;
  if (*(unsigned char *)(v0 + 184))
  {
    long long v8 = *(void **)(v0 + 128);
    id v9 = v8;
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    long long v10 = *(void **)(v0 + 128);
    uint64_t v11 = sub_22342C200();
    sub_223323374(v11, (uint64_t)qword_26AD63108);
    swift_unknownObjectRetain();
    sub_22337EE74(v10, 1);
    swift_unknownObjectRetain();
    sub_22337EE74(v10, 1);
    uint64_t v12 = sub_22342C1E0();
    os_log_type_t v13 = sub_22342C700();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void **)(v0 + 128);
    if (v14)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v30[0] = v28;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_22342C170();
      sub_223337988();
      uint64_t v17 = sub_22342CF10();
      *(void *)(v0 + 72) = sub_22339BC14(v17, v18, v30);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2080;
      *(void *)(v0 + 56) = v8;
      id v19 = v8;
      sub_22331E640(&qword_26AD5EFB0);
      uint64_t v20 = sub_22342C360();
      *(void *)(v0 + 64) = sub_22339BC14(v20, v21, v30);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      sub_2233829A4(v15, 1);
      sub_2233829A4(v15, 1);
      _os_log_impl(&dword_223317000, v12, v13, "Fetch complete with error (sync: %s): %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v28, -1, -1);
      MEMORY[0x223CB62D0](v16, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
      sub_2233829A4(v15, 1);
      sub_2233829A4(v15, 1);
    }

    swift_willThrow();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
  else
  {
    if (qword_26AD5F0D8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_22342C200();
    *(void *)(v0 + 152) = sub_223323374(v1, (uint64_t)qword_26AD63108);
    swift_unknownObjectRetain_n();
    uint64_t v2 = sub_22342C1E0();
    os_log_type_t v3 = sub_22342C720();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void *)(v0 + 112);
    if (v4)
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v29 = v7;
      v30[0] = 0x2E636E7973;
      v30[1] = 0xE500000000000000;
      sub_223321F60((void *)(v5 + 16), *(void *)(v5 + 40));
      sub_2233C7210();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      sub_22342C3B0();
      sub_22342C170();
      sub_223337988();
      sub_22342CF10();
      sub_22342C3B0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 104) = sub_22339BC14(0x2E636E7973, 0xE500000000000000, &v29);
      sub_22342CA10();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_223317000, v2, v3, "Fetch success (sync: %s)", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v7, -1, -1);
      MEMORY[0x223CB62D0](v6, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    if (qword_26AD5EFE0 != -1) {
      swift_once();
    }
    uint64_t v22 = unk_26AD63170;
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v22 + 96) + **(int **)(v22 + 96));
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_2233AB458;
    return v27(ObjectType, v22);
  }
}

uint64_t sub_2233AB458()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2233AB588, 0, 0);
  }
}

uint64_t sub_2233AB588()
{
  uint64_t v1 = unk_26AD63170;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 128) + **(int **)(v1 + 128));
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v3;
  *os_log_type_t v3 = v0;
  v3[1] = sub_2233AB68C;
  return v5(ObjectType, v1);
}

uint64_t sub_2233AB68C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2233AB7BC, 0, 0);
  }
}

uint64_t sub_2233AB7BC()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_223322120(v1, v0 + 16);
  swift_unknownObjectRetain_n();
  os_log_type_t v3 = sub_22342C1E0();
  os_log_type_t v4 = sub_22342C720();
  if (os_log_type_enabled(v3, v4))
  {
    double v5 = *(double *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v7 = 136315650;
    long long v8 = sub_223321F60((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_22339BC14(v9, v10, &v16);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
    *(_WORD *)(v7 + 12) = 2048;
    *(double *)(v0 + 88) = Current - v5;
    sub_22342CA10();
    *(_WORD *)(v7 + 22) = 2080;
    uint64_t v17 = 0x2E636E7973;
    unint64_t v18 = 0xE500000000000000;
    sub_223321F60((void *)(v6 + 16), *(void *)(v6 + 40));
    sub_2233C7210();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    sub_22342C3B0();
    sub_22342C170();
    sub_223337988();
    sub_22342CF10();
    sub_22342C3B0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = sub_22339BC14(v17, v18, &v16);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_223317000, v3, v4, "Total time to fetch %s records was %f (%s)", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v14, -1, -1);
    MEMORY[0x223CB62D0](v7, -1, -1);
  }
  else
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0(v0 + 16);
    swift_unknownObjectRelease_n();
  }

  if (*(unsigned char *)(v0 + 185) == 1)
  {
    uint64_t v15 = (uint64_t (__cdecl *)())((char *)&dword_267FA35C8 + dword_267FA35C8);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2233ABB38;
    return v15();
  }
  else
  {
    os_log_type_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_2233ABB38()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2233ABC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v13 = *(unsigned char *)(v6 + 16);
  uint64_t v14 = *(void *)(v6 + 24);
  char v15 = a6 & 1;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *(void *)uint64_t v16 = v7;
  *(void *)(v16 + 8) = sub_223334A58;
  *(unsigned char *)(v16 + 281) = v13;
  *(unsigned char *)(v16 + 280) = v15;
  *(void *)(v16 + 224) = a5;
  *(void *)(v16 + 232) = v14;
  *(void *)(v16 + 208) = a3;
  *(void *)(v16 + 216) = a4;
  *(void *)(v16 + 192) = a1;
  *(void *)(v16 + 200) = a2;
  return MEMORY[0x270FA2498](sub_2233AA4D4, 0, 0);
}

uint64_t sub_2233ABD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v10 = a5 & 1;
  uint64_t v11 = *v5;
  char v12 = *((unsigned char *)v5 + 16);
  uint64_t v13 = v5[3];
  uint64_t v14 = swift_task_alloc();
  *(void *)(v6 + 16) = v14;
  *(void *)uint64_t v14 = v6;
  *(void *)(v14 + 8) = sub_223331EB0;
  *(void *)(v14 + 144) = v13;
  *(unsigned char *)(v14 + 185) = v12;
  *(void *)(v14 + 136) = v11;
  *(unsigned char *)(v14 + 184) = v10;
  *(void *)(v14 + 120) = a3;
  *(void *)(v14 + 128) = a4;
  *(void *)(v14 + 112) = a1;
  return MEMORY[0x270FA2498](sub_2233AAE50, 0, 0);
}

void sub_2233ABE0C(void *a1, void *a2, char a3)
{
  if (a3)
  {
  }
  else
  {

    a1 = a2;
  }
}

unint64_t sub_2233ABE58()
{
  unint64_t result = qword_26AD60450;
  if (!qword_26AD60450)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD60450);
  }
  return result;
}

void sub_2233ABE98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v8 = a5;
  v43[3] = &type metadata for SyncZoneInfo;
  v43[4] = &off_26D672240;
  uint64_t v9 = swift_allocObject();
  v43[0] = v9;
  long long v10 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v9 + 96) = v10;
  *(void *)(v9 + 112) = *(void *)(a4 + 96);
  long long v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v9 + 32) = v11;
  long long v12 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v9 + 64) = v12;
  if ((v8 - 1) >= 2 || !sub_223321F60(v43, (uint64_t)&type metadata for SyncZoneInfo)[6])
  {
    sub_22339660C(a4);
LABEL_22:
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v43);
    return;
  }
  sub_22339660C(a4);
  id v13 = a1;
  uint64_t v14 = swift_bridgeObjectRetain();
  unint64_t v15 = sub_2233AA30C(v14, v13);
  swift_bridgeObjectRelease();
  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_5;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_22342CD40();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_21;
  }
LABEL_5:
  if (qword_26AD5F0D8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_22342C200();
  sub_223323374(v17, (uint64_t)qword_26AD63108);
  sub_223322120((uint64_t)v43, (uint64_t)v40);
  id v18 = v13;
  swift_bridgeObjectRetain_n();
  id v19 = v18;
  uint64_t v20 = sub_22342C1E0();
  os_log_type_t v21 = sub_22342C720();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v38 = v21;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v39 = v37;
    *(_DWORD *)uint64_t v22 = 136315650;
    id v23 = objc_msgSend(v19, sel_recordID);
    id v24 = objc_msgSend(v23, sel_recordName);

    uint64_t v25 = sub_22342C300();
    unint64_t v27 = v26;

    sub_22339BC14(v25, v27, &v39);
    sub_22342CA10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v28 = sub_223321F60(v40, (uint64_t)v41);
    unint64_t v29 = sub_223421FB0(*((unsigned char *)v28 + 16));
    sub_22339BC14(v29, v30, &v39);
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v40);
    *(_WORD *)(v22 + 22) = 2048;
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_22342CD40();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_22342CA10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_223317000, v20, v38, "Record %s in %s has %ld assets", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v37, -1, -1);
    MEMORY[0x223CB62D0](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v40);

    swift_bridgeObjectRelease();
  }
  if (v16 >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v32 = (void *)(a2 + OBJC_IVAR____TtC17MessagesCloudSync11SyncContext_fileProvider);
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v33 = (id)MEMORY[0x223CB54A0](v31, v15);
      }
      else {
        id v33 = *(id *)(v15 + 8 * v31 + 32);
      }
      uint64_t v34 = v33;
      ++v31;
      uint64_t v35 = (void *)*sub_223321F60(v32, v32[3]);
      uint64_t v41 = &type metadata for FileManagerProvider;
      uint64_t v42 = &off_26D66EBE0;
      v40[0] = v35;
      id v36 = v35;
      sub_22337C180(v34);

      sub_223348EB0((uint64_t)v40);
    }
    while (v16 != v31);
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_2233AC33C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_2233AC39C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void destroy for MessageBody(uint64_t *a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[3];
  if (v2 >> 60 != 15) {
    sub_22331EA68(a1[2], v2);
  }
  uint64_t v3 = (void *)a1[4];
}

uint64_t initializeWithCopy for MessageBody(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  double v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_22331E684(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  int v8 = (void *)a2[4];
  *(void *)(a1 + 32) = v8;
  id v9 = v8;
  return a1;
}

void *assignWithCopy for MessageBody(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_22331E684(*v4, a2[3]);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_22331EA68(v8, v9);
      goto LABEL_8;
    }
    sub_22331FFAC((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_22331E684(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  long long v10 = (void *)a1[4];
  long long v11 = (void *)a2[4];
  a1[4] = v11;
  id v12 = v11;

  return a1;
}

void *assignWithTake for MessageBody(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_22331EA68(v8, v6);
      goto LABEL_6;
    }
    sub_22331FFAC((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  unint64_t v9 = (void *)a1[4];
  a1[4] = a2[4];

  return a1;
}

uint64_t getEnumTagSinglePayload for MessageBody(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageBody(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageBody()
{
  return &type metadata for MessageBody;
}

uint64_t sub_2233AC6F4()
{
  return sub_22342D060();
}

uint64_t sub_2233AC740()
{
  return sub_22342C390();
}

uint64_t sub_2233AC750()
{
  return sub_22342D060();
}

uint64_t sub_2233AC798@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2233AC7EC(void *a1@<X8>)
{
  *a1 = 2036625250;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_2233AC800()
{
  return 2036625250;
}

uint64_t sub_2233AC810@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_22342CDA0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2233AC868(uint64_t a1)
{
  unint64_t v2 = sub_2233ACDD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2233AC8A4(uint64_t a1)
{
  unint64_t v2 = sub_2233ACDD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2233AC8E0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2233AC9E8(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

id sub_2233AC928()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_22342C050();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_22342BF30();

    swift_willThrow();
  }
  return v2;
}

void sub_2233AC9E8(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_22331E640(&qword_26AD604F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_223321F60(a1, a1[3]);
  sub_2233ACDD8();
  sub_22342D080();
  if (v2)
  {
    _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return;
  }
  sub_223322B18();
  sub_22342CDF0();
  uint64_t v10 = v24;
  unint64_t v9 = v25;
  if (v25 >> 60 != 15)
  {
    id v15 = objc_allocWithZone(MEMORY[0x263F08928]);
    sub_223322A54(v10, v9);
    sub_22331E684(v10, v9);
    id v16 = sub_2233AC928();
    id v22 = objc_msgSend(v16, sel_decodeObject);

    if (v22)
    {
      sub_22342CA80();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    sub_223341934((uint64_t)v23, (uint64_t)&v24);
    if (v26)
    {
      sub_2233ACE80();
      if (swift_dynamicCast())
      {
        id v22 = v27;
        id v20 = v27;
        id v19 = objc_msgSend(v20, sel_string);
        uint64_t v21 = sub_22342C300();
        uint64_t v12 = v17;

        sub_223322054(v10, v9);
        id v18 = v8;
        long long v11 = v22;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
        uint64_t v13 = v21;
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      sub_223322054(v10, v9);
    }
    else
    {
      sub_223322054(v10, v9);
      sub_223338A24((uint64_t)&v24);
    }
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
LABEL_6:
  swift_bridgeObjectRetain();
  sub_223322A54(v10, v9);
  id v14 = v11;
  sub_223322054(v10, v9);
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_223322054(v10, v9);

  *a2 = v13;
  a2[1] = v12;
  a2[2] = v10;
  a2[3] = v9;
  a2[4] = (uint64_t)v11;
}

unint64_t sub_2233ACDD8()
{
  unint64_t result = qword_26AD5F728;
  if (!qword_26AD5F728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F728);
  }
  return result;
}

unint64_t sub_2233ACE2C()
{
  unint64_t result = qword_267FA2F68;
  if (!qword_267FA2F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2F68);
  }
  return result;
}

unint64_t sub_2233ACE80()
{
  unint64_t result = qword_267FA2F70;
  if (!qword_267FA2F70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267FA2F70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MessageBodyError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2233ACF8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageBodyError()
{
  return &type metadata for MessageBodyError;
}

unsigned char *storeEnumTagSinglePayload for MessageBody.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2233AD060);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageBody.CodingKeys()
{
  return &type metadata for MessageBody.CodingKeys;
}

unint64_t sub_2233AD09C()
{
  unint64_t result = qword_267FA2F78;
  if (!qword_267FA2F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267FA2F78);
  }
  return result;
}

unint64_t sub_2233AD0F4()
{
  unint64_t result = qword_267FA2F80;
  if (!qword_267FA2F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267FA2F80);
  }
  return result;
}

unint64_t sub_2233AD14C()
{
  unint64_t result = qword_26AD5F738;
  if (!qword_26AD5F738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F738);
  }
  return result;
}

unint64_t sub_2233AD1A4()
{
  unint64_t result = qword_26AD5F730;
  if (!qword_26AD5F730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD5F730);
  }
  return result;
}

uint64_t sub_2233AD1F8(uint64_t a1, uint64_t a2)
{
  void v8[3] = MEMORY[0x263F8D3E8];
  v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = sub_223321F60(v8, MEMORY[0x263F8D3E8]);
  int v3 = (unsigned char *)*v2;
  if (*v2 && (unsigned int v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_2233B06A4(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_2233B07EC((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_2233B0768((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  _s17MessagesCloudSync9SyncFilesVwxx_0((uint64_t)v8);
  return v6;
}

void sub_2233AD2B4()
{
  qword_26AD631B0 = (uint64_t)&type metadata for DatabaseRecordPersistence;
  *(void *)algn_26AD631B8 = &off_26D670800;
}

ValueMetadata *type metadata accessor for DatabaseRecordPersistence()
{
  return &type metadata for DatabaseRecordPersistence;
}

void sub_2233AD2E4(uint64_t a1, uint64_t a2)
{
  sub_22331E640((uint64_t *)&unk_26AD5EF90);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22342F870;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_22342C490();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)IMDMessageRecordCopyMessagesForGUIDs();

  if (v6)
  {
    sub_2233B104C();
    sub_22342C4A0();
  }
}

uint64_t sub_2233AD400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_22342C200();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2233AD4C4, 0, 0);
}

uint64_t sub_2233AD4C4()
{
  uint64_t v63 = v0;
  id v1 = (id)IMDUpdateIMMessageItemWithIMMessageItemForceReplaceReplaceError();
  *(void *)(v0 + 112) = v1;
  if (v1)
  {
    uint64_t v2 = &unk_26AD63000;
    uint64_t v3 = qword_26AD630F8;
    *(void *)(v0 + 120) = qword_26AD630F8;
    if (v3)
    {
      uint64_t v4 = qword_26AD63100;
      *(void *)(v0 + 128) = qword_26AD63100;
      *(void *)(v0 + 136) = *(void *)(v4 + 136);
      *(void *)(v0 + 144) = (v4 + 136) & 0xFFFFFFFFFFFFLL | 0x3082000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      *(void *)(v0 + 152) = sub_22342C5B0();
      uint64_t v5 = sub_22342C560();
      uint64_t v7 = v6;
      uint64_t v8 = sub_2233ADB9C;
LABEL_6:
      unint64_t v9 = v8;
      uint64_t v10 = v5;
      uint64_t v11 = v7;
      return MEMORY[0x270FA2498](v9, v10, v11);
    }
    sub_22334283C();
    uint64_t v12 = (void *)swift_allocError();
    swift_willThrow();
    sub_223381530(13, v12, 0, 0);
    uint64_t v13 = &unk_26AD60000;
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    id v14 = *(void **)(v0 + 64);
    sub_223323374(*(void *)(v0 + 88), (uint64_t)qword_26AD63330);
    id v15 = v14;
    id v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C700();
    BOOL v18 = os_log_type_enabled(v16, v17);
    id v19 = *(void **)(v0 + 64);
    if (v18)
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      buf = v20;
      *(_DWORD *)id v20 = 138412290;
      *(void *)(v0 + 48) = v19;
      id v22 = v19;
      sub_22342CA10();
      void *v21 = v19;

      uint64_t v2 = (void *)&unk_26AD63000;
      _os_log_impl(&dword_223317000, v16, v17, "Error updating existing message item: %@", buf, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      uint64_t v13 = (void *)&unk_26AD60000;
      MEMORY[0x223CB62D0](v21, -1, -1);
      MEMORY[0x223CB62D0](buf, -1, -1);
    }
    else
    {
    }
    uint64_t v23 = *(void *)(v0 + 80);
    if (v23)
    {
      uint64_t v24 = v2[31];
      *(void *)(v0 + 192) = v24;
      if (v24)
      {
        uint64_t v25 = qword_26AD63100;
        *(void *)(v0 + 200) = qword_26AD63100;
        if (qword_26AD5F660 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v26 = qword_26AD632E0;
        if (*(void *)(qword_26AD632E0 + 16))
        {
          uint64_t v27 = *(void *)(v0 + 72);
          swift_bridgeObjectRetain();
          unint64_t v28 = sub_22339C2E8(v27, v23);
          if (v29) {
            uint64_t v30 = *(void *)(*(void *)(v26 + 56) + 8 * v28);
          }
          else {
            uint64_t v30 = -1;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v30 = -1;
        }
        *(void *)(v0 + 208) = v30;
        swift_endAccess();
        *(void *)(v0 + 216) = *(void *)(v25 + 72);
        *(void *)(v0 + 224) = (v25 + 72) & 0xFFFFFFFFFFFFLL | 0x6675000000000000;
        if (qword_26AD5EE88 != -1) {
          swift_once();
        }
        sub_22342C5B0();
        uint64_t v5 = sub_22342C560();
        uint64_t v7 = v48;
        uint64_t v8 = sub_2233AE78C;
        goto LABEL_6;
      }
      uint64_t v31 = (void *)swift_allocError();
      swift_willThrow();
      sub_223381530(14, v31, 0, 0);
      if (v13[66] != -1) {
        swift_once();
      }
      uint64_t v33 = *(void *)(v0 + 96);
      uint64_t v32 = *(void *)(v0 + 104);
      uint64_t v34 = *(void *)(v0 + 88);
      uint64_t v35 = *(void **)(v0 + 64);
      uint64_t v36 = sub_223323374(v34, (uint64_t)qword_26AD63330);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v36, v34);
      id v37 = v35;
      os_log_type_t v38 = sub_22342C1E0();
      os_log_type_t v39 = sub_22342C700();
      if (os_log_type_enabled(v38, v39))
      {
        id v61 = v31;
        uint64_t v40 = *(void **)(v0 + 64);
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v62 = v60;
        *(_DWORD *)uint64_t v41 = 136315138;
        id v42 = objc_msgSend(v40, sel_guid);
        if (!v42)
        {

          __break(1u);
          return MEMORY[0x270FA2498](v9, v10, v11);
        }
        uint64_t v43 = v42;
        uint64_t v55 = *(void **)(v0 + 112);
        uint64_t v56 = *(void *)(v0 + 96);
        uint64_t v57 = *(void *)(v0 + 88);
        bufa = *(uint8_t **)(v0 + 104);
        unint64_t v44 = *(void **)(v0 + 64);
        uint64_t v45 = sub_22342C300();
        unint64_t v47 = v46;

        *(void *)(v0 + 40) = sub_22339BC14(v45, v47, &v62);
        sub_22342CA10();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_223317000, v38, v39, "Error re-associating existing message item: %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223CB62D0](v60, -1, -1);
        MEMORY[0x223CB62D0](v41, -1, -1);

        (*(void (**)(uint8_t *, uint64_t))(v56 + 8))(bufa, v57);
      }
      else
      {
        uint64_t v49 = *(void *)(v0 + 104);
        uint64_t v50 = *(void *)(v0 + 88);
        uint64_t v51 = *(void *)(v0 + 96);
        uint64_t v52 = *(void **)(v0 + 64);

        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
      }
    }
    else
    {
    }
  }
  swift_task_dealloc();
  unsigned __int8 v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_2233ADB9C()
{
  (*(void (**)(void))(v0 + 136))(*(void *)(v0 + 112));
  return MEMORY[0x270FA2498](sub_2233ADC10, 0, 0);
}

uint64_t sub_2233ADC10()
{
  uint64_t v63 = v0;
  id v1 = *(void **)(v0 + 112);
  id v2 = objc_msgSend(*(id *)(v0 + 64), sel_notificationIDSTokenURI);
  objc_msgSend(v1, sel_setNotificationIDSTokenURI_, v2);

  uint64_t v3 = &unk_26AD63000;
  uint64_t v4 = qword_26AD630F8;
  *(void *)(v0 + 160) = qword_26AD630F8;
  if (v4)
  {
    uint64_t v5 = qword_26AD63100;
    *(void *)(v0 + 168) = qword_26AD63100;
    *(void *)(v0 + 176) = *(void *)(v5 + 152);
    *(void *)(v0 + 184) = (v5 + 152) & 0xFFFFFFFFFFFFLL | 0xD00E000000000000;
    uint64_t v6 = sub_22342C560();
    uint64_t v8 = v7;
    unint64_t v9 = sub_2233AE2B8;
LABEL_3:
    uint64_t v10 = v9;
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    return MEMORY[0x270FA2498](v10, v11, v12);
  }
  sub_22334283C();
  uint64_t v13 = (void *)swift_allocError();
  swift_willThrow();
  sub_223381530(13, v13, 0, 0);
  id v14 = &unk_26AD60000;
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  id v15 = *(void **)(v0 + 64);
  sub_223323374(*(void *)(v0 + 88), (uint64_t)qword_26AD63330);
  id v16 = v15;
  os_log_type_t v17 = sub_22342C1E0();
  os_log_type_t v18 = sub_22342C700();
  BOOL v19 = os_log_type_enabled(v17, v18);
  id v20 = *(void **)(v0 + 64);
  if (v19)
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v59 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412290;
    *(void *)(v0 + 48) = v20;
    id v22 = v20;
    id v14 = (void *)&unk_26AD60000;
    sub_22342CA10();
    *uint64_t v59 = v20;

    _os_log_impl(&dword_223317000, v17, v18, "Error updating existing message item: %@", v21, 0xCu);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    uint64_t v3 = (void *)&unk_26AD63000;
    MEMORY[0x223CB62D0](v59, -1, -1);
    MEMORY[0x223CB62D0](v21, -1, -1);
  }
  else
  {
  }
  uint64_t v23 = *(void *)(v0 + 80);
  if (v23)
  {
    uint64_t v24 = v3[31];
    *(void *)(v0 + 192) = v24;
    if (v24)
    {
      uint64_t v25 = qword_26AD63100;
      *(void *)(v0 + 200) = qword_26AD63100;
      if (qword_26AD5F660 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v26 = qword_26AD632E0;
      if (*(void *)(qword_26AD632E0 + 16))
      {
        uint64_t v27 = *(void *)(v0 + 72);
        swift_bridgeObjectRetain();
        unint64_t v28 = sub_22339C2E8(v27, v23);
        if (v29) {
          uint64_t v30 = *(void *)(*(void *)(v26 + 56) + 8 * v28);
        }
        else {
          uint64_t v30 = -1;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = -1;
      }
      *(void *)(v0 + 208) = v30;
      swift_endAccess();
      *(void *)(v0 + 216) = *(void *)(v25 + 72);
      *(void *)(v0 + 224) = (v25 + 72) & 0xFFFFFFFFFFFFLL | 0x6675000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      sub_22342C5B0();
      uint64_t v6 = sub_22342C560();
      uint64_t v8 = v48;
      unint64_t v9 = sub_2233AE78C;
      goto LABEL_3;
    }
    uint64_t v31 = (void *)swift_allocError();
    swift_willThrow();
    sub_223381530(14, v31, 0, 0);
    if (v14[66] != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v0 + 96);
    uint64_t v32 = *(void *)(v0 + 104);
    uint64_t v34 = *(void *)(v0 + 88);
    uint64_t v35 = *(void **)(v0 + 64);
    uint64_t v36 = sub_223323374(v34, (uint64_t)qword_26AD63330);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v36, v34);
    id v37 = v35;
    os_log_type_t v38 = sub_22342C1E0();
    os_log_type_t v39 = sub_22342C700();
    if (os_log_type_enabled(v38, v39))
    {
      id v61 = v31;
      uint64_t v40 = *(void **)(v0 + 64);
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v62 = v60;
      *(_DWORD *)uint64_t v41 = 136315138;
      id v42 = objc_msgSend(v40, sel_guid);
      if (!v42)
      {

        __break(1u);
        return MEMORY[0x270FA2498](v10, v11, v12);
      }
      uint64_t v43 = v42;
      uint64_t v55 = *(void **)(v0 + 112);
      uint64_t v56 = *(void *)(v0 + 96);
      uint64_t v57 = *(void *)(v0 + 88);
      uint64_t v58 = *(void *)(v0 + 104);
      unint64_t v44 = *(void **)(v0 + 64);
      uint64_t v45 = sub_22342C300();
      unint64_t v47 = v46;

      *(void *)(v0 + 40) = sub_22339BC14(v45, v47, &v62);
      sub_22342CA10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_223317000, v38, v39, "Error re-associating existing message item: %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v60, -1, -1);
      MEMORY[0x223CB62D0](v41, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v58, v57);
    }
    else
    {
      uint64_t v49 = *(void *)(v0 + 104);
      uint64_t v50 = *(void *)(v0 + 88);
      uint64_t v51 = *(void *)(v0 + 96);
      uint64_t v52 = *(void **)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
    }
  }
  else
  {
  }
  swift_task_dealloc();
  unsigned __int8 v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_2233AE2B8()
{
  (*(void (**)(void))(v0 + 176))();
  return MEMORY[0x270FA2498](sub_2233AE328, 0, 0);
}

uint64_t sub_2233AE328()
{
  uint64_t v45 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1)
  {
    uint64_t v2 = qword_26AD630F8;
    *(void *)(v0 + 192) = qword_26AD630F8;
    if (v2)
    {
      uint64_t v3 = qword_26AD63100;
      *(void *)(v0 + 200) = qword_26AD63100;
      if (qword_26AD5F660 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v4 = qword_26AD632E0;
      if (*(void *)(qword_26AD632E0 + 16))
      {
        uint64_t v5 = *(void *)(v0 + 72);
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_22339C2E8(v5, v1);
        if (v7) {
          uint64_t v8 = *(void *)(*(void *)(v4 + 56) + 8 * v6);
        }
        else {
          uint64_t v8 = -1;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v8 = -1;
      }
      *(void *)(v0 + 208) = v8;
      swift_endAccess();
      *(void *)(v0 + 216) = *(void *)(v3 + 72);
      *(void *)(v0 + 224) = (v3 + 72) & 0xFFFFFFFFFFFFLL | 0x6675000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      sub_22342C5B0();
      uint64_t v26 = sub_22342C560();
      uint64_t v28 = v27;
      char v29 = sub_2233AE78C;
      uint64_t v30 = v26;
      uint64_t v31 = v28;
      return MEMORY[0x270FA2498](v29, v30, v31);
    }
    sub_22334283C();
    unint64_t v9 = (void *)swift_allocError();
    swift_willThrow();
    sub_223381530(14, v9, 0, 0);
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v13 = *(void **)(v0 + 64);
    uint64_t v14 = sub_223323374(v12, (uint64_t)qword_26AD63330);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v14, v12);
    id v15 = v13;
    id v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C700();
    if (os_log_type_enabled(v16, v17))
    {
      id v43 = v9;
      os_log_type_t v18 = *(void **)(v0 + 64);
      BOOL v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v44 = v42;
      *(_DWORD *)BOOL v19 = 136315138;
      id v20 = objc_msgSend(v18, sel_guid);
      if (!v20)
      {

        __break(1u);
        return MEMORY[0x270FA2498](v29, v30, v31);
      }
      uint64_t v21 = v20;
      os_log_type_t v38 = *(void **)(v0 + 112);
      uint64_t v39 = *(void *)(v0 + 96);
      uint64_t v40 = *(void *)(v0 + 88);
      uint64_t v41 = *(void *)(v0 + 104);
      id v22 = *(void **)(v0 + 64);
      uint64_t v23 = sub_22342C300();
      unint64_t v25 = v24;

      *(void *)(v0 + 40) = sub_22339BC14(v23, v25, &v44);
      sub_22342CA10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_223317000, v16, v17, "Error re-associating existing message item: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v42, -1, -1);
      MEMORY[0x223CB62D0](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
    }
    else
    {
      uint64_t v32 = *(void *)(v0 + 104);
      uint64_t v33 = *(void *)(v0 + 88);
      uint64_t v34 = *(void *)(v0 + 96);
      uint64_t v35 = *(void **)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_2233AE78C()
{
  (*(void (**)(void, void, void, void))(v0 + 216))(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 208));
  return MEMORY[0x270FA2498](sub_2233AE808, 0, 0);
}

uint64_t sub_2233AE808()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233AE870(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x270FA2498](sub_2233AE890, 0, 0);
}

uint64_t sub_2233AE890()
{
  uint64_t v1 = (id *)(v0 + 24);
  uint64_t v2 = IMDCreateIMDMessageRecordRefFromIMMessageItem();
  *(void *)(v0 + 32) = v2;
  if (!v2) {
    goto LABEL_13;
  }
  uint64_t v3 = (void *)v2;
  unsigned int v4 = objc_msgSend(*v1, sel_isFromMe);
  id v5 = *v1;
  if (v4) {
    id v6 = objc_msgSend(v5, sel_handle);
  }
  else {
    id v6 = objc_msgSend(v5, sel_sender);
  }
  id v7 = v6;
  if (!v7)
  {

LABEL_13:
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22342C200();
    sub_223323374(v15, (uint64_t)qword_26AD63330);
    id v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C700();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v18 = 0;
      _os_log_impl(&dword_223317000, v16, v17, "Could not get message record ref or handle during IMMessageItem creation", v18, 2u);
      MEMORY[0x223CB62D0](v18, -1, -1);
    }
    goto LABEL_17;
  }
  uint64_t v8 = sub_22342C300();
  uint64_t v10 = v9;

  *(void *)(v0 + 40) = v10;
  *(void *)(v0 + 48) = v8;
  uint64_t v11 = qword_26AD630F8;
  *(void *)(v0 + 56) = qword_26AD630F8;
  if (v11)
  {
    uint64_t v12 = qword_26AD63100;
    *(void *)(v0 + 64) = qword_26AD63100;
    *(void *)(v0 + 72) = *(void *)(v12 + 144);
    *(void *)(v0 + 80) = (v12 + 144) & 0xFFFFFFFFFFFFLL | 0x9C22000000000000;
    if (qword_26AD5EE88 != -1) {
      swift_once();
    }
    *(void *)(v0 + 88) = sub_22342C5B0();
    uint64_t v14 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_2233AECE0, v14, v13);
  }
  sub_22334283C();
  id v20 = (void *)swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_223381530(10, v20, 0, 0);
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_22342C200();
  sub_223323374(v21, (uint64_t)qword_26AD63330);
  id v22 = v20;
  id v23 = v20;
  id v16 = sub_22342C1E0();
  os_log_type_t v24 = sub_22342C700();
  if (os_log_type_enabled(v16, v24))
  {
    log = v16;
    uint64_t v31 = *(void **)(v0 + 32);
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v25 = 138412290;
    id v27 = v20;
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v28;
    sub_22342CA10();
    void *v26 = v28;

    _os_log_impl(&dword_223317000, log, v24, "Could not create IMMessageItem %@", v25, 0xCu);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v26, -1, -1);
    MEMORY[0x223CB62D0](v25, -1, -1);

    goto LABEL_18;
  }

LABEL_17:
LABEL_18:
  BOOL v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_2233AECE0()
{
  *(void *)(v0 + 96) = (*(uint64_t (**)(void, void, void))(v0 + 72))(*(void *)(v0 + 32), *(void *)(v0 + 48), *(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2233AED68, 0, 0);
}

uint64_t sub_2233AED68()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  *(void *)(v0 + 104) = v1;
  if (!v1)
  {

    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22342C200();
    sub_223323374(v6, (uint64_t)qword_26AD63330);
    id v7 = sub_22342C1E0();
    os_log_type_t v8 = sub_22342C700();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void **)(v0 + 32);
    if (v9)
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_223317000, v7, v8, "Nil result message during IMMessageItem creation", v11, 2u);
      MEMORY[0x223CB62D0](v11, -1, -1);
    }

    goto LABEL_16;
  }
  uint64_t v2 = qword_26AD630F8;
  *(void *)(v0 + 112) = qword_26AD630F8;
  if (v2)
  {
    uint64_t v3 = qword_26AD63100;
    *(void *)(v0 + 120) = qword_26AD63100;
    *(void *)(v0 + 128) = *(void *)(v3 + 136);
    *(void *)(v0 + 136) = (v3 + 136) & 0xFFFFFFFFFFFFLL | 0x3082000000000000;
    uint64_t v5 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_2233AF130, v5, v4);
  }
  uint64_t v12 = *(void **)(v0 + 96);
  sub_22334283C();
  uint64_t v13 = (void *)swift_allocError();
  swift_willThrow();

  sub_223381530(10, v13, 0, 0);
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_22342C200();
  sub_223323374(v14, (uint64_t)qword_26AD63330);
  id v15 = v13;
  id v16 = v13;
  id v7 = sub_22342C1E0();
  os_log_type_t v17 = sub_22342C700();
  if (!os_log_type_enabled(v7, v17))
  {

LABEL_16:
    goto LABEL_17;
  }
  os_log_type_t v24 = *(void **)(v0 + 32);
  os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
  BOOL v19 = (void *)swift_slowAlloc();
  *(_DWORD *)os_log_type_t v18 = 138412290;
  id v20 = v13;
  uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
  *(void *)(v0 + 16) = v21;
  sub_22342CA10();
  void *v19 = v21;

  _os_log_impl(&dword_223317000, v7, v17, "Could not create IMMessageItem %@", v18, 0xCu);
  sub_22331E640((uint64_t *)&unk_26AD5F150);
  swift_arrayDestroy();
  MEMORY[0x223CB62D0](v19, -1, -1);
  MEMORY[0x223CB62D0](v18, -1, -1);

LABEL_17:
  id v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_2233AF130()
{
  (*(void (**)(void))(v0 + 128))(*(void *)(v0 + 104));
  return MEMORY[0x270FA2498](sub_2233AF1A4, 0, 0);
}

uint64_t sub_2233AF1A4()
{
  uint64_t v1 = qword_26AD630F8;
  *(void *)(v0 + 144) = qword_26AD630F8;
  if (v1)
  {
    uint64_t v2 = qword_26AD63100;
    *(void *)(v0 + 152) = qword_26AD63100;
    *(void *)(v0 + 160) = *(void *)(v2 + 152);
    *(void *)(v0 + 168) = (v2 + 152) & 0xFFFFFFFFFFFFLL | 0xD00E000000000000;
    uint64_t v4 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_2233AF484, v4, v3);
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 96);
    sub_22334283C();
    uint64_t v6 = (void *)swift_allocError();
    swift_willThrow();

    sub_223381530(10, v6, 0, 0);
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22342C200();
    sub_223323374(v7, (uint64_t)qword_26AD63330);
    id v8 = v6;
    id v9 = v6;
    uint64_t v10 = sub_22342C1E0();
    os_log_type_t v11 = sub_22342C700();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v18 = *(void **)(v0 + 32);
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      id v14 = v6;
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 16) = v15;
      sub_22342CA10();
      void *v13 = v15;

      _os_log_impl(&dword_223317000, v10, v11, "Could not create IMMessageItem %@", v12, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v13, -1, -1);
      MEMORY[0x223CB62D0](v12, -1, -1);
    }
    else
    {
    }
    id v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_2233AF484()
{
  (*(void (**)(void))(v0 + 160))();
  return MEMORY[0x270FA2498](sub_2233AF4F4, 0, 0);
}

uint64_t sub_2233AF4F4()
{
  uint64_t v1 = *(void **)(v0 + 96);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2233AF55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_22342C200();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2233AF620, 0, 0);
}

uint64_t sub_2233AF620()
{
  uint64_t v60 = v0;

  uint64_t v1 = &unk_26AD63000;
  uint64_t v2 = qword_26AD630F8;
  *(void *)(v0 + 112) = qword_26AD630F8;
  if (v2)
  {
    uint64_t v3 = qword_26AD63100;
    *(void *)(v0 + 120) = qword_26AD63100;
    *(void *)(v0 + 128) = *(void *)(v3 + 152);
    *(void *)(v0 + 136) = (v3 + 152) & 0xFFFFFFFFFFFFLL | 0xD00E000000000000;
    if (qword_26AD5EE88 != -1) {
      swift_once();
    }
    sub_22342C5B0();
    uint64_t v4 = sub_22342C560();
    uint64_t v6 = v5;
    uint64_t v7 = sub_2233AFCDC;
LABEL_5:
    id v8 = v7;
    uint64_t v9 = v4;
    uint64_t v10 = v6;
    return MEMORY[0x270FA2498](v8, v9, v10);
  }
  sub_22334283C();
  os_log_type_t v11 = (void *)swift_allocError();
  swift_willThrow();
  sub_223381530(12, v11, 0, 0);
  uint64_t v12 = &unk_26AD60000;
  if (qword_26AD60210 != -1) {
    swift_once();
  }
  sub_223323374(*(void *)(v0 + 88), (uint64_t)qword_26AD63330);
  id v13 = v11;
  id v14 = v11;
  uint64_t v15 = sub_22342C1E0();
  os_log_type_t v16 = sub_22342C700();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v18 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v17 = 138412290;
    id v19 = v11;
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 48) = v20;
    sub_22342CA10();
    void *v18 = v20;
    uint64_t v1 = (void *)&unk_26AD63000;

    _os_log_impl(&dword_223317000, v15, v16, "Could not update stamp: %@", v17, 0xCu);
    sub_22331E640((uint64_t *)&unk_26AD5F150);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    uint64_t v12 = (void *)&unk_26AD60000;
    MEMORY[0x223CB62D0](v21, -1, -1);
    MEMORY[0x223CB62D0](v17, -1, -1);

    uint64_t v22 = *(void *)(v0 + 80);
    if (!v22) {
      goto LABEL_32;
    }
  }
  else
  {

    uint64_t v22 = *(void *)(v0 + 80);
    if (!v22) {
      goto LABEL_32;
    }
  }
  uint64_t v23 = v1[31];
  *(void *)(v0 + 144) = v23;
  if (v23)
  {
    uint64_t v24 = qword_26AD63100;
    *(void *)(v0 + 152) = qword_26AD63100;
    if (qword_26AD5F660 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v25 = qword_26AD632E0;
    if (*(void *)(qword_26AD632E0 + 16))
    {
      uint64_t v26 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_22339C2E8(v26, v22);
      if (v28) {
        uint64_t v29 = *(void *)(*(void *)(v25 + 56) + 8 * v27);
      }
      else {
        uint64_t v29 = -1;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = -1;
    }
    *(void *)(v0 + 160) = v29;
    swift_endAccess();
    *(void *)(v0 + 168) = *(void *)(v24 + 72);
    *(void *)(v0 + 176) = (v24 + 72) & 0xFFFFFFFFFFFFLL | 0x6675000000000000;
    if (qword_26AD5EE88 != -1) {
      swift_once();
    }
    sub_22342C5B0();
    uint64_t v4 = sub_22342C560();
    uint64_t v6 = v47;
    uint64_t v7 = sub_2233B0194;
    goto LABEL_5;
  }
  uint64_t v30 = (void *)swift_allocError();
  swift_willThrow();
  sub_223381530(14, v30, 0, 0);
  if (v12[66] != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)(v0 + 96);
  uint64_t v31 = *(void *)(v0 + 104);
  uint64_t v33 = *(void *)(v0 + 88);
  uint64_t v34 = *(void **)(v0 + 64);
  uint64_t v35 = sub_223323374(v33, (uint64_t)qword_26AD63330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v35, v33);
  id v36 = v34;
  id v37 = sub_22342C1E0();
  os_log_type_t v38 = sub_22342C700();
  if (os_log_type_enabled(v37, v38))
  {
    id v58 = v30;
    uint64_t v39 = *(void **)(v0 + 64);
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t v59 = v57;
    *(_DWORD *)uint64_t v40 = 136315138;
    id v41 = objc_msgSend(v39, sel_guid);
    if (!v41)
    {

      __break(1u);
      return MEMORY[0x270FA2498](v8, v9, v10);
    }
    uint64_t v42 = v41;
    uint64_t v54 = *(void *)(v0 + 96);
    uint64_t v55 = *(void *)(v0 + 88);
    uint64_t v56 = *(void *)(v0 + 104);
    id v43 = *(void **)(v0 + 64);
    uint64_t v44 = sub_22342C300();
    unint64_t v46 = v45;

    *(void *)(v0 + 40) = sub_22339BC14(v44, v46, &v59);
    sub_22342CA10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_223317000, v37, v38, "Error re-associating existing item: %s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223CB62D0](v57, -1, -1);
    MEMORY[0x223CB62D0](v40, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v55);
  }
  else
  {
    uint64_t v49 = *(void *)(v0 + 96);
    uint64_t v48 = *(void *)(v0 + 104);
    uint64_t v50 = *(void *)(v0 + 88);
    uint64_t v51 = *(void **)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  }
LABEL_32:
  swift_task_dealloc();
  uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

uint64_t sub_2233AFCDC()
{
  (*(void (**)(void))(v0 + 128))();
  return MEMORY[0x270FA2498](sub_2233AFD4C, 0, 0);
}

uint64_t sub_2233AFD4C()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1)
  {
    uint64_t v2 = qword_26AD630F8;
    *(void *)(v0 + 144) = qword_26AD630F8;
    if (v2)
    {
      uint64_t v3 = qword_26AD63100;
      *(void *)(v0 + 152) = qword_26AD63100;
      if (qword_26AD5F660 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v4 = qword_26AD632E0;
      if (*(void *)(qword_26AD632E0 + 16))
      {
        uint64_t v5 = *(void *)(v0 + 72);
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_22339C2E8(v5, v1);
        if (v7) {
          uint64_t v8 = *(void *)(*(void *)(v4 + 56) + 8 * v6);
        }
        else {
          uint64_t v8 = -1;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v8 = -1;
      }
      *(void *)(v0 + 160) = v8;
      swift_endAccess();
      *(void *)(v0 + 168) = *(void *)(v3 + 72);
      *(void *)(v0 + 176) = (v3 + 72) & 0xFFFFFFFFFFFFLL | 0x6675000000000000;
      if (qword_26AD5EE88 != -1) {
        swift_once();
      }
      sub_22342C5B0();
      uint64_t v26 = sub_22342C560();
      uint64_t v28 = v27;
      uint64_t v29 = sub_2233B0194;
      uint64_t v30 = v26;
      uint64_t v31 = v28;
      return MEMORY[0x270FA2498](v29, v30, v31);
    }
    sub_22334283C();
    uint64_t v9 = (void *)swift_allocError();
    swift_willThrow();
    sub_223381530(14, v9, 0, 0);
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 88);
    id v13 = *(void **)(v0 + 64);
    uint64_t v14 = sub_223323374(v12, (uint64_t)qword_26AD63330);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v14, v12);
    id v15 = v13;
    os_log_type_t v16 = sub_22342C1E0();
    os_log_type_t v17 = sub_22342C700();
    if (os_log_type_enabled(v16, v17))
    {
      id v42 = v9;
      os_log_type_t v18 = *(void **)(v0 + 64);
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v43 = v41;
      *(_DWORD *)id v19 = 136315138;
      id v20 = objc_msgSend(v18, sel_guid);
      if (!v20)
      {

        __break(1u);
        return MEMORY[0x270FA2498](v29, v30, v31);
      }
      uint64_t v21 = v20;
      uint64_t v38 = *(void *)(v0 + 96);
      uint64_t v39 = *(void *)(v0 + 88);
      uint64_t v40 = *(void *)(v0 + 104);
      uint64_t v22 = *(void **)(v0 + 64);
      uint64_t v23 = sub_22342C300();
      unint64_t v25 = v24;

      *(void *)(v0 + 40) = sub_22339BC14(v23, v25, &v43);
      sub_22342CA10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_223317000, v16, v17, "Error re-associating existing item: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v41, -1, -1);
      MEMORY[0x223CB62D0](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v39);
    }
    else
    {
      uint64_t v32 = *(void *)(v0 + 96);
      uint64_t v33 = *(void *)(v0 + 104);
      uint64_t v34 = *(void *)(v0 + 88);
      uint64_t v35 = *(void **)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    }
  }
  swift_task_dealloc();
  id v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_2233B0194()
{
  (*(void (**)(void, void, void, void))(v0 + 168))(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 160));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233B0210(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x270FA2498](sub_2233B0230, 0, 0);
}

uint64_t sub_2233B0230()
{
  uint64_t v1 = qword_26AD630F8;
  v0[4] = qword_26AD630F8;
  if (v1)
  {
    uint64_t v2 = qword_26AD63100;
    v0[5] = qword_26AD63100;
    v0[6] = *(void *)(v2 + 152);
    v0[7] = (v2 + 152) & 0xFFFFFFFFFFFFLL | 0xD00E000000000000;
    if (qword_26AD5EE88 != -1) {
      swift_once();
    }
    sub_22342C5B0();
    uint64_t v4 = sub_22342C560();
    return MEMORY[0x270FA2498](sub_2233B0540, v4, v3);
  }
  else
  {
    sub_22334283C();
    uint64_t v5 = (void *)swift_allocError();
    swift_willThrow();
    sub_223381530(11, v5, 0, 0);
    if (qword_26AD60210 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22342C200();
    sub_223323374(v6, (uint64_t)qword_26AD63330);
    id v7 = v5;
    id v8 = v5;
    uint64_t v9 = sub_22342C1E0();
    os_log_type_t v10 = sub_22342C700();
    if (os_log_type_enabled(v9, v10))
    {
      log = v9;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      id v13 = v5;
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      v0[2] = v14;
      sub_22342CA10();
      *uint64_t v12 = v14;

      _os_log_impl(&dword_223317000, log, v10, "Could not update stamp: %@", v11, 0xCu);
      sub_22331E640((uint64_t *)&unk_26AD5F150);
      swift_arrayDestroy();
      MEMORY[0x223CB62D0](v12, -1, -1);
      MEMORY[0x223CB62D0](v11, -1, -1);
    }
    else
    {
    }
    id v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_2233B0540()
{
  (*(void (**)(void))(v0 + 48))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2233B05A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, void *a8)
{
  os_log_type_t v10 = a4;
  if (a2)
  {
    uint64_t v11 = (void *)sub_22342C2D0();
    if (!v10) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v11 = 0;
  if (a4) {
LABEL_3:
  }
    os_log_type_t v10 = (void *)sub_22342C2D0();
LABEL_4:
  if (a6) {
    a6 = (void *)sub_22342C2D0();
  }
  if (a8) {
    a8 = (void *)sub_22342C2D0();
  }
  uint64_t v12 = (void *)IMDCopyAttachmentPersistentPath();

  if (!v12) {
    return 0;
  }
  uint64_t v13 = sub_22342C300();

  return v13;
}

uint64_t sub_2233B06A4(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_2233B0768(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_22342BE20();
  swift_allocObject();
  uint64_t result = sub_22342BDE0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2233B07EC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_22342BE20();
  swift_allocObject();
  uint64_t result = sub_22342BDE0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_22342C040();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

void sub_2233B0868(unint64_t a1, unint64_t a2, char a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  if (a3)
  {
    uint64_t v14 = (void *)sub_22342C2D0();
    IMDKVPersistValueForKey();

    id v15 = (id)sub_22342C2D0();
    IMDKVPersistValueForKey();
  }
  else
  {
    unint64_t v16 = bswap64(a1);
    uint64_t v4 = sub_2233AD1F8((uint64_t)&v16, (uint64_t)&v17);
    unint64_t v6 = v5;
    unint64_t v16 = bswap64(a2);
    uint64_t v7 = sub_2233AD1F8((uint64_t)&v16, (uint64_t)&v17);
    unint64_t v9 = v8;
    os_log_type_t v10 = (void *)sub_22342C2D0();
    uint64_t v11 = (void *)sub_22342C050();
    IMDKVPersistValueForKey();

    uint64_t v12 = (void *)sub_22342C2D0();
    uint64_t v13 = (void *)sub_22342C050();
    IMDKVPersistValueForKey();

    sub_22331EA68(v7, v9);
    sub_22331EA68(v4, v6);
  }
}