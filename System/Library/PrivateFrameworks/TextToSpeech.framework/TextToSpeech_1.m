void *sub_1A677A8E4(void *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TTSAURenderer.SynthesisError()
{
  return &type metadata for TTSAURenderer.SynthesisError;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTSAURenderer.SpeechBuffer(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A6891800();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    id v10 = v9;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TTSAURenderer.SpeechBuffer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6891800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTSAURenderer.SpeechBuffer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A6891800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  id v9 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTSAURenderer.SpeechBuffer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A6891800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TTSAURenderer.SpeechBuffer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A6891800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for TTSAURenderer.SpeechBuffer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A6891800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSAURenderer.SpeechBuffer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A677AD10);
}

uint64_t sub_1A677AD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A6891800();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TTSAURenderer.SpeechBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A677ADE4);
}

uint64_t sub_1A677ADE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A6891800();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A677AEA0()
{
  uint64_t result = sub_1A6891800();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1A677AF54()
{
  unint64_t result = qword_1E96C1EE8;
  if (!qword_1E96C1EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C1EE8);
  }
  return result;
}

uint64_t sub_1A677AFA8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A677AFE0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(result + 80);
    v5[3] = sub_1A6741AD0(&qword_1E96C1EF8);
    v5[4] = sub_1A6766A64(&qword_1E96C1F00, &qword_1E96C1EF8);
    v5[0] = a1;
    uint64_t v4 = *(void (**)(void *))(*(void *)v3 + 144);
    swift_bridgeObjectRetain();
    v4(v5);
    swift_release();
    return sub_1A6741A24((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1A677B0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A677B0D4()
{
  return swift_release();
}

uint64_t sub_1A677B0DC()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A677B11C()
{
  unint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(unsigned int *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  int v15 = 64;
  id v5 = objc_msgSend(v1, sel_renderBlock, 0, 0, 0, 0, 0, 0, 0, 0);
  int v6 = (*((uint64_t (**)(id, int *, long long *, uint64_t, void, id, void))v5 + 2))(v5, &v15, &v14, v2, 0, objc_msgSend(v4, sel_mutableAudioBufferList), 0);
  _Block_release(v5);
  if (v6 != sub_1A6891D00() || (int v7 = v15, (v15 & 0x100) != 0))
  {
    sub_1A677AF54();
    uint64_t v11 = swift_allocError();
    void *v12 = 2;
    sub_1A6741AD0(&qword_1E96C1520);
    swift_allocError();
    uint64_t *v13 = v11;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    objc_msgSend(v4, sel_setFrameLength_, v2);
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    *(_DWORD *)uint64_t v8 = v7;
    *(void *)(v8 + 8) = v4;
    id v9 = v4;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1A677B280(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A677B2C8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A677B300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v7 = objc_msgSend(*(id *)(v5 + 16), sel_audioBufferList);
  uint64_t v8 = v7[2];
  *(_OWORD *)a5 = *(_OWORD *)v7;
  *(void *)(a5 + 16) = v8;
  return sub_1A6891D00();
}

uint64_t sub_1A677B344(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTSAURenderer.SpeechBuffer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A677B3A0()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A677B3E0()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A6750954;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_1E96C1F28 + dword_1E96C1F28);
  return v5(v2, v3);
}

uint64_t sub_1A677B498()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  int v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1E96C3110 + dword_1E96C3110);
  return v6(v2, v3, v4);
}

uint64_t sub_1A677B55C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A677B59C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  int v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A677B9EC;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E96C3120 + dword_1E96C3120);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1A677B668(uint64_t a1)
{
  uint64_t v2 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A677B6C8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A677B700(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A677B9EC;
  int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96C3130 + dword_1E96C3130);
  return v6(a1, v4);
}

unint64_t sub_1A677B7B8()
{
  unint64_t result = qword_1E96C1F58;
  if (!qword_1E96C1F58)
  {
    sub_1A67501D4(255, &qword_1E96C3170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C1F58);
  }
  return result;
}

void type metadata accessor for AudioUnitRenderActionFlags()
{
  if (!qword_1E96C1F60)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E96C1F60);
    }
  }
}

uint64_t sub_1A677B86C()
{
  return sub_1A677B99C(&qword_1E96C1F68, 255, (void (*)(uint64_t))type metadata accessor for AudioUnitRenderActionFlags);
}

uint64_t sub_1A677B8B8()
{
  return sub_1A677B99C(&qword_1E96C1F70, 255, (void (*)(uint64_t))type metadata accessor for AudioUnitRenderActionFlags);
}

uint64_t sub_1A677B904()
{
  return sub_1A677B99C(&qword_1E96C1F78, 255, (void (*)(uint64_t))type metadata accessor for AudioUnitRenderActionFlags);
}

uint64_t sub_1A677B950()
{
  return sub_1A677B99C(&qword_1E96C1F80, 255, (void (*)(uint64_t))type metadata accessor for AudioUnitRenderActionFlags);
}

uint64_t sub_1A677B99C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A677BA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1A6741AD0(&qword_1E96C1F88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689F130;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = &type metadata for TTSMarkup.SpeechDocument;
  *(void *)(inited + 48) = &protocol witness table for TTSMarkup.SpeechDocument;
  *(unsigned char *)(inited + 56) = 15;
  *(void *)(inited + 64) = &type metadata for TTSMarkup.SpeechText;
  *(void *)(inited + 72) = &protocol witness table for TTSMarkup.SpeechText;
  *(unsigned char *)(inited + 80) = 11;
  *(void *)(inited + 88) = &type metadata for TTSMarkup.Pause;
  *(void *)(inited + 96) = &protocol witness table for TTSMarkup.Pause;
  *(unsigned char *)(inited + 104) = 3;
  *(void *)(inited + 112) = &type metadata for TTSMarkup.Audio;
  *(void *)(inited + 120) = &protocol witness table for TTSMarkup.Audio;
  *(unsigned char *)(inited + 128) = 10;
  *(void *)(inited + 136) = &type metadata for TTSMarkup.Emphasis;
  *(void *)(inited + 144) = &protocol witness table for TTSMarkup.Emphasis;
  *(unsigned char *)(inited + 152) = 9;
  *(void *)(inited + 160) = &type metadata for TTSMarkup.Language;
  *(void *)(inited + 168) = &protocol witness table for TTSMarkup.Language;
  *(unsigned char *)(inited + 176) = 12;
  *(void *)(inited + 184) = &type metadata for TTSMarkup.Mark;
  *(void *)(inited + 192) = &protocol witness table for TTSMarkup.Mark;
  *(unsigned char *)(inited + 200) = 5;
  *(void *)(inited + 208) = &type metadata for TTSMarkup.Paragraph;
  *(void *)(inited + 216) = &protocol witness table for TTSMarkup.Paragraph;
  *(unsigned char *)(inited + 224) = 4;
  *(void *)(inited + 232) = &type metadata for TTSMarkup.Phoneme;
  *(void *)(inited + 240) = &protocol witness table for TTSMarkup.Phoneme;
  *(unsigned char *)(inited + 248) = 2;
  *(void *)(inited + 256) = &type metadata for TTSMarkup.Prosody;
  *(void *)(inited + 264) = &protocol witness table for TTSMarkup.Prosody;
  *(unsigned char *)(inited + 272) = 1;
  *(void *)(inited + 280) = &type metadata for TTSMarkup.SayAs;
  *(void *)(inited + 288) = &protocol witness table for TTSMarkup.SayAs;
  *(unsigned char *)(inited + 296) = 6;
  *(void *)(inited + 304) = &type metadata for TTSMarkup.Sentence;
  *(void *)(inited + 312) = &protocol witness table for TTSMarkup.Sentence;
  *(unsigned char *)(inited + 320) = 7;
  *(void *)(inited + 328) = &type metadata for TTSMarkup.Sub;
  *(void *)(inited + 336) = &protocol witness table for TTSMarkup.Sub;
  *(unsigned char *)(inited + 344) = 8;
  *(void *)(inited + 352) = &type metadata for TTSMarkup.Voice;
  *(void *)(inited + 360) = &protocol witness table for TTSMarkup.Voice;
  *(unsigned char *)(inited + 368) = 13;
  *(void *)(inited + 376) = &type metadata for TTSMarkup.GenericSpeechElement;
  *(void *)(inited + 384) = &protocol witness table for TTSMarkup.GenericSpeechElement;
  unint64_t v5 = sub_1A677BDF0(inited);
  (*(void (**)(unsigned __int8 *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xB8))(v20);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1A677BEFC(v20[0]), (v7 & 1) != 0))
  {
    long long v19 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = *((void *)&v19 + 1);
    id v9 = *(void (**)(void *, uint64_t, uint64_t))(*((void *)&v19 + 1) + 88);
    uint64_t v10 = v19;
    uint64_t v11 = sub_1A6892A00();
    v18[1] = v18;
    uint64_t v12 = *(void *)(v11 - 8);
    MEMORY[0x1F4188790](v11);
    long long v14 = (char *)v18 - v13;
    v9(v2, v10, v8);
    uint64_t v15 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v10) != 1)
    {
      *(_OWORD *)(a1 + 24) = v19;
      v17 = sub_1A675026C((uint64_t *)a1);
      return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v17, v14, v10);
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t sub_1A677BDF0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A6741AD0(&qword_1E96C1F98);
  uint64_t v2 = (void *)sub_1A6892EF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    long long v11 = *v4;
    unint64_t result = sub_1A677BEFC(v5);
    if (v7) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      goto LABEL_11;
    }
    v2[2] = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A677BEFC(uint64_t a1)
{
  sub_1A677BF68();
  uint64_t v2 = sub_1A6891F10();
  return sub_1A677BFBC(a1, v2);
}

unint64_t sub_1A677BF68()
{
  unint64_t result = qword_1E96C1F90;
  if (!qword_1E96C1F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C1F90);
  }
  return result;
}

unint64_t sub_1A677BFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_1A673E680();
    do
    {
      if (sub_1A6891FC0()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A677C084()
{
  return 32;
}

Swift::Void __swiftcall Array.printByIndex(delimiter:)(Swift::String delimiter)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  Swift::String v32 = delimiter;
  uint64_t v5 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](delimiter._countAndFlagsBits);
  v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v37 = sub_1A6892A00();
  uint64_t v8 = *(void *)(v37 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v37);
  v36 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v41 = v4;
  uint64_t v33 = v3;
  uint64_t v13 = sub_1A68923C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1AD0BF320](&v38, v13, WitnessTable);
  uint64_t v40 = v38;
  sub_1A6892EA0();
  sub_1A6892E70();
  uint64_t v15 = sub_1A6892E90();
  v16 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v34 = TupleTypeMetadata2 - 8;
  uint64_t v35 = v15;
  v17 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v29 = 0x80000001A68CD550;
  v30 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v28 = 0x80000001A68CD5C0;
  v18 = v31;
  for (uint64_t i = v33; ; (*v17)(v18, i))
  {
    v20 = v36;
    sub_1A6892E80();
    (*v16)(v12, v20, v37);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)break; {
    uint64_t v21 = *(void *)v12;
    }
    (*v30)(v18, &v12[*(int *)(TupleTypeMetadata2 + 48)], i);
    int v22 = sub_1A6892840();
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_1A6892150();
    uint64_t v40 = v21;
    sub_1A68930E0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    sub_1A6892150();
    sub_1A6893110();
    uint64_t v23 = v38;
    uint64_t v24 = v39;
    id v25 = sub_1A67CC544();
    char v26 = sub_1A67BBF28();
    sub_1A67CC5A0(v22, (uint64_t)v25, v26 & 1, 0xD00000000000006BLL, v29, 0xD000000000000018, v28, v23, v24, MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PlainStringWriter()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A677C46C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 88))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A677C4B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 96);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1A677C520()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A677C56C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A677C5C0())()
{
  return j__swift_endAccess;
}

uint64_t StringStream.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0xE000000000000000;
  return result;
}

uint64_t StringStream.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  return result;
}

uint64_t sub_1A677C650()
{
  uint64_t v1 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v0 + 104))(v3);
  sub_1A6892150();
  return v1(v3, 0);
}

uint64_t StringStream.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StringStream.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1A677C740()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t type metadata accessor for StringStream()
{
  return self;
}

uint64_t method lookup function for StringStream(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StringStream);
}

uint64_t dispatch thunk of StringStream.string.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of StringStream.string.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of StringStream.string.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of StringStream.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of StringStream.write(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1A677C868()
{
  return sub_1A6892530();
}

unint64_t sub_1A677C8A8()
{
  unint64_t result = qword_1EB67A340;
  if (!qword_1EB67A340)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB67A340);
  }
  return result;
}

uint64_t sub_1A677C8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1A677C940(a1, a2, a3);
  return v6;
}

uint64_t sub_1A677C940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v37 = a3;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v45 = sub_1A6741AD0(&qword_1E96C1FB0);
  uint64_t v5 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  char v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1A6741AD0(&qword_1E96C1FA0);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  v43 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C1FB8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v36 = (char *)&v35 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v41 = OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizerQueue;
  unint64_t v40 = sub_1A677C8A8();
  uint64_t v16 = sub_1A6891E10();
  MEMORY[0x1F4188790](v16 - 8);
  sub_1A6891E00();
  uint64_t v17 = sub_1A6892890();
  MEMORY[0x1F4188790](v17);
  uint64_t v48 = MEMORY[0x1E4FBC860];
  sub_1A677E1F0((unint64_t *)&unk_1EB67A330, MEMORY[0x1F41AB0F8]);
  sub_1A6741AD0(&qword_1EB67A2B0);
  sub_1A6766A64(&qword_1EB67A2B8, &qword_1EB67A2B0);
  sub_1A6892B90();
  uint64_t v18 = sub_1A68928A0();
  MEMORY[0x1F4188790](v18);
  (*(void (**)(char *, void))(v20 + 104))((char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50]);
  *(void *)(v3 + v41) = sub_1A68928D0();
  uint64_t v21 = v3 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_continuation;
  uint64_t v22 = sub_1A6741AD0(&qword_1E96C1FA8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v24(v21, 1, 1, v22);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_shouldContinue) = 1;
  v24((uint64_t)v15, 1, 1, v22);
  v47 = v15;
  sub_1A6741AD0(&qword_1E96C1FC0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBD028], v45);
  id v25 = v43;
  uint64_t v26 = (uint64_t)v42;
  sub_1A6892570();
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v4 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_stream, v25, v46);
  sub_1A677D060((uint64_t)v15, v26);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v26, 1, v22);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v28 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v36, v26, v22);
    v24(v28, 0, 1, v22);
    swift_beginAccess();
    sub_1A677D0C8(v28, v21);
    swift_endAccess();
    id v29 = objc_allocWithZone(MEMORY[0x1E4F38900]);
    id v30 = objc_msgSend(v29, sel_initWithUnit_, v37);
    *(void *)(v4 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizer) = v30;
    v31 = (void *)(v4 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_string);
    uint64_t v32 = v39;
    void *v31 = v38;
    v31[1] = v32;
    swift_bridgeObjectRetain();
    id v33 = v30;
    uint64_t v34 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setString_, v34);

    sub_1A677D6B0();
    sub_1A6750210((uint64_t)v15, &qword_1E96C1FB8);
    return v4;
  }
  return result;
}

uint64_t sub_1A677CF90(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1A6750210(v3, &qword_1E96C1FB8);
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1FA8);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(v3, 0, 1, v4);
}

uint64_t sub_1A677D060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A677D0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t StreamingTokenizer.deinit()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_shouldContinue) = 0;
  uint64_t v1 = OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizerQueue;
  uint64_t v2 = *(NSObject **)(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizerQueue);
  v7[4] = nullsub_19;
  v7[5] = 0;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1A677D2AC;
  v7[3] = &unk_1EFB80848;
  uint64_t v3 = _Block_copy(v7);
  swift_release();
  dispatch_sync(v2, v3);
  _Block_release(v3);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_stream;
    uint64_t v6 = sub_1A6741AD0(&qword_1E96C1FA0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

    sub_1A6750210(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_continuation, &qword_1E96C1FB8);
    swift_bridgeObjectRelease();
    return v0;
  }
  return result;
}

uint64_t sub_1A677D2AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t StreamingTokenizer.__deallocating_deinit()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_shouldContinue) = 0;
  uint64_t v1 = OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizerQueue;
  uint64_t v2 = *(NSObject **)(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizerQueue);
  v7[4] = nullsub_19;
  v7[5] = 0;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1A677D2AC;
  v7[3] = &unk_1EFB7E9F8;
  uint64_t v3 = _Block_copy(v7);
  swift_release();
  dispatch_sync(v2, v3);
  _Block_release(v3);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_stream;
    uint64_t v6 = sub_1A6741AD0(&qword_1E96C1FA0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

    sub_1A6750210(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_continuation, &qword_1E96C1FB8);
    swift_bridgeObjectRelease();
    return swift_deallocClassInstance();
  }
  return result;
}

uint64_t sub_1A677D480()
{
  uint64_t v1 = sub_1A6741AD0(&qword_1E96C1FA8);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C1FB8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v13[-v9];
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_shouldContinue) = 0;
  uint64_t v11 = v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_continuation;
  swift_beginAccess();
  sub_1A677D060(v11, (uint64_t)v10);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1))
  {
    sub_1A6750210((uint64_t)v10, &qword_1E96C1FB8);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v10, v1);
    sub_1A6750210((uint64_t)v10, &qword_1E96C1FB8);
    sub_1A6892500();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v8, 1, 1, v1);
  swift_beginAccess();
  sub_1A677D0C8((uint64_t)v8, v11);
  return swift_endAccess();
}

uint64_t sub_1A677D6B0()
{
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizerQueue);
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1A677E1E8;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A677469C;
  aBlock[3] = &unk_1EFB7E9A8;
  uint64_t v2 = _Block_copy(aBlock);
  uint64_t v12 = sub_1A6891E10();
  uint64_t v3 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1A6891DF0();
  uint64_t v6 = sub_1A6891DE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1A677E1F0((unint64_t *)&qword_1E96C1600, MEMORY[0x1F41AAF48]);
  sub_1A6741AD0(&qword_1E96C1618);
  sub_1A6766A64((unint64_t *)&unk_1E96C1620, &qword_1E96C1618);
  sub_1A6892B90();
  MEMORY[0x1AD0BF980](0, v5, v9, v2);
  _Block_release(v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_1A677D974(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A677D984()
{
  return swift_release();
}

uint64_t sub_1A677D98C()
{
  return sub_1A6766A64(&qword_1E96C1FC8, &qword_1E96C1FD0);
}

uint64_t sub_1A677D9C8()
{
  uint64_t v0 = sub_1A6741AD0(&qword_1E96C1FA8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1FB8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    id v9 = *(id *)(result + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_tokenizer);
    sub_1A6892820();

    uint64_t v10 = v8 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_continuation;
    swift_beginAccess();
    sub_1A677D060(v10, (uint64_t)v6);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
    {
      swift_release();
      return sub_1A6750210((uint64_t)v6, &qword_1E96C1FB8);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v6, v0);
      sub_1A6750210((uint64_t)v6, &qword_1E96C1FB8);
      sub_1A6892500();
      swift_release();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
  return result;
}

uint64_t sub_1A677DC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C1FA8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C1FB8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A6741AD0(&qword_1E96C1FE8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a3 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_continuation;
  swift_beginAccess();
  sub_1A677D060(v16, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_1A6750210((uint64_t)v12, &qword_1E96C1FB8);
    uint64_t v17 = sub_1A6741AD0((uint64_t *)&unk_1E96C1FF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_1A6750210((uint64_t)v12, &qword_1E96C1FB8);
    uint64_t v18 = sub_1A6892240();
    v24[1] = a1;
    v24[2] = a2;
    v24[3] = v18;
    v24[4] = v19;
    v24[5] = v20;
    v24[6] = v21;
    sub_1A68924F0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v22 = sub_1A6741AD0((uint64_t *)&unk_1E96C1FF0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 0, 1, v22);
  }
  sub_1A6750210((uint64_t)v15, &qword_1E96C1FE8);
  return *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC12TextToSpeech18StreamingTokenizer_shouldContinue);
}

uint64_t sub_1A677DF10()
{
  (*(void (**)(void))(**(void **)v0 + 128))();

  return swift_release();
}

uint64_t sub_1A677DF68()
{
  return type metadata accessor for StreamingTokenizer();
}

uint64_t type metadata accessor for StreamingTokenizer()
{
  uint64_t result = qword_1E96C6E60;
  if (!qword_1E96C6E60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A677DFBC()
{
  sub_1A677E150(319, &qword_1E96C1FD8, &qword_1E96C1FC0, MEMORY[0x1E4FBD060]);
  if (v0 <= 0x3F)
  {
    sub_1A677E150(319, &qword_1E96C1FE0, &qword_1E96C1FA8, MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for StreamingTokenizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StreamingTokenizer);
}

uint64_t dispatch thunk of StreamingTokenizer.makeAsyncIterator()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of StreamingTokenizer.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

void sub_1A677E150(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_1A6750AC4(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1A677E1B0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A677E1E8()
{
  return sub_1A677D9C8();
}

uint64_t sub_1A677E1F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A677E238(uint64_t a1, uint64_t a2)
{
  return sub_1A677DC38(a1, a2, v2);
}

uint64_t BufferedAudioQueue.executor.getter()
{
  return swift_retain();
}

uint64_t sub_1A677E258()
{
  swift_beginAccess();
  return *(unsigned int *)(v0 + 32);
}

uint64_t sub_1A677E28C(int a1)
{
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_1A677E2CC())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A677E320()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_1A677E354(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_1A677E394())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A677E3E8()
{
  swift_beginAccess();
  return *(unsigned int *)(v0 + 48);
}

uint64_t sub_1A677E41C(int a1)
{
  uint64_t v3 = swift_beginAccess();
  v1[12] = a1;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 144))(v3);
  if (result)
  {
    unsigned int v5 = v1[12];
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v1 + 120))();
    if (v5 < result)
    {
      swift_continuation_throwingResume();
      return (*(uint64_t (**)(void))(*(void *)v1 + 152))(0);
    }
  }
  return result;
}

uint64_t (*sub_1A677E4F0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A677E548;
}

uint64_t sub_1A677E548(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 24) + 144))(result);
    if (result)
    {
      unsigned int v5 = *(_DWORD **)(a1 + 24);
      unsigned int v6 = v5[12];
      uint64_t result = (*(uint64_t (**)(void))(*(void *)v5 + 120))();
      if (v6 < result)
      {
        uint64_t v7 = *(void *)(a1 + 24);
        swift_continuation_throwingResume();
        return (*(uint64_t (**)(void))(*(void *)v7 + 152))(0);
      }
    }
  }
  return result;
}

uint64_t sub_1A677E620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  type metadata accessor for BufferedAudioQueue();
  v4[16] = sub_1A677F978(&qword_1E96C2000, v5, (void (*)(uint64_t))type metadata accessor for BufferedAudioQueue);
  uint64_t v7 = sub_1A68923E0();
  v4[17] = v7;
  v4[18] = v6;
  return MEMORY[0x1F4188298](sub_1A677E6DC, v7, v6);
}

uint64_t sub_1A677E6DC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  unsigned int v2 = (*(uint64_t (**)(void))(*(void *)v1 + 168))();
  if (v2 >= (*(unsigned int (**)(void))(*(void *)v1 + 120))())
  {
    uint64_t v17 = swift_task_alloc();
    *(void *)(v0 + 152) = v17;
    *(_OWORD *)(v17 + 16) = *(_OWORD *)(v0 + 104);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v18;
    void *v18 = v0;
    v18[1] = sub_1A677E9B8;
    return MEMORY[0x1F4188148]();
  }
  uint64_t v3 = *(void *)(v0 + 120);
  unsigned int v4 = objc_msgSend(*(id *)(v0 + 96), sel_frameLength);
  uint64_t v5 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(*(void *)v3 + 184))(v0 + 64);
  if (__CFADD__(*v6, v4))
  {
    __break(1u);
    return MEMORY[0x1F4188148]();
  }
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v9 = *(void **)(v0 + 96);
  uint64_t v10 = *(void *)(v0 + 104);
  *v6 += v4;
  v5(v0 + 64, 0);
  uint64_t v11 = *(void **)(v7 + 24);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v10;
  v12[3] = v8;
  v12[4] = v7;
  v12[5] = v9;
  *(void *)(v0 + 48) = sub_1A677F2BC;
  *(void *)(v0 + 56) = v12;
  *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1A677F400;
  *(void *)(v0 + 40) = &unk_1EFB80870;
  uint64_t v13 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_retain();
  id v14 = v9;
  swift_release();
  objc_msgSend(v11, sel_playBuffer_completionHandler_, v14, v13);
  _Block_release(v13);
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1A677E9B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x1F4188298](sub_1A677EAFC, v3, v2);
}

void (*sub_1A677EAFC())(uint64_t, void)
{
  uint64_t v1 = *(void *)(v0 + 120);
  unsigned int v2 = objc_msgSend(*(id *)(v0 + 96), sel_frameLength);
  uint64_t result = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(*(void *)v1 + 184))(v0 + 64);
  if (__CFADD__(*v4, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v7 = *(void **)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    *v4 += v2;
    result(v0 + 64, 0);
    uint64_t v9 = *(void **)(v5 + 24);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v8;
    v10[3] = v6;
    v10[4] = v5;
    v10[5] = v7;
    *(void *)(v0 + 48) = sub_1A677F2BC;
    *(void *)(v0 + 56) = v10;
    *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_1A677F400;
    *(void *)(v0 + 40) = &unk_1EFB80870;
    uint64_t v11 = _Block_copy((const void *)(v0 + 16));
    swift_retain();
    swift_retain();
    id v12 = v7;
    swift_release();
    objc_msgSend(v9, sel_playBuffer_completionHandler_, v12, v11);
    _Block_release(v11);
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return (void (*)(uint64_t, void))v13();
  }
  return result;
}

uint64_t type metadata accessor for BufferedAudioQueue()
{
  return self;
}

uint64_t sub_1A677ECD0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a2;
  sub_1A677F978(&qword_1E96C2000, a2, (void (*)(uint64_t))type metadata accessor for BufferedAudioQueue);
  if (a2)
  {
    swift_getObjectType();
    uint64_t v4 = sub_1A68923E0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  return MEMORY[0x1F4188298](sub_1A677ED94, v4, v6);
}

uint64_t sub_1A677ED94()
{
  uint64_t v1 = v0[10];
  v0[2] = v0;
  v0[3] = sub_1A677EE48;
  uint64_t v2 = swift_continuation_init();
  (*(void (**)(uint64_t))(*(void *)v1 + 152))(v2);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A677EE48()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 8);
  return v1();
}

uint64_t sub_1A677EF24()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A6750954;
  return sub_1A677ECD0((uint64_t)v2, v0);
}

uint64_t sub_1A677EFB4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1A677EFE0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  id v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v24 - v13;
  a2(a1);
  uint64_t v15 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = sub_1A68924A0();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v14, 1, 1, v17);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = a5;
  sub_1A677F910((uint64_t)v14, (uint64_t)v12);
  LODWORD(v15) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17);
  swift_retain();
  swift_retain();
  id v20 = a5;
  if (v15 == 1)
  {
    sub_1A677B668((uint64_t)v12);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v17);
  }
  uint64_t v21 = sub_1A677F978((unint64_t *)&qword_1E96C16A0, 255, (void (*)(uint64_t))type metadata accessor for TTSExecutor);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = &unk_1E96C2030;
  *(void *)(v22 + 24) = v19;
  v24[1] = 6;
  v24[2] = 0;
  v24[3] = v16;
  v24[4] = v21;
  swift_task_create();
  swift_release();
  return sub_1A677B668((uint64_t)v14);
}

uint64_t sub_1A677F274()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A677F2BC(uint64_t a1)
{
  return sub_1A677EFE0(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1A677F2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  unint64_t v4 = (*(void *)a2 + 200) & 0xFFFFFFFFFFFFLL | 0xFF3A000000000000;
  v3[4] = *(void *)(*(void *)a2 + 200);
  v3[5] = v4;
  type metadata accessor for BufferedAudioQueue();
  sub_1A677F978(&qword_1E96C2000, v5, (void (*)(uint64_t))type metadata accessor for BufferedAudioQueue);
  uint64_t v7 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A677F39C, v7, v6);
}

uint64_t sub_1A677F39C()
{
  (*(void (**)(void))(v0 + 32))(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A677F400(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1A677F454(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A677F464()
{
  return swift_release();
}

uint64_t (*sub_1A677F46C(void *a1))(unsigned char *, void)
{
  unsigned int v2 = objc_msgSend(a1, sel_frameLength);
  uint64_t result = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 184))(v5);
  if (*v4 < v2)
  {
    __break(1u);
  }
  else
  {
    *v4 -= v2;
    return (uint64_t (*)(unsigned char *, void))result(v5, 0);
  }
  return result;
}

uint64_t BufferedAudioQueue.__allocating_init(queue:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  type metadata accessor for TTSExecutor();
  uint64_t v3 = TTSExecutor.__allocating_init()();
  *(_DWORD *)(v2 + 32) = 441000;
  *(void *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 48) = 0;
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = a1;
  return v2;
}

uint64_t BufferedAudioQueue.init(queue:)(uint64_t a1)
{
  type metadata accessor for TTSExecutor();
  uint64_t v3 = TTSExecutor.__allocating_init()();
  *(_DWORD *)(v1 + 32) = 441000;
  *(void *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = a1;
  return v1;
}

uint64_t BufferedAudioQueue.deinit()
{
  swift_release();

  return v0;
}

uint64_t BufferedAudioQueue.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A677F628()
{
  uint64_t v0 = type metadata accessor for BufferedAudioQueue();
  uint64_t v2 = sub_1A677F978(&qword_1E96C2020, v1, (void (*)(uint64_t))type metadata accessor for BufferedAudioQueue);

  return TTSActor.unownedExecutor.getter(v0, v2);
}

uint64_t sub_1A677F698(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A677F978(&qword_1E96C2000, a2, (void (*)(uint64_t))type metadata accessor for BufferedAudioQueue);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t method lookup function for BufferedAudioQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BufferedAudioQueue);
}

uint64_t dispatch thunk of BufferedAudioQueue.play(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 192)
                                                          + **(int **)(*(void *)v3 + 192));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1A6750954;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of BufferedAudioQueue.__allocating_init(queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_1A677F838()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A677F878()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A677B9EC;
  return sub_1A677F2C8((uint64_t)v4, v2, v3);
}

uint64_t sub_1A677F910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A677F978(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A677F9C0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A677F9F8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96C30D0 + dword_1E96C30D0);
  return v6(a1, v4);
}

uint64_t sub_1A677FAB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A677FAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  id v12 = (char *)&v18 - v11;
  MEMORY[0x1F4188790](v10);
  (*(void (**)(char *))(v14 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1A677FCE0(a1, (uint64_t)v12, a2);
  if (v2)
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v9, v12, v5);
    if (sub_1A6893100())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v17, v9, v5);
    }
  }
  return result;
}

uint64_t sub_1A677FCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t DefaultVoiceSource.executor.getter()
{
  return swift_retain();
}

id sub_1A677FDB8()
{
  type metadata accessor for DefaultVoiceSource();
  swift_allocObject();
  id result = DefaultVoiceSource.init()();
  qword_1EB67A9F8 = (uint64_t)result;
  return result;
}

id DefaultVoiceSource.__allocating_init()()
{
  return DefaultVoiceSource.init()();
}

uint64_t *sub_1A677FE2C()
{
  if (qword_1EB67AA00 != -1) {
    swift_once();
  }
  return &qword_1EB67A9F8;
}

uint64_t static DefaultVoiceSource.shared.getter()
{
  if (qword_1EB67AA00 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1A677FED4()
{
  uint64_t v0 = *(uint64_t (**)(uint64_t))(*(void *)*sub_1A6811510() + 168);
  uint64_t v1 = swift_retain();
  uint64_t v2 = v0(v1);
  swift_release();
  return v2;
}

id DefaultVoiceSource.init()()
{
  uint64_t v1 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  v47 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v46 = (char *)&v41 - v4;
  uint64_t v5 = sub_1A6741AD0(&qword_1EB67A2D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2E0);
  uint64_t v51 = *(void *)(v43 - 8);
  uint64_t v45 = *(void *)(v51 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v43);
  uint64_t v44 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_1A6741AD0(&qword_1EB67A308);
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - v17;
  type metadata accessor for TTSExecutor();
  swift_retain();
  *((void *)v0 + 2) = TTSExecutor.__allocating_init()();
  uint64_t v19 = OBJC_IVAR____TtC12TextToSpeech18DefaultVoiceSource_debouncer;
  type metadata accessor for Debouncer();
  *(void *)&v0[v19] = sub_1A68009E0(0.25);
  sub_1A6741AD0(&qword_1EB67A1C0);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBD028], v5);
  sub_1A68924B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v42 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  uint64_t v20 = v43;
  v42(&v0[OBJC_IVAR____TtC12TextToSpeech18DefaultVoiceSource_streamContinuation], v12, v43);
  sub_1A6741AD0(&qword_1EB67A288);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v48 = v18;
  uint64_t v49 = v13;
  v21(v16, v18, v13);
  *((void *)v0 + 3) = StreamCachedValue.__allocating_init(stream:recomputeBlock:)((uint64_t)v16, 0, 0);
  swift_release();
  uint64_t v22 = (objc_class *)type metadata accessor for DefaultVoiceSource();
  v57.receiver = v0;
  v57.super_class = v22;
  id v23 = objc_msgSendSuper2(&v57, sel_init);
  uint64_t v24 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v41 = *v24;
  uint64_t v25 = sub_1A68924A0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v46, 1, 1, v25);
  uint64_t v28 = v44;
  v50 = v12;
  id v29 = v12;
  uint64_t v30 = v51;
  v42(v44, v29, v20);
  uint64_t v31 = (uint64_t)v47;
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = v20;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v23;
  uint64_t v35 = v28;
  uint64_t v36 = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v34 + v32, v35, v33);
  sub_1A6780A34(v27, v31);
  LODWORD(v27) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v31, 1, v25);
  id v37 = v23;
  swift_retain();
  if (v27 == 1)
  {
    sub_1A677B668(v31);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v31, v25);
  }
  uint64_t v38 = sub_1A67843AC((unint64_t *)&qword_1E96C16A0, (void (*)(uint64_t))type metadata accessor for TTSExecutor);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = &unk_1E96C2048;
  *(void *)(v39 + 24) = v34;
  uint64_t v53 = 6;
  uint64_t v54 = 0;
  uint64_t v55 = v36;
  uint64_t v56 = v38;
  swift_task_create();

  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v50, v33);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v49);
  return v37;
}

uint64_t type metadata accessor for DefaultVoiceSource()
{
  uint64_t result = qword_1EB67AA20;
  if (!qword_1EB67AA20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A67805A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  uint64_t v4 = sub_1A6741AD0(&qword_1EB67A2D0);
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A678066C, 0, 0);
}

uint64_t sub_1A678066C()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v15 = v0[10];
  id v4 = objc_msgSend(self, sel_sharedInstance);
  objc_msgSend(v4, sel_addObserver_, v3);

  uint64_t v5 = (void *)MEMORY[0x1AD0C0DC0]();
  id v6 = objc_msgSend(objc_allocWithZone((Class)TTSAXResourceManager), sel_init);
  id v7 = objc_msgSend(v6, sel_resourcesWithType_subType_, 1, 1);

  sub_1A6784438();
  unint64_t v8 = sub_1A68922E0();

  v0[5] = type metadata accessor for DefaultVoiceSource();
  v0[6] = &protocol witness table for DefaultVoiceSource;
  v0[2] = v3;
  swift_retain_n();
  unint64_t v9 = sub_1A6781288(MEMORY[0x1E4FBC860]);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v10 + 16) = v0 + 2;
  uint64_t v11 = sub_1A67822F0(v9, (void (*)(uint64_t *__return_ptr, uint64_t *, id *))sub_1A6784500, v10, v8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1A6741A24((uint64_t)(v0 + 2));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v12 = Dictionary<>.authoritative.getter(v11);
  swift_bridgeObjectRelease();
  v0[7] = v12;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2E0);
  sub_1A68924F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v15);
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1A678088C()
{
  uint64_t v1 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A678095C()
{
  uint64_t v2 = *(void *)(sub_1A6741AD0((uint64_t *)&unk_1EB67A2E0) - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A6750954;
  return sub_1A67805A8((uint64_t)v5, v3, v4);
}

uint64_t sub_1A6780A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6780AC0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 216))();
}

uint64_t Array<A>.voiceIdMap(source:)(void *a1, unint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = sub_1A673E63C(a1, v3);

  return sub_1A6783CF0((uint64_t)v5, a2, v3, v4);
}

uint64_t sub_1A6780B54()
{
  uint64_t v1 = *(void (**)(uint64_t (*)(), uint64_t))(**(void **)(v0
                                                                   + OBJC_IVAR____TtC12TextToSpeech18DefaultVoiceSource_debouncer)
                                                     + 184);
  swift_retain();
  v1(sub_1A6783DB8, v0);

  return swift_release();
}

uint64_t sub_1A6780BE0(uint64_t a1)
{
  uint64_t v2 = sub_1A6741AD0(&qword_1EB67A2D0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (void *)MEMORY[0x1AD0C0DC0](v4);
  id v8 = objc_msgSend(objc_allocWithZone((Class)TTSAXResourceManager), sel_init);
  id v9 = objc_msgSend(v8, sel_resourcesWithType_subType_, 1, 1);

  sub_1A6784438();
  unint64_t v10 = sub_1A68922E0();

  v17[3] = type metadata accessor for DefaultVoiceSource();
  v17[4] = &protocol witness table for DefaultVoiceSource;
  v17[0] = a1;
  swift_retain_n();
  unint64_t v11 = sub_1A6781288(MEMORY[0x1E4FBC860]);
  uint64_t v16 = v17;
  uint64_t v12 = sub_1A67822F0(v11, (void (*)(uint64_t *__return_ptr, uint64_t *, id *))sub_1A6784478, (uint64_t)v15, v10);
  swift_bridgeObjectRelease();
  sub_1A6741A24((uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = Dictionary<>.authoritative.getter(v12);
  swift_bridgeObjectRelease();
  v17[0] = v13;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2E0);
  sub_1A68924F0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t DefaultVoiceSource.deinit()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  objc_msgSend(v1, sel_removeObserver_, v0);

  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC12TextToSpeech18DefaultVoiceSource_streamContinuation;
  uint64_t v3 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return v0;
}

uint64_t DefaultVoiceSource.__deallocating_deinit()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  objc_msgSend(v1, sel_removeObserver_, v0);

  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC12TextToSpeech18DefaultVoiceSource_streamContinuation;
  uint64_t v3 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A678103C()
{
  return sub_1A6891910();
}

uint64_t sub_1A6781054()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_physicalMemory);

  if ((unint64_t)v1 > 0x147D35700) {
    return -1;
  }
  else {
    return 150000000;
  }
}

uint64_t sub_1A67810C4()
{
  uint64_t v0 = type metadata accessor for DefaultVoiceSource();
  uint64_t v1 = sub_1A67843AC(&qword_1E96C20D8, (void (*)(uint64_t))type metadata accessor for DefaultVoiceSource);

  return TTSActor.unownedExecutor.getter(v0, v1);
}

uint64_t sub_1A6781138()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x80))();
}

uint64_t sub_1A678118C()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x98))();
}

uint64_t sub_1A67811E0()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x70))();
}

uint64_t sub_1A6781234()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0xA0))();
}

unint64_t sub_1A6781288(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_13;
  }
  sub_1A6741AD0((uint64_t *)&unk_1EB67A360);
  uint64_t v2 = sub_1A6892EF0();
  uint64_t v3 = (void *)v2;
  uint64_t v23 = *(void *)(a1 + 16);
  if (!v23)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v22 = v2 + 64;
  unint64_t result = swift_retain();
  uint64_t v5 = 0;
  uint64_t v6 = (unsigned char *)(a1 + 148);
  while (!__OFADD__(v5, 1))
  {
    uint64_t v7 = *(void *)(v6 - 108);
    uint64_t v8 = *(void *)(v6 - 92);
    uint64_t v9 = *(void *)(v6 - 84);
    uint64_t v10 = *(void *)(v6 - 68);
    uint64_t v34 = *(void *)(v6 - 36);
    uint64_t v35 = *(void *)(v6 - 28);
    unint64_t v11 = *(void **)(v6 - 20);
    if (!v7)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v21 = v11;
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
    uint64_t v24 = v5 + 1;
    uint64_t v12 = *(void *)(v6 - 116);
    uint64_t v13 = *(void *)(v6 - 100);
    uint64_t v25 = *(void *)(v6 - 76);
    char v28 = *(v6 - 59);
    char v29 = *(v6 - 60);
    uint64_t v27 = *(void *)(v6 - 52);
    char v26 = *(v6 - 44);
    char v32 = *(v6 - 8);
    int v33 = *((_DWORD *)v6 - 3);
    char v30 = *v6;
    int v31 = *((_DWORD *)v6 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v11;
    unint64_t result = sub_1A673F7AC(v12, v7);
    if (v15) {
      goto LABEL_15;
    }
    *(void *)(v22 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v16 = v12;
    v16[1] = v7;
    uint64_t v17 = v3[7] + 104 * result;
    *(void *)uint64_t v17 = v13;
    *(void *)(v17 + 8) = v8;
    *(void *)(v17 + 16) = v9;
    *(void *)(v17 + 24) = v25;
    *(void *)(v17 + 32) = v10;
    *(unsigned char *)(v17 + 40) = v29;
    *(unsigned char *)(v17 + 41) = v28;
    *(void *)(v17 + 48) = v27;
    *(unsigned char *)(v17 + 56) = v26;
    *(void *)(v17 + 64) = v34;
    *(void *)(v17 + 72) = v35;
    *(void *)(v17 + 80) = v14;
    *(_DWORD *)(v17 + 88) = v33;
    *(unsigned char *)(v17 + 92) = v32;
    *(_DWORD *)(v17 + 96) = v31;
    *(unsigned char *)(v17 + 100) = v30;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_16;
    }
    v3[2] = v20;
    ++v5;
    v6 += 120;
    if (v24 == v23) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_1A67814F8(uint64_t *a1@<X0>, id *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  id v7 = *a2;
  double v8 = CoreSynthesizer.Voice.init(resource:)(v7, (uint64_t)&v30);
  uint64_t v9 = v31;
  if (v31)
  {
    uint64_t v10 = v33;
    uint64_t v11 = v35;
    uint64_t v12 = v38;
    uint64_t v25 = v30;
    uint64_t v26 = v32;
    v45[0] = v30;
    v45[1] = v31;
    v45[2] = v32;
    v45[3] = v33;
    uint64_t v27 = v34;
    uint64_t v28 = v36;
    v45[4] = v34;
    __int16 v46 = v35;
    uint64_t v47 = v36;
    uint64_t v29 = v37;
    char v48 = v37;
    uint64_t v49 = v38;
    uint64_t v50 = v39;
    uint64_t v23 = v40;
    uint64_t v24 = v39;
    uint64_t v51 = v40;
    int v52 = v41;
    char v53 = v42 & 1;
    int v54 = v43;
    char v55 = v44 & 1;
    id v13 = objc_msgSend(v7, sel_memoryPeak, v8);
    sub_1A673E788(a3, (uint64_t)&v30);
    if (v13
      && (uint64_t v14 = (uint64_t)objc_msgSend(v7, sel_memoryPeak),
          uint64_t v15 = v33,
          uint64_t v16 = v34,
          sub_1A673E63C(&v30, v33),
          uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16),
          v14 >= 1))
    {
      unint64_t v18 = v17;
      sub_1A6741A24((uint64_t)&v30);
      if (v18 < v14)
      {
        sub_1A673FF60(v25, v9, v26, v10, v27, v11, v28, v29, v12, v24, v23);
        *a4 = v6;
        swift_bridgeObjectRetain();
        return;
      }
    }
    else
    {
      sub_1A6741A24((uint64_t)&v30);
    }
    *a4 = v6;
    uint64_t v22 = sub_1A68920A0();
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    sub_1A673D140(v25, v9, v26, v10, v27, v11, v28, v29, v12, v24, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = v6;
    *a4 = 0x8000000000000000;
    sub_1A6782954((uint64_t)v45, v22, v20, isUniquelyReferenced_nonNull_native);
    *a4 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A673FF60(v25, v9, v26, v10, v27, v11, v28, v29, v12, v24, v23);
  }
  else
  {
    *a4 = v6;
    swift_bridgeObjectRetain();
  }
}

double CoreSynthesizer.Voice.init(resource:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A673E538(v41);
  sub_1A67FA158();
  sub_1A67F7C2C();
  id v4 = TTSAXResource.primaryLocales.getter();
  uint64_t v5 = sub_1A6783DC0((uint64_t)v4);
  swift_bridgeObjectRelease();
  if (!*(void *)(v5 + 16))
  {
    swift_bridgeObjectRelease();

LABEL_66:
    *(void *)(a2 + 93) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  TTSAXResource.secondaryLocales.getter();
  uint64_t v7 = sub_1A6783DC0(v6);
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(a1, sel_synthesisProviderVoice);
  id v8 = objc_msgSend(a1, sel_voiceId);
  if (!v8) {
    goto LABEL_72;
  }
  uint64_t v9 = v8;
  uint64_t v34 = sub_1A6892000();
  uint64_t v36 = v10;

  sub_1A683467C((unint64_t)objc_msgSend(a1, sel_footprint), &v40);
  if (objc_msgSend(a1, sel_isNoveltyVoice))
  {
    *(void *)uint64_t v39 = *(void *)sub_1A67F8D88();
    sub_1A674CEE4();
    sub_1A6892B20();
    sub_1A6784078();
    if ((sub_1A6891FC0() & 1) == 0) {
      sub_1A6892B60();
    }
  }
  if (objc_msgSend(a1, sel_isDefault))
  {
    *(void *)uint64_t v39 = *(void *)sub_1A67F8DE8();
    sub_1A674CEE4();
    sub_1A6892B20();
    sub_1A6784078();
    if ((sub_1A6891FC0() & 1) == 0) {
      sub_1A6892B60();
    }
  }
  if (objc_msgSend(a1, sel_isSystemVoice))
  {
    *(void *)uint64_t v39 = *(void *)sub_1A67F8DD0();
    sub_1A674CEE4();
    sub_1A6892B20();
    sub_1A6784078();
    if ((sub_1A6891FC0() & 1) == 0) {
      sub_1A6892B60();
    }
  }
  if (objc_msgSend(a1, sel_isInstalled))
  {
    *(void *)uint64_t v39 = *(void *)sub_1A67F8E18();
    sub_1A674CEE4();
    sub_1A6892B20();
    sub_1A6784078();
    if ((sub_1A6891FC0() & 1) == 0) {
      sub_1A6892B60();
    }
  }
  if (TTSAXResource.isDownloading.getter())
  {
    *(void *)uint64_t v39 = *(void *)sub_1A67F8ECC();
    sub_1A674CEE4();
    sub_1A6892B20();
    sub_1A6784078();
    if ((sub_1A6891FC0() & 1) == 0) {
      sub_1A6892B60();
    }
  }
  if (objc_msgSend(a1, sel_canBeDownloaded))
  {
    *(void *)uint64_t v39 = *(void *)sub_1A67F8EB4();
    sub_1A674CEE4();
    sub_1A6892B20();
    sub_1A6784078();
    if ((sub_1A6891FC0() & 1) == 0) {
      sub_1A6892B60();
    }
  }
  id v11 = objc_msgSend(a1, sel_name);
  if (!v11)
  {
LABEL_73:
    __break(1u);
    JUMPOUT(0x1A67822CCLL);
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_1A6892000();
  uint64_t v15 = v14;

  sub_1A6834660((uint64_t)objc_msgSend(a1, sel_gender), v39);
  uint64_t v16 = v39[0];
  unint64_t v17 = (unint64_t)objc_msgSend(a1, sel_assetSize);
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_69;
  }
  unint64_t v18 = v17;
  if (HIDWORD(v17))
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v33 = v16;
  unint64_t v19 = (unint64_t)objc_msgSend(a1, sel_assetSize);
  if ((v19 & 0x8000000000000000) != 0)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  int v20 = v19;
  if (HIDWORD(v19))
  {
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v32 = v13;
  uint64_t v35 = v15;
  id v21 = sub_1A67F8E30();
  *(void *)uint64_t v39 = *v21;
  sub_1A674CEE4();
  sub_1A6892B20();
  sub_1A6784078();
  if ((sub_1A6891FC0() & 1) == 0) {
    sub_1A6892B60();
  }
  unsigned int v22 = 9;
  switch((unint64_t)objc_msgSend(a1, sel_type))
  {
    case 2uLL:
      goto LABEL_64;
    case 3uLL:
      uint64_t v23 = sub_1A67F8E00();
      *(void *)uint64_t v39 = *v23;
      sub_1A6892B20();
      if ((sub_1A6891FC0() & 1) == 0) {
        sub_1A6892B60();
      }
      id v24 = objc_msgSend(a1, sel_subtype);
      if (v24 == (id)4)
      {
        unsigned int v22 = 0;
      }
      else if (v24 == (id)7)
      {
        v39[0] = v40;
        unsigned int v22 = 2;
        v38[0] = 2;
        sub_1A67840CC();
        if (sub_1A6891FC0())
        {
          *(void *)uint64_t v39 = *(void *)sub_1A67F8EB4();
          sub_1A6892B20();
          if ((sub_1A6892B40() & 1) == 0) {
            sub_1A6892B50();
          }
          *(void *)uint64_t v39 = *v23;
          sub_1A6892B20();
          if ((sub_1A6892B40() & 1) == 0) {
            sub_1A6892B50();
          }
          unsigned int v22 = 3;
        }
      }
      else
      {
        if (v24 != (id)6) {
          goto LABEL_65;
        }
        unsigned int v22 = 1;
      }
      goto LABEL_64;
    case 4uLL:
      if (objc_msgSend(a1, sel_footprint) == (id)2)
      {
        *(void *)uint64_t v39 = *(void *)sub_1A67F8E48();
        sub_1A6892B20();
        if ((sub_1A6891FC0() & 1) == 0) {
          sub_1A6892B60();
        }
      }
      unsigned int v22 = 5;
      goto LABEL_64;
    case 6uLL:
    case 7uLL:
      unsigned int v22 = 4;
      goto LABEL_64;
    case 9uLL:
      unsigned int v22 = 10;
      if (!objc_msgSend(v37, sel_isFirstParty)) {
        goto LABEL_59;
      }
      if (objc_msgSend(v37, sel_isPersonalVoice))
      {
        *(void *)uint64_t v39 = *(void *)sub_1A67F8DA0();
        sub_1A6892B20();
        if ((sub_1A6891FC0() & 1) == 0) {
          sub_1A6892B60();
        }
        unsigned int v22 = 7;
      }
      else
      {
        swift_bridgeObjectRetain();
        char v25 = sub_1A68921F0();
        swift_bridgeObjectRelease();
        if (v25)
        {
          unsigned int v22 = 8;
        }
        else
        {
          id v26 = objc_msgSend(v37, sel_synthesizerBundleIdentifier);
          if (!v26
            || (uint64_t v27 = v26,
                sub_1A6892000(),
                v27,
                LOBYTE(v27) = sub_1A68921F0(),
                swift_bridgeObjectRelease(),
                (v27 & 1) == 0))
          {
LABEL_65:
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_66;
          }
          unsigned int v22 = 10;
        }
      }
LABEL_59:
      unsigned __int8 v40 = 0;
      v39[0] = v22;
      v38[0] = 10;
      if (static CoreSynthesizer.Voice.VoiceType.== infix(_:_:)(v39, v38))
      {
        *(void *)uint64_t v39 = *(void *)sub_1A67F8DB8();
        sub_1A6892B20();
        if ((sub_1A6891FC0() & 1) == 0) {
          sub_1A6892B60();
        }
        *(void *)uint64_t v39 = *v21;
        sub_1A6892B20();
        if ((sub_1A6892B40() & 1) == 0) {
          sub_1A6892B50();
        }
      }
LABEL_64:
      uint64_t v28 = v40;
      uint64_t v29 = sub_1A68346B0();

      uint64_t v31 = v41[0];
      *(void *)a2 = v34;
      *(void *)(a2 + 8) = v36;
      *(void *)(a2 + 16) = v29;
      *(void *)(a2 + 24) = v32;
      *(void *)(a2 + 32) = v35;
      *(void *)(a2 + 40) = v28 | (v33 << 8);
      *(void *)(a2 + 48) = v31;
      *(void *)(a2 + 56) = v22;
      *(void *)(a2 + 64) = v5;
      *(void *)(a2 + 72) = v7;
      *(void *)(a2 + 80) = v37;
      *(void *)(a2 + 88) = v18;
      *(unsigned char *)(a2 + 100) = 0;
      *(_DWORD *)(a2 + 96) = v20;
      break;
    case 0xAuLL:
      unsigned int v22 = 6;
      goto LABEL_64;
    default:
      goto LABEL_65;
  }
  return result;
}

uint64_t sub_1A67822F0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v16 = a1;
  uint64_t v6 = a1;
  if (a4 >> 62) {
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_1A6892EB0())
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD0BFD30](v8 - 4, a4) : *(id *)(a4 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v15 = v9;
      a2(&v14, &v16, &v15);
      swift_bridgeObjectRelease();
      if (v4)
      {
        swift_bridgeObjectRelease();

        return v6;
      }

      uint64_t v6 = v14;
      uint64_t v16 = v14;
      ++v8;
      if (v11 == v7) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A678243C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A6782474(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A6750954;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96C30D0 + dword_1E96C30D0);
  return v6(a1, v4);
}

uint64_t sub_1A678252C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A360);
  char v52 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v49 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v47 = v3;
  int64_t v48 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v50 = v5;
  uint64_t v51 = v7;
  while (1)
  {
    if (v10)
    {
      uint64_t v53 = (v10 - 1) & v10;
      int64_t v54 = v13;
      unint64_t v25 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v48) {
      break;
    }
    uint64_t v27 = v49;
    unint64_t v28 = v49[v26];
    int64_t v29 = v13 + 1;
    if (!v28)
    {
      int64_t v29 = v13 + 2;
      if (v13 + 2 >= v48) {
        goto LABEL_33;
      }
      unint64_t v28 = v49[v29];
      if (!v28)
      {
        uint64_t v30 = v13 + 3;
        if (v13 + 3 >= v48)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v47;
          uint64_t v7 = v51;
          if ((v52 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v49[v30];
        if (!v28)
        {
          while (1)
          {
            int64_t v29 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_42;
            }
            if (v29 >= v48) {
              goto LABEL_33;
            }
            unint64_t v28 = v49[v29];
            ++v30;
            if (v28) {
              goto LABEL_30;
            }
          }
        }
        int64_t v29 = v13 + 3;
      }
    }
LABEL_30:
    uint64_t v53 = (v28 - 1) & v28;
    int64_t v54 = v29;
    unint64_t v25 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_31:
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v25);
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    uint64_t v38 = *(void *)(v5 + 56) + 104 * v25;
    uint64_t v39 = *(void *)(v38 + 8);
    uint64_t v55 = *(void *)v38;
    uint64_t v40 = *(void *)(v38 + 16);
    uint64_t v64 = *(void *)(v38 + 24);
    uint64_t v41 = *(void *)(v38 + 32);
    char v62 = *(unsigned char *)(v38 + 41);
    char v63 = *(unsigned char *)(v38 + 40);
    uint64_t v61 = *(void *)(v38 + 48);
    uint64_t v43 = *(void *)(v38 + 64);
    uint64_t v42 = *(void *)(v38 + 72);
    char v44 = *(void **)(v38 + 80);
    int v59 = *(_DWORD *)(v38 + 88);
    char v60 = *(unsigned char *)(v38 + 56);
    int v57 = *(_DWORD *)(v38 + 96);
    char v58 = *(unsigned char *)(v38 + 92);
    char v56 = *(unsigned char *)(v38 + 100);
    if ((v52 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v45 = v44;
    }
    uint64_t v65 = v41;
    uint64_t v14 = v40;
    uint64_t v15 = v39;
    uint64_t v16 = v42;
    sub_1A6893200();
    sub_1A68920F0();
    uint64_t v17 = sub_1A6893250();
    uint64_t v7 = v51;
    uint64_t v18 = -1 << *(unsigned char *)(v51 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v22 = v65;
      uint64_t result = (uint64_t)v44;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v18) >> 6;
      uint64_t v22 = v65;
      uint64_t result = (uint64_t)v44;
      do
      {
        if (++v20 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v33 = v20 == v32;
        if (v20 == v32) {
          unint64_t v20 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v20);
      }
      while (v34 == -1);
      unint64_t v21 = __clz(__rbit64(~v34)) + (v20 << 6);
    }
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v23 = (void *)(*(void *)(v51 + 48) + 16 * v21);
    *uint64_t v23 = v37;
    v23[1] = v36;
    uint64_t v24 = *(void *)(v51 + 56) + 104 * v21;
    *(void *)uint64_t v24 = v55;
    *(void *)(v24 + 8) = v15;
    *(void *)(v24 + 16) = v14;
    *(void *)(v24 + 24) = v64;
    *(void *)(v24 + 32) = v22;
    *(unsigned char *)(v24 + 40) = v63;
    *(unsigned char *)(v24 + 41) = v62;
    *(void *)(v24 + 48) = v61;
    *(unsigned char *)(v24 + 56) = v60;
    *(void *)(v24 + 64) = v43;
    *(void *)(v24 + 72) = v16;
    *(void *)(v24 + 80) = result;
    *(_DWORD *)(v24 + 88) = v59;
    *(unsigned char *)(v24 + 92) = v58;
    *(_DWORD *)(v24 + 96) = v57;
    *(unsigned char *)(v24 + 100) = v56;
    ++*(void *)(v51 + 16);
    uint64_t v5 = v50;
    unint64_t v10 = v53;
    int64_t v13 = v54;
  }
  swift_release();
  uint64_t v3 = v47;
  uint64_t v27 = v49;
  if ((v52 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v46 = 1 << *(unsigned char *)(v5 + 32);
  if (v46 >= 64) {
    bzero(v27, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v27 = -1 << v46;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A6782954(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A673F7AC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A6782AFC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 104 * v12;
      return sub_1A67844A4(a1, v19);
    }
    goto LABEL_13;
  }
  sub_1A678252C(v15, a4 & 1);
  unint64_t v21 = sub_1A673F7AC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1A6893150();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 104 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v24 + 32) = v26;
  *(_OWORD *)uint64_t v24 = v25;
  long long v27 = *(_OWORD *)(a1 + 48);
  long long v28 = *(_OWORD *)(a1 + 64);
  long long v29 = *(_OWORD *)(a1 + 80);
  *(void *)(v24 + 93) = *(void *)(a1 + 93);
  *(_OWORD *)(v24 + 64) = v28;
  *(_OWORD *)(v24 + 80) = v29;
  *(_OWORD *)(v24 + 48) = v27;
  uint64_t v30 = v18[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v18[2] = v32;

  return swift_bridgeObjectRetain();
}

id sub_1A6782AFC()
{
  sub_1A6741AD0((uint64_t *)&unk_1EB67A360);
  uint64_t v38 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1A6892EC0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v38 = v3;
    return result;
  }
  id result = (id)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v40 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v35 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v35 >= v39) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v40 + 8 * v35);
    ++v7;
    if (!v36)
    {
      int64_t v7 = v35 + 1;
      if (v35 + 1 >= v39) {
        goto LABEL_26;
      }
      unint64_t v36 = *(void *)(v40 + 8 * v7);
      if (!v36) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v36 - 1) & v36;
    unint64_t v12 = __clz(__rbit64(v36)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 16 * v12;
    BOOL v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = 104 * v12;
    uint64_t v18 = *(void *)(v1 + 56) + v17;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v22 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 32);
    __int16 v24 = *(_WORD *)(v18 + 40);
    uint64_t v25 = *(void *)(v18 + 48);
    char v26 = *(unsigned char *)(v18 + 56);
    uint64_t v27 = *(void *)(v18 + 64);
    uint64_t v28 = *(void *)(v18 + 72);
    long long v29 = *(void **)(v18 + 80);
    int v30 = *(_DWORD *)(v18 + 88);
    char v31 = *(unsigned char *)(v18 + 92);
    int v32 = *(_DWORD *)(v18 + 96);
    LOBYTE(v18) = *(unsigned char *)(v18 + 100);
    BOOL v33 = (void *)(*(void *)(v3 + 48) + v13);
    *BOOL v33 = v16;
    v33[1] = v15;
    uint64_t v34 = *(void *)(v3 + 56) + v17;
    *(void *)uint64_t v34 = v19;
    *(void *)(v34 + 8) = v20;
    *(void *)(v34 + 16) = v22;
    *(void *)(v34 + 24) = v21;
    *(void *)(v34 + 32) = v23;
    *(_WORD *)(v34 + 40) = v24;
    *(void *)(v34 + 48) = v25;
    *(unsigned char *)(v34 + 56) = v26;
    *(void *)(v34 + 64) = v27;
    *(void *)(v34 + 72) = v28;
    *(void *)(v34 + 80) = v29;
    *(_DWORD *)(v34 + 88) = v30;
    *(unsigned char *)(v34 + 92) = v31;
    *(_DWORD *)(v34 + 96) = v32;
    *(unsigned char *)(v34 + 100) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v29;
  }
  int64_t v37 = v35 + 2;
  if (v37 >= v39) {
    goto LABEL_26;
  }
  unint64_t v36 = *(void *)(v40 + 8 * v37);
  if (v36)
  {
    int64_t v7 = v37;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v7 >= v39) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v40 + 8 * v7);
    ++v37;
    if (v36) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A6782D60(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1A6891A40();
  sub_1A67843F4((unint64_t *)&qword_1EB67A220);
  swift_bridgeObjectRetain();
  int64_t v37 = a2;
  uint64_t v8 = sub_1A6891F10();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  uint64_t v34 = v6 + 56;
  uint64_t v11 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    int v30 = v2;
    char v31 = a1;
    uint64_t v32 = ~v9;
    unint64_t v12 = *(void **)v11;
    v28[1] = v11 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    long long v29 = v12;
    uint64_t v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    int64_t v35 = v12 + 2;
    unint64_t v36 = v13;
    uint64_t v14 = v12[8];
    uint64_t v33 = v12[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    while (1)
    {
      MEMORY[0x1F4188790](v8);
      uint64_t v16 = v6;
      uint64_t v17 = *(void *)(v6 + 48);
      unint64_t v18 = v33 * v10;
      v36((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v33 * v10, v7);
      sub_1A67843F4(&qword_1EB67A230);
      char v19 = sub_1A6891FC0();
      uint64_t v20 = *v15;
      uint64_t v8 = (*v15)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v19) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v32;
      uint64_t v6 = v16;
      if (((*(void *)(v34 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v30;
        a1 = v31;
        uint64_t v21 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v20(v37, v7);
    v36(v31, *(void *)(*v30 + 48) + v18, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void **)v11;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v23 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
    uint64_t v25 = (char *)v28 - v24;
    char v26 = v37;
    ((void (*)(char *, char *, uint64_t))v21[2])((char *)v28 - v24, v37, v7);
    uint64_t v38 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A6783448((uint64_t)v25, v10, v23);
    *uint64_t v3 = v38;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v21[4])(a1, v26, v7);
    return 1;
  }
}

uint64_t sub_1A6783088()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1EB67A348);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v38 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    unint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v40 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = v38[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v16 = v38[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v16 = v38[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v38[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v38[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v40 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_1A6891A40();
      int64_t v39 = &v35;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x1F4188790](v19);
      uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = v2;
      uint64_t v24 = *(void *)(v2 + 48);
      uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v26 = *(void *)(v20 + 72);
      v25(v22, v24 + v26 * v14, v19);
      sub_1A67843F4((unint64_t *)&qword_1EB67A220);
      uint64_t result = sub_1A6891F10();
      uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v9 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v12 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v4 + 48) + v12 * v26, v22, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v40;
      uint64_t v2 = v23;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A6783448(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v29 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A6783088();
  }
  else
  {
    if (v6 > v5)
    {
      sub_1A67836AC();
      goto LABEL_12;
    }
    sub_1A6783954();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_1A6891A40();
  sub_1A67843F4((unint64_t *)&qword_1EB67A220);
  uint64_t v9 = sub_1A6891F10();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v10;
  uint64_t v27 = v7 + 56;
  uint64_t v28 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v26 = ~v10;
    int64_t v11 = *(void **)(v8 - 8);
    unint64_t v12 = (void (*)(char *, unint64_t, uint64_t))v11[2];
    uint64_t v13 = v11[8];
    uint64_t v14 = v11[9];
    int64_t v15 = (uint64_t (**)(char *, uint64_t))(v11 + 1);
    do
    {
      MEMORY[0x1F4188790](v9);
      v12((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v28 + 48) + v14 * a2, v8);
      sub_1A67843F4(&qword_1EB67A230);
      char v16 = sub_1A6891FC0();
      uint64_t v9 = (*v15)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v16) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v26;
    }
    while (((*(void *)(v27 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v17 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v18 = *(void *)(v17 + 48);
  uint64_t v19 = sub_1A6891A40();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * a2, v29, v19);
  uint64_t v21 = *(void *)(v17 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (!v22)
  {
    *(void *)(v17 + 16) = v23;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1A6893140();
  __break(1u);
  return result;
}

void *sub_1A67836AC()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1EB67A348);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892BF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  uint64_t v25 = (const void *)(v2 + 56);
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v6) {
    uint64_t result = memmove(result, v25, 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_28;
      }
      unint64_t v22 = *((void *)v25 + v8);
      if (!v22)
      {
        int64_t v8 = v21 + 2;
        if (v21 + 2 >= v12) {
          goto LABEL_28;
        }
        unint64_t v22 = *((void *)v25 + v8);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = sub_1A6891A40();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15);
    uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v2 + 48) + v20, v15);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v4 + 48) + v20, v18, v15);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v12)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v22 = *((void *)v25 + v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v8);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A6783954()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1EB67A348);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  for (int64_t i = 0; ; int64_t i = v38)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v38 = i;
      unint64_t v14 = v13 | (i << 6);
      goto LABEL_24;
    }
    int64_t v15 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    int64_t v17 = i + 1;
    if (!v16)
    {
      int64_t v17 = i + 2;
      if (i + 2 >= v37) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = i + 3;
        if (i + 3 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    int64_t v38 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = sub_1A6891A40();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    unint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v2;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v26 + v27 * v14, v19);
    sub_1A67843F4((unint64_t *)&qword_1EB67A220);
    uint64_t result = sub_1A6891F10();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v9 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v4 + 48) + v12 * v27, v22, v19);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v25;
  }
  uint64_t v18 = i + 4;
  if (i + 4 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v36 + 8 * v18);
  if (v16)
  {
    int64_t v17 = i + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A6783CF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[3] = a3;
  v12[4] = a4;
  uint64_t v7 = sub_1A675026C(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v7, a1, a3);
  unint64_t v8 = sub_1A6781288(MEMORY[0x1E4FBC860]);
  v11[2] = v12;
  uint64_t v9 = sub_1A67822F0(v8, (void (*)(uint64_t *__return_ptr, uint64_t *, id *))sub_1A6784500, (uint64_t)v11, a2);
  swift_bridgeObjectRelease();
  sub_1A6741A24((uint64_t)v12);
  return v9;
}

uint64_t sub_1A6783DB8()
{
  return sub_1A6780BE0(v0);
}

uint64_t sub_1A6783DC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = sub_1A6891A40();
  sub_1A67843F4((unint64_t *)&qword_1EB67A220);
  uint64_t v23 = sub_1A6892700();
  uint64_t v4 = sub_1A6741AD0(&qword_1EB67A238);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 - 8);
  v17[1] = v3 - 8;
  if (v2)
  {
    uint64_t v7 = v17[0];
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v18 = *(void *)(v17[0] + 72);
    unint64_t v22 = (void (**)(char *, void, uint64_t, uint64_t))(v17[0] + 56);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v17[0] + 16);
    uint64_t v20 = v17[0] + 16;
    uint64_t v21 = v9;
    uint64_t v19 = (uint64_t (**)(char *, uint64_t, uint64_t))(v17[0] + 48);
    v17[2] = v17[0] + 8;
    v17[3] = v17[0] + 32;
    while (1)
    {
      v21(v6, v8, v3);
      (*v22)(v6, 0, 1, v3);
      uint64_t v10 = (*v19)(v6, 1, v3);
      if (v10 == 1) {
        break;
      }
      uint64_t v11 = MEMORY[0x1F4188790](v10);
      unint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v11);
      int64_t v15 = (char *)v17 - v14;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v17 - v14, v6, v3);
      sub_1A6782D60(v13, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v3);
      v8 += v18;
      if (!--v2) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17[0] + 56))(v6, 1, 1, v3);
  }
  return v23;
}

unint64_t sub_1A6784078()
{
  unint64_t result = qword_1EB67A250;
  if (!qword_1EB67A250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB67A250);
  }
  return result;
}

unint64_t sub_1A67840CC()
{
  unint64_t result = qword_1E96C16D8;
  if (!qword_1E96C16D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C16D8);
  }
  return result;
}

uint64_t sub_1A6784120(uint64_t a1)
{
  uint64_t result = sub_1A67843AC((unint64_t *)&unk_1E96C2060, (void (*)(uint64_t))type metadata accessor for DefaultVoiceSource);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A6784178()
{
  return type metadata accessor for DefaultVoiceSource();
}

void sub_1A6784180()
{
  sub_1A6784350();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DefaultVoiceSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultVoiceSource);
}

uint64_t dispatch thunk of DefaultVoiceSource.disambiguations.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DefaultVoiceSource.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DefaultVoiceSource.voices.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DefaultVoiceSource.resourceCacheDidReceiveUpdate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DefaultVoiceSource.preferredLanguages.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DefaultVoiceSource.deviceMemoryLimit.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

void sub_1A6784350()
{
  if (!qword_1EB67A2F0)
  {
    sub_1A6750AC4(&qword_1EB67A1C0);
    unint64_t v0 = sub_1A6892510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB67A2F0);
    }
  }
}

uint64_t sub_1A67843AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A67843F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6891A40();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A6784438()
{
  unint64_t result = qword_1EB67A328;
  if (!qword_1EB67A328)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB67A328);
  }
  return result;
}

void sub_1A6784478(uint64_t *a1@<X0>, id *a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1A67814F8(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_1A67844A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1A6784500(uint64_t *a1@<X0>, id *a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t (*sub_1A6784518())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6784574@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x120))();
  *a2 = result;
  return result;
}

uint64_t sub_1A67845D8(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x128);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1A6784644()
{
  return sub_1A678587C();
}

uint64_t sub_1A6784658(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F448, (uint64_t)sub_1A678468C, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A678468C()
{
  return sub_1A6785A40(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__queue);
}

void (*sub_1A67846AC(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6784518();
  return sub_1A67847F0;
}

void sub_1A67847F0(void *a1)
{
}

uint64_t type metadata accessor for CoreSynthesizer()
{
  uint64_t result = qword_1E96C3BB0;
  if (!qword_1E96C3BB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t (*sub_1A678490C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6784A44()
{
  return sub_1A678587C();
}

uint64_t sub_1A6784B40(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F480, (uint64_t)sub_1A6784CAC, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A6784B74@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x150))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6784BD8(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x158);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1A6784C44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__voiceResolver);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1A6784CAC()
{
  return sub_1A6784C44(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_1A6784CD8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A678490C();
  return sub_1A6784E1C;
}

void sub_1A6784E1C(void *a1)
{
}

uint64_t (*sub_1A6784E28())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6784E84@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x180))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6784EE8(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x188);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A6784F54()
{
  return sub_1A678736C();
}

uint64_t sub_1A6784F68(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F4A8, (uint64_t)sub_1A6784F9C, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A6784F9C()
{
  return sub_1A678652C(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__voices);
}

void (*sub_1A6784FBC(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6784E28();
  return sub_1A6785100;
}

void sub_1A6785100(void *a1)
{
}

uint64_t (*sub_1A67851B8())()
{
  return j__swift_endAccess;
}

id sub_1A6785228()
{
  return sub_1A6792740((uint64_t)&unk_1A689F4E0, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioQueue);
}

void sub_1A678525C(void *a1)
{
}

uint64_t sub_1A678527C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x1B0))();
  *a2 = result;
  return result;
}

uint64_t sub_1A67852E0(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x1B8))(*a1);
}

void sub_1A678534C(uint64_t a1, void *a2)
{
  uint64_t v3 = (void **)(a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a2;
  id v5 = a2;
}

void sub_1A67853AC()
{
  sub_1A678534C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void (*sub_1A67853D8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A67851B8();
  return sub_1A678551C;
}

void sub_1A678551C(void *a1)
{
}

uint64_t (*sub_1A6785528())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6785584@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x1E0))();
  *a2 = result;
  return result;
}

uint64_t sub_1A67855E8(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x1E8);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1A6785654()
{
  return sub_1A678587C();
}

uint64_t sub_1A6785668(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F508, (uint64_t)sub_1A678569C, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A678569C()
{
  return sub_1A6785A40(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__bufferedAudioQueue);
}

void (*sub_1A67856BC(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6785528();
  return sub_1A6785800;
}

void sub_1A6785800(void *a1)
{
}

uint64_t (*sub_1A678580C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6785868()
{
  return sub_1A678587C();
}

uint64_t sub_1A678587C()
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  swift_release();
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1A678591C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x210))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6785980(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x218);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1A67859EC(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F530, (uint64_t)sub_1A6785A20, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A6785A20()
{
  return sub_1A6785A40(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__speechRenderer);
}

uint64_t sub_1A6785A40(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  *uint64_t v4 = v3;
  swift_retain();
  return swift_release();
}

void (*sub_1A6785AAC(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A678580C();
  return sub_1A6785BF0;
}

void sub_1A6785BF0(void *a1)
{
}

uint64_t (*sub_1A6785D10())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6785E78()
{
  return sub_1A678736C();
}

uint64_t sub_1A6785F94(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F568, (uint64_t)sub_1A6786100, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A6785FC8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x240))();
  *a2 = result;
  return result;
}

uint64_t sub_1A678602C(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x248);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A6786098(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__offlineChain);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A6786100()
{
  return sub_1A6786098(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_1A678612C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6785D10();
  return sub_1A6786270;
}

void sub_1A6786270(void *a1)
{
}

unint64_t sub_1A678627C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A6741AD0(qword_1E96C2428);
  uint64_t v2 = (void *)sub_1A6892EF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A673F7AC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t (*sub_1A6786398())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67863F4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x270))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6786458(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x278);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A67864C4()
{
  return sub_1A678736C();
}

uint64_t sub_1A67864D8(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F590, (uint64_t)sub_1A678650C, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A678650C()
{
  return sub_1A678652C(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__selectionProviders);
}

uint64_t sub_1A678652C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  *uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void (*sub_1A6786598(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6786398();
  return sub_1A67866DC;
}

void sub_1A67866DC(void *a1)
{
}

id sub_1A67866E8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))();
  swift_release();
  uint64_t v3 = (void *)((char *)v1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effectManager);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  uint64_t v9 = v3[6];
  uint64_t v10 = v3[7];
  id v12 = (id)v3[8];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v12;
}

uint64_t sub_1A6786810@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x5E8))(KeyPath);
  swift_release();
  uint64_t v5 = (void *)((char *)v3 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effectManager);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  uint64_t v7 = v5[2];
  uint64_t v8 = v5[3];
  uint64_t v9 = v5[4];
  uint64_t v10 = v5[5];
  uint64_t v11 = v5[6];
  uint64_t v12 = v5[7];
  uint64_t v13 = (void *)v5[8];
  *a2 = *v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  a2[5] = v10;
  a2[6] = v11;
  a2[7] = v12;
  a2[8] = v13;
  id v14 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A6786940(uint64_t a1, void **a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v2;
  uint64_t v10 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v3;
  uint64_t v4 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  v8[2] = v4;
  v8[3] = v9;
  uint64_t v6 = *(void (**)(uint64_t, void (*)(), void *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x5F0);
  sub_1A679AF6C((uint64_t)v9);
  v6(KeyPath, sub_1A679AE88, v8, MEMORY[0x1E4FBC848] + 8);
  sub_1A679AFF4((uint64_t)v9);
  return swift_release();
}

id sub_1A6786A34()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))()) {
    return 0;
  }
  swift_getKeyPath();
  (*(void (**)(void))((*v1 & *v0) + 0x5E8))();
  swift_release();
  swift_getKeyPath();
  sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  swift_beginAccess();
  id v2 = sub_1A67CEC40();
  swift_endAccess();
  swift_getKeyPath();
  sub_1A6891A70();
  swift_release();
  return v2;
}

uint64_t sub_1A6786CE8()
{
  uint64_t v1 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v1 - 8);
  long long v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A68924A0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1A6750210((uint64_t)v3, (uint64_t *)&unk_1EB67A2C0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1A68923E0();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1E96C23A0;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A6786F28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(int **)((*MEMORY[0x1E4FBC8C8] & *a4) + 0x320);
  id v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1A677B9EC;
  return v8();
}

uint64_t sub_1A6787038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A68924A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A6892490();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A6750210(a1, (uint64_t *)&unk_1EB67A2C0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A68923E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t (*sub_1A67871E4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A6787244;
}

uint64_t sub_1A6787244(uint64_t a1, char a2)
{
  return sub_1A67934C0(a1, a2, (uint64_t (*)(uint64_t))sub_1A6786CE8);
}

uint64_t sub_1A6787358()
{
  return sub_1A678736C();
}

uint64_t sub_1A678736C()
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A6787504(uint64_t a1)
{
  return sub_1A6787538(a1, (uint64_t)&unk_1A689F5E8, (uint64_t)sub_1A678773C, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A6787538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = v4;
  uint64_t v12 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x5F0))(KeyPath, a3, &v10, MEMORY[0x1E4FBC848] + 8);
  swift_release();
  return a4(a1);
}

uint64_t sub_1A67875FC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x2D8))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6787660(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x2E0);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A67876CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effects);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_1A6786CE8();
}

uint64_t sub_1A678773C()
{
  return sub_1A67876CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_1A6787768(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A67871E4((uint64_t)v3);
  return sub_1A67878AC;
}

void sub_1A67878AC(void *a1)
{
}

uint64_t (*sub_1A67878B8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6787914@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x308))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A678797C(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x310))(*a1);
}

uint64_t sub_1A67879DC()
{
  return sub_1A679393C((uint64_t)&unk_1A689F610, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__realtimeEffects);
}

uint64_t sub_1A67879F0(char a1)
{
  return sub_1A678B2C0(a1, (uint64_t)&unk_1A689F610, (uint64_t)sub_1A6787A10);
}

uint64_t sub_1A6787A10()
{
  return sub_1A679A2C8(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__realtimeEffects);
}

void (*sub_1A6787A30(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A67878B8();
  return sub_1A6787B74;
}

void sub_1A6787B74(void *a1)
{
}

uint64_t sub_1A6787B80()
{
  *(void *)(v1 + 56) = v0;
  return MEMORY[0x1F4188298](sub_1A6787BA0, 0, 0);
}

void sub_1A6787BA0()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x2D8))();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = (*v2 & *v1) + 1512;
  uint64_t v6 = *(void (**)(void))((*v2 & *v1) + 0x5E8);
  v0[8] = v6;
  v0[9] = v5 & 0xFFFFFFFFFFFFLL | 0xA33B000000000000;
  v139 = v6;
  ((void (*)(uint64_t))v6)(KeyPath);
  swift_release();
  v0[5] = v1;
  swift_getKeyPath();
  sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effectManager;
  v0[10] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effectManager;
  uint64_t v8 = (char *)v1 + v7;
  swift_beginAccess();
  sub_1A67CCDD4(v3);
  swift_endAccess();
  v0[6] = v1;
  swift_getKeyPath();
  uint64_t v9 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1A6891A70();
  uint64_t v10 = swift_release();
  if (((*(uint64_t (**)(uint64_t))((*v9 & *v1) + 0x308))(v10) & 1) == 0) {
    goto LABEL_117;
  }
  uint64_t v11 = (void *)v0[7];
  uint64_t v12 = *(uint64_t (**)(void))((*v9 & *v11) + 0x1B0);
  unint64_t v13 = ((*v9 & *v11) + 432) & 0xFFFFFFFFFFFFLL | 0xF4A0000000000000;
  v0[11] = v12;
  v0[12] = v13;
  id v14 = (void *)v12();
  id v15 = objc_msgSend(v14, sel_dspGraph);

  if (v15)
  {
    uint64_t v16 = sub_1A6892000();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  swift_getKeyPath();
  v139();
  id v19 = (id)swift_release();
  uint64_t v20 = *((void *)v8 + 5);
  if (!v18)
  {
    if (!v20) {
      goto LABEL_18;
    }
    goto LABEL_14;
  }
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    id v19 = objc_msgSend((id)v0[7], sel_isSpeaking);
    if (v19)
    {
      unint64_t v22 = *(int **)((*v9 & *(void *)v0[7]) + 0x440);
      v136 = (void (*)(void))((char *)v22 + *v22);
      uint64_t v23 = (void *)swift_task_alloc();
      v0[13] = v23;
      *uint64_t v23 = v0;
      v23[1] = sub_1A6788A44;
      v136();
      return;
    }
    goto LABEL_18;
  }
  if (v16 == *((void *)v8 + 4) && v18 == v20)
  {
    id v19 = (id)swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v21 = sub_1A6893120();
  id v19 = (id)swift_bridgeObjectRelease();
  if ((v21 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_18:
  uint64_t v24 = (void (*)(void))v0[8];
  uint64_t v25 = v0[7] + v0[10];
  uint64_t v26 = (void *)((uint64_t (*)(id))v0[11])(v19);
  swift_getKeyPath();
  v24();
  swift_release();
  if (*(void *)(v25 + 40))
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v28 = (void (*)(void))v0[8];
  v134 = v0;
  uint64_t v29 = v0[7] + v0[10];
  objc_msgSend(v26, sel_setDspGraph_, v27);

  swift_getKeyPath();
  v28();
  swift_release();
  uint64_t v30 = *(void *)(v29 + 56);
  uint64_t v135 = v30 + 64;
  uint64_t v31 = -1;
  uint64_t v32 = -1 << *(unsigned char *)(v30 + 32);
  if (-v32 < 64) {
    uint64_t v31 = ~(-1 << -(char)v32);
  }
  unint64_t v33 = v31 & *(void *)(v30 + 64);
  int64_t v137 = (unint64_t)(63 - v32) >> 6;
  swift_bridgeObjectRetain();
  int64_t v34 = 0;
  uint64_t v35 = MEMORY[0x1E4FBC868];
  unint64_t v36 = 0x1E4F28000uLL;
LABEL_24:
  unint64_t v37 = v35 & 0xC000000000000001;
  uint64_t v38 = v35 & 0xFFFFFFFFFFFFFF8;
  if (v35 < 0) {
    uint64_t v38 = v35;
  }
  uint64_t v140 = v38;
  while (1)
  {
    if (v33)
    {
      unint64_t v42 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      unint64_t v43 = v42 | (v34 << 6);
      goto LABEL_45;
    }
    int64_t v44 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (v44 >= v137) {
      goto LABEL_68;
    }
    unint64_t v45 = *(void *)(v135 + 8 * v44);
    ++v34;
    if (!v45)
    {
      int64_t v34 = v44 + 1;
      if (v44 + 1 >= v137) {
        goto LABEL_68;
      }
      unint64_t v45 = *(void *)(v135 + 8 * v34);
      if (!v45)
      {
        int64_t v34 = v44 + 2;
        if (v44 + 2 >= v137) {
          goto LABEL_68;
        }
        unint64_t v45 = *(void *)(v135 + 8 * v34);
        if (!v45) {
          break;
        }
      }
    }
LABEL_44:
    unint64_t v33 = (v45 - 1) & v45;
    unint64_t v43 = __clz(__rbit64(v45)) + (v34 << 6);
LABEL_45:
    uint64_t v47 = 4 * v43;
    uint64_t v48 = *(unsigned int *)(*(void *)(v30 + 56) + v47);
    id v49 = objc_msgSend(objc_allocWithZone(*(Class *)(v36 + 3792)), sel_initWithUnsignedInt_, *(unsigned int *)(*(void *)(v30 + 48) + v47));
    id v50 = objc_msgSend(objc_allocWithZone(*(Class *)(v36 + 3792)), sel_initWithUnsignedInt_, v48);
    if (v50)
    {
      id v53 = v50;
      if (v37)
      {
        uint64_t v54 = sub_1A6892BC0();
        if (__OFADD__(v54, 1)) {
          goto LABEL_130;
        }
        uint64_t v35 = sub_1A6796E34(v140, v54 + 1);
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v57 = sub_1A6796CD4((uint64_t)v49);
      uint64_t v58 = *(void *)(v35 + 16);
      BOOL v59 = (v56 & 1) == 0;
      uint64_t v60 = v58 + v59;
      if (__OFADD__(v58, v59)) {
        goto LABEL_128;
      }
      char v61 = v56;
      if (*(void *)(v35 + 24) >= v60)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1A67974F0();
        }
      }
      else
      {
        sub_1A6797068(v60, isUniquelyReferenced_nonNull_native);
        unint64_t v62 = sub_1A6796CD4((uint64_t)v49);
        if ((v61 & 1) != (v63 & 1))
        {
          sub_1A67501D4(0, (unint64_t *)&qword_1E96C15A8);
LABEL_121:
          sub_1A6893150();
          return;
        }
        unint64_t v57 = v62;
      }
      unint64_t v36 = 0x1E4F28000;
      if (v61)
      {
        uint64_t v70 = *(void *)(v35 + 56);

        *(void *)(v70 + 8 * v57) = v53;
      }
      else
      {
        *(void *)(v35 + 8 * (v57 >> 6) + 64) |= 1 << v57;
        *(void *)(*(void *)(v35 + 48) + 8 * v57) = v49;
        *(void *)(*(void *)(v35 + 56) + 8 * v57) = v53;
        uint64_t v71 = *(void *)(v35 + 16);
        BOOL v72 = __OFADD__(v71, 1);
        uint64_t v73 = v71 + 1;
        if (v72) {
          goto LABEL_134;
        }
        *(void *)(v35 + 16) = v73;
        id v74 = v49;
      }
      swift_bridgeObjectRelease();

      goto LABEL_24;
    }
    if (v37)
    {
      id v51 = v49;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1A6892E30();

      if (v52)
      {
        swift_unknownObjectRelease();
        uint64_t v64 = sub_1A6892BC0();
        uint64_t v65 = sub_1A6796E34(v140, v64);
        swift_retain();
        unint64_t v66 = sub_1A6796CD4((uint64_t)v51);
        char v68 = v67;
        swift_release();
        if ((v68 & 1) == 0) {
          goto LABEL_131;
        }

        v69 = *(void **)(*(void *)(v65 + 56) + 8 * v66);
        sub_1A679733C(v66, v65);
        swift_bridgeObjectRelease();

        uint64_t v35 = v65;
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v39 = sub_1A6796CD4((uint64_t)v49);
      char v41 = v40;
      swift_bridgeObjectRelease();
      if (v41)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1A67974F0();
        }

        v75 = *(void **)(*(void *)(v35 + 56) + 8 * v39);
        sub_1A679733C(v39, v35);
        swift_bridgeObjectRelease();

        goto LABEL_24;
      }
    }
  }
  int64_t v46 = v44 + 3;
  if (v46 < v137)
  {
    unint64_t v45 = *(void *)(v135 + 8 * v46);
    if (!v45)
    {
      while (1)
      {
        int64_t v34 = v46 + 1;
        if (__OFADD__(v46, 1)) {
          break;
        }
        if (v34 >= v137) {
          goto LABEL_68;
        }
        unint64_t v45 = *(void *)(v135 + 8 * v34);
        ++v46;
        if (v45) {
          goto LABEL_44;
        }
      }
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    int64_t v34 = v46;
    goto LABEL_44;
  }
LABEL_68:
  v76 = (uint64_t (*)(uint64_t))v134[11];
  uint64_t v77 = swift_release();
  v78 = (void *)v76(v77);
  v134[14] = sub_1A67501D4(0, (unint64_t *)&qword_1E96C15A8);
  v134[15] = sub_1A6797698();
  v79 = (void *)sub_1A6891E90();
  swift_bridgeObjectRelease();
  objc_msgSend(v78, sel_setGraphProperties_, v79);

  v80 = (void (*)(void))v134[8];
  uint64_t v81 = v134[7] + v134[10];
  swift_getKeyPath();
  v80();
  swift_release();
  uint64_t v82 = *(void *)(v81 + 48);
  uint64_t v138 = v82 + 64;
  uint64_t v83 = -1;
  uint64_t v84 = -1 << *(unsigned char *)(v82 + 32);
  if (-v84 < 64) {
    uint64_t v83 = ~(-1 << -(char)v84);
  }
  unint64_t v85 = v83 & *(void *)(v82 + 64);
  int64_t v141 = (unint64_t)(63 - v84) >> 6;
  swift_bridgeObjectRetain();
  int64_t v86 = 0;
  uint64_t v87 = MEMORY[0x1E4FBC868];
LABEL_71:
  unint64_t v88 = v87 & 0xC000000000000001;
  if (v87 < 0) {
    uint64_t v89 = v87;
  }
  else {
    uint64_t v89 = v87 & 0xFFFFFFFFFFFFFF8;
  }
  while (1)
  {
    if (v85)
    {
      unint64_t v93 = __clz(__rbit64(v85));
      v85 &= v85 - 1;
      unint64_t v94 = v93 | (v86 << 6);
      goto LABEL_92;
    }
    int64_t v95 = v86 + 1;
    if (__OFADD__(v86, 1)) {
      goto LABEL_125;
    }
    if (v95 >= v141)
    {
LABEL_116:
      uint64_t v0 = v134;
      v129 = (uint64_t (*)(uint64_t))v134[11];
      uint64_t v130 = swift_release();
      v131 = (void *)v129(v130);
      v132 = (void *)sub_1A6891E90();
      swift_bridgeObjectRelease();
      objc_msgSend(v131, sel_setGraphParameters_, v132);

LABEL_117:
      v133 = (void (*)(void))v0[1];
      v133();
      return;
    }
    unint64_t v96 = *(void *)(v138 + 8 * v95);
    ++v86;
    if (!v96)
    {
      int64_t v86 = v95 + 1;
      if (v95 + 1 >= v141) {
        goto LABEL_116;
      }
      unint64_t v96 = *(void *)(v138 + 8 * v86);
      if (!v96)
      {
        int64_t v86 = v95 + 2;
        if (v95 + 2 >= v141) {
          goto LABEL_116;
        }
        unint64_t v96 = *(void *)(v138 + 8 * v86);
        if (!v96) {
          break;
        }
      }
    }
LABEL_91:
    unint64_t v85 = (v96 - 1) & v96;
    unint64_t v94 = __clz(__rbit64(v96)) + (v86 << 6);
LABEL_92:
    uint64_t v98 = 4 * v94;
    int v99 = *(_DWORD *)(*(void *)(v82 + 56) + v98);
    id v100 = objc_msgSend(objc_allocWithZone(*(Class *)(v36 + 3792)), sel_initWithUnsignedInt_, *(unsigned int *)(*(void *)(v82 + 48) + v98));
    id v101 = objc_allocWithZone(*(Class *)(v36 + 3792));
    LODWORD(v102) = v99;
    id v103 = objc_msgSend(v101, sel_initWithFloat_, v102);
    if (v103)
    {
      id v106 = v103;
      if (v88)
      {
        uint64_t v107 = sub_1A6892BC0();
        if (__OFADD__(v107, 1)) {
          goto LABEL_132;
        }
        uint64_t v87 = sub_1A6796E34(v89, v107 + 1);
      }
      char v108 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v110 = sub_1A6796CD4((uint64_t)v100);
      uint64_t v111 = *(void *)(v87 + 16);
      BOOL v112 = (v109 & 1) == 0;
      uint64_t v113 = v111 + v112;
      if (__OFADD__(v111, v112)) {
        goto LABEL_129;
      }
      char v114 = v109;
      if (*(void *)(v87 + 24) < v113)
      {
        sub_1A6797068(v113, v108);
        unint64_t v115 = sub_1A6796CD4((uint64_t)v100);
        if ((v114 & 1) != (v116 & 1)) {
          goto LABEL_121;
        }
        unint64_t v110 = v115;
        unint64_t v36 = 0x1E4F28000;
        if ((v114 & 1) == 0) {
          goto LABEL_113;
        }
LABEL_108:
        uint64_t v123 = *(void *)(v87 + 56);

        *(void *)(v123 + 8 * v110) = v106;
LABEL_115:
        swift_bridgeObjectRelease();

        goto LABEL_71;
      }
      if (v108)
      {
        unint64_t v36 = 0x1E4F28000;
        if (v109) {
          goto LABEL_108;
        }
      }
      else
      {
        sub_1A67974F0();
        unint64_t v36 = 0x1E4F28000;
        if (v114) {
          goto LABEL_108;
        }
      }
LABEL_113:
      *(void *)(v87 + 8 * (v110 >> 6) + 64) |= 1 << v110;
      uint64_t v125 = 8 * v110;
      *(void *)(*(void *)(v87 + 48) + v125) = v100;
      *(void *)(*(void *)(v87 + 56) + v125) = v106;
      uint64_t v126 = *(void *)(v87 + 16);
      BOOL v72 = __OFADD__(v126, 1);
      uint64_t v127 = v126 + 1;
      if (v72) {
        goto LABEL_135;
      }
      *(void *)(v87 + 16) = v127;
      id v128 = v100;
      goto LABEL_115;
    }
    if (v88)
    {
      id v104 = v100;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_1A6892E30();

      if (!v105)
      {
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }
      swift_unknownObjectRelease();
      uint64_t v117 = sub_1A6892BC0();
      uint64_t v118 = sub_1A6796E34(v89, v117);
      swift_retain();
      unint64_t v119 = sub_1A6796CD4((uint64_t)v104);
      char v121 = v120;
      swift_release();
      if ((v121 & 1) == 0) {
        goto LABEL_133;
      }

      v122 = *(void **)(*(void *)(v118 + 56) + 8 * v119);
      sub_1A679733C(v119, v118);
      swift_bridgeObjectRelease();

      uint64_t v87 = v118;
      goto LABEL_71;
    }
    swift_bridgeObjectRetain();
    unint64_t v90 = sub_1A6796CD4((uint64_t)v100);
    char v92 = v91;
    swift_bridgeObjectRelease();
    if (v92)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1A67974F0();
      }

      v124 = *(void **)(*(void *)(v87 + 56) + 8 * v90);
      sub_1A679733C(v90, v87);
      swift_bridgeObjectRelease();

      goto LABEL_71;
    }
LABEL_75:
  }
  int64_t v97 = v95 + 3;
  if (v97 >= v141) {
    goto LABEL_116;
  }
  unint64_t v96 = *(void *)(v138 + 8 * v97);
  if (v96)
  {
    int64_t v86 = v97;
    goto LABEL_91;
  }
  while (1)
  {
    int64_t v86 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      break;
    }
    if (v86 >= v141) {
      goto LABEL_116;
    }
    unint64_t v96 = *(void *)(v138 + 8 * v86);
    ++v97;
    if (v96) {
      goto LABEL_91;
    }
  }
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
}

uint64_t sub_1A6788A44()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A6788B40, 0, 0);
}

void sub_1A6788B40()
{
  uint64_t v1 = *(void (**)(void))(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 56) + *(void *)(v0 + 80);
  uint64_t v3 = (void *)(*(uint64_t (**)(void))(v0 + 88))();
  swift_getKeyPath();
  v1();
  swift_release();
  if (*(void *)(v2 + 40))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void (**)(void))(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 56) + *(void *)(v0 + 80);
  objc_msgSend(v3, sel_setDspGraph_, v4, v0);

  swift_getKeyPath();
  v5();
  swift_release();
  uint64_t v7 = *(void *)(v6 + 56);
  uint64_t v60 = v7 + 64;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v10 = v8 & *(void *)(v7 + 64);
  int64_t v61 = (unint64_t)(63 - v9) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v12 = MEMORY[0x1E4FBC868];
LABEL_7:
  while (2)
  {
    unint64_t v13 = v12 & 0xC000000000000001;
    uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v12 < 0) {
      uint64_t v14 = v12;
    }
    uint64_t v63 = v14;
    while (1)
    {
      if (v10)
      {
        unint64_t v18 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          goto LABEL_59;
        }
        if (v20 >= v61) {
          goto LABEL_52;
        }
        unint64_t v21 = *(void *)(v60 + 8 * v20);
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v61) {
            goto LABEL_52;
          }
          unint64_t v21 = *(void *)(v60 + 8 * v11);
          if (!v21)
          {
            int64_t v11 = v20 + 2;
            if (v20 + 2 >= v61) {
              goto LABEL_52;
            }
            unint64_t v21 = *(void *)(v60 + 8 * v11);
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v61)
              {
LABEL_52:
                id v53 = *(uint64_t (**)(uint64_t))(v59 + 88);
                uint64_t v54 = swift_release();
                uint64_t v55 = (void *)v53(v54);
                *(void *)(v59 + 112) = sub_1A67501D4(0, (unint64_t *)&qword_1E96C15A8);
                *(void *)(v59 + 120) = sub_1A6797698();
                char v56 = (void *)sub_1A6891E90();
                swift_bridgeObjectRelease();
                objc_msgSend(v55, sel_setGraphProperties_, v56);

                unint64_t v57 = *(int **)((*MEMORY[0x1E4FBC8C8] & **(void **)(v59 + 56)) + 0x448);
                unint64_t v62 = (void (*)(void))((char *)v57 + *v57);
                uint64_t v58 = (void *)swift_task_alloc();
                *(void *)(v59 + 128) = v58;
                *uint64_t v58 = v59;
                v58[1] = sub_1A6789200;
                v62();
                return;
              }
              unint64_t v21 = *(void *)(v60 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  int64_t v11 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    break;
                  }
                  if (v11 >= v61) {
                    goto LABEL_52;
                  }
                  unint64_t v21 = *(void *)(v60 + 8 * v11);
                  ++v22;
                  if (v21) {
                    goto LABEL_27;
                  }
                }
LABEL_59:
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
                goto LABEL_62;
              }
              int64_t v11 = v22;
            }
          }
        }
LABEL_27:
        unint64_t v10 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = 4 * v19;
      uint64_t v24 = *(unsigned int *)(*(void *)(v7 + 56) + v23);
      id v25 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, *(unsigned int *)(*(void *)(v7 + 48) + v23));
      id v26 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, v24);
      if (v26)
      {
        id v29 = v26;
        if (v13)
        {
          uint64_t v30 = sub_1A6892BC0();
          if (__OFADD__(v30, 1)) {
            goto LABEL_61;
          }
          uint64_t v12 = sub_1A6796E34(v63, v30 + 1);
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v33 = sub_1A6796CD4((uint64_t)v25);
        uint64_t v34 = *(void *)(v12 + 16);
        BOOL v35 = (v32 & 1) == 0;
        uint64_t v36 = v34 + v35;
        if (__OFADD__(v34, v35)) {
          goto LABEL_60;
        }
        char v37 = v32;
        if (*(void *)(v12 + 24) >= v36)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v32 & 1) == 0) {
              goto LABEL_49;
            }
          }
          else
          {
            sub_1A67974F0();
            if ((v37 & 1) == 0) {
              goto LABEL_49;
            }
          }
        }
        else
        {
          sub_1A6797068(v36, isUniquelyReferenced_nonNull_native);
          unint64_t v38 = sub_1A6796CD4((uint64_t)v25);
          if ((v37 & 1) != (v39 & 1))
          {
            sub_1A67501D4(0, (unint64_t *)&qword_1E96C15A8);
            sub_1A6893150();
            return;
          }
          unint64_t v33 = v38;
          if ((v37 & 1) == 0)
          {
LABEL_49:
            *(void *)(v12 + 8 * (v33 >> 6) + 64) |= 1 << v33;
            uint64_t v48 = 8 * v33;
            *(void *)(*(void *)(v12 + 48) + v48) = v25;
            *(void *)(*(void *)(v12 + 56) + v48) = v29;
            uint64_t v49 = *(void *)(v12 + 16);
            BOOL v50 = __OFADD__(v49, 1);
            uint64_t v51 = v49 + 1;
            if (v50) {
              goto LABEL_63;
            }
            *(void *)(v12 + 16) = v51;
            id v52 = v25;
LABEL_51:
            swift_bridgeObjectRelease();

            goto LABEL_7;
          }
        }
        uint64_t v46 = *(void *)(v12 + 56);

        *(void *)(v46 + 8 * v33) = v29;
        goto LABEL_51;
      }
      if (v13) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_1A6796CD4((uint64_t)v25);
      char v17 = v16;
      swift_bridgeObjectRelease();
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1A67974F0();
        }

        uint64_t v47 = *(void **)(*(void *)(v12 + 56) + 8 * v15);
        sub_1A679733C(v15, v12);
        swift_bridgeObjectRelease();

        goto LABEL_7;
      }
LABEL_11:
    }
    id v27 = v25;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1A6892E30();

    if (!v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_unknownObjectRelease();
    uint64_t v40 = sub_1A6892BC0();
    uint64_t v41 = sub_1A6796E34(v63, v40);
    swift_retain();
    unint64_t v42 = sub_1A6796CD4((uint64_t)v27);
    char v44 = v43;
    swift_release();
    if (v44)
    {

      unint64_t v45 = *(void **)(*(void *)(v41 + 56) + 8 * v42);
      sub_1A679733C(v42, v41);
      swift_bridgeObjectRelease();

      uint64_t v12 = v41;
      continue;
    }
    break;
  }
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
}

uint64_t sub_1A6789200()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A67892FC, 0, 0);
}

void sub_1A67892FC()
{
  uint64_t v1 = (void (*)(void))v0[8];
  uint64_t v2 = v0[7] + v0[10];
  swift_getKeyPath();
  v1();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v3 + 64);
  int64_t v58 = (unint64_t)(63 - v6) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = MEMORY[0x1E4FBC868];
LABEL_4:
  while (2)
  {
    unint64_t v10 = v9 & 0xC000000000000001;
    if (v9 < 0) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    }
    while (1)
    {
      if (v7)
      {
        unint64_t v15 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          goto LABEL_56;
        }
        if (v17 >= v58) {
          goto LABEL_49;
        }
        unint64_t v18 = *(void *)(v4 + 8 * v17);
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v58) {
            goto LABEL_49;
          }
          unint64_t v18 = *(void *)(v4 + 8 * v8);
          if (!v18)
          {
            int64_t v8 = v17 + 2;
            if (v17 + 2 >= v58) {
              goto LABEL_49;
            }
            unint64_t v18 = *(void *)(v4 + 8 * v8);
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v58)
              {
LABEL_49:
                id v52 = *(uint64_t (**)(uint64_t))(v57 + 88);
                uint64_t v53 = swift_release();
                uint64_t v54 = (void *)v52(v53);
                uint64_t v55 = (void *)sub_1A6891E90();
                swift_bridgeObjectRelease();
                objc_msgSend(v54, sel_setGraphParameters_, v55);

                char v56 = *(void (**)(void))(v57 + 8);
                v56();
                return;
              }
              unint64_t v18 = *(void *)(v4 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v8 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    break;
                  }
                  if (v8 >= v58) {
                    goto LABEL_49;
                  }
                  unint64_t v18 = *(void *)(v4 + 8 * v8);
                  ++v19;
                  if (v18) {
                    goto LABEL_24;
                  }
                }
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
LABEL_58:
                __break(1u);
                goto LABEL_59;
              }
              int64_t v8 = v19;
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = 4 * v16;
      int v21 = *(_DWORD *)(*(void *)(v3 + 56) + v20);
      id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, *(unsigned int *)(*(void *)(v3 + 48) + v20));
      id v23 = objc_allocWithZone(NSNumber);
      LODWORD(v24) = v21;
      id v25 = objc_msgSend(v23, sel_initWithFloat_, v24);
      if (v25)
      {
        id v28 = v25;
        if (v10)
        {
          uint64_t v29 = sub_1A6892BC0();
          if (__OFADD__(v29, 1)) {
            goto LABEL_58;
          }
          uint64_t v9 = sub_1A6796E34(v11, v29 + 1);
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v32 = sub_1A6796CD4((uint64_t)v22);
        uint64_t v33 = *(void *)(v9 + 16);
        BOOL v34 = (v31 & 1) == 0;
        uint64_t v35 = v33 + v34;
        if (__OFADD__(v33, v34)) {
          goto LABEL_57;
        }
        char v36 = v31;
        if (*(void *)(v9 + 24) >= v35)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v4 = v3 + 64;
            if ((v31 & 1) == 0) {
              goto LABEL_46;
            }
          }
          else
          {
            sub_1A67974F0();
            uint64_t v4 = v3 + 64;
            if ((v36 & 1) == 0) {
              goto LABEL_46;
            }
          }
        }
        else
        {
          sub_1A6797068(v35, isUniquelyReferenced_nonNull_native);
          unint64_t v37 = sub_1A6796CD4((uint64_t)v22);
          if ((v36 & 1) != (v38 & 1))
          {
            sub_1A6893150();
            return;
          }
          unint64_t v32 = v37;
          uint64_t v4 = v3 + 64;
          if ((v36 & 1) == 0)
          {
LABEL_46:
            *(void *)(v9 + 8 * (v32 >> 6) + 64) |= 1 << v32;
            uint64_t v47 = 8 * v32;
            *(void *)(*(void *)(v9 + 48) + v47) = v22;
            *(void *)(*(void *)(v9 + 56) + v47) = v28;
            uint64_t v48 = *(void *)(v9 + 16);
            BOOL v49 = __OFADD__(v48, 1);
            uint64_t v50 = v48 + 1;
            if (v49) {
              goto LABEL_60;
            }
            *(void *)(v9 + 16) = v50;
            id v51 = v22;
LABEL_48:
            swift_bridgeObjectRelease();

            goto LABEL_4;
          }
        }
        uint64_t v45 = *(void *)(v9 + 56);

        *(void *)(v45 + 8 * v32) = v28;
        goto LABEL_48;
      }
      if (v10) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1A6796CD4((uint64_t)v22);
      char v14 = v13;
      swift_bridgeObjectRelease();
      if (v14)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1A67974F0();
        }

        uint64_t v46 = *(void **)(*(void *)(v9 + 56) + 8 * v12);
        sub_1A679733C(v12, v9);
        swift_bridgeObjectRelease();

        goto LABEL_4;
      }
LABEL_8:
    }
    id v26 = v22;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1A6892E30();

    if (!v27)
    {
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    swift_unknownObjectRelease();
    uint64_t v39 = sub_1A6892BC0();
    uint64_t v40 = sub_1A6796E34(v11, v39);
    swift_retain();
    unint64_t v41 = sub_1A6796CD4((uint64_t)v26);
    char v43 = v42;
    swift_release();
    if (v43)
    {

      char v44 = *(void **)(*(void *)(v40 + 56) + 8 * v41);
      sub_1A679733C(v41, v40);
      swift_bridgeObjectRelease();

      uint64_t v9 = v40;
      continue;
    }
    break;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

void (*sub_1A67899B0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A6789A10;
}

void sub_1A6789A10(uint64_t a1, char a2)
{
  uint64_t v4 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC8C8];
    id v8 = (id)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x1B0))(v4);
    unint64_t v7 = (void *)(*(uint64_t (**)(void))((*v6 & *v5) + 0x370))();
    objc_msgSend(v8, sel_setAudioSession_, v7);
  }
}

id sub_1A6789B1C()
{
  return sub_1A6792740((uint64_t)&unk_1A689F648, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioSession);
}

void sub_1A6789B50(void *a1)
{
}

uint64_t sub_1A6789B70@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x340))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6789BD4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x348))(*a1);
}

void sub_1A6789C40(void *a1, void *a2)
{
  uint64_t v4 = (void **)((char *)a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioSession);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *uint64_t v4 = a2;
  id v6 = a2;

  unint64_t v7 = (void *)MEMORY[0x1E4FBC8C8];
  id v8 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x1B0))();
  uint64_t v9 = (void *)(*(uint64_t (**)(void))((*v7 & *a1) + 0x370))();
  objc_msgSend(v8, sel_setAudioSession_, v9);
}

void (*sub_1A6789D5C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A67899B0((uint64_t)v3);
  return sub_1A6789EA0;
}

void sub_1A6789EA0(void *a1)
{
}

uint64_t sub_1A6789F94()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
  id v2 = objc_msgSend(v1, sel_channels);

  sub_1A67501D4(0, &qword_1E96C21B0);
  uint64_t v3 = sub_1A68922E0();

  return v3;
}

void sub_1A678A140()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
  sub_1A67501D4(0, &qword_1E96C21B0);
  id v2 = (id)sub_1A68922D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setChannels_, v2);
}

uint64_t sub_1A678A204@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x358))();
  *a2 = result;
  return result;
}

uint64_t sub_1A678A268(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x360);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void (*sub_1A678A2D4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[1] = v1;
  uint64_t v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x1B0);
  unint64_t v5 = ((*MEMORY[0x1E4FBC8C8] & *v1) + 432) & 0xFFFFFFFFFFFFLL | 0xF4A0000000000000;
  v3[2] = v4;
  v3[3] = v5;
  id v6 = (void *)v4();
  id v7 = objc_msgSend(v6, sel_channels);

  v3[4] = sub_1A67501D4(0, &qword_1E96C21B0);
  uint64_t v8 = sub_1A68922E0();

  *uint64_t v3 = v8;
  return sub_1A678A3C8;
}

void sub_1A678A3C8(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)a1 + 16);
  if (a2)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    unint64_t v5 = (void *)((uint64_t (*)(uint64_t))v3)(v4);
    id v6 = (void *)sub_1A68922D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setChannels_, v6);

    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = (void *)v3();
    uint64_t v8 = (void *)sub_1A68922D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setChannels_, v8);
  }

  free(v2);
}

uint64_t sub_1A678A4A8()
{
  swift_getKeyPath();
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  uint64_t v2 = swift_release();
  uint64_t v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  if (v3)
  {
    uint64_t v4 = *(void *)((char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  }
  else
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))((*v1 & *v0) + 0x340))(v2);
    uint64_t v3 = 0;
  }
  id v5 = v3;
  return v4;
}

id sub_1A678A604()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
  id v2 = objc_msgSend(v1, sel_audioQueueFlags);

  return v2;
}

void sub_1A678A718(uint64_t a1)
{
  id v3 = (id)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x1B0))();
  objc_msgSend(v3, sel_setAudioQueueFlags_, a1);
}

uint64_t sub_1A678A7A4@<X0>(void **a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x378))();
  *a2 = result;
  return result;
}

uint64_t sub_1A678A808(unsigned int *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x380))(*a1);
}

void (*sub_1A678A868(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x1B0);
  unint64_t v4 = ((*MEMORY[0x1E4FBC8C8] & *v1) + 432) & 0xFFFFFFFFFFFFLL | 0xF4A0000000000000;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  id v5 = (void *)v3();
  unsigned int v6 = objc_msgSend(v5, sel_audioQueueFlags);

  *(_DWORD *)(a1 + 24) = v6;
  return sub_1A678A914;
}

void sub_1A678A914(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  id v2 = (id)(*(uint64_t (**)(void))(a1 + 8))();
  objc_msgSend(v2, sel_setAudioQueueFlags_, v1);
}

void *CoreSynthesizer.__allocating_init(voiceResolver:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return CoreSynthesizer.init(voiceResolver:)(a1);
}

void *CoreSynthesizer.init(voiceResolver:)(uint64_t a1)
{
  uint64_t v3 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1A68924A0();
  uint64_t v6 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTSSpeechQueue(0);
  uint64_t v9 = v1;
  sub_1A684D8B4();
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__queue] = TTSSpeechQueue.__allocating_init(priority:)((uint64_t)v8);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__voices] = MEMORY[0x1E4FBC860];
  uint64_t v11 = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer_schedulingQueue;
  sub_1A6891B00();
  *(void *)&v9[v11] = sub_1A6891AF0();
  id v12 = objc_msgSend(objc_allocWithZone((Class)TTSWrappedAudioQueue), sel_init);
  char v13 = (id *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioQueue];
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioQueue] = v12;
  type metadata accessor for TTSAURenderer();
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__speechRenderer] = TTSAURenderer.__allocating_init()();
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__offlineChain] = v10;
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__selectionProviders] = sub_1A678627C(v10);
  sub_1A67CE428(v10, (uint64_t)v46);
  char v14 = &v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effectManager];
  long long v15 = v46[3];
  *((_OWORD *)v14 + 2) = v46[2];
  *((_OWORD *)v14 + 3) = v15;
  *((void *)v14 + 8) = v47;
  long long v16 = v46[1];
  *(_OWORD *)char v14 = v46[0];
  *((_OWORD *)v14 + 1) = v16;
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effects] = v10;
  v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__realtimeEffects] = 0;
  id v17 = objc_msgSend(self, sel_sharedInstance);
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioSession] = v17;
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__speechStateObserver] = 0;
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__deactivateAudioSessionTimerTask] = 0;
  unint64_t v18 = &v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__nextWordBlock];
  void *v18 = 0;
  v18[1] = 0;
  int64_t v19 = (void *)*MEMORY[0x1E4F14FD0];
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionCategory] = *MEMORY[0x1E4F14FD0];
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionCategoryOptions] = 3;
  v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionParticipatesInNowPlayingAppPolicy] = 0;
  v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioSessionAutomaticallyDeactivatesAfterSpeaking] = 0;
  v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___usingAuxiliarySession] = 0;
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession] = 0;
  id v20 = v19;
  sub_1A6891A90();
  uint64_t v39 = a1;
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__voiceResolver] = a1;
  id v21 = objc_allocWithZone((Class)TTSWrappedAudioQueue);
  swift_retain();
  id v22 = objc_msgSend(v21, sel_init);
  objc_storeStrong(v13, v22);
  type metadata accessor for BufferedAudioQueue();
  id v23 = v22;
  *(void *)&v9[OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__bufferedAudioQueue] = BufferedAudioQueue.__allocating_init(queue:)((uint64_t)v23);

  double v24 = (objc_class *)type metadata accessor for CoreSynthesizer();
  v45.receiver = v9;
  v45.super_class = v24;
  id v25 = objc_msgSendSuper2(&v45, sel_init);
  id v26 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v27 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v25) + 0x1B0);
  id v28 = v25;
  uint64_t v29 = (void *)v27();
  uint64_t v30 = (void *)(*(uint64_t (**)(void))((*v26 & *v28) + 0x370))();
  objc_msgSend(v29, sel_setAudioSession_, v30);

  uint64_t v31 = *(void *)((*(uint64_t (**)(void))((*v26 & *v28) + 0x120))() + 24);
  swift_retain();
  swift_release();
  uint64_t v44 = v31;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1A6741AD0(&qword_1E96C14D8);
  sub_1A6766A64(&qword_1E96C1540, &qword_1E96C14D8);
  uint64_t v32 = sub_1A6891DC0();
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  char v42 = v28;
  uint64_t v43 = v32;
  (*(void (**)(uint64_t, uint64_t (*)(), unsigned char *, uint64_t))((*v26 & *v28) + 0x5F0))(KeyPath, sub_1A67977C0, v41, MEMORY[0x1E4FBC848] + 8);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, 1, 1, v40);
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1A6892470();
  swift_retain();
  uint64_t v35 = sub_1A6892460();
  char v36 = (void *)swift_allocObject();
  uint64_t v37 = MEMORY[0x1E4FBCFD8];
  v36[2] = v35;
  v36[3] = v37;
  v36[4] = v34;
  swift_release();
  sub_1A67724DC((uint64_t)v5, (uint64_t)&unk_1E96C2210, (uint64_t)v36);
  swift_release();

  swift_release();
  return v28;
}

uint64_t sub_1A678B014(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = v2;
  uint64_t v9 = a1;
  uint64_t v10 = a2;
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x5F0))(KeyPath, sub_1A6797878, &v7, MEMORY[0x1E4FBC848] + 8);
  sub_1A67978FC(a1);
  return swift_release();
}

void sub_1A678B0EC(void *a1)
{
}

void sub_1A678B10C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = v3;
  uint64_t v9 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x5F0))(KeyPath, a3, &v7, MEMORY[0x1E4FBC848] + 8);
  swift_release();
}

uint64_t sub_1A678B1C4(uint64_t a1)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = v1;
  uint64_t v7 = a1;
  (*(void (**)(uint64_t, void (*)(), uint64_t *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5F0))(KeyPath, sub_1A6797938, &v5, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

uint64_t sub_1A678B280(char a1)
{
  return sub_1A678B2C0(a1, (uint64_t)&unk_1A689F7C0, (uint64_t)sub_1A6797950);
}

uint64_t sub_1A678B2A0(char a1)
{
  return sub_1A678B2C0(a1, (uint64_t)&unk_1A689F828, (uint64_t)sub_1A6797968);
}

uint64_t sub_1A678B2C0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = v3;
  char v10 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x5F0))(KeyPath, a3, &v8, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

uint64_t sub_1A678B370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a4;
  uint64_t v5 = sub_1A6891CE0();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C1500);
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = sub_1A6892470();
  v4[25] = sub_1A6892460();
  uint64_t v8 = sub_1A68923E0();
  v4[26] = v8;
  v4[27] = v7;
  return MEMORY[0x1F4188298](sub_1A678B4C8, v8, v7);
}

uint64_t sub_1A678B4C8()
{
  uint64_t v1 = v0[17] + 16;
  swift_beginAccess();
  id v2 = (void *)MEMORY[0x1AD0C1D60](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    v0[28] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x150))();

    sub_1A6741AD0(&qword_1E96C1658);
    sub_1A6892530();
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v4 = sub_1A6892460();
    v0[29] = v4;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[30] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1A678B6D4;
    uint64_t v6 = v0[21];
    uint64_t v7 = MEMORY[0x1E4FBCFD8];
    return MEMORY[0x1F4187D58](v0 + 16, v4, v7, v6);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1A678B6D4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 216);
  uint64_t v3 = *(void *)(v1 + 208);
  return MEMORY[0x1F4188298](sub_1A678B818, v3, v2);
}

uint64_t sub_1A678B818()
{
  uint64_t v2 = v0 + 16;
  uint64_t v1 = v0[16];
  if (v1)
  {
    uint64_t v3 = v0[19];
    uint64_t v4 = v0[20];
    uint64_t v5 = v0[18];
    uint64_t v6 = sub_1A6748FEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v6, v5);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1A6891CC0();
    os_log_type_t v8 = sub_1A6892840();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = v0[17];
    if (v9)
    {
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134218240;
      id v12 = (void *)MEMORY[0x1AD0C1D60](v10 + 16);
      char v13 = v12;
      if (v12)
      {
        uint64_t v14 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x180))();

        char v13 = *(void **)(v14 + 16);
        swift_bridgeObjectRelease();
      }
      swift_release();
      *(void *)(v11 + 4) = v13;
      swift_release();
      *(_WORD *)(v11 + 12) = 2048;
      uint64_t v15 = *(void *)(v1 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v11 + 14) = v15;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A66D3000, v7, v8, "Updating voice list %ld -> %ld", (uint8_t *)v11, 0x16u);
      MEMORY[0x1AD0C1C50](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }

    uint64_t v18 = v0[17] + 16;
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    uint64_t v19 = MEMORY[0x1AD0C1D60](v18);
    if (v19)
    {
      id v20 = (void *)v19;
      uint64_t v21 = *(void *)(v1 + 16);
      if (v21)
      {
        sub_1A6741AD0(&qword_1EB67A380);
        id v22 = (void *)swift_allocObject();
        size_t v23 = j__malloc_size(v22);
        v22[2] = v21;
        v22[3] = 2 * ((uint64_t)(v23 - 32) / 104);
        uint64_t v30 = sub_1A6797B34(v0 + 2, (uint64_t)(v22 + 4), v21, v1);
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_1A674CF48();
        if (v30 != (void *)v21)
        {
          __break(1u);
          return MEMORY[0x1F4187D58](v24, v25, v26, v27);
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v0 + 16;
      }
      else
      {
        swift_bridgeObjectRelease();
        id v22 = (void *)MEMORY[0x1E4FBC860];
      }
      (*(void (**)(void *))((*MEMORY[0x1E4FBC8C8] & *v20) + 0x188))(v22);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = sub_1A6892460();
    v0[29] = v28;
    uint64_t v29 = (void *)swift_task_alloc();
    v0[30] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_1A678B6D4;
    uint64_t v27 = v0[21];
    uint64_t v26 = MEMORY[0x1E4FBCFD8];
    uint64_t v24 = (uint64_t)v2;
    uint64_t v25 = v28;
    return MEMORY[0x1F4187D58](v24, v25, v26, v27);
  }
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t CoreSynthesizer.__allocating_init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = sub_1A674E06C(a1, v9);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  uint64_t v15 = sub_1A6797F58((uint64_t)v13, a2, a3, a4, v4, v9, v10);
  sub_1A6741A24(a1);
  return v15;
}

uint64_t CoreSynthesizer.__allocating_init(voiceSource:requiredTraits:sortMode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = sub_1A674E06C(a1, v7);
  uint64_t v10 = sub_1A6798104(v9, a2, a3, v3, v7, v8);
  sub_1A6741A24(a1);
  return v10;
}

uint64_t CoreSynthesizer.__allocating_init(requiredTraits:sortMode:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *sub_1A677FE2C();
  sub_1A674CEE4();
  swift_retain_n();
  sub_1A6741AD0(&qword_1EB67A298);
  sub_1A6766A64((unint64_t *)&qword_1EB67A2A0, &qword_1EB67A298);
  sub_1A6892B90();
  uint64_t v6 = sub_1A6797E1C(v5, v3, v8, v4, v2);
  swift_release();
  return v6;
}

id CoreSynthesizer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

uint64_t CoreSynthesizer.init()()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  sub_1A674CEE4();
  sub_1A6741AD0(&qword_1EB67A298);
  sub_1A6766A64((unint64_t *)&qword_1EB67A2A0, &qword_1EB67A298);
  sub_1A6892B90();
  uint64_t v1 = *sub_1A677FE2C();
  swift_retain_n();
  sub_1A6892B90();
  uint64_t v2 = sub_1A6797E1C(v1, v5, v4, 1, ObjectType);
  swift_release();
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t sub_1A678C07C()
{
  return sub_1A678C0D8();
}

uint64_t sub_1A678C090@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1A678C178(a1, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__speechStateObserver, a2);
}

uint64_t sub_1A678C0A4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1A678C234(a1, a2, a3, a4, (uint64_t)&unk_1A689F6B0, (uint64_t)sub_1A67977C0);
}

uint64_t sub_1A678C0C4()
{
  return sub_1A678C0D8();
}

uint64_t sub_1A678C0D8()
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  swift_release();

  return swift_retain();
}

uint64_t sub_1A678C164@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1A678C178(a1, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__deactivateAudioSessionTimerTask, a2);
}

uint64_t sub_1A678C178@<X0>(void **a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x5E8))();
  swift_release();
  *a3 = *(void *)((char *)v5 + *a2);

  return swift_retain();
}

uint64_t sub_1A678C214(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1A678C234(a1, a2, a3, a4, (uint64_t)&unk_1A689FD08, (uint64_t)sub_1A679A1B8);
}

uint64_t sub_1A678C234(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  v12[2] = v8;
  v12[3] = v7;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, void *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v8) + 0x5F0);
  swift_retain();
  v10(KeyPath, a6, v12, MEMORY[0x1E4FBC848] + 8);
  swift_release();
  return swift_release();
}

uint64_t sub_1A678C308(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A6891CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  char v13 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x558);
  uint64_t result = ((uint64_t (*)(uint64_t))v13)(v9);
  if (result)
  {
    uint64_t v15 = sub_1A6748FEC();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v15, v7);
    long long v16 = v2;
    uint64_t v17 = sub_1A6891CC0();
    os_log_type_t v18 = sub_1A6892870();
    int v41 = v18;
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v42 = v12;
    if (v19)
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v40 = v6;
      uint64_t v21 = v20;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v44 = v39;
      *(_DWORD *)uint64_t v21 = 136315650;
      os_log_t v38 = v17;
      LOBYTE(v43) = v12;
      uint64_t v22 = sub_1A6892090();
      uint64_t v43 = sub_1A673F908(v22, v23, &v44);
      sub_1A6892A50();
      uint64_t v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 1024;
      char v25 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v16) + 0x5D0))(v24);

      LODWORD(v43) = v25 & 1;
      sub_1A6892A50();

      *(_WORD *)(v21 + 18) = 1024;
      char v26 = v13();

      LODWORD(v43) = v26 & 1;
      sub_1A6892A50();

      os_log_t v27 = v38;
      _os_log_impl(&dword_1A66D3000, v38, (os_log_type_t)v41, "Handle state change: %s. useAuxiliarySession=%{BOOL}d audioSessionAutomaticallyDeactivatesAfterSpeaking=%{BOOL}d", (uint8_t *)v21, 0x18u);
      uint64_t v28 = v39;
      swift_arrayDestroy();
      MEMORY[0x1AD0C1C50](v28, -1, -1);
      uint64_t v29 = v21;
      uint64_t v6 = v40;
      MEMORY[0x1AD0C1C50](v29, -1, -1);

      uint64_t v30 = (void *)MEMORY[0x1E4FBC8C8];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      uint64_t v30 = (void *)MEMORY[0x1E4FBC8C8];
    }
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(uint64_t))((*v30 & *v16) + 0x5E8))(KeyPath);
    uint64_t result = swift_release();
    if (*(void *)((char *)v16 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__deactivateAudioSessionTimerTask))
    {
      swift_retain();
      sub_1A6892590();
      uint64_t result = swift_release();
    }
    switch(v42)
    {
      case 1:
      case 3:
        return result;
      default:
        uint64_t v32 = sub_1A68924A0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 1, 1, v32);
        uint64_t v33 = (void *)swift_allocObject();
        v33[2] = 0;
        v33[3] = 0;
        v33[4] = v16;
        uint64_t v34 = v16;
        uint64_t v35 = sub_1A6787038((uint64_t)v6, (uint64_t)&unk_1E96C2320, (uint64_t)v33);
        uint64_t v36 = swift_getKeyPath();
        uint64_t v37 = MEMORY[0x1F4188790](v36);
        *(&v38 - 2) = v34;
        *(&v38 - 1) = v35;
        (*(void (**)(uint64_t, uint64_t (*)()))((*MEMORY[0x1E4FBC8C8] & (uint64_t)v34->isa) + 0x5F0))(v37, sub_1A679A1B8);
        swift_release();
        uint64_t result = swift_release();
        break;
    }
  }
  return result;
}

uint64_t sub_1A678C8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  uint64_t v5 = sub_1A6891CE0();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  uint64_t v6 = sub_1A6892D90();
  v4[8] = v6;
  v4[9] = *(void *)(v6 - 8);
  v4[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A678CA38, 0, 0);
}

uint64_t sub_1A678CA38()
{
  if (sub_1A68925B0())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    sub_1A6892D80();
    uint64_t v3 = dword_1E96C1F08;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1A678CBA0;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1E96C1F08 + v3))(2000000000000000000, 0, 0, 0, 1);
  }
}

uint64_t sub_1A678CBA0()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[10];
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[8];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1A679B134;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1A678CD64;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1A678CD64()
{
  if ((sub_1A68925B0() & 1) == 0)
  {
    uint64_t v1 = v0[7];
    uint64_t v2 = v0[4];
    uint64_t v3 = v0[5];
    uint64_t v4 = sub_1A6749034();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v29(v1, v4, v2);
    uint64_t v5 = sub_1A6891CC0();
    os_log_type_t v6 = sub_1A6892870();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A66D3000, v5, v6, "Will deactivate audio session after auto timeout", v7, 2u);
      MEMORY[0x1AD0C1C50](v7, -1, -1);
    }
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[4];
    uint64_t v10 = v0[5];
    uint64_t v11 = (void *)v0[3];

    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v13 = v12(v8, v9);
    uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x370))(v13);
    v0[2] = 0;
    unsigned int v15 = objc_msgSend(v14, sel_setActive_error_, 0, v0 + 2);

    long long v16 = (void *)v0[2];
    if (v15)
    {
      id v17 = v16;
    }
    else
    {
      uint64_t v18 = v0[6];
      uint64_t v19 = v0[4];
      id v20 = v16;
      uint64_t v21 = (void *)sub_1A68916F0();

      swift_willThrow();
      v29(v18, v4, v19);
      uint64_t v22 = sub_1A6891CC0();
      os_log_type_t v23 = sub_1A6892850();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_1A66D3000, v22, v23, "Could not deactivate audio session after auto timeout", v24, 2u);
        MEMORY[0x1AD0C1C50](v24, -1, -1);
      }
      uint64_t v25 = v0[6];
      uint64_t v26 = v0[4];

      v12(v25, v26);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_1A678D044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1A678D068, 0, 0);
}

uint64_t sub_1A678D068()
{
  uint64_t v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 40)) + 0x150))();
  *(void *)(v0 + 48) = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 264)
                                                         + **(int **)(*(void *)v1 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A678D1BC;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 16);
  return v7(v5, v3, v4);
}

uint64_t sub_1A678D1BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A678D448(int a1, void *aBlock, void *a3)
{
  v3[15] = a3;
  v3[16] = _Block_copy(aBlock);
  v3[17] = sub_1A6892000();
  v3[18] = v5;
  id v6 = a3;
  return MEMORY[0x1F4188298](sub_1A678D4D4, 0, 0);
}

uint64_t sub_1A678D4D4()
{
  uint64_t v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 120)) + 0x150))();
  *(void *)(v0 + 152) = v1;
  id v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 264)
                                                         + **(int **)(*(void *)v1 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A678D634;
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  return v6(v0 + 16, v3, v4);
}

uint64_t sub_1A678D634()
{
  uint64_t v2 = *v0;
  uint64_t v1 = *v0;
  uint64_t v3 = *(void **)(*v0 + 120);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v5 = *(void *)(v1 + 24);
  if (v5)
  {
    id v6 = *(void **)(v2 + 96);
    uint64_t v16 = *(void *)(v2 + 88);
    uint64_t v17 = *(void *)(v2 + 80);
    uint64_t v18 = *(void *)(v2 + 72);
    uint64_t v19 = *(void *)(v2 + 64);
    uint64_t v7 = *(void *)(v2 + 56);
    uint64_t v20 = *(void *)(v2 + 48);
    uint64_t v9 = *(void *)(v2 + 32);
    uint64_t v8 = *(void *)(v2 + 40);
    uint64_t v10 = *(void *)(v2 + 16);
    CoreSynthesizer.Voice._bridgeToObjectiveC()((TTSSpeechVoice *)(*(unsigned char *)(v2 + 116) & 1));
    uint64_t v12 = v11;
    sub_1A673FF60(v10, v5, v9, v8, v20, v7, v19, v18, v17, v16, v6);
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void (***)(void, void))(v2 + 128);
  ((void (**)(void, void *))v13)[2](v13, v12);

  _Block_release(v13);
  uint64_t v14 = *(uint64_t (**)(void))(v4 + 8);
  return v14();
}

uint64_t sub_1A678D88C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1A678D8B0, 0, 0);
}

uint64_t sub_1A678D8B0()
{
  uint64_t v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 32)) + 0x150))();
  *(void *)(v0 + 40) = v1;
  id v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v1 + 304) + **(int **)(*(void *)v1 + 304));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A678DA00;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  return v6(v3, v4);
}

uint64_t sub_1A678DA00()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A678DC8C(int a1, void *aBlock, void *a3)
{
  v3[15] = a3;
  v3[16] = _Block_copy(aBlock);
  uint64_t v5 = sub_1A6891A40();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  sub_1A6891940();
  id v6 = a3;
  return MEMORY[0x1F4188298](sub_1A678DD74, 0, 0);
}

uint64_t sub_1A678DD74()
{
  uint64_t v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 120)) + 0x150))();
  *(void *)(v0 + 160) = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v1 + 304) + **(int **)(*(void *)v1 + 304));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A678DED4;
  uint64_t v3 = *(void *)(v0 + 152);
  return v5(v0 + 16, v3);
}

uint64_t sub_1A678DED4()
{
  uint64_t v2 = *v0;
  uint64_t v1 = *v0;
  uint64_t v3 = *(void *)(*v0 + 152);
  uint64_t v4 = *(void *)(*v0 + 144);
  uint64_t v5 = *(void *)(*v0 + 136);
  uint64_t v6 = *(void **)(*v0 + 120);
  uint64_t v7 = *v0;
  swift_task_dealloc();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v1 + 24);
  if (v8)
  {
    uint64_t v9 = *(void **)(v2 + 96);
    uint64_t v19 = *(void *)(v2 + 88);
    uint64_t v20 = *(void *)(v2 + 80);
    uint64_t v21 = *(void *)(v2 + 72);
    uint64_t v22 = *(void *)(v2 + 64);
    uint64_t v10 = *(void *)(v2 + 56);
    uint64_t v23 = *(void *)(v2 + 48);
    uint64_t v12 = *(void *)(v2 + 32);
    uint64_t v11 = *(void *)(v2 + 40);
    uint64_t v13 = *(void *)(v2 + 16);
    CoreSynthesizer.Voice._bridgeToObjectiveC()((TTSSpeechVoice *)(*(unsigned char *)(v2 + 116) & 1));
    unsigned int v15 = v14;
    sub_1A673FF60(v13, v8, v12, v11, v23, v10, v22, v21, v20, v19, v9);
  }
  else
  {
    unsigned int v15 = 0;
  }
  uint64_t v16 = *(void (***)(void, void))(v2 + 128);
  ((void (**)(void, void *))v16)[2](v16, v15);

  _Block_release(v16);
  uint64_t v17 = *(uint64_t (**)(void))(v7 + 8);
  return v17();
}

uint64_t sub_1A678E16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A6891CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A6748FEC();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1A6798284(a1, (uint64_t)v25);
  uint64_t v11 = sub_1A6891CC0();
  os_log_type_t v12 = sub_1A6892840();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v21[0] = a1;
    uint64_t v15 = v14;
    uint64_t v24 = v14;
    v21[1] = a2;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v22 = v2;
    sub_1A6798334();
    uint64_t v16 = sub_1A68930E0();
    uint64_t v23 = sub_1A673F908(v16, v17, &v24);
    uint64_t v3 = v22;
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    sub_1A67982E0((uint64_t)v25);
    _os_log_impl(&dword_1A66D3000, v11, v12, "Enqueue utterance: %s", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v18 = v15;
    a1 = v21[0];
    MEMORY[0x1AD0C1C50](v18, -1, -1);
    MEMORY[0x1AD0C1C50](v13, -1, -1);
  }
  else
  {
    sub_1A67982E0((uint64_t)v25);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1A6741AD0(&qword_1E96C2228);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A689DC40;
  sub_1A6798284(a1, v19 + 32);
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x418))(v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A678E460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C2238);
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v34 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6891CE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A6748FEC();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A6891CC0();
  os_log_type_t v14 = sub_1A6892840();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v31 = v3;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = v8;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v29 = swift_slowAlloc();
    v41[0]._countAndFlagsBits = v29;
    uint64_t v32 = v6;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v28 = v16 + 4;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x1AD0BF3B0](v17, &type metadata for CoreSynthesizer.Utterance);
    uint64_t v33 = a2;
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)&long long v36 = sub_1A673F908(v18, v20, &v41[0]._countAndFlagsBits);
    uint64_t v6 = v32;
    sub_1A6892A50();
    swift_bridgeObjectRelease_n();
    a2 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A66D3000, v13, v14, "Enqueue utterances: %s", v16, 0xCu);
    uint64_t v21 = v29;
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v21, -1, -1);
    MEMORY[0x1AD0C1C50](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  unint64_t v22 = sub_1A6791138(a1);
  unint64_t v23 = v22;
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v25 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A6798284(v25, (uint64_t)v41);
      long long v38 = 0u;
      long long v39 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      char v40 = 9;
      TTSSpeechEvent.emit(forJob:)(v41[0]);
      sub_1A67982E0((uint64_t)v41);
      v25 += 208;
      --v24;
    }
    while (v24);
    unint64_t v22 = swift_bridgeObjectRelease();
  }
  if (*(void *)(v23 + 16) == 1)
  {
    uint64_t v26 = sub_1A6741AD0((uint64_t *)&unk_1E96C2240);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a2, v23+ ((*(unsigned __int8 *)(*(void *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v26 - 8) + 80)), v26);
  }
  else
  {
    MEMORY[0x1F4188790](v22);
    *(&v28 - 2) = (uint8_t *)v23;
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, *MEMORY[0x1E4FBD120], v6);
    sub_1A68926B0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A678E8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  sub_1A6741AD0(&qword_1E96C2250);
  v4[7] = swift_task_alloc();
  uint64_t v5 = sub_1A6891CE0();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A678E9A8, 0, 0);
}

uint64_t sub_1A678E9A8()
{
  uint64_t v27 = v0;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_unknownObjectRetain_n();
  uint64_t v5 = sub_1A6891CC0();
  os_log_type_t v6 = sub_1A6892840();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v23 = *(void *)(v0 + 64);
    uint64_t v25 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(ObjectType, v8);
    *(void *)(v0 + 16) = sub_1A673F908(v12, v13, &v26);
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1A66D3000, v5, v6, "Enqueue queueable: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v10, -1, -1);
    MEMORY[0x1AD0C1C50](v9, -1, -1);

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v25, v23);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 64);
    swift_unknownObjectRelease_n();

    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  long long v22 = *(_OWORD *)(v0 + 32);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 48)) + 0x120))(v14);
  *(void *)(v0 + 88) = v18;
  sub_1A6741AD0(&qword_1E96C2258);
  uint64_t v19 = swift_allocObject();
  *(void *)(v0 + 96) = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1A689DC40;
  *(_OWORD *)(v19 + 32) = v22;
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v18 + 328)
                                                 + **(int **)(*(void *)v18 + 328));
  swift_unknownObjectRetain();
  unint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v20;
  void *v20 = v0;
  v20[1] = sub_1A678ECF8;
  return v24(v19, 1);
}

uint64_t sub_1A678ECF8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4188298](sub_1A678EE34, 0, 0);
}

uint64_t sub_1A678EE34()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C2260);
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v0[7], v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v3);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v6, v5, 1, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C2260);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void, void, uint64_t))(v8 + 32))(v0[3], v0[7], v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  return result;
}

uint64_t sub_1A678EFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A6891CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A6748FEC();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1A6798284(a1, (uint64_t)v25);
  uint64_t v11 = sub_1A6891CC0();
  os_log_type_t v12 = sub_1A6892840();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v21[0] = a1;
    uint64_t v15 = v14;
    uint64_t v24 = v14;
    v21[1] = a2;
    *(_DWORD *)unint64_t v13 = 136315138;
    long long v22 = v2;
    sub_1A6798334();
    uint64_t v16 = sub_1A68930E0();
    uint64_t v23 = sub_1A673F908(v16, v17, &v24);
    uint64_t v3 = v22;
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    sub_1A67982E0((uint64_t)v25);
    _os_log_impl(&dword_1A66D3000, v11, v12, "Buffers for utterance: %s", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v18 = v15;
    a1 = v21[0];
    MEMORY[0x1AD0C1C50](v18, -1, -1);
    MEMORY[0x1AD0C1C50](v13, -1, -1);
  }
  else
  {
    sub_1A67982E0((uint64_t)v25);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1A6741AD0(&qword_1E96C2228);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A689DC40;
  sub_1A6798284(a1, v19 + 32);
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x430))(v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A678F2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2238);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A6891CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A6748FEC();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  swift_bridgeObjectRetain_n();
  os_log_type_t v12 = sub_1A6891CC0();
  os_log_type_t v13 = sub_1A6892840();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v31 = v7;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v33 = v4;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v36 = v30;
    uint64_t v32 = v5;
    *(_DWORD *)uint64_t v15 = 136315138;
    v28[1] = v15 + 4;
    uint64_t v29 = v15;
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = a2;
    uint64_t v18 = MEMORY[0x1AD0BF3B0](v16, &type metadata for CoreSynthesizer.Utterance);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v21 = v18;
    a2 = v17;
    uint64_t v35 = sub_1A673F908(v21, v20, &v36);
    uint64_t v5 = v32;
    sub_1A6892A50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    long long v22 = v29;
    _os_log_impl(&dword_1A66D3000, v12, v13, "Buffers for utterances: %s", v29, 0xCu);
    uint64_t v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v23, -1, -1);
    uint64_t v4 = v33;
    MEMORY[0x1AD0C1C50](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v31);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v24 = sub_1A6790938(a1);
  uint64_t v25 = v24;
  if (*(void *)(v24 + 16) == 1)
  {
    uint64_t v26 = sub_1A6741AD0((uint64_t *)&unk_1E96C2240);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a2, v25+ ((*(unsigned __int8 *)(*(void *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v26 - 8) + 80)), v26);
  }
  else
  {
    MEMORY[0x1F4188790](v24);
    v28[-2] = v25;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v34, *MEMORY[0x1E4FBD120], v4);
    sub_1A68926B0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A678F6D0()
{
  v1[2] = v0;
  uint64_t v2 = sub_1A6891CE0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A678F790, 0, 0);
}

uint64_t sub_1A678F790()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_1A6891CC0();
  os_log_type_t v6 = sub_1A6892840();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1A66D3000, v5, v6, "Stop speaking", v7, 2u);
    MEMORY[0x1AD0C1C50](v7, -1, -1);
  }
  uint64_t v9 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v10 = (void *)v0[2];
  uint64_t v11 = v0[3];

  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x120))(v12);
  v0[6] = v13;
  uint64_t v16 = (uint64_t (*)(void))(*(void *)(*(void *)v13 + 360) + **(int **)(*(void *)v13 + 360));
  uint64_t v14 = (void *)swift_task_alloc();
  v0[7] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1A678F9A4;
  return v16();
}

uint64_t sub_1A678F9A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A678FC38(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A678FCE0;
  return sub_1A678F6D0();
}

uint64_t sub_1A678FCE0()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1A678FE18()
{
  v1[2] = v0;
  uint64_t v2 = sub_1A6891CE0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A678FED8, 0, 0);
}

uint64_t sub_1A678FED8()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_1A6891CC0();
  os_log_type_t v6 = sub_1A6892840();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1A66D3000, v5, v6, "Pause speaking", v7, 2u);
    MEMORY[0x1AD0C1C50](v7, -1, -1);
  }
  uint64_t v9 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v10 = (void *)v0[2];
  uint64_t v11 = v0[3];

  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x120))(v12);
  v0[6] = v13;
  uint64_t v16 = (uint64_t (*)(void))(*(void *)(*(void *)v13 + 352) + **(int **)(*(void *)v13 + 352));
  uint64_t v14 = (void *)swift_task_alloc();
  v0[7] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1A679B1A8;
  return v16();
}

uint64_t sub_1A67900EC()
{
  v1[2] = v0;
  uint64_t v2 = sub_1A6891CE0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A67901AC, 0, 0);
}

uint64_t sub_1A67901AC()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_1A6891CC0();
  os_log_type_t v6 = sub_1A6892840();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1A66D3000, v5, v6, "Resume speaking", v7, 2u);
    MEMORY[0x1AD0C1C50](v7, -1, -1);
  }
  uint64_t v9 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v10 = (void *)v0[2];
  uint64_t v11 = v0[3];

  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x120))(v12);
  v0[6] = v13;
  uint64_t v16 = (uint64_t (*)(void))(*(void *)(*(void *)v13 + 344) + **(int **)(*(void *)v13 + 344));
  uint64_t v14 = (void *)swift_task_alloc();
  v0[7] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1A679B1A8;
  return v16();
}

uint64_t sub_1A67903C0(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_1A6891CE0();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A6790484, 0, 0);
}

uint64_t sub_1A6790484()
{
  uint64_t v30 = v0;
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_unknownObjectRetain_n();
  uint64_t v5 = sub_1A6891CC0();
  os_log_type_t v6 = sub_1A6892840();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v25 = *(void *)(v0 + 56);
    uint64_t v26 = *(void *)(v0 + 48);
    uint64_t v28 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v29 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
    *(void *)(v0 + 16) = sub_1A673F908(v11, v12, &v29);
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1A66D3000, v5, v6, "Cancel queued %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v9, -1, -1);
    MEMORY[0x1AD0C1C50](v8, -1, -1);

    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v28, v26);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 48);
    swift_unknownObjectRelease_n();

    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v17 = *(void *)(v0 + 32);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 40)) + 0x120))(v13);
  *(void *)(v0 + 72) = v18;
  uint64_t v19 = swift_getObjectType();
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 32))(v19, v17);
  uint64_t v22 = v21;
  *(void *)(v0 + 80) = v21;
  uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v18 + 336)
                                                 + **(int **)(*(void *)v18 + 336));
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1A67907E8;
  return v27(v20, v22);
}

uint64_t sub_1A67907E8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A6790938(uint64_t a1)
{
  uint64_t v2 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1A6741AD0(&qword_1E96C2238);
  uint64_t v5 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A6741AD0((uint64_t *)&unk_1E96C2240);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v43 - v12;
  uint64_t v14 = sub_1A6741AD0(&qword_1E96C23B0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v56 = (uint64_t)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v43 - v17;
  uint64_t v19 = *(void *)(a1 + 16);
  if (!v19) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v52 = type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  uint64_t v20 = a1 + 32;
  unsigned int v51 = *MEMORY[0x1E4FBD120];
  uint64_t v50 = (void (**)(char *, void, uint64_t))(v5 + 104);
  BOOL v49 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v48 = v8 + 32;
  uint64_t v47 = v8 + 8;
  v43[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v46 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v54 = v11;
  uint64_t v55 = v7;
  uint64_t v45 = v8;
  uint64_t v44 = v13;
  uint64_t v53 = v18;
  do
  {
    unint64_t v60 = v21;
    uint64_t v22 = sub_1A6741AD0(&qword_1E96C23C0);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v18, 1, 1, v22);
    MEMORY[0x1F4188790](v23);
    v43[-2] = v18;
    (*v50)(v57, v51, v58);
    sub_1A68926B0();
    sub_1A6798284(v20, (uint64_t)v65);
    uint64_t v24 = v56;
    sub_1A679A854((uint64_t)v18, v56);
    uint64_t v25 = sub_1A682C1C8(v59, (uint64_t)v65, 1, v24);
    uint64_t v26 = sub_1A68924A0();
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v4, 1, 1, v26);
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = 0;
    v28[3] = 0;
    v28[4] = v25;
    int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v26);
    swift_retain();
    if (v29 == 1)
    {
      sub_1A6750210((uint64_t)v4, (uint64_t *)&unk_1EB67A2C0);
    }
    else
    {
      sub_1A6892490();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v26);
    }
    uint64_t v30 = v4;
    if (v28[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v31 = sub_1A68923E0();
      uint64_t v33 = v32;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v33 = 0;
    }
    uint64_t v34 = v45;
    uint64_t v35 = v44;
    if (v33 | v31)
    {
      uint64_t v62 = 0;
      uint64_t v61 = 0;
      uint64_t v63 = v31;
      uint64_t v64 = v33;
    }
    uint64_t v4 = v30;
    swift_task_create();
    swift_release();
    uint64_t v36 = v54;
    uint64_t v37 = v55;
    (*v49)(v54, v35, v55);
    unint64_t v38 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v38 = sub_1A6796A64(0, *(void *)(v38 + 16) + 1, 1, v38);
    }
    unint64_t v40 = *(void *)(v38 + 16);
    unint64_t v39 = *(void *)(v38 + 24);
    uint64_t v41 = v38;
    if (v40 >= v39 >> 1) {
      uint64_t v41 = sub_1A6796A64(v39 > 1, v40 + 1, 1, v38);
    }
    *(void *)(v41 + 16) = v40 + 1;
    uint64_t v21 = v41;
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v41+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v40, v36, v37);
    swift_release();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v37);
    uint64_t v18 = v53;
    sub_1A6750210((uint64_t)v53, &qword_1E96C23B0);
    v20 += 208;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1A6791038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t (*)(void))(*(void *)(*(void *)a4 + 264) + **(int **)(*(void *)a4 + 264));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A6750954;
  return v7();
}

unint64_t sub_1A6791138(uint64_t a1)
{
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C23B0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v45 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1A6741AD0(&qword_1E96C2238);
  unint64_t v48 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6741AD0((uint64_t *)&unk_1E96C2240);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v30 - v13;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v51 = MEMORY[0x1E4FBC860];
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v40 = type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
    uint64_t v17 = a1 + 32;
    unsigned int v39 = *MEMORY[0x1E4FBD120];
    uint64_t v37 = (void (**)(char *, uint64_t))(v48 + 8);
    unint64_t v38 = (void (**)(char *, void, uint64_t))(v48 + 104);
    uint64_t v35 = v10 + 32;
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v33 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v31 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v32 = (void (**)(char *, uint64_t))(v6 + 8);
    v30[1] = a1;
    swift_bridgeObjectRetain();
    unint64_t v48 = MEMORY[0x1E4FBC860];
    uint64_t v41 = v14;
    uint64_t v42 = v10;
    do
    {
      sub_1A6798284(v17, (uint64_t)v50);
      uint64_t v19 = v43;
      uint64_t v18 = v44;
      (*v38)(v43, v39, v44);
      sub_1A6892620();
      (*v37)(v19, v18);
      (*v36)(v47, v14, v9);
      unint64_t v20 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_1A6796A64(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v20 = sub_1A6796A64(v21 > 1, v22 + 1, 1, v20);
      }
      *(void *)(v20 + 16) = v22 + 1;
      unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      unint64_t v48 = v20;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v20 + v23 + *(void *)(v10 + 72) * v22, v47, v9);
      sub_1A6798284((uint64_t)v50, (uint64_t)v49);
      uint64_t v24 = (uint64_t)v45;
      (*v34)(v45, v8, v5);
      (*v33)(v24, 0, 1, v5);
      sub_1A682C1C8(v46, (uint64_t)v49, 0, v24);
      MEMORY[0x1AD0BF380]();
      if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1A6892320();
      }
      sub_1A6892360();
      sub_1A6892300();
      (*v32)(v8, v5);
      uint64_t v14 = v41;
      (*v31)(v41, v9);
      sub_1A67982E0((uint64_t)v50);
      v17 += 208;
      --v16;
      uint64_t v10 = v42;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v15 = v51;
    unint64_t v25 = v48;
  }
  else
  {
    unint64_t v25 = MEMORY[0x1E4FBC860];
  }
  id v26 = v46;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = v15;
  id v28 = v26;
  sub_1A6891AE0();
  swift_release();
  return v25;
}

uint64_t sub_1A67916B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1A67916D0, 0, 0);
}

uint64_t sub_1A67916D0()
{
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 16)) + 0x120))();
  *(void *)(v0 + 32) = v2;
  uint64_t v3 = sub_1A6791978(v1);
  *(void *)(v0 + 40) = v3;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 328) + **(int **)(*(void *)v2 + 328));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A6791838;
  return v6(v3, 1);
}

uint64_t sub_1A6791838()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A6791978(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A6892EB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A6797988(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1AD0BFD30](v5, a1);
        unint64_t v8 = *(void *)(v18 + 16);
        unint64_t v7 = *(void *)(v18 + 24);
        if (v8 >= v7 >> 1) {
          sub_1A6797988(v7 > 1, v8 + 1, 1);
        }
        ++v5;
        uint64_t v9 = sub_1A6799F28(&qword_1E96C2410, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
        *(void *)(v18 + 16) = v8 + 1;
        uint64_t v10 = v18 + 16 * v8;
        *(void *)(v10 + 32) = v6;
        *(void *)(v10 + 40) = v9;
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v11 = (uint64_t *)(a1 + 32);
      unint64_t v12 = *(void *)(v18 + 16);
      uint64_t v13 = 16 * v12;
      do
      {
        uint64_t v14 = *v11;
        unint64_t v15 = *(void *)(v18 + 24);
        swift_retain();
        if (v12 >= v15 >> 1) {
          sub_1A6797988(v15 > 1, v12 + 1, 1);
        }
        uint64_t v16 = sub_1A6799F28(&qword_1E96C2410, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
        *(void *)(v18 + 16) = v12 + 1;
        uint64_t v17 = v18 + v13;
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v16;
        v13 += 16;
        ++v11;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1A6791B7C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6791BD8()
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  swift_release();
  unint64_t v1 = (void *)((char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__nextWordBlock);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1A6798390(*v1);
  return v2;
}

uint64_t sub_1A6791C88@<X0>(void **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x480))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    unint64_t v7 = sub_1A679AE1C;
  }
  else
  {
    unint64_t v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1A6791D30(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1A679ADF4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  unint64_t v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x488);
  sub_1A6798390(v3);
  return v7(v6, v5);
}

void (*sub_1A6791E00(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *uint64_t v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6791B7C();
  return sub_1A6791F44;
}

void sub_1A6791F44(void *a1)
{
}

uint64_t sub_1A6791FC4()
{
  return ((*(unsigned int (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x378))() >> 8) & 1;
}

uint64_t sub_1A679210C(char a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  int v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x378))();
  uint64_t v5 = *(uint64_t (**)(void))((*v3 & *v1) + 0x380);
  if (a1) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }

  return v5(v4 & 0xFFFFFEFF | v6);
}

uint64_t sub_1A67921D0@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x498))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A6792238(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x4A0))(*a1);
}

uint64_t (*sub_1A6792298(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t v2 = *(unsigned __int16 (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x378);
  uint64_t v3 = ((*MEMORY[0x1E4FBC8C8] & *v1) + 888) & 0xFFFFFFFFFFFFLL | 0x2E0F000000000000;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = (v2() >> 8) & 1;
  return sub_1A6792328;
}

uint64_t sub_1A6792328(uint64_t a1)
{
  unint64_t v1 = *(void **)a1;
  int v2 = *(unsigned __int8 *)(a1 + 24);
  int v3 = (*(uint64_t (**)(void))(a1 + 8))();
  if (v2) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x380))(v3 & 0xFFFFFEFF | v4);
}

void sub_1A679247C()
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t KeyPath = swift_getKeyPath();
  int v2 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))(KeyPath);
  swift_release();
  int v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  if (v3)
  {
    int v4 = *(uint64_t (**)(void))((*v2 & *v0) + 0x4C8);
    id v5 = v3;
    int v6 = (void *)v4();
    v10[0] = 0;
    LODWORD(v4) = objc_msgSend(v5, sel_setCategory_error_, v6, v10);

    id v7 = v10[0];
    if (!v4)
    {
      unint64_t v8 = v7;
      uint64_t v9 = (void *)sub_1A68916F0();

      swift_willThrow();
    }
  }
}

uint64_t (*sub_1A67925D8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A6792638;
}

uint64_t sub_1A6792638(uint64_t a1, char a2)
{
  return sub_1A67934C0(a1, a2, (uint64_t (*)(uint64_t))sub_1A679247C);
}

id sub_1A6792664(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t KeyPath = swift_getKeyPath();
  id v7 = *(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x5E8);
  unint64_t v8 = a1;
  v7(KeyPath);
  swift_release();
  uint64_t v9 = (id *)((char *)v8 + *a4);
  swift_beginAccess();
  id v10 = *v9;

  return v10;
}

id sub_1A679272C()
{
  return sub_1A6792740((uint64_t)&unk_1A689F718, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionCategory);
}

id sub_1A6792740(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x5E8))();
  swift_release();
  int v4 = (void **)((char *)v2 + *a2);
  swift_beginAccess();
  id v5 = *v4;

  return v5;
}

void sub_1A679280C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t KeyPath = swift_getKeyPath();
  v12[2] = a1;
  v12[3] = a3;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, void *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x5F0);
  id v10 = a3;
  uint64_t v11 = a1;
  v9(KeyPath, a5, v12, MEMORY[0x1E4FBC848] + 8);

  swift_release();
}

uint64_t sub_1A67928E8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x4C8))();
  *a2 = result;
  return result;
}

uint64_t sub_1A679294C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x4D0))(*a1);
}

void sub_1A67929B8(uint64_t a1, void *a2)
{
  int v3 = (void **)(a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionCategory);
  swift_beginAccess();
  int v4 = *v3;
  *int v3 = a2;
  id v5 = a2;

  sub_1A679247C();
}

void (*sub_1A6792A2C(void *a1))(void *a1)
{
  int v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *int v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A67925D8((uint64_t)v3);
  return sub_1A6792B70;
}

void sub_1A6792B70(void *a1)
{
}

void sub_1A6792C2C()
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t KeyPath = swift_getKeyPath();
  int v2 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))(KeyPath);
  swift_release();
  int v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  if (v3)
  {
    int v4 = *(uint64_t (**)(void))((*v2 & *v0) + 0x4F8);
    id v5 = v3;
    v10[0] = 0;
    unsigned int v6 = objc_msgSend(v5, sel_setCategoryOptions_error_, v4(), v10);

    id v7 = v10[0];
    if (!v6)
    {
      unint64_t v8 = v7;
      uint64_t v9 = (void *)sub_1A68916F0();

      swift_willThrow();
    }
  }
}

uint64_t (*sub_1A6792D80(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A6792DE0;
}

uint64_t sub_1A6792DE0(uint64_t a1, char a2)
{
  return sub_1A67934C0(a1, a2, (uint64_t (*)(uint64_t))sub_1A6792C2C);
}

uint64_t sub_1A6792EBC()
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  swift_release();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionCategoryOptions;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1A6793030@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x4F8))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6793094(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x500))(*a1);
}

void (*sub_1A67930F4(void *a1))(void *a1)
{
  int v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *int v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6792D80((uint64_t)v3);
  return sub_1A6793238;
}

void sub_1A6793238(void *a1)
{
}

void sub_1A67932F4()
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t KeyPath = swift_getKeyPath();
  int v2 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))(KeyPath);
  swift_release();
  int v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  if (v3)
  {
    int v4 = *(uint64_t (**)(void))((*v2 & *v0) + 0x528);
    id v5 = v3;
    v10[0] = 0;
    unsigned int v6 = objc_msgSend(v5, sel_setParticipatesInNowPlayingAppPolicy_error_, v4() & 1, v10);

    id v7 = v10[0];
    if (!v6)
    {
      unint64_t v8 = v7;
      uint64_t v9 = (void *)sub_1A68916F0();

      swift_willThrow();
    }
  }
}

uint64_t (*sub_1A6793448(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A67934A8;
}

uint64_t sub_1A67934A8(uint64_t a1, char a2)
{
  return sub_1A67934C0(a1, a2, (uint64_t (*)(uint64_t))sub_1A67932F4);
}

uint64_t sub_1A67934C0(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1A6793518()
{
  return sub_1A679393C((uint64_t)&unk_1A689F7C0, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionParticipatesInNowPlayingAppPolicy);
}

uint64_t sub_1A679354C@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x528))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A67935B4(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x530))(*a1);
}

void (*sub_1A6793614(void *a1))(void *a1)
{
  int v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *int v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A6793448((uint64_t)v3);
  return sub_1A6793758;
}

void sub_1A6793758(void *a1)
{
}

uint64_t (*sub_1A67937F8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6793868(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t KeyPath = swift_getKeyPath();
  id v7 = *(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x5E8);
  unint64_t v8 = a1;
  v7(KeyPath);
  swift_release();
  uint64_t v9 = (unsigned __int8 *)v8 + *a4;
  swift_beginAccess();
  uint64_t v10 = *v9;

  return v10;
}

uint64_t sub_1A6793928()
{
  return sub_1A679393C((uint64_t)&unk_1A689F828, &OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioSessionAutomaticallyDeactivatesAfterSpeaking);
}

uint64_t sub_1A679393C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x5E8))();
  swift_release();
  int v4 = (unsigned __int8 *)v2 + *a2;
  swift_beginAccess();
  return *v4;
}

uint64_t sub_1A67939F8(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t KeyPath = swift_getKeyPath();
  v12[2] = a1;
  char v13 = a3;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, void *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x5F0);
  uint64_t v10 = a1;
  v9(KeyPath, a5, v12, MEMORY[0x1E4FBC848] + 8);

  return swift_release();
}

uint64_t sub_1A6793AC4@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x558))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A6793B2C(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x560))(*a1);
}

void (*sub_1A6793B8C(void *a1))(void *a1)
{
  int v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  v3[5] = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___observationRegistrar;
  *int v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1A6799F28(&qword_1E96C14C8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer);
  sub_1A6891A80();
  swift_release();
  v3[7] = sub_1A67937F8();
  return sub_1A6793CD0;
}

void sub_1A6793CD0(void *a1)
{
}

void sub_1A6793CDC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_1A6891A70();
  swift_release();

  free(v1);
}

uint64_t sub_1A6793D68()
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  swift_release();
  return *((unsigned __int8 *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___usingAuxiliarySession);
}

uint64_t sub_1A6793DE4@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x5E8))(KeyPath);
  uint64_t result = swift_release();
  *a2 = *((unsigned char *)v3 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___usingAuxiliarySession);
  return result;
}

uint64_t sub_1A6793E80(char *a1, void **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  v6[2] = v3;
  char v7 = v2;
  (*(void (**)(uint64_t, void (*)(), void *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x5F0))(KeyPath, sub_1A679B1AC, v6, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

void *sub_1A6794124()
{
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E8))();
  swift_release();
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  id v2 = v1;
  return v1;
}

id sub_1A679428C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  int v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x5E8))(KeyPath);
  swift_release();
  id v5 = *(void **)((char *)v3 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  *a2 = v5;

  return v5;
}

void sub_1A6794338(void **a1, void **a2)
{
  id v2 = *a1;
  int v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  v7[2] = v3;
  v7[3] = v2;
  id v5 = *(void (**)(uint64_t, void (*)(), void *, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x5F0);
  id v6 = v2;
  v5(KeyPath, sub_1A679B08C, v7, MEMORY[0x1E4FBC848] + 8);
  swift_release();
}

void sub_1A6794410(void *a1, void *a2)
{
  int v3 = *(void **)((char *)a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
  *(void *)((char *)a1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession) = a2;
  id v4 = a2;

  id v5 = (void *)MEMORY[0x1E4FBC8C8];
  id v6 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x1B0))();
  id v7 = (id)(*(uint64_t (**)(void))((*v5 & *a1) + 0x370))();
  objc_msgSend(v6, sel_setAudioSession_, v7);
}

uint64_t sub_1A6794618(char a1)
{
  v39[2] = *(id *)MEMORY[0x1E4F143B8];
  if (a1)
  {
    swift_getKeyPath();
    id v2 = (void *)MEMORY[0x1E4FBC8C8];
    int v3 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8);
    v3();
    uint64_t result = swift_release();
    if (*((unsigned char *)v1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___usingAuxiliarySession)) {
      return result;
    }
    id v5 = objc_msgSend(self, sel_auxiliarySession);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v7 = MEMORY[0x1F4188790](KeyPath);
    unint64_t v8 = *(void (**)(uint64_t, void (*)()))((*v2 & *v1) + 0x5F0);
    v8(v7, sub_1A679B08C);
    swift_release();

    swift_getKeyPath();
    v3();
    swift_release();
    uint64_t v9 = OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession;
    uint64_t v10 = *(void **)((char *)v1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxiliarySession);
    if (v10)
    {
      uint64_t v11 = *(uint64_t (**)(void))((*v2 & *v1) + 0x4C8);
      id v12 = v10;
      char v13 = (void *)v11();
      v39[0] = 0;
      unsigned int v14 = objc_msgSend(v12, sel_setCategory_error_, v13, v39);

      id v15 = v39[0];
      if (!v14)
      {
        uint64_t v16 = v15;
        uint64_t v17 = (void *)sub_1A68916F0();

        swift_willThrow();
      }
    }
    swift_getKeyPath();
    v3();
    swift_release();
    uint64_t v18 = *(void **)((char *)v1 + v9);
    if (v18)
    {
      uint64_t v19 = *(uint64_t (**)(void))((*v2 & *v1) + 0x4F8);
      id v20 = v18;
      uint64_t v21 = v19();
      v39[0] = 0;
      LODWORD(v19) = objc_msgSend(v20, sel_setCategoryOptions_error_, v21, v39);

      id v22 = v39[0];
      if (!v19)
      {
        unint64_t v23 = v22;
        uint64_t v24 = (void *)sub_1A68916F0();

        swift_willThrow();
      }
    }
    swift_getKeyPath();
    v3();
    swift_release();
    unint64_t v25 = *(void **)((char *)v1 + v9);
    if (v25)
    {
      id v26 = *(uint64_t (**)(void))((*v2 & *v1) + 0x528);
      id v27 = v25;
      char v28 = v26();
      v39[0] = 0;
      LODWORD(v26) = objc_msgSend(v27, sel_setParticipatesInNowPlayingAppPolicy_error_, v28 & 1, v39);

      id v29 = v39[0];
      if (!v26)
      {
        uint64_t v30 = v29;
        uint64_t v31 = (void *)sub_1A68916F0();

        swift_willThrow();
      }
    }
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = MEMORY[0x1F4188790](v32);
    v8(v33, sub_1A679B1AC);
  }
  else
  {
    uint64_t v34 = swift_getKeyPath();
    uint64_t v35 = MEMORY[0x1F4188790](v34);
    uint64_t v36 = *(void (**)(uint64_t, void (*)()))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5F0);
    v36(v35, sub_1A67983A0);
    swift_release();
    uint64_t v37 = swift_getKeyPath();
    uint64_t v38 = MEMORY[0x1F4188790](v37);
    v36(v38, sub_1A67983CC);
  }
  return swift_release();
}

uint64_t sub_1A6794B9C@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x5D0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A6794C04(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x5D8))(*a1);
}

uint64_t (*sub_1A6794C64(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x5E8))(KeyPath);
  swift_release();
  *(unsigned char *)(a1 + 8) = *((unsigned char *)v1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___usingAuxiliarySession);
  return sub_1A6794D1C;
}

uint64_t sub_1A6794D1C(uint64_t a1)
{
  return sub_1A6794618(*(unsigned char *)(a1 + 8));
}

uint64_t sub_1A6794D44()
{
  return sub_1A6891A60();
}

uint64_t sub_1A6794DCC()
{
  return sub_1A6891A50();
}

id CoreSynthesizer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreSynthesizer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A67950A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  id v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_bridgeObjectRetain();
  sub_1A6787038((uint64_t)v9, (uint64_t)&unk_1E96C23E0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1A679527C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[21] = a4;
  v5[22] = a5;
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C23E8);
  v5[23] = v6;
  v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  uint64_t v7 = sub_1A6741AD0((uint64_t *)&unk_1E96C31F0);
  v5[26] = v7;
  v5[27] = *(void *)(v7 - 8);
  v5[28] = swift_task_alloc();
  uint64_t v8 = sub_1A6741AD0((uint64_t *)&unk_1E96C2240);
  v5[29] = v8;
  v5[30] = *(void *)(v8 - 8);
  v5[31] = swift_task_alloc();
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C23F0);
  unsigned char v5[32] = v9;
  v5[33] = *(void *)(v9 - 8);
  v5[34] = swift_task_alloc();
  sub_1A6741AD0(&qword_1E96C23F8);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A67954A0, 0, 0);
}

uint64_t sub_1A67954A0()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[30];
  uint64_t v4 = *(void *)(v0[21] + 16);
  v0[37] = v4;
  uint64_t v5 = (void (**)(void, void, void, void))(v1 + 56);
  uint64_t v6 = swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v7 = (void *)v0[35];
    uint64_t v8 = v0[29];
    uint64_t v9 = v0[34] + *(int *)(v2 + 48);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v9, v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v8);
    uint64_t v10 = (char *)v7 + *(int *)(v2 + 48);
    *uint64_t v7 = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v10, v9, v8);
    uint64_t v11 = 1;
    (*v5)(v7, 0, 1, v2);
  }
  else
  {
    (*v5)(v0[35], 1, 1, v2);
    uint64_t v11 = v0[37];
  }
  v0[38] = v11;
  uint64_t v12 = v0[36];
  uint64_t v13 = v0[32];
  uint64_t v14 = v0[33];
  sub_1A679ACA0(v0[35], v12);
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  uint64_t v16 = v0[31];
  if (v15 == 1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  else
  {
    uint64_t v19 = (char *)v0[36];
    uint64_t v20 = v0[32];
    uint64_t v22 = v0[29];
    uint64_t v21 = v0[30];
    v0[39] = *(void *)v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v16, &v19[*(int *)(v20 + 48)], v22);
    sub_1A6892530();
    unint64_t v23 = (void *)swift_task_alloc();
    v0[40] = v23;
    *unint64_t v23 = v0;
    v23[1] = sub_1A6795730;
    uint64_t v24 = v0[26];
    return MEMORY[0x1F4187ED8](v0 + 2, 0, 0, v24, v0 + 20);
  }
}

uint64_t sub_1A6795730()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1A6795C50;
  }
  else {
    uint64_t v1 = sub_1A6795840;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1A6795840()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 32);
  if (v2 >> 3 != 0xFFFFFFFF)
  {
    uint64_t v14 = *(void *)(v0 + 24);
    uint64_t v15 = *(void *)(v0 + 40);
    if (v2 >> 61 == 3)
    {
      if (*(void *)(v0 + 312) == *(void *)(v0 + 296) - 1)
      {
        uint64_t v40 = *(void *)(v0 + 192);
        uint64_t v39 = *(void *)(v0 + 200);
        uint64_t v41 = *(void *)(v0 + 184);
        *(void *)(v0 + 80) = v1;
        *(void *)(v0 + 88) = v14;
        *(void *)(v0 + 96) = v2;
        *(void *)(v0 + 104) = v15;
        sub_1A6741AD0(&qword_1E96C23C0);
        sub_1A6892650();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
        *(void *)(v0 + 152) = 0;
        sub_1A6892660();
      }
      goto LABEL_24;
    }
    if (v2 >> 61 == 4 && v2 == 0x8000000000000000 && (v14 | v1 | v15) == 0)
    {
      if (*(void *)(v0 + 312))
      {
LABEL_24:
        uint64_t v42 = (void *)swift_task_alloc();
        *(void *)(v0 + 320) = v42;
        void *v42 = v0;
        v42[1] = sub_1A6795730;
        uint64_t v9 = *(void *)(v0 + 208);
        uint64_t v6 = v0 + 16;
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        uint64_t v10 = v0 + 160;
        return MEMORY[0x1F4187ED8](v6, v7, v8, v9, v10);
      }
      uint64_t v19 = *(void *)(v0 + 192);
      uint64_t v18 = *(void *)(v0 + 200);
      uint64_t v20 = *(void *)(v0 + 184);
      *(void *)(v0 + 48) = 0;
      *(void *)(v0 + 56) = 0;
      *(_OWORD *)(v0 + 64) = xmmword_1A689F420;
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 192);
      uint64_t v18 = *(void *)(v0 + 200);
      uint64_t v20 = *(void *)(v0 + 184);
      *(void *)(v0 + 112) = v1;
      *(void *)(v0 + 120) = v14;
      *(void *)(v0 + 128) = v2;
      *(void *)(v0 + 136) = v15;
    }
    sub_1A6741AD0(&qword_1E96C23C0);
    sub_1A6892650();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 232);
  (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  unint64_t v11 = *(void *)(v0 + 296);
  unint64_t v12 = *(void *)(v0 + 304);
  if (v12 == v11)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 264) + 56))(*(void *)(v0 + 280), 1, 1, *(void *)(v0 + 256));
    unint64_t v13 = *(void *)(v0 + 296);
  }
  else
  {
    if (v12 >= v11)
    {
      __break(1u);
      return MEMORY[0x1F4187ED8](v6, v7, v8, v9, v10);
    }
    uint64_t v21 = *(unint64_t **)(v0 + 280);
    uint64_t v22 = *(void *)(v0 + 256);
    uint64_t v23 = *(void *)(v0 + 264);
    uint64_t v24 = *(void *)(v0 + 232);
    uint64_t v25 = *(void *)(v0 + 240);
    unint64_t v13 = v12 + 1;
    uint64_t v26 = *(void *)(v0 + 272) + *(int *)(v22 + 48);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16))(v26, *(void *)(v0 + 168)+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v12, v24);
    id v27 = (char *)v21 + *(int *)(v22 + 48);
    *uint64_t v21 = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v27, v26, v24);
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  }
  *(void *)(v0 + 304) = v13;
  uint64_t v28 = *(void *)(v0 + 288);
  uint64_t v29 = *(void *)(v0 + 256);
  uint64_t v30 = *(void *)(v0 + 264);
  sub_1A679ACA0(*(void *)(v0 + 280), v28);
  int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  uint64_t v32 = *(char **)(v0 + 288);
  if (v31 != 1)
  {
    uint64_t v36 = *(void *)(v0 + 248);
    uint64_t v35 = *(void *)(v0 + 256);
    uint64_t v38 = *(void *)(v0 + 232);
    uint64_t v37 = *(void *)(v0 + 240);
    *(void *)(v0 + 312) = *(void *)v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v36, &v32[*(int *)(v35 + 48)], v38);
    sub_1A6892530();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_1A6795C50()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  uint64_t v4 = v0 + 20;
  v0[18] = v0[20];
  sub_1A6741AD0(&qword_1E96C23C0);
  sub_1A6892660();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  unint64_t v10 = v0[37];
  unint64_t v11 = v0[38];
  if (v11 == v10)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[33] + 56))(v0[35], 1, 1, v0[32]);
    unint64_t v12 = v0[37];
  }
  else
  {
    if (v11 >= v10)
    {
      __break(1u);
      return MEMORY[0x1F4187ED8](v5, v6, v7, v8, v9);
    }
    unint64_t v13 = (unint64_t *)v0[35];
    uint64_t v14 = v0[32];
    uint64_t v15 = v0[33];
    uint64_t v17 = v0[29];
    uint64_t v16 = v0[30];
    unint64_t v12 = v11 + 1;
    uint64_t v18 = v0[34] + *(int *)(v14 + 48);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v18, v0[21]+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v11, v17);
    uint64_t v19 = (char *)v13 + *(int *)(v14 + 48);
    unint64_t *v13 = v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v19, v18, v17);
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    uint64_t v4 = v0 + 20;
  }
  v0[38] = v12;
  uint64_t v20 = v0[36];
  uint64_t v22 = v0[32];
  uint64_t v21 = v0[33];
  sub_1A679ACA0(v0[35], v20);
  int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v20, 1, v22);
  uint64_t v24 = (char *)v0[36];
  if (v23 != 1)
  {
    uint64_t v28 = v0[31];
    uint64_t v27 = v0[32];
    uint64_t v30 = v0[29];
    uint64_t v29 = v0[30];
    v0[39] = *(void *)v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v28, &v24[*(int *)(v27 + 48)], v30);
    sub_1A6892530();
    int v31 = (void *)swift_task_alloc();
    v0[40] = v31;
    void *v31 = v0;
    v31[1] = sub_1A6795730;
    uint64_t v8 = v0[26];
    uint64_t v5 = (uint64_t)(v0 + 2);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = v4;
    return MEMORY[0x1F4187ED8](v5, v6, v7, v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1A6795F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  sub_1A6741AD0(&qword_1E96C1CE8);
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A6795FF4, 0, 0);
}

uint64_t sub_1A6795FF4()
{
  uint64_t v1 = *(void *)(v0[9] + 16);
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    while (1)
    {
      v0[12] = v3;
      sub_1A673E788(v2 + 40 * v3 + 32, (uint64_t)(v0 + 2));
      uint64_t v4 = v0[5];
      uint64_t v5 = v0[6];
      sub_1A673E63C(v0 + 2, v4);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5)) {
        break;
      }
      uint64_t v6 = v0[11];
      uint64_t v7 = v0[12] + 1;
      sub_1A6741A24((uint64_t)(v0 + 2));
      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      uint64_t v3 = v0[12] + 1;
      uint64_t v2 = v0[9];
    }
    uint64_t v8 = v0[5];
    uint64_t v9 = v0[6];
    sub_1A673E63C(v0 + 2, v8);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 16) + **(int **)(v9 + 16));
    unint64_t v10 = (void *)swift_task_alloc();
    v0[13] = v10;
    *unint64_t v10 = v0;
    v10[1] = sub_1A6796224;
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[8];
    return v17(v11, v12, v8, v9);
  }
  else
  {
LABEL_10:
    uint64_t v14 = v0[7];
    uint64_t v15 = sub_1A6891B40();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_1A6796224()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A6796320, 0, 0);
}

uint64_t sub_1A6796320()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = sub_1A6891B40();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1A6750210(v1, &qword_1E96C1CE8);
    do
    {
      uint64_t v4 = v0[11];
      uint64_t v5 = v0[12] + 1;
      sub_1A6741A24((uint64_t)(v0 + 2));
      if (v5 == v4)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[7], 1, 1, v2);
        goto LABEL_10;
      }
      uint64_t v6 = v0[12] + 1;
      v0[12] = v6;
      sub_1A673E788(v0[9] + 40 * v6 + 32, (uint64_t)(v0 + 2));
      uint64_t v7 = v0[5];
      uint64_t v8 = v0[6];
      sub_1A673E63C(v0 + 2, v7);
    }
    while (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) == 0);
    uint64_t v9 = v0[5];
    uint64_t v10 = v0[6];
    sub_1A673E63C(v0 + 2, v9);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 16) + **(int **)(v10 + 16));
    uint64_t v11 = (void *)swift_task_alloc();
    v0[13] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1A6796224;
    uint64_t v12 = v0[10];
    uint64_t v13 = v0[8];
    return v17(v12, v13, v9, v10);
  }
  else
  {
    uint64_t v15 = v0[7];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v15, v1, v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
    sub_1A6741A24((uint64_t)(v0 + 2));
LABEL_10:
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_1A67965FC(uint64_t a1, uint64_t a2)
{
  return sub_1A67968CC(a1, a2, MEMORY[0x1F418C118]);
}

uint64_t sub_1A6796608(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A6891FE0();
  *a2 = 0;
  return result;
}

uint64_t sub_1A6796680(uint64_t a1, id *a2)
{
  char v3 = sub_1A6891FF0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A6796700@<X0>(uint64_t *a1@<X8>)
{
  sub_1A6892000();
  uint64_t v2 = sub_1A6891FD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A6796744@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A67980CC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1A6796784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A6891FD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A67967CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A6892000();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A67967F8(uint64_t a1)
{
  uint64_t v2 = sub_1A6799F28(&qword_1E96C2308, type metadata accessor for Category);
  uint64_t v3 = sub_1A6799F28(&qword_1E96C2310, type metadata accessor for Category);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A67968B4(uint64_t a1, uint64_t a2)
{
  return sub_1A67968CC(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A67968CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A6892000();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A6796910()
{
  sub_1A6892000();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A6796964()
{
  sub_1A6892000();
  sub_1A6893200();
  sub_1A68920F0();
  uint64_t v0 = sub_1A6893250();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A67969D8()
{
  uint64_t v0 = sub_1A6892000();
  uint64_t v2 = v1;
  if (v0 == sub_1A6892000() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A6893120();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A6796A64(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C23D0);
  uint64_t v10 = *(void *)(sub_1A6741AD0((uint64_t *)&unk_1E96C2240) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1A6892E50();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1A6741AD0((uint64_t *)&unk_1E96C2240) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A679A994(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

unint64_t sub_1A6796CD4(uint64_t a1)
{
  uint64_t v2 = sub_1A68929A0();

  return sub_1A6796D18(a1, v2);
}

unint64_t sub_1A6796D18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1A67501D4(0, (unint64_t *)&qword_1E96C15A8);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1A68929B0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1A68929B0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1A6796E34(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1A6741AD0(&qword_1E96C2420);
    uint64_t v2 = sub_1A6892EE0();
    uint64_t v18 = v2;
    sub_1A6892E10();
    uint64_t v3 = sub_1A6892E40();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1A67501D4(0, (unint64_t *)&qword_1E96C15A8);
      do
      {
        swift_dynamicCast();
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1A6797068(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1A68929A0();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1A6892E40();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1A6797068(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C2420);
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    int v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1A68929A0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1A679733C(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1A6892BA0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1A68929A0();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            unint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *unint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            unint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

id sub_1A67974F0()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C2420);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1A6797698()
{
  unint64_t result = qword_1E96C21A0;
  if (!qword_1E96C21A0)
  {
    sub_1A67501D4(255, (unint64_t *)&qword_1E96C15A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C21A0);
  }
  return result;
}

void sub_1A67976F4()
{
  sub_1A6789C40(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1A6797720()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A6797758(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1AD0C1D60](v1 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    unsigned __int8 v5 = v2;
    sub_1A678C308(&v5);
  }
}

uint64_t sub_1A67977C0()
{
  return sub_1A679AE44(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__speechStateObserver);
}

uint64_t sub_1A67977E4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return sub_1A678B370((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A6797878()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__nextWordBlock);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *uint64_t v4 = v2;
  v4[1] = v3;
  sub_1A6798390(v2);
  return sub_1A67978FC(v5);
}

uint64_t sub_1A67978FC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1A679790C()
{
  sub_1A67929B8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1A6797938()
{
}

void sub_1A6797950()
{
}

uint64_t sub_1A6797968()
{
  return sub_1A679A2C8(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__audioSessionAutomaticallyDeactivatesAfterSpeaking);
}

uint64_t sub_1A6797988(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A67979A8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A67979A8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2258);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    id v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1A6741AD0(&qword_1E96C2418);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

void *sub_1A6797B34(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 56);
  uint64_t v4 = a4 + 56;
  uint64_t v5 = v6;
  uint64_t v38 = v4;
  uint64_t v7 = -1 << *(unsigned char *)(v4 - 24);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v38;
    result[2] = ~v7;
    result[3] = v12;
    result[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  uint64_t v35 = -1 << *(unsigned char *)(v4 - 24);
  uint64_t v36 = result;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v37 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v15 = v14 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v19 = *(void *)(a4 + 48) + 104 * v15;
    uint64_t v21 = *(void *)v19;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v23 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    __int16 v25 = *(_WORD *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 48);
    char v27 = *(unsigned char *)(v19 + 56);
    uint64_t v29 = *(void *)(v19 + 64);
    uint64_t v28 = *(void *)(v19 + 72);
    uint64_t v30 = *(void **)(v19 + 80);
    int v31 = *(_DWORD *)(v19 + 88);
    char v32 = *(unsigned char *)(v19 + 92);
    int v33 = *(_DWORD *)(v19 + 96);
    LOBYTE(v19) = *(unsigned char *)(v19 + 100);
    *(void *)uint64_t v11 = v21;
    *(void *)(v11 + 8) = v20;
    *(void *)(v11 + 16) = v23;
    *(void *)(v11 + 24) = v22;
    *(void *)(v11 + 32) = v24;
    *(_WORD *)(v11 + 40) = v25;
    *(void *)(v11 + 48) = v26;
    *(unsigned char *)(v11 + 56) = v27;
    *(void *)(v11 + 64) = v29;
    *(void *)(v11 + 72) = v28;
    *(void *)(v11 + 80) = v30;
    *(_DWORD *)(v11 + 88) = v31;
    *(unsigned char *)(v11 + 92) = v32;
    *(_DWORD *)(v11 + 96) = v33;
    *(unsigned char *)(v11 + 100) = v19;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v34 = v30;
      goto LABEL_38;
    }
    v11 += 104;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = v30;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v16 >= v37) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v38 + 8 * v16);
    if (!v17)
    {
      v12 += 2;
      if (v16 + 1 >= v37)
      {
        unint64_t v9 = 0;
        int64_t v12 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v38 + 8 * v12);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v37) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v38 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v12 = v16 + 3;
        if (v16 + 3 < v37)
        {
          unint64_t v17 = *(void *)(v38 + 8 * v12);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v12;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v37)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v38 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v37)
              {
                unint64_t v9 = 0;
                int64_t v12 = v37 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v38 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v16 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v35;
      uint64_t result = v36;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v12 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A6797E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v19[3] = type metadata accessor for DefaultVoiceSource();
  v19[4] = &protocol witness table for DefaultVoiceSource;
  uint64_t v18 = a2;
  v19[0] = a1;
  uint64_t v10 = *(void *)sub_1A67F8E18();
  v15[0] = v10;
  uint64_t v16 = a2;
  sub_1A674CEE4();
  sub_1A6892B20();
  sub_1A6784078();
  if ((sub_1A6891FC0() & 1) == 0)
  {
    uint64_t v16 = v10;
    sub_1A6892B60();
  }
  type metadata accessor for VoiceResolver();
  sub_1A673E788((uint64_t)v19, (uint64_t)v15);
  uint64_t v16 = a3;
  uint64_t v17 = v18;
  uint64_t v14 = a4;
  uint64_t v11 = VoiceResolver.__allocating_init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)(v15, &v17, &v16, &v14);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a5 + 912))(v11);
  sub_1A6741A24((uint64_t)v19);
  return v12;
}

uint64_t sub_1A6797F58(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v26[3] = a6;
  v26[4] = a7;
  uint64_t v13 = sub_1A675026C(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v13, a1, a6);
  uint64_t v14 = *a2;
  uint64_t v15 = *a3;
  uint64_t v16 = *a4;
  uint64_t v25 = v14;
  uint64_t v17 = *(void *)sub_1A67F8E18();
  v22[0] = v17;
  uint64_t v23 = v14;
  sub_1A674CEE4();
  sub_1A6892B20();
  sub_1A6784078();
  if ((sub_1A6891FC0() & 1) == 0)
  {
    uint64_t v23 = v17;
    sub_1A6892B60();
  }
  type metadata accessor for VoiceResolver();
  sub_1A673E788((uint64_t)v26, (uint64_t)v22);
  uint64_t v23 = v15;
  uint64_t v24 = v25;
  uint64_t v21 = v16;
  uint64_t v18 = VoiceResolver.__allocating_init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)(v22, &v24, &v23, &v21);
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(a5 + 912))(v18);
  sub_1A6741A24((uint64_t)v26);
  return v19;
}

uint64_t sub_1A67980CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1A6798104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v13;
  uint64_t v19 = *v15;
  v18[0] = MEMORY[0x1E4FBC860];
  sub_1A674CEE4();
  sub_1A6741AD0(&qword_1EB67A298);
  sub_1A6766A64((unint64_t *)&qword_1EB67A2A0, &qword_1EB67A298);
  sub_1A6892B90();
  uint64_t v17 = v14;
  v18[0] = v18[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, a5);
  return sub_1A6797F58((uint64_t)v12, &v19, v18, &v17, a4, a5, a6);
}

uint64_t sub_1A6798284(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A67982E0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A6798334()
{
  unint64_t result = qword_1E96C2230;
  if (!qword_1E96C2230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2230);
  }
  return result;
}

uint64_t sub_1A6798388(uint64_t a1)
{
  return sub_1A67950A4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A6798390(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_1A67983A0()
{
  sub_1A6794410(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1A67983CC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer___usingAuxiliarySession) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1A67983E4()
{
  return type metadata accessor for CoreSynthesizer();
}

uint64_t sub_1A67983EC()
{
  uint64_t result = sub_1A6891AA0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for CoreSynthesizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreSynthesizer);
}

uint64_t dispatch thunk of CoreSynthesizer.queue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of CoreSynthesizer.queue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of CoreSynthesizer.queue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of CoreSynthesizer.voiceResolver.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of CoreSynthesizer.voiceResolver.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of CoreSynthesizer.voiceResolver.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of CoreSynthesizer.voices.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of CoreSynthesizer.voices.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of CoreSynthesizer.voices.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioQueue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioQueue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioQueue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of CoreSynthesizer.bufferedAudioQueue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of CoreSynthesizer.bufferedAudioQueue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of CoreSynthesizer.bufferedAudioQueue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of CoreSynthesizer.offlineChain.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of CoreSynthesizer.offlineChain.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of CoreSynthesizer.offlineChain.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of CoreSynthesizer.selectionProviders.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of CoreSynthesizer.selectionProviders.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of CoreSynthesizer.selectionProviders.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of CoreSynthesizer.effects.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of CoreSynthesizer.effects.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of CoreSynthesizer.effects.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of CoreSynthesizer.realtimeEffects.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of CoreSynthesizer.realtimeEffects.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of CoreSynthesizer.realtimeEffects.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioSession.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioSession.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioSession.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x350))();
}

uint64_t dispatch thunk of CoreSynthesizer.channels.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of CoreSynthesizer.channels.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of CoreSynthesizer.channels.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioQueueFlags.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioQueueFlags.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioQueueFlags.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of CoreSynthesizer.__allocating_init(voiceResolver:)()
{
  return (*(uint64_t (**)(void))(v0 + 912))();
}

uint64_t dispatch thunk of CoreSynthesizer.voice(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x400);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1A677B9EC;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of CoreSynthesizer.voice(locale:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x408);
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A677B9EC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of CoreSynthesizer.enqueue(utterance:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of CoreSynthesizer.enqueue(utterances:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x418))();
}

uint64_t dispatch thunk of CoreSynthesizer.enqueue(queueable:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x420);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1A677B9EC;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of CoreSynthesizer.buffers(forSpeech:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x428))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x430))();
}

uint64_t dispatch thunk of CoreSynthesizer.stop()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x438);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return v5();
}

uint64_t dispatch thunk of CoreSynthesizer.pause()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x440);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return v5();
}

uint64_t dispatch thunk of CoreSynthesizer.resume()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x448);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return v5();
}

uint64_t dispatch thunk of CoreSynthesizer.cancel(queueable:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x450);
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A677B9EC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of CoreSynthesizer.mixToTelephonyUplink.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x498))();
}

uint64_t dispatch thunk of CoreSynthesizer.mixToTelephonyUplink.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4A0))();
}

uint64_t dispatch thunk of CoreSynthesizer.mixToTelephonyUplink.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4A8))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionCategory.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4C8))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionCategory.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4D0))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionCategory.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4D8))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionCategoryOptions.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x4F8))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionCategoryOptions.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x500))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionCategoryOptions.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x508))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionParticipatesInNowPlayingAppPolicy.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x528))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionParticipatesInNowPlayingAppPolicy.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x530))();
}

uint64_t dispatch thunk of CoreSynthesizer.auxSessionParticipatesInNowPlayingAppPolicy.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x538))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioSessionAutomaticallyDeactivatesAfterSpeaking.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x558))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioSessionAutomaticallyDeactivatesAfterSpeaking.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x560))();
}

uint64_t dispatch thunk of CoreSynthesizer.audioSessionAutomaticallyDeactivatesAfterSpeaking.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x568))();
}

uint64_t dispatch thunk of CoreSynthesizer.useAuxiliarySession.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5D0))();
}

uint64_t dispatch thunk of CoreSynthesizer.useAuxiliarySession.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5D8))();
}

uint64_t dispatch thunk of CoreSynthesizer.useAuxiliarySession.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x5E0))();
}

id sub_1A6799AA0(id result, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3 >> 61;
  if (a3 >> 61 == 2) {
    return result;
  }
  if (v3 == 1) {
    return (id)sub_1A6799AC8((uint64_t)result, a2, a3);
  }
  if (!v3) {
    return (id)swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1A6799AC8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 3 <= 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for CoreSynthesizer.Event(uint64_t a1)
{
}

void sub_1A6799AF4(void *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3 >> 61;
  if (a3 >> 61 == 2)
  {
  }
  else if (v3 == 1)
  {
    sub_1A6799B1C((uint64_t)a1, a2, a3);
  }
  else if (!v3)
  {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A6799B1C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 3 <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for CoreSynthesizer.Event(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_1A6799AA0(*(id *)a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t assignWithCopy for CoreSynthesizer.Event(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_1A6799AA0(*(id *)a2, v4, v5);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  sub_1A6799AF4(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for CoreSynthesizer.Event(uint64_t a1, _OWORD *a2)
{
  id v3 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v6;
  sub_1A6799AF4(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreSynthesizer.Event(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 3;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreSynthesizer.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 8 * -a2;
      *(void *)(result + 24) = 0;
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A6799CCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16) >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1A6799CE8(uint64_t result)
{
  *(void *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A6799CF8(uint64_t result, uint64_t a2)
{
  if (a2 < 4)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 7 | (a2 << 61);
  }
  else
  {
    *(void *)uint64_t result = (a2 - 4);
    *(_OWORD *)(result + 8) = xmmword_1A689F430;
    *(void *)(result + 24) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Event()
{
  return &type metadata for CoreSynthesizer.Event;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.SynthesisError()
{
  return &type metadata for CoreSynthesizer.SynthesisError;
}

uint64_t dispatch thunk of VoiceSelectionProvider.enabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VoiceSelectionProvider.selection(forLocale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_1A677B9EC;
  return v11(a1, a2, a3, a4);
}

void type metadata accessor for CategoryOptions(uint64_t a1)
{
}

void type metadata accessor for Category(uint64_t a1)
{
}

void sub_1A6799E98(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1A6799EE0()
{
  return sub_1A6799F28(&qword_1E96C22D8, type metadata accessor for Category);
}

uint64_t sub_1A6799F28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A6799F70()
{
  return sub_1A6799F28(&qword_1E96C22E0, type metadata accessor for Category);
}

uint64_t sub_1A6799FB8()
{
  return sub_1A6799F28(&qword_1E96C14B0, type metadata accessor for Category);
}

uint64_t sub_1A679A000()
{
  return sub_1A6799F28(&qword_1E96C22E8, type metadata accessor for CategoryOptions);
}

uint64_t sub_1A679A048()
{
  return sub_1A6799F28(&qword_1E96C22F0, type metadata accessor for CategoryOptions);
}

uint64_t sub_1A679A090()
{
  return sub_1A6799F28(&qword_1E96C22F8, type metadata accessor for CategoryOptions);
}

uint64_t sub_1A679A0D8()
{
  return sub_1A6799F28(&qword_1E96C2300, type metadata accessor for CategoryOptions);
}

uint64_t sub_1A679A124()
{
  uint64_t v2 = *(void *)(v0 + 32);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_1A6750954;
  return sub_1A678C8E0((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A679A1B8()
{
  return sub_1A679AE44(&OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__deactivateAudioSessionTimerTask);
}

uint64_t sub_1A679A1D8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A679A210(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A677B9EC;
  long long v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96C2328 + dword_1E96C2328);
  return v6(a1, v4);
}

uint64_t sub_1A679A2C8(void *a1)
{
  char v2 = *(unsigned char *)(v1 + 24);
  int v3 = (unsigned char *)(*(void *)(v1 + 16) + *a1);
  uint64_t result = swift_beginAccess();
  *int v3 = v2;
  return result;
}

void sub_1A679A324()
{
  char v1 = *(unsigned char *)(v0 + 24);
  char v2 = (unsigned char *)(*(void *)(v0 + 16)
               + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionParticipatesInNowPlayingAppPolicy);
  swift_beginAccess();
  *char v2 = v1;
  sub_1A67932F4();
}

void sub_1A679A38C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__auxSessionCategoryOptions);
  swift_beginAccess();
  *char v2 = v1;
  sub_1A6792C2C();
}

uint64_t sub_1A679A3F0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A679A430()
{
  char v2 = *(const void **)(v0 + 16);
  int v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A677B9EC;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1E96C2338 + dword_1E96C2338);
  return v5(v2, v3);
}

uint64_t sub_1A679A4E8()
{
  uint64_t v2 = v0[2];
  int v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  long long v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E96C2358 + dword_1E96C2358);
  return v6(v2, v3, v4);
}

uint64_t sub_1A679A5A8()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A679A5F0()
{
  uint64_t v2 = v0[2];
  int v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  long long v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E96C2378 + dword_1E96C2378);
  return v6(v2, v3, v4);
}

uint64_t sub_1A679A6B0()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A679A6F0()
{
  uint64_t v2 = *(void **)(v0 + 32);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_1A677B9EC;
  return sub_1A6786F28((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A679A784(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1A6750210(v3, &qword_1E96C23B0);
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(v3, 0, 1, v4);
}

uint64_t sub_1A679A854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C23B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A679A8C0()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A679A900()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A6750954;
  return sub_1A6791038((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A679A994(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_1A6741AD0((uint64_t *)&unk_1E96C2240) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A679AAF0()
{
  uint64_t v1 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A679ABC8()
{
  uint64_t v2 = *(void *)(sub_1A6741AD0(&qword_1E96C23C0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  return sub_1A679527C((uint64_t)v5, v6, v7, v3, v4);
}

uint64_t sub_1A679ACA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C23F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A679AD08()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A679AD48()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1A677B9EC;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1A67916D0, 0, 0);
}

uint64_t sub_1A679ADF4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A679AE1C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A679AE44(void *a1)
{
  *(void *)(*(void *)(v1 + 16) + *a1) = *(void *)(v1 + 24);
  swift_retain();
  return swift_release();
}

void sub_1A679AE88()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1 + OBJC_IVAR____TtC12TextToSpeech15CoreSynthesizer__effectManager;
  swift_beginAccess();
  uint64_t v7 = *(void **)(v3 + 64);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)v2;
  long long v5 = *(_OWORD *)(v2 + 32);
  long long v4 = *(_OWORD *)(v2 + 48);
  long long v6 = *(_OWORD *)(v2 + 16);
  *(void *)(v3 + 64) = *(void *)(v2 + 64);
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  sub_1A679AF6C(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1A679AF6C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A679AFF4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

void sub_1A679B08C()
{
}

void sub_1A679B0A4()
{
}

void sub_1A679B0BC()
{
}

uint64_t sub_1A679B0D4()
{
  return sub_1A678773C();
}

uint64_t sub_1A679B0EC()
{
  return sub_1A6786100();
}

void sub_1A679B104()
{
}

uint64_t sub_1A679B11C()
{
  return sub_1A6784CAC();
}

uint64_t sub_1A679B134()
{
  return sub_1A678CD64();
}

void sub_1A679B1AC()
{
}

unint64_t sub_1A679B1C4()
{
  return sub_1A675B280(MEMORY[0x1E4FBC860]);
}

unint64_t VoiceSource.disambiguations.getter()
{
  return sub_1A675B280(MEMORY[0x1E4FBC860]);
}

unint64_t sub_1A679B1DC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1A6741AD0(&qword_1E96C1578);
    id v2 = (void *)sub_1A6892EF0();
  }
  else
  {
    id v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = sub_1A6741AD0((uint64_t *)&unk_1EB67A240);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = &v7[*(int *)(v4 + 48)];
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v33[1] = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    swift_retain();
    while (1)
    {
      sub_1A675B090(v11, (uint64_t)v7, (uint64_t *)&unk_1EB67A240);
      unint64_t result = sub_1A67AC35C((uint64_t)v7);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v2[6];
      uint64_t v17 = sub_1A6891A40();
      (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v7, v17);
      uint64_t v18 = v2[7] + 104 * v15;
      uint64_t v19 = *((void *)v9 + 3);
      uint64_t v20 = *((void *)v9 + 4);
      __int16 v21 = *((_WORD *)v9 + 20);
      uint64_t v22 = *((void *)v9 + 6);
      char v23 = v9[56];
      uint64_t v24 = *((void *)v9 + 10);
      int v25 = *((_DWORD *)v9 + 22);
      char v26 = v9[92];
      unint64_t result = *((unsigned int *)v9 + 24);
      char v27 = v9[100];
      long long v28 = *(_OWORD *)(v9 + 8);
      long long v29 = *((_OWORD *)v9 + 4);
      *(void *)uint64_t v18 = *(void *)v9;
      *(_OWORD *)(v18 + 8) = v28;
      *(void *)(v18 + 24) = v19;
      *(void *)(v18 + 32) = v20;
      *(_WORD *)(v18 + 40) = v21;
      *(void *)(v18 + 48) = v22;
      *(unsigned char *)(v18 + 56) = v23;
      *(_OWORD *)(v18 + 64) = v29;
      *(void *)(v18 + 80) = v24;
      *(_DWORD *)(v18 + 88) = v25;
      *(unsigned char *)(v18 + 92) = v26;
      *(_DWORD *)(v18 + 96) = result;
      *(unsigned char *)(v18 + 100) = v27;
      uint64_t v30 = v2[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_12;
      }
      v2[2] = v32;
      v11 += v12;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

uint64_t VoiceResolver.executor.getter()
{
  return swift_retain();
}

uint64_t sub_1A679B43C()
{
  type metadata accessor for VoiceResolver();
  swift_allocObject();
  uint64_t result = VoiceResolver.init()();
  qword_1E96C4058 = result;
  return result;
}

uint64_t VoiceResolver.__allocating_init()()
{
  return VoiceResolver.init()();
}

uint64_t static VoiceResolver.shared.getter()
{
  if (qword_1E96C4040 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static VoiceResolver.shared.setter(uint64_t a1)
{
  if (qword_1E96C4040 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1E96C4058 = a1;
  return swift_release();
}

uint64_t (*static VoiceResolver.shared.modify())()
{
  if (qword_1E96C4040 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t VoiceResolver.voiceSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 24, a1);
}

void VoiceResolver.requiredTraits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
}

void VoiceResolver.forbiddenTraits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
}

unint64_t VoiceResolver.sortMode.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 80);
  *a1 = v2;
  return sub_1A679E10C(v2);
}

uint64_t VoiceResolver.voices.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voices;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1658);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A679B7E8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 104) + 216))();
}

uint64_t sub_1A679B82C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 112) + 216))();
}

uint64_t sub_1A679B870(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1A679B890, 0, 0);
}

uint64_t sub_1A679B890()
{
  uint64_t v1 = v0[3];
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(v1 + 112) + 208)
                                       + **(int **)(**(void **)(v1 + 112) + 208));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A679B9CC;
  return v5(v2);
}

uint64_t sub_1A679B9CC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679BAC8, 0, 0);
}

uint64_t sub_1A679BAC8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_1A6891A40();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1A6891900();
    sub_1A6750210(v1, &qword_1EB67A238);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[2], v1, v2);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A679BD60(const void *a1, uint64_t a2)
{
  v2[2] = a2;
  uint64_t v4 = sub_1A6891A40();
  v2[3] = v4;
  v2[4] = *(void *)(v4 - 8);
  v2[5] = swift_task_alloc();
  v2[6] = _Block_copy(a1);
  swift_retain();
  return MEMORY[0x1F4188298](sub_1A679BE40, 0, 0);
}

uint64_t sub_1A679BE40()
{
  uint64_t v1 = v0[2];
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v2 = swift_task_alloc();
  v0[7] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(v1 + 112) + 208)
                                       + **(int **)(**(void **)(v1 + 112) + 208));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A679BF7C;
  return v5(v2);
}

uint64_t sub_1A679BF7C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679C078, 0, 0);
}

uint64_t sub_1A679C078()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1A6891900();
    sub_1A6750210(v1, &qword_1EB67A238);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[5], v1, v2);
  }
  uint64_t v4 = (void (**)(void, void))v0[6];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[3];
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = (void *)sub_1A6891920();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  ((void (**)(void, void *))v4)[2](v4, v8);

  _Block_release(v4);
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1A679C1C0()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1A679C1E0, 0, 0);
}

uint64_t sub_1A679C1E0()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 24) + 96) + 208)
                                       + **(int **)(**(void **)(*(void *)(v0 + 24) + 96) + 208));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A679C2F0;
  return v3(v0 + 16);
}

uint64_t sub_1A679C2F0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679C3EC, 0, 0);
}

uint64_t sub_1A679C3EC()
{
  if (*(void *)(v0 + 16)) {
    return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
  }
  else {
    return (*(uint64_t (**)(void))(v0 + 8))(MEMORY[0x1E4FBC870]);
  }
}

uint64_t sub_1A679C580(const void *a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = _Block_copy(a1);
  swift_retain();
  return MEMORY[0x1F4188298](sub_1A679C5FC, 0, 0);
}

uint64_t sub_1A679C5FC()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 24) + 96) + 208)
                                       + **(int **)(**(void **)(*(void *)(v0 + 24) + 96) + 208));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A679C70C;
  return v3(v0 + 16);
}

uint64_t sub_1A679C70C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679C808, 0, 0);
}

uint64_t sub_1A679C808()
{
  uint64_t v1 = *(void (***)(void, void))(v0 + 32);
  swift_release();
  sub_1A6891A40();
  sub_1A67B5178((unint64_t *)&qword_1EB67A220, MEMORY[0x1F418BE30]);
  uint64_t v2 = (void *)sub_1A68926E0();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v2);

  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1A679C8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v12 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = sub_1A68924A0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v3;
  sub_1A67B4290((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_1EB67A2C0);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v17 == 1)
  {
    sub_1A6750210((uint64_t)v9, (uint64_t *)&unk_1EB67A2C0);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  }
  uint64_t v18 = sub_1A67B5750((unint64_t *)&qword_1E96C16A0, (void (*)(uint64_t))type metadata accessor for TTSExecutor);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = &unk_1E96C2448;
  *(void *)(v19 + 24) = v16;
  v21[1] = 6;
  void v21[2] = 0;
  v21[3] = v13;
  v21[4] = v18;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A679CB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a2;
  v4[3] = a3;
  uint64_t v7 = (uint64_t (*)(void))(*(void *)(*(void *)a4 + 208) + **(int **)(*(void *)a4 + 208));
  uint64_t v5 = (void *)swift_task_alloc();
  v4[4] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A679CC6C;
  return v7();
}

uint64_t sub_1A679CC6C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679CD6C, 0, 0);
}

uint64_t sub_1A679CD6C()
{
  (*(void (**)(void))(v0 + 16))(*(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A679CE70()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 192) + **(int **)(*(void *)v0 + 192));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A679CF64;
  return v4();
}

uint64_t sub_1A679CF64(uint64_t a1)
{
  *(void *)(*(void *)v1 + 24) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679D064, 0, 0);
}

uint64_t sub_1A679D064()
{
  uint64_t v1 = *(void *)(v0 + 24);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1A674CBF0(0, v2, 0);
    int64_t v3 = sub_1A674CD14(v1);
    int v5 = v4;
    char v7 = v6 & 1;
    uint64_t v28 = v1 + 56;
    uint64_t v26 = sub_1A6891A40();
    uint64_t v8 = *(void *)(v26 - 8);
    unint64_t v9 = (*(void *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v27 = v1;
    while (1)
    {
      uint64_t result = swift_task_alloc();
      if (v7) {
        break;
      }
      if (v3 < 0 || v3 >= 1 << *(unsigned char *)(v1 + 32))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        break;
      }
      if (((*(void *)(v28 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3) & 1) == 0) {
        goto LABEL_19;
      }
      if (*(_DWORD *)(v1 + 36) != v5) {
        goto LABEL_20;
      }
      uint64_t v11 = result;
      (*(void (**)(uint64_t, int64_t, uint64_t))(v8 + 16))(result, *(void *)(v1 + 48) + *(void *)(v8 + 72) * v3, v26);
      unint64_t v12 = v9;
      uint64_t v13 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v13, v11, v26);
      uint64_t v14 = sub_1A68918F0();
      uint64_t v16 = v15;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v26);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A674CBF0(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v17 = v30;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A674CBF0((char *)(v18 > 1), v19 + 1, 1);
        uint64_t v17 = v30;
      }
      uint64_t v20 = *(void *)(v29 + 24);
      *(void *)(v17 + 16) = v19 + 1;
      uint64_t v21 = v17 + 16 * v19;
      *(void *)(v21 + 32) = v14;
      *(void *)(v21 + 40) = v16;
      int64_t v22 = sub_1A674CDB4(v3, v5, 0, v20);
      int64_t v3 = v22;
      int v5 = v23;
      char v7 = v24 & 1;
      --v2;
      uint64_t v1 = v27;
      unint64_t v9 = v12;
      if (!v2)
      {
        uint64_t v0 = v29;
        sub_1A674CE98(v22, v23, v24 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
LABEL_15:
    int v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v25(v17);
  }
  return result;
}

uint64_t sub_1A679D354(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1A674CBF0(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_1A6891A40() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_1A6891860();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1A674CBF0((char *)(v10 > 1), v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A679D48C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1A67AC598(0, v1, 0);
  uint64_t v2 = v44;
  uint64_t result = sub_1A67B4C70(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v27 = v3 + 80;
  int64_t v28 = v1;
  int v29 = v5;
  uint64_t v30 = v3 + 64;
  uint64_t v31 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v32 = v7;
    uint64_t v12 = *(void *)(v3 + 56) + 104 * v6;
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
    uint64_t v42 = *(void *)(v12 + 24);
    uint64_t v43 = *(void *)v12;
    uint64_t v15 = *(void *)(v12 + 32);
    char v41 = *(unsigned char *)(v12 + 40);
    char v40 = *(unsigned char *)(v12 + 41);
    uint64_t v39 = *(void *)(v12 + 48);
    uint64_t v16 = *(void *)(v12 + 64);
    uint64_t v17 = *(void *)(v12 + 72);
    unint64_t v18 = *(void **)(v12 + 80);
    int v37 = *(_DWORD *)(v12 + 88);
    char v38 = *(unsigned char *)(v12 + 56);
    int v35 = *(_DWORD *)(v12 + 96);
    char v36 = *(unsigned char *)(v12 + 92);
    char v34 = *(unsigned char *)(v12 + 100);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v33 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v20 = *(void *)(v44 + 16);
    unint64_t v19 = *(void *)(v44 + 24);
    if (v20 >= v19 >> 1) {
      uint64_t result = (uint64_t)sub_1A67AC598((char *)(v19 > 1), v20 + 1, 1);
    }
    *(void *)(v44 + 16) = v20 + 1;
    uint64_t v21 = v44 + 104 * v20;
    *(void *)(v21 + 32) = v43;
    *(void *)(v21 + 40) = v13;
    *(void *)(v21 + 48) = v14;
    *(void *)(v21 + 56) = v42;
    *(void *)(v21 + 64) = v15;
    *(unsigned char *)(v21 + 72) = v41;
    *(unsigned char *)(v21 + 73) = v40;
    *(void *)(v21 + 80) = v39;
    *(unsigned char *)(v21 + 88) = v38;
    *(void *)(v21 + 96) = v16;
    *(void *)(v21 + 104) = v17;
    *(void *)(v21 + 112) = v33;
    *(_DWORD *)(v21 + 120) = v37;
    *(unsigned char *)(v21 + 124) = v36;
    *(_DWORD *)(v21 + 128) = v35;
    *(unsigned char *)(v21 + 132) = v34;
    uint64_t v3 = v31;
    int64_t v9 = 1 << *(unsigned char *)(v31 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v30;
    uint64_t v22 = *(void *)(v30 + 8 * v11);
    if ((v22 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v29;
    if (*(_DWORD *)(v31 + 36) != v29) {
      goto LABEL_27;
    }
    unint64_t v23 = v22 & (-2 << (v6 & 0x3F));
    if (v23)
    {
      int64_t v9 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v28;
    }
    else
    {
      unint64_t v24 = v11 + 1;
      unint64_t v25 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v28;
      if (v11 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v11)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v11++);
            if (v26)
            {
              unint64_t v24 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v32 + 1;
    uint64_t v6 = v9;
    if (v32 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A679D7C4()
{
  uint64_t v2 = sub_1A6891A40();
  v1[2] = v2;
  v1[3] = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  v1[4] = v3;
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 184) + **(int **)(*(void *)v0 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  v1[5] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A679D924;
  return v6(v3);
}

uint64_t sub_1A679D924()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679DA20, 0, 0);
}

uint64_t sub_1A679DA20()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_1A68918F0();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v7(v4, v6);
}

uint64_t sub_1A679DC30(const void *a1, uint64_t a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  uint64_t v4 = sub_1A6891A40();
  v2[4] = v4;
  v2[5] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v2[6] = v5;
  uint64_t v8 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a2 + 184) + **(int **)(*(void *)a2 + 184));
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v2[7] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1A679DDB0;
  return v8(v5);
}

uint64_t sub_1A679DDB0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A679DEAC, 0, 0);
}

uint64_t sub_1A679DEAC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = (void (**)(void, void))v0[3];
  uint64_t v3 = v0[4];
  sub_1A68918F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v4)[2](v4, v5);

  _Block_release(v4);
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t VoiceResolver.init()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *sub_1A677FE2C();
  v8[3] = type metadata accessor for DefaultVoiceSource();
  v8[4] = &protocol witness table for DefaultVoiceSource;
  v8[0] = v2;
  swift_retain();
  uint64_t v7 = *(void *)sub_1A67F8E18();
  sub_1A674CEE4();
  sub_1A6741AD0(&qword_1EB67A298);
  sub_1A6766A64((unint64_t *)&qword_1EB67A2A0, &qword_1EB67A298);
  sub_1A6892B90();
  uint64_t v5 = 1;
  v6[0] = v6[1];
  uint64_t v3 = (*(uint64_t (**)(void *, uint64_t *, void *, uint64_t *))(v1 + 256))(v8, &v7, v6, &v5);
  swift_deallocPartialClassInstance();
  return v3;
}

unint64_t sub_1A679E10C(unint64_t result)
{
  if (result >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A679E11C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A679E15C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  return sub_1A679CB70((uint64_t)v5, v2, v3, v4);
}

uint64_t sub_1A679E228()
{
  uint64_t v0 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v15 - v4;
  uint64_t v6 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = sub_1A68924A0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  sub_1A67B4290((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_1EB67A2C0);
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8);
  swift_retain();
  if (v11 == 1)
  {
    sub_1A6750210((uint64_t)v3, (uint64_t *)&unk_1EB67A2C0);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
  }
  uint64_t v12 = sub_1A67B5750((unint64_t *)&qword_1E96C16A0, (void (*)(uint64_t))type metadata accessor for TTSExecutor);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_1E96C2640;
  *(void *)(v13 + 24) = v10;
  sub_1A6741AD0(&qword_1EB67A398);
  v15[1] = 6;
  v15[2] = 0;
  v15[3] = v7;
  v15[4] = v12;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A679E49C(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  uint64_t v3 = sub_1A6741AD0(&qword_1EB67A308);
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2F8);
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A679E5C0, 0, 0);
}

uint64_t sub_1A679E5C0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 136) = Strong;
  if (Strong)
  {
    type metadata accessor for VoiceResolver();
    *(void *)(v0 + 144) = sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
    uint64_t v3 = sub_1A68923E0();
    *(void *)(v0 + 152) = v3;
    *(void *)(v0 + 160) = v2;
    return MEMORY[0x1F4188298](sub_1A679E6F8, v3, v2);
  }
  else
  {
    **(unsigned char **)(v0 + 72) = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1A679E6F8()
{
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[11];
  sub_1A679EB24();
  (*(void (**)(void))(**(void **)(v1 + 88) + 216))();
  sub_1A6892530();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v0[21] = OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voiceResolutionCache;
  swift_beginAccess();
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  uint64_t v7 = (void *)swift_task_alloc();
  v0[22] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1A679E84C;
  uint64_t v8 = v0[14];
  return MEMORY[0x1F4187D58](v0 + 8, v5, v6, v8);
}

uint64_t sub_1A679E84C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x1F4188298](sub_1A679E96C, v3, v2);
}

uint64_t sub_1A679E96C()
{
  if (v0[8])
  {
    uint64_t v1 = v0[21];
    uint64_t v2 = v0[17];
    swift_bridgeObjectRelease();
    *(void *)(v2 + v1) = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease();
    uint64_t v4 = v0[17];
    uint64_t v3 = v0[18];
    uint64_t v5 = (void *)swift_task_alloc();
    v0[22] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1A679E84C;
    uint64_t v6 = v0[14];
    return MEMORY[0x1F4187D58](v0 + 8, v4, v3, v6);
  }
  else
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    swift_release();
    return MEMORY[0x1F4188298](sub_1A679EAA8, 0, 0);
  }
}

uint64_t sub_1A679EAA8()
{
  **(unsigned char **)(v0 + 72) = *(void *)(v0 + 136) == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1A679EB24()
{
  uint64_t v1 = (void *)sub_1A6891FD0();
  uint64_t v2 = (void *)sub_1A6891FD0();
  uint64_t v3 = v1;
  uint64_t v4 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(v4, v0, (CFNotificationCallback)sub_1A679EC34, v3, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  uint64_t v5 = v2;
  uint64_t v6 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(v6, v0, (CFNotificationCallback)sub_1A679EC34, v5, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

void *sub_1A679EC34(void *result, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    uint64_t v7 = *(void (**)(uint64_t))(*(void *)a2 + 248);
    id v8 = result;
    id v9 = a3;
    id v10 = a5;
    uint64_t v11 = swift_retain();
    v7(v11);

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_1A679ECD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v16 - v6;
  id v8 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = sub_1A68924A0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
  sub_1A67B4290((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1EB67A2C0);
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10);
  swift_retain();
  swift_retain();
  if (v12 == 1)
  {
    sub_1A6750210((uint64_t)v5, (uint64_t *)&unk_1EB67A2C0);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
  }
  uint64_t v13 = sub_1A67B5750((unint64_t *)&qword_1E96C16A0, (void (*)(uint64_t))type metadata accessor for TTSExecutor);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &unk_1E96C2470;
  *(void *)(v14 + 24) = v1;
  v16[1] = 6;
  v16[2] = 0;
  v16[3] = v9;
  v16[4] = v13;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A679EF28(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return MEMORY[0x1F4188298](sub_1A679EF48, 0, 0);
}

uint64_t sub_1A679EF48()
{
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 16) + 112) + 176)
                         + **(int **)(**(void **)(*(void *)(v0 + 16) + 112) + 176));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A679F044;
  return v3();
}

uint64_t sub_1A679F044()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t VoiceResolver.__allocating_init(voiceSource:requiredTraits:sortMode:)(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  sub_1A673E788(a1, (uint64_t)v13);
  uint64_t v12 = v6;
  sub_1A674CEE4();
  sub_1A6741AD0(&qword_1EB67A298);
  sub_1A6766A64((unint64_t *)&qword_1EB67A2A0, &qword_1EB67A298);
  sub_1A6892B90();
  uint64_t v10 = v7;
  v11[0] = v11[1];
  uint64_t v8 = (*(uint64_t (**)(unsigned char *, uint64_t *, void *, uint64_t *))(v4 + 256))(v13, &v12, v11, &v10);
  sub_1A6741A24(a1);
  return v8;
}

uint64_t VoiceResolver.__allocating_init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)(void *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8 = swift_allocObject();
  VoiceResolver.init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)(a1, a2, a3, a4);
  return v8;
}

uint64_t *VoiceResolver.init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)(void *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v45 = *v5;
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C1658);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  id v46 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A6741AD0(&qword_1EB67A308);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  BOOL v49 = (char *)&v44 - v17;
  uint64_t v18 = *a2;
  uint64_t v19 = *a3;
  uint64_t v20 = *a4;
  type metadata accessor for TTSExecutor();
  v5[2] = TTSExecutor.__allocating_init()();
  uint64_t v21 = OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voiceResolutionCache;
  *(uint64_t *)((char *)v5 + v21) = sub_1A679B1DC(MEMORY[0x1E4FBC860]);
  sub_1A673E788((uint64_t)a1, (uint64_t)(v5 + 3));
  v5[8] = v18;
  v5[9] = v19;
  v5[10] = v20;
  uint64_t v50 = a1;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_1A673E63C(a1, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v18;
  *(void *)(v24 + 24) = v19;
  sub_1A6741AD0(&qword_1EB67A1C0);
  unint64_t v25 = v49;
  sub_1A6892520();
  swift_release();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v13 + 8);
  v44(v16, v12);
  sub_1A6741AD0(&qword_1EB67A288);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v25, v12);
  unint64_t v26 = StreamCachedValue.__allocating_init(stream:recomputeBlock:)((uint64_t)v16, 0, 0);
  v5[11] = (uint64_t)v26;
  uint64_t v27 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)v26 + 224);
  swift_retain();
  uint64_t v28 = sub_1A6741AD0(&qword_1EB67A310);
  uint64_t v29 = sub_1A6766A64(&qword_1EB67A318, &qword_1EB67A310);
  uint64_t v30 = v27(&unk_1E96C2490, 0, v28, v29);
  swift_release();
  v5[12] = v30;
  uint64_t v31 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)v5[11] + 224);
  swift_retain();
  uint64_t v32 = v31(&unk_1E96C2498, 0, v28, v29);
  swift_release();
  v5[13] = v32;
  uint64_t v33 = v5[12];
  sub_1A673E788((uint64_t)v50, (uint64_t)v51);
  uint64_t v34 = swift_allocObject();
  sub_1A673E770(v51, v34 + 16);
  *(void *)(v34 + 56) = v45;
  int v35 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)v33 + 224);
  uint64_t v36 = sub_1A6891A40();
  uint64_t v37 = sub_1A67B5178(&qword_1EB67A230, MEMORY[0x1F418BE30]);
  swift_retain();
  uint64_t v38 = v35(&unk_1E96C24A8, v34, v36, v37);
  swift_release();
  swift_release();
  v5[14] = v38;
  uint64_t v39 = *(void (**)(uint64_t))(*(void *)v5[11] + 216);
  uint64_t v40 = swift_retain();
  v39(v40);
  swift_release();
  sub_1A6741AD0((uint64_t *)&unk_1E96C1660);
  char v41 = v46;
  sub_1A6892520();
  uint64_t v42 = v44;
  v44(v16, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))((uint64_t)v5 + OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voices, v41, v48);
  sub_1A679E228();
  v42(v49, v12);
  sub_1A6741A24((uint64_t)v50);
  return v5;
}

uint64_t sub_1A679F820(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a3;
  uint64_t v5 = *a2;
  v4[4] = a4;
  v4[5] = v5;
  return MEMORY[0x1F4188298](sub_1A679F848, 0, 0);
}

uint64_t sub_1A679F848()
{
  uint64_t v1 = v0[4];
  uint64_t v3 = (uint64_t *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A67ACF38(v4, v2, v1);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1A679F8E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1A679F904, 0, 0);
}

uint64_t sub_1A679F904()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!v1)
  {
    uint64_t i = MEMORY[0x1E4FBC870];
LABEL_28:
    **(void **)(v0 + 16) = i;
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  uint64_t v2 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  for (uint64_t i = MEMORY[0x1E4FBC870]; ; uint64_t i = v15)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v16 >= v6) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v2 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v6) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v2 + 8 * v8);
      if (!v17)
      {
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v6) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v2 + 8 * v8);
        if (!v17)
        {
          int64_t v8 = v16 + 3;
          if (v16 + 3 >= v6) {
            goto LABEL_26;
          }
          unint64_t v17 = *(void *)(v2 + 8 * v8);
          if (!v17)
          {
            int64_t v8 = v16 + 4;
            if (v16 + 4 >= v6) {
              goto LABEL_26;
            }
            unint64_t v17 = *(void *)(v2 + 8 * v8);
            if (!v17) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_6:
    uint64_t v12 = *(void *)(*(void *)(v1 + 56) + 104 * v11 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A679FB1C(v13, v12);
    uint64_t v15 = sub_1A679FB1C(v14, i);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 5;
  if (v18 >= v6)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v2 + 8 * v18);
  if (v17)
  {
    int64_t v8 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v2 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A679FB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = sub_1A6741AD0(&qword_1EB67A238);
  v26[1] = v26;
  uint64_t result = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v29 + 48);
    uint64_t v17 = sub_1A6891A40();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v9, v16 + *(void *)(v18 + 72) * i, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17);
    if (v19 == 1) {
      goto LABEL_25;
    }
    uint64_t v20 = MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v20);
    uint64_t v24 = (char *)v26 - v23;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v26 - v23, v9, v17);
    sub_1A6782D60(v22, v24);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v28) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v28)
  {
LABEL_24:
    uint64_t v25 = sub_1A6891A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
LABEL_25:
    swift_release();
    return v30;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A679FEB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1A679FEDC, 0, 0);
}

uint64_t sub_1A679FEDC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!v1)
  {
    uint64_t i = MEMORY[0x1E4FBC870];
LABEL_28:
    **(void **)(v0 + 16) = i;
    int64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  uint64_t v2 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  uint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  for (uint64_t i = MEMORY[0x1E4FBC870]; ; uint64_t i = v11)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_6;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v6) {
      goto LABEL_26;
    }
    uint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_26;
      }
      uint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_26;
        }
        uint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_26;
          }
          uint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13)
          {
            int64_t v8 = v12 + 4;
            if (v12 + 4 >= v6) {
              goto LABEL_26;
            }
            uint64_t v13 = *(void *)(v2 + 8 * v8);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v5 = (v13 - 1) & v13;
LABEL_6:
    swift_bridgeObjectRetain();
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A679FB1C(v10, i);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v6)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_26;
    }
    uint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A67A00DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a1;
  v4[8] = a3;
  uint64_t v5 = *a2;
  v4[9] = a4;
  v4[10] = v5;
  return MEMORY[0x1F4188298](sub_1A67A0104, 0, 0);
}

uint64_t sub_1A67A0104()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = (void *)v0[8];
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  v0[5] = sub_1A6741AD0(&qword_1EB67A310);
  v0[6] = sub_1A6766A64(&qword_1EB67A320, &qword_1EB67A310);
  uint64_t v4 = MEMORY[0x1E4FBC870];
  if (v1) {
    uint64_t v4 = v1;
  }
  v0[2] = v4;
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_1A673E63C(v2, v5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
  swift_bridgeObjectRetain();
  uint64_t v8 = v7(v5, v6);
  v0[12] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  void *v9 = v0;
  v9[1] = sub_1A67A02A0;
  v9[11] = v0[8];
  v9[12] = v8;
  v9[9] = v3;
  v9[10] = v0 + 2;
  return MEMORY[0x1F4188298](sub_1A67A0514, 0, 0);
}

uint64_t sub_1A67A02A0()
{
  uint64_t v1 = *v0 + 16;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1A6741A24(v1);
  return MEMORY[0x1F4188298](sub_1A67A03C4, 0, 0);
}

uint64_t sub_1A67A03C4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = sub_1A6891A40();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1A6891900();
    sub_1A6750210(v1, &qword_1EB67A238);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[7], v1, v2);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A67A04F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  return MEMORY[0x1F4188298](sub_1A67A0514, 0, 0);
}

uint64_t sub_1A67A0514()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 88);
  uint64_t v3 = v1[3];
  int v99 = v1;
  uint64_t v4 = sub_1A673E63C(v1, v3);
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(v6, v4, v3);
  uint64_t v7 = sub_1A6892270();
  swift_task_dealloc();
  uint64_t v8 = sub_1A679D354(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = self;
  sub_1A67AC1C0(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1A68922D0();
  swift_bridgeObjectRelease();
  uint64_t v11 = v2[3];
  uint64_t v12 = v2[4];
  sub_1A673E63C(v2, v11);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = v13(v11, v12);
  sub_1A67AC1C0(v14);
  swift_bridgeObjectRelease();
  int64_t v15 = (void *)sub_1A68922D0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v9, sel_mostPreferredLanguageOf_withPreferredLanguages_forUsage_options_, v10, v15, 8, 1);

  if (v16)
  {
    uint64_t v17 = v101[9];
    sub_1A6892000();

    sub_1A6891900();
    uint64_t v18 = sub_1A6891A40();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    uint64_t v19 = v101;
    goto LABEL_47;
  }
  uint64_t v20 = v13(v11, v12);
  int64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v120 = MEMORY[0x1E4FBC860];
    sub_1A675FF34(0, v21, 0);
    uint64_t v22 = v120;
    uint64_t v117 = sub_1A6891A40();
    uint64_t v23 = *(void *)(v117 - 8);
    uint64_t v24 = v20 + 40;
    do
    {
      uint64_t v25 = swift_task_alloc();
      swift_bridgeObjectRetain();
      sub_1A6891900();
      unint64_t v27 = *(void *)(v120 + 16);
      unint64_t v26 = *(void *)(v120 + 24);
      if (v27 >= v26 >> 1) {
        sub_1A675FF34(v26 > 1, v27 + 1, 1);
      }
      *(void *)(v120 + 16) = v27 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v120+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v27, v25, v117);
      swift_task_dealloc();
      v24 += 16;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v28 = swift_task_alloc();
  uint64_t v29 = *(void *)(v22 + 16);
  if (!v29)
  {
    swift_bridgeObjectRetain();
LABEL_44:
    uint64_t v79 = sub_1A6891A40();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v28, 1, 1, v79);
LABEL_45:
    swift_bridgeObjectRelease_n();
    uint64_t v19 = v101;
LABEL_46:
    uint64_t v80 = v19[9];
    swift_task_dealloc();
    uint64_t v81 = sub_1A6891A40();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 1, 1, v81);
    goto LABEL_47;
  }
  int64_t v97 = v101 + 2;
  uint64_t v30 = sub_1A6891A40();
  uint64_t v31 = *(void *)(v30 - 8);
  unint64_t v96 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v32 = v22 + v96;
  uint64_t v109 = *(void *)(v31 + 72);
  unint64_t v110 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v111 = *(void (**)(uint64_t, unint64_t, uint64_t))(v31 + 16);
  uint64_t v33 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  uint64_t v105 = v31;
  char v114 = (void (**)(uint64_t, uint64_t))(v31 + 8);
  swift_bridgeObjectRetain();
  unint64_t v115 = v33;
  uint64_t v116 = v30;
  uint64_t v106 = v28;
  while (1)
  {
    v111(v28, v32, v30);
    uint64_t v34 = *v110;
    (*v110)(v28, 0, 1, v30);
    BOOL v112 = *v33;
    if ((*v33)(v28, 1, v30) == 1) {
      goto LABEL_45;
    }
    uint64_t v118 = v29;
    id v104 = v34;
    uint64_t v35 = swift_task_alloc();
    uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32);
    v113(v35, v28, v30);
    sub_1A6741AD0(&qword_1EB67A210);
    uint64_t v36 = swift_task_alloc();
    uint64_t v37 = sub_1A6891A20();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = swift_task_alloc();
    sub_1A6891A30();
    sub_1A68919F0();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    uint64_t v108 = v37;
    v40(v39, v37);
    uint64_t v41 = sub_1A68918D0();
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
    if (v107(v36, 1, v41) != 1) {
      break;
    }
    swift_task_dealloc();
    sub_1A6750210(v36, &qword_1EB67A210);
    swift_task_dealloc();
    (*v114)(v35, v30);
LABEL_13:
    swift_task_dealloc();
    v32 += v109;
    uint64_t v29 = v118 - 1;
    uint64_t v28 = v106;
    uint64_t v33 = v115;
    uint64_t v30 = v116;
    if (v118 == 1) {
      goto LABEL_44;
    }
  }
  id v100 = v40;
  char v102 = Locale.LanguageCode.isMacroLanguage.getter();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v43(v36, v41);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *v114;
  (*v114)(v35, v30);
  if ((v102 & 1) == 0) {
    goto LABEL_13;
  }
  char v92 = v43;
  uint64_t v90 = v42;
  uint64_t v19 = v101;
  uint64_t v45 = v101[12];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1A67B4FC4(v22, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_task_alloc();
  uint64_t v48 = result;
  BOOL v49 = v104;
  uint64_t v50 = v112;
  uint64_t v86 = *(void *)(v46 + 16);
  if (!v86)
  {
LABEL_50:
    v49(v48, 1, 1, v116);
LABEL_51:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  unint64_t v51 = 0;
  uint64_t v87 = v46;
  unint64_t v88 = v46 + v96;
  unint64_t v93 = v44;
  uint64_t v94 = v41;
  while (1)
  {
    if (v51 >= *(void *)(v46 + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v52 = v116;
    v111(v48, v88 + v51 * v109, v116);
    v49(v48, 0, 1, v116);
    if (v50(v48, 1, v116) == 1) {
      goto LABEL_51;
    }
    unint64_t v89 = v51;
    uint64_t v53 = (void *)v19[10];
    uint64_t v103 = swift_task_alloc();
    v113(v103, v48, v116);
    uint64_t v54 = v99[3];
    sub_1A673E63C(v53, v54);
    uint64_t v55 = *(void *)(v54 - 8);
    swift_task_alloc();
    (*(void (**)(void))(v55 + 16))();
    void v19[5] = swift_getAssociatedTypeWitness();
    v19[6] = swift_getAssociatedConformanceWitness();
    sub_1A675026C(v97);
    uint64_t v50 = v112;
    sub_1A6892250();
    swift_task_dealloc();
    uint64_t v56 = swift_task_alloc();
    sub_1A674E06C((uint64_t)v97, v19[5]);
    sub_1A6892A40();
    unsigned int v57 = v112(v56, 1, v116);
    uint64_t v98 = (void *)MEMORY[0x1E4FBC860];
    if (v57 != 1) {
      break;
    }
LABEL_22:
    swift_task_dealloc();
    sub_1A6741A24((uint64_t)v97);
    if (v98[2])
    {
      swift_bridgeObjectRelease();
      if (v98[2])
      {
        uint64_t v84 = v116;
        v111(v19[9], (unint64_t)v98 + v96, v116);
        uint64_t v85 = 0;
      }
      else
      {
        uint64_t v85 = 1;
        uint64_t v84 = v116;
      }
      v104(v19[9], v85, 1, v84);
      swift_bridgeObjectRelease();
      v44(v103, v84);
      goto LABEL_54;
    }
    unint64_t v51 = v89 + 1;
    swift_bridgeObjectRelease();
    v44(v103, v116);
    uint64_t result = swift_task_dealloc();
    uint64_t v46 = v87;
    BOOL v49 = v104;
    if (v89 + 1 == v86) {
      goto LABEL_50;
    }
  }
  uint64_t v98 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v95 = v56;
  while (2)
  {
    uint64_t v58 = swift_task_alloc();
    v113(v58, v56, v52);
    uint64_t v59 = sub_1A68918F0();
    uint64_t v61 = v60;
    if (v59 != sub_1A68918F0() || v61 != v62)
    {
      char v63 = sub_1A6893120();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v63) {
        goto LABEL_53;
      }
      uint64_t v64 = swift_task_alloc();
      uint64_t v119 = v58;
      sub_1A6891A30();
      uint64_t v65 = swift_task_alloc();
      sub_1A68919F0();
      v100(v64, v108);
      uint64_t v66 = swift_task_alloc();
      sub_1A6891A30();
      uint64_t v67 = swift_task_alloc();
      sub_1A68919F0();
      v100(v66, v108);
      uint64_t v68 = sub_1A6741AD0(&qword_1EB67A218) - 8;
      uint64_t v69 = swift_task_alloc();
      uint64_t v70 = v69 + *(int *)(v68 + 56);
      sub_1A675B090(v65, v69, &qword_1EB67A210);
      sub_1A675B090(v67, v70, &qword_1EB67A210);
      if (v107(v69, 1, v94) == 1)
      {
        sub_1A6750210(v67, &qword_1EB67A210);
        sub_1A6750210(v65, &qword_1EB67A210);
        if (v107(v70, 1, v94) == 1)
        {
          sub_1A6750210(v69, &qword_1EB67A210);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v56 = v95;
          goto LABEL_38;
        }
LABEL_27:
        sub_1A6750210(v69, &qword_1EB67A218);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v56 = v95;
        goto LABEL_28;
      }
      uint64_t v71 = swift_task_alloc();
      sub_1A675B090(v69, v71, &qword_1EB67A210);
      if (v107(v70, 1, v94) == 1)
      {
        sub_1A6750210(v67, &qword_1EB67A210);
        sub_1A6750210(v65, &qword_1EB67A210);
        v92(v71, v94);
        swift_task_dealloc();
        goto LABEL_27;
      }
      uint64_t v72 = v48;
      uint64_t v73 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v73, v70, v94);
      sub_1A67B5178(&qword_1E96C1550, MEMORY[0x1F418BD68]);
      char v91 = sub_1A6891FC0();
      v92(v73, v94);
      sub_1A6750210(v67, &qword_1EB67A210);
      sub_1A6750210(v65, &qword_1EB67A210);
      v92(v71, v94);
      uint64_t v48 = v72;
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1A6750210(v69, &qword_1EB67A210);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v56 = v95;
      if (v91)
      {
LABEL_38:
        uint64_t v74 = swift_task_alloc();
        v111(v74, v119, v116);
        v75 = v98;
        uint64_t v19 = v101;
        uint64_t v50 = v112;
        uint64_t v44 = v93;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v75 = (void *)sub_1A67AEBC0(0, v98[2] + 1, 1, v98, &qword_1EB67A378, MEMORY[0x1F418BE20]);
        }
        unint64_t v77 = v75[2];
        unint64_t v76 = v75[3];
        if (v77 >= v76 >> 1) {
          v75 = (void *)sub_1A67AEBC0(v76 > 1, v77 + 1, 1, v75, &qword_1EB67A378, MEMORY[0x1F418BE20]);
        }
        v75[2] = v77 + 1;
        uint64_t v98 = v75;
        v78 = (char *)v75 + v96 + v77 * v109;
        uint64_t v52 = v116;
        v113((uint64_t)v78, v74, v116);
        v93(v119, v116);
        swift_task_dealloc();
      }
      else
      {
LABEL_28:
        uint64_t v52 = v116;
        uint64_t v44 = v93;
        v93(v119, v116);
        uint64_t v19 = v101;
        uint64_t v50 = v112;
      }
      swift_task_dealloc();
      sub_1A674E06C((uint64_t)v97, v19[5]);
      sub_1A6892A40();
      if (v50(v56, 1, v52) == 1) {
        goto LABEL_22;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_53:
  uint64_t v83 = v19[9];
  swift_bridgeObjectRelease();
  v44(v103, v116);
  swift_bridgeObjectRelease();
  v113(v83, v58, v116);
  v104(v83, 0, 1, v116);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1A6741A24((uint64_t)v97);
LABEL_54:
  swift_task_dealloc();
  swift_task_dealloc();
LABEL_47:
  uint64_t v82 = (uint64_t (*)(void))v19[1];
  return v82();
}

uint64_t sub_1A67A176C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x1F4188298](sub_1A67A1790, 0, 0);
}

uint64_t sub_1A67A1790()
{
  uint64_t v1 = (uint64_t *)v0[3];
  uint64_t v2 = sub_1A679D48C(v0[4]);
  uint64_t v3 = sub_1A67B57B8(v2);
  swift_bridgeObjectRelease();
  *uint64_t v1 = v3;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t VoiceResolver.deinit()
{
  v5[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(v1, v5);

  swift_release();
  sub_1A6741A24(v0 + 24);
  sub_1A67AE9C0(*(void *)(v0 + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voices;
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C1658);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VoiceResolver.__deallocating_deinit()
{
  VoiceResolver.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1A67A197C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  uint64_t v6 = sub_1A68923E0();
  v4[7] = v6;
  v4[8] = v5;
  return MEMORY[0x1F4188298](sub_1A67A1A38, v6, v5);
}

uint64_t sub_1A67A1A38()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 48) + 88) + 208)
                                       + **(int **)(**(void **)(*(void *)(v0 + 48) + 88) + 208));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A67A1B48;
  return v3(v0 + 16);
}

uint64_t sub_1A67A1B48()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x1F4188298](sub_1A67A1C68, v3, v2);
}

uint64_t sub_1A67A1C68()
{
  unint64_t v1 = v0[2];
  if (!v1) {
    unint64_t v1 = sub_1A6781288(MEMORY[0x1E4FBC860]);
  }
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_1A68920A0();
  sub_1A67A1D10(v3, v4, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

double sub_1A67A1D10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_1A673F7AC(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 104 * v6;
    uint64_t v10 = *(void *)v8;
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t v12 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v13 = *(void *)(v8 + 32);
    __int16 v14 = *(_WORD *)(v8 + 40);
    uint64_t v15 = *(void *)(v8 + 48);
    char v16 = *(unsigned char *)(v8 + 56);
    uint64_t v17 = *(void *)(v8 + 64);
    uint64_t v18 = *(void *)(v8 + 72);
    id v24 = *(id *)(v8 + 80);
    int v19 = *(_DWORD *)(v8 + 88);
    char v20 = *(unsigned char *)(v8 + 92);
    int v21 = *(_DWORD *)(v8 + 96);
    LOBYTE(v8) = *(unsigned char *)(v8 + 100);
    *(void *)a4 = v10;
    *(void *)(a4 + 8) = v9;
    *(void *)(a4 + 16) = v12;
    *(void *)(a4 + 24) = v11;
    *(void *)(a4 + 32) = v13;
    *(_WORD *)(a4 + 40) = v14;
    *(void *)(a4 + 48) = v15;
    *(unsigned char *)(a4 + 56) = v16;
    *(void *)(a4 + 64) = v17;
    *(void *)(a4 + 72) = v18;
    *(void *)(a4 + 80) = v24;
    *(_DWORD *)(a4 + 88) = v19;
    *(unsigned char *)(a4 + 92) = v20;
    *(_DWORD *)(a4 + 96) = v21;
    *(unsigned char *)(a4 + 100) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v24;
  }
  else
  {
    *(void *)(a4 + 93) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1A67A1FB0(int a1, void *aBlock, uint64_t a3)
{
  v3[16] = a3;
  v3[17] = _Block_copy(aBlock);
  v3[18] = sub_1A6892000();
  v3[19] = v4;
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  swift_retain();
  uint64_t v6 = sub_1A68923E0();
  v3[20] = v6;
  v3[21] = v5;
  return MEMORY[0x1F4188298](sub_1A67A209C, v6, v5);
}

uint64_t sub_1A67A209C()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 128) + 88) + 208)
                                       + **(int **)(**(void **)(*(void *)(v0 + 128) + 88) + 208));
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1A67A21AC;
  return v3(v0 + 120);
}

uint64_t sub_1A67A21AC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x1F4188298](sub_1A67A22CC, v3, v2);
}

uint64_t sub_1A67A22CC()
{
  unint64_t v1 = *(void *)(v0 + 120);
  if (!v1) {
    unint64_t v1 = sub_1A6781288(MEMORY[0x1E4FBC860]);
  }
  uint64_t v2 = sub_1A68920A0();
  sub_1A67A1D10(v2, v3, v1, v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = *(void *)(v0 + 24);
  if (v4)
  {
    uint64_t v5 = *(void **)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 72);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 16);
    CoreSynthesizer.Voice._bridgeToObjectiveC()((TTSSpeechVoice *)(*(unsigned char *)(v0 + 116) & 1));
    uint64_t v12 = v11;
    sub_1A673FF60(v10, v4, v9, v8, v19, v7, v18, v17, v16, v6, v5);
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void (***)(void, void))(v0 + 136);
  ((void (**)(void, void *))v13)[2](v13, v12);

  _Block_release(v13);
  __int16 v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A67A2484()
{
  unint64_t v1 = sub_1A679B1DC(MEMORY[0x1E4FBC860]);
  uint64_t v2 = (unint64_t *)(v0 + OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voiceResolutionCache);
  swift_beginAccess();
  *uint64_t v2 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67A24E4(uint64_t a1, uint64_t a2)
{
  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  uint64_t v5 = sub_1A68923E0();
  v3[25] = v5;
  v3[26] = v4;
  return MEMORY[0x1F4188298](sub_1A67A25A0, v5, v4);
}

uint64_t sub_1A67A25A0()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voiceResolutionCache;
  v0[27] = OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voiceResolutionCache;
  uint64_t v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = v0[23];
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1A67AC35C(v5);
    if (v7)
    {
      uint64_t v8 = *(void *)(v4 + 56) + 104 * v6;
      uint64_t v9 = *(void *)(v8 + 8);
      uint64_t v10 = *(void *)(v8 + 16);
      uint64_t v26 = *(void *)(v8 + 24);
      uint64_t v27 = *(void *)v8;
      uint64_t v11 = *(void *)(v8 + 32);
      uint64_t v28 = *(unsigned __int8 *)(v8 + 56);
      uint64_t v29 = *(void *)(v8 + 48);
      uint64_t v12 = *(void *)(v8 + 64);
      uint64_t v13 = *(void *)(v8 + 72);
      __int16 v14 = *(void **)(v8 + 80);
      int v30 = *(_DWORD *)(v8 + 96);
      uint64_t v25 = *(unsigned __int16 *)(v8 + 40);
      if (*(unsigned char *)(v8 + 92)) {
        uint64_t v15 = 0x100000000;
      }
      else {
        uint64_t v15 = 0;
      }
      uint64_t v16 = v15 | *(unsigned int *)(v8 + 88);
      BOOL v17 = *(unsigned char *)(v8 + 100) != 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v14;
      swift_bridgeObjectRelease();
      uint64_t v19 = v0[22];
      *(void *)uint64_t v19 = v27;
      *(void *)(v19 + 8) = v9;
      *(void *)(v19 + 16) = v10;
      *(void *)(v19 + 24) = v26;
      *(void *)(v19 + 32) = v11;
      *(void *)(v19 + 40) = v25;
      *(void *)(v19 + 48) = v29;
      *(void *)(v19 + 56) = v28;
      *(void *)(v19 + 64) = v12;
      *(void *)(v19 + 72) = v13;
      *(void *)(v19 + 80) = v14;
      *(void *)(v19 + 88) = v16;
      *(unsigned char *)(v19 + 100) = v17;
      *(_DWORD *)(v19 + 96) = v30;
      uint64_t v20 = (uint64_t (*)(void))v0[1];
      return v20();
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v22 = *(void *)(v0[24] + 80);
  v0[28] = v22;
  v0[21] = v22;
  sub_1A679E10C(v22);
  uint64_t v23 = (void *)swift_task_alloc();
  v0[29] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1A67A27DC;
  uint64_t v24 = v0[23];
  return sub_1A67A6734(v24, v0 + 21);
}

uint64_t sub_1A67A27DC(uint64_t a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = *(void *)(*v1 + 224);
  *(void *)(*v1 + 240) = a1;
  swift_task_dealloc();
  sub_1A67AE9C0(v3);
  uint64_t v4 = *(void *)(v2 + 208);
  uint64_t v5 = *(void *)(v2 + 200);
  return MEMORY[0x1F4188298](sub_1A67A2928, v5, v4);
}

uint64_t sub_1A67A2928()
{
  uint64_t v1 = *(void *)(v0 + 240);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 184);
    unint64_t v3 = (uint64_t *)(*(void *)(v0 + 192) + *(void *)(v0 + 216));
    long long v5 = *(_OWORD *)(v1 + 48);
    long long v4 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v0 + 32) = v5;
    *(_OWORD *)(v0 + 48) = v4;
    long long v7 = *(_OWORD *)(v1 + 96);
    long long v6 = *(_OWORD *)(v1 + 112);
    long long v8 = *(_OWORD *)(v1 + 80);
    *(void *)(v0 + 109) = *(void *)(v1 + 125);
    *(_OWORD *)(v0 + 80) = v7;
    *(_OWORD *)(v0 + 96) = v6;
    *(_OWORD *)(v0 + 64) = v8;
    uint64_t v41 = *(void *)(v1 + 32);
    long long v40 = *(_OWORD *)(v1 + 40);
    uint64_t v38 = *(void *)(v1 + 64);
    uint64_t v39 = *(void *)(v1 + 56);
    uint64_t v36 = *(unsigned __int8 *)(v1 + 88);
    uint64_t v37 = *(void *)(v1 + 80);
    long long v35 = *(_OWORD *)(v1 + 96);
    uint64_t v9 = *(unsigned int *)(v1 + 120);
    int v10 = *(unsigned __int8 *)(v1 + 124);
    uint64_t v11 = *(unsigned int *)(v1 + 128);
    int v12 = *(unsigned __int8 *)(v1 + 132);
    uint64_t v33 = *(unsigned __int16 *)(v1 + 72);
    uint64_t v34 = *(void *)(v1 + 112);
    sub_1A67AEA1C(v0 + 16);
    swift_bridgeObjectRelease();
    uint64_t v13 = 0x100000000;
    if (v10) {
      uint64_t v14 = 0x100000000;
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v15 = v14 | v9;
    if (!v12) {
      uint64_t v13 = 0;
    }
    uint64_t v16 = v13 | v11;
    uint64_t v17 = sub_1A6891A40();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v2, v17);
    swift_beginAccess();
    sub_1A67AEA1C(v0 + 16);
    sub_1A67AEA1C(v0 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1A67AED9C(v0 + 16, v19, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v42;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
    swift_endAccess();
    sub_1A67AEF68(v0 + 16);
    swift_task_dealloc();
    long long v21 = v35;
    uint64_t v23 = v33;
    uint64_t v22 = v34;
    long long v24 = v40;
    uint64_t v26 = v36;
    uint64_t v25 = v37;
    uint64_t v28 = v38;
    uint64_t v27 = v39;
    uint64_t v29 = v41;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v22 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    long long v24 = 0uLL;
    long long v21 = 0uLL;
  }
  uint64_t v30 = *(void *)(v0 + 176);
  *(void *)uint64_t v30 = v29;
  *(_OWORD *)(v30 + 8) = v24;
  *(void *)(v30 + 24) = v27;
  *(void *)(v30 + 32) = v28;
  *(void *)(v30 + 40) = v23;
  *(void *)(v30 + 48) = v25;
  *(void *)(v30 + 56) = v26;
  *(_OWORD *)(v30 + 64) = v21;
  *(void *)(v30 + 80) = v22;
  *(void *)(v30 + 88) = v15;
  *(_DWORD *)(v30 + 96) = v16;
  *(unsigned char *)(v30 + 100) = BYTE4(v16);
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1A67A2D70(int a1, void *aBlock, uint64_t a3)
{
  v3[15] = a3;
  v3[16] = _Block_copy(aBlock);
  uint64_t v4 = sub_1A6891A40();
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v3[19] = v5;
  sub_1A6891940();
  swift_retain();
  long long v6 = (void *)swift_task_alloc();
  v3[20] = v6;
  *long long v6 = v3;
  v6[1] = sub_1A67A2EA8;
  return sub_1A67A24E4((uint64_t)(v3 + 2), v5);
}

uint64_t sub_1A67A2EA8()
{
  uint64_t v2 = *v0;
  uint64_t v1 = *v0;
  uint64_t v3 = *(void *)(*v0 + 152);
  uint64_t v4 = *(void *)(*v0 + 144);
  uint64_t v5 = *(void *)(*v0 + 136);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v1 + 24);
  if (v7)
  {
    uint64_t v8 = *(void **)(v2 + 96);
    uint64_t v18 = *(void *)(v2 + 88);
    uint64_t v19 = *(void *)(v2 + 80);
    uint64_t v20 = *(void *)(v2 + 72);
    uint64_t v21 = *(void *)(v2 + 64);
    uint64_t v9 = *(void *)(v2 + 56);
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v11 = *(void *)(v2 + 32);
    uint64_t v10 = *(void *)(v2 + 40);
    uint64_t v12 = *(void *)(v2 + 16);
    CoreSynthesizer.Voice._bridgeToObjectiveC()((TTSSpeechVoice *)(*(unsigned char *)(v2 + 116) & 1));
    uint64_t v14 = v13;
    sub_1A673FF60(v12, v7, v11, v10, v22, v9, v21, v20, v19, v18, v8);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(void (***)(void, void))(v2 + 128);
  ((void (**)(void, void *))v15)[2](v15, v14);

  _Block_release(v15);
  uint64_t v16 = *(uint64_t (**)(void))(v6 + 8);
  return v16();
}

uint64_t sub_1A67A3128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  uint64_t v6 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A67A31E4, v6, v5);
}

uint64_t sub_1A67A31E4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_1A6891A40();
  v0[6] = v2;
  v0[7] = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  swift_bridgeObjectRetain();
  sub_1A6891900();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v1 + 304) + **(int **)(*(void *)v1 + 304));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A67A3384;
  uint64_t v5 = v0[2];
  return v7(v5, v3);
}

uint64_t sub_1A67A3384()
{
  uint64_t v1 = *(void *)(*v0 + 64);
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1A67A34DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v24[0] = a1;
  uint64_t v9 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v24 - v13;
  uint64_t v15 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = sub_1A68924A0();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v14, 1, 1, v17);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  uint64_t v20 = v24[0];
  v19[4] = v5;
  void v19[5] = v20;
  v19[6] = a2;
  sub_1A67B4290((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_1EB67A2C0);
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    sub_1A6750210((uint64_t)v12, (uint64_t *)&unk_1EB67A2C0);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v17);
  }
  uint64_t v21 = sub_1A67B5750((unint64_t *)&qword_1E96C16A0, (void (*)(uint64_t))type metadata accessor for TTSExecutor);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = &unk_1E96C24E0;
  *(void *)(v22 + 24) = v19;
  v24[1] = 6;
  v24[2] = 0;
  v24[3] = v16;
  v24[4] = v21;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A67A377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a2;
  v6[16] = a3;
  uint64_t v11 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(*(void *)a4 + 312)
                                                           + **(int **)(*(void *)a4 + 312));
  uint64_t v9 = (void *)swift_task_alloc();
  v6[17] = v9;
  void *v9 = v6;
  v9[1] = sub_1A67A38B0;
  return v11(v6 + 2, a5, a6);
}

uint64_t sub_1A67A38B0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A67B8468, 0, 0);
}

void sub_1A67A3A68(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 80);
  uint64_t v9 = (void *)v3;
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = (void *)v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v5 = v4;
    CoreSynthesizer.Voice._bridgeToObjectiveC()(v6);
    id v8 = v7;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = 0;
  }
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v8);
}

uint64_t sub_1A67A3B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v26[1] = a6;
  uint64_t v28 = a5;
  uint64_t v29 = a3;
  uint64_t v11 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v26 - v15;
  uint64_t v17 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v27 = *v17;
  uint64_t v18 = sub_1A68924A0();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v18);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v28;
  v20[3] = a6;
  v20[4] = v6;
  v20[5] = a1;
  uint64_t v21 = v29;
  v20[6] = a2;
  v20[7] = v21;
  v20[8] = a4;
  sub_1A67B4290((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_1EB67A2C0);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18);
  uint64_t v22 = v27;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (a1 == 1)
  {
    sub_1A6750210((uint64_t)v14, (uint64_t *)&unk_1EB67A2C0);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
  }
  uint64_t v23 = sub_1A67B5750((unint64_t *)&qword_1E96C16A0, (void (*)(uint64_t))type metadata accessor for TTSExecutor);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = &unk_1E96C24F8;
  *(void *)(v24 + 24) = v20;
  uint64_t v30 = 6;
  uint64_t v31 = 0;
  uint64_t v32 = v22;
  uint64_t v33 = v23;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A67A3E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a2;
  v8[16] = a3;
  uint64_t v15 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)a4 + 336)
                                                                             + **(int **)(*(void *)a4 + 336));
  uint64_t v13 = (void *)swift_task_alloc();
  v8[17] = v13;
  void *v13 = v8;
  v13[1] = sub_1A67A3FA0;
  return v15(v8 + 2, a5, a6, a7, a8);
}

uint64_t sub_1A67A3FA0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A67A409C, 0, 0);
}

uint64_t sub_1A67A409C()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void (**)(void *))(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 24);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  id v8 = *(void **)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  char v10 = *(unsigned char *)(v0 + 116);
  int v11 = *(_DWORD *)(v0 + 112);
  v18[0] = *(void *)(v0 + 16);
  uint64_t v17 = v18[0];
  v18[1] = v16;
  uint64_t v18[2] = v15;
  v18[3] = v14;
  v18[4] = v2;
  v18[5] = v3;
  v18[6] = v4;
  v18[7] = v5;
  v18[8] = v6;
  v18[9] = v7;
  v18[10] = v8;
  v18[11] = v9;
  char v20 = v10;
  int v19 = v11;
  v1(v18);
  sub_1A673FF60(v17, v16, v15, v14, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1A67A42A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  void v6[3] = a1;
  v6[4] = a2;
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  uint64_t v8 = sub_1A68923E0();
  v6[9] = v8;
  v6[10] = v7;
  return MEMORY[0x1F4188298](sub_1A67A4360, v8, v7);
}

uint64_t sub_1A67A4360()
{
  if (v0[5])
  {
    uint64_t v13 = (uint64_t (*)(void *))(*(void *)(**(void **)(v0[8] + 88) + 208)
                                           + **(int **)(**(void **)(v0[8] + 88) + 208));
    uint64_t v1 = (void *)swift_task_alloc();
    v0[11] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1A67A46A4;
    uint64_t v2 = v0 + 2;
    uint64_t v3 = v13;
    return v3(v2);
  }
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  if (!v4)
  {
    uint64_t v10 = sub_1A6891A40();
    v0[12] = v10;
    v0[13] = *(void *)(v10 - 8);
    uint64_t v11 = swift_task_alloc();
    v0[14] = v11;
    uint64_t v15 = (uint64_t (*)(void *))(*(void *)(*(void *)v5 + 184) + **(int **)(*(void *)v5 + 184));
    uint64_t v12 = (void *)swift_task_alloc();
    v0[15] = v12;
    void *v12 = v0;
    v12[1] = sub_1A67A53A0;
    uint64_t v2 = (void *)v11;
    uint64_t v3 = v15;
    return v3(v2);
  }
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 312)
                                                          + **(int **)(*(void *)v5 + 312));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[36] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A67A5A94;
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[3];
  return v14(v8, v7, v4);
}

uint64_t sub_1A67A46A4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x1F4188298](sub_1A67A47C4, v3, v2);
}

uint64_t sub_1A67A47C4()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (!v1) {
    unint64_t v1 = sub_1A6781288(MEMORY[0x1E4FBC860]);
  }
  uint64_t v2 = sub_1A68920A0();
  uint64_t v4 = *(void **)(v1 + 16);
  if (!v4)
  {
    uint64_t v25 = 0;
    uint64_t v8 = 0;
    uint64_t v26 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v23 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    uint64_t v13 = 0;
LABEL_13:
    uint64_t v24 = 0;
    unint64_t v22 = 0;
    goto LABEL_14;
  }
  unint64_t v5 = sub_1A673F7AC(v2, v3);
  if ((v6 & 1) == 0)
  {
    uint64_t v25 = 0;
    uint64_t v8 = 0;
    uint64_t v26 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v23 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    uint64_t v4 = 0;
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v1 + 56) + 104 * v5;
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v9 = *(void *)(v7 + 24);
  uint64_t v89 = *(void *)(v7 + 16);
  uint64_t v91 = *(void *)v7;
  uint64_t v10 = *(void *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 48);
  uint64_t v12 = *(unsigned __int8 *)(v7 + 56);
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v13 = *(void *)(v7 + 72);
  uint64_t v103 = *(void **)(v7 + 80);
  uint64_t v15 = *(unsigned int *)(v7 + 88);
  int v16 = *(unsigned __int8 *)(v7 + 92);
  uint64_t v17 = *(unsigned int *)(v7 + 96);
  int v18 = *(unsigned __int8 *)(v7 + 100);
  uint64_t v99 = *(unsigned __int16 *)(v7 + 40);
  uint64_t v19 = 0x100000000;
  if (v16) {
    uint64_t v20 = 0x100000000;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v97 = v20 | v15;
  if (!v18) {
    uint64_t v19 = 0;
  }
  uint64_t v95 = v19 | v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = v103;
  unint64_t v22 = v95;
  uint64_t v24 = v97;
  uint64_t v23 = v99;
  uint64_t v4 = v103;
  uint64_t v26 = v89;
  uint64_t v25 = v91;
LABEL_14:
  *(_DWORD *)(v0 + 240) = v22;
  int v96 = v22;
  unint64_t v86 = HIDWORD(v22);
  *(unsigned char *)(v0 + 244) = BYTE4(v22);
  uint64_t v98 = v24;
  *(void *)(v0 + 224) = v4;
  *(void *)(v0 + 232) = v24;
  id v104 = v4;
  uint64_t v87 = v13;
  uint64_t v88 = v14;
  *(void *)(v0 + 208) = v14;
  *(void *)(v0 + 216) = v13;
  uint64_t v94 = v12;
  *(void *)(v0 + 192) = v11;
  *(void *)(v0 + 200) = v12;
  uint64_t v100 = v23;
  *(void *)(v0 + 176) = v10;
  *(void *)(v0 + 184) = v23;
  *(void *)(v0 + 160) = v26;
  *(void *)(v0 + 168) = v9;
  *(void *)(v0 + 144) = v25;
  *(void *)(v0 + 152) = v8;
  uint64_t v27 = *(void *)(v0 + 56);
  uint64_t v28 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v26;
  if (v27)
  {
    uint64_t v81 = v11;
    uint64_t v82 = v10;
    uint64_t v83 = v9;
    uint64_t v84 = v8;
    uint64_t v90 = v26;
    uint64_t v92 = v28;
    uint64_t v30 = *(void *)(v0 + 56);
    uint64_t v31 = *(void **)(v0 + 64);
    uint64_t v32 = sub_1A68918D0();
    *(void *)(v0 + 248) = v32;
    uint64_t v85 = *(void *)(v32 - 8);
    *(void *)(v0 + 256) = v85;
    uint64_t v93 = swift_task_alloc();
    *(void *)(v0 + 264) = v93;
    uint64_t v33 = sub_1A6891A40();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = swift_task_alloc();
    uint64_t v36 = swift_task_alloc();
    swift_bridgeObjectRetain();
    uint64_t v77 = v30;
    sub_1A6891900();
    uint64_t v37 = v31 + 3;
    uint64_t v38 = v31[6];
    uint64_t v39 = v31[7];
    sub_1A673E63C(v37, v38);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
    Locale.withTTSLanguageDisambiguation(overrides:)(v40, v35);
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v41(v36, v33);
    swift_task_dealloc();
    uint64_t v42 = sub_1A6891A20();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = swift_task_alloc();
    sub_1A6891A30();
    uint64_t v76 = v33;
    v75 = v41;
    v41(v35, v33);
    sub_1A6741AD0(&qword_1EB67A210);
    uint64_t v45 = swift_task_alloc();
    sub_1A68919F0();
    uint64_t v46 = v85;
    uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v74(v44, v42);
    v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
    uint64_t v79 = v32;
    if (v78(v45, 1, v32) == 1)
    {
      sub_1A6750210(v45, &qword_1EB67A210);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v29 = v90;
      uint64_t v28 = v92;
      uint64_t v8 = v84;
      uint64_t v11 = v81;
      uint64_t v10 = v82;
      uint64_t v47 = v94;
LABEL_32:
      swift_task_dealloc();
      uint64_t v9 = v83;
      goto LABEL_33;
    }
    uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 32);
    v73(v93, v45, v32);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v52 = swift_task_alloc();
    uint64_t v53 = v52;
    if (v84)
    {
      uint64_t v54 = swift_task_alloc();
      CoreSynthesizer.Voice.primaryLocale.getter(v54);
      uint64_t v55 = swift_task_alloc();
      sub_1A6891A30();
      v75(v54, v76);
      sub_1A68919F0();
      uint64_t v46 = v85;
      v74(v55, v42);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v56 = v79;
    }
    else
    {
      uint64_t v56 = v32;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v52, 1, 1, v32);
    }
    uint64_t v57 = v53;
    uint64_t v58 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v58, v93, v56);
    uint64_t v59 = v46;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v58, 0, 1, v56);
    uint64_t v60 = sub_1A6741AD0(&qword_1EB67A218) - 8;
    uint64_t v61 = swift_task_alloc();
    uint64_t v62 = v61 + *(int *)(v60 + 56);
    sub_1A675B090(v53, v61, &qword_1EB67A210);
    sub_1A675B090(v58, v62, &qword_1EB67A210);
    if (v78(v61, 1, v56) == 1)
    {
      sub_1A6750210(v58, &qword_1EB67A210);
      sub_1A6750210(v53, &qword_1EB67A210);
      if (v78(v62, 1, v56) == 1)
      {
        sub_1A6750210(v61, &qword_1EB67A210);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        char v63 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
LABEL_31:
        v63(v93, v56);
        uint64_t v8 = v84;
        uint64_t v11 = v81;
        uint64_t v10 = v82;
        uint64_t v47 = v94;
        uint64_t v29 = v90;
        uint64_t v28 = v92;
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v64 = swift_task_alloc();
      sub_1A675B090(v61, v64, &qword_1EB67A210);
      if (v78(v62, 1, v56) != 1)
      {
        uint64_t v65 = swift_task_alloc();
        v73(v65, v62, v56);
        sub_1A67B5178(&qword_1E96C1550, MEMORY[0x1F418BD68]);
        char v80 = sub_1A6891FC0();
        uint64_t v66 = v57;
        char v63 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        v63(v65, v56);
        sub_1A6750210(v58, &qword_1EB67A210);
        sub_1A6750210(v66, &qword_1EB67A210);
        v63(v64, v56);
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1A6750210(v61, &qword_1EB67A210);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        if (v80) {
          goto LABEL_31;
        }
        goto LABEL_36;
      }
      sub_1A6750210(v58, &qword_1EB67A210);
      sub_1A6750210(v57, &qword_1EB67A210);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v64, v56);
      swift_task_dealloc();
    }
    sub_1A6750210(v61, &qword_1EB67A218);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
LABEL_36:
    uint64_t v69 = *(int **)(**(void **)(v0 + 64) + 312);
    char v102 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v69 + *v69);
    uint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v70;
    *uint64_t v70 = v0;
    v70[1] = sub_1A67A57C4;
    uint64_t v71 = *(void *)(v0 + 48);
    uint64_t v72 = *(void *)(v0 + 24);
    return v102(v72, v71, v77);
  }
  uint64_t v47 = v94;
  if (v8)
  {
LABEL_33:
    uint64_t v67 = *(void *)(v0 + 24);
    *(void *)uint64_t v67 = v28;
    *(void *)(v67 + 8) = v8;
    *(void *)(v67 + 16) = v29;
    *(void *)(v67 + 24) = v9;
    *(void *)(v67 + 32) = v10;
    *(void *)(v67 + 40) = v100;
    *(void *)(v67 + 48) = v11;
    *(void *)(v67 + 56) = v47;
    *(void *)(v67 + 64) = v88;
    *(void *)(v67 + 72) = v87;
    *(void *)(v67 + 80) = v104;
    *(void *)(v67 + 88) = v98;
    *(_DWORD *)(v67 + 96) = v96;
    *(unsigned char *)(v67 + 100) = v86;
    uint64_t v68 = *(uint64_t (**)(void))(v0 + 8);
    return v68();
  }
  uint64_t v48 = *(int **)(**(void **)(v0 + 64) + 336);
  id v101 = (uint64_t (*)(uint64_t))((char *)v48 + *v48);
  BOOL v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v49;
  *BOOL v49 = v0;
  v49[1] = sub_1A67A59A0;
  uint64_t v50 = *(void *)(v0 + 24);
  return v101(v50);
}

uint64_t sub_1A67A53A0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x1F4188298](sub_1A67A54C0, v3, v2);
}

uint64_t sub_1A67A54C0()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = sub_1A68918F0();
  uint64_t v4 = v3;
  v0[16] = v3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 336)
                                                                          + **(int **)(*(void *)v1 + 336));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A67A5604;
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[3];
  return v9(v7, v6, 0, v2, v4);
}

uint64_t sub_1A67A5604()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x1F4188298](sub_1A67A5748, v3, v2);
}

uint64_t sub_1A67A5748()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A67A57C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x1F4188298](sub_1A67A58E4, v3, v2);
}

uint64_t sub_1A67A58E4()
{
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 248);
  sub_1A673FF60(*(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void **)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A67A59A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A67A5A94()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A67A5B88(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v2;
  *(void *)(v3 + 168) = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 176) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 192) = v4;
  *(_WORD *)(v3 + 312) = *(_WORD *)(a2 + 40);
  *(void *)(v3 + 208) = *(void *)(a2 + 48);
  *(unsigned char *)(v3 + 314) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(v3 + 216) = *(_OWORD *)(a2 + 64);
  *(void *)(v3 + 232) = *(void *)(a2 + 80);
  *(_DWORD *)(v3 + 304) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(v3 + 315) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(v3 + 308) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(v3 + 316) = *(unsigned char *)(a2 + 100);
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  uint64_t v6 = sub_1A68923E0();
  *(void *)(v3 + 240) = v6;
  *(void *)(v3 + 248) = v5;
  return MEMORY[0x1F4188298](sub_1A67A5C9C, v6, v5);
}

uint64_t sub_1A67A5C9C()
{
  uint64_t v1 = sub_1A6891A40();
  v0[32] = v1;
  v0[33] = *(void *)(v1 - 8);
  uint64_t v2 = swift_task_alloc();
  v0[34] = v2;
  CoreSynthesizer.Voice.primaryLocale.getter(v2);
  sub_1A6741AD0((uint64_t *)&unk_1E96C1510);
  uint64_t inited = swift_initStackObject();
  v0[35] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1A689FD30;
  *(void *)(inited + 32) = *(void *)sub_1A67F8E30();
  *(void *)(inited + 40) = 0;
  *(unsigned char *)(inited + 48) = 0;
  *(void *)(inited + 56) = *(void *)sub_1A67F8DD0();
  *(void *)(inited + 64) = 0;
  *(unsigned char *)(inited + 72) = 0;
  *(void *)(inited + 80) = *(void *)sub_1A67F8DE8();
  *(void *)(inited + 88) = 0;
  *(unsigned char *)(inited + 96) = 0;
  *(_OWORD *)(inited + 104) = xmmword_1A689FD40;
  *(unsigned char *)(inited + 120) = 3;
  v0[18] = inited;
  long long v4 = (void *)swift_task_alloc();
  v0[36] = v4;
  *long long v4 = v0;
  v4[1] = sub_1A67A5EB4;
  return sub_1A67A6734(v2, v0 + 18);
}

uint64_t sub_1A67A5EB4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 272);
  uint64_t v4 = *(void *)(*v1 + 264);
  uint64_t v5 = *(void *)(*v1 + 256);
  *(void *)(*v1 + 296) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v2 + 248);
  uint64_t v7 = *(void *)(v2 + 240);
  return MEMORY[0x1F4188298](sub_1A67A6064, v7, v6);
}

uint64_t sub_1A67A6064()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[19];
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = *(void *)(v1 + 40);
    uint64_t v5 = *(void *)(v1 + 48);
    uint64_t v4 = *(void *)(v1 + 56);
    uint64_t v6 = *(void *)(v1 + 64);
    __int16 v7 = *(_WORD *)(v1 + 72);
    uint64_t v8 = *(void *)(v1 + 80);
    char v9 = *(unsigned char *)(v1 + 88);
    uint64_t v10 = *(void *)(v1 + 96);
    uint64_t v11 = *(void *)(v1 + 104);
    uint64_t v12 = *(void **)(v1 + 112);
    int v13 = *(_DWORD *)(v1 + 120);
    char v14 = *(unsigned char *)(v1 + 124);
    int v15 = *(_DWORD *)(v1 + 128);
    char v16 = *(unsigned char *)(v1 + 132);
    *(void *)uint64_t v2 = *(void *)(v1 + 32);
    *(void *)(v2 + 8) = v3;
    *(void *)(v2 + 16) = v5;
    *(void *)(v2 + 24) = v4;
    *(void *)(v2 + 32) = v6;
    *(_WORD *)(v2 + 40) = v7;
    *(void *)(v2 + 48) = v8;
    *(unsigned char *)(v2 + 56) = v9;
    *(void *)(v2 + 64) = v10;
    *(void *)(v2 + 72) = v11;
    *(void *)(v2 + 80) = v12;
    *(_DWORD *)(v2 + 88) = v13;
    *(unsigned char *)(v2 + 92) = v14;
    *(_DWORD *)(v2 + 96) = v15;
    *(unsigned char *)(v2 + 100) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v2 + 93) = 0;
    *(_OWORD *)(v2 + 64) = 0u;
    *(_OWORD *)(v2 + 80) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
  }
  int v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1A67A6314(void *a1, void *aBlock, uint64_t a3)
{
  *(void *)(v3 + 328) = a3;
  *(void *)(v3 + 336) = _Block_copy(aBlock);
  id v5 = a1;
  swift_retain();
  static CoreSynthesizer.Voice._unconditionallyBridgeFromObjectiveC(_:)(a1, v3 + 120);

  uint64_t v6 = *(void *)(v3 + 120);
  uint64_t v7 = *(void *)(v3 + 128);
  uint64_t v8 = *(void *)(v3 + 136);
  uint64_t v9 = *(void *)(v3 + 144);
  *(void *)(v3 + 344) = v7;
  *(void *)(v3 + 352) = v8;
  uint64_t v10 = *(void *)(v3 + 152);
  __int16 v11 = *(_WORD *)(v3 + 160);
  uint64_t v12 = *(void *)(v3 + 168);
  char v13 = *(unsigned char *)(v3 + 176);
  uint64_t v14 = *(void *)(v3 + 184);
  uint64_t v15 = *(void *)(v3 + 192);
  *(void *)(v3 + 360) = v10;
  *(void *)(v3 + 368) = v14;
  uint64_t v16 = *(void *)(v3 + 200);
  *(void *)(v3 + 376) = v15;
  *(void *)(v3 + 384) = v16;
  int v17 = *(_DWORD *)(v3 + 208);
  char v18 = *(unsigned char *)(v3 + 212);
  int v19 = *(_DWORD *)(v3 + 216);
  char v20 = *(unsigned char *)(v3 + 220);
  *(void *)(v3 + 224) = v6;
  *(void *)(v3 + 232) = v7;
  *(void *)(v3 + 240) = v8;
  *(void *)(v3 + 248) = v9;
  *(void *)(v3 + 256) = v10;
  *(_WORD *)(v3 + 264) = v11;
  *(void *)(v3 + 272) = v12;
  *(unsigned char *)(v3 + 280) = v13;
  *(void *)(v3 + 288) = v14;
  *(void *)(v3 + 296) = v15;
  *(void *)(v3 + 304) = v16;
  *(_DWORD *)(v3 + 312) = v17;
  *(unsigned char *)(v3 + 316) = v18;
  *(_DWORD *)(v3 + 320) = v19;
  *(unsigned char *)(v3 + 324) = v20;
  id v21 = (void *)swift_task_alloc();
  *(void *)(v3 + 392) = v21;
  *id v21 = v3;
  v21[1] = sub_1A67A6470;
  return sub_1A67A5B88(v3 + 16, v3 + 224);
}

uint64_t sub_1A67A6470()
{
  uint64_t v2 = *v0;
  uint64_t v1 = *v0;
  uint64_t v3 = *(void **)(*v0 + 384);
  uint64_t v20 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = *(void *)(v1 + 24);
  if (v4)
  {
    id v5 = *(void **)(v2 + 96);
    uint64_t v6 = *(void *)(v2 + 88);
    uint64_t v16 = *(void *)(v2 + 80);
    uint64_t v17 = *(void *)(v2 + 72);
    uint64_t v18 = *(void *)(v2 + 64);
    uint64_t v7 = *(void *)(v2 + 56);
    uint64_t v19 = *(void *)(v2 + 48);
    uint64_t v9 = *(void *)(v2 + 32);
    uint64_t v8 = *(void *)(v2 + 40);
    uint64_t v10 = *(void *)(v2 + 16);
    CoreSynthesizer.Voice._bridgeToObjectiveC()((TTSSpeechVoice *)(*(unsigned char *)(v2 + 116) & 1));
    uint64_t v12 = v11;
    sub_1A673FF60(v10, v4, v9, v8, v19, v7, v18, v17, v16, v6, v5);
  }
  else
  {
    uint64_t v12 = 0;
  }
  char v13 = *(void (***)(void, void))(v2 + 336);
  ((void (**)(void, void *))v13)[2](v13, v12);

  _Block_release(v13);
  uint64_t v14 = *(uint64_t (**)(void))(v20 + 8);
  return v14();
}

uint64_t sub_1A67A6734(uint64_t a1, void *a2)
{
  v3[3] = a1;
  v3[4] = v2;
  v3[5] = *a2;
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  uint64_t v5 = sub_1A68923E0();
  v3[6] = v5;
  v3[7] = v4;
  return MEMORY[0x1F4188298](sub_1A67A67F4, v5, v4);
}

uint64_t sub_1A67A67F4()
{
  uint64_t v1 = sub_1A6891A40();
  v0[8] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[9] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[10] = v3;
  uint64_t v4 = *(void (**)(void))(v2 + 16);
  v0[11] = v4;
  v0[12] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v4();
  sub_1A6741AD0(&qword_1E96C1570);
  uint64_t v5 = swift_task_alloc();
  sub_1A6891990();
  uint64_t v6 = sub_1A6891960();
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  sub_1A6750210(v5, &qword_1E96C1570);
  swift_task_dealloc();
  if (v7 != 1)
  {
LABEL_4:
    uint64_t v14 = (void *)v0[4];
    uint64_t v15 = swift_task_alloc();
    uint64_t v16 = v14[6];
    uint64_t v17 = v14[7];
    sub_1A673E63C(v14 + 3, v16);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    Locale.withTTSLanguageDisambiguation(overrides:)(v18, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40))(v3, v15, v1);
    uint64_t v19 = v0[4];
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void *))(*(void *)(**(void **)(v19 + 88) + 208)
                                           + **(int **)(**(void **)(v19 + 88) + 208));
    uint64_t v20 = (void *)swift_task_alloc();
    v0[19] = v20;
    void *v20 = v0;
    v20[1] = sub_1A67A704C;
    return v26(v0 + 2);
  }
  uint64_t v24 = v1;
  uint64_t v8 = sub_1A68918D0();
  v0[13] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v0[14] = v9;
  uint64_t v25 = swift_task_alloc();
  v0[15] = v25;
  uint64_t v10 = sub_1A6891A20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  sub_1A6891A30();
  sub_1A6741AD0(&qword_1EB67A210);
  uint64_t v13 = swift_task_alloc();
  sub_1A68919F0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8) == 1)
  {
    sub_1A6750210(v13, &qword_1EB67A210);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = v24;
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v25, v13, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  v0[16] = swift_task_alloc();
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v22 = swift_task_alloc();
  v0[17] = v22;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[18] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1A67A6D50;
  return sub_1A67A9950(v22, v25);
}

uint64_t sub_1A67A6D50()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1A67A6E70, v3, v2);
}

uint64_t sub_1A67A6E70()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  if (v4 == 1)
  {
    (*(void (**)(uint64_t, void, void))(v0 + 88))(v5, *(void *)(v0 + 80), *(void *)(v0 + 64));
    sub_1A6750210(v6, &qword_1EB67A238);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 72) + 32))(v5, *(void *)(v0 + 136), *(void *)(v0 + 64));
  }
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 64);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v9, v7, v10);
  swift_task_dealloc();
  uint64_t v11 = *(void *)(v0 + 32);
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)(v11 + 88) + 208)
                                        + **(int **)(**(void **)(v11 + 88) + 208));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v12;
  void *v12 = v0;
  v12[1] = sub_1A67A704C;
  return v14(v0 + 16);
}

uint64_t sub_1A67A704C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1A67A716C, v3, v2);
}

uint64_t sub_1A67A716C()
{
  uint64_t v14 = v0;
  unint64_t v1 = v0[2];
  if (!v1) {
    unint64_t v1 = sub_1A6781288(MEMORY[0x1E4FBC860]);
  }
  uint64_t v2 = v0[10];
  unint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = (char *)sub_1A67A8D80((uint64_t)sub_1A67B5798, v5, v1);
  swift_task_dealloc();
  uint64_t v13 = v6;
  sub_1A679E10C(v3);
  swift_bridgeObjectRetain();
  sub_1A67B8144(&v13, v2, v3);
  uint64_t v8 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[8];
  sub_1A67AE9C0(v0[5]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v13;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(char *))v0[1];
  return v11(v10);
}

uint64_t sub_1A67A72F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  int v6 = *((unsigned __int8 *)a1 + 41);
  int v29 = *((unsigned __int8 *)a1 + 40);
  int v30 = v6;
  uint64_t v31 = a1[6];
  int v32 = *((unsigned __int8 *)a1 + 56);
  uint64_t v7 = a1[9];
  uint64_t v33 = a1[8];
  uint64_t v34 = v7;
  uint64_t v35 = a1[10];
  LODWORD(v7) = *((unsigned __int8 *)a1 + 92);
  int v36 = *((_DWORD *)a1 + 22);
  int v37 = v7;
  LODWORD(v7) = *((unsigned __int8 *)a1 + 100);
  int v38 = *((_DWORD *)a1 + 24);
  int v39 = v7;
  uint64_t v8 = sub_1A6741AD0(&qword_1EB67A210);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A6891A20();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6891A30();
  sub_1A68919F0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v15 = sub_1A68918D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15);
  if (v17 == 1)
  {
    sub_1A6750210((uint64_t)v10, &qword_1EB67A210);
LABEL_6:
    uint64_t v40 = v3;
    uint64_t v41 = v4;
    uint64_t v42 = v5;
    uint64_t v43 = v27;
    uint64_t v44 = v28;
    char v45 = v29;
    char v46 = v30;
    uint64_t v47 = v31;
    char v48 = v32;
    uint64_t v49 = v33;
    uint64_t v50 = v34;
    uint64_t v51 = v35;
    int v52 = v36;
    char v53 = v37;
    int v54 = v38;
    char v55 = v39;
    uint64_t v25 = CoreSynthesizer.Voice.locales.getter();
    MEMORY[0x1F4188790](v25);
    *(&v27 - 2) = a2;
    char v24 = sub_1A67A8950((uint64_t (*)(char *))sub_1A67B8200, (uint64_t)(&v27 - 4), v25);
    swift_bridgeObjectRelease();
    return v24 & 1;
  }
  uint64_t v18 = Locale.LanguageCode.childLanguages.getter(v17);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v15);
  if (!*(void *)(v18 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v40 = v3;
  uint64_t v41 = v4;
  uint64_t v42 = v5;
  uint64_t v43 = v27;
  uint64_t v44 = v28;
  char v45 = v29;
  char v46 = v30;
  uint64_t v47 = v31;
  char v48 = v32;
  uint64_t v49 = v33;
  uint64_t v50 = v34;
  uint64_t v51 = v35;
  int v52 = v36;
  char v53 = v37;
  int v54 = v38;
  char v55 = v39;
  uint64_t v19 = CoreSynthesizer.Voice.locales.getter();
  uint64_t v20 = sub_1A67A76F4(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1A6760D00((uint64_t)v20);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1A67B3034(v18, v21);
  swift_bridgeObjectRelease();
  unint64_t v23 = v22[2];
  swift_release();
  char v24 = v23 != 0;
  return v24 & 1;
}

char *sub_1A67A76F4(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  uint64_t v5 = sub_1A6741AD0(&qword_1EB67A238);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v44 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v46 = a1;
  double result = (char *)swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v50 = (char *)MEMORY[0x1E4FBC860];
  char v45 = v7;
  while (1)
  {
    if (v4)
    {
      unint64_t v10 = __clz(__rbit64(v4));
      uint64_t v11 = (v4 - 1) & v4;
      unint64_t v12 = v10 | (v9 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v13 >= v44) {
      goto LABEL_30;
    }
    unint64_t v14 = *(void *)(v43 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v44) {
        goto LABEL_30;
      }
      unint64_t v14 = *(void *)(v43 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v44) {
          goto LABEL_30;
        }
        unint64_t v14 = *(void *)(v43 + 8 * v9);
        if (!v14)
        {
          int64_t v9 = v13 + 3;
          if (v13 + 3 >= v44) {
            goto LABEL_30;
          }
          unint64_t v14 = *(void *)(v43 + 8 * v9);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v11 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_23:
    uint64_t v16 = *(void *)(v46 + 48);
    uint64_t v17 = sub_1A6891A40();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v7, v16 + *(void *)(v18 + 72) * v12, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v7, 0, 1, v17);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17);
    if (v19 == 1) {
      goto LABEL_31;
    }
    unint64_t v54 = v11;
    int64_t v55 = v9;
    int v52 = &v42;
    MEMORY[0x1F4188790](v19);
    uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v7, v17);
    uint64_t v22 = sub_1A68918D0();
    uint64_t v51 = &v42;
    uint64_t v56 = *(void *)(v22 - 8);
    uint64_t v57 = v22;
    MEMORY[0x1F4188790](v22);
    unint64_t v47 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
    char v48 = (char *)&v42 - v47;
    uint64_t v49 = v23;
    uint64_t v24 = sub_1A6741AD0(&qword_1EB67A210);
    uint64_t v58 = &v42;
    MEMORY[0x1F4188790](v24 - 8);
    uint64_t v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = sub_1A6891A20();
    char v53 = &v42;
    uint64_t v28 = *(void *)(v27 - 8);
    MEMORY[0x1F4188790](v27);
    int v30 = (char *)&v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A6891A30();
    sub_1A68919F0();
    uint64_t v31 = v57;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t v32 = v56;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v26, 1, v31) == 1)
    {
      double result = (char *)sub_1A6750210((uint64_t)v26, &qword_1EB67A210);
      uint64_t v7 = v45;
      unint64_t v4 = v54;
      int64_t v9 = v55;
    }
    else
    {
      uint64_t v33 = *(uint64_t (**)(char *, char *, uint64_t))(v32 + 32);
      uint64_t v34 = v48;
      uint64_t v35 = v33(v48, v26, v31);
      MEMORY[0x1F4188790](v35);
      int v36 = (char *)&v42 - v47;
      v33((char *)&v42 - v47, v34, v31);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v58 = &v42;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v50 = (char *)sub_1A67AEBC0(0, *((void *)v50 + 2) + 1, 1, v50, &qword_1E96C1D58, MEMORY[0x1F418BD60]);
      }
      uint64_t v7 = v45;
      unint64_t v39 = *((void *)v50 + 2);
      unint64_t v38 = *((void *)v50 + 3);
      if (v39 >= v38 >> 1) {
        uint64_t v50 = (char *)sub_1A67AEBC0(v38 > 1, v39 + 1, 1, v50, &qword_1E96C1D58, MEMORY[0x1F418BD60]);
      }
      uint64_t v40 = v50;
      *((void *)v50 + 2) = v39 + 1;
      double result = (char *)v33(&v40[((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v39], v36, v57);
      unint64_t v4 = v54;
      int64_t v9 = v55;
    }
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v44)
  {
LABEL_30:
    uint64_t v41 = sub_1A6891A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v7, 1, 1, v41);
LABEL_31:
    swift_release();
    return v50;
  }
  unint64_t v14 = *(void *)(v43 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v44) {
      goto LABEL_30;
    }
    unint64_t v14 = *(void *)(v43 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1A67A7D88(uint64_t a1, uint64_t *a2)
{
  uint64_t v24 = a2;
  uint64_t v2 = sub_1A6741AD0(&qword_1EB67A210);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = sub_1A6891A20();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  sub_1A6891A30();
  sub_1A68919F0();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v5 + 8);
  v7((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v8 = sub_1A68918D0();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v8);
  uint64_t v25 = v7;
  if (v11 == 1)
  {
    uint64_t v12 = sub_1A6750210((uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB67A210);
    uint64_t v22 = 0;
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v22 = sub_1A6891890();
    uint64_t v23 = v13;
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  }
  uint64_t v24 = &v22;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  int64_t v15 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  sub_1A6891A30();
  sub_1A68919F0();
  v25((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  if (v10(v15, 1, v8) == 1)
  {
    sub_1A6750210((uint64_t)v15, &qword_1EB67A210);
    if (!v23) {
      goto LABEL_17;
    }
LABEL_14:
    char v20 = 0;
LABEL_19:
    swift_bridgeObjectRelease();
    return v20 & 1;
  }
  uint64_t v16 = sub_1A6891890();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  if (v23)
  {
    if (v18)
    {
      if (v22 == v16 && v23 == v18)
      {
        swift_bridgeObjectRelease();
        char v20 = 1;
      }
      else
      {
        char v20 = sub_1A6893120();
        swift_bridgeObjectRelease();
      }
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  if (v18)
  {
    char v20 = 0;
    goto LABEL_19;
  }
LABEL_17:
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_1A67A80DC(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v28 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  uint64_t v7 = sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v27 = (uint64_t)&v27;
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = *(void *)(a1 + 48);
    uint64_t v18 = sub_1A6891A40();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v9, v17 + *(void *)(v19 + 72) * i, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v18);
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v18);
    if (v20 == 1)
    {
      swift_release();
      goto LABEL_31;
    }
    MEMORY[0x1F4188790](v20);
    uint64_t v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v9, v18);
    char v23 = sub_1A67A9148((uint64_t)v22, v30);
    if (v31)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      swift_release();
      char v25 = v27;
      return v25 & 1;
    }
    char v24 = v23;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    if (v24)
    {
      swift_release();
      char v25 = 1;
      return v25 & 1;
    }
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v29) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v16);
      if (v15) {
        goto LABEL_16;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v29) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v16);
      if (v15) {
        goto LABEL_16;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v29) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v16);
      if (v15)
      {
LABEL_16:
        int64_t v11 = v16;
        goto LABEL_17;
      }
      int64_t v16 = v11 + 4;
      if (v11 + 4 < v29)
      {
        unint64_t v15 = *(void *)(v28 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            int64_t v11 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              goto LABEL_34;
            }
            if (v11 >= v29) {
              goto LABEL_30;
            }
            unint64_t v15 = *(void *)(v28 + 8 * v11);
            ++v16;
            if (v15) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_30:
      uint64_t v26 = sub_1A6891A40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
      swift_release();
LABEL_31:
      char v25 = 0;
      return v25 & 1;
    }
LABEL_17:
    unint64_t v6 = (v15 - 1) & v15;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A67A84D0(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  uint64_t v6 = sub_1A6741AD0(&qword_1EB67A238);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v38 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v41 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  unint64_t v39 = v8;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v5));
  uint64_t v12 = (v5 - 1) & v5;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v10 << 6))
  {
    uint64_t v17 = *(void *)(v41 + 48);
    uint64_t v18 = sub_1A6891A40();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = v19;
    uint64_t v21 = v17 + *(void *)(v19 + 72) * i;
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    v22(v8, v21, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v18);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v18);
    if (v23 == 1) {
      goto LABEL_32;
    }
    unint64_t v42 = v12;
    int64_t v43 = v10;
    uint64_t v46 = &v36;
    char v45 = v22;
    uint64_t v24 = *(void *)(v20 + 64);
    MEMORY[0x1F4188790](v23);
    char v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v8, v18);
    uint64_t v26 = sub_1A68918F0();
    uint64_t v28 = v27;
    int64_t v44 = &v36;
    MEMORY[0x1F4188790](v26);
    v45(v25, v40, v18);
    uint64_t v29 = sub_1A68918F0();
    uint64_t v31 = v30;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v20 + 8);
    v32(v25, v18);
    if (v26 == v29 && v28 == v31)
    {
      swift_bridgeObjectRelease_n();
      v32(v25, v18);
LABEL_30:
      swift_release();
      return 1;
    }
    char v34 = sub_1A6893120();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v25, v18);
    if (v34) {
      goto LABEL_30;
    }
    uint64_t v8 = v39;
    unint64_t v5 = v42;
    int64_t v10 = v43;
    if (v42) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v14 >= v38) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v38) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v37 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v38) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v37 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v14 + 3;
          if (v14 + 3 >= v38) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v37 + 8 * v10);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_20:
    uint64_t v12 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v38)
  {
LABEL_31:
    uint64_t v35 = sub_1A6891A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v8, 1, 1, v35);
LABEL_32:
    swift_release();
    return 0;
  }
  unint64_t v15 = *(void *)(v37 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v38) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A67A8950(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v5 = *(void *)(a3 + 56);
  uint64_t v35 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = sub_1A6741AD0(&qword_1EB67A238);
  char v34 = &v33;
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v38 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v8));
  uint64_t v15 = (v8 - 1) & v8;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = *(void *)(v38 + 48);
    uint64_t v21 = sub_1A6891A40();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v11, v20 + *(void *)(v22 + 72) * i, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v21);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v11, 1, v21);
    if (v23 == 1)
    {
      swift_release();
      goto LABEL_31;
    }
    unint64_t v24 = v15;
    int64_t v25 = v13;
    unint64_t v39 = &v33;
    MEMORY[0x1F4188790](v23);
    uint64_t v27 = (char *)&v33 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = v11;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v11, v21);
    char v29 = v37(v27);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
      swift_release();
      char v31 = (char)v34;
      return v31 & 1;
    }
    char v30 = v29;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    if (v30)
    {
      swift_release();
      char v31 = 1;
      return v31 & 1;
    }
    unint64_t v11 = v28;
    int64_t v13 = v25;
    unint64_t v8 = v24;
    if (v24) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1)) {
      break;
    }
    if (v13 >= v36) {
      goto LABEL_30;
    }
    unint64_t v18 = *(void *)(v35 + 8 * v13);
    if (!v18)
    {
      int64_t v19 = v13 + 1;
      if (v13 + 1 >= v36) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (v18) {
        goto LABEL_16;
      }
      int64_t v19 = v13 + 2;
      if (v13 + 2 >= v36) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (v18) {
        goto LABEL_16;
      }
      int64_t v19 = v13 + 3;
      if (v13 + 3 >= v36) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (v18)
      {
LABEL_16:
        int64_t v13 = v19;
        goto LABEL_17;
      }
      int64_t v19 = v13 + 4;
      if (v13 + 4 < v36)
      {
        unint64_t v18 = *(void *)(v35 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            int64_t v13 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_34;
            }
            if (v13 >= v36) {
              goto LABEL_30;
            }
            unint64_t v18 = *(void *)(v35 + 8 * v13);
            ++v19;
            if (v18) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_30:
      uint64_t v32 = sub_1A6891A40();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v11, 1, 1, v32);
      swift_release();
LABEL_31:
      char v31 = 0;
      return v31 & 1;
    }
LABEL_17:
    uint64_t v15 = (v18 - 1) & v18;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A67A8D80(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v42 = (uint64_t (*)(void *))result;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v6 = a3 + 64;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  uint64_t v40 = v6;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v11)
    {
      uint64_t v52 = (v11 - 1) & v11;
      int64_t v53 = v5;
      unint64_t v13 = __clz(__rbit64(v11)) | (v5 << 6);
      goto LABEL_21;
    }
    BOOL v14 = __OFADD__(v5, 1);
    int64_t v15 = v5 + 1;
    if (v14)
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v41) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v40 + 8 * v15);
    if (!v16) {
      break;
    }
LABEL_20:
    uint64_t v52 = (v16 - 1) & v16;
    int64_t v53 = v15;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
LABEL_21:
    uint64_t v18 = *(void *)(a3 + 56) + 104 * v13;
    uint64_t v20 = *(void *)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v22 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 32);
    char v24 = *(unsigned char *)(v18 + 40);
    char v25 = *(unsigned char *)(v18 + 41);
    uint64_t v26 = *(void *)(v18 + 48);
    char v27 = *(unsigned char *)(v18 + 56);
    uint64_t v28 = *(void *)(v18 + 64);
    uint64_t v29 = *(void *)(v18 + 72);
    char v30 = *(void **)(v18 + 80);
    int v31 = *(_DWORD *)(v18 + 88);
    char v32 = *(unsigned char *)(v18 + 92);
    int v33 = *(_DWORD *)(v18 + 96);
    LOBYTE(v18) = *(unsigned char *)(v18 + 100);
    uint64_t v50 = v21;
    uint64_t v51 = v20;
    v55[0] = v20;
    v55[1] = v19;
    v55[2] = v22;
    v55[3] = v21;
    v55[4] = v23;
    char v48 = v25;
    char v49 = v24;
    char v56 = v24;
    char v57 = v25;
    uint64_t v47 = v26;
    uint64_t v58 = v26;
    int v45 = v31;
    char v46 = v27;
    char v59 = v27;
    uint64_t v60 = v28;
    uint64_t v61 = v29;
    uint64_t v62 = v30;
    int v63 = v31;
    char v64 = v32;
    int v65 = v33;
    char v44 = v18;
    char v66 = v18;
    uint64_t v54 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = v30;
    char v35 = v42(v55);
    if (v4)
    {
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    if (v35)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v12;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A67AC598(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v67;
      }
      unint64_t v37 = *(void *)(v12 + 16);
      unint64_t v36 = *(void *)(v12 + 24);
      unint64_t v38 = v37 + 1;
      if (v37 >= v36 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A67AC598((char *)(v36 > 1), v37 + 1, 1);
        unint64_t v38 = v37 + 1;
        uint64_t v12 = v67;
      }
      *(void *)(v12 + 16) = v38;
      uint64_t v39 = v12 + 104 * v37;
      *(void *)(v39 + 32) = v51;
      *(void *)(v39 + 40) = v54;
      *(void *)(v39 + 48) = v22;
      *(void *)(v39 + 56) = v50;
      *(void *)(v39 + 64) = v23;
      *(unsigned char *)(v39 + 72) = v49;
      *(unsigned char *)(v39 + 73) = v48;
      *(void *)(v39 + 80) = v47;
      *(unsigned char *)(v39 + 88) = v46;
      *(void *)(v39 + 96) = v28;
      *(void *)(v39 + 104) = v29;
      *(void *)(v39 + 112) = v34;
      *(_DWORD *)(v39 + 120) = v45;
      *(unsigned char *)(v39 + 124) = v32;
      *(_DWORD *)(v39 + 128) = v33;
      *(unsigned char *)(v39 + 132) = v44;
      uint64_t v4 = 0;
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    unint64_t v11 = v52;
    int64_t v5 = v53;
  }
  int64_t v17 = v15 + 1;
  if (v15 + 1 >= v41) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v40 + 8 * v17);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v41) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v40 + 8 * v17);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v17 = v15 + 3;
  if (v15 + 3 >= v41) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v40 + 8 * v17);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v17 = v15 + 4;
  if (v15 + 4 >= v41)
  {
LABEL_33:
    swift_release();
    return v12;
  }
  unint64_t v16 = *(void *)(v40 + 8 * v17);
  if (v16)
  {
LABEL_19:
    int64_t v15 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v41) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v40 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A67A9148(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1A6741AD0(&qword_1EB67A210);
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = sub_1A6891A20();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  sub_1A6891A30();
  sub_1A68919F0();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v6 + 8);
  v8((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v9 = sub_1A68918D0();
  uint64_t v10 = *(void *)(v9 - 8);
  char v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v11 = v30((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v9);
  int v31 = v8;
  uint64_t v32 = v5;
  uint64_t v26 = v10;
  if (v11 == 1)
  {
    uint64_t v12 = sub_1A6750210((uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB67A210);
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v25 = sub_1A6891890();
    uint64_t v27 = v13;
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  }
  uint64_t v29 = &v25;
  MEMORY[0x1F4188790](v12);
  BOOL v14 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A6891A40();
  uint64_t v28 = &v25;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a2, v15);
  MEMORY[0x1F4188790](v19);
  sub_1A6891A30();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1A68919F0();
  v31((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
  if (v30(v14, 1, v9) == 1)
  {
    sub_1A6750210((uint64_t)v14, &qword_1EB67A210);
    if (!v27) {
      goto LABEL_15;
    }
LABEL_12:
    char v23 = 0;
LABEL_17:
    swift_bridgeObjectRelease();
    return v23 & 1;
  }
  uint64_t v20 = sub_1A6891890();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v9);
  if (v27)
  {
    if (v22)
    {
      if (v25 == v20 && v27 == v22)
      {
        swift_bridgeObjectRelease();
        char v23 = 1;
      }
      else
      {
        char v23 = sub_1A6893120();
        swift_bridgeObjectRelease();
      }
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    char v23 = 0;
    goto LABEL_17;
  }
LABEL_15:
  char v23 = 1;
  return v23 & 1;
}

uint64_t sub_1A67A957C()
{
  uint64_t v1 = *v0;
  if ((unint64_t)*v0 < 2)
  {
    sub_1A6741AD0((uint64_t *)&unk_1E96C1510);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1A689E4B0;
    *(void *)(v1 + 32) = *(void *)sub_1A67F8E30();
    *(void *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 48) = 0;
    uint64_t v2 = sub_1A67F8E48();
LABEL_6:
    *(void *)(v1 + 56) = *v2;
    *(void *)(v1 + 64) = 0;
    *(unsigned char *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
    *(unsigned char *)(v1 + 96) = 3;
    *(void *)(v1 + 104) = *(void *)sub_1A67F8DE8();
    *(void *)(v1 + 112) = 0;
    *(unsigned char *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 128) = xmmword_1A689FD40;
    *(unsigned char *)(v1 + 144) = 3;
    return v1;
  }
  if (*v0 == 2)
  {
    sub_1A6741AD0((uint64_t *)&unk_1E96C1510);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1A689E4B0;
    *(void *)(v1 + 32) = *(void *)sub_1A67F8E00();
    *(void *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 48) = 0;
    uint64_t v2 = sub_1A67F8E30();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A67A966C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  char v10 = *((unsigned char *)a2 + 40);
  uint64_t v11 = a2[6];
  char v12 = *((unsigned char *)a2 + 56);
  uint64_t v13 = *(void *)v2;
  uint64_t v14 = *(void *)(v2 + 8);
  switch(*(unsigned char *)(v2 + 16))
  {
    case 1:
      LOBYTE(v50) = *(void *)v2;
      LOBYTE(v36) = v7;
      BOOL v18 = static CoreSynthesizer.Voice.VoiceType.== infix(_:_:)(&v50, (unsigned __int8 *)&v36);
      LOBYTE(v50) = v13;
      LOBYTE(v36) = v12;
      char v16 = v18 ^ static CoreSynthesizer.Voice.VoiceType.== infix(_:_:)(&v50, (unsigned __int8 *)&v36);
      BOOL v17 = !v18;
      goto LABEL_4;
    case 2:
      char v21 = *((unsigned char *)a2 + 100);
      int v22 = *((_DWORD *)a2 + 24);
      char v23 = *((unsigned char *)a2 + 92);
      int v24 = *((_DWORD *)a2 + 22);
      uint64_t v25 = a2[10];
      char v26 = *((unsigned char *)a2 + 41);
      uint64_t v27 = *a2;
      char v28 = *(unsigned char *)(a1 + 100);
      int v29 = *(_DWORD *)(a1 + 96);
      char v30 = *(unsigned char *)(a1 + 92);
      int v31 = *(_DWORD *)(a1 + 88);
      uint64_t v32 = *(void *)(a1 + 80);
      char v33 = *(unsigned char *)(a1 + 41);
      uint64_t v50 = *(void *)a1;
      long long v51 = *(_OWORD *)(a1 + 8);
      uint64_t v52 = v3;
      uint64_t v53 = v4;
      char v54 = v5;
      char v55 = v33;
      uint64_t v56 = v6;
      char v57 = v7;
      long long v58 = *(_OWORD *)(a1 + 64);
      uint64_t v59 = v32;
      int v60 = v31;
      char v61 = v30;
      int v62 = v29;
      char v63 = v28;
      uint64_t v36 = v27;
      long long v37 = *(_OWORD *)(a2 + 1);
      uint64_t v38 = v8;
      uint64_t v39 = v9;
      char v40 = v10;
      char v41 = v26;
      uint64_t v42 = v11;
      char v43 = v12;
      long long v44 = *((_OWORD *)a2 + 4);
      uint64_t v45 = v25;
      int v46 = v24;
      char v47 = v23;
      int v48 = v22;
      char v49 = v21;
      swift_retain();
      uint64_t v20 = ((uint64_t (*)(uint64_t *, uint64_t *))v13)(&v50, &v36);
      sub_1A67AF1FC(v13, v14, 2);
      break;
    case 3:
      if (v13 | v14)
      {
        uint64_t v50 = *(void *)(a1 + 24);
        *(void *)&long long v51 = v4;
        uint64_t v36 = v8;
        *(void *)&long long v37 = v9;
        sub_1A6748030();
        uint64_t v20 = sub_1A6892AB0();
      }
      else
      {
        sub_1A67AF214();
        sub_1A6892290();
        sub_1A6892290();
        if (v50 == v36)
        {
          uint64_t v20 = 0;
        }
        else
        {
          uint64_t v34 = CoreSynthesizer.Voice.Quality.rawValue.getter();
          LOBYTE(v50) = v10;
          if (CoreSynthesizer.Voice.Quality.rawValue.getter() < v34) {
            uint64_t v20 = -1;
          }
          else {
            uint64_t v20 = 1;
          }
        }
      }
      break;
    default:
      sub_1A674CEE4();
      char v15 = sub_1A6892B10();
      uint64_t v50 = v13;
      uint64_t v36 = v11;
      char v16 = v15 ^ sub_1A6892B10();
      BOOL v17 = (v15 & 1) == 0;
LABEL_4:
      uint64_t v19 = -1;
      if (v17) {
        uint64_t v19 = 1;
      }
      if (v16) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 0;
      }
      break;
  }
  return v20;
}

uint64_t sub_1A67A9950(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = *v2;
  type metadata accessor for VoiceResolver();
  sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  uint64_t v5 = sub_1A68923E0();
  v3[12] = v5;
  v3[13] = v4;
  return MEMORY[0x1F4188298](sub_1A67A9A34, v5, v4);
}

uint64_t sub_1A67A9A34()
{
  if ((Locale.LanguageCode.isMacroLanguage.getter() & 1) == 0)
  {
LABEL_12:
    *(void *)(v0 + 176) = 0;
    uint64_t v32 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 80) + 192) + **(int **)(**(void **)(v0 + 80) + 192));
    char v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v26;
    *char v26 = v0;
    v26[1] = sub_1A67AA270;
    BOOL v17 = v32;
    return v17();
  }
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v3 = sub_1A6891A40();
  *(void *)(v0 + 112) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  sub_1A673E63C(v1 + 3, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
  swift_retain();
  uint64_t v9 = sub_1A67B4D20(v8, v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v10 = swift_task_alloc();
  *(void *)(v10 + 16) = v2;
  uint64_t v11 = sub_1A67AB2F0((uint64_t (*)(char *))sub_1A67B4F94, v10, v9);
  swift_task_dealloc();
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = v12;
  if (*(void *)(v11 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v12, v11 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v14(v13, 0, 1, v3);
  }
  else
  {
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v14(v12, 1, 1, v3);
  }
  uint64_t v15 = v5;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
  {
    uint64_t v16 = *(void *)(v0 + 64);
    sub_1A6750210(v13, &qword_1EB67A238);
    swift_task_dealloc();
    swift_task_dealloc();
    v14(v16, 1, 1, v3);
    BOOL v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v13, v3);
  swift_task_dealloc();
  uint64_t v19 = sub_1A68918D0();
  *(void *)(v0 + 128) = v19;
  uint64_t v30 = v19;
  uint64_t v31 = *(void *)(v19 - 8);
  *(void *)(v0 + 136) = v31;
  uint64_t v29 = swift_task_alloc();
  *(void *)(v0 + 144) = v29;
  uint64_t v20 = swift_task_alloc();
  Locale.withTTSLanguageDisambiguation(overrides:)(0, v20);
  uint64_t v21 = sub_1A6891A20();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v33 = v15;
  uint64_t v23 = swift_task_alloc();
  sub_1A6891A30();
  int v24 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 152) = v24;
  *(void *)(v0 + 160) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v24(v20, v3);
  sub_1A6741AD0(&qword_1EB67A210);
  uint64_t v25 = swift_task_alloc();
  sub_1A68919F0();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v25, 1, v30) == 1)
  {
    v24(v33, v3);
    sub_1A6750210(v25, &qword_1EB67A210);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    goto LABEL_12;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v29, v25, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1A67AA0A8;
  uint64_t v28 = *(void *)(v0 + 64);
  return sub_1A67A9950(v28, v29);
}

uint64_t sub_1A67AA0A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return MEMORY[0x1F4188298](sub_1A67AA1C8, v3, v2);
}

uint64_t sub_1A67AA1C8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[19];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[14];
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A67AA270(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  return MEMORY[0x1F4188298](sub_1A67AA398, v4, v3);
}

uint64_t sub_1A67AA398()
{
  uint64_t v28 = v0;
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v1 = swift_task_alloc();
  v0[25] = v1;
  uint64_t v2 = sub_1A6891A40();
  v0[26] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[27] = v3;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[28] = v4;
  v0[29] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  uint64_t v5 = *sub_1A675B5E8();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A6891890();
  if (*(void *)(v5 + 16) && (sub_1A673F7AC(v6, v7), (v8 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_task_alloc();
    sub_1A6891900();
    v4(v9, 0, 1, v2);
    sub_1A67B42F4(v9, v1);
    uint64_t v10 = swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_bridgeObjectRelease();
  }
  uint64_t v11 = v0[24];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[9];
  uint64_t v14 = Locale.LanguageCode.childLanguages.getter(v10);
  uint64_t v15 = swift_task_alloc();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v14;
  sub_1A67B410C((uint64_t)sub_1A67B0480, v15, v11);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v16 = swift_bridgeObjectRetain();
  BOOL v17 = (void *)sub_1A67AEA8C(v16);
  swift_release();
  uint64_t v27 = v17;
  sub_1A67B0944(&v27, v1);
  if (v12)
  {
    return swift_release();
  }
  else
  {
    uint64_t v19 = (void *)v0[10];
    swift_release();
    uint64_t v20 = v27;
    uint64_t v21 = swift_task_alloc();
    v0[30] = v21;
    v0[5] = sub_1A6741AD0(&qword_1E96C1558);
    v0[6] = sub_1A6766A64(&qword_1E96C1560, &qword_1E96C1558);
    v0[2] = v20;
    uint64_t v22 = v19 + 3;
    uint64_t v23 = v19[6];
    uint64_t v24 = v19[7];
    sub_1A673E63C(v22, v23);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24);
    v0[31] = v25;
    char v26 = (void *)swift_task_alloc();
    v0[32] = v26;
    *char v26 = v0;
    v26[1] = sub_1A67AA718;
    v26[11] = v22;
    v26[12] = v25;
    v26[9] = v21;
    v26[10] = v0 + 2;
    return MEMORY[0x1F4188298](sub_1A67A0514, 0, 0);
  }
}

uint64_t sub_1A67AA718()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 16;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1A6741A24(v2);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 96);
  return MEMORY[0x1F4188298](sub_1A67AA868, v4, v3);
}

uint64_t sub_1A67AA868()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[27];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[25];
    uint64_t v5 = v0[8];
    sub_1A6750210(v1, &qword_1EB67A238);
    swift_task_dealloc();
    sub_1A67B4290(v4, v5, &qword_1EB67A238);
  }
  else
  {
    uint64_t v6 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[28];
    uint64_t v7 = v0[25];
    uint64_t v8 = v0[8];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v1, v2);
    swift_task_dealloc();
    v6(v8, 0, 1, v2);
    sub_1A6750210(v7, &qword_1EB67A238);
  }
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1A67AA99C(uint64_t a1)
{
  uint64_t v2 = Locale.LanguageCode.childLanguages.getter(a1);
  uint64_t v3 = sub_1A6891A20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v66 = v5;
  uint64_t v6 = (char *)&v56 - (((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = (uint64_t *)a1;
  sub_1A6891A30();
  uint64_t v7 = sub_1A6741AD0(&qword_1EB67A210);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v69 = v8;
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A68919F0();
  uint64_t v10 = *(void (**)(char *, uint64_t *))(v4 + 8);
  uint64_t v67 = v4 + 8;
  uint64_t v68 = (uint64_t *)v3;
  int v65 = v10;
  v10(v6, (uint64_t *)v3);
  uint64_t v11 = sub_1A68918D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = *(char **)(v12 + 48);
  uint64_t v71 = (uint64_t *)(v12 + 48);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v70)(v9, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v14 = sub_1A67AB128((uint64_t)v9, v2);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    uint64_t v16 = v15(v9, v11);
    MEMORY[0x1F4188790](v16);
    uint64_t v64 = v17;
    BOOL v18 = *(void (**)(void))(v12 + 16);
    uint64_t v73 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v74 = v11;
    v18();
    uint64_t v19 = sub_1A6891A40();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v20 + 16))(v22, v72, v19);
    if (v14)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      v15(v73, v74);
      char v24 = 1;
    }
    else
    {
      uint64_t v58 = v20;
      uint64_t v59 = v19;
      char v61 = (void (*)(char *, uint64_t))v15;
      uint64_t v62 = v12 + 8;
      uint64_t v72 = &v56;
      int v60 = &v56;
      uint64_t v25 = v69;
      MEMORY[0x1F4188790](v23);
      char v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v27 = v74;
      ((void (*)(char *, char *, uint64_t))v18)(v26, v73, v74);
      uint64_t v56 = v12;
      uint64_t v28 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v27);
      char v63 = &v56;
      MEMORY[0x1F4188790](v28);
      uint64_t v30 = (char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v31 = sub_1A6891A30();
      char v66 = &v56;
      MEMORY[0x1F4188790](v31);
      unint64_t v57 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v32 = (uint64_t)v26;
      sub_1A68919F0();
      v65(v30, v68);
      uint64_t v33 = sub_1A6741AD0(&qword_1EB67A218);
      uint64_t v68 = &v56;
      uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
      uint64_t v36 = (char *)&v56 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v37 = (uint64_t)&v36[*(int *)(v34 + 56)];
      uint64_t v38 = &qword_1EB67A210;
      sub_1A675B090((uint64_t)v26, (uint64_t)v36, &qword_1EB67A210);
      sub_1A675B090((uint64_t)v26, v37, &qword_1EB67A210);
      uint64_t v39 = v70;
      uint64_t v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v70)(v36, 1, v27);
      char v41 = v73;
      if (v40 == 1)
      {
        sub_1A6750210((uint64_t)v26, &qword_1EB67A210);
        sub_1A6750210((uint64_t)v26, &qword_1EB67A210);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v59);
        uint64_t v42 = v74;
        v61(v41, v74);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v39)(v37, 1, v42) == 1)
        {
          char v24 = -1;
        }
        else
        {
          uint64_t v38 = &qword_1EB67A218;
          char v24 = 0;
        }
      }
      else
      {
        uint64_t v67 = (uint64_t)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x1F4188790](v40);
        char v43 = v39;
        long long v44 = (char *)&v56 - v57;
        sub_1A675B090((uint64_t)v36, (uint64_t)&v56 - v57, &qword_1EB67A210);
        uint64_t v45 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v43)(v37, 1, v74);
        if (v45 == 1)
        {
          sub_1A6750210((uint64_t)v26, &qword_1EB67A210);
          sub_1A6750210(v67, &qword_1EB67A210);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v59);
          uint64_t v46 = v74;
          char v47 = v61;
          v61(v41, v74);
          v47(v44, v46);
          uint64_t v38 = &qword_1EB67A218;
          char v24 = 0;
        }
        else
        {
          uint64_t v71 = &v56;
          MEMORY[0x1F4188790](v45);
          char v49 = (char *)&v56 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 32);
          uint64_t v70 = v22;
          uint64_t v51 = v74;
          v50(v49, v37, v74);
          sub_1A67B5178(&qword_1E96C1550, MEMORY[0x1F418BD68]);
          char v24 = sub_1A6891FC0();
          uint64_t v52 = v36;
          uint64_t v53 = v41;
          char v54 = v61;
          v61(v49, v51);
          uint64_t v38 = &qword_1EB67A210;
          sub_1A6750210(v32, &qword_1EB67A210);
          sub_1A6750210(v67, &qword_1EB67A210);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v59);
          char v55 = v53;
          uint64_t v36 = v52;
          v54(v55, v51);
          v54(v44, v51);
        }
      }
      sub_1A6750210((uint64_t)v36, v38);
    }
    return v24 & 1;
  }
  return result;
}

uint64_t sub_1A67AB128(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v4 = sub_1A68918D0(),
        sub_1A67B5178(&qword_1E96C1568, MEMORY[0x1F418BD68]),
        uint64_t v5 = sub_1A6891F10(),
        uint64_t v6 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v7 = v5 & ~v6,
        uint64_t v17 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    uint64_t v16 = a1;
    uint64_t v14 = ~v6;
    uint64_t v8 = *(void **)(v4 - 8);
    uint64_t v15 = (void (*)(char *, unint64_t, uint64_t))v8[2];
    uint64_t v9 = v8[8];
    uint64_t v10 = v8[9];
    uint64_t v11 = (uint64_t (**)(char *, uint64_t))(v8 + 1);
    do
    {
      MEMORY[0x1F4188790](v5);
      v15((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a2 + 48) + v10 * v7, v4);
      sub_1A67B5178(&qword_1E96C1550, MEMORY[0x1F418BD68]);
      char v12 = sub_1A6891FC0();
      uint64_t v5 = (*v11)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      if (v12) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v14;
    }
    while (((*(void *)(v17 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1A67AB2F0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v45 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = sub_1A6891A40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = v7;
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6741AD0(&qword_1EB67A238);
  uint64_t result = MEMORY[0x1F4188790](v9 - 8);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v4;
  if (v4)
  {
    unint64_t v13 = 0;
    uint64_t v36 = v6 + 48;
    char v43 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v37 = v6 + 56;
    uint64_t v38 = v6 + 16;
    unint64_t v29 = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v30 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v6;
    uint64_t v34 = v3;
    while (v13 < *(void *)(v3 + 16))
    {
      unint64_t v41 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v18 = *(void *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v12, v3 + v41 + v18 * v13, v5);
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v32(v12, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1) {
        goto LABEL_17;
      }
      uint64_t v19 = *v43;
      uint64_t v20 = v5;
      (*v43)(v8, v12, v5);
      uint64_t v21 = v44;
      uint64_t v22 = v39(v8);
      if (v21)
      {
        (*v30)(v8, v5);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      uint64_t v44 = 0;
      if (v22)
      {
        uint64_t v31 = &v29;
        MEMORY[0x1F4188790](v22);
        char v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
        v19(v24, v8, v20);
        uint64_t v25 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A675FF34(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v45;
        }
        unint64_t v27 = *(void *)(v25 + 16);
        unint64_t v26 = *(void *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1A675FF34(v26 > 1, v27 + 1, 1);
          uint64_t v25 = v45;
        }
        *(void *)(v25 + 16) = v27 + 1;
        uint64_t v28 = v24;
        uint64_t v5 = v20;
        uint64_t v14 = ((uint64_t (*)(unint64_t, char *, uint64_t))v19)(v25 + v41 + v27 * v18, v28, v20);
        uint64_t v45 = v25;
      }
      else
      {
        uint64_t v14 = ((uint64_t (*)(char *, uint64_t))*v30)(v8, v5);
      }
      ++v13;
      MEMORY[0x1F4188790](v14);
      uint64_t v8 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v16 = sub_1A6741AD0(&qword_1EB67A238);
      uint64_t result = MEMORY[0x1F4188790](v16 - 8);
      char v12 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v3 = v34;
      uint64_t v6 = v33;
      if (v35 == v13)
      {
        v32(v12, 1, 1, v5);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1A6750210((uint64_t)v12, &qword_1EB67A238);
    return v45;
  }
  return result;
}

uint64_t sub_1A67AB764(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v5 = sub_1A6891A20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v49 = v7;
  uint64_t v8 = (char *)v45 - (((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v54 = a1;
  sub_1A6891A30();
  uint64_t v9 = sub_1A6741AD0(&qword_1EB67A210);
  uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  char v12 = (char *)v45 - v11;
  sub_1A68919F0();
  unint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v50 = v6 + 8;
  uint64_t v51 = v5;
  uint64_t v48 = v13;
  uint64_t v14 = ((uint64_t (*)(char *, uint64_t))v13)(v8, v5);
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = (char *)v45 - v11;
  uint64_t v16 = sub_1A68918D0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v45 - v11, a2, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))((char *)v45 - v11, 0, 1, v16);
  uint64_t v18 = sub_1A6741AD0(&qword_1EB67A218);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_1A675B090((uint64_t)v45 - v11, (uint64_t)v21, &qword_1EB67A210);
  sub_1A675B090((uint64_t)v45 - v11, v22, &qword_1EB67A210);
  uint64_t v52 = v17;
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v24 = v23(v21, 1, v16);
  uint64_t v53 = v10;
  if (v24 == 1)
  {
    sub_1A6750210((uint64_t)v45 - v11, &qword_1EB67A210);
    sub_1A6750210((uint64_t)v45 - v11, &qword_1EB67A210);
    int v25 = v23((char *)v22, 1, v16);
    if (v25 == 1) {
      unint64_t v26 = &qword_1EB67A210;
    }
    else {
      unint64_t v26 = &qword_1EB67A218;
    }
    if (v25 == 1) {
      char v27 = -1;
    }
    else {
      char v27 = 0;
    }
  }
  else
  {
    v45[2] = v45;
    MEMORY[0x1F4188790](v24);
    uint64_t v28 = (char *)v45 - v11;
    sub_1A675B090((uint64_t)v21, (uint64_t)v45 - v11, &qword_1EB67A210);
    uint64_t v46 = v23;
    uint64_t v29 = v23((char *)v22, 1, v16);
    if (v29 == 1)
    {
      sub_1A6750210((uint64_t)v45 - v11, &qword_1EB67A210);
      sub_1A6750210((uint64_t)v45 - v11, &qword_1EB67A210);
      (*(void (**)(char *, uint64_t))(v52 + 8))((char *)v45 - v11, v16);
      unint64_t v26 = &qword_1EB67A218;
      char v27 = 0;
    }
    else
    {
      v45[1] = v45;
      uint64_t v30 = v52;
      MEMORY[0x1F4188790](v29);
      uint64_t v32 = (char *)v45 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v32, v22, v16);
      sub_1A67B5178(&qword_1E96C1550, MEMORY[0x1F418BD68]);
      char v27 = sub_1A6891FC0();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v30 + 8);
      v33(v32, v16);
      unint64_t v26 = &qword_1EB67A210;
      sub_1A6750210((uint64_t)v15, &qword_1EB67A210);
      sub_1A6750210((uint64_t)v12, &qword_1EB67A210);
      v33(v28, v16);
    }
    uint64_t v23 = v46;
  }
  sub_1A6750210((uint64_t)v21, v26);
  uint64_t v34 = sub_1A6891A40();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v37 = (char *)v45 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = (*(uint64_t (**)(char *, void *, uint64_t))(v35 + 16))(v37, v54, v34);
  uint64_t v39 = v53;
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    char v40 = 1;
    return v40 & 1;
  }
  char v54 = v45;
  MEMORY[0x1F4188790](v38);
  uint64_t v42 = (char *)v45 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1A6891A30();
  char v49 = v45;
  MEMORY[0x1F4188790](v43);
  sub_1A68919F0();
  v48(v42, v51);
  uint64_t result = v23((char *)v45 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v16);
  if (result != 1)
  {
    char v40 = sub_1A67AB128((uint64_t)v45 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), v47);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    (*(void (**)(char *, uint64_t))(v52 + 8))((char *)v45 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
    return v40 & 1;
  }
  __break(1u);
  return result;
}

BOOL sub_1A67ABDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A6891860();
  uint64_t v8 = v7;
  uint64_t v9 = sub_1A6891A40();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v12 = v11(a3, 1, v9);
  if (v12)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v35[1] = a1;
    v35[2] = a2;
    v35[3] = v35;
    MEMORY[0x1F4188790](v12);
    uint64_t v22 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v22, a3, v9);
    uint64_t v23 = sub_1A6891860();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    if (v6 == v23 && v8 == v25)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v27 = sub_1A6893120();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      return 1;
    }
  }
  uint64_t v13 = sub_1A6891860();
  uint64_t v15 = v14;
  uint64_t v16 = v11(a3, 1, v9);
  if (v16)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v35[6] = sub_1A6891860();
    v35[7] = v17;
    v35[4] = sub_1A6891860();
    v35[5] = v18;
    sub_1A6748030();
    uint64_t v19 = sub_1A6892A80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19 == -1;
  }
  MEMORY[0x1F4188790](v16);
  uint64_t v29 = (char *)v35 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v29, a3, v9);
  uint64_t v30 = sub_1A6891860();
  uint64_t v32 = v31;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
  if (v13 == v30 && v15 == v32)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  else
  {
    char v34 = sub_1A6893120();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v34 & 1) == 0) {
      goto LABEL_5;
    }
  }
  return result;
}

BOOL sub_1A67AC0E4()
{
  uint64_t v0 = sub_1A6741AD0(&qword_1EB67A208);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6891880();
  uint64_t v3 = sub_1A6891870();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1;
  sub_1A6750210((uint64_t)v2, &qword_1EB67A208);
  return v4;
}

uint64_t sub_1A67AC1C0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A67AC578(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A67AC578(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A67AC578((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1A674CF38(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A67AC2E8()
{
  uint64_t v0 = type metadata accessor for VoiceResolver();
  uint64_t v1 = sub_1A67B5750(&qword_1E96C16B0, (void (*)(uint64_t))type metadata accessor for VoiceResolver);

  return TTSActor.unownedExecutor.getter(v0, v1);
}

unint64_t sub_1A67AC35C(uint64_t a1)
{
  sub_1A6891A40();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1F418BE30];
  sub_1A67B5178((unint64_t *)&qword_1EB67A220, MEMORY[0x1F418BE30]);
  uint64_t v3 = sub_1A6891F10();
  return sub_1A67AC400(a1, v3, MEMORY[0x1F418BE38], &qword_1EB67A230, v2, MEMORY[0x1F418BE58]);
}

unint64_t sub_1A67AC400(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  uint64_t v7 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v8 = a2 & ~v7;
  uint64_t v20 = v6 + 64;
  uint64_t v21 = a1;
  if ((*(void *)(v6 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v19 = ~v7;
    uint64_t v9 = a3(0);
    uint64_t v10 = v9;
    unint64_t v11 = *(void **)(v9 - 8);
    uint64_t v12 = (void (*)(char *, unint64_t, uint64_t))v11[2];
    uint64_t v14 = v11[8];
    uint64_t v13 = v11[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v11 + 1);
    do
    {
      MEMORY[0x1F4188790](v9);
      v12((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v22 + 48) + v13 * v8, v10);
      sub_1A67B5178(v23, v24);
      char v16 = sub_1A6891FC0();
      uint64_t v9 = (*v15)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
      if (v16) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v19;
    }
    while (((*(void *)(v20 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

char *sub_1A67AC578(char *a1, int64_t a2, char a3)
{
  BOOL result = sub_1A67AC78C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A67AC598(char *a1, int64_t a2, char a3)
{
  BOOL result = sub_1A67AC894(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1A67AC5B8(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1EB67A378);
  uint64_t v10 = *(void *)(sub_1A6891A40() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  BOOL result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_1A6891A40() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_1A67AC78C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C1728);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A67AC894(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1EB67A380);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_1A67AC9B0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C1578);
  int v68 = a2;
  uint64_t v85 = sub_1A6892ED0();
  if (*(void *)(v5 + 16))
  {
    char v63 = v2;
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v7 = *(void *)(v5 + 64);
    int v65 = (void *)(v5 + 64);
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v7;
    int64_t v64 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = v85 + 64;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    uint64_t v67 = v5;
    while (1)
    {
      if (v9)
      {
        uint64_t v81 = (v9 - 1) & v9;
        int64_t v82 = v12;
        unint64_t v19 = __clz(__rbit64(v9)) | (v12 << 6);
      }
      else
      {
        int64_t v20 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v20 >= v64) {
          goto LABEL_34;
        }
        unint64_t v21 = v65[v20];
        int64_t v22 = v12 + 1;
        if (!v21)
        {
          int64_t v22 = v12 + 2;
          if (v12 + 2 >= v64) {
            goto LABEL_34;
          }
          unint64_t v21 = v65[v22];
          if (!v21)
          {
            uint64_t v23 = v12 + 3;
            if (v12 + 3 >= v64)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v63;
              if (v68)
              {
                uint64_t v61 = 1 << *(unsigned char *)(v5 + 32);
                if (v61 >= 64) {
                  bzero(v65, ((unint64_t)(v61 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v65 = -1 << v61;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v65[v23];
            if (!v21)
            {
              while (1)
              {
                int64_t v22 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v22 >= v64) {
                  goto LABEL_34;
                }
                unint64_t v21 = v65[v22];
                ++v23;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v22 = v12 + 3;
          }
        }
LABEL_21:
        uint64_t v81 = (v21 - 1) & v21;
        int64_t v82 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      uint64_t v24 = sub_1A6891A40();
      uint64_t v25 = *(void *)(v24 - 8);
      MEMORY[0x1F4188790](v24);
      uint64_t v28 = v27;
      uint64_t v29 = *(void *)(v5 + 48);
      uint64_t v83 = *(void *)(v28 + 72);
      uint64_t v84 = v30;
      uint64_t v31 = v29 + v83 * v19;
      uint64_t v32 = 104 * v19;
      unint64_t v86 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v68)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))((char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v24);
        uint64_t v33 = *(void *)(v5 + 56) + v32;
        uint64_t v34 = *(void *)v33;
        uint64_t v79 = *(void *)(v33 + 8);
        uint64_t v80 = v34;
        uint64_t v35 = *(void *)(v33 + 16);
        uint64_t v77 = *(void *)(v33 + 24);
        uint64_t v78 = v35;
        uint64_t v36 = *(void *)(v33 + 32);
        int v37 = *(unsigned __int8 *)(v33 + 40);
        int v72 = *(unsigned __int8 *)(v33 + 41);
        int v73 = v37;
        uint64_t v75 = *(void *)(v33 + 48);
        uint64_t v76 = v36;
        int v74 = *(unsigned __int8 *)(v33 + 56);
        uint64_t v38 = *(void *)(v33 + 72);
        uint64_t v71 = *(void *)(v33 + 64);
        id v39 = *(id *)(v33 + 80);
        int v40 = *(_DWORD *)(v33 + 88);
        char v41 = *(unsigned char *)(v33 + 92);
        int v42 = *(_DWORD *)(v33 + 96);
        int v69 = *(unsigned __int8 *)(v33 + 100);
        int v70 = v42;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v24);
        uint64_t v43 = *(void *)(v5 + 56) + v32;
        uint64_t v44 = *(void *)(v43 + 8);
        uint64_t v80 = *(void *)v43;
        uint64_t v45 = *(void *)(v43 + 16);
        uint64_t v77 = *(void *)(v43 + 24);
        uint64_t v46 = *(void *)(v43 + 32);
        uint64_t v66 = v25;
        int v47 = *(unsigned __int8 *)(v43 + 40);
        int v72 = *(unsigned __int8 *)(v43 + 41);
        int v73 = v47;
        uint64_t v75 = *(void *)(v43 + 48);
        int v74 = *(unsigned __int8 *)(v43 + 56);
        uint64_t v48 = *(void *)(v43 + 64);
        uint64_t v49 = *(void *)(v43 + 72);
        uint64_t v50 = *(void **)(v43 + 80);
        int v51 = *(_DWORD *)(v43 + 88);
        char v41 = *(unsigned char *)(v43 + 92);
        int v52 = *(_DWORD *)(v43 + 96);
        int v69 = *(unsigned __int8 *)(v43 + 100);
        int v70 = v52;
        uint64_t v79 = v44;
        swift_bridgeObjectRetain();
        uint64_t v78 = v45;
        swift_bridgeObjectRetain();
        uint64_t v76 = v46;
        uint64_t v25 = v66;
        swift_bridgeObjectRetain();
        uint64_t v71 = v48;
        swift_bridgeObjectRetain();
        uint64_t v38 = v49;
        int v40 = v51;
        swift_bridgeObjectRetain();
        id v39 = v50;
      }
      uint64_t v53 = v85;
      sub_1A67B5178((unint64_t *)&qword_1EB67A220, MEMORY[0x1F418BE30]);
      uint64_t result = sub_1A6891F10();
      uint64_t v54 = -1 << *(unsigned char *)(v53 + 32);
      unint64_t v55 = result & ~v54;
      unint64_t v56 = v55 >> 6;
      if (((-1 << v55) & ~*(void *)(v10 + 8 * (v55 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v55) & ~*(void *)(v10 + 8 * (v55 >> 6)))) | v55 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v14 = v86;
      }
      else
      {
        char v57 = 0;
        unint64_t v58 = (unint64_t)(63 - v54) >> 6;
        uint64_t v14 = v86;
        do
        {
          if (++v56 == v58 && (v57 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v59 = v56 == v58;
          if (v56 == v58) {
            unint64_t v56 = 0;
          }
          v57 |= v59;
          uint64_t v60 = *(void *)(v10 + 8 * v56);
        }
        while (v60 == -1);
        unint64_t v13 = __clz(__rbit64(~v60)) + (v56 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v15 = v85;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v25 + 32))(*(void *)(v85 + 48) + v83 * v13, v14, v24);
      uint64_t v16 = *(void *)(v15 + 56) + 104 * v13;
      uint64_t v17 = v79;
      *(void *)uint64_t v16 = v80;
      *(void *)(v16 + 8) = v17;
      uint64_t v18 = v77;
      *(void *)(v16 + 16) = v78;
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = v76;
      *(unsigned char *)(v16 + 40) = v73;
      *(unsigned char *)(v16 + 41) = v72;
      *(void *)(v16 + 48) = v75;
      *(unsigned char *)(v16 + 56) = v74;
      *(void *)(v16 + 64) = v71;
      *(void *)(v16 + 72) = v38;
      *(void *)(v16 + 80) = v39;
      *(_DWORD *)(v16 + 88) = v40;
      *(unsigned char *)(v16 + 92) = v41;
      *(_DWORD *)(v16 + 96) = v70;
      *(unsigned char *)(v16 + 100) = v69;
      ++*(void *)(v15 + 16);
      uint64_t v5 = v67;
      unint64_t v9 = v81;
      int64_t v12 = v82;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v85;
  return result;
}

uint64_t sub_1A67ACF38(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_1A67AD0B0((uint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    a3 = sub_1A67AD0B0((uint64_t)v10, v7, v5);
    MEMORY[0x1AD0C1C50](v10, -1, -1);
  }
  return a3;
}

uint64_t sub_1A67AD0B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = 0;
  unint64_t v19 = (unint64_t *)result;
  int64_t v3 = 0;
  uint64_t v6 = *(void *)(a3 + 64);
  uint64_t v4 = a3 + 64;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v4 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  uint64_t v21 = v4;
  int64_t v22 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    uint64_t v25 = (v9 - 1) & v9;
    int64_t v26 = v3;
    unint64_t v10 = __clz(__rbit64(v9)) | (v3 << 6);
LABEL_18:
    unint64_t v23 = v10;
    uint64_t v15 = *(void **)(*(void *)(a3 + 56) + 104 * v10 + 80);
    sub_1A674CEE4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v15;
    if (sub_1A6892B10())
    {
      sub_1A67B83BC();
      sub_1A6892290();
      sub_1A67B8410();
      sub_1A68932E0();
      sub_1A6892B30();
      sub_1A6892B80();
      sub_1A6784078();
      char v17 = sub_1A6891FC0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v9 = v25;
      int64_t v3 = v26;
      if (v17)
      {
        *(unint64_t *)((char *)v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
        BOOL v11 = __OFADD__(v20++, 1);
        if (v11) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v9 = v25;
      int64_t v3 = v26;
    }
  }
  BOOL v11 = __OFADD__(v3, 1);
  int64_t v12 = v3 + 1;
  if (v11)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v12 >= v22) {
    return sub_1A67AD40C(v19, a2, v20, a3);
  }
  unint64_t v13 = *(void *)(v21 + 8 * v12);
  if (v13)
  {
LABEL_17:
    uint64_t v25 = (v13 - 1) & v13;
    int64_t v26 = v12;
    unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v12 + 1;
  if (v12 + 1 >= v22) {
    return sub_1A67AD40C(v19, a2, v20, a3);
  }
  unint64_t v13 = *(void *)(v21 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 2;
  if (v12 + 2 >= v22) {
    return sub_1A67AD40C(v19, a2, v20, a3);
  }
  unint64_t v13 = *(void *)(v21 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 3;
  if (v12 + 3 >= v22) {
    return sub_1A67AD40C(v19, a2, v20, a3);
  }
  unint64_t v13 = *(void *)(v21 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v12 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v22) {
      return sub_1A67AD40C(v19, a2, v20, a3);
    }
    unint64_t v13 = *(void *)(v21 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A67AD40C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1A6741AD0((uint64_t *)&unk_1EB67A360);
  uint64_t result = sub_1A6892EF0();
  uint64_t v7 = result;
  if (a2 < 1) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = *a1;
  }
  uint64_t v9 = 0;
  uint64_t v10 = result + 64;
  uint64_t v41 = v4;
  while (1)
  {
    uint64_t v55 = v5;
    if (v8)
    {
      uint64_t v42 = (v8 - 1) & v8;
      uint64_t v43 = v9;
      unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      uint64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_40;
      }
      if (v12 >= a2) {
        return v7;
      }
      unint64_t v13 = a1[v12];
      uint64_t v14 = v9 + 1;
      if (!v13)
      {
        uint64_t v14 = v9 + 2;
        if (v9 + 2 >= a2) {
          return v7;
        }
        unint64_t v13 = a1[v14];
        if (!v13)
        {
          uint64_t v14 = v9 + 3;
          if (v9 + 3 >= a2) {
            return v7;
          }
          unint64_t v13 = a1[v14];
          if (!v13)
          {
            uint64_t v15 = v9 + 4;
            if (v9 + 4 >= a2) {
              return v7;
            }
            unint64_t v13 = a1[v15];
            if (!v13)
            {
              while (1)
              {
                uint64_t v14 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= a2) {
                  return v7;
                }
                unint64_t v13 = a1[v14];
                ++v15;
                if (v13) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v9 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v42 = (v13 - 1) & v13;
      uint64_t v43 = v14;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    id v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v11);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = *(void *)(v4 + 56) + 104 * v11;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v44 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v53 = *(void *)(v19 + 24);
    uint64_t v22 = *(void *)(v19 + 32);
    char v51 = *(unsigned char *)(v19 + 41);
    char v52 = *(unsigned char *)(v19 + 40);
    uint64_t v50 = *(void *)(v19 + 48);
    uint64_t v24 = *(void *)(v19 + 64);
    uint64_t v23 = *(void *)(v19 + 72);
    uint64_t v25 = *(void **)(v19 + 80);
    int v48 = *(_DWORD *)(v19 + 88);
    char v49 = *(unsigned char *)(v19 + 56);
    int v46 = *(_DWORD *)(v19 + 96);
    char v47 = *(unsigned char *)(v19 + 92);
    char v45 = *(unsigned char *)(v19 + 100);
    sub_1A6893200();
    swift_bridgeObjectRetain();
    uint64_t v54 = v20;
    uint64_t v26 = v21;
    uint64_t v27 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v28 = v25;
    sub_1A68920F0();
    uint64_t result = sub_1A6893250();
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v10 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v10 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v35 = v31 == v34;
        if (v31 == v34) {
          unint64_t v31 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v10 + 8 * v31);
      }
      while (v36 == -1);
      unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(void *)(v10 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    int v37 = (void *)(*(void *)(v7 + 48) + 16 * v32);
    *int v37 = v27;
    v37[1] = v18;
    uint64_t v38 = *(void *)(v7 + 56) + 104 * v32;
    *(void *)uint64_t v38 = v44;
    *(void *)(v38 + 8) = v54;
    *(void *)(v38 + 16) = v26;
    *(void *)(v38 + 24) = v53;
    *(void *)(v38 + 32) = v22;
    *(unsigned char *)(v38 + 40) = v52;
    *(unsigned char *)(v38 + 41) = v51;
    *(void *)(v38 + 48) = v50;
    *(unsigned char *)(v38 + 56) = v49;
    *(void *)(v38 + 64) = v24;
    *(void *)(v38 + 72) = v23;
    *(void *)(v38 + 80) = v28;
    *(_DWORD *)(v38 + 88) = v48;
    *(unsigned char *)(v38 + 92) = v47;
    *(_DWORD *)(v38 + 96) = v46;
    *(unsigned char *)(v38 + 100) = v45;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v55 - 1;
    if (__OFSUB__(v55, 1)) {
      break;
    }
    uint64_t v4 = v41;
    unint64_t v8 = v42;
    uint64_t v9 = v43;
    if (v55 == 1) {
      return v7;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A67AD7D8(uint64_t a1, uint64_t a2)
{
  long long v51 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)char v52 = *(_OWORD *)(a2 + 80);
  *(void *)&v52[13] = *(void *)(a2 + 93);
  long long v49 = *(_OWORD *)(a2 + 32);
  long long v50 = *(_OWORD *)(a2 + 48);
  long long v47 = *(_OWORD *)a2;
  long long v48 = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *v2;
  sub_1A6740538();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A6891F10();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v45 = a1;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    sub_1A67419D0();
    while (1)
    {
      uint64_t v10 = *(void *)(v5 + 48) + 104 * v8;
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *(void *)(v10 + 24);
      uint64_t v13 = *(void *)(v10 + 32);
      __int16 v14 = *(_WORD *)(v10 + 40);
      uint64_t v15 = *(void *)(v10 + 48);
      char v16 = *(unsigned char *)(v10 + 56);
      uint64_t v17 = *(void *)(v10 + 80);
      int v18 = *(_DWORD *)(v10 + 88);
      char v19 = *(unsigned char *)(v10 + 92);
      int v20 = *(_DWORD *)(v10 + 96);
      char v21 = *(unsigned char *)(v10 + 100);
      long long v22 = *(_OWORD *)(v10 + 64);
      *(_OWORD *)&v53[8] = *(_OWORD *)(v10 + 8);
      *(void *)uint64_t v53 = v11;
      *(void *)&v53[24] = v12;
      *(void *)&long long v54 = v13;
      WORD4(v54) = v14;
      *(void *)&long long v55 = v15;
      BYTE8(v55) = v16;
      long long v56 = v22;
      *(void *)char v57 = v17;
      *(_DWORD *)&v57[8] = v18;
      v57[12] = v19;
      *(_DWORD *)&v57[16] = v20;
      v57[20] = v21;
      if (sub_1A6891FC0()) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_1A67AEF68(a2);
    uint64_t v29 = *(void *)(*v2 + 48) + 104 * v8;
    uint64_t v31 = *(void *)v29;
    uint64_t v30 = *(void *)(v29 + 8);
    uint64_t v33 = *(void *)(v29 + 16);
    uint64_t v32 = *(void *)(v29 + 24);
    uint64_t v34 = *(void *)(v29 + 32);
    __int16 v35 = *(_WORD *)(v29 + 40);
    uint64_t v36 = *(void *)(v29 + 48);
    char v37 = *(unsigned char *)(v29 + 56);
    uint64_t v38 = *(void *)(v29 + 64);
    uint64_t v39 = *(void *)(v29 + 72);
    int v40 = *(void **)(v29 + 80);
    int v41 = *(_DWORD *)(v29 + 88);
    char v42 = *(unsigned char *)(v29 + 92);
    int v43 = *(_DWORD *)(v29 + 96);
    LOBYTE(v29) = *(unsigned char *)(v29 + 100);
    *(void *)uint64_t v45 = v31;
    *(void *)(v45 + 8) = v30;
    *(void *)(v45 + 16) = v33;
    *(void *)(v45 + 24) = v32;
    *(void *)(v45 + 32) = v34;
    *(_WORD *)(v45 + 40) = v35;
    *(void *)(v45 + 48) = v36;
    *(unsigned char *)(v45 + 56) = v37;
    *(void *)(v45 + 64) = v38;
    *(void *)(v45 + 72) = v39;
    *(void *)(v45 + 80) = v40;
    *(_DWORD *)(v45 + 88) = v41;
    *(unsigned char *)(v45 + 92) = v42;
    *(_DWORD *)(v45 + 96) = v43;
    *(unsigned char *)(v45 + 100) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v44 = v40;
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v55 = v50;
    long long v56 = v51;
    *(_OWORD *)char v57 = *(_OWORD *)v52;
    *(_OWORD *)uint64_t v53 = v47;
    *(void *)&v57[13] = *(void *)&v52[13];
    *(_OWORD *)&v53[16] = v48;
    long long v54 = v49;
    uint64_t v46 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1A67AEA1C((uint64_t)v53);
    sub_1A67ADEA4((uint64_t)v53, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v46;
    swift_bridgeObjectRelease();
    long long v24 = v55;
    long long v25 = *(_OWORD *)v57;
    *(_OWORD *)(a1 + 64) = v56;
    *(_OWORD *)(a1 + 80) = v25;
    long long v26 = *(_OWORD *)&v53[16];
    long long v27 = v54;
    *(_OWORD *)a1 = *(_OWORD *)v53;
    *(_OWORD *)(a1 + 16) = v26;
    *(void *)(a1 + 93) = *(void *)&v57[13];
    uint64_t result = 1;
    *(_OWORD *)(a1 + 32) = v27;
    *(_OWORD *)(a1 + 48) = v24;
  }
  return result;
}

uint64_t sub_1A67ADAB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C2658);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    __int16 v35 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    uint64_t v33 = v1;
    int64_t v34 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v36 = v2;
    while (1)
    {
      if (v7)
      {
        uint64_t v47 = (v7 - 1) & v7;
        int64_t v48 = v10;
        unint64_t v13 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v34) {
          goto LABEL_33;
        }
        unint64_t v15 = v35[v14];
        int64_t v16 = v10 + 1;
        if (!v15)
        {
          int64_t v16 = v10 + 2;
          if (v10 + 2 >= v34) {
            goto LABEL_33;
          }
          unint64_t v15 = v35[v16];
          if (!v15)
          {
            int64_t v16 = v10 + 3;
            if (v10 + 3 >= v34) {
              goto LABEL_33;
            }
            unint64_t v15 = v35[v16];
            if (!v15)
            {
              uint64_t v17 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v2 + 32);
                if (v32 > 63) {
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *__int16 v35 = -1 << v32;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v35[v17];
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v16 >= v34) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v35[v16];
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v10 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v47 = (v15 - 1) & v15;
        int64_t v48 = v16;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 104 * v13;
      uint64_t v20 = *(void *)v18;
      uint64_t v19 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(v18 + 24);
      uint64_t v22 = *(void *)(v18 + 32);
      char v23 = *(unsigned char *)(v18 + 40);
      char v24 = *(unsigned char *)(v18 + 41);
      uint64_t v45 = *(void *)(v18 + 48);
      uint64_t v46 = *(void *)(v18 + 16);
      char v44 = *(unsigned char *)(v18 + 56);
      uint64_t v42 = *(void *)(v18 + 72);
      uint64_t v43 = *(void *)(v18 + 64);
      uint64_t v41 = *(void *)(v18 + 80);
      char v39 = *(unsigned char *)(v18 + 92);
      int v40 = *(_DWORD *)(v18 + 88);
      char v37 = *(unsigned char *)(v18 + 100);
      int v38 = *(_DWORD *)(v18 + 96);
      sub_1A6740538();
      uint64_t result = sub_1A6891F10();
      uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v8 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v26) & ~*(void *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v8 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v11 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 104 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v19;
      *(void *)(v12 + 16) = v46;
      *(void *)(v12 + 24) = v21;
      *(void *)(v12 + 32) = v22;
      *(unsigned char *)(v12 + 40) = v23;
      *(unsigned char *)(v12 + 41) = v24;
      *(void *)(v12 + 48) = v45;
      *(unsigned char *)(v12 + 56) = v44;
      *(void *)(v12 + 64) = v43;
      *(void *)(v12 + 72) = v42;
      *(void *)(v12 + 80) = v41;
      *(_DWORD *)(v12 + 88) = v40;
      *(unsigned char *)(v12 + 92) = v39;
      *(_DWORD *)(v12 + 96) = v38;
      *(unsigned char *)(v12 + 100) = v37;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v36;
      unint64_t v7 = v47;
      int64_t v10 = v48;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A67ADEA4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A67ADAB4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A67AE0C4();
      goto LABEL_12;
    }
    sub_1A67AE328();
  }
  uint64_t v8 = *v3;
  sub_1A6740538();
  uint64_t result = sub_1A6891F10();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_1A67419D0();
    do
    {
      uint64_t result = sub_1A6891FC0();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v12 = *(void *)(v11 + 48) + 104 * a2;
  long long v13 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v5;
  *(_OWORD *)(v12 + 16) = v13;
  *(void *)(v12 + 93) = *(void *)(v5 + 93);
  long long v14 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v12 + 80) = v14;
  long long v15 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v12 + 48) = v15;
  uint64_t v16 = *(void *)(v11 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v11 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1A6893140();
  __break(1u);
  return result;
}

id sub_1A67AE0C4()
{
  sub_1A6741AD0(&qword_1E96C2658);
  int64_t v34 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1A6892BF0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *int64_t v34 = v3;
    return result;
  }
  id result = (id)(v2 + 56);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5) {
    id result = memmove(result, __src, 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v31 >= v11) {
      goto LABEL_28;
    }
    unint64_t v32 = *((void *)__src + v31);
    ++v7;
    if (!v32)
    {
      int64_t v7 = v31 + 1;
      if (v31 + 1 >= v11) {
        goto LABEL_28;
      }
      unint64_t v32 = *((void *)__src + v7);
      if (!v32)
      {
        int64_t v7 = v31 + 2;
        if (v31 + 2 >= v11) {
          goto LABEL_28;
        }
        unint64_t v32 = *((void *)__src + v7);
        if (!v32) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v10 = (v32 - 1) & v32;
    unint64_t v13 = __clz(__rbit64(v32)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 104 * v13;
    uint64_t v15 = *(void *)(v1 + 48) + v14;
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t v19 = *(void *)(v15 + 16);
    uint64_t v18 = *(void *)(v15 + 24);
    uint64_t v20 = *(void *)(v15 + 32);
    __int16 v21 = *(_WORD *)(v15 + 40);
    uint64_t v22 = *(void *)(v15 + 48);
    char v23 = *(unsigned char *)(v15 + 56);
    uint64_t v24 = *(void *)(v15 + 64);
    uint64_t v25 = *(void *)(v15 + 72);
    unint64_t v26 = *(void **)(v15 + 80);
    int v27 = *(_DWORD *)(v15 + 88);
    char v28 = *(unsigned char *)(v15 + 92);
    int v29 = *(_DWORD *)(v15 + 96);
    LOBYTE(v15) = *(unsigned char *)(v15 + 100);
    uint64_t v30 = *(void *)(v3 + 48) + v14;
    *(void *)uint64_t v30 = v17;
    *(void *)(v30 + 8) = v16;
    *(void *)(v30 + 16) = v19;
    *(void *)(v30 + 24) = v18;
    *(void *)(v30 + 32) = v20;
    *(_WORD *)(v30 + 40) = v21;
    *(void *)(v30 + 48) = v22;
    *(unsigned char *)(v30 + 56) = v23;
    *(void *)(v30 + 64) = v24;
    *(void *)(v30 + 72) = v25;
    *(void *)(v30 + 80) = v26;
    *(_DWORD *)(v30 + 88) = v27;
    *(unsigned char *)(v30 + 92) = v28;
    *(_DWORD *)(v30 + 96) = v29;
    *(unsigned char *)(v30 + 100) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v26;
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v11) {
    goto LABEL_28;
  }
  unint64_t v32 = *((void *)__src + v33);
  if (v32)
  {
    int64_t v7 = v33;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v7 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_28;
    }
    unint64_t v32 = *((void *)__src + v7);
    ++v33;
    if (v32) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A67AE328()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C2658);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v32 = v0;
  uint64_t v33 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v34 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v35 = v2;
  while (1)
  {
    if (v7)
    {
      uint64_t v47 = (v7 - 1) & v7;
      int64_t v48 = v10;
      unint64_t v13 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v34) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v33 + 8 * v14);
    int64_t v16 = v10 + 1;
    if (!v15)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v34) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v33 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v10 + 3;
        if (v10 + 3 >= v34) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v33 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v47 = (v15 - 1) & v15;
    int64_t v48 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 104 * v13;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 32);
    uint64_t v22 = *(void *)(v18 + 64);
    uint64_t v23 = *(void *)(v18 + 72);
    uint64_t v24 = *(void **)(v18 + 80);
    uint64_t v45 = *(void *)(v18 + 24);
    uint64_t v46 = *(void *)v18;
    char v43 = *(unsigned char *)(v18 + 41);
    char v44 = *(unsigned char *)(v18 + 40);
    uint64_t v42 = *(void *)(v18 + 48);
    int v40 = *(_DWORD *)(v18 + 88);
    char v41 = *(unsigned char *)(v18 + 56);
    int v38 = *(_DWORD *)(v18 + 96);
    char v39 = *(unsigned char *)(v18 + 92);
    char v37 = *(unsigned char *)(v18 + 100);
    sub_1A6740538();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v36 = v24;
    uint64_t result = sub_1A6891F10();
    uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v8 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v26) & ~*(void *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v8 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v11 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 104 * v11;
    *(void *)uint64_t v12 = v46;
    *(void *)(v12 + 8) = v19;
    *(void *)(v12 + 16) = v20;
    *(void *)(v12 + 24) = v45;
    *(void *)(v12 + 32) = v21;
    *(unsigned char *)(v12 + 40) = v44;
    *(unsigned char *)(v12 + 41) = v43;
    *(void *)(v12 + 48) = v42;
    *(unsigned char *)(v12 + 56) = v41;
    *(void *)(v12 + 64) = v22;
    *(void *)(v12 + 72) = v23;
    uint64_t v2 = v35;
    *(void *)(v12 + 80) = v36;
    *(_DWORD *)(v12 + 88) = v40;
    *(unsigned char *)(v12 + 92) = v39;
    *(_DWORD *)(v12 + 96) = v38;
    *(unsigned char *)(v12 + 100) = v37;
    ++*(void *)(v4 + 16);
    unint64_t v7 = v47;
    int64_t v10 = v48;
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v32;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v33 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v34) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v33 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A67AE710()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  v2[2] = v0;
  return MEMORY[0x1F4188298](sub_1A679EF48, 0, 0);
}

uint64_t sub_1A67AE7B4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A67AE7EC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A67AE7FC(uint64_t a1, void *a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[3] = v7;
  v8[4] = v6;
  v8[1] = sub_1A677B9EC;
  v8[2] = a1;
  void v8[5] = *a2;
  return MEMORY[0x1F4188298](sub_1A679F848, 0, 0);
}

uint64_t sub_1A67AE8C0()
{
  sub_1A6741A24(v0 + 16);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A67AE8F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = v2 + 16;
  uint64_t v7 = *(void *)(v2 + 56);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1A6750954;
  v8[7] = a1;
  v8[8] = v6;
  uint64_t v9 = *a2;
  v8[9] = v7;
  v8[10] = v9;
  return MEMORY[0x1F4188298](sub_1A67A0104, 0, 0);
}

unint64_t sub_1A67AE9C0(unint64_t result)
{
  if (result >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for VoiceResolver()
{
  uint64_t result = qword_1E96C4330;
  if (!qword_1E96C4330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A67AEA1C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

size_t sub_1A67AEA8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1A6741AD0(&qword_1EB67A378);
  uint64_t v3 = *(void *)(sub_1A6891A40() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      void v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1A67B4838(&v10, (char *)v6 + v5, v1, a1);
      sub_1A674CF48();
      if (v9 == (void *)v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_1A67AEBC0(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    int64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  int64_t v16 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

uint64_t sub_1A67AED9C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1A67AC35C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A67B058C();
      goto LABEL_7;
    }
    sub_1A67AC9B0(v13, a3 & 1);
    unint64_t v19 = sub_1A67AC35C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      int64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      uint64_t v21 = sub_1A6891A40();
      MEMORY[0x1F4188790](v21);
      uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t))(v24 + 16))(v23, a2);
      return sub_1A67B04B0(v10, (uint64_t)v23, a1, v16);
    }
LABEL_15:
    sub_1A6891A40();
    uint64_t result = sub_1A6893150();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 104 * v10;

  return sub_1A67844A4(a1, v17);
}

uint64_t sub_1A67AEF68(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A67AEFD8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A67AF020()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1A677B9EC;
  return sub_1A67A377C((uint64_t)v7, v2, v3, v4, v5, v6);
}

uint64_t sub_1A67AF0DC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A67AF12C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  void *v9 = v1;
  v9[1] = sub_1A677B9EC;
  return sub_1A67A3E54((uint64_t)v9, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A67AF1FC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1A67AF214()
{
  unint64_t result = qword_1EB67A278;
  if (!qword_1EB67A278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB67A278);
  }
  return result;
}

uint64_t sub_1A67AF268(uint64_t a1)
{
  uint64_t result = sub_1A67B5750(&qword_1E96C16A8, (void (*)(uint64_t))type metadata accessor for VoiceResolver);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of VoiceSource.voices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VoiceSource.preferredLanguages.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of VoiceSource.disambiguations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of VoiceSource.deviceMemoryLimit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1A67AF310()
{
  return type metadata accessor for VoiceResolver();
}

void sub_1A67AF318()
{
  sub_1A67AFFD8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for VoiceResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VoiceResolver);
}

uint64_t dispatch thunk of VoiceResolver.locales.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of VoiceResolver.systemLocale.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of VoiceResolver.currentSystemLocale()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 184) + **(int **)(*(void *)v1 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A677B9EC;
  return v6(a1);
}

uint64_t dispatch thunk of VoiceResolver.currentLocales()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 192) + **(int **)(*(void *)v0 + 192));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677A564;
  return v4();
}

uint64_t dispatch thunk of VoiceResolver.currentLocaleIdentifiers(completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of VoiceResolver.currentLocaleIdentifiers()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 208) + **(int **)(*(void *)v0 + 208));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9E8;
  return v4();
}

uint64_t dispatch thunk of VoiceResolver.currentSystemLocaleIdentifier()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 216) + **(int **)(*(void *)v0 + 216));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A67AF858;
  return v4();
}

uint64_t sub_1A67AF858(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of VoiceResolver.languageChanged()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of VoiceResolver.__allocating_init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of VoiceResolver.voice(forIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 264)
                                                          + **(int **)(*(void *)v3 + 264));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1A677B9EC;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of VoiceResolver.invalidateResolutionCaches()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of VoiceResolver.voice(forLocale:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 304) + **(int **)(*(void *)v2 + 304));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A677B9EC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of VoiceResolver.voice(forLocaleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 312)
                                                          + **(int **)(*(void *)v3 + 312));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1A677B9EC;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of VoiceResolver.voice(forLocaleIdentifier:completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of VoiceResolver.voice(forIdentifier:preferringLanguage:completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of VoiceResolver.voice(forIdentifier:preferringLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 336)
                                                                            + **(int **)(*(void *)v5 + 336));
  BOOL v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  void *v12 = v6;
  v12[1] = sub_1A677B9EC;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of VoiceResolver.fallback(forVoice:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 344) + **(int **)(*(void *)v2 + 344));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A677B9EC;
  return v8(a1, a2);
}

void sub_1A67AFFD8()
{
  if (!qword_1E96C1700)
  {
    sub_1A6750AC4((uint64_t *)&unk_1E96C1660);
    unint64_t v0 = sub_1A6892560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E96C1700);
    }
  }
}

uint64_t sub_1A67B0038(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for VoiceResolver.VoiceSortKey(uint64_t a1)
{
  return sub_1A67AF1FC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12TextToSpeech13VoiceResolverC12VoiceSortKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A67B0038(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for VoiceResolver.VoiceSortKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A67B0038(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A67AF1FC(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for VoiceResolver.VoiceSortKey(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VoiceResolver.VoiceSortKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A67AF1FC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceResolver.VoiceSortKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceResolver.VoiceSortKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A67B01EC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1A67B0204(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for VoiceResolver.VoiceSortKey()
{
  return &type metadata for VoiceResolver.VoiceSortKey;
}

uint64_t *initializeBufferWithCopyOfBuffer for VoiceResolver.Mode(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for VoiceResolver.Mode(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for VoiceResolver.Mode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for VoiceResolver.Mode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceResolver.Mode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VoiceResolver.Mode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceResolver.Mode()
{
  return &type metadata for VoiceResolver.Mode;
}

void type metadata accessor for ComparisonResult()
{
  if (!qword_1E96C2568)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, &qword_1E96C2568);
    }
  }
}

uint64_t sub_1A67B0480(void *a1)
{
  return sub_1A67AB764(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1A67B04B0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1A6891A40();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v11 = a4[7] + 104 * a1;
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v12;
  *(void *)(v11 + 93) = *(void *)(a3 + 93);
  long long v13 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v11 + 80) = v13;
  long long v14 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v14;
  uint64_t v15 = a4[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a4[2] = v17;
  }
  return result;
}

id sub_1A67B058C()
{
  sub_1A6741AD0(&qword_1E96C1578);
  char v41 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1A6892EC0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v45 = v2;
  if (!v3)
  {
    id result = (id)swift_release();
    uint64_t v39 = v45;
    int v38 = v41;
LABEL_28:
    *int v38 = v39;
    return result;
  }
  uint64_t v4 = v2;
  id result = (id)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  uint64_t v42 = (const void *)(v1 + 64);
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    id result = memmove(result, v42, 8 * v6);
    uint64_t v4 = v45;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v43 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v44 = v1;
  while (1)
  {
    if (v11)
    {
      uint64_t v46 = (v11 - 1) & v11;
      int64_t v47 = v8;
      unint64_t v12 = __clz(__rbit64(v11)) | (v8 << 6);
      uint64_t v13 = v44;
      goto LABEL_12;
    }
    int64_t v34 = v8 + 1;
    uint64_t v13 = v44;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v34 >= v43) {
      goto LABEL_26;
    }
    unint64_t v35 = *((void *)v42 + v34);
    int64_t v36 = v8 + 1;
    if (!v35)
    {
      int64_t v36 = v34 + 1;
      if (v34 + 1 >= v43) {
        goto LABEL_26;
      }
      unint64_t v35 = *((void *)v42 + v36);
      if (!v35) {
        break;
      }
    }
LABEL_25:
    uint64_t v46 = (v35 - 1) & v35;
    int64_t v47 = v36;
    unint64_t v12 = __clz(__rbit64(v35)) + (v36 << 6);
LABEL_12:
    uint64_t v14 = sub_1A6891A40();
    BOOL v59 = &v40;
    uint64_t v15 = *(void *)(v14 - 8);
    MEMORY[0x1F4188790](v14);
    uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v19 = *(void *)(v18 + 72) * v12;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, *(void *)(v13 + 48) + v19, v14);
    uint64_t v20 = *(void *)(v13 + 56);
    uint64_t v21 = 104 * v12;
    uint64_t v22 = (uint64_t *)(v20 + 104 * v12);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    uint64_t v57 = v22[3];
    uint64_t v58 = v23;
    uint64_t v26 = v22[4];
    int v56 = *((unsigned __int16 *)v22 + 20);
    uint64_t v55 = v22[6];
    LODWORD(v23) = *((unsigned __int8 *)v22 + 56);
    uint64_t v27 = v22[8];
    char v28 = (void *)v22[10];
    uint64_t v48 = v22[9];
    long long v49 = v28;
    int v53 = *((_DWORD *)v22 + 22);
    int v54 = v23;
    LODWORD(v23) = *((unsigned __int8 *)v22 + 92);
    int v51 = *((_DWORD *)v22 + 24);
    int v52 = v23;
    int v50 = *((unsigned __int8 *)v22 + 100);
    uint64_t v29 = v45;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(void *)(v45 + 48) + v19, v17, v14);
    uint64_t v30 = *(void *)(v29 + 56) + v21;
    *(void *)uint64_t v30 = v58;
    *(void *)(v30 + 8) = v24;
    uint64_t v31 = v57;
    *(void *)(v30 + 16) = v25;
    *(void *)(v30 + 24) = v31;
    *(void *)(v30 + 32) = v26;
    *(_WORD *)(v30 + 40) = v56;
    *(void *)(v30 + 48) = v55;
    *(unsigned char *)(v30 + 56) = v54;
    uint64_t v33 = v48;
    unint64_t v32 = v49;
    *(void *)(v30 + 64) = v27;
    *(void *)(v30 + 72) = v33;
    *(void *)(v30 + 80) = v32;
    *(_DWORD *)(v30 + 88) = v53;
    *(unsigned char *)(v30 + 92) = v52;
    *(_DWORD *)(v30 + 96) = v51;
    *(unsigned char *)(v30 + 100) = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v32;
    unint64_t v11 = v46;
    int64_t v8 = v47;
  }
  int64_t v37 = v34 + 2;
  if (v37 >= v43)
  {
LABEL_26:
    id result = (id)swift_release();
    int v38 = v41;
    uint64_t v39 = v45;
    goto LABEL_28;
  }
  unint64_t v35 = *((void *)v42 + v37);
  if (v35)
  {
    int64_t v36 = v37;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v36 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v36 >= v43) {
      goto LABEL_26;
    }
    unint64_t v35 = *((void *)v42 + v36);
    ++v37;
    if (v35) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A67B0944(void **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = (void *)sub_1A67B4CF8(v4);
  }
  uint64_t v5 = v4[2];
  uint64_t v6 = *(void *)(sub_1A6891A40() - 8);
  v8[0] = (uint64_t)v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8[1] = v5;
  uint64_t result = sub_1A67B09F8(v8, a2);
  *a1 = v4;
  return result;
}

uint64_t sub_1A67B09F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v204 = a2;
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1A68930D0();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_173;
    }
    if (v4) {
      return sub_1A67B1D04(0, v4, 1, v3, v204);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_172;
  }
  uint64_t v179 = result;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v4 > 1)
  {
    uint64_t v9 = v6 >> 1;
    sub_1A6891A40();
    uint64_t v8 = sub_1A6892340();
    *(void *)(v8 + 16) = v9;
  }
  uint64_t v185 = v2;
  uint64_t result = sub_1A6891A40();
  uint64_t v10 = *(void *)(result - 8);
  unint64_t v11 = (void *)v10;
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v177 = v8;
  unint64_t v182 = v8 + v12;
  v183 = (void *)v10;
  if (v4 <= 0)
  {
    unint64_t v119 = *(void *)(v7 + 16);
    goto LABEL_137;
  }
  uint64_t v13 = result;
  uint64_t v14 = 0;
  uint64_t v192 = v10 + 16;
  v194 = (void (**)(char *, uint64_t))(v10 + 8);
  v195 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v199 = (uint64_t **)(v10 + 32);
  v187 = v3;
  uint64_t v184 = result;
  do
  {
    uint64_t v15 = v14;
    uint64_t v16 = (char *)(v14 + 1);
    uint64_t v181 = v15;
    if ((uint64_t)v16 >= v4)
    {
      uint64_t v63 = (uint64_t)v16;
      goto LABEL_49;
    }
    v193 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v4;
    v202 = &v177;
    uint64_t v17 = *v3;
    uint64_t v18 = v11[8];
    uint64_t v19 = v11[9];
    v200 = (uint64_t *)v16;
    MEMORY[0x1F4188790](result);
    v203 = (char *)((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = (char *)((char *)&v177 - v203);
    uint64_t v22 = *(uint64_t (**)(int64_t))(v21 + 16);
    uint64_t v23 = v22((char *)&v177 - v203);
    v201 = &v177;
    uint64_t v180 = v17;
    uint64_t v210 = v19;
    uint64_t v205 = v18;
    uint64_t v24 = (void (*)(void))v22;
    MEMORY[0x1F4188790](v23);
    uint64_t v25 = (char *)((char *)&v177 - v203);
    ((void (*)(int64_t))v24)((char *)&v177 - v203);
    LODWORD(v191) = sub_1A67ABDB4((uint64_t)v20, (uint64_t)v25, v204);
    if (v185)
    {
      v176 = *v194;
      (*v194)(v25, v13);
      v176(v20, v13);
      swift_bridgeObjectRelease();
      goto LABEL_149;
    }
    uint64_t v26 = *v194;
    (*v194)(v25, v13);
    v197 = v26;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v26)(v20, v13);
    uint64_t v15 = v181;
    uint64_t v4 = (uint64_t)v193;
    if (v181 + 2 >= (uint64_t)v193)
    {
      uint64_t v63 = v181 + 2;
      goto LABEL_35;
    }
    v196 = v24;
    uint64_t v178 = v7;
    uint64_t v190 = v210 * (void)v200;
    uint64_t v27 = v180;
    uint64_t v188 = v210 * (v181 + 2);
    uint64_t v28 = v181 + 2;
    do
    {
      uint64_t v189 = v28;
      v202 = &v177;
      uint64_t v29 = v205;
      MEMORY[0x1F4188790](result);
      unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v31 = v196;
      uint64_t v32 = ((uint64_t (*)(char *))v196)((char *)&v177 - v30);
      v200 = &v177;
      uint64_t v198 = v27;
      MEMORY[0x1F4188790](v32);
      v203 = (char *)&v177 - v30;
      v31();
      v201 = (uint64_t *)((char *)&v177 - v30);
      uint64_t v33 = sub_1A6891860();
      uint64_t v35 = v34;
      int64_t v36 = *v195;
      uint64_t v37 = v204;
      uint64_t v38 = (*v195)(v204, 1, v13);
      if (v38)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = v203;
      }
      else
      {
        v186 = &v177;
        MEMORY[0x1F4188790](v38);
        ((void (*)(char *, uint64_t, uint64_t))v31)((char *)&v177 - v30, v37, v13);
        uint64_t v51 = sub_1A6891860();
        uint64_t v53 = v52;
        v197((char *)&v177 - v30, v13);
        if (v33 == v51 && v35 == v53)
        {
          swift_bridgeObjectRelease_n();
          BOOL v50 = 1;
          uint64_t v4 = (uint64_t)v193;
          uint64_t v46 = (char *)v201;
          uint64_t v39 = v203;
          goto LABEL_29;
        }
        char v59 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = v203;
        if (v59)
        {
          BOOL v50 = 1;
          goto LABEL_27;
        }
      }
      uint64_t v40 = sub_1A6891860();
      uint64_t v42 = v41;
      uint64_t v43 = v204;
      uint64_t v44 = v184;
      uint64_t v45 = v36(v204, 1, v184);
      if (v45)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = (uint64_t)v193;
        uint64_t v46 = (char *)v201;
LABEL_18:
        uint64_t v208 = sub_1A6891860();
        uint64_t v209 = v47;
        uint64_t v206 = sub_1A6891860();
        uint64_t v207 = v48;
        sub_1A6748030();
        uint64_t v49 = sub_1A6892A80();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v50 = v49 == -1;
        goto LABEL_29;
      }
      MEMORY[0x1F4188790](v45);
      uint64_t v55 = (char *)&v177 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
      ((void (*)(char *, uint64_t, uint64_t))v196)(v55, v43, v44);
      uint64_t v56 = sub_1A6891860();
      uint64_t v58 = v57;
      v197(v55, v44);
      if (v40 == v56 && v42 == v58)
      {
        swift_bridgeObjectRelease_n();
        BOOL v50 = 0;
LABEL_27:
        uint64_t v4 = (uint64_t)v193;
        uint64_t v46 = (char *)v201;
        goto LABEL_29;
      }
      char v60 = sub_1A6893120();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v50 = 0;
      uint64_t v4 = (uint64_t)v193;
      uint64_t v46 = (char *)v201;
      if ((v60 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_29:
      uint64_t v61 = v39;
      uint64_t v13 = v184;
      uint64_t v62 = v197;
      v197(v61, v184);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v62)(v46, v13);
      uint64_t v63 = v189;
      if ((v191 ^ v50)) {
        goto LABEL_32;
      }
      uint64_t v28 = v189 + 1;
      uint64_t v27 = v198 + v210;
    }
    while (v4 != v189 + 1);
    uint64_t v63 = v4;
LABEL_32:
    uint64_t v7 = v178;
    uint64_t v3 = v187;
    uint64_t v15 = v181;
LABEL_35:
    unint64_t v11 = v183;
    if (v191)
    {
      uint64_t v64 = v180;
      if (v63 >= v15)
      {
        if (v15 < v63)
        {
          uint64_t v178 = v7;
          uint64_t v65 = 0;
          uint64_t v66 = v210 * (v63 - 1);
          uint64_t v67 = v63 * v210;
          uint64_t v68 = v15;
          uint64_t v69 = v15 * v210;
          uint64_t v189 = v63;
          do
          {
            if (v68 != v63 + v65 - 1)
            {
              if (!v64) {
                goto LABEL_180;
              }
              v203 = (char *)&v177;
              uint64_t v71 = v64 + v66;
              MEMORY[0x1F4188790](result);
              int v73 = (char *)&v177 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
              v202 = *v199;
              ((void (*)(char *, uint64_t, uint64_t))v202)(v73, v64 + v69, v184);
              if (v69 < v66 || v64 + v69 >= (unint64_t)(v64 + v67))
              {
                uint64_t v70 = v184;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v70 = v184;
                if (v69 != v66) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v202)(v71, v73, v70);
              unint64_t v11 = v183;
              uint64_t v63 = v189;
              uint64_t v64 = v180;
            }
            ++v68;
            --v65;
            v66 -= v210;
            v67 -= v210;
            v69 += v210;
          }
          while (v68 < v63 + v65);
          uint64_t v7 = v178;
          uint64_t v3 = v187;
          uint64_t v13 = v184;
          uint64_t v15 = v181;
          uint64_t v4 = (uint64_t)v193;
        }
        goto LABEL_49;
      }
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
      return result;
    }
LABEL_49:
    if (v63 >= v4) {
      goto LABEL_82;
    }
    if (__OFSUB__(v63, v15)) {
      goto LABEL_174;
    }
    if (v63 - v15 >= v179) {
      goto LABEL_82;
    }
    if (__OFADD__(v15, v179)) {
      goto LABEL_175;
    }
    if (v15 + v179 >= v4) {
      uint64_t v74 = v4;
    }
    else {
      uint64_t v74 = v15 + v179;
    }
    if (v74 < v15)
    {
LABEL_176:
      __break(1u);
      goto LABEL_177;
    }
    if (v63 == v74) {
      goto LABEL_82;
    }
    uint64_t v178 = v7;
    uint64_t v76 = v11[8];
    uint64_t v75 = v11[9];
    uint64_t v77 = (void (*)(void))v11[2];
    uint64_t v210 = v75 * (v63 - 1);
    uint64_t v188 = v75;
    uint64_t v205 = v63 * v75;
    uint64_t v190 = (uint64_t)v77;
    uint64_t v191 = v76;
    uint64_t v180 = v74;
    while (2)
    {
      uint64_t v79 = 0;
      uint64_t v80 = v181;
      uint64_t v189 = v63;
      while (2)
      {
        uint64_t v198 = v80;
        v202 = &v177;
        v197 = (void (*)(char *, uint64_t))(v205 + v79);
        MEMORY[0x1F4188790](result);
        unint64_t v81 = (v76 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v82 = ((uint64_t (*)(char *))v77)((char *)&v177 - v81);
        v201 = &v177;
        v196 = (void (*)(void))(v210 + v79);
        MEMORY[0x1F4188790](v82);
        v203 = (char *)&v177 - v81;
        v77();
        uint64_t v83 = v77;
        v200 = (uint64_t *)((char *)&v177 - v81);
        uint64_t v84 = sub_1A6891860();
        uint64_t v86 = v85;
        uint64_t v87 = v204;
        v193 = *v195;
        uint64_t v88 = v193(v204, 1, v13);
        if (v88)
        {
          swift_bridgeObjectRelease();
          uint64_t v89 = v203;
          goto LABEL_67;
        }
        v186 = &v177;
        MEMORY[0x1F4188790](v88);
        uint64_t v95 = v84;
        int v96 = (char *)&v177 - v81;
        ((void (*)(char *, uint64_t, uint64_t))v83)((char *)&v177 - v81, v87, v13);
        uint64_t v97 = sub_1A6891860();
        uint64_t v99 = v98;
        uint64_t v100 = *v194;
        (*v194)(v96, v13);
        if (v95 == v97 && v86 == v99)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v89 = v203;
LABEL_79:
          v100(v89, v13);
          uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v100)(v200, v13);
          uint64_t v3 = v187;
          uint64_t v76 = v191;
          uint64_t v112 = *v187;
          if (!*v187) {
            goto LABEL_178;
          }
LABEL_80:
          uint64_t v114 = v112 + v205 + v79;
          uint64_t v115 = v112 + v210 + v79;
          MEMORY[0x1F4188790](result);
          uint64_t v116 = *v199;
          ((void (*)(char *, uint64_t, uint64_t))*v199)((char *)&v177 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0), v114, v13);
          swift_arrayInitWithTakeFrontToBack();
          uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v116)(v115, (char *)&v177 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
          v79 -= v188;
          uint64_t v80 = v198 + 1;
          uint64_t v78 = v189;
          uint64_t v77 = (void (*)(void))v190;
          if (v189 == v198 + 1) {
            goto LABEL_62;
          }
          continue;
        }
        break;
      }
      char v113 = sub_1A6893120();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v89 = v203;
      if (v113) {
        goto LABEL_79;
      }
LABEL_67:
      uint64_t v90 = sub_1A6891860();
      uint64_t v92 = v91;
      uint64_t v93 = v204;
      uint64_t v94 = v193(v204, 1, v13);
      uint64_t v76 = v191;
      if (v94)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v187;
        goto LABEL_75;
      }
      v203 = (char *)&v177;
      MEMORY[0x1F4188790](v94);
      id v101 = (char *)&v177 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
      ((void (*)(char *, uint64_t, uint64_t))v190)(v101, v93, v13);
      uint64_t v102 = sub_1A6891860();
      uint64_t v104 = v103;
      uint64_t v105 = *v194;
      (*v194)(v101, v13);
      if (v90 != v102 || v92 != v104)
      {
        char v106 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v187;
        uint64_t v76 = v191;
        if (v106) {
          goto LABEL_60;
        }
LABEL_75:
        uint64_t v107 = (char *)v200;
        uint64_t v208 = sub_1A6891860();
        uint64_t v209 = v108;
        uint64_t v206 = sub_1A6891860();
        uint64_t v207 = v109;
        sub_1A6748030();
        uint64_t v110 = sub_1A6892A80();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v111 = *v194;
        (*v194)(v89, v13);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v111)(v107, v13);
        if (v110 != -1) {
          goto LABEL_61;
        }
        uint64_t v112 = *v3;
        if (!*v3) {
          goto LABEL_178;
        }
        goto LABEL_80;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v3 = v187;
      uint64_t v76 = v191;
LABEL_60:
      v105(v89, v13);
      uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v105)(v200, v13);
LABEL_61:
      uint64_t v78 = v189;
      uint64_t v77 = (void (*)(void))v190;
LABEL_62:
      uint64_t v63 = v78 + 1;
      v210 += v188;
      v205 += v188;
      if (v63 != v180) {
        continue;
      }
      break;
    }
    uint64_t v63 = v180;
    uint64_t v7 = v178;
    uint64_t v15 = v181;
LABEL_82:
    if (v63 < v15) {
      goto LABEL_171;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A6779758(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
      uint64_t v7 = result;
    }
    unint64_t v118 = *(void *)(v7 + 16);
    unint64_t v117 = *(void *)(v7 + 24);
    unint64_t v119 = v118 + 1;
    unint64_t v11 = v183;
    if (v118 >= v117 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A6779758((char *)(v117 > 1), v118 + 1, 1, (char *)v7);
      unint64_t v11 = v183;
      uint64_t v7 = result;
    }
    *(void *)(v7 + 16) = v119;
    uint64_t v120 = v7 + 32;
    uint64_t v121 = (uint64_t *)(v7 + 32 + 16 * v118);
    *uint64_t v121 = v181;
    v121[1] = v63;
    uint64_t v189 = v63;
    if (v118)
    {
      while (2)
      {
        unint64_t v122 = v119 - 1;
        if (v119 >= 4)
        {
          unint64_t v127 = v120 + 16 * v119;
          uint64_t v128 = *(void *)(v127 - 64);
          uint64_t v129 = *(void *)(v127 - 56);
          BOOL v133 = __OFSUB__(v129, v128);
          uint64_t v130 = v129 - v128;
          if (v133) {
            goto LABEL_156;
          }
          uint64_t v132 = *(void *)(v127 - 48);
          uint64_t v131 = *(void *)(v127 - 40);
          BOOL v133 = __OFSUB__(v131, v132);
          uint64_t v125 = v131 - v132;
          char v126 = v133;
          if (v133) {
            goto LABEL_157;
          }
          unint64_t v134 = v119 - 2;
          uint64_t v135 = (uint64_t *)(v120 + 16 * (v119 - 2));
          uint64_t v137 = *v135;
          uint64_t v136 = v135[1];
          BOOL v133 = __OFSUB__(v136, v137);
          uint64_t v138 = v136 - v137;
          if (v133) {
            goto LABEL_158;
          }
          BOOL v133 = __OFADD__(v125, v138);
          uint64_t v139 = v125 + v138;
          if (v133) {
            goto LABEL_160;
          }
          if (v139 >= v130)
          {
            v157 = (uint64_t *)(v120 + 16 * v122);
            uint64_t v159 = *v157;
            uint64_t v158 = v157[1];
            BOOL v133 = __OFSUB__(v158, v159);
            uint64_t v160 = v158 - v159;
            if (v133) {
              goto LABEL_166;
            }
            BOOL v150 = v125 < v160;
          }
          else
          {
LABEL_101:
            if (v126) {
              goto LABEL_159;
            }
            unint64_t v134 = v119 - 2;
            uint64_t v140 = (uint64_t *)(v120 + 16 * (v119 - 2));
            uint64_t v142 = *v140;
            uint64_t v141 = v140[1];
            BOOL v143 = __OFSUB__(v141, v142);
            uint64_t v144 = v141 - v142;
            char v145 = v143;
            if (v143) {
              goto LABEL_161;
            }
            v146 = (uint64_t *)(v120 + 16 * v122);
            uint64_t v148 = *v146;
            uint64_t v147 = v146[1];
            BOOL v133 = __OFSUB__(v147, v148);
            uint64_t v149 = v147 - v148;
            if (v133) {
              goto LABEL_163;
            }
            if (__OFADD__(v144, v149)) {
              goto LABEL_165;
            }
            if (v144 + v149 < v125) {
              goto LABEL_113;
            }
            BOOL v150 = v125 < v149;
          }
          if (v150) {
            unint64_t v122 = v134;
          }
        }
        else
        {
          if (v119 == 3)
          {
            uint64_t v124 = *(void *)(v7 + 32);
            uint64_t v123 = *(void *)(v7 + 40);
            BOOL v133 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            char v126 = v133;
            goto LABEL_101;
          }
          uint64_t v151 = *(void *)(v7 + 32);
          uint64_t v152 = *(void *)(v7 + 40);
          BOOL v133 = __OFSUB__(v152, v151);
          uint64_t v144 = v152 - v151;
          char v145 = v133;
LABEL_113:
          if (v145) {
            goto LABEL_162;
          }
          v153 = (uint64_t *)(v120 + 16 * v122);
          uint64_t v155 = *v153;
          uint64_t v154 = v153[1];
          BOOL v133 = __OFSUB__(v154, v155);
          uint64_t v156 = v154 - v155;
          if (v133) {
            goto LABEL_164;
          }
          if (v156 < v144) {
            goto LABEL_130;
          }
        }
        unint64_t v161 = v122 - 1;
        if (v122 - 1 >= v119)
        {
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
          goto LABEL_176;
        }
        if (!*v3) {
          goto LABEL_179;
        }
        uint64_t v162 = v7;
        v163 = (uint64_t *)(v120 + 16 * v161);
        uint64_t v164 = *v163;
        v165 = (void *)(v120 + 16 * v122);
        uint64_t v166 = v165[1];
        uint64_t v167 = v185;
        uint64_t result = sub_1A67B2348(*v3 + v11[9] * *v163, *v3 + v11[9] * *v165, *v3 + v11[9] * v166, v182, v204);
        uint64_t v185 = v167;
        if (v167) {
          goto LABEL_148;
        }
        if (v166 < v164) {
          goto LABEL_153;
        }
        if (v122 > *(void *)(v162 + 16)) {
          goto LABEL_154;
        }
        uint64_t *v163 = v164;
        *(void *)(v120 + 16 * v161 + 8) = v166;
        unint64_t v168 = *(void *)(v162 + 16);
        if (v122 >= v168) {
          goto LABEL_155;
        }
        uint64_t v7 = v162;
        unint64_t v119 = v168 - 1;
        uint64_t result = (uint64_t)memmove((void *)(v120 + 16 * v122), v165 + 2, 16 * (v168 - 1 - v122));
        *(void *)(v162 + 16) = v168 - 1;
        unint64_t v11 = v183;
        uint64_t v13 = v184;
        if (v168 <= 2) {
          goto LABEL_130;
        }
        continue;
      }
    }
    unint64_t v119 = 1;
LABEL_130:
    uint64_t v4 = v3[1];
    uint64_t v14 = v189;
  }
  while (v189 < v4);
LABEL_137:
  if (v119 >= 2)
  {
    uint64_t v169 = *v3;
    do
    {
      unint64_t v170 = v119 - 2;
      if (v119 < 2) {
        goto LABEL_167;
      }
      if (!v169) {
        goto LABEL_181;
      }
      uint64_t v171 = *(void *)(v7 + 32 + 16 * v170);
      uint64_t v172 = *(void *)(v7 + 32 + 16 * (v119 - 1) + 8);
      uint64_t v173 = v185;
      uint64_t result = sub_1A67B2348(v169 + v11[9] * v171, v169 + v11[9] * *(void *)(v7 + 32 + 16 * (v119 - 1)), v169 + v11[9] * v172, v182, v204);
      uint64_t v185 = v173;
      if (v173) {
        break;
      }
      if (v172 < v171) {
        goto LABEL_168;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A6779854(v7);
        uint64_t v7 = result;
      }
      if (v170 >= *(void *)(v7 + 16)) {
        goto LABEL_169;
      }
      v174 = (void *)(v7 + 32 + 16 * v170);
      void *v174 = v171;
      v174[1] = v172;
      unint64_t v175 = *(void *)(v7 + 16);
      if (v119 > v175) {
        goto LABEL_170;
      }
      uint64_t result = (uint64_t)memmove((void *)(v7 + 32 + 16 * (v119 - 1)), (const void *)(v7 + 32 + 16 * v119), 16 * (v175 - v119));
      *(void *)(v7 + 16) = v175 - 1;
      unint64_t v119 = v175 - 1;
      unint64_t v11 = v183;
    }
    while (v175 > 2);
  }
LABEL_148:
  swift_bridgeObjectRelease();
LABEL_149:
  *(void *)(v177 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67B1D04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v62 = a5;
  uint64_t v66 = a4;
  uint64_t v54 = result;
  uint64_t v57 = a3;
  uint64_t v53 = a2;
  if (a3 != a2)
  {
    uint64_t result = sub_1A6891A40();
    uint64_t v5 = result;
    uint64_t v6 = *(void **)(result - 8);
    uint64_t v7 = (void (*)(void))v6[2];
    uint64_t v9 = v6[8];
    uint64_t v8 = v6[9];
    uint64_t v61 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 6);
    char v59 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 1);
    uint64_t v63 = (void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 4);
    uint64_t v72 = v8 * (v57 - 1);
    uint64_t v56 = v8;
    uint64_t v71 = v8 * v57;
    uint64_t v58 = v6 + 2;
    uint64_t v73 = v9;
LABEL_7:
    uint64_t v11 = 0;
    uint64_t v67 = v54;
    while (1)
    {
      uint64_t v68 = v52;
      uint64_t v65 = v71 + v11;
      MEMORY[0x1F4188790](result);
      unint64_t v12 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v13 = ((uint64_t (*)(unsigned char *))v7)(&v52[-v12]);
      uint64_t v70 = v52;
      uint64_t v64 = v72 + v11;
      MEMORY[0x1F4188790](v13);
      uint64_t v78 = &v52[-v12];
      v7();
      uint64_t v69 = &v52[-v12];
      uint64_t v14 = sub_1A6891860();
      uint64_t v16 = v15;
      uint64_t v17 = v7;
      uint64_t v18 = v62;
      char v60 = *v61;
      uint64_t v19 = v60(v62, 1, v5);
      if (v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v17;
      }
      else
      {
        uint64_t v55 = v52;
        MEMORY[0x1F4188790](v19);
        uint64_t v25 = v14;
        uint64_t v26 = &v52[-v12];
        ((void (*)(unsigned char *, uint64_t, uint64_t))v17)(&v52[-v12], v18, v5);
        uint64_t v27 = sub_1A6891860();
        uint64_t v29 = v28;
        unint64_t v30 = v26;
        uint64_t v31 = v25;
        uint64_t v32 = *v59;
        ((void (*)(unsigned char *, uint64_t))*v59)(v30, v5);
        uint64_t v7 = v17;
        if (v31 == v27 && v16 == v29)
        {
          swift_bridgeObjectRelease_n();
LABEL_22:
          ((void (*)(unsigned char *, uint64_t))v32)(v78, v5);
          uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v32)(v69, v5);
          uint64_t v9 = v73;
          goto LABEL_23;
        }
        char v46 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v46) {
          goto LABEL_22;
        }
      }
      uint64_t v20 = sub_1A6891860();
      uint64_t v22 = v21;
      uint64_t v23 = v62;
      uint64_t v24 = v60(v62, 1, v5);
      if (v24)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v68 = v52;
        MEMORY[0x1F4188790](v24);
        uint64_t v34 = &v52[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
        ((void (*)(unsigned char *, uint64_t, uint64_t))v7)(v34, v23, v5);
        uint64_t v35 = sub_1A6891860();
        uint64_t v37 = v36;
        char v60 = *v59;
        ((void (*)(unsigned char *, uint64_t))v60)(v34, v5);
        if (v20 == v35 && v22 == v37)
        {
          swift_bridgeObjectRelease_n();
LABEL_5:
          uint64_t v10 = v60;
          ((void (*)(unsigned char *, uint64_t))v60)(v78, v5);
          uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v10)(v69, v5);
          uint64_t v9 = v73;
LABEL_6:
          v72 += v56;
          v71 += v56;
          if (++v57 == v53) {
            return result;
          }
          goto LABEL_7;
        }
        char v38 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v38) {
          goto LABEL_5;
        }
      }
      uint64_t v39 = v69;
      uint64_t v76 = sub_1A6891860();
      uint64_t v77 = v40;
      uint64_t v41 = v78;
      uint64_t v74 = sub_1A6891860();
      uint64_t v75 = v42;
      sub_1A6748030();
      uint64_t v43 = sub_1A6892A80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = *v59;
      ((void (*)(unsigned char *, uint64_t))*v59)(v41, v5);
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v44)(v39, v5);
      BOOL v45 = v43 == -1;
      uint64_t v9 = v73;
      if (!v45) {
        goto LABEL_6;
      }
LABEL_23:
      uint64_t v47 = *v66;
      if (!*v66)
      {
        __break(1u);
        return result;
      }
      uint64_t v48 = v47 + v71 + v11;
      uint64_t v49 = v47 + v72 + v11;
      MEMORY[0x1F4188790](result);
      BOOL v50 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
      uint64_t v51 = (uint64_t (*)(uint64_t, unsigned char *, uint64_t))*v63;
      (*v63)(v50, v48, v5);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = v51(v49, v50, v5);
      v11 -= v56;
      ++v67;
      uint64_t v9 = v73;
      if (v57 == v67) {
        goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t sub_1A67B2348(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1A6891A40();
  uint64_t v11 = *(void *)(result - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  uint64_t v13 = result;
  if (a2 - a1 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_90;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 != 0x8000000000000000 || v12 != -1)
  {
    uint64_t v15 = (uint64_t)(a2 - a1) / v12;
    unint64_t v140 = a1;
    unint64_t v139 = a4;
    uint64_t v132 = a5;
    uint64_t v128 = result;
    if (v15 < v14 / v12)
    {
      uint64_t v16 = v15 * v12;
      if (a4 < a1 || a1 + v16 <= a4)
      {
        uint64_t v17 = v11;
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        uint64_t v17 = v11;
        if (a4 != a1) {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
      }
      uint64_t v120 = (void (**)(char *, uint64_t))(a4 + v16);
      unint64_t v138 = a4 + v16;
      if (v16 >= 1 && a2 < a3)
      {
        uint64_t v20 = v17 + 16;
        uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
        uint64_t v22 = *(void *)(v17 + 64);
        uint64_t v123 = (void (**)(char *, uint64_t))(v20 - 8);
        uint64_t v124 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
        uint64_t v129 = v20;
        unint64_t v130 = a3;
        uint64_t v121 = v22;
        unint64_t v122 = v21;
        uint64_t v119 = v12;
        while (1)
        {
          uint64_t v131 = (char *)v115;
          MEMORY[0x1F4188790](result);
          unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
          unint64_t v133 = a2;
          uint64_t v24 = ((uint64_t (*)(char *, unint64_t, uint64_t))v21)((char *)v115 - v23, a2, v13);
          unint64_t v127 = v115;
          MEMORY[0x1F4188790](v24);
          uint64_t v125 = (char *)v115 - v23;
          ((void (*)(void))v21)();
          char v126 = (char *)v115 - v23;
          uint64_t v25 = sub_1A6891860();
          uint64_t v27 = v26;
          uint64_t v28 = *v124;
          uint64_t v29 = v132;
          uint64_t v30 = (*v124)(v132, 1, v13);
          if (v30)
          {
            swift_bridgeObjectRelease();
            uint64_t v31 = v125;
          }
          else
          {
            unint64_t v118 = v115;
            MEMORY[0x1F4188790](v30);
            uint64_t v43 = v29;
            uint64_t v44 = (char *)v115 - v23;
            v21((char *)v115 - v23, v43, v13);
            uint64_t v45 = sub_1A6891860();
            uint64_t v47 = v46;
            uint64_t v48 = *v123;
            (*v123)(v44, v13);
            if (v25 == v45 && v27 == v47)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v31 = v125;
LABEL_34:
              uint64_t v13 = v128;
              v48(v31, v128);
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v48)(v126, v13);
              uint64_t v22 = v121;
              goto LABEL_35;
            }
            char v55 = sub_1A6893120();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v31 = v125;
            if (v55) {
              goto LABEL_34;
            }
          }
          uint64_t v32 = sub_1A6891860();
          uint64_t v34 = v33;
          uint64_t v35 = v132;
          uint64_t v36 = v128;
          uint64_t v37 = v28(v132, 1, v128);
          if (v37)
          {
            swift_bridgeObjectRelease();
            uint64_t v22 = v121;
          }
          else
          {
            MEMORY[0x1F4188790](v37);
            BOOL v50 = (char *)v115 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
            v122(v50, v35, v36);
            uint64_t v51 = sub_1A6891860();
            uint64_t v53 = v52;
            uint64_t v54 = *v123;
            (*v123)(v50, v36);
            if (v32 == v51 && v34 == v53)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v22 = v121;
LABEL_41:
              uint64_t v13 = v128;
              v54(v31, v128);
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v54)(v126, v13);
LABEL_42:
              unint64_t v56 = v140;
              uint64_t v57 = v119;
              unint64_t v61 = v139 + v119;
              unint64_t v59 = v130;
              unint64_t v62 = v133;
              if (v140 < v139 || v140 >= v61)
              {
                uint64_t result = swift_arrayInitWithTakeFrontToBack();
              }
              else if (v140 != v139)
              {
                uint64_t result = swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v139 = v61;
              unint64_t v58 = v62;
              goto LABEL_48;
            }
            char v60 = sub_1A6893120();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v22 = v121;
            if (v60) {
              goto LABEL_41;
            }
          }
          char v38 = v126;
          uint64_t v136 = sub_1A6891860();
          uint64_t v137 = v39;
          uint64_t v134 = sub_1A6891860();
          uint64_t v135 = v40;
          sub_1A6748030();
          uint64_t v41 = sub_1A6892A80();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v42 = *v123;
          uint64_t v13 = v128;
          (*v123)(v31, v128);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v42)(v38, v13);
          if (v41 != -1) {
            goto LABEL_42;
          }
LABEL_35:
          unint64_t v56 = v140;
          uint64_t v57 = v119;
          unint64_t v58 = v133 + v119;
          unint64_t v59 = v130;
          if (v140 < v133 || v140 >= v58)
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v140 == v133)
          {
            unint64_t v56 = v133;
          }
          else
          {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
          }
LABEL_48:
          unint64_t v140 = v56 + v57;
          uint64_t v21 = v122;
          if (v139 < (unint64_t)v120)
          {
            a2 = v58;
            if (v58 < v59) {
              continue;
            }
          }
          goto LABEL_88;
        }
      }
      goto LABEL_88;
    }
    uint64_t v18 = v14 / v12 * v12;
    uint64_t v129 = v11;
    if (a4 < a2 || a2 + v18 <= a4)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v138 = a4 + v18;
    unint64_t v140 = a2;
    if (v18 < 1 || a1 >= a2)
    {
LABEL_88:
      sub_1A67B2F50(&v140, &v139, (uint64_t *)&v138);
      return 1;
    }
    uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 16);
    uint64_t v65 = *(void *)(v129 + 64);
    uint64_t v123 = (void (**)(char *, uint64_t))(v129 + 48);
    uint64_t v120 = (void (**)(char *, uint64_t))(v129 + 8);
    unint64_t v118 = (void *)((v129 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    v129 += 16;
    uint64_t v121 = v65;
    unint64_t v122 = v64;
    unint64_t v117 = a4;
    unint64_t v116 = a1;
    uint64_t v119 = -v12;
    while (1)
    {
      unint64_t v130 = a3;
      char v126 = (char *)v115;
      MEMORY[0x1F4188790](result);
      unint64_t v66 = (v65 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v68 = v67;
      uint64_t v69 = ((uint64_t (*)(char *))v67)((char *)v115 - v66);
      unint64_t v127 = v115;
      unint64_t v133 = a2;
      MEMORY[0x1F4188790](v69);
      uint64_t v131 = (char *)v115 - v66;
      uint64_t v124 = v70;
      v68();
      uint64_t v125 = (char *)v115 - v66;
      uint64_t v71 = sub_1A6891860();
      uint64_t v73 = v72;
      uint64_t v74 = *v123;
      uint64_t v75 = v132;
      uint64_t v76 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*v123)(v132, 1, v13);
      if (v76)
      {
        swift_bridgeObjectRelease();
        uint64_t v77 = v125;
      }
      else
      {
        v115[2] = v115;
        MEMORY[0x1F4188790](v76);
        uint64_t v89 = v75;
        uint64_t v90 = (char *)v115 - v66;
        ((void (*)(char *, uint64_t, uint64_t))v68)((char *)v115 - v66, v89, v13);
        uint64_t v91 = sub_1A6891860();
        uint64_t v92 = v13;
        uint64_t v93 = v91;
        uint64_t v95 = v94;
        uint64_t v88 = *v120;
        (*v120)(v90, v92);
        if (v71 == v93 && v73 == v95)
        {
          swift_bridgeObjectRelease_n();
          BOOL v87 = 1;
          uint64_t v13 = v128;
          uint64_t v77 = v125;
          uint64_t v86 = v131;
          goto LABEL_72;
        }
        char v103 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v128;
        uint64_t v77 = v125;
        if (v103)
        {
          BOOL v87 = 1;
          uint64_t v86 = v131;
          goto LABEL_72;
        }
      }
      uint64_t v78 = sub_1A6891860();
      uint64_t v80 = v79;
      uint64_t v81 = v132;
      uint64_t v82 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v74)(v132, 1, v13);
      if (v82)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        MEMORY[0x1F4188790](v82);
        uint64_t v97 = (char *)v115 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
        v122(v97, v81, v13);
        uint64_t v98 = sub_1A6891860();
        uint64_t v99 = v13;
        uint64_t v100 = v98;
        uint64_t v102 = v101;
        uint64_t v88 = *v120;
        (*v120)(v97, v99);
        if (v78 == v100 && v80 == v102)
        {
          swift_bridgeObjectRelease_n();
          BOOL v87 = 0;
          uint64_t v13 = v128;
          uint64_t v86 = v131;
          goto LABEL_72;
        }
        char v104 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v87 = 0;
        uint64_t v13 = v128;
        uint64_t v86 = v131;
        if (v104) {
          goto LABEL_72;
        }
      }
      uint64_t v136 = sub_1A6891860();
      uint64_t v137 = v83;
      uint64_t v134 = sub_1A6891860();
      uint64_t v135 = v84;
      sub_1A6748030();
      uint64_t v85 = sub_1A6892A80();
      swift_bridgeObjectRelease();
      uint64_t v86 = v131;
      swift_bridgeObjectRelease();
      BOOL v87 = v85 == -1;
      uint64_t v88 = *v120;
LABEL_72:
      unint64_t v105 = v130;
      uint64_t v106 = v119;
      unint64_t v107 = v130 + v119;
      v88(v86, v13);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v88)(v77, v13);
      if (v87)
      {
        unint64_t v108 = v117;
        unint64_t v109 = v116;
        if (v105 < v133 || v107 >= v133)
        {
          uint64_t v114 = v124;
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
          uint64_t v111 = v114;
          uint64_t v65 = v121;
        }
        else
        {
          BOOL v110 = v105 == v133;
          uint64_t v65 = v121;
          uint64_t v111 = v124;
          if (!v110)
          {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
            uint64_t v111 = v124;
          }
        }
        v140 += v106;
      }
      else
      {
        unint64_t v112 = v138;
        v138 += v106;
        unint64_t v108 = v117;
        unint64_t v109 = v116;
        if (v105 < v112 || v107 >= v112)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
          uint64_t v111 = (uint64_t (**)(void, void, void))v133;
        }
        else
        {
          BOOL v110 = v105 == v112;
          unint64_t v113 = v133;
          if (!v110) {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v111 = (uint64_t (**)(void, void, void))v113;
        }
        uint64_t v65 = v121;
      }
      if (v138 > v108)
      {
        a2 = (unint64_t)v111;
        a3 = v107;
        if ((unint64_t)v111 > v109) {
          continue;
        }
      }
      goto LABEL_88;
    }
  }
LABEL_91:
  __break(1u);
  return result;
}

uint64_t sub_1A67B2F50(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_1A6891A40();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_17;
  }
  if (v3 < v4 || v3 >= v4 + (uint64_t)(v5 - v4) / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

unint64_t *sub_1A67B3034(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1A67B31BC((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1A67B31BC((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1AD0C1C50](v8, -1, -1);
  }
  return v7;
}

unint64_t *sub_1A67B31BC(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v66 = result;
  unint64_t v6 = *(void *)(a3 + 16);
  unint64_t v7 = *(void *)(a4 + 16);
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  uint64_t v63 = a2;
  if (v7 >= v6)
  {
    uint64_t v72 = 0;
    int64_t v36 = 0;
    uint64_t v37 = *(void *)(a3 + 56);
    uint64_t v67 = a3 + 56;
    uint64_t v38 = 1 << *(unsigned char *)(a3 + 32);
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    else {
      uint64_t v39 = -1;
    }
    unint64_t v40 = v39 & v37;
    int64_t v68 = (unint64_t)(v38 + 63) >> 6;
    uint64_t v75 = a4 + 56;
    if ((v39 & v37) != 0) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v43 = v36 + 1;
    if (!__OFADD__(v36, 1))
    {
      if (v43 < v68)
      {
        unint64_t v44 = *(void *)(v67 + 8 * v43);
        ++v36;
        if (!v44)
        {
          int64_t v36 = v43 + 1;
          if (v43 + 1 >= v68) {
            goto LABEL_62;
          }
          unint64_t v44 = *(void *)(v67 + 8 * v36);
          if (!v44)
          {
            int64_t v36 = v43 + 2;
            if (v43 + 2 >= v68) {
              goto LABEL_62;
            }
            unint64_t v44 = *(void *)(v67 + 8 * v36);
            if (!v44)
            {
              int64_t v45 = v43 + 3;
              if (v45 >= v68) {
                goto LABEL_62;
              }
              unint64_t v44 = *(void *)(v67 + 8 * v45);
              if (!v44)
              {
                while (1)
                {
                  int64_t v36 = v45 + 1;
                  if (__OFADD__(v45, 1)) {
                    goto LABEL_68;
                  }
                  if (v36 >= v68) {
                    goto LABEL_62;
                  }
                  unint64_t v44 = *(void *)(v67 + 8 * v36);
                  ++v45;
                  if (v44) {
                    goto LABEL_53;
                  }
                }
              }
              int64_t v36 = v45;
            }
          }
        }
LABEL_53:
        uint64_t v74 = (v44 - 1) & v44;
        for (unint64_t i = __clz(__rbit64(v44)) + (v36 << 6); ; unint64_t i = __clz(__rbit64(v40)) | (v36 << 6))
        {
          uint64_t v46 = sub_1A68918D0();
          uint64_t v73 = &v62;
          uint64_t v47 = *(void *)(v46 - 8);
          MEMORY[0x1F4188790](v46);
          unint64_t v78 = (v48 + 15) & 0xFFFFFFFFFFFFFFF0;
          unint64_t v79 = v48;
          uint64_t v49 = (char *)&v62 - v78;
          uint64_t v50 = *(void *)(v5 + 48);
          uint64_t v52 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
          uint64_t v51 = v47 + 16;
          unint64_t v76 = *(void *)(v51 + 56);
          uint64_t v77 = v52;
          v52((char *)&v62 - v78, v50 + v76 * i, v46);
          sub_1A67B5178(&qword_1E96C1568, MEMORY[0x1F418BD68]);
          uint64_t v82 = v49;
          uint64_t v53 = sub_1A6891F10();
          uint64_t v54 = -1 << *(unsigned char *)(v4 + 32);
          unint64_t v55 = v53 & ~v54;
          unint64_t v56 = (uint64_t (**)(char *, uint64_t))(v51 - 8);
          if ((*(void *)(v75 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55))
          {
            uint64_t v69 = (char *)((v51 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
            unint64_t v70 = i;
            int64_t v71 = v36;
            uint64_t v57 = ~v54;
            while (1)
            {
              MEMORY[0x1F4188790](v53);
              unint64_t v58 = (char *)&v62 - v78;
              v77((char *)&v62 - v78, *(void *)(v81 + 48) + v55 * v76, v46);
              sub_1A67B5178(&qword_1E96C1550, MEMORY[0x1F418BD68]);
              char v59 = sub_1A6891FC0();
              char v60 = *v56;
              uint64_t v53 = (*v56)(v58, v46);
              if (v59) {
                break;
              }
              unint64_t v55 = (v55 + 1) & v57;
              if (((*(void *)(v75 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
              {
                uint64_t v5 = v80;
                uint64_t v4 = v81;
                int64_t v36 = v71;
                unint64_t v40 = v74;
                goto LABEL_60;
              }
            }
            uint64_t result = (unint64_t *)v60(v82, v46);
            unint64_t v40 = v74;
            int64_t v36 = v71;
            *(unint64_t *)((char *)v66 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
            BOOL v41 = __OFADD__(v72++, 1);
            uint64_t v5 = v80;
            uint64_t v4 = v81;
            if (v41) {
              goto LABEL_66;
            }
            if (!v40) {
              goto LABEL_40;
            }
          }
          else
          {
            char v60 = *v56;
            unint64_t v40 = v74;
LABEL_60:
            uint64_t result = (unint64_t *)v60(v82, v46);
            if (!v40) {
              goto LABEL_40;
            }
          }
LABEL_39:
          uint64_t v74 = (v40 - 1) & v40;
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a4 + 56);
    uint64_t v64 = a4 + 56;
    uint64_t v9 = 1 << *(unsigned char *)(a4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v8;
    uint64_t v12 = sub_1A68918D0();
    uint64_t v62 = (uint64_t)&v62;
    uint64_t result = (unint64_t *)MEMORY[0x1F4188790](v12);
    uint64_t v82 = v13;
    uint64_t v69 = (char *)&v62 - ((unint64_t)(v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v70 = v14;
    uint64_t v72 = 0;
    int64_t v15 = 0;
    int64_t v65 = (unint64_t)(v9 + 63) >> 6;
    unint64_t v79 = v14 + 16;
    int64_t v68 = v14 + 32;
    uint64_t v75 = v5 + 56;
    uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v14 + 8);
    if (v11) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v19 = v15 + 1;
    if (!__OFADD__(v15, 1))
    {
      if (v19 < v65)
      {
        unint64_t v20 = *(void *)(v64 + 8 * v19);
        ++v15;
        if (v20) {
          goto LABEL_23;
        }
        int64_t v15 = v19 + 1;
        if (v19 + 1 >= v65) {
          goto LABEL_62;
        }
        unint64_t v20 = *(void *)(v64 + 8 * v15);
        if (v20) {
          goto LABEL_23;
        }
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v65) {
          goto LABEL_62;
        }
        unint64_t v20 = *(void *)(v64 + 8 * v15);
        if (v20)
        {
LABEL_23:
          uint64_t v74 = (v20 - 1) & v20;
          for (unint64_t j = __clz(__rbit64(v20)) + (v15 << 6); ; unint64_t j = __clz(__rbit64(v11)) | (v15 << 6))
          {
            unint64_t v23 = v69;
            unint64_t v22 = v70;
            unint64_t v24 = *(void *)(v70 + 72);
            unint64_t v25 = *(void *)(v4 + 48) + v24 * j;
            uint64_t v77 = *(void (**)(char *, unint64_t, uint64_t))(v70 + 16);
            unint64_t v78 = v24;
            uint64_t v26 = ((uint64_t (*)(char *, unint64_t, uint64_t))v77)(v69, v25, v12);
            uint64_t v73 = &v62;
            MEMORY[0x1F4188790](v26);
            unint64_t v76 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
            uint64_t v28 = (char *)&v62 - v76;
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)&v62 - v76, v23, v12);
            sub_1A67B5178(&qword_1E96C1568, MEMORY[0x1F418BD68]);
            uint64_t v29 = sub_1A6891F10();
            uint64_t v30 = -1 << *(unsigned char *)(v5 + 32);
            unint64_t v31 = v29 & ~v30;
            if ((*(void *)(v75 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
            {
              uint64_t v67 = (unint64_t)v16 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              int64_t v71 = v15;
              uint64_t v32 = v16;
              uint64_t v33 = ~v30;
              while (1)
              {
                MEMORY[0x1F4188790](v29);
                uint64_t v34 = (char *)&v62 - v76;
                v77((char *)&v62 - v76, *(void *)(v80 + 48) + v31 * v78, v12);
                sub_1A67B5178(&qword_1E96C1550, MEMORY[0x1F418BD68]);
                char v35 = sub_1A6891FC0();
                uint64_t v17 = *v32;
                uint64_t v29 = (*v32)(v34, v12);
                if (v35) {
                  break;
                }
                unint64_t v31 = (v31 + 1) & v33;
                if (((*(void *)(v75 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
                {
                  uint64_t v4 = v81;
                  uint64_t v16 = v32;
                  uint64_t v5 = v80;
                  int64_t v15 = v71;
                  unint64_t v11 = v74;
                  goto LABEL_8;
                }
              }
              uint64_t v16 = v32;
              uint64_t result = (unint64_t *)v17(v28, v12);
              *(unint64_t *)((char *)v66 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
              int64_t v15 = v71;
              if (__OFADD__(v72, 1)) {
                goto LABEL_65;
              }
              ++v72;
              uint64_t v5 = v80;
              uint64_t v4 = v81;
              unint64_t v11 = v74;
              if (!v74) {
                goto LABEL_10;
              }
            }
            else
            {
              uint64_t v17 = *v16;
              uint64_t v4 = v81;
              unint64_t v11 = v74;
LABEL_8:
              uint64_t result = (unint64_t *)v17(v28, v12);
              if (!v11) {
                goto LABEL_10;
              }
            }
LABEL_9:
            uint64_t v74 = (v11 - 1) & v11;
          }
        }
        int64_t v21 = v19 + 3;
        if (v21 < v65)
        {
          unint64_t v20 = *(void *)(v64 + 8 * v21);
          if (v20)
          {
            int64_t v15 = v21;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v15 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_67;
            }
            if (v15 >= v65) {
              break;
            }
            unint64_t v20 = *(void *)(v64 + 8 * v15);
            ++v21;
            if (v20) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_62:
      uint64_t v61 = v72;
      swift_retain();
      return (unint64_t *)sub_1A67B3D9C(v66, v63, v61, v5);
    }
    __break(1u);
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_1A67B3A2C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1A6741AD0(&qword_1EB67A348);
  uint64_t result = sub_1A6892C10();
  uint64_t v6 = result;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v39 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v38)
      {
LABEL_37:
        swift_release();
        return v6;
      }
      unint64_t v16 = v37[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v38) {
          goto LABEL_37;
        }
        unint64_t v16 = v37[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v38) {
            goto LABEL_37;
          }
          unint64_t v16 = v37[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v38) {
              goto LABEL_37;
            }
            unint64_t v16 = v37[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v38) {
                  goto LABEL_37;
                }
                unint64_t v16 = v37[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v39 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = sub_1A6891A40();
    unint64_t v40 = &v37;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    unint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v4;
    uint64_t v26 = *(void *)(v4 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v26 + v27 * v14, v19);
    sub_1A67B5178((unint64_t *)&qword_1EB67A220, MEMORY[0x1F418BE30]);
    uint64_t result = sub_1A6891F10();
    uint64_t v28 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v12 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v6 + 48) + v31 * v27, v22, v19);
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v25;
    uint64_t v11 = v39;
    if (!v5) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A67B3D9C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1A6741AD0(&qword_1E96C1D50);
  uint64_t result = sub_1A6892C10();
  uint64_t v6 = result;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v39 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v38)
      {
LABEL_37:
        swift_release();
        return v6;
      }
      unint64_t v16 = v37[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v38) {
          goto LABEL_37;
        }
        unint64_t v16 = v37[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v38) {
            goto LABEL_37;
          }
          unint64_t v16 = v37[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v38) {
              goto LABEL_37;
            }
            unint64_t v16 = v37[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v38) {
                  goto LABEL_37;
                }
                unint64_t v16 = v37[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v39 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = sub_1A68918D0();
    unint64_t v40 = &v37;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    unint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v4;
    uint64_t v26 = *(void *)(v4 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v26 + v27 * v14, v19);
    sub_1A67B5178(&qword_1E96C1568, MEMORY[0x1F418BD68]);
    uint64_t result = sub_1A6891F10();
    uint64_t v28 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v12 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v6 + 48) + v31 * v27, v22, v19);
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v25;
    uint64_t v11 = v39;
    if (!v5) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t *sub_1A67B410C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(char *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_1A67B435C((void *)((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = sub_1A67B435C((unint64_t *)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x1AD0C1C50](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1A67B4290(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1A6741AD0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A67B42F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1EB67A238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t *sub_1A67B435C(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  unint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v26 = a2;
  uint64_t v27 = result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a3 + 56);
  uint64_t v28 = 0;
  uint64_t v29 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_17:
    uint64_t v14 = sub_1A6891A40();
    uint64_t v15 = *(void *)(v14 - 8);
    MEMORY[0x1F4188790](v14);
    uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, *(void *)(v32 + 48) + *(void *)(v18 + 72) * v10, v14);
    uint64_t v19 = v33;
    char v20 = v31(v17);
    uint64_t v33 = v19;
    if (v19) {
      return (unint64_t *)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    char v21 = v20;
    uint64_t result = (unint64_t *)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v21)
    {
      *(unint64_t *)((char *)v27 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      BOOL v11 = __OFADD__(v28++, 1);
      if (v11) {
        goto LABEL_31;
      }
    }
  }
  BOOL v11 = __OFADD__(v4++, 1);
  if (v11)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v4 >= v30) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v4);
  if (v12)
  {
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_17;
  }
  int64_t v13 = v4 + 1;
  if (v4 + 1 >= v30) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v13);
  if (v12) {
    goto LABEL_15;
  }
  int64_t v13 = v4 + 2;
  if (v4 + 2 >= v30) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v13);
  if (v12) {
    goto LABEL_15;
  }
  int64_t v13 = v4 + 3;
  if (v4 + 3 >= v30)
  {
LABEL_27:
    uint64_t v22 = v26;
    uint64_t v23 = v28;
    uint64_t v24 = v32;
    swift_retain();
    return (unint64_t *)sub_1A67B3A2C(v27, v22, v23, v24);
  }
  unint64_t v12 = *(void *)(v29 + 8 * v13);
  if (v12)
  {
LABEL_15:
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v30) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A67B4644(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1A67B4724;
  return v5(v2 + 32);
}

uint64_t sub_1A67B4724()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

void *sub_1A67B4838(void *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a4;
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = v41;
    result[1] = v4;
    result[2] = ~v5;
    result[3] = v11;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v42 = a2;
  uint64_t v32 = result;
  uint64_t v33 = a4 + 56;
  uint64_t v9 = sub_1A6891A40();
  uint64_t v10 = v9;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t v40 = *(void *)(v13 + 64);
  uint64_t v38 = v13 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v36 = v13;
  uint64_t v37 = v13 + 48;
  int64_t v34 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v13 + 32);
  int64_t v30 = v34 - 1;
  uint64_t v31 = v5;
  while (1)
  {
    int64_t v43 = &v30;
    MEMORY[0x1F4188790](v9);
    uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = sub_1A6741AD0(&qword_1EB67A238);
    uint64_t result = (void *)MEMORY[0x1F4188790](v16 - 8);
    uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v7)
    {
      unint64_t v19 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v20 = v19 | (v11 << 6);
      goto LABEL_23;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v4 = v33;
    if (v21 >= v34) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v21);
    if (v22) {
      goto LABEL_22;
    }
    int64_t v23 = v11 + 2;
    ++v11;
    if (v21 + 1 >= v34) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v23);
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v33 + 8 * (v21 + 2));
      if (v22)
      {
        v21 += 2;
        goto LABEL_22;
      }
      int64_t v11 = v21 + 2;
      if (v21 + 3 >= v34) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v33 + 8 * (v21 + 3));
      if (v22)
      {
        v21 += 3;
        goto LABEL_22;
      }
      int64_t v23 = v21 + 4;
      int64_t v11 = v21 + 3;
      if (v21 + 4 >= v34)
      {
LABEL_37:
        (*v39)(v18, 1, 1, v10);
        unint64_t v7 = 0;
        goto LABEL_38;
      }
      unint64_t v22 = *(void *)(v33 + 8 * v23);
      if (!v22) {
        break;
      }
    }
    int64_t v21 = v23;
LABEL_22:
    unint64_t v7 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v11 = v21;
LABEL_23:
    uint64_t v24 = v36;
    uint64_t v25 = *(void *)(v36 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v18, *(void *)(v41 + 48) + v25 * v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v10) == 1)
    {
      uint64_t v4 = v33;
LABEL_38:
      sub_1A6750210((uint64_t)v18, &qword_1EB67A238);
      uint64_t v5 = v31;
      uint64_t result = v32;
      uint64_t v8 = v12;
      goto LABEL_39;
    }
    uint64_t v26 = v12 + 1;
    uint64_t v27 = v8;
    uint64_t v28 = *v35;
    (*v35)(v15, v18, v10);
    uint64_t v29 = v42;
    uint64_t v9 = v28(v42, v15, v10);
    uint64_t v8 = v27;
    if (v26 == v27)
    {
      uint64_t result = v32;
      uint64_t v4 = v33;
      uint64_t v5 = v31;
      goto LABEL_39;
    }
    uint64_t v12 = v26;
    uint64_t v42 = &v29[v25];
  }
  while (1)
  {
    int64_t v21 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v21 >= v34)
    {
      int64_t v11 = v30;
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v21);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A67B4C70(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

size_t sub_1A67B4CF8(void *a1)
{
  return sub_1A67AC5B8(0, a1[2], 0, a1);
}

char *sub_1A67B4D0C(uint64_t a1)
{
  return sub_1A67AC894(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A67B4D20(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1A675FF34(0, v2, 0);
    uint64_t v3 = v30;
    uint64_t v25 = a2 + 3;
    uint64_t v6 = sub_1A6891A40();
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v23 = *(void *)(v8 + 64);
    uint64_t v24 = v8;
    v21[1] = v8 + 32;
    unint64_t v22 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v9 = a1 + 40;
    uint64_t v26 = a2;
    do
    {
      uint64_t v28 = v21;
      uint64_t v29 = v3;
      uint64_t v10 = MEMORY[0x1F4188790](v6);
      uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v27 = v21;
      MEMORY[0x1F4188790](v10);
      uint64_t v14 = (char *)v21 - v13;
      swift_bridgeObjectRetain_n();
      sub_1A6891900();
      uint64_t v15 = a2[6];
      uint64_t v16 = a2[7];
      sub_1A673E63C(v25, v15);
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
      Locale.withTTSLanguageDisambiguation(overrides:)(v17, (uint64_t)v12);
      uint64_t v3 = v29;
      swift_bridgeObjectRelease();
      (*v22)(v14, v7);
      swift_bridgeObjectRelease();
      uint64_t v30 = v3;
      unint64_t v19 = *(void *)(v3 + 16);
      unint64_t v18 = *(void *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A675FF34(v18 > 1, v19 + 1, 1);
        uint64_t v3 = v30;
      }
      v9 += 16;
      *(void *)(v3 + 16) = v19 + 1;
      uint64_t v6 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(v3+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v19, v12, v7);
      --v2;
      a2 = v26;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A67B4F94(uint64_t a1)
{
  return sub_1A67AA99C(a1) & 1;
}

uint64_t sub_1A67B4FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1A675FF34(0, v2, 0);
    uint64_t v3 = v21;
    uint64_t v5 = sub_1A6891A40();
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v19 = v5;
    uint64_t v7 = a1 + v18;
    uint64_t v17 = *(void *)(v6 + 64);
    uint64_t v16 = *(void *)(v6 + 72);
    uint64_t v8 = (uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32);
    do
    {
      MEMORY[0x1F4188790](v5);
      uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      Locale.withTTSLanguageDisambiguation(overrides:)(v20, (uint64_t)v10);
      uint64_t v21 = v3;
      unint64_t v12 = *(void *)(v3 + 16);
      unint64_t v11 = *(void *)(v3 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1A675FF34(v11 > 1, v12 + 1, 1);
        uint64_t v3 = v21;
      }
      *(void *)(v3 + 16) = v12 + 1;
      uint64_t v13 = v16;
      uint64_t v5 = (*v8)(v3 + v18 + v12 * v16, v10, v19);
      v7 += v13;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A67B5178(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A67B51C4()
{
  int64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(void *, void *, uint64_t))((char *)&dword_1E96C2578 + dword_1E96C2578);
  return v6(v2, v3, v4);
}

void sub_1A67B5280(uint64_t a1)
{
  sub_1A67A3A68(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A67B528C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(int, void *, uint64_t))((char *)&dword_1E96C2598 + dword_1E96C2598);
  return v6(v2, v3, v4);
}

uint64_t sub_1A67B534C()
{
  _Block_release(*(const void **)(v0 + 24));
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A67B5394()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(int, void *, uint64_t))((char *)&dword_1E96C25B8 + dword_1E96C25B8);
  return v6(v2, v3, v4);
}

uint64_t sub_1A67B5454()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A677B9EC;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_1E96C25D8 + dword_1E96C25D8);
  return v5(v2, v3);
}

uint64_t sub_1A67B5508()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A67B5540()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_1A68922D0();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_1A67B55A4()
{
  id v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A677B9EC;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_1E96C25F8 + dword_1E96C25F8);
  return v5(v2, v3);
}

uint64_t sub_1A67B565C()
{
  _Block_release(*(const void **)(v0 + 16));
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A67B569C()
{
  id v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A677B9EC;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_1E96C2618 + dword_1E96C2618);
  return v5(v2, v3);
}

uint64_t sub_1A67B5750(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A67B5798(uint64_t *a1)
{
  return sub_1A67A72F4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1A67B57B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A6740538();
  uint64_t result = sub_1A6892700();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 80);
      v10[4] = *(_OWORD *)(v4 + 64);
      v11[0] = v5;
      *(void *)((char *)v11 + 13) = *(void *)(v4 + 93);
      long long v6 = *(_OWORD *)(v4 + 16);
      v10[0] = *(_OWORD *)v4;
      v10[1] = v6;
      long long v7 = *(_OWORD *)(v4 + 48);
      void v10[2] = *(_OWORD *)(v4 + 32);
      v10[3] = v7;
      sub_1A67AEA1C((uint64_t)v10);
      sub_1A67AD7D8((uint64_t)v8, (uint64_t)v10);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 104;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_1A67B58A4(char *__dst, char *__src, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  long long v6 = a4;
  long long v7 = a3;
  uint64_t v8 = __src;
  uint64_t v9 = __dst;
  int64_t v10 = __src - __dst;
  int64_t v11 = (__src - __dst) / 104;
  uint64_t v12 = a3 - __src;
  uint64_t v13 = (a3 - __src) / 104;
  if (v11 >= v13)
  {
    uint64_t v38 = 104 * v13;
    if (a4 != __src || &__src[v38] <= a4) {
      memmove(a4, __src, 104 * v13);
    }
    uint64_t v15 = &v6[v38];
    if (v9 >= v8 || v12 < 104) {
      goto LABEL_54;
    }
    uint64_t v39 = v8;
    uint64_t v69 = v6;
    unint64_t v78 = v9;
    while (1)
    {
      uint64_t v80 = v7;
      uint64_t v82 = v15;
      uint64_t v75 = v8;
      uint64_t v40 = *((void *)v15 - 12);
      uint64_t v41 = v15 - 104;
      uint64_t v124 = *((void *)v15 - 13);
      uint64_t v42 = *((void *)v15 - 11);
      uint64_t v120 = *((void *)v15 - 10);
      uint64_t v43 = *((void *)v15 - 9);
      char v116 = *(v15 - 63);
      char v118 = *(v15 - 64);
      uint64_t v114 = *((void *)v15 - 7);
      uint64_t v45 = *((void *)v15 - 5);
      uint64_t v44 = *((void *)v15 - 4);
      uint64_t v135 = (void *)*((void *)v15 - 3);
      int v110 = *((_DWORD *)v15 - 4);
      char v112 = *(v15 - 48);
      int v106 = *((_DWORD *)v15 - 2);
      char v108 = *(v15 - 12);
      char v104 = *(v15 - 4);
      uint64_t v46 = *((void *)v39 - 13);
      uint64_t v47 = *((void *)v39 - 12);
      v39 -= 104;
      uint64_t v122 = v46;
      uint64_t v48 = *((void *)v39 + 2);
      uint64_t v102 = *((void *)v39 + 3);
      uint64_t v49 = *((void *)v39 + 4);
      char v98 = v39[41];
      char v100 = v39[40];
      uint64_t v96 = *((void *)v39 + 6);
      uint64_t v50 = *((void *)v39 + 9);
      uint64_t v71 = *((void *)v39 + 8);
      uint64_t v84 = (void *)*((void *)v39 + 10);
      int v92 = *((_DWORD *)v39 + 22);
      char v94 = v39[56];
      int v88 = *((_DWORD *)v39 + 24);
      char v90 = v39[92];
      char v86 = v39[100];
      uint64_t v130 = v40;
      swift_bridgeObjectRetain();
      uint64_t v132 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v171 = v44;
      swift_bridgeObjectRetain();
      id v136 = v135;
      swift_bridgeObjectRetain();
      uint64_t v126 = v48;
      swift_bridgeObjectRetain();
      uint64_t v73 = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v128 = v50;
      swift_bridgeObjectRetain();
      id v51 = v84;
      int v52 = sub_1A67A80DC(v45, a5);
      swift_bridgeObjectRelease();
      uint64_t v53 = swift_bridgeObjectRetain();
      LODWORD(v42) = sub_1A67A80DC(v53, a5);
      swift_bridgeObjectRelease();
      if (((v52 ^ v42) & 1) != 0
        || (uint64_t v54 = swift_bridgeObjectRetain(),
            int v52 = sub_1A67A84D0(v54, a5),
            swift_bridgeObjectRelease(),
            uint64_t v55 = swift_bridgeObjectRetain(),
            int v56 = sub_1A67A84D0(v55, a5),
            swift_bridgeObjectRelease(),
            ((v52 ^ v56) & 1) != 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        unint64_t v58 = v78;
        uint64_t v57 = v80;
        long long v7 = v80 - 104;
        long long v6 = v69;
        unint64_t v59 = (unint64_t)v75;
        uint64_t v15 = v82;
        if ((v52 & 1) == 0) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v153 = a6;
        uint64_t v67 = sub_1A67A957C();
        uint64_t v60 = *(void *)(v67 + 16);
        unint64_t v59 = (unint64_t)v75;
        if (v60)
        {
          uint64_t v61 = (unsigned char *)(v67 + 48);
          while (1)
          {
            char v170 = *v61;
            long long v169 = *((_OWORD *)v61 - 1);
            uint64_t v153 = v124;
            uint64_t v154 = v130;
            uint64_t v155 = v132;
            uint64_t v156 = v120;
            uint64_t v157 = v43;
            char v158 = v118;
            char v159 = v116;
            uint64_t v160 = v114;
            char v161 = v112;
            uint64_t v162 = v45;
            uint64_t v163 = v171;
            id v164 = v136;
            int v165 = v110;
            char v166 = v108;
            int v167 = v106;
            char v168 = v104;
            uint64_t v137 = v122;
            uint64_t v138 = v47;
            uint64_t v139 = v126;
            uint64_t v140 = v102;
            uint64_t v141 = v73;
            char v142 = v100;
            char v143 = v98;
            uint64_t v144 = v96;
            char v145 = v94;
            uint64_t v146 = v71;
            uint64_t v147 = v128;
            id v148 = v51;
            int v149 = v92;
            char v150 = v90;
            int v151 = v88;
            char v152 = v86;
            uint64_t v62 = sub_1A67A966C((uint64_t)&v153, &v137);
            if (v62) {
              break;
            }
            v61 += 24;
            if (!--v60) {
              goto LABEL_43;
            }
          }
          uint64_t v63 = v62;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_43:
          swift_bridgeObjectRelease();
          uint64_t v153 = v124;
          uint64_t v154 = v130;
          uint64_t v137 = v122;
          uint64_t v138 = v47;
          sub_1A6748030();
          uint64_t v63 = sub_1A6892AB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        unint64_t v58 = v78;
        uint64_t v57 = v80;
        long long v7 = v80 - 104;
        long long v6 = v69;
        uint64_t v15 = v82;
        if (v63 != -1)
        {
LABEL_46:
          if (v57 < v15 || v7 >= v15 || v57 != v15) {
            memmove(v7, v41, 0x68uLL);
          }
          uint64_t v39 = (char *)v59;
          uint64_t v15 = v41;
          goto LABEL_51;
        }
      }
      if ((unint64_t)v57 < v59 || (unint64_t)v7 >= v59 || v57 != (char *)v59) {
        memmove(v7, v39, 0x68uLL);
      }
LABEL_51:
      if (v15 > v6)
      {
        uint64_t v8 = v39;
        if (v39 > v58) {
          continue;
        }
      }
      uint64_t v8 = v39;
      goto LABEL_54;
    }
  }
  size_t v14 = 104 * v11;
  if (a4 != __dst || &__dst[v14] <= a4) {
    memmove(a4, __dst, v14);
  }
  uint64_t v15 = &v6[v14];
  if (v8 < v7 && v10 >= 104)
  {
    unint64_t v79 = (unint64_t)v7;
    uint64_t v81 = &v6[v14];
    do
    {
      uint64_t v77 = v9;
      uint64_t v123 = *(void *)v8;
      uint64_t v16 = *((void *)v8 + 2);
      uint64_t v119 = *((void *)v8 + 3);
      uint64_t v17 = *((void *)v8 + 4);
      char v115 = v8[41];
      char v117 = v8[40];
      uint64_t v113 = *((void *)v8 + 6);
      uint64_t v18 = *((void *)v8 + 8);
      uint64_t v19 = *((void *)v8 + 9);
      unint64_t v133 = (void *)*((void *)v8 + 10);
      int v109 = *((_DWORD *)v8 + 22);
      char v111 = v8[56];
      int v105 = *((_DWORD *)v8 + 24);
      char v107 = v8[92];
      char v103 = v8[100];
      uint64_t v20 = *((void *)v6 + 1);
      uint64_t v121 = *(void *)v6;
      uint64_t v21 = *((void *)v6 + 2);
      uint64_t v101 = *((void *)v6 + 3);
      uint64_t v22 = *((void *)v6 + 4);
      char v97 = v6[41];
      char v99 = v6[40];
      uint64_t v95 = *((void *)v6 + 6);
      uint64_t v23 = *((void *)v6 + 9);
      uint64_t v72 = *((void *)v6 + 8);
      uint64_t v83 = (void *)*((void *)v6 + 10);
      int v91 = *((_DWORD *)v6 + 22);
      char v93 = v6[56];
      int v87 = *((_DWORD *)v6 + 24);
      char v89 = v6[92];
      char v85 = v6[100];
      uint64_t v129 = *((void *)v8 + 1);
      swift_bridgeObjectRetain();
      uint64_t v131 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v171 = v19;
      swift_bridgeObjectRetain();
      id v134 = v133;
      swift_bridgeObjectRetain();
      uint64_t v125 = v21;
      swift_bridgeObjectRetain();
      uint64_t v74 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v127 = v23;
      swift_bridgeObjectRetain();
      id v24 = v83;
      int v25 = sub_1A67A80DC(v18, a5);
      swift_bridgeObjectRelease();
      uint64_t v26 = swift_bridgeObjectRetain();
      LODWORD(v22) = sub_1A67A80DC(v26, a5);
      swift_bridgeObjectRelease();
      if (((v25 ^ v22) & 1) != 0
        || (uint64_t v27 = swift_bridgeObjectRetain(),
            int v25 = sub_1A67A84D0(v27, a5),
            swift_bridgeObjectRelease(),
            uint64_t v28 = swift_bridgeObjectRetain(),
            int v29 = sub_1A67A84D0(v28, a5),
            swift_bridgeObjectRelease(),
            ((v25 ^ v29) & 1) != 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v30 = v77;
        unint64_t v31 = v79;
        uint64_t v15 = v81;
        if ((v25 & 1) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v68 = v6;
        uint64_t v153 = a6;
        uint64_t v70 = sub_1A67A957C();
        uint64_t v34 = *(void *)(v70 + 16);
        unint64_t v31 = v79;
        uint64_t v15 = v81;
        if (v34)
        {
          uint64_t v35 = (unsigned char *)(v70 + 48);
          while (1)
          {
            char v170 = *v35;
            long long v169 = *((_OWORD *)v35 - 1);
            uint64_t v153 = v123;
            uint64_t v154 = v129;
            uint64_t v155 = v131;
            uint64_t v156 = v119;
            uint64_t v157 = v17;
            char v158 = v117;
            char v159 = v115;
            uint64_t v160 = v113;
            char v161 = v111;
            uint64_t v162 = v18;
            uint64_t v163 = v171;
            id v164 = v134;
            int v165 = v109;
            char v166 = v107;
            int v167 = v105;
            char v168 = v103;
            uint64_t v137 = v121;
            uint64_t v138 = v20;
            uint64_t v139 = v125;
            uint64_t v140 = v101;
            uint64_t v141 = v74;
            char v142 = v99;
            char v143 = v97;
            uint64_t v144 = v95;
            char v145 = v93;
            uint64_t v146 = v72;
            uint64_t v147 = v127;
            id v148 = v24;
            int v149 = v91;
            char v150 = v89;
            int v151 = v87;
            char v152 = v85;
            uint64_t v36 = sub_1A67A966C((uint64_t)&v153, &v137);
            if (v36) {
              break;
            }
            v35 += 24;
            if (!--v34) {
              goto LABEL_18;
            }
          }
          uint64_t v37 = v36;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_18:
          swift_bridgeObjectRelease();
          uint64_t v153 = v123;
          uint64_t v154 = v129;
          uint64_t v137 = v121;
          uint64_t v138 = v20;
          sub_1A6748030();
          uint64_t v37 = sub_1A6892AB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        long long v6 = v68;
        uint64_t v30 = v77;
        if (v37 != -1)
        {
LABEL_21:
          uint64_t v32 = v6;
          BOOL v33 = v30 == v6;
          v6 += 104;
          if (v33) {
            goto LABEL_23;
          }
LABEL_22:
          memmove(v30, v32, 0x68uLL);
          goto LABEL_23;
        }
      }
      uint64_t v32 = v8;
      BOOL v33 = v30 == v8;
      v8 += 104;
      if (!v33) {
        goto LABEL_22;
      }
LABEL_23:
      uint64_t v9 = v30 + 104;
    }
    while (v6 < v15 && (unint64_t)v8 < v31);
  }
  uint64_t v8 = v9;
LABEL_54:
  size_t v64 = 104 * ((v15 - v6) / 104);
  if (v8 != v6 || v8 >= &v6[v64]) {
    memmove(v8, v6, v64);
  }
  return 1;
}

void sub_1A67B6474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  if (a3 != a2)
  {
    uint64_t v55 = *a4;
LABEL_5:
    uint64_t v51 = a3;
    while (1)
    {
      uint64_t v57 = a3;
      long long v6 = (uint64_t *)(v55 + 104 * a3);
      uint64_t v79 = *v6;
      uint64_t v7 = v6[2];
      uint64_t v77 = v6[3];
      uint64_t v8 = v6[4];
      char v75 = *((unsigned char *)v6 + 41);
      char v76 = *((unsigned char *)v6 + 40);
      uint64_t v74 = v6[6];
      uint64_t v9 = v6[8];
      uint64_t v10 = v6[9];
      uint64_t v83 = (void *)v6[10];
      int v72 = *((_DWORD *)v6 + 22);
      char v73 = *((unsigned char *)v6 + 56);
      int v70 = *((_DWORD *)v6 + 24);
      char v71 = *((unsigned char *)v6 + 92);
      char v69 = *((unsigned char *)v6 + 100);
      int64_t v11 = v6 - 13;
      uint64_t v78 = *(v6 - 13);
      uint64_t v13 = *(v6 - 12);
      uint64_t v12 = *(v6 - 11);
      uint64_t v14 = *(v6 - 9);
      uint64_t v68 = *(v6 - 10);
      char v66 = *((unsigned char *)v6 - 63);
      char v67 = *((unsigned char *)v6 - 64);
      uint64_t v65 = *(v6 - 7);
      uint64_t v15 = *(v6 - 4);
      uint64_t v58 = *(v6 - 5);
      unint64_t v59 = (void *)*(v6 - 3);
      int v63 = *((_DWORD *)v6 - 4);
      char v64 = *((unsigned char *)v6 - 48);
      int v61 = *((_DWORD *)v6 - 2);
      char v62 = *((unsigned char *)v6 - 12);
      char v60 = *((unsigned char *)v6 - 4);
      uint64_t v81 = v6[1];
      swift_bridgeObjectRetain();
      uint64_t v82 = v7;
      swift_bridgeObjectRetain();
      uint64_t v85 = v8;
      swift_bridgeObjectRetain();
      uint64_t v16 = v9;
      swift_bridgeObjectRetain_n();
      uint64_t v86 = v10;
      swift_bridgeObjectRetain();
      id v84 = v83;
      uint64_t v17 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v56 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v80 = v15;
      swift_bridgeObjectRetain();
      id v18 = v59;
      uint64_t v19 = v9;
      uint64_t v20 = v121;
      uint64_t v21 = v16;
      int v22 = sub_1A67A80DC(v19, a5);
      swift_bridgeObjectRelease();
      uint64_t v23 = swift_bridgeObjectRetain();
      LODWORD(v16) = sub_1A67A80DC(v23, a5);
      uint64_t v121 = v20;
      swift_bridgeObjectRelease();
      if ((v22 ^ v16)) {
        goto LABEL_8;
      }
      uint64_t v24 = swift_bridgeObjectRetain();
      uint64_t v25 = v121;
      int v22 = sub_1A67A84D0(v24, a5);
      swift_bridgeObjectRelease();
      uint64_t v26 = swift_bridgeObjectRetain();
      int v27 = sub_1A67A84D0(v26, a5);
      uint64_t v121 = v25;
      swift_bridgeObjectRelease();
      if ((v22 ^ v27))
      {
LABEL_8:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v28 = v57;
        if ((v22 & 1) == 0) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v103 = a6;
        uint64_t v29 = sub_1A67A957C();
        uint64_t v30 = *(void *)(v29 + 16);
        if (v30)
        {
          unint64_t v31 = (unsigned char *)(v29 + 48);
          while (1)
          {
            char v120 = *v31;
            long long v119 = *((_OWORD *)v31 - 1);
            uint64_t v103 = v79;
            uint64_t v104 = v81;
            uint64_t v105 = v82;
            uint64_t v106 = v77;
            uint64_t v107 = v85;
            char v108 = v76;
            char v109 = v75;
            uint64_t v110 = v74;
            char v111 = v73;
            uint64_t v112 = v21;
            uint64_t v113 = v86;
            id v114 = v84;
            int v115 = v72;
            char v116 = v71;
            int v117 = v70;
            char v118 = v69;
            uint64_t v87 = v78;
            uint64_t v88 = v17;
            uint64_t v89 = v12;
            uint64_t v90 = v68;
            uint64_t v91 = v56;
            char v92 = v67;
            char v93 = v66;
            uint64_t v94 = v65;
            char v95 = v64;
            uint64_t v96 = v58;
            uint64_t v97 = v80;
            id v98 = v18;
            int v99 = v63;
            char v100 = v62;
            int v101 = v61;
            char v102 = v60;
            uint64_t v32 = sub_1A67A966C((uint64_t)&v103, &v87);
            if (v32) {
              break;
            }
            v31 += 24;
            if (!--v30) {
              goto LABEL_14;
            }
          }
          uint64_t v33 = v32;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_14:
          swift_bridgeObjectRelease();
          uint64_t v103 = v79;
          uint64_t v104 = v81;
          uint64_t v87 = v78;
          uint64_t v88 = v17;
          sub_1A6748030();
          uint64_t v33 = sub_1A6892AB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v28 = v57;
        if (v33 != -1)
        {
LABEL_4:
          a3 = v51 + 1;
          if (v51 + 1 == a2) {
            return;
          }
          goto LABEL_5;
        }
      }
      if (!v55) {
        break;
      }
      a3 = v28 - 1;
      uint64_t v34 = *v6;
      uint64_t v35 = v6[3];
      uint64_t v36 = v6[4];
      __int16 v37 = *((_WORD *)v6 + 20);
      uint64_t v38 = v6[6];
      char v39 = *((unsigned char *)v6 + 56);
      uint64_t v40 = v6[10];
      int v41 = *((_DWORD *)v6 + 22);
      char v42 = *((unsigned char *)v6 + 92);
      int v43 = *((_DWORD *)v6 + 24);
      char v44 = *((unsigned char *)v6 + 100);
      long long v45 = *(_OWORD *)(v6 + 1);
      long long v46 = *((_OWORD *)v6 + 4);
      long long v47 = *(_OWORD *)(v6 - 3);
      *((_OWORD *)v6 + 4) = *(_OWORD *)(v6 - 5);
      *((_OWORD *)v6 + 5) = v47;
      v6[12] = *(v6 - 1);
      long long v48 = *(_OWORD *)(v6 - 11);
      *(_OWORD *)long long v6 = *(_OWORD *)v11;
      *((_OWORD *)v6 + 1) = v48;
      long long v49 = *(_OWORD *)(v6 - 7);
      *((_OWORD *)v6 + 2) = *(_OWORD *)(v6 - 9);
      *((_OWORD *)v6 + 3) = v49;
      *int64_t v11 = v34;
      *((_OWORD *)v6 - 6) = v45;
      *(v6 - 10) = v35;
      *(v6 - 9) = v36;
      *((_WORD *)v6 - 32) = v37;
      *(v6 - 7) = v38;
      *((unsigned char *)v6 - 48) = v39;
      *(_OWORD *)(v6 - 5) = v46;
      *(v6 - 3) = v40;
      *((_DWORD *)v6 - 4) = v41;
      *((unsigned char *)v6 - 12) = v42;
      *((_DWORD *)v6 - 2) = v43;
      *((unsigned char *)v6 - 4) = v44;
      if (a3 == a1) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

unint64_t sub_1A67B6A50(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3;
  uint64_t v4 = a1[1];
  sub_1A679E10C(a3);
  sub_1A679E10C(v3);
  sub_1A679E10C(v3);
  uint64_t v5 = sub_1A68930D0();
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_163;
    }
    if (v4)
    {
      sub_1A679E10C(v3);
      sub_1A67B6474(0, v4, 1, a1, a2, v3);
      sub_1A67AE9C0(v3);
      sub_1A67AE9C0(v3);
      sub_1A67AE9C0(v3);
      return sub_1A67AE9C0(v3);
    }
LABEL_140:
    sub_1A67AE9C0(v3);
    sub_1A67AE9C0(v3);
    return sub_1A67AE9C0(v3);
  }
  uint64_t v182 = v5;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_162;
  }
  unint64_t v193 = v3;
  if (v4 <= 1)
  {
    uint64_t v185 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v181 = MEMORY[0x1E4FBC860];
    if (v4 == 1) {
      goto LABEL_12;
    }
    unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_126:
    if (v12 < 2)
    {
LABEL_137:
      swift_bridgeObjectRelease();
      *(void *)(v181 + 16) = 0;
      swift_bridgeObjectRelease();
      unint64_t v3 = v193;
    }
    else
    {
      v330 = (char *)*a1;
      if (!v330) {
        goto LABEL_170;
      }
      while (1)
      {
        unint64_t v166 = v12 - 1;
        unint64_t v167 = v12 - 2;
        uint64_t v192 = (uint64_t)v11;
        uint64_t v168 = *(void *)&v11[16 * v12];
        uint64_t v169 = *(void *)&v11[16 * v12 + 24];
        char v170 = &v330[104 * v168];
        uint64_t v171 = &v330[104 * *(void *)&v11[16 * v12 + 16]];
        uint64_t v172 = &v330[104 * v169];
        sub_1A679E10C(v193);
        sub_1A67B58A4(v170, v171, v172, v185, a2, v193);
        if (v209) {
          break;
        }
        sub_1A67AE9C0(v193);
        if (v169 < v168) {
          goto LABEL_158;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v173 = (char *)v192;
        }
        else {
          uint64_t v173 = sub_1A6779854(v192);
        }
        if (v167 >= *((void *)v173 + 2)) {
          goto LABEL_159;
        }
        v174 = v173 + 32;
        unint64_t v175 = &v173[16 * v167 + 32];
        *(void *)unint64_t v175 = v168;
        *((void *)v175 + 1) = v169;
        unint64_t v176 = *((void *)v173 + 2);
        if (v12 > v176) {
          goto LABEL_160;
        }
        uint64_t v177 = &v174[16 * v12];
        size_t v178 = 16 * (v176 - v12);
        uint64_t v179 = v173;
        memmove(&v174[16 * v166], v177, v178);
        int64_t v11 = v179;
        *((void *)v179 + 2) = v176 - 1;
        unint64_t v12 = v176 - 1;
        if (v176 <= 2) {
          goto LABEL_137;
        }
      }
      unint64_t v3 = v193;
LABEL_139:
      sub_1A67AE9C0(v3);
      swift_bridgeObjectRelease();
      *(void *)(v181 + 16) = 0;
      swift_bridgeObjectRelease();
    }
    goto LABEL_140;
  }
  uint64_t v7 = v6 >> 1;
  uint64_t v8 = sub_1A6892340();
  *(void *)(v8 + 16) = v7;
  uint64_t v181 = v8;
  uint64_t v185 = (char *)(v8 + 32);
LABEL_12:
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v186 = v4;
  uint64_t v197 = *a1;
  while (1)
  {
    uint64_t v190 = v11;
    uint64_t v13 = v9++;
    uint64_t v196 = v13;
    if (v9 >= v4) {
      goto LABEL_50;
    }
    uint64_t v187 = v9;
    uint64_t v14 = v10 + 104 * v9;
    uint64_t v15 = *(void *)(v14 + 8);
    unint64_t v274 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v266 = *(void *)(v14 + 24);
    uint64_t v17 = *(char **)(v14 + 32);
    char v263 = *(unsigned char *)(v14 + 40);
    char v260 = *(unsigned char *)(v14 + 41);
    uint64_t v257 = *(void *)(v14 + 48);
    char v254 = *(unsigned char *)(v14 + 56);
    uint64_t v19 = *(void *)(v14 + 64);
    id v18 = *(char **)(v14 + 72);
    uint64_t v20 = *(void **)(v14 + 80);
    int v251 = *(_DWORD *)(v14 + 88);
    char v248 = *(unsigned char *)(v14 + 92);
    char v242 = *(unsigned char *)(v14 + 100);
    int v245 = *(_DWORD *)(v14 + 96);
    uint64_t v21 = v10 + 104 * v13;
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t v270 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 16);
    uint64_t v239 = *(void *)(v21 + 24);
    uint64_t v24 = *(void *)(v21 + 32);
    char v236 = *(unsigned char *)(v21 + 40);
    char v233 = *(unsigned char *)(v21 + 41);
    uint64_t v230 = *(void *)(v21 + 48);
    char v227 = *(unsigned char *)(v21 + 56);
    uint64_t v25 = *(void *)(v21 + 64);
    uint64_t v26 = *(void *)(v21 + 72);
    uint64_t v207 = *(void **)(v21 + 80);
    char v221 = *(unsigned char *)(v21 + 92);
    int v224 = *(_DWORD *)(v21 + 88);
    char v215 = *(unsigned char *)(v21 + 100);
    int v218 = *(_DWORD *)(v21 + 96);
    uint64_t v280 = v15;
    swift_bridgeObjectRetain();
    uint64_t v284 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    v330 = v18;
    swift_bridgeObjectRetain();
    id v288 = v20;
    uint64_t v210 = v22;
    uint64_t v27 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v28 = v207;
    LODWORD(v18) = sub_1A67A80DC(v19, a2);
    swift_bridgeObjectRelease();
    uint64_t v29 = swift_bridgeObjectRetain();
    LODWORD(v23) = sub_1A67A80DC(v29, a2);
    swift_bridgeObjectRelease();
    BOOL v201 = (int)v18;
    if ((v18 ^ v23)) {
      goto LABEL_18;
    }
    uint64_t v204 = v27;
    uint64_t v30 = swift_bridgeObjectRetain();
    int v31 = sub_1A67A84D0(v30, a2);
    swift_bridgeObjectRelease();
    uint64_t v32 = swift_bridgeObjectRetain();
    int v33 = sub_1A67A84D0(v32, a2);
    swift_bridgeObjectRelease();
    BOOL v201 = v31;
    if ((v31 ^ v33))
    {
LABEL_18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v312 = v193;
      uint64_t v202 = sub_1A67A957C();
      uint64_t v34 = *(void *)(v202 + 16);
      if (v34)
      {
        uint64_t v35 = (unsigned char *)(v202 + 48);
        while (1)
        {
          char v329 = *v35;
          long long v328 = *((_OWORD *)v35 - 1);
          unint64_t v312 = v274;
          uint64_t v313 = v280;
          uint64_t v314 = v284;
          uint64_t v315 = v266;
          v316 = v17;
          char v317 = v263;
          char v318 = v260;
          uint64_t v319 = v257;
          char v320 = v254;
          uint64_t v321 = v19;
          v322 = v330;
          id v323 = v288;
          int v324 = v251;
          char v325 = v248;
          int v326 = v245;
          char v327 = v242;
          uint64_t v296 = v270;
          uint64_t v297 = v210;
          uint64_t v298 = v204;
          uint64_t v299 = v239;
          uint64_t v300 = v24;
          char v301 = v236;
          char v302 = v233;
          uint64_t v303 = v230;
          char v304 = v227;
          uint64_t v305 = v25;
          uint64_t v306 = v26;
          id v307 = v28;
          int v308 = v224;
          char v309 = v221;
          int v310 = v218;
          char v311 = v215;
          uint64_t v36 = sub_1A67A966C((uint64_t)&v312, &v296);
          if (v36) {
            break;
          }
          v35 += 24;
          if (!--v34) {
            goto LABEL_23;
          }
        }
        uint64_t v37 = v36;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_23:
        swift_bridgeObjectRelease();
        unint64_t v312 = v274;
        uint64_t v313 = v280;
        uint64_t v296 = v270;
        uint64_t v297 = v210;
        sub_1A6748030();
        uint64_t v37 = sub_1A6892AB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      BOOL v201 = v37 == -1;
    }
    uint64_t v10 = v197;
    uint64_t v9 = v196 + 2;
    uint64_t v4 = v186;
    uint64_t v38 = v187;
    if (v196 + 2 >= v186)
    {
LABEL_40:
      if (!v201) {
        goto LABEL_50;
      }
LABEL_41:
      if (v9 < v196) {
        goto LABEL_164;
      }
      if (v196 < v9)
      {
        uint64_t v64 = 104 * v9;
        uint64_t v213 = v9;
        uint64_t v65 = v9;
        uint64_t v66 = v196;
        uint64_t v67 = 104 * v196;
        do
        {
          if (v66 != --v65)
          {
            if (!v10) {
              goto LABEL_169;
            }
            uint64_t v68 = *(void *)(v10 + v67);
            uint64_t v69 = v10 + v64;
            uint64_t v70 = *(void *)(v10 + v67 + 24);
            uint64_t v71 = *(void *)(v10 + v67 + 32);
            __int16 v72 = *(_WORD *)(v10 + v67 + 40);
            uint64_t v278 = *(void *)(v10 + v67 + 48);
            char v276 = *(unsigned char *)(v10 + v67 + 56);
            v330 = *(char **)(v10 + v67 + 80);
            int v292 = *(_DWORD *)(v10 + v67 + 88);
            char v290 = *(unsigned char *)(v10 + v67 + 92);
            int v286 = *(_DWORD *)(v10 + v67 + 96);
            char v282 = *(unsigned char *)(v10 + v67 + 100);
            long long v268 = *(_OWORD *)(v10 + v67 + 8);
            long long v272 = *(_OWORD *)(v10 + v67 + 64);
            memmove((void *)(v10 + v67), (const void *)(v10 + v64 - 104), 0x68uLL);
            uint64_t v10 = v197;
            *(void *)(v69 - 104) = v68;
            *(_OWORD *)(v69 - 96) = v268;
            *(void *)(v69 - 80) = v70;
            *(void *)(v69 - 72) = v71;
            *(_WORD *)(v69 - 64) = v72;
            *(void *)(v69 - 56) = v278;
            *(unsigned char *)(v69 - 48) = v276;
            *(_OWORD *)(v69 - 40) = v272;
            *(void *)(v69 - 24) = v330;
            *(_DWORD *)(v69 - 16) = v292;
            *(unsigned char *)(v69 - 12) = v290;
            *(_DWORD *)(v69 - 8) = v286;
            *(unsigned char *)(v69 - 4) = v282;
          }
          ++v66;
          v64 -= 104;
          v67 += 104;
        }
        while (v66 < v65);
        uint64_t v9 = v213;
        uint64_t v4 = v186;
      }
      goto LABEL_50;
    }
    do
    {
      uint64_t v212 = v9;
      uint64_t v39 = v10 + 104 * v9;
      uint64_t v40 = *(void *)(v39 + 8);
      unint64_t v275 = *(void *)v39;
      uint64_t v41 = *(void *)(v39 + 16);
      uint64_t v267 = *(void *)(v39 + 24);
      char v42 = *(char **)(v39 + 32);
      char v264 = *(unsigned char *)(v39 + 40);
      char v261 = *(unsigned char *)(v39 + 41);
      uint64_t v258 = *(void *)(v39 + 48);
      char v255 = *(unsigned char *)(v39 + 56);
      uint64_t v44 = *(void *)(v39 + 64);
      int v43 = *(char **)(v39 + 72);
      long long v45 = *(void **)(v39 + 80);
      int v252 = *(_DWORD *)(v39 + 88);
      char v249 = *(unsigned char *)(v39 + 92);
      char v243 = *(unsigned char *)(v39 + 100);
      int v246 = *(_DWORD *)(v39 + 96);
      uint64_t v46 = v10 + 104 * v38;
      uint64_t v47 = *(void *)(v46 + 8);
      uint64_t v271 = *(void *)v46;
      uint64_t v48 = *(void *)(v46 + 16);
      uint64_t v240 = *(void *)(v46 + 24);
      uint64_t v49 = *(void *)(v46 + 32);
      char v237 = *(unsigned char *)(v46 + 40);
      char v234 = *(unsigned char *)(v46 + 41);
      uint64_t v231 = *(void *)(v46 + 48);
      char v228 = *(unsigned char *)(v46 + 56);
      uint64_t v51 = *(void *)(v46 + 64);
      uint64_t v50 = *(void *)(v46 + 72);
      uint64_t v205 = *(void **)(v46 + 80);
      char v222 = *(unsigned char *)(v46 + 92);
      int v225 = *(_DWORD *)(v46 + 88);
      char v216 = *(unsigned char *)(v46 + 100);
      int v219 = *(_DWORD *)(v46 + 96);
      uint64_t v281 = v40;
      swift_bridgeObjectRetain();
      uint64_t v285 = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v330 = v43;
      swift_bridgeObjectRetain();
      id v289 = v45;
      uint64_t v208 = v47;
      uint64_t v52 = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v277 = v50;
      swift_bridgeObjectRetain();
      id v53 = v205;
      int v54 = sub_1A67A80DC(v44, a2);
      swift_bridgeObjectRelease();
      uint64_t v55 = swift_bridgeObjectRetain();
      LODWORD(v48) = sub_1A67A80DC(v55, a2);
      swift_bridgeObjectRelease();
      if (((v54 ^ v48) & 1) != 0
        || (uint64_t v199 = v52,
            uint64_t v56 = swift_bridgeObjectRetain(),
            int v54 = sub_1A67A84D0(v56, a2),
            swift_bridgeObjectRelease(),
            uint64_t v57 = swift_bridgeObjectRetain(),
            int v58 = sub_1A67A84D0(v57, a2),
            swift_bridgeObjectRelease(),
            ((v54 ^ v58) & 1) != 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v312 = v193;
        uint64_t v194 = sub_1A67A957C();
        uint64_t v59 = *(void *)(v194 + 16);
        if (v59)
        {
          char v60 = (unsigned char *)(v194 + 48);
          while (1)
          {
            char v329 = *v60;
            long long v328 = *((_OWORD *)v60 - 1);
            unint64_t v312 = v275;
            uint64_t v313 = v281;
            uint64_t v314 = v285;
            uint64_t v315 = v267;
            v316 = v42;
            char v317 = v264;
            char v318 = v261;
            uint64_t v319 = v258;
            char v320 = v255;
            uint64_t v321 = v44;
            v322 = v330;
            id v323 = v289;
            int v324 = v252;
            char v325 = v249;
            int v326 = v246;
            char v327 = v243;
            uint64_t v296 = v271;
            uint64_t v297 = v208;
            uint64_t v298 = v199;
            uint64_t v299 = v240;
            uint64_t v300 = v49;
            char v301 = v237;
            char v302 = v234;
            uint64_t v303 = v231;
            char v304 = v228;
            uint64_t v305 = v51;
            uint64_t v306 = v277;
            id v307 = v53;
            int v308 = v225;
            char v309 = v222;
            int v310 = v219;
            char v311 = v216;
            uint64_t v61 = sub_1A67A966C((uint64_t)&v312, &v296);
            if (v61) {
              break;
            }
            v60 += 24;
            if (!--v59) {
              goto LABEL_37;
            }
          }
          uint64_t v63 = v61;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          int v54 = v63 == -1;
        }
        else
        {
LABEL_37:
          swift_bridgeObjectRelease();
          unint64_t v312 = v275;
          uint64_t v313 = v281;
          uint64_t v296 = v271;
          uint64_t v297 = v208;
          sub_1A6748030();
          uint64_t v62 = sub_1A6892AB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          int v54 = v62 == -1;
        }
      }
      uint64_t v10 = v197;
      uint64_t v9 = v212;
      if ((v201 ^ v54))
      {
        uint64_t v4 = v186;
        goto LABEL_40;
      }
      uint64_t v38 = v212;
      uint64_t v9 = v212 + 1;
      uint64_t v4 = v186;
    }
    while (v212 + 1 != v186);
    uint64_t v9 = v186;
    if (v201) {
      goto LABEL_41;
    }
LABEL_50:
    if (v9 >= v4) {
      goto LABEL_76;
    }
    if (__OFSUB__(v9, v196)) {
      goto LABEL_161;
    }
    if (v9 - v196 >= v182) {
      goto LABEL_76;
    }
    uint64_t v73 = v196 + v182;
    if (__OFADD__(v196, v182)) {
      goto LABEL_165;
    }
    if (v73 >= v4) {
      uint64_t v73 = v4;
    }
    if (v73 < v196) {
      break;
    }
    uint64_t v184 = v73;
    if (v9 != v73)
    {
      do
      {
        uint64_t v188 = v9;
        uint64_t v74 = v9;
        do
        {
          uint64_t v200 = v74;
          uint64_t v75 = v10 + 104 * v74;
          unint64_t v273 = *(void *)v75;
          uint64_t v76 = *(void *)(v75 + 16);
          uint64_t v262 = *(void *)(v75 + 24);
          uint64_t v77 = *(char **)(v75 + 32);
          char v259 = *(unsigned char *)(v75 + 40);
          char v256 = *(unsigned char *)(v75 + 41);
          uint64_t v253 = *(void *)(v75 + 48);
          uint64_t v78 = *(void *)(v75 + 64);
          uint64_t v79 = *(char **)(v75 + 72);
          v293 = *(void **)(v75 + 80);
          int v247 = *(_DWORD *)(v75 + 88);
          char v250 = *(unsigned char *)(v75 + 56);
          char v244 = *(unsigned char *)(v75 + 92);
          char v238 = *(unsigned char *)(v75 + 100);
          int v241 = *(_DWORD *)(v75 + 96);
          uint64_t v80 = (_OWORD *)(v75 - 104);
          uint64_t v82 = *(void *)(v75 - 96);
          uint64_t v81 = *(void *)(v75 - 88);
          uint64_t v83 = *(void *)(v75 - 72);
          uint64_t v235 = *(void *)(v75 - 80);
          char v229 = *(unsigned char *)(v75 - 63);
          char v232 = *(unsigned char *)(v75 - 64);
          uint64_t v226 = *(void *)(v75 - 56);
          uint64_t v84 = *(void *)(v75 - 32);
          uint64_t v203 = *(void *)(v75 - 40);
          v265 = *(void **)(v75 - 24);
          uint64_t v269 = *(void *)(v75 - 104);
          int v220 = *(_DWORD *)(v75 - 16);
          char v223 = *(unsigned char *)(v75 - 48);
          char v217 = *(unsigned char *)(v75 - 12);
          int v214 = *(_DWORD *)(v75 - 8);
          char v211 = *(unsigned char *)(v75 - 4);
          uint64_t v287 = *(void *)(v75 + 8);
          swift_bridgeObjectRetain();
          uint64_t v291 = v76;
          swift_bridgeObjectRetain();
          v330 = v77;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          id v294 = v293;
          swift_bridgeObjectRetain();
          uint64_t v279 = v81;
          swift_bridgeObjectRetain();
          uint64_t v206 = v83;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v283 = v84;
          swift_bridgeObjectRetain();
          id v85 = v265;
          int v86 = sub_1A67A80DC(v78, a2);
          swift_bridgeObjectRelease();
          uint64_t v87 = swift_bridgeObjectRetain();
          LODWORD(v83) = sub_1A67A80DC(v87, a2);
          swift_bridgeObjectRelease();
          if (((v86 ^ v83) & 1) != 0
            || (uint64_t v88 = swift_bridgeObjectRetain(),
                int v86 = sub_1A67A84D0(v88, a2),
                swift_bridgeObjectRelease(),
                uint64_t v89 = swift_bridgeObjectRetain(),
                int v90 = sub_1A67A84D0(v89, a2),
                swift_bridgeObjectRelease(),
                ((v86 ^ v90) & 1) != 0))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            uint64_t v10 = v197;
            uint64_t v91 = v200;
            if ((v86 & 1) == 0) {
              break;
            }
          }
          else
          {
            unint64_t v312 = v193;
            uint64_t v195 = sub_1A67A957C();
            uint64_t v92 = *(void *)(v195 + 16);
            if (v92)
            {
              char v93 = (unsigned char *)(v195 + 48);
              while (1)
              {
                char v329 = *v93;
                long long v328 = *((_OWORD *)v93 - 1);
                unint64_t v312 = v273;
                uint64_t v313 = v287;
                uint64_t v314 = v291;
                uint64_t v315 = v262;
                v316 = v330;
                char v317 = v259;
                char v318 = v256;
                uint64_t v319 = v253;
                char v320 = v250;
                uint64_t v321 = v78;
                v322 = v79;
                id v323 = v294;
                int v324 = v247;
                char v325 = v244;
                int v326 = v241;
                char v327 = v238;
                uint64_t v296 = v269;
                uint64_t v297 = v82;
                uint64_t v298 = v279;
                uint64_t v299 = v235;
                uint64_t v300 = v206;
                char v301 = v232;
                char v302 = v229;
                uint64_t v303 = v226;
                char v304 = v223;
                uint64_t v305 = v203;
                uint64_t v306 = v283;
                id v307 = v85;
                int v308 = v220;
                char v309 = v217;
                int v310 = v214;
                char v311 = v211;
                uint64_t v94 = sub_1A67A966C((uint64_t)&v312, &v296);
                if (v94) {
                  break;
                }
                v93 += 24;
                if (!--v92) {
                  goto LABEL_69;
                }
              }
              uint64_t v95 = v94;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
LABEL_69:
              swift_bridgeObjectRelease();
              unint64_t v312 = v273;
              uint64_t v313 = v287;
              uint64_t v296 = v269;
              uint64_t v297 = v82;
              sub_1A6748030();
              uint64_t v95 = sub_1A6892AB0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            uint64_t v10 = v197;
            uint64_t v91 = v200;
            if (v95 != -1) {
              break;
            }
          }
          if (!v10) {
            goto LABEL_167;
          }
          uint64_t v74 = v91 - 1;
          unint64_t v96 = *(void *)v75;
          uint64_t v97 = *(void *)(v75 + 24);
          uint64_t v98 = *(void *)(v75 + 32);
          __int16 v99 = *(_WORD *)(v75 + 40);
          uint64_t v100 = *(void *)(v75 + 48);
          char v101 = *(unsigned char *)(v75 + 56);
          uint64_t v102 = *(void *)(v75 + 80);
          int v103 = *(_DWORD *)(v75 + 88);
          char v104 = *(unsigned char *)(v75 + 92);
          int v105 = *(_DWORD *)(v75 + 96);
          char v106 = *(unsigned char *)(v75 + 100);
          long long v107 = *(_OWORD *)(v75 + 8);
          long long v108 = *(_OWORD *)(v75 + 64);
          long long v109 = *(_OWORD *)(v75 - 24);
          *(_OWORD *)(v75 + 64) = *(_OWORD *)(v75 - 40);
          *(_OWORD *)(v75 + 80) = v109;
          *(void *)(v75 + 96) = *(void *)(v75 - 8);
          long long v110 = *(_OWORD *)(v75 - 88);
          *(_OWORD *)uint64_t v75 = *v80;
          *(_OWORD *)(v75 + 16) = v110;
          long long v111 = *(_OWORD *)(v75 - 56);
          *(_OWORD *)(v75 + 32) = *(_OWORD *)(v75 - 72);
          *(_OWORD *)(v75 + 48) = v111;
          *(void *)uint64_t v80 = v96;
          *(_OWORD *)(v75 - 96) = v107;
          *(void *)(v75 - 80) = v97;
          *(void *)(v75 - 72) = v98;
          *(_WORD *)(v75 - 64) = v99;
          *(void *)(v75 - 56) = v100;
          *(unsigned char *)(v75 - 48) = v101;
          *(_OWORD *)(v75 - 40) = v108;
          *(void *)(v75 - 24) = v102;
          *(_DWORD *)(v75 - 16) = v103;
          *(unsigned char *)(v75 - 12) = v104;
          *(_DWORD *)(v75 - 8) = v105;
          *(unsigned char *)(v75 - 4) = v106;
        }
        while (v74 != v196);
        uint64_t v9 = v188 + 1;
      }
      while (v188 + 1 != v184);
      uint64_t v9 = v184;
    }
LABEL_76:
    if (v9 < v196) {
      goto LABEL_157;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      int64_t v11 = v190;
    }
    else {
      int64_t v11 = sub_1A6779758(0, *((void *)v190 + 2) + 1, 1, v190);
    }
    unint64_t v113 = *((void *)v11 + 2);
    unint64_t v112 = *((void *)v11 + 3);
    unint64_t v12 = v113 + 1;
    uint64_t v10 = v197;
    if (v113 >= v112 >> 1)
    {
      int v165 = sub_1A6779758((char *)(v112 > 1), v113 + 1, 1, v11);
      uint64_t v10 = v197;
      int64_t v11 = v165;
    }
    *((void *)v11 + 2) = v12;
    id v114 = v11 + 32;
    int v115 = &v11[16 * v113 + 32];
    *(void *)int v115 = v196;
    *((void *)v115 + 1) = v9;
    if (v113)
    {
      uint64_t v4 = v186;
      uint64_t v189 = v9;
      uint64_t v191 = v11;
      v295 = v11 + 32;
      while (1)
      {
        unint64_t v116 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v121 = &v114[16 * v12];
          uint64_t v122 = *((void *)v121 - 8);
          uint64_t v123 = *((void *)v121 - 7);
          BOOL v127 = __OFSUB__(v123, v122);
          uint64_t v124 = v123 - v122;
          if (v127) {
            goto LABEL_146;
          }
          uint64_t v126 = *((void *)v121 - 6);
          uint64_t v125 = *((void *)v121 - 5);
          BOOL v127 = __OFSUB__(v125, v126);
          uint64_t v119 = v125 - v126;
          char v120 = v127;
          if (v127) {
            goto LABEL_147;
          }
          unint64_t v128 = v12 - 2;
          uint64_t v129 = &v114[16 * v12 - 32];
          uint64_t v131 = *(void *)v129;
          uint64_t v130 = *((void *)v129 + 1);
          BOOL v127 = __OFSUB__(v130, v131);
          uint64_t v132 = v130 - v131;
          if (v127) {
            goto LABEL_148;
          }
          BOOL v127 = __OFADD__(v119, v132);
          uint64_t v133 = v119 + v132;
          if (v127) {
            goto LABEL_150;
          }
          if (v133 >= v124)
          {
            int v151 = &v114[16 * v116];
            uint64_t v153 = *(void *)v151;
            uint64_t v152 = *((void *)v151 + 1);
            BOOL v127 = __OFSUB__(v152, v153);
            uint64_t v154 = v152 - v153;
            if (v127) {
              goto LABEL_156;
            }
            BOOL v144 = v119 < v154;
            goto LABEL_114;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v145 = *((void *)v11 + 4);
            uint64_t v146 = *((void *)v11 + 5);
            BOOL v127 = __OFSUB__(v146, v145);
            uint64_t v138 = v146 - v145;
            char v139 = v127;
            goto LABEL_108;
          }
          uint64_t v118 = *((void *)v11 + 4);
          uint64_t v117 = *((void *)v11 + 5);
          BOOL v127 = __OFSUB__(v117, v118);
          uint64_t v119 = v117 - v118;
          char v120 = v127;
        }
        if (v120) {
          goto LABEL_149;
        }
        unint64_t v128 = v12 - 2;
        id v134 = &v114[16 * v12 - 32];
        uint64_t v136 = *(void *)v134;
        uint64_t v135 = *((void *)v134 + 1);
        BOOL v137 = __OFSUB__(v135, v136);
        uint64_t v138 = v135 - v136;
        char v139 = v137;
        if (v137) {
          goto LABEL_151;
        }
        uint64_t v140 = &v114[16 * v116];
        uint64_t v142 = *(void *)v140;
        uint64_t v141 = *((void *)v140 + 1);
        BOOL v127 = __OFSUB__(v141, v142);
        uint64_t v143 = v141 - v142;
        if (v127) {
          goto LABEL_153;
        }
        if (__OFADD__(v138, v143)) {
          goto LABEL_155;
        }
        if (v138 + v143 >= v119)
        {
          BOOL v144 = v119 < v143;
LABEL_114:
          if (v144) {
            unint64_t v116 = v128;
          }
          goto LABEL_116;
        }
LABEL_108:
        if (v139) {
          goto LABEL_152;
        }
        uint64_t v147 = &v114[16 * v116];
        uint64_t v149 = *(void *)v147;
        uint64_t v148 = *((void *)v147 + 1);
        BOOL v127 = __OFSUB__(v148, v149);
        uint64_t v150 = v148 - v149;
        if (v127) {
          goto LABEL_154;
        }
        if (v150 < v138) {
          goto LABEL_14;
        }
LABEL_116:
        unint64_t v155 = v116 - 1;
        if (v116 - 1 >= v12)
        {
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
          goto LABEL_166;
        }
        if (!v10) {
          goto LABEL_168;
        }
        uint64_t v156 = &v114[16 * v155];
        uint64_t v157 = *(void *)v156;
        unint64_t v158 = v116;
        char v159 = &v114[16 * v116];
        uint64_t v160 = *((void *)v159 + 1);
        char v161 = (char *)(v10 + 104 * *(void *)v156);
        v330 = (char *)(v10 + 104 * *(void *)v159);
        uint64_t v162 = (char *)(v10 + 104 * v160);
        unint64_t v3 = v193;
        sub_1A679E10C(v193);
        sub_1A67B58A4(v161, v330, v162, v185, a2, v193);
        if (v209) {
          goto LABEL_139;
        }
        sub_1A67AE9C0(v193);
        if (v160 < v157) {
          goto LABEL_143;
        }
        if (v158 > *((void *)v191 + 2)) {
          goto LABEL_144;
        }
        unint64_t v163 = v158;
        *(void *)uint64_t v156 = v157;
        id v114 = v295;
        *(void *)&v295[16 * v155 + 8] = v160;
        unint64_t v164 = *((void *)v191 + 2);
        if (v163 >= v164) {
          goto LABEL_145;
        }
        unint64_t v12 = v164 - 1;
        memmove(v159, v159 + 16, 16 * (v164 - 1 - v163));
        int64_t v11 = v191;
        *((void *)v191 + 2) = v164 - 1;
        BOOL v144 = v164 > 2;
        uint64_t v4 = v186;
        uint64_t v9 = v189;
        uint64_t v10 = v197;
        if (!v144) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v4 = v186;
LABEL_14:
    if (v9 >= v4) {
      goto LABEL_126;
    }
  }
LABEL_166:
  __break(1u);
LABEL_167:
  sub_1A67AE9C0(v193);
  sub_1A67AE9C0(v193);
  sub_1A67AE9C0(v193);
  __break(1u);
LABEL_168:
  sub_1A67AE9C0(v193);
  sub_1A67AE9C0(v193);
  sub_1A67AE9C0(v193);
  __break(1u);
LABEL_169:
  sub_1A67AE9C0(v193);
  sub_1A67AE9C0(v193);
  sub_1A67AE9C0(v193);
  __break(1u);
LABEL_170:
  sub_1A67AE9C0(v193);
  sub_1A67AE9C0(v193);
  unint64_t result = sub_1A67AE9C0(v193);
  __break(1u);
  return result;
}

unint64_t sub_1A67B8144(char **a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = *a1;
  sub_1A679E10C(a3);
  sub_1A679E10C(a3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_1A67B4D0C((uint64_t)v6);
  }
  uint64_t v7 = *((void *)v6 + 2);
  v9[0] = (uint64_t)(v6 + 32);
  v9[1] = v7;
  sub_1A679E10C(a3);
  sub_1A67B6A50(v9, a2, a3);
  sub_1A67AE9C0(a3);
  *a1 = v6;
  sub_1A67AE9C0(a3);
  return sub_1A67AE9C0(a3);
}

uint64_t sub_1A67B8200(uint64_t a1)
{
  return sub_1A67A7D88(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1A67B8230()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A67B8268(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A677B9EC;
  return sub_1A679E49C(a1, v1);
}

uint64_t sub_1A67B8304(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96C2648 + dword_1E96C2648);
  return v6(a1, v4);
}

unint64_t sub_1A67B83BC()
{
  unint64_t result = qword_1EB67A258;
  if (!qword_1EB67A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB67A258);
  }
  return result;
}

unint64_t sub_1A67B8410()
{
  unint64_t result = qword_1EB67A270;
  if (!qword_1EB67A270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB67A270);
  }
  return result;
}

id sub_1A67B8488(uint64_t a1)
{
  return sub_1A67B8528(a1, 0xD000000000000063, 0x80000001A68CE040, &qword_1E96D61A8);
}

id sub_1A67B84B0(uint64_t a1)
{
  return sub_1A67B8528(a1, 0xD000000000000083, 0x80000001A68CE360, &qword_1E96D61B0);
}

id sub_1A67B84D8(uint64_t a1)
{
  return sub_1A67B8528(a1, 0xD00000000000001CLL, 0x80000001A68CE340, &qword_1E96D61B8);
}

id sub_1A67B8500(uint64_t a1)
{
  return sub_1A67B8528(a1, 0xD000000000000064, 0x80000001A68CE2A0, &qword_1E96D61C0);
}

id sub_1A67B8528(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id result = sub_1A67BACE4(a2, a3, 0);
  *a4 = result;
  return result;
}

BOOL sub_1A67B85B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A67B85C8()
{
  return sub_1A6893210();
}

uint64_t sub_1A67B85F4()
{
  return sub_1A6893250();
}

void *sub_1A67B8638()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void sub_1A67B867C(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t (*sub_1A67B86C4())()
{
  return j_j__swift_endAccess;
}

void *sub_1A67B8718()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void sub_1A67B875C(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = a1;
}

uint64_t (*sub_1A67B87A4())()
{
  return j_j__swift_endAccess;
}

void *sub_1A67B87F8()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void sub_1A67B883C(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void **)(v1 + 56);
  *(void *)(v1 + 56) = a1;
}

uint64_t (*sub_1A67B8884())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67B88D8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_1A67B890C(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 64) = a1;
  return result;
}

uint64_t (*sub_1A67B894C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67B89A0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t sub_1A67B89D4(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 65) = a1;
  return result;
}

uint64_t (*sub_1A67B8A14())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67B8A68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 312))();
  *a2 = result;
  return result;
}

uint64_t sub_1A67B8ABC(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 320);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A67B8B18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A67B8B50(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A67B8B98())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A67B8BEC()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_1A67B8C20(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 80) = a1;
  return result;
}

uint64_t (*sub_1A67B8C60())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67B8CB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A67B8CEC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A67B8D34())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67B8D88()
{
  swift_beginAccess();
  return *(void *)(v0 + 96);
}

uint64_t sub_1A67B8DBC(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_1A67B8DFC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67B8E50()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 384))();
  uint64_t result = sub_1A6892100();
  if (result < v1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = sub_1A6892120();
    uint64_t result = sub_1A6892120();
    if ((unint64_t)result >> 14 >= v3 >> 14)
    {
      uint64_t v4 = sub_1A6892240();
      uint64_t v5 = MEMORY[0x1AD0BF180](v4);
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
  return result;
}

void sub_1A67B8F34()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 288))())
  {
    if (qword_1E96C7648 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1E96D61B8;
    id v2 = (void (**)(void))(*(void *)v0 + 408);
    unint64_t v3 = *v2;
    (*v2)();
    uint64_t v4 = (void *)sub_1A6891FD0();
    uint64_t v5 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v3)(v5);
    uint64_t v6 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v3)(v6);
    sub_1A6741AD0(&qword_1E96C2660);
    sub_1A67BADC0();
    sub_1A6748030();
    uint64_t v7 = sub_1A68929D0();
    id v9 = objc_msgSend(v1, sel_matchesInString_options_range_, v4, 0, v7, v8);

    sub_1A67BAE1C();
    unint64_t v10 = sub_1A68922E0();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1A6892EB0();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_6:
        if ((v10 & 0xC000000000000001) != 0)
        {
          id v11 = (id)MEMORY[0x1AD0BFD30](0, v10);
        }
        else
        {
          if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          id v11 = *(id *)(v10 + 32);
        }
        unint64_t v12 = v11;
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_range);
        uint64_t v14 = v13;

        v3();
        if ((v14 & 0x8000000000000000) == 0)
        {
          unint64_t v15 = sub_1A6892120();
          if ((unint64_t)sub_1A6892120() >> 14 >= v15 >> 14)
          {
            uint64_t v16 = sub_1A6892240();
            MEMORY[0x1AD0BF180](v16);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_18;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
    }
    else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A67B9210()
{
  if (qword_1E96C7638 != -1) {
    swift_once();
  }
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 288);
  id v2 = (id)qword_1E96D61A8;
  if ((v1() & 1) == 0) {
    goto LABEL_6;
  }
  if (qword_1E96C7640 != -1) {
    goto LABEL_21;
  }
  while (1)
  {
    id v3 = (id)qword_1E96D61B0;

    id v2 = v3;
LABEL_6:
    uint64_t v4 = (void (**)(void))(*(void *)v0 + 408);
    uint64_t v5 = *v4;
    (*v4)();
    uint64_t v6 = (void *)sub_1A6891FD0();
    uint64_t v7 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v5)(v7);
    uint64_t v8 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v5)(v8);
    sub_1A6741AD0(&qword_1E96C2660);
    sub_1A67BADC0();
    sub_1A6748030();
    uint64_t v9 = sub_1A68929D0();
    id v11 = objc_msgSend(v2, sel_matchesInString_options_range_, v6, 0, v9, v10);

    sub_1A67BAE1C();
    unint64_t v12 = sub_1A68922E0();

    if (v12 >> 62) {
      break;
    }
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_15;
    }
LABEL_8:
    if ((v12 & 0xC000000000000001) != 0)
    {
      id v13 = (id)MEMORY[0x1AD0BFD30](0, v12);
    }
    else
    {
      if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      id v13 = *(id *)(v12 + 32);
    }
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v5)(v15);
    uint64_t v0 = v16;
    if (((unint64_t)objc_msgSend(v14, sel_range) & 0x8000000000000000) != 0) {
      goto LABEL_19;
    }
    unint64_t v17 = sub_1A6892120();
    if ((unint64_t)sub_1A6892120() >> 14 >= v17 >> 14)
    {
      uint64_t v18 = sub_1A6892240();
      uint64_t v19 = MEMORY[0x1AD0BF180](v18);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1A6892EB0();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_8;
  }
LABEL_15:
  uint64_t v21 = swift_bridgeObjectRelease();
  uint64_t v19 = ((uint64_t (*)(uint64_t))v5)(v21);

  return v19;
}

uint64_t sub_1A67B9548(uint64_t a1)
{
  if ((*(unsigned __int8 (**)(void))(*(void *)v1 + 336))())
  {
    sub_1A673E788(a1, (uint64_t)v13);
    uint64_t v3 = (*(uint64_t (**)(unsigned char *))(*(void *)v1 + 376))(v12);
  }
  else
  {
    sub_1A673E788(a1, (uint64_t)v13);
    uint64_t v3 = (*(uint64_t (**)(unsigned char *))(*(void *)v1 + 328))(v12);
  }
  uint64_t v5 = (uint64_t (*)(unsigned char *, void))v3;
  uint64_t v6 = v4;
  uint64_t v7 = *v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1A676207C(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_1A676207C((void *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  v7[2] = v10 + 1;
  sub_1A673E770(v13, (uint64_t)&v7[5 * v10 + 4]);
  return v5(v12, 0);
}

uint64_t sub_1A67B96D0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))(MEMORY[0x1E4FBC860]);
}

void sub_1A67B9704()
{
  if (qword_1E96C7650 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1E96D61C0;
  id v2 = (void (**)(void))(*(void *)v0 + 408);
  uint64_t v3 = *v2;
  uint64_t v4 = (uint64_t)v2;
  (*v2)();
  uint64_t v5 = (void *)sub_1A6891FD0();
  uint64_t v6 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v3)(v6);
  uint64_t v7 = swift_bridgeObjectRelease();
  v73[5] = 15;
  v73[0] = ((uint64_t (*)(uint64_t))v3)(v7);
  v73[1] = v8;
  sub_1A6741AD0(&qword_1E96C2660);
  id v9 = (id)sub_1A67BADC0();
  sub_1A6748030();
  uint64_t v10 = sub_1A68929D0();
  id v12 = objc_msgSend(v1, sel_matchesInString_options_range_, v5, 0, v10, v11);

  sub_1A67BAE1C();
  unint64_t v13 = sub_1A68922E0();

  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void **)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_5;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    int v55 = sub_1A6892850();
    uint64_t v14 = sub_1A67CC544();
    char v56 = sub_1A67BBF28();
    sub_1A67CC5A0(v55, (uint64_t)v14, v56 & 1, 0xD000000000000080, 0x80000001A68CE0B0, 0x6D6F436573726170, 0xEE002928646E616DLL, 0xD00000000000001ELL, 0x80000001A68CE180, MEMORY[0x1E4FBC860]);
LABEL_40:

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_1A6892EB0();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_39;
  }
LABEL_5:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x1AD0BFD30](0, v13);
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    id v15 = *(id *)(v13 + 32);
  }
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  unint64_t v17 = (void *)sub_1A6891FD0();
  objc_msgSend(v16, sel_rangeWithName_, v17);

  v3();
  id v9 = (id)sub_1A6892810();
  char v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1A6891FD0();
  __int16 v72 = v16;
  objc_msgSend(v16, sel_rangeWithName_, v20);

  v3();
  sub_1A6892810();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v25 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v3)(v25);
  if (v19)
  {
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v26 = v3;
  uint64_t v27 = sub_1A6892240();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v4 = MEMORY[0x1AD0BF180](v27, v29, v31, v33);
  id v9 = v34;
  uint64_t v35 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v26)(v35);
  if (v24)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  uint64_t v36 = sub_1A6892240();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  MEMORY[0x1AD0BF180](v36, v38, v40, v42);
  swift_bridgeObjectRelease();
  if (v4 == 1702125938 && v9 == (id)0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v72;
LABEL_15:
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED8]), sel_init);
    objc_msgSend(v9, sel_setNumberStyle_, 1);
    int v43 = (void *)sub_1A6891FD0();
    uint64_t v4 = (uint64_t)objc_msgSend(v9, sel_numberFromString_, v43);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t))(*(void *)v0 + 176))(v4);
    goto LABEL_16;
  }
  uint64_t v14 = v72;
  if (sub_1A6893120())
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (v4 == 1935762032 && v9 == (id)0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED8]), sel_init);
    objc_msgSend(v9, sel_setNumberStyle_, 1);
    uint64_t v49 = (void *)sub_1A6891FD0();
    uint64_t v4 = (uint64_t)objc_msgSend(v9, sel_numberFromString_, v49);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t))(*(void *)v0 + 224))(v4);
    goto LABEL_16;
  }
  if (v4 == 1685024112 && v9 == (id)0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED8]), sel_init);
    objc_msgSend(v9, sel_setNumberStyle_, 1);
    uint64_t v50 = (void *)sub_1A6891FD0();
    uint64_t v4 = (uint64_t)objc_msgSend(v9, sel_numberFromString_, v50);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t))(*(void *)v0 + 248))(v4);
    goto LABEL_16;
  }
  if (v4 == 1835822966 && v9 == (id)0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED8]), sel_init);
    objc_msgSend(v9, sel_setNumberStyle_, 1);
    uint64_t v51 = (void *)sub_1A6891FD0();
    uint64_t v4 = (uint64_t)objc_msgSend(v9, sel_numberFromString_, v51);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t))(*(void *)v0 + 200))(v4);
    goto LABEL_16;
  }
  if ((v4 != 1668181107 || v9 != (id)0xE400000000000000) && (sub_1A6893120() & 1) == 0)
  {
    if (v4 == 1918986339 && v9 == (id)0xE400000000000000) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED8]), sel_init);
  objc_msgSend(v9, sel_setNumberStyle_, 1);
  uint64_t v4 = sub_1A6891FD0();
  id v52 = objc_msgSend(v9, sel_numberFromString_, v4);
  swift_bridgeObjectRelease();

  if (v52)
  {
    objc_msgSend(v52, sel_floatValue);
    float v54 = v53;

    v73[3] = &type metadata for TTSMarkup.Pause;
    v73[4] = &protocol witness table for TTSMarkup.Pause;
    v73[0] = swift_allocObject();
    TTSMarkup.Pause.init(seconds:)(v73[0] + 16, v54 / 1000.0);
    (*(void (**)(void *))(*(void *)v0 + 432))(v73);
    sub_1A6741A24((uint64_t)v73);
    while (1)
    {
      while (1)
      {
LABEL_16:
        objc_msgSend(v14, sel_range);
        uint64_t v45 = v44;
        uint64_t v46 = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v0 + 400))(v73);
        if (!__OFADD__(*v47, v45))
        {
          *v47 += v45;
          uint64_t v48 = v46(v73, 0);
          (*(void (**)(uint64_t))(*(void *)v0 + 464))(v48);
          goto LABEL_40;
        }
LABEL_43:
        __break(1u);
LABEL_44:
        if ((sub_1A6893120() & 1) == 0) {
          break;
        }
LABEL_45:
        swift_bridgeObjectRelease();
        uint64_t v4 = 1819440236;
        id v9 = (id)sub_1A68920A0();
        uint64_t v58 = v57;
        swift_bridgeObjectRelease();
        if (v9 == (id)1819440236 && v58 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          char v59 = 1;
        }
        else
        {
          char v59 = sub_1A6893120();
          swift_bridgeObjectRelease();
        }
        (*(void (**)(void))(*(void *)v0 + 272))(v59 & 1);
      }
      if (v4 == 1919053166 && v9 == (id)0xE400000000000000 || (sub_1A6893120() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = 1819440236;
        id v9 = (id)sub_1A68920A0();
        uint64_t v61 = v60;
        swift_bridgeObjectRelease();
        if (v9 == (id)1819440236 && v61 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          char v62 = 1;
        }
        else
        {
          char v62 = sub_1A6893120();
          swift_bridgeObjectRelease();
        }
        (*(void (**)(void))(*(void *)v0 + 296))(v62 & 1);
      }
      else
      {
        if (v4 == 1954051171 && v9 == (id)0xE400000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v4 = sub_1A6893120();
          swift_bridgeObjectRelease();
          if ((v4 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            int v64 = sub_1A6892860();
            id v65 = sub_1A67CC544();
            char v66 = sub_1A67BBF28();
            uint64_t v67 = 0xD00000000000001BLL;
            uint64_t v68 = MEMORY[0x1E4FBC860];
            uint64_t v69 = "Unhandled PlainTalk Command";
LABEL_72:
            sub_1A67CC5A0(v64, (uint64_t)v65, v66 & 1, 0xD000000000000080, 0x80000001A68CE0B0, 0x6D6F436573726170, 0xEE002928646E616DLL, v67, (unint64_t)(v69 - 32) | 0x8000000000000000, v68);

            goto LABEL_58;
          }
        }
        uint64_t v4 = 1886090100;
        id v9 = (id)sub_1A68920A0();
        uint64_t v22 = v63;
        swift_bridgeObjectRelease();
        if (v9 == (id)1886090103 && v22 == 0xE400000000000000
          || (sub_1A6893120() & 1) != 0
          || v9 == (id)1886090100 && v22 == 0xE400000000000000
          || (sub_1A6893120() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t))(*(void *)v0 + 344))(1);
          goto LABEL_58;
        }
        if (v9 == (id)1685221239 && v22 == 0xE400000000000000
          || (sub_1A6893120() & 1) != 0
          || v9 == (id)1954047348 && v22 == 0xE400000000000000
          || (sub_1A6893120() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t))(*(void *)v0 + 344))(2);
        }
        else
        {
LABEL_83:
          if (v9 == (id)1836216174 && v22 == 0xE400000000000000)
          {
            uint64_t v70 = swift_bridgeObjectRelease();
          }
          else
          {
            char v71 = sub_1A6893120();
            uint64_t v70 = swift_bridgeObjectRelease();
            if ((v71 & 1) == 0)
            {
              int v64 = sub_1A6892860();
              id v65 = sub_1A67CC544();
              char v66 = sub_1A67BBF28();
              uint64_t v67 = 0xD000000000000015;
              uint64_t v68 = MEMORY[0x1E4FBC860];
              uint64_t v69 = "Unexpected ctxt value";
              goto LABEL_72;
            }
          }
          (*(void (**)(uint64_t))(*(void *)v0 + 440))(v70);
          (*(void (**)(void))(*(void *)v0 + 344))(0);
        }
      }
LABEL_58:
      uint64_t v14 = v72;
    }
  }
  __break(1u);
}

void sub_1A67BA618()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 424))();
  uint64_t v3 = v2;
  if ((*(uint64_t (**)(void))(*(void *)v0 + 288))())
  {
    uint64_t v4 = (void (**)(void))(*(void *)v0 + 416);
    uint64_t v5 = *v4;
    (*v4)();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
      uint64_t v8 = swift_bridgeObjectRelease();
      uint64_t v1 = ((uint64_t (*)(uint64_t))v5)(v8);
      uint64_t v3 = v9;
    }
  }
  if (!v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = TTSMarkup.SpeechText.init(_:)(v1, v3, v30);
  id v12 = (void *)v30[0];
  uint64_t v11 = v30[1];
  uint64_t v14 = v30[2];
  unint64_t v13 = v31;
  id v15 = *(uint64_t (**)(void))(*(void *)v0 + 168);
  uint64_t v16 = (void *)((uint64_t (*)(uint64_t))v15)(v10);

  if (v16)
  {
    unint64_t v17 = (void *)v15();
    if (!v17)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_16;
    }
    char v18 = v17;
    objc_msgSend(v17, sel_floatValue);
  }
  char v19 = *(uint64_t (**)(void))(*(void *)v0 + 216);
  uint64_t v20 = (void *)v19();

  if (!v20)
  {
LABEL_11:
    uint64_t v31 = &type metadata for TTSMarkup.SpeechText;
    uint64_t v32 = &protocol witness table for TTSMarkup.SpeechText;
    char v23 = (void *)swift_allocObject();
    v30[0] = v23;
    v23[2] = v12;
    v23[3] = v11;
    v23[4] = v14;
    v23[5] = v13;
    char v24 = *(void (**)(void *))(*(void *)v0 + 432);
    id v25 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v30);
    sub_1A6741A24((uint64_t)v30);
    uint64_t v26 = sub_1A6892100();
    swift_bridgeObjectRelease();
    uint64_t v27 = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v0 + 400))(v30);
    if (!__OFADD__(*v28, v26))
    {
      *v28 += v26;
      uint64_t v29 = v27(v30, 0);
      (*(void (**)(uint64_t))(*(void *)v0 + 464))(v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v21 = (void *)v19();
  if (v21)
  {
    uint64_t v22 = v21;
    objc_msgSend(v21, sel_floatValue);

    goto LABEL_11;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_1A67BA960()
{
  uint64_t v1 = (uint64_t (**)(void))(*v0 + 408);
  uint64_t v2 = *v1;
  uint64_t v3 = (*v1)();
  unint64_t v5 = v4;
  uint64_t v6 = swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v7 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    ((void (*)(uint64_t))v2)(v6);
    if (qword_1E96C7650 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)qword_1E96D61C0;
    uint64_t v9 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRetain();
    sub_1A6741AD0(&qword_1E96C2660);
    sub_1A67BADC0();
    sub_1A6748030();
    uint64_t v10 = sub_1A68929D0();
    id v12 = objc_msgSend(v8, sel_matchesInString_options_range_, v9, 0, v10, v11);

    sub_1A67BAE1C();
    unint64_t v13 = sub_1A68922E0();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1A6892EB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_bridgeObjectRelease();
    uint64_t v16 = *v0;
    if (v14 < 1) {
      return (*(uint64_t (**)(uint64_t))(v16 + 456))(v15);
    }
    else {
      return (*(uint64_t (**)(uint64_t))(v16 + 448))(v15);
    }
  }
  else
  {
    char v18 = *(uint64_t (**)(void))(*v0 + 440);
    return v18();
  }
}

double PTParser.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_WORD *)(v4 + 64) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 72) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v4 + 80) = 0;
  *(void *)(v4 + 88) = v6;
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return result;
}

uint64_t PTParser.init(_:)(uint64_t a1, uint64_t a2)
{
  *(_WORD *)(v2 + 64) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 72) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = v3;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

id *PTParser.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PTParser.__deallocating_deinit()
{
  PTParser.deinit();

  return swift_deallocClassInstance();
}

id sub_1A67BACE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v5 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1A68916F0();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1A67BADC0()
{
  unint64_t result = qword_1E96C2668;
  if (!qword_1E96C2668)
  {
    sub_1A6750AC4(&qword_1E96C2660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2668);
  }
  return result;
}

unint64_t sub_1A67BAE1C()
{
  unint64_t result = qword_1E96C2670;
  if (!qword_1E96C2670)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96C2670);
  }
  return result;
}

uint64_t sub_1A67BAE5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A67BAE9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_1A67BAEE8()
{
  unint64_t result = qword_1E96C2678;
  if (!qword_1E96C2678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2678);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PTParserState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67BB008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PTParserState()
{
  return &type metadata for PTParserState;
}

uint64_t type metadata accessor for PTParser()
{
  return self;
}

uint64_t method lookup function for PTParser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PTParser);
}

uint64_t dispatch thunk of PTParser.parsedSpeechElements.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of PTParser.parsedSpeechElements.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of PTParser.parsedSpeechElements.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of PTParser.parse()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of PTParser.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 472))();
}

uint64_t sub_1A67BB140()
{
  return sub_1A68922B0();
}

uint64_t sub_1A67BB1D0()
{
  return sub_1A68922A0();
}

void PostMatchRule.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_8;
    case 2uLL:
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_8;
    case 3uLL:
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_8:
      sub_1A6893210();
      sub_1A67C62B8(a1, v5);
      break;
    default:
      unsigned int v4 = *(void **)(v2 + 16);
      sub_1A6893210();
      sub_1A6892000();
      id v6 = v4;
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      sub_1A6893230();

      break;
  }
}

uint64_t sub_1A67BB390(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1769105779;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1769105779;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x65636E65726563;
      break;
    case 2:
      uint64_t v5 = 0x636E6575716F6C65;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 3:
      uint64_t v5 = 0x6C61746E6963616DLL;
      unint64_t v3 = 0xE90000000000006BLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x65636E65726563) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x636E6575716F6C65;
      unint64_t v6 = 0xE900000000000065;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE90000000000006BLL;
      if (v5 == 0x6C61746E6963616DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1A6893120();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1A67BB528(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 6385769;
  }
  else {
    uint64_t v2 = 7823730;
  }
  if (a2) {
    uint64_t v3 = 6385769;
  }
  else {
    uint64_t v3 = 7823730;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1A6893120();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1A67BB598(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 32);
    char v4 = (unint64_t *)(a2 + 32);
    while (1)
    {
      unint64_t v8 = *v3++;
      unint64_t v7 = v8;
      unint64_t v10 = *v4++;
      unint64_t v9 = v10;
      switch(v7 >> 61)
      {
        case 1uLL:
          if (v9 >> 61 != 1) {
            return 0;
          }
          uint64_t v12 = *(unsigned __int8 *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          unint64_t v13 = 0xE400000000000000;
          uint64_t v14 = 1769105779;
          switch(*(unsigned char *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
          {
            case 1:
              unint64_t v13 = 0xE700000000000000;
              uint64_t v14 = 0x65636E65726563;
              break;
            case 2:
              uint64_t v14 = 0x636E6575716F6C65;
              unint64_t v13 = 0xE900000000000065;
              break;
            case 3:
              uint64_t v14 = 0x6C61746E6963616DLL;
              unint64_t v13 = 0xE90000000000006BLL;
              break;
            default:
              goto LABEL_27;
          }
          break;
        case 2uLL:
          if (v9 >> 61 == 2) {
            goto LABEL_6;
          }
          return 0;
        case 3uLL:
          if (v9 >> 61 != 3) {
            return 0;
          }
          goto LABEL_6;
        case 4uLL:
          if (v9 >> 61 != 4) {
            return 0;
          }
LABEL_6:
          uint64_t v5 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v6 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          swift_retain();
          swift_retain();
          LOBYTE(v5) = sub_1A67BB598(v5, v6);
          swift_release();
          swift_release();
          if (v5) {
            goto LABEL_7;
          }
          return 0;
        case 5uLL:
          if (v9 != 0xA000000000000000) {
            return 0;
          }
          swift_release();
          goto LABEL_7;
        default:
          if (v9 >> 61) {
            return 0;
          }
          BOOL v11 = *(void *)(v7 + 16) == *(void *)(v9 + 16) && *(void *)(v7 + 24) == *(void *)(v9 + 24);
          if (!v11 && (sub_1A6893120() & 1) == 0) {
            return 0;
          }
          goto LABEL_7;
      }
LABEL_27:
      unint64_t v15 = 0xE400000000000000;
      uint64_t v16 = 1769105779;
      switch(v12)
      {
        case 1:
          unint64_t v15 = 0xE700000000000000;
          if (v14 == 0x65636E65726563) {
            goto LABEL_34;
          }
          goto LABEL_36;
        case 2:
          uint64_t v16 = 0x636E6575716F6C65;
          unint64_t v15 = 0xE900000000000065;
          goto LABEL_31;
        case 3:
          unint64_t v15 = 0xE90000000000006BLL;
          if (v14 == 0x6C61746E6963616DLL) {
            goto LABEL_34;
          }
          goto LABEL_36;
        default:
LABEL_31:
          if (v14 != v16) {
            goto LABEL_36;
          }
LABEL_34:
          if (v13 == v15)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_36:
            char v17 = sub_1A6893120();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
LABEL_7:
          if (!--v2) {
            return 1;
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_1A67BB890(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 48);
        uint64_t v8 = *(void *)(a1 + v5 + 56);
        char v9 = *(unsigned char *)(a1 + v5 + 64);
        char v10 = *(unsigned char *)(a1 + v5 + 65);
        uint64_t v11 = *(void *)(a1 + v5 + 88);
        long long v28 = *(_OWORD *)(a1 + v5 + 32);
        uint64_t v29 = v7;
        uint64_t v30 = v8;
        char v31 = v9;
        char v32 = v10;
        long long v33 = *(_OWORD *)(a1 + v5 + 72);
        uint64_t v34 = v11;
        uint64_t v12 = *(void *)(a2 + v5 + 48);
        uint64_t v13 = *(void *)(a2 + v5 + 56);
        char v14 = *(unsigned char *)(a2 + v5 + 64);
        char v15 = *(unsigned char *)(a2 + v5 + 65);
        uint64_t v16 = *(void *)(a2 + v5 + 88);
        long long v21 = *(_OWORD *)(a2 + v5 + 32);
        uint64_t v22 = v12;
        uint64_t v23 = v13;
        char v24 = v14;
        char v25 = v15;
        long long v26 = *(_OWORD *)(a2 + v5 + 72);
        uint64_t v27 = v16;
        char v17 = _s12TextToSpeech16PronuncationRuleV2eeoiySbAC_ACtFZ_0((uint64_t)&v28, (uint64_t)&v21);
        BOOL v19 = v6-- != 0;
        if ((v17 & 1) == 0) {
          break;
        }
        v5 += 64;
      }
      while (v19);
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1A67BB984(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v34 = 0;
    uint64_t v25 = a1 + 32;
    uint64_t v23 = *(void *)(a1 + 16);
    uint64_t v24 = a2 + 32;
    while (1)
    {
      char v4 = (void *)(v25 + 40 * v34);
      uint64_t v5 = *v4;
      uint64_t v6 = (void *)(v24 + 40 * v34);
      uint64_t v7 = *v6;
      uint64_t v8 = *(void *)(*v4 + 16);
      if (v8 != *(void *)(*v6 + 16)) {
        return 0;
      }
      uint64_t v27 = v4[1];
      uint64_t v33 = v4[2];
      uint64_t v30 = v4[4];
      uint64_t v31 = v4[3];
      uint64_t v26 = v6[1];
      uint64_t v32 = v6[2];
      if (v8) {
        BOOL v9 = v5 == v7;
      }
      else {
        BOOL v9 = 1;
      }
      uint64_t v28 = v6[3];
      uint64_t v29 = v6[4];
      if (!v9)
      {
        uint64_t v12 = 0;
        uint64_t v35 = *v6;
        uint64_t v36 = *v4;
        do
        {
          uint64_t v13 = *(void *)(v5 + v12 + 48);
          uint64_t v14 = *(void *)(v5 + v12 + 56);
          int v15 = *(unsigned __int8 *)(v5 + v12 + 64);
          uint64_t v37 = *(void *)(v5 + v12 + 72);
          uint64_t v38 = *(void *)(v5 + v12 + 80);
          uint64_t v16 = *(void *)(v7 + v12 + 48);
          uint64_t v17 = *(void *)(v7 + v12 + 56);
          int v18 = *(unsigned __int8 *)(v7 + v12 + 64);
          uint64_t v19 = *(void *)(v7 + v12 + 72);
          uint64_t v20 = *(void *)(v7 + v12 + 80);
          if ((*(void *)(v5 + v12 + 32) != *(void *)(v7 + v12 + 32)
             || *(void *)(v5 + v12 + 40) != *(void *)(v7 + v12 + 40))
            && (sub_1A6893120() & 1) == 0)
          {
            return 0;
          }
          if (v13 == v16 && v14 == v17)
          {
            if (v15 != v18) {
              return 0;
            }
          }
          else
          {
            char v21 = sub_1A6893120();
            uint64_t result = 0;
            if (v21 & 1) == 0 || ((v15 ^ v18)) {
              return result;
            }
          }
          if ((v37 != v19 || v38 != v20) && (sub_1A6893120() & 1) == 0) {
            return 0;
          }
          v12 += 56;
          --v8;
          uint64_t v7 = v35;
          uint64_t v5 = v36;
        }
        while (v8);
      }
      if (v33)
      {
        uint64_t v10 = v23;
        if (!v32) {
          return 0;
        }
        BOOL v11 = v27 == v26 && v33 == v32;
        if (!v11 && (sub_1A6893120() & 1) == 0) {
          return 0;
        }
      }
      else
      {
        uint64_t v10 = v23;
        if (v32) {
          return 0;
        }
      }
      BOOL v22 = v31 == v28 && v30 == v29;
      if (!v22 && (sub_1A6893120() & 1) == 0) {
        return 0;
      }
      uint64_t result = 1;
      if (++v34 == v10) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_1A67BBBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    for (uint64_t i = 0; ; i += 56)
    {
      uint64_t v4 = *(void *)(a1 + i + 48);
      uint64_t v5 = *(void *)(a1 + i + 56);
      int v17 = *(unsigned __int8 *)(a1 + i + 64);
      uint64_t v6 = *(void *)(a1 + i + 72);
      uint64_t v16 = *(void *)(a1 + i + 80);
      uint64_t v7 = *(void *)(a2 + i + 48);
      uint64_t v8 = *(void *)(a2 + i + 56);
      int v9 = *(unsigned __int8 *)(a2 + i + 64);
      uint64_t v11 = *(void *)(a2 + i + 72);
      uint64_t v10 = *(void *)(a2 + i + 80);
      if ((*(void *)(a1 + i + 32) != *(void *)(a2 + i + 32) || *(void *)(a1 + i + 40) != *(void *)(a2 + i + 40))
        && (sub_1A6893120() & 1) == 0)
      {
        break;
      }
      if (v4 == v7 && v5 == v8)
      {
        if (v17 != v9) {
          return 0;
        }
      }
      else
      {
        char v12 = sub_1A6893120();
        uint64_t result = 0;
        if (v12 & 1) == 0 || ((v17 ^ v9)) {
          return result;
        }
      }
      if ((v6 != v11 || v16 != v10) && (sub_1A6893120() & 1) == 0) {
        break;
      }
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A67BBD20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 32);
    uint64_t v4 = (unint64_t *)(a2 + 32);
    while (2)
    {
      unint64_t v8 = *v3++;
      unint64_t v7 = v8;
      unint64_t v10 = *v4++;
      unint64_t v9 = v10;
      switch(v7 >> 62)
      {
        case 1uLL:
          if (v9 >> 62 != 1) {
            return 0;
          }
          goto LABEL_6;
        case 2uLL:
          if (v9 >> 62 != 2) {
            return 0;
          }
          goto LABEL_6;
        case 3uLL:
          if (v9 >> 62 != 3) {
            return 0;
          }
LABEL_6:
          uint64_t v5 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v6 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          swift_retain_n();
          swift_retain_n();
          LOBYTE(v5) = sub_1A67BBD20(v5, v6);
          swift_release_n();
          swift_release_n();
          if (v5) {
            goto LABEL_7;
          }
          return 0;
        default:
          if (v9 >> 62) {
            return 0;
          }
          uint64_t v11 = *(void **)(v7 + 16);
          float v12 = *(float *)(v7 + 24);
          uint64_t v13 = *(void **)(v9 + 16);
          float v14 = *(float *)(v9 + 24);
          uint64_t v15 = sub_1A6892000();
          uint64_t v17 = v16;
          if (v15 == sub_1A6892000() && v17 == v18) {
            char v20 = 1;
          }
          else {
            char v20 = sub_1A6893120();
          }
          swift_retain_n();
          swift_retain();
          id v21 = v11;
          id v22 = v13;
          swift_release();
          swift_release_n();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = 0;
          if ((v20 & 1) == 0 || v12 != v14) {
            return result;
          }
LABEL_7:
          if (--v2) {
            continue;
          }
          return 1;
      }
    }
  }
  return 1;
}

uint64_t sub_1A67BBF28()
{
  return 1;
}

uint64_t sub_1A67BBF38()
{
  return 0x73656C7572;
}

uint64_t sub_1A67BBF50()
{
  return 0;
}

void sub_1A67BBF5C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A67BBF68(uint64_t a1)
{
  unint64_t v2 = sub_1A67C68F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BBFA4(uint64_t a1)
{
  unint64_t v2 = sub_1A67C68F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BBFE8()
{
  uint64_t result = 0x7053664F74726170;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6581857;
      break;
    case 2:
      uint64_t result = 29295;
      break;
    case 3:
      uint64_t result = 7630702;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A67BC064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CB2E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67BC08C(uint64_t a1)
{
  unint64_t v2 = sub_1A67C67A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BC0C8(uint64_t a1)
{
  unint64_t v2 = sub_1A67C67A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BC104(uint64_t a1)
{
  unint64_t v2 = sub_1A67C67F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BC140(uint64_t a1)
{
  unint64_t v2 = sub_1A67C67F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BC17C()
{
  return sub_1A6893210();
}

uint64_t sub_1A67BC1A4(uint64_t a1)
{
  unint64_t v2 = sub_1A67C689C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BC1E0(uint64_t a1)
{
  unint64_t v2 = sub_1A67C689C();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1A67BC21C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A67BC234()
{
  if (*v0) {
    return 0x61747265436E696DLL;
  }
  else {
    return 6775156;
  }
}

uint64_t sub_1A67BC270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CB480(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67BC298(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6944();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BC2D4(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6944();

  return MEMORY[0x1F41862B0](a1, v2);
}

void PostMatchRule.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2680);
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C2688);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C2690);
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C2698);
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A6741AD0(&qword_1E96C26A0);
  uint64_t v42 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = *v2;
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C67A0();
  uint64_t v18 = v16;
  sub_1A68932B0();
  switch(v17 >> 62)
  {
    case 1uLL:
      uint64_t v24 = *(void **)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v44) = 1;
      sub_1A67C68F0();
      sub_1A6893010();
      id v44 = v24;
      sub_1A6741AD0(&qword_1E96C26A8);
      sub_1A67C7DB4(&qword_1E96C26B0, &qword_1E96C26A8, (void (*)(void))sub_1A67C6848);
      uint64_t v25 = v32;
      sub_1A6893080();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v25);
      goto LABEL_8;
    case 2uLL:
      uint64_t v26 = *(void **)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v44) = 2;
      sub_1A67C689C();
      uint64_t v27 = v35;
      sub_1A6893010();
      id v44 = v26;
      sub_1A6741AD0(&qword_1E96C26A8);
      sub_1A67C7DB4(&qword_1E96C26B0, &qword_1E96C26A8, (void (*)(void))sub_1A67C6848);
      uint64_t v28 = v37;
      sub_1A6893080();
      uint64_t v29 = v36;
      goto LABEL_7;
    case 3uLL:
      uint64_t v30 = *(void **)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v44) = 3;
      sub_1A67C67F4();
      uint64_t v27 = v38;
      sub_1A6893010();
      id v44 = v30;
      sub_1A6741AD0(&qword_1E96C26A8);
      sub_1A67C7DB4(&qword_1E96C26B0, &qword_1E96C26A8, (void (*)(void))sub_1A67C6848);
      uint64_t v28 = v40;
      sub_1A6893080();
      uint64_t v29 = v39;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
LABEL_8:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v14);
      break;
    default:
      uint64_t v19 = *(void **)(v17 + 16);
      LOBYTE(v44) = 0;
      sub_1A67C6944();
      id v20 = v19;
      id v21 = v18;
      sub_1A6893010();
      id v44 = v20;
      char v43 = 0;
      type metadata accessor for NLTag();
      sub_1A67CC240(&qword_1E96C26C0, (void (*)(uint64_t))type metadata accessor for NLTag);
      uint64_t v22 = v34;
      uint64_t v23 = v41;
      sub_1A6893080();
      if (v23)
      {
        (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v22);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v14);
      }
      else
      {
        LOBYTE(v44) = 1;
        sub_1A6893060();

        (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v22);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v14);
      }
      break;
  }
}

uint64_t PostMatchRule.hashValue.getter()
{
  return sub_1A67BEAE0((void (*)(void *))PostMatchRule.hash(into:));
}

uint64_t PostMatchRule.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v41 = sub_1A6741AD0(&qword_1E96C26C8);
  uint64_t v46 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v50 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1A6741AD0(&qword_1E96C26D0);
  uint64_t v47 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v49 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C26D8);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C26E0);
  uint64_t v45 = *(char **)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C26E8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v51 = a1;
  sub_1A673E63C(a1, v15);
  sub_1A67C67A0();
  uint64_t v16 = v52;
  sub_1A68932A0();
  if (v16) {
    goto LABEL_9;
  }
  unint64_t v17 = v7;
  uint64_t v40 = v8;
  uint64_t v18 = v49;
  uint64_t v19 = v50;
  uint64_t v52 = v12;
  uint64_t v20 = sub_1A6892FF0();
  id v21 = (char *)v20;
  if (*(void *)(v20 + 16) != 1)
  {
    uint64_t v24 = sub_1A6892CA0();
    swift_allocError();
    uint64_t v26 = v25;
    sub_1A6741AD0(&qword_1E96C26F0);
    *uint64_t v26 = &type metadata for PostMatchRule;
    sub_1A6892F50();
    sub_1A6892C90();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x1E4FBBA70], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v11);
LABEL_9:
    uint64_t v33 = (uint64_t)v51;
    return sub_1A6741A24(v33);
  }
  switch(*(unsigned char *)(v20 + 32))
  {
    case 1:
      char v56 = 1;
      sub_1A67C68F0();
      sub_1A6892F40();
      uint64_t v27 = v14;
      uint64_t v50 = (char *)v11;
      uint64_t v28 = swift_allocObject();
      sub_1A6741AD0(&qword_1E96C26A8);
      sub_1A67C7DB4(&qword_1E96C26F8, &qword_1E96C26A8, (void (*)(void))sub_1A67C6A28);
      uint64_t v29 = v44;
      sub_1A6892FC0();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v52 + 8))(v27, v50);
      unint64_t v22 = v28 | 0x4000000000000000;
      break;
    case 2:
      char v57 = 2;
      sub_1A67C689C();
      uint64_t v30 = v18;
      sub_1A6892F40();
      uint64_t v45 = v14;
      uint64_t v31 = swift_allocObject();
      sub_1A6741AD0(&qword_1E96C26A8);
      sub_1A67C7DB4(&qword_1E96C26F8, &qword_1E96C26A8, (void (*)(void))sub_1A67C6A28);
      uint64_t v32 = v42;
      sub_1A6892FC0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v11);
      unint64_t v22 = v31 | 0x8000000000000000;
      break;
    case 3:
      char v58 = 3;
      sub_1A67C67F4();
      sub_1A6892F40();
      uint64_t v49 = v21;
      uint64_t v45 = v14;
      uint64_t v35 = swift_allocObject();
      sub_1A6741AD0(&qword_1E96C26A8);
      sub_1A67C7DB4(&qword_1E96C26F8, &qword_1E96C26A8, (void (*)(void))sub_1A67C6A28);
      uint64_t v36 = v41;
      sub_1A6892FC0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v11);
      unint64_t v22 = v35 | 0xC000000000000000;
      break;
    default:
      char v55 = 0;
      sub_1A67C6944();
      sub_1A6892F40();
      unint64_t v22 = swift_allocObject();
      type metadata accessor for NLTag();
      char v54 = 0;
      sub_1A67CC240(&qword_1E96C2708, (void (*)(uint64_t))type metadata accessor for NLTag);
      uint64_t v23 = v40;
      sub_1A6892FC0();
      char v53 = 1;
      sub_1A6892FA0();
      uint64_t v37 = v52;
      int v39 = v38;
      (*((void (**)(char *, uint64_t))v45 + 1))(v10, v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v11);
      *(_DWORD *)(v22 + 24) = v39;
      break;
  }
  uint64_t v33 = (uint64_t)v51;
  *uint64_t v48 = v22;
  return sub_1A6741A24(v33);
}

uint64_t sub_1A67BD490@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return PostMatchRule.init(from:)(a1, a2);
}

void sub_1A67BD4A8(void *a1)
{
}

uint64_t sub_1A67BD4C0(uint64_t a1, uint64_t a2)
{
  return sub_1A67BF81C(a1, a2, (void (*)(void *))PostMatchRule.hash(into:));
}

uint64_t sub_1A67BD4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A67BF88C(a1, a2, a3, (void (*)(void *))PostMatchRule.hash(into:));
}

TextToSpeech::RulesetTargetSynthesizer_optional __swiftcall RulesetTargetSynthesizer.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1A6892F30();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static RulesetTargetSynthesizer.allCases.getter()
{
  return &unk_1EFB7A780;
}

uint64_t RulesetTargetSynthesizer.rawValue.getter()
{
  uint64_t result = 1769105779;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65636E65726563;
      break;
    case 2:
      uint64_t result = 0x636E6575716F6C65;
      break;
    case 3:
      uint64_t result = 0x6C61746E6963616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A67BD5F4(unsigned __int8 *a1, char *a2)
{
  return sub_1A67BB390(*a1, *a2);
}

TextToSpeech::RulesetTargetSynthesizer_optional sub_1A67BD600(Swift::String *a1)
{
  return RulesetTargetSynthesizer.init(rawValue:)(*a1);
}

void sub_1A67BD60C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1769105779;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x65636E65726563;
      goto LABEL_3;
    case 2:
      *a1 = 0x636E6575716F6C65;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 0x6C61746E6963616DLL;
      a1[1] = 0xE90000000000006BLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A67BD6AC()
{
  return sub_1A68922B0();
}

uint64_t sub_1A67BD70C()
{
  return sub_1A68922A0();
}

uint64_t sub_1A67BD75C()
{
  return sub_1A6893250();
}

uint64_t sub_1A67BD83C()
{
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67BD904()
{
  return sub_1A6893250();
}

void sub_1A67BD9E0(void *a1@<X8>)
{
  *a1 = &unk_1EFB7A828;
}

uint64_t RulesetActivationRule.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      sub_1A6893210();
      sub_1A68920F0();
      return swift_bridgeObjectRelease();
    case 2uLL:
      uint64_t v5 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_9;
    case 3uLL:
      uint64_t v5 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_9;
    case 4uLL:
      uint64_t v5 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_9:
      sub_1A6893210();
      uint64_t result = sub_1A67C5B4C(a1, v5);
      break;
    case 5uLL:
      uint64_t result = sub_1A6893210();
      break;
    default:
      sub_1A6893210();
      uint64_t result = sub_1A68920F0();
      break;
  }
  return result;
}

uint64_t sub_1A67BDBD4()
{
  return 0;
}

uint64_t sub_1A67BDBE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A67BDC10(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6DE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BDC4C(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6DE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BDC88(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6D94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BDCC4(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6D94();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A67BDD00()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x69736568746E7973;
      break;
    case 2:
      unint64_t result = 7105633;
      break;
    case 3:
      unint64_t result = 6581857;
      break;
    case 4:
      unint64_t result = 29295;
      break;
    case 5:
      unint64_t result = 7630702;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A67BDDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CB57C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67BDDD8(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6C44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BDE14(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6C44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BDE50(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6C98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BDE8C(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6C98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BDEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656C7572 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A6893120();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A67BDF58(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6D40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BDF94(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6D40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BDFD0()
{
  return 0x69736568746E7973;
}

uint64_t sub_1A67BDFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69736568746E7973 && a2 == 0xEB0000000072657ALL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A6893120();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A67BE0A0(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6E3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BE0DC(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6E3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67BE118()
{
  return sub_1A6893250();
}

uint64_t sub_1A67BE15C()
{
  return sub_1A6893250();
}

uint64_t sub_1A67BE19C()
{
  return 0x786966657270;
}

uint64_t sub_1A67BE1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x786966657270 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A6893120();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A67BE240(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6EE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67BE27C(uint64_t a1)
{
  unint64_t v2 = sub_1A67C6EE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RulesetActivationRule.encode(to:)(void *a1)
{
  uint64_t v48 = sub_1A6741AD0(&qword_1E96C2710);
  uint64_t v34 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2718);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C2720);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v41 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1A6741AD0(&qword_1E96C2728);
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1A6741AD0(&qword_1E96C2730);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  unint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C2738);
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1A6741AD0(&qword_1E96C2740);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *v1;
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C6C44();
  uint64_t v50 = v15;
  sub_1A68932B0();
  switch(v16 >> 61)
  {
    case 1uLL:
      char v20 = *(unsigned char *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v52) = 1;
      sub_1A67C6E3C();
      unint64_t v22 = v50;
      uint64_t v21 = v51;
      sub_1A6893010();
      LOBYTE(v52) = v20;
      sub_1A67C6E90();
      uint64_t v23 = v39;
      sub_1A6893080();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v23);
      goto LABEL_8;
    case 2uLL:
      uint64_t v24 = *(void *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v52) = 3;
      sub_1A67C6D94();
      uint64_t v25 = v41;
      unint64_t v22 = v50;
      uint64_t v21 = v51;
      sub_1A6893010();
      uint64_t v52 = v24;
      sub_1A6741AD0(&qword_1E96C2748);
      sub_1A67C7DB4(&qword_1E96C2750, &qword_1E96C2748, (void (*)(void))sub_1A67C6CEC);
      uint64_t v26 = v43;
      sub_1A6893080();
      uint64_t v27 = v42;
      goto LABEL_7;
    case 3uLL:
      uint64_t v28 = *(void *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v52) = 4;
      sub_1A67C6D40();
      uint64_t v25 = v44;
      unint64_t v22 = v50;
      uint64_t v21 = v51;
      sub_1A6893010();
      uint64_t v52 = v28;
      sub_1A6741AD0(&qword_1E96C2748);
      sub_1A67C7DB4(&qword_1E96C2750, &qword_1E96C2748, (void (*)(void))sub_1A67C6CEC);
      uint64_t v26 = v46;
      sub_1A6893080();
      uint64_t v27 = v45;
      goto LABEL_7;
    case 4uLL:
      uint64_t v29 = *(void *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v52) = 5;
      sub_1A67C6C98();
      uint64_t v25 = v47;
      unint64_t v22 = v50;
      uint64_t v21 = v51;
      sub_1A6893010();
      uint64_t v52 = v29;
      sub_1A6741AD0(&qword_1E96C2748);
      sub_1A67C7DB4(&qword_1E96C2750, &qword_1E96C2748, (void (*)(void))sub_1A67C6CEC);
      uint64_t v26 = v48;
      sub_1A6893080();
      uint64_t v27 = v34;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v21);
      break;
    case 5uLL:
      LOBYTE(v52) = 2;
      sub_1A67C6DE8();
      uint64_t v30 = v36;
      uint64_t v32 = v50;
      uint64_t v31 = v51;
      sub_1A6893010();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v40);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v31);
      break;
    default:
      LOBYTE(v52) = 0;
      sub_1A67C6EE4();
      uint64_t v18 = v50;
      uint64_t v17 = v51;
      sub_1A6893010();
      sub_1A6893040();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v17);
      break;
  }
  return result;
}

uint64_t RulesetActivationRule.hashValue.getter()
{
  return sub_1A67BEAE0((void (*)(void *))RulesetActivationRule.hash(into:));
}

uint64_t sub_1A67BEAE0(void (*a1)(void *))
{
  v4[9] = *v1;
  sub_1A6893200();
  a1(v4);
  return sub_1A6893250();
}

uint64_t RulesetActivationRule.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  __int16 v72 = a2;
  uint64_t v61 = sub_1A6741AD0(&qword_1E96C2768);
  uint64_t v66 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v68 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2770);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  uint64_t v65 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v69 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C2778);
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v70 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1A6741AD0(&qword_1E96C2780);
  uint64_t v59 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v67 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1A6741AD0(&qword_1E96C2788);
  uint64_t v60 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A6741AD0(&qword_1E96C2790);
  uint64_t v58 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A6741AD0(&qword_1E96C2798);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v73 = a1;
  sub_1A673E63C(a1, v19);
  sub_1A67C6C44();
  uint64_t v20 = v74;
  sub_1A68932A0();
  if (!v20)
  {
    uint64_t v56 = v12;
    uint64_t v22 = v71;
    uint64_t v21 = (uint64_t *)v72;
    uint64_t v74 = v16;
    uint64_t v23 = sub_1A6892FF0();
    uint64_t v24 = v18;
    if (*(void *)(v23 + 16) == 1)
    {
      uint64_t v25 = v21;
      switch(*(unsigned char *)(v23 + 32))
      {
        case 1:
          char v76 = 1;
          sub_1A67C6E3C();
          sub_1A6892F40();
          uint64_t v40 = v11;
          uint64_t v41 = swift_allocObject();
          sub_1A67C6F9C();
          uint64_t v42 = v57;
          sub_1A6892FC0();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v42);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v24, v15);
          *uint64_t v25 = v41 | 0x2000000000000000;
          return sub_1A6741A24((uint64_t)v73);
        case 2:
          char v77 = 2;
          sub_1A67C6DE8();
          uint64_t v31 = v67;
          sub_1A6892F40();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v22);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v24, v15);
          *uint64_t v21 = 0xA000000000000000;
          return sub_1A6741A24((uint64_t)v73);
        case 3:
          char v78 = 3;
          sub_1A67C6D94();
          sub_1A6892F40();
          uint64_t v32 = swift_allocObject();
          sub_1A6741AD0(&qword_1E96C2748);
          sub_1A67C7DB4(&qword_1E96C27A0, &qword_1E96C2748, (void (*)(void))sub_1A67C6F38);
          uint64_t v33 = v63;
          uint64_t v34 = v70;
          sub_1A6892FC0();
          uint64_t v35 = v74;
          (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v33);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v15);
          unint64_t v52 = v32 | 0x4000000000000000;
          goto LABEL_15;
        case 4:
          char v79 = 4;
          sub_1A67C6D40();
          sub_1A6892F40();
          uint64_t v43 = swift_allocObject();
          sub_1A6741AD0(&qword_1E96C2748);
          sub_1A67C7DB4(&qword_1E96C27A0, &qword_1E96C2748, (void (*)(void))sub_1A67C6F38);
          uint64_t v44 = v64;
          uint64_t v45 = v69;
          sub_1A6892FC0();
          uint64_t v46 = v74;
          (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v15);
          unint64_t v52 = v43 | 0x6000000000000000;
          goto LABEL_15;
        case 5:
          char v80 = 5;
          sub_1A67C6C98();
          sub_1A6892F40();
          uint64_t v47 = swift_allocObject();
          uint64_t v71 = 0;
          sub_1A6741AD0(&qword_1E96C2748);
          sub_1A67C7DB4(&qword_1E96C27A0, &qword_1E96C2748, (void (*)(void))sub_1A67C6F38);
          uint64_t v48 = v61;
          uint64_t v49 = v68;
          uint64_t v50 = v71;
          sub_1A6892FC0();
          uint64_t v51 = v74;
          if (v50)
          {
            (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v48);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v15);
            swift_deallocUninitializedObject();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v48);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v15);
            unint64_t v52 = v47 | 0x8000000000000000;
LABEL_15:
            *__int16 v72 = v52;
          }
          break;
        default:
          uint64_t v26 = v21;
          char v75 = 0;
          sub_1A67C6EE4();
          uint64_t v27 = v14;
          sub_1A6892F40();
          uint64_t v37 = swift_allocObject();
          uint64_t v38 = v56;
          uint64_t v39 = sub_1A6892F80();
          uint64_t v54 = v53;
          (*(void (**)(char *, uint64_t))(v58 + 8))(v27, v38);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v24, v15);
          *(void *)(v37 + 16) = v39;
          *(void *)(v37 + 24) = v54;
          *uint64_t v26 = v37;
          return sub_1A6741A24((uint64_t)v73);
      }
    }
    else
    {
      uint64_t v28 = sub_1A6892CA0();
      swift_allocError();
      uint64_t v30 = v29;
      sub_1A6741AD0(&qword_1E96C26F0);
      *uint64_t v30 = &type metadata for RulesetActivationRule;
      sub_1A6892F50();
      sub_1A6892C90();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v15);
    }
  }
  return sub_1A6741A24((uint64_t)v73);
}

uint64_t sub_1A67BF7D4@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return RulesetActivationRule.init(from:)(a1, a2);
}

uint64_t sub_1A67BF7EC(void *a1)
{
  return RulesetActivationRule.encode(to:)(a1);
}

uint64_t sub_1A67BF804(uint64_t a1, uint64_t a2)
{
  return sub_1A67BF81C(a1, a2, (void (*)(void *))RulesetActivationRule.hash(into:));
}

uint64_t sub_1A67BF81C(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  v6[9] = *v3;
  sub_1A6893200();
  a3(v6);
  return sub_1A6893250();
}

uint64_t sub_1A67BF874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A67BF88C(a1, a2, a3, (void (*)(void *))RulesetActivationRule.hash(into:));
}

uint64_t sub_1A67BF88C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  v7[9] = *v4;
  sub_1A6893200();
  a4(v7);
  return sub_1A6893250();
}

TextToSpeech::PronuncationRule::ReplacementType_optional __swiftcall PronuncationRule.ReplacementType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1A6892F30();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static PronuncationRule.ReplacementType.allCases.getter()
{
  return &unk_1EFB798A0;
}

uint64_t PronuncationRule.ReplacementType.rawValue.getter()
{
  if (*v0) {
    return 6385769;
  }
  else {
    return 7823730;
  }
}

uint64_t sub_1A67BF974(char *a1, char *a2)
{
  return sub_1A67BB528(*a1, *a2);
}

TextToSpeech::PronuncationRule::ReplacementType_optional sub_1A67BF980(Swift::String *a1)
{
  return PronuncationRule.ReplacementType.init(rawValue:)(*a1);
}

void sub_1A67BF98C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7823730;
  if (*v1) {
    uint64_t v2 = 6385769;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1A67BF9B4()
{
  return sub_1A68922B0();
}

uint64_t sub_1A67BFA14()
{
  return sub_1A68922A0();
}

uint64_t sub_1A67BFA64()
{
  return sub_1A6893250();
}

uint64_t sub_1A67BFACC()
{
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67BFB18()
{
  return sub_1A6893250();
}

void sub_1A67BFB7C(void *a1@<X8>)
{
  *a1 = &unk_1EFB79918;
}

uint64_t PronuncationRule.regex.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PronuncationRule.regex.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PronuncationRule.regex.modify())()
{
  return nullsub_19;
}

uint64_t PronuncationRule.replacement.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PronuncationRule.replacement.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PronuncationRule.replacement.modify())()
{
  return nullsub_19;
}

void PronuncationRule.replacementType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *PronuncationRule.replacementType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*PronuncationRule.replacementType.modify())()
{
  return nullsub_19;
}

uint64_t PronuncationRule.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t PronuncationRule.enabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*PronuncationRule.enabled.modify())()
{
  return nullsub_19;
}

uint64_t PronuncationRule.postMatch.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = v2;
  return sub_1A67669A4(v2);
}

uint64_t PronuncationRule.postMatch.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = sub_1A6766B08(*(void *)(v1 + 40));
  *(void *)(v1 + 40) = v2;
  return result;
}

uint64_t (*PronuncationRule.postMatch.modify())()
{
  return nullsub_19;
}

uint64_t PronuncationRule.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PronuncationRule.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PronuncationRule.notes.modify())()
{
  return nullsub_19;
}

double PronuncationRule.init(regex:replacement:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(_WORD *)(a5 + 32) = 256;
  double result = -3.10503618e231;
  *(_OWORD *)(a5 + 40) = xmmword_1A68A0040;
  *(void *)(a5 + 56) = 0xE000000000000000;
  return result;
}

uint64_t PronuncationRule.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  sub_1A6893220();
  sub_1A6893220();
  if ((~v3 & 0xF000000000000007) != 0) {
    PostMatchRule.hash(into:)(a1);
  }
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67BFF50()
{
  uint64_t result = 0x7865676572;
  switch(*v0)
  {
    case 1:
    case 2:
      uint64_t result = 0x6D6563616C706572;
      break;
    case 3:
      uint64_t result = 0x64656C62616E65;
      break;
    case 4:
      uint64_t result = 0x6374614D74736F70;
      break;
    case 5:
      uint64_t result = 0x7365746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A67C0014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CB7CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67C003C(uint64_t a1)
{
  unint64_t v2 = sub_1A67C7254();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67C0078(uint64_t a1)
{
  unint64_t v2 = sub_1A67C7254();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PronuncationRule.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C27B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v18 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 32);
  int v15 = *(unsigned __int8 *)(v1 + 33);
  int v16 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  v13[1] = *(void *)(v1 + 48);
  uint64_t v14 = v8;
  v13[0] = *(void *)(v1 + 56);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C7254();
  sub_1A68932B0();
  char v27 = 0;
  uint64_t v9 = v19;
  sub_1A6893040();
  if (!v9)
  {
    char v10 = v16;
    uint64_t v11 = v14;
    char v26 = 1;
    sub_1A6893040();
    char v25 = v10;
    char v24 = 2;
    sub_1A67C72A8();
    sub_1A6893080();
    char v23 = 3;
    sub_1A6893050();
    uint64_t v20 = v11;
    char v22 = 4;
    sub_1A67C6848();
    sub_1A6893030();
    char v21 = 5;
    sub_1A6893040();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PronuncationRule.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = *((unsigned char *)v0 + 32);
  char v4 = *((unsigned char *)v0 + 33);
  uint64_t v5 = *((void *)v0 + 7);
  long long v8 = *v0;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  char v11 = v3;
  char v12 = v4;
  long long v13 = *(long long *)((char *)v0 + 40);
  uint64_t v14 = v5;
  sub_1A6893200();
  PronuncationRule.hash(into:)((uint64_t)v7);
  return sub_1A6893250();
}

uint64_t PronuncationRule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C27C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C7254();
  sub_1A68932A0();
  if (v2)
  {
    sub_1A6741A24((uint64_t)a1);
    return sub_1A6766B08(0xF000000000000007);
  }
  else
  {
    char v39 = 0;
    uint64_t v9 = sub_1A6892F80();
    uint64_t v11 = v10;
    uint64_t v31 = v9;
    char v38 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1A6892F80();
    uint64_t v14 = v13;
    uint64_t v30 = v12;
    char v36 = 2;
    sub_1A67C72FC();
    swift_bridgeObjectRetain();
    sub_1A6892FC0();
    uint64_t v29 = v14;
    LODWORD(v14) = v37;
    char v35 = 3;
    int v27 = sub_1A6892F90();
    int v28 = v14;
    char v34 = 4;
    sub_1A67C6A28();
    sub_1A6892F70();
    uint64_t v26 = v11;
    uint64_t v15 = v32;
    char v33 = 5;
    sub_1A67669A4(v32);
    uint64_t v16 = sub_1A6892F80();
    uint64_t v18 = v17;
    v27 &= 1u;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v25 = v16;
    v19(v8, v5);
    uint64_t v20 = v26;
    swift_bridgeObjectRetain();
    uint64_t v21 = v29;
    swift_bridgeObjectRetain();
    sub_1A67669A4(v15);
    swift_bridgeObjectRetain();
    sub_1A6766B08(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)a2 = v31;
    *(void *)(a2 + 8) = v20;
    *(void *)(a2 + 16) = v30;
    *(void *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 32) = v28;
    *(unsigned char *)(a2 + 33) = v27;
    uint64_t v22 = v25;
    *(void *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v22;
    *(void *)(a2 + 56) = v18;
    sub_1A6741A24((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A6766B08(v15);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A67C07BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PronuncationRule.init(from:)(a1, a2);
}

uint64_t sub_1A67C07D4(void *a1)
{
  return PronuncationRule.encode(to:)(a1);
}

uint64_t sub_1A67C07EC()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = *((unsigned char *)v0 + 32);
  char v4 = *((unsigned char *)v0 + 33);
  uint64_t v5 = *((void *)v0 + 7);
  long long v8 = *v0;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  char v11 = v3;
  char v12 = v4;
  long long v13 = *(long long *)((char *)v0 + 40);
  uint64_t v14 = v5;
  sub_1A6893200();
  PronuncationRule.hash(into:)((uint64_t)v7);
  return sub_1A6893250();
}

uint64_t sub_1A67C0864()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = *((unsigned char *)v0 + 32);
  char v4 = *((unsigned char *)v0 + 33);
  uint64_t v5 = *((void *)v0 + 7);
  long long v8 = *v0;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  char v11 = v3;
  char v12 = v4;
  long long v13 = *(long long *)((char *)v0 + 40);
  uint64_t v14 = v5;
  sub_1A6893200();
  PronuncationRule.hash(into:)((uint64_t)v7);
  return sub_1A6893250();
}

uint64_t PronunciationRuleSet.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PronunciationRuleSet.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PronunciationRuleSet.name.modify())()
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PronunciationRuleSet() + 20);
  uint64_t v4 = sub_1A6891800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PronunciationRuleSet.uuid.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PronunciationRuleSet() + 20);
  uint64_t v4 = sub_1A6891800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PronunciationRuleSet.uuid.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.language.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PronunciationRuleSet() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PronunciationRuleSet.language.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PronunciationRuleSet() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PronunciationRuleSet.language.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.activationRule.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for PronunciationRuleSet() + 28));

  return swift_retain();
}

uint64_t PronunciationRuleSet.activationRule.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(int *)(type metadata accessor for PronunciationRuleSet() + 28);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = v2;
  return result;
}

uint64_t (*PronunciationRuleSet.activationRule.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.operatingRegex.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PronunciationRuleSet() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PronunciationRuleSet.operatingRegex.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PronunciationRuleSet() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PronunciationRuleSet.operatingRegex.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.rules.getter()
{
  type metadata accessor for PronunciationRuleSet();

  return swift_bridgeObjectRetain();
}

uint64_t PronunciationRuleSet.rules.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PronunciationRuleSet() + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PronunciationRuleSet.rules.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.priority.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PronunciationRuleSet() + 40));
}

uint64_t PronunciationRuleSet.priority.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for PronunciationRuleSet();
  *(void *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*PronunciationRuleSet.priority.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PronunciationRuleSet() + 44));
}

uint64_t PronunciationRuleSet.enabled.setter(char a1)
{
  uint64_t result = type metadata accessor for PronunciationRuleSet();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*PronunciationRuleSet.enabled.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PronunciationRuleSet() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PronunciationRuleSet.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PronunciationRuleSet() + 48));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PronunciationRuleSet.notes.modify())(void, void)
{
  return nullsub_19;
}

uint64_t PronunciationRuleSet.init(name:language:priority:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  char v12 = (int *)type metadata accessor for PronunciationRuleSet();
  uint64_t result = sub_1A68917F0();
  uint64_t v14 = (void *)((char *)a6 + v12[8]);
  *uint64_t v14 = 0;
  v14[1] = 0;
  *(void *)((char *)a6 + v12[9]) = MEMORY[0x1E4FBC860];
  *((unsigned char *)a6 + v12[11]) = 1;
  uint64_t v15 = (void *)((char *)a6 + v12[12]);
  *uint64_t v15 = 0;
  v15[1] = 0xE000000000000000;
  *a6 = a1;
  a6[1] = a2;
  uint64_t v16 = (void *)((char *)a6 + v12[6]);
  *uint64_t v16 = a3;
  v16[1] = a4;
  *(void *)((char *)a6 + v12[10]) = a5;
  *(void *)((char *)a6 + v12[7]) = 0xA000000000000000;
  return result;
}

uint64_t PronunciationRuleSet.hash(into:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for PronunciationRuleSet();
  sub_1A6891800();
  sub_1A67C76F0(&qword_1EB67A200);
  sub_1A6891F20();
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(v1 + v3[7]);
  switch(v4 >> 61)
  {
    case 1uLL:
      sub_1A6893210();
      swift_retain();
      sub_1A68920F0();
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 2uLL:
      uint64_t v5 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_7;
    case 3uLL:
      uint64_t v5 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_7;
    case 4uLL:
      uint64_t v5 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_7:
      sub_1A6893210();
      swift_retain();
      sub_1A67C5B4C(a1, v5);
      swift_release();
      break;
    case 5uLL:
      sub_1A6893210();
      break;
    default:
      sub_1A6893210();
      swift_retain();
      sub_1A68920F0();
      swift_release();
      break;
  }
  if (*(void *)(v1 + v3[8] + 8))
  {
    sub_1A6893220();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A6893220();
  }
  uint64_t v6 = *(void *)(v1 + v3[9]);
  swift_bridgeObjectRetain();
  sub_1A67C5D38(a1, v6);
  swift_bridgeObjectRelease();
  sub_1A6893210();
  sub_1A6893220();
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C13D8(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 1684632949;
      break;
    case 2:
      uint64_t result = 0x65676175676E616CLL;
      break;
    case 3:
      uint64_t result = 0x6974617669746361;
      break;
    case 4:
      uint64_t result = 0x6E6974617265706FLL;
      break;
    case 5:
      uint64_t result = 0x73656C7572;
      break;
    case 6:
      uint64_t result = 0x797469726F697270;
      break;
    case 7:
      uint64_t result = 0x64656C62616E65;
      break;
    case 8:
      uint64_t result = 0x7365746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A67C14F4()
{
  return sub_1A67C13D8(*v0);
}

uint64_t sub_1A67C14FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CBA80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67C1524(uint64_t a1)
{
  unint64_t v2 = sub_1A67C7648();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67C1560(uint64_t a1)
{
  unint64_t v2 = sub_1A67C7648();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PronunciationRuleSet.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C27D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C7648();
  sub_1A68932B0();
  LOBYTE(v12) = 0;
  sub_1A6893040();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for PronunciationRuleSet();
    LOBYTE(v12) = 1;
    sub_1A6891800();
    sub_1A67C76F0(&qword_1E96C27E0);
    sub_1A6893080();
    LOBYTE(v12) = 2;
    sub_1A6893040();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    sub_1A67C6CEC();
    sub_1A6893080();
    LOBYTE(v12) = 4;
    sub_1A6893020();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 36));
    HIBYTE(v11) = 5;
    sub_1A6741AD0(&qword_1E96C27E8);
    sub_1A67C7DB4(&qword_1E96C27F0, &qword_1E96C27E8, (void (*)(void))sub_1A67C769C);
    sub_1A6893080();
    LOBYTE(v12) = 6;
    sub_1A6893070();
    LOBYTE(v12) = 7;
    sub_1A6893050();
    LOBYTE(v12) = 8;
    sub_1A6893040();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PronunciationRuleSet.hashValue.getter()
{
  sub_1A6893200();
  PronunciationRuleSet.hash(into:)((uint64_t)v1);
  return sub_1A6893250();
}

uint64_t PronunciationRuleSet.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2800);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for PronunciationRuleSet();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = (char *)v10 + *(int *)(v8 + 20);
  sub_1A68917F0();
  uint64_t v11 = (uint64_t *)((char *)v10 + v7[8]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v44 = v11;
  uint64_t v12 = v7[9];
  uint64_t v45 = v7;
  uint64_t v46 = v12;
  *(uint64_t *)((char *)v10 + v12) = MEMORY[0x1E4FBC860];
  uint64_t v13 = v7[11];
  *((unsigned char *)v10 + v13) = 1;
  uint64_t v14 = (uint64_t *)((char *)v10 + v7[12]);
  *uint64_t v14 = 0;
  v14[1] = 0xE000000000000000;
  uint64_t v47 = v14;
  uint64_t v15 = (uint64_t)a1;
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C7648();
  sub_1A68932A0();
  if (v2)
  {
    sub_1A6741A24((uint64_t)a1);
    uint64_t v17 = sub_1A6891800();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v48, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = v13;
    LOBYTE(v50) = 0;
    uint64_t v16 = v6;
    *uint64_t v10 = sub_1A6892F80();
    v10[1] = v18;
    uint64_t v19 = sub_1A6891800();
    uint64_t v39 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v50) = 1;
    sub_1A67C76F0(&qword_1E96C2808);
    sub_1A6892FC0();
    uint64_t v22 = v45;
    (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v48, v21, v19);
    LOBYTE(v50) = 2;
    uint64_t v23 = sub_1A6892F80();
    uint64_t v24 = (uint64_t *)((char *)v10 + v22[6]);
    *uint64_t v24 = v23;
    v24[1] = v25;
    char v49 = 3;
    sub_1A67C6F38();
    sub_1A6892FC0();
    uint64_t v26 = v46;
    *(uint64_t *)((char *)v10 + v22[7]) = v50;
    LOBYTE(v50) = 4;
    uint64_t v27 = sub_1A6892F60();
    uint64_t v29 = v28;
    uint64_t v30 = v44;
    uint64_t v31 = v27;
    swift_bridgeObjectRelease();
    *uint64_t v30 = v31;
    v30[1] = v29;
    sub_1A6741AD0(&qword_1E96C27E8);
    char v49 = 5;
    sub_1A67C7DB4(&qword_1E96C2810, &qword_1E96C27E8, (void (*)(void))sub_1A67C7734);
    sub_1A6892FC0();
    uint64_t v32 = v50;
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v10 + v26) = v32;
    LOBYTE(v50) = 6;
    *(uint64_t *)((char *)v10 + v22[10]) = sub_1A6892FB0();
    LOBYTE(v50) = 7;
    *((unsigned char *)v10 + v40) = sub_1A6892F90() & 1;
    LOBYTE(v50) = 8;
    uint64_t v33 = sub_1A6892F80();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
    char v36 = v47;
    swift_bridgeObjectRelease();
    uint64_t *v36 = v33;
    v36[1] = v35;
    sub_1A6766854((uint64_t)v10, v41);
    sub_1A6741A24(v15);
    return sub_1A67668B8((uint64_t)v10);
  }
}

uint64_t sub_1A67C1F80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PronunciationRuleSet.init(from:)(a1, a2);
}

uint64_t sub_1A67C1F98(void *a1)
{
  return PronunciationRuleSet.encode(to:)(a1);
}

uint64_t sub_1A67C1FB0()
{
  sub_1A6893200();
  PronunciationRuleSet.hash(into:)((uint64_t)v1);
  return sub_1A6893250();
}

uint64_t sub_1A67C1FF4()
{
  sub_1A6893200();
  PronunciationRuleSet.hash(into:)((uint64_t)v1);
  return sub_1A6893250();
}

uint64_t SiriRule.regex.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriRule.regex.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SiriRule.regex.modify())()
{
  return nullsub_19;
}

uint64_t SiriRule.replacement.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriRule.replacement.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SiriRule.replacement.modify())()
{
  return nullsub_19;
}

uint64_t SiriRule.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SiriRule.enabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*SiriRule.enabled.modify())()
{
  return nullsub_19;
}

uint64_t SiriRule.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriRule.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*SiriRule.notes.modify())()
{
  return nullsub_19;
}

uint64_t SiriRule.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  sub_1A6893220();
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C22C8()
{
  uint64_t result = 0x7865676572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6563616C706572;
      break;
    case 2:
      uint64_t result = 0x64656C62616E65;
      break;
    case 3:
      uint64_t result = 0x7365746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A67C2354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CBE48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67C237C(uint64_t a1)
{
  unint64_t v2 = sub_1A67C78B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67C23B8(uint64_t a1)
{
  unint64_t v2 = sub_1A67C78B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriRule.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2820);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  v15[2] = *(void *)(v1 + 24);
  v15[3] = v8;
  int v16 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  v15[0] = *(void *)(v1 + 48);
  v15[1] = v9;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  sub_1A673E63C(v11, v10);
  sub_1A67C78B4();
  sub_1A68932B0();
  char v20 = 0;
  sub_1A6893040();
  if (!v2)
  {
    char v19 = 1;
    sub_1A6893040();
    char v18 = 2;
    sub_1A6893050();
    char v17 = 3;
    sub_1A6893040();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t SiriRule.hashValue.getter()
{
  return sub_1A6893250();
}

uint64_t SiriRule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C2828);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C78B4();
  sub_1A68932A0();
  if (v2)
  {
    sub_1A6741A24((uint64_t)a1);
  }
  else
  {
    char v29 = 0;
    uint64_t v9 = sub_1A6892F80();
    uint64_t v12 = v11;
    uint64_t v24 = v9;
    char v28 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1A6892F80();
    uint64_t v15 = v14;
    uint64_t v22 = v13;
    char v27 = 2;
    swift_bridgeObjectRetain();
    uint64_t v23 = v15;
    int v25 = sub_1A6892F90();
    char v26 = 3;
    uint64_t v16 = sub_1A6892F80();
    uint64_t v18 = v17;
    v25 &= 1u;
    uint64_t v19 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v23;
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v22;
    *(void *)(a2 + 24) = v20;
    *(unsigned char *)(a2 + 32) = v25;
    *(void *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v18;
    sub_1A6741A24((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C298C()
{
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  sub_1A6893220();
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C2A54()
{
  return sub_1A6893250();
}

uint64_t sub_1A67C2B1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SiriRule.init(from:)(a1, a2);
}

uint64_t sub_1A67C2B34(void *a1)
{
  return SiriRule.encode(to:)(a1);
}

uint64_t sub_1A67C2B50()
{
  uint64_t v0 = sub_1A6741AD0(&qword_1E96C2830);
  sub_1A67495E4(v0, qword_1E96D61C8);
  sub_1A6748F88(v0, (uint64_t)qword_1E96D61C8);
  sub_1A6741AD0(&qword_1E96C2868);
  return sub_1A6891C20();
}

uint64_t sub_1A67C2BD0()
{
  uint64_t v0 = sub_1A6741AD0(&qword_1E96C2838);
  sub_1A67495E4(v0, qword_1E96D61E0);
  sub_1A6748F88(v0, (uint64_t)qword_1E96D61E0);
  sub_1A6741AD0(&qword_1E96C2850);
  return sub_1A6891C20();
}

uint64_t SiriRuleSet.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriRuleSet.rules.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SiriRuleSet.rules.modify())()
{
  return nullsub_19;
}

uint64_t SiriRuleSet.normalizationDomain.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriRuleSet.normalizationDomain.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SiriRuleSet.normalizationDomain.modify())()
{
  return nullsub_19;
}

uint64_t SiriRuleSet.fileName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriRuleSet.fileName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SiriRuleSet.fileName.modify())()
{
  return nullsub_19;
}

void __swiftcall SiriRuleSet.init(name:)(TextToSpeech::SiriRuleSet *__return_ptr retstr, Swift::String name)
{
  retstr->rules._rawValue = (void *)MEMORY[0x1E4FBC860];
  retstr->normalizationDomain.value._countAndFlagsBits = 0;
  retstr->normalizationDomain.value._object = 0;
  retstr->fileName = name;
}

uint64_t SiriRuleSet.init(fromUrl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v29 = 0uLL;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C9B8]);
  uint64_t v5 = (void *)sub_1A6891730();
  CFDataRef v6 = (const __CFData *)objc_msgSend(v4, sel_initWithContentsOfURL_, v5);

  if (v6)
  {
    uint64_t result = (uint64_t)TTSCreateDecryptedDataFromEncryptedData(v6);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = (void *)result;
    uint64_t v9 = sub_1A6891790();
    unint64_t v11 = v10;

    uint64_t v12 = sub_1A6892070();
    MEMORY[0x1F4188790](v12 - 8);
    sub_1A6892060();
    uint64_t v13 = sub_1A6892020();
    if (v14)
    {
      uint64_t v15 = v13;
      unint64_t v16 = v14;
      uint64_t v17 = sub_1A6891720();
      uint64_t v31 = v18;
      uint64_t v30 = v17;
      v27[0] = 10;
      v27[1] = 0xE100000000000000;
      uint64_t v28 = MEMORY[0x1E4FBC860];
      MEMORY[0x1F4188790](v17);
      void v26[2] = v27;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1A674A62C(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A674AC60, (uint64_t)v26, v15, v16);
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_1A67C30B0((uint64_t)v19);
      swift_bridgeObjectRelease();
      sub_1A67C31CC(v20);
      sub_1A67C7908(v9, v11);

      swift_bridgeObjectRelease();
      uint64_t v21 = sub_1A6891770();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
      uint64_t v22 = v30;
      uint64_t v23 = v31;
      *(void *)a2 = v28;
      *(_OWORD *)(a2 + 8) = v29;
      *(void *)(a2 + 24) = v22;
      *(void *)(a2 + 32) = v23;
      return result;
    }
    uint64_t v25 = sub_1A6891770();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
    sub_1A67C7908(v9, v11);
  }
  else
  {
    uint64_t v24 = sub_1A6891770();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1A67C30B0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1A67C57A8(0, v1, 0);
    uint64_t v2 = v16;
    id v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v16 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
      {
        sub_1A67C57A8((void *)(v9 > 1), v10 + 1, 1);
        uint64_t v2 = v16;
      }
      uint64_t v14 = MEMORY[0x1E4FBB7A8];
      unint64_t v15 = sub_1A67CC288();
      unint64_t v11 = (void *)swift_allocObject();
      *(void *)&long long v13 = v11;
      _OWORD v11[2] = v5;
      v11[3] = v6;
      v11[4] = v8;
      void v11[5] = v7;
      *(void *)(v2 + 16) = v10 + 1;
      sub_1A673E770(&v13, v2 + 40 * v10 + 32);
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A67C31CC(uint64_t a1)
{
  uint64_t v84 = sub_1A6741AD0(&qword_1E96C2830);
  uint64_t v2 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v83 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2840);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1A6741AD0(&qword_1E96C2838);
  uint64_t v7 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v81 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C2848);
  uint64_t result = MEMORY[0x1F4188790](v9 - 8);
  char v80 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    long long v13 = (void *)(a1 + 32);
    char v77 = (void (**)(char *, uint64_t))(v7 + 8);
    char v78 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    char v75 = (void (**)(char *, uint64_t))(v2 + 8);
    char v76 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v62[1] = a1;
    swift_bridgeObjectRetain();
    char v79 = v6;
    do
    {
      uint64_t v87 = v12;
      sub_1A673E63C(v13, v13[3]);
      uint64_t v14 = sub_1A6891680();
      uint64_t v15 = *(void *)(v14 - 8);
      MEMORY[0x1F4188790](v14);
      uint64_t v17 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A6891670();
      uint64_t v18 = sub_1A6892A90();
      uint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      if (sub_1A68921F0())
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        *(void *)&long long v107 = v18;
        *((void *)&v107 + 1) = v20;
        if (qword_1E96C7768 != -1) {
          swift_once();
        }
        uint64_t v21 = v82;
        uint64_t v22 = sub_1A6748F88(v82, (uint64_t)qword_1E96D61E0);
        swift_beginAccess();
        uint64_t v23 = v81;
        (*v78)(v81, v22, v21);
        sub_1A6741AD0(&qword_1E96C2850);
        unint64_t v24 = sub_1A6766A10();
        sub_1A6766A64(&qword_1E96C2858, &qword_1E96C2838);
        uint64_t v25 = (uint64_t)v80;
        *(void *)&long long v86 = v24;
        sub_1A6891F30();
        (*v77)(v23, v21);
        uint64_t v26 = sub_1A6741AD0(&qword_1E96C2860);
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
        {
          sub_1A6750210(v25, &qword_1E96C2848);
          uint64_t v28 = (uint64_t)v79;
        }
        else
        {
          uint64_t v29 = v25;
          sub_1A6891C40();
          uint64_t v30 = v110;
          uint64_t v31 = v112;
          uint64_t v73 = v111;
          uint64_t v74 = v109;
          uint64_t v32 = v113;
          (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
          uint64_t v33 = v30;
          uint64_t v28 = (uint64_t)v79;
          uint64_t v34 = MEMORY[0x1AD0BF180](v33, v73, v31, v32);
          char v36 = v35;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unsigned __int8 v37 = v85;
          swift_bridgeObjectRelease();
          v37[1] = (char *)v34;
          v37[2] = v36;
        }
        *(void *)&long long v107 = v18;
        *((void *)&v107 + 1) = v20;
        if (qword_1E96C7760 != -1) {
          swift_once();
        }
        uint64_t v38 = v84;
        uint64_t v39 = sub_1A6748F88(v84, (uint64_t)qword_1E96D61C8);
        swift_beginAccess();
        uint64_t v40 = v83;
        (*v76)(v83, v39, v38);
        sub_1A6741AD0(&qword_1E96C2868);
        sub_1A6766A64(&qword_1E96C2870, &qword_1E96C2830);
        sub_1A6891F30();
        (*v75)(v40, v38);
        swift_bridgeObjectRelease();
        uint64_t v41 = sub_1A6741AD0(&qword_1E96C2878);
        uint64_t v42 = *(void *)(v41 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v28, 1, v41) == 1)
        {
          sub_1A6750210(v28, &qword_1E96C2840);
        }
        else
        {
          sub_1A6891C40();
          long long v86 = v88;
          uint64_t v43 = v91;
          uint64_t v73 = v90;
          uint64_t v74 = v89;
          uint64_t v44 = v92;
          uint64_t v45 = v93;
          uint64_t v46 = v94;
          long long v72 = v95;
          uint64_t v70 = v97;
          uint64_t v71 = v96;
          uint64_t v47 = v99;
          uint64_t v48 = v28;
          uint64_t v49 = v100;
          uint64_t v63 = v101;
          uint64_t v64 = v98;
          long long v68 = v103;
          long long v69 = v102;
          long long v67 = v104;
          uint64_t v65 = v106;
          uint64_t v66 = v105;
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v48, v41);
          long long v107 = v86;
          uint64_t v108 = v74;
          uint64_t v109 = v73;
          uint64_t v110 = v43;
          uint64_t v111 = v44;
          uint64_t v112 = v45;
          uint64_t v113 = v46;
          long long v114 = v72;
          uint64_t v115 = v71;
          uint64_t v116 = v70;
          uint64_t v50 = v63;
          uint64_t v51 = v64;
          uint64_t v117 = v64;
          uint64_t v118 = v47;
          uint64_t v119 = v49;
          uint64_t v120 = v63;
          long long v121 = v69;
          long long v122 = v68;
          long long v123 = v67;
          uint64_t v124 = v66;
          uint64_t v125 = v65;
          uint64_t v52 = MEMORY[0x1AD0BF180](v43, v44, v45, v46);
          *(void *)&long long v86 = v53;
          uint64_t v54 = MEMORY[0x1AD0BF180](v51, v47, v49, v50);
          uint64_t v56 = v55;
          sub_1A67C7960((uint64_t)&v107);
          uint64_t v57 = *v85;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v57 = sub_1A67C5900(0, *((void *)v57 + 2) + 1, 1, v57);
          }
          unint64_t v59 = *((void *)v57 + 2);
          unint64_t v58 = *((void *)v57 + 3);
          if (v59 >= v58 >> 1) {
            uint64_t v57 = sub_1A67C5900((char *)(v58 > 1), v59 + 1, 1, v57);
          }
          *((void *)v57 + 2) = v59 + 1;
          uint64_t v60 = &v57[56 * v59];
          uint64_t v61 = v86;
          *((void *)v60 + 4) = v52;
          *((void *)v60 + 5) = v61;
          *((void *)v60 + 6) = v54;
          *((void *)v60 + 7) = v56;
          v60[64] = 1;
          *((void *)v60 + 9) = 0;
          *((void *)v60 + 10) = 0xE000000000000000;
          *id v85 = v57;
        }
      }
      v13 += 5;
      uint64_t v12 = v87 - 1;
    }
    while (v87 != 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SiriRuleSet.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_1A67C61B4(a1, v3);
  swift_bridgeObjectRelease();
  sub_1A6893220();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C3B34()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0x656D614E656C6966;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73656C7572;
  }
}

uint64_t sub_1A67C3B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CC00C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A67C3BB8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A67C3BC4(uint64_t a1)
{
  unint64_t v2 = sub_1A67C79D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67C3C00(uint64_t a1)
{
  unint64_t v2 = sub_1A67C79D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriRuleSet.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2880);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  void v12[3] = v1[2];
  v12[4] = v8;
  uint64_t v10 = v1[3];
  v12[1] = v1[4];
  void v12[2] = v10;
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C79D8();
  sub_1A68932B0();
  uint64_t v16 = v9;
  char v15 = 0;
  sub_1A6741AD0(&qword_1E96C2888);
  sub_1A67C7DB4(&qword_1E96C2890, &qword_1E96C2888, (void (*)(void))sub_1A67C7A2C);
  sub_1A6893080();
  if (!v2)
  {
    char v14 = 1;
    sub_1A6893020();
    char v13 = 2;
    sub_1A6893040();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SiriRuleSet.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_1A6893200();
  swift_bridgeObjectRetain();
  sub_1A67C61B4((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_1A6893220();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  return sub_1A6893250();
}

uint64_t SiriRuleSet.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C28A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C79D8();
  sub_1A68932A0();
  if (v2)
  {
    sub_1A6741A24((uint64_t)a1);
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C2888);
    char v25 = 0;
    sub_1A67C7DB4(&qword_1E96C28A8, &qword_1E96C2888, (void (*)(void))sub_1A67C7A80);
    sub_1A6892FC0();
    uint64_t v10 = v26;
    char v24 = 1;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A6892F60();
    uint64_t v13 = v12;
    uint64_t v22 = v11;
    char v23 = 2;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1A6892F80();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v21 = v14;
    v17(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = v22;
    *a2 = v10;
    a2[1] = v18;
    uint64_t v19 = v21;
    a2[2] = v13;
    a2[3] = v19;
    a2[4] = v16;
    sub_1A6741A24((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C4200(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_1A67C61B4(a1, v3);
  swift_bridgeObjectRelease();
  sub_1A6893220();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C42CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_1A6893200();
  swift_bridgeObjectRetain();
  sub_1A67C61B4((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_1A6893220();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  return sub_1A6893250();
}

uint64_t sub_1A67C4394@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SiriRuleSet.init(from:)(a1, a2);
}

uint64_t sub_1A67C43AC(void *a1)
{
  return SiriRuleSet.encode(to:)(a1);
}

uint64_t SiriRulesetGroup.config.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriRulesetGroup.config.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SiriRulesetGroup.config.modify())()
{
  return nullsub_19;
}

uint64_t SiriRulesetGroup.rulesets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriRulesetGroup.rulesets.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriRulesetGroup.rulesets.modify())()
{
  return nullsub_19;
}

TextToSpeech::SiriRulesetGroup __swiftcall SiriRulesetGroup.init(config:rulesets:)(Swift::OpaquePointer config, Swift::OpaquePointer rulesets)
{
  v2->_rawValue = config._rawValue;
  v2[1]._rawValue = rulesets._rawValue;
  result.rulesets = rulesets;
  result.config = config;
  return result;
}

uint64_t SiriRulesetGroup.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v8 = result;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    while (1)
    {
      uint64_t v10 = *(v9 - 4);
      uint64_t v11 = *(v9 - 3);
      uint64_t v12 = *(v9 - 2);
      uint64_t v13 = *(v9 - 1);
      uint64_t v14 = *v9;
      if (v13 == v8 && v14 == a2) {
        break;
      }
      TextToSpeech::SiriRulesetGroup result = sub_1A6893120();
      if (result) {
        goto LABEL_11;
      }
      v9 += 5;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    uint64_t v13 = v8;
    uint64_t v14 = a2;
LABEL_11:
    *a3 = v10;
    a3[1] = v11;
    a3[2] = v12;
    a3[3] = v13;
    a3[4] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_9:
    a3[4] = 0;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
  }
  return result;
}

double sub_1A67C4570@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1A67C486C(v4, v5, v6, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v7 = v11;
  double result = *(double *)v10;
  long long v9 = v10[1];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v9;
  *(void *)(a3 + 32) = v7;
  return result;
}

uint64_t sub_1A67C4608(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  v10[0] = *a1;
  v10[1] = v5;
  _OWORD v10[2] = v6;
  v10[3] = v7;
  v10[4] = v8;
  swift_bridgeObjectRetain();
  sub_1A67C7AD4(v10[0]);
  return SiriRulesetGroup.subscript.setter(v10, v3, v4);
}

uint64_t SiriRulesetGroup.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  uint64_t v10 = *(void *)(v3 + 8);
  long long v9 = (uint64_t *)(v3 + 8);
  uint64_t v8 = v10;
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    unint64_t v13 = 0;
    uint64_t v14 = 64;
    while (1)
    {
      BOOL v15 = *(void *)(v8 + v14 - 8) == a2 && *(void *)(v8 + v14) == a3;
      if (v15 || (sub_1A6893120() & 1) != 0) {
        break;
      }
      ++v13;
      v14 += 40;
      if (v11 == v13) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A67C5B38(v8);
        uint64_t v8 = result;
      }
      if (v13 < *(void *)(v8 + 16))
      {
        uint64_t v20 = (void *)(v8 + v14);
        *(v20 - 4) = v6;
        *(v20 - 3) = v5;
        *(v20 - 2) = v7;
        *(v20 - 1) = v21;
        void *v20 = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
LABEL_20:
        uint64_t *v9 = v8;
        return result;
      }
      __break(1u);
    }
    else
    {
      sub_1A67C4990(v13, (uint64_t)&v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A67C5A20(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v18 = *(void *)(v8 + 16);
      unint64_t v17 = *(void *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A67C5A20((char *)(v17 > 1), v18 + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v18 + 1;
      uint64_t v19 = (void *)(v8 + 40 * v18);
      v19[4] = v6;
      void v19[5] = v5;
      v19[6] = v7;
      v19[7] = v21;
      v19[8] = v22;
      goto LABEL_20;
    }
  }
  return result;
}

uint64_t sub_1A67C486C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = a4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
    while (1)
    {
      uint64_t v10 = *(v8 - 4);
      uint64_t v9 = *(v8 - 3);
      uint64_t v11 = *(v8 - 2);
      uint64_t v12 = *(v8 - 1);
      uint64_t v13 = *v8;
      if (v12 == a2 && v13 == a3) {
        break;
      }
      if (sub_1A6893120()) {
        goto LABEL_12;
      }
      v8 += 5;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = a4;
        goto LABEL_10;
      }
    }
    uint64_t v12 = a2;
    uint64_t v13 = a3;
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v10;
    a4[1] = v9;
    a4[2] = v11;
    a4[3] = v12;
    a4[4] = v13;
  }
  else
  {
LABEL_10:
    uint64_t result = swift_bridgeObjectRelease();
    v5[4] = 0;
    *(_OWORD *)uint64_t v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
  }
  return result;
}

uint64_t sub_1A67C4990@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A67C5B38(v5);
    uint64_t v5 = result;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v5 + 40 * a1;
    uint64_t v9 = *(void *)(v8 + 32);
    v8 += 32;
    unint64_t v10 = v7 - 1;
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v12 = *(void *)(v8 + 32);
    *(void *)a2 = v9;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v8 + 8);
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v12;
    uint64_t result = (uint64_t)memmove((void *)v8, (const void *)(v8 + 40), 40 * (v10 - a1));
    *(void *)(v5 + 16) = v10;
    *uint64_t v2 = v5;
  }
  return result;
}

void (*SiriRulesetGroup.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  unint64_t v7 = malloc(0x40uLL);
  *a1 = v7;
  void v7[6] = a3;
  v7[7] = v3;
  v7[5] = a2;
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    unint64_t v10 = (uint64_t *)(v8 + 64);
    while (1)
    {
      uint64_t v12 = *(v10 - 4);
      uint64_t v11 = *(v10 - 3);
      uint64_t v13 = *(v10 - 2);
      uint64_t v14 = *(v10 - 1);
      uint64_t v15 = *v10;
      if (v14 == a2 && v15 == a3) {
        break;
      }
      if (sub_1A6893120()) {
        goto LABEL_11;
      }
      v10 += 5;
      if (!--v9) {
        goto LABEL_9;
      }
    }
    uint64_t v14 = a2;
    uint64_t v15 = a3;
LABEL_11:
    *unint64_t v7 = v12;
    v7[1] = v11;
    v7[2] = v13;
    v7[3] = v14;
    v7[4] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_9:
    v7[4] = 0;
    *(_OWORD *)unint64_t v7 = 0u;
    *((_OWORD *)v7 + 1) = 0u;
  }
  return sub_1A67C4B4C;
}

void sub_1A67C4B4C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v7 = (*a1)[6];
  uint64_t v9 = (*a1)[4];
  uint64_t v8 = (*a1)[5];
  v10[0] = v4;
  v10[1] = v3;
  _OWORD v10[2] = v6;
  v10[3] = v5;
  v10[4] = v9;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1A67C7AD4(v4);
    SiriRulesetGroup.subscript.setter(v10, v8, v7);
    sub_1A67C7B24(*v2);
  }
  else
  {
    swift_bridgeObjectRetain();
    SiriRulesetGroup.subscript.setter(v10, v8, v7);
  }

  free(v2);
}

uint64_t SiriRulesetGroup.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_1A67C6408(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A67C5F88(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t static SiriRulesetGroup.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1A67C4CFC(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_1A67BB984(v2, v3);
}

uint64_t sub_1A67C4CFC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = *(void **)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1A673F7AC(v16, v17);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_50;
    }
    uint64_t v22 = *(void **)(*(void *)(a2 + 56) + 8 * v19);
    uint64_t v23 = v22[2];
    if (v23 != v18[2]) {
      goto LABEL_50;
    }
    if (v23) {
      BOOL v24 = v22 == v18;
    }
    else {
      BOOL v24 = 1;
    }
    if (!v24)
    {
      BOOL v25 = v22[4] == v18[4] && v22[5] == v18[5];
      if (!v25 && (sub_1A6893120() & 1) == 0) {
        goto LABEL_50;
      }
      if (v23 != 1)
      {
        BOOL v26 = v22[6] == v18[6] && v22[7] == v18[7];
        if (!v26 && (sub_1A6893120() & 1) == 0) {
          goto LABEL_50;
        }
        uint64_t v27 = v23 - 2;
        if (v27)
        {
          uint64_t v28 = 0;
          while (1)
          {
            BOOL v29 = v22[v28 + 8] == v18[v28 + 8] && v22[v28 + 9] == v18[v28 + 9];
            if (!v29 && (sub_1A6893120() & 1) == 0) {
              break;
            }
            v28 += 2;
            if (!--v27) {
              goto LABEL_6;
            }
          }
LABEL_50:
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
LABEL_6:
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1A67C4F6C()
{
  if (*v0) {
    return 0x73746573656C7572;
  }
  else {
    return 0x6769666E6F63;
  }
}

uint64_t sub_1A67C4FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67CC154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67C4FCC(uint64_t a1)
{
  unint64_t v2 = sub_1A67C7B70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67C5008(uint64_t a1)
{
  unint64_t v2 = sub_1A67C7B70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriRulesetGroup.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C28B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C7B70();
  sub_1A68932B0();
  uint64_t v12 = v8;
  char v11 = 0;
  sub_1A6741AD0(&qword_1E96C28C0);
  sub_1A67C7BC4();
  sub_1A6893080();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    sub_1A6741AD0(&qword_1E96C28D8);
    sub_1A67C7DB4(&qword_1E96C28E0, &qword_1E96C28D8, (void (*)(void))sub_1A67C7C60);
    sub_1A6893080();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SiriRulesetGroup.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1A6893200();
  swift_bridgeObjectRetain();
  sub_1A67C6408((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A67C5F88((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1A6893250();
}

uint64_t SiriRulesetGroup.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C28F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67C7B70();
  sub_1A68932A0();
  if (v2) {
    return sub_1A6741A24((uint64_t)a1);
  }
  sub_1A6741AD0(&qword_1E96C28C0);
  char v13 = 0;
  sub_1A67C7CB4();
  sub_1A6892FC0();
  uint64_t v9 = v14;
  sub_1A6741AD0(&qword_1E96C28D8);
  char v13 = 1;
  sub_1A67C7DB4(&qword_1E96C2908, &qword_1E96C28D8, (void (*)(void))sub_1A67C7E20);
  swift_bridgeObjectRetain();
  sub_1A6892FC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  sub_1A6741A24((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C5500@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SiriRulesetGroup.init(from:)(a1, a2);
}

uint64_t sub_1A67C5518(void *a1)
{
  return SiriRulesetGroup.encode(to:)(a1);
}

uint64_t sub_1A67C5530()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1A6893200();
  swift_bridgeObjectRetain();
  sub_1A67C6408((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A67C5F88((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1A6893250();
}

uint64_t sub_1A67C55A4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_1A67C6408(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A67C5F88(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67C5614()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1A6893200();
  swift_bridgeObjectRetain();
  sub_1A67C6408((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A67C5F88((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1A6893250();
}

uint64_t sub_1A67C5684(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1A67C4CFC(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_1A67BB984(v2, v3);
}

uint64_t sub_1A67C56E0(uint64_t a1, uint64_t a2)
{
  return sub_1A67968CC(a1, a2, MEMORY[0x1F418C118]);
}

uint64_t sub_1A67C56EC(uint64_t a1)
{
  uint64_t v2 = sub_1A67CC240(&qword_1E96C29A0, (void (*)(uint64_t))type metadata accessor for NLTag);
  uint64_t v3 = sub_1A67CC240(&qword_1E96C29A8, (void (*)(uint64_t))type metadata accessor for NLTag);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

void *sub_1A67C57A8(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A67C57C8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A67C57C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C29C8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C29D0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A67C5900(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C29B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A67C5A20(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C29B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A67C5B38(uint64_t a1)
{
  return sub_1A67C5A20(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A67C5B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_1A6893210();
  if (v4)
  {
    unint64_t v6 = (unint64_t *)(a2 + 32);
    while (2)
    {
      unint64_t v9 = *v6++;
      unint64_t v8 = v9;
      switch(v9 >> 61)
      {
        case 1uLL:
          sub_1A6893210();
          swift_retain();
          sub_1A68920F0();
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_6;
        case 2uLL:
          uint64_t v7 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          goto LABEL_4;
        case 3uLL:
          uint64_t v7 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          goto LABEL_4;
        case 4uLL:
          uint64_t v7 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_4:
          sub_1A6893210();
          swift_retain();
          sub_1A67C5B4C(a1, v7);
          goto LABEL_5;
        case 5uLL:
          uint64_t result = sub_1A6893210();
          goto LABEL_6;
        default:
          sub_1A6893210();
          swift_retain();
          sub_1A68920F0();
LABEL_5:
          uint64_t result = swift_release();
LABEL_6:
          if (--v4) {
            continue;
          }
          return result;
      }
    }
  }
  return result;
}

uint64_t sub_1A67C5D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_1A6893210();
  if (v4)
  {
    uint64_t v6 = a2 + 48;
    do
    {
      uint64_t v11 = v4;
      unint64_t v7 = *(void *)(v6 + 24);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1A67669A4(v7);
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      sub_1A6893220();
      if ((~v7 & 0xF000000000000007) != 0)
      {
        sub_1A6893220();
        switch(v7 >> 62)
        {
          case 1uLL:
            uint64_t v10 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            goto LABEL_11;
          case 2uLL:
            uint64_t v10 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            goto LABEL_11;
          case 3uLL:
            uint64_t v10 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_11:
            sub_1A6893210();
            sub_1A67C62B8(a1, v10);
            break;
          default:
            unint64_t v8 = *(void **)(v7 + 16);
            sub_1A6893210();
            sub_1A6892000();
            id v9 = v8;
            sub_1A68920F0();
            swift_bridgeObjectRelease();
            sub_1A6893230();

            break;
        }
      }
      else
      {
        sub_1A6893220();
      }
      v6 += 64;
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A6766B08(v7);
      uint64_t result = swift_bridgeObjectRelease();
      --v4;
    }
    while (v11 != 1);
  }
  return result;
}

uint64_t sub_1A67C5F88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1A6893210();
  uint64_t v12 = v3;
  if (v3)
  {
    uint64_t v5 = 0;
    uint64_t v11 = a2 + 32;
    do
    {
      uint64_t v6 = (uint64_t *)(v11 + 40 * v5);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[2];
      sub_1A6893210();
      uint64_t v9 = *(void *)(v7 + 16);
      if (v9)
      {
        uint64_t v13 = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        uint64_t v10 = v7 + 80;
        do
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A68920F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1A68920F0();
          swift_bridgeObjectRelease();
          sub_1A6893220();
          swift_bridgeObjectRetain();
          sub_1A68920F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v10 += 56;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        uint64_t v5 = v13;
        if (!v8)
        {
LABEL_10:
          sub_1A6893220();
          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v8) {
          goto LABEL_10;
        }
      }
      sub_1A6893220();
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
LABEL_5:
      ++v5;
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
    }
    while (v5 != v12);
  }
  return result;
}

uint64_t sub_1A67C61B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1A6893210();
  if (v3)
  {
    uint64_t v5 = a2 + 80;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      sub_1A6893220();
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      v5 += 56;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_1A67C62B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  sub_1A6893210();
  if (v4)
  {
    uint64_t v5 = (unint64_t *)(a2 + 32);
    while (2)
    {
      unint64_t v8 = *v5++;
      unint64_t v7 = v8;
      switch(v8 >> 62)
      {
        case 1uLL:
          uint64_t v6 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          goto LABEL_4;
        case 2uLL:
          uint64_t v6 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          goto LABEL_4;
        case 3uLL:
          uint64_t v6 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_4:
          sub_1A6893210();
          swift_retain();
          sub_1A67C62B8(a1, v6);
          swift_release();
          if (--v4) {
            continue;
          }
          return;
        default:
          uint64_t v9 = *(void **)(v7 + 16);
          sub_1A6893210();
          sub_1A6892000();
          swift_retain();
          id v10 = v9;
          sub_1A68920F0();
          swift_bridgeObjectRelease();
          sub_1A6893230();
          swift_release();

          if (--v4) {
            continue;
          }
          return;
      }
    }
  }
}

uint64_t sub_1A67C6408(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v18 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_19;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v18) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v17 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v8);
      if (!v12) {
        break;
      }
    }
LABEL_18:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_19:
    uint64_t v14 = *(void *)(*(void *)(a2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    swift_bridgeObjectRelease();
    sub_1A6893210();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = v14 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1A68920F0();
        swift_bridgeObjectRelease();
        v16 += 16;
        --v15;
      }
      while (v15);
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A6893250();
    v7 ^= result;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v18)
  {
LABEL_23:
    swift_release();
    return sub_1A6893210();
  }
  unint64_t v12 = *(void *)(v17 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v18) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v17 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s12TextToSpeech13PostMatchRuleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 2uLL:
      if (v3 >> 62 == 2) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 3uLL:
      if (v3 >> 62 != 3) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v14 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      LOBYTE(v14) = sub_1A67BBD20(v14, v15);
      swift_release();
      swift_release();
      uint64_t result = v14 & 1;
      break;
    default:
      if (v3 >> 62)
      {
LABEL_11:
        uint64_t result = 0;
      }
      else
      {
        uint64_t v4 = *(void **)(v2 + 16);
        float v5 = *(float *)(v2 + 24);
        uint64_t v6 = *(void **)(v3 + 16);
        float v7 = *(float *)(v3 + 24);
        uint64_t v8 = sub_1A6892000();
        uint64_t v10 = v9;
        if (v8 == sub_1A6892000() && v10 == v11) {
          char v13 = 1;
        }
        else {
          char v13 = sub_1A6893120();
        }
        swift_retain();
        id v17 = v4;
        id v18 = v6;
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = v13 & (v5 == v7);
      }
      break;
  }
  return result;
}

unint64_t sub_1A67C67A0()
{
  unint64_t result = qword_1E96C7770;
  if (!qword_1E96C7770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C7770);
  }
  return result;
}

unint64_t sub_1A67C67F4()
{
  unint64_t result = qword_1E96C7778;
  if (!qword_1E96C7778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C7778);
  }
  return result;
}

unint64_t sub_1A67C6848()
{
  unint64_t result = qword_1E96C26B8;
  if (!qword_1E96C26B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C26B8);
  }
  return result;
}

unint64_t sub_1A67C689C()
{
  unint64_t result = qword_1E96C7780;
  if (!qword_1E96C7780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C7780);
  }
  return result;
}

unint64_t sub_1A67C68F0()
{
  unint64_t result = qword_1E96C7788;
  if (!qword_1E96C7788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C7788);
  }
  return result;
}

unint64_t sub_1A67C6944()
{
  unint64_t result = qword_1E96C7790;
  if (!qword_1E96C7790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C7790);
  }
  return result;
}

void type metadata accessor for NLTag()
{
  if (!qword_1E96C2980)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E96C2980);
    }
  }
}

uint64_t sub_1A67C69F0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1A67C6A28()
{
  unint64_t result = qword_1E96C2700;
  if (!qword_1E96C2700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2700);
  }
  return result;
}

uint64_t sub_1A67C6A7C()
{
  return MEMORY[0x1F4186498](v0, 28, 7);
}

uint64_t _s12TextToSpeech21RulesetActivationRuleO2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        return 0;
      }
      char v8 = *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unsigned __int8 v9 = *(unsigned char *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v10 = sub_1A67BB390(v9, v8);
      swift_release();
      swift_release();
      return v10 & 1;
    case 2uLL:
      if (v3 >> 61 == 2) {
        goto LABEL_15;
      }
      return 0;
    case 3uLL:
      if (v3 >> 61 == 3) {
        goto LABEL_15;
      }
      return 0;
    case 4uLL:
      if (v3 >> 61 != 4) {
        return 0;
      }
LABEL_15:
      uint64_t v6 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v7 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      LOBYTE(v6) = sub_1A67BB598(v6, v7);
      swift_release();
      swift_release();
      return v6 & 1;
    case 5uLL:
      if (v3 != 0xA000000000000000) {
        return 0;
      }
      swift_release();
      return 1;
    default:
      if (v3 >> 61) {
        return 0;
      }
      if (*(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24)) {
        return 1;
      }
      return sub_1A6893120();
  }
}

unint64_t sub_1A67C6C44()
{
  unint64_t result = qword_1E96C7798;
  if (!qword_1E96C7798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C7798);
  }
  return result;
}

unint64_t sub_1A67C6C98()
{
  unint64_t result = qword_1E96C77A0;
  if (!qword_1E96C77A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77A0);
  }
  return result;
}

unint64_t sub_1A67C6CEC()
{
  unint64_t result = qword_1E96C2758;
  if (!qword_1E96C2758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2758);
  }
  return result;
}

unint64_t sub_1A67C6D40()
{
  unint64_t result = qword_1E96C77A8;
  if (!qword_1E96C77A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77A8);
  }
  return result;
}

unint64_t sub_1A67C6D94()
{
  unint64_t result = qword_1E96C77B0;
  if (!qword_1E96C77B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77B0);
  }
  return result;
}

unint64_t sub_1A67C6DE8()
{
  unint64_t result = qword_1E96C77B8;
  if (!qword_1E96C77B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77B8);
  }
  return result;
}

unint64_t sub_1A67C6E3C()
{
  unint64_t result = qword_1E96C77C0;
  if (!qword_1E96C77C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77C0);
  }
  return result;
}

unint64_t sub_1A67C6E90()
{
  unint64_t result = qword_1E96C2760;
  if (!qword_1E96C2760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2760);
  }
  return result;
}

unint64_t sub_1A67C6EE4()
{
  unint64_t result = qword_1E96C77C8;
  if (!qword_1E96C77C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77C8);
  }
  return result;
}

unint64_t sub_1A67C6F38()
{
  unint64_t result = qword_1E96C27A8;
  if (!qword_1E96C27A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C27A8);
  }
  return result;
}

uint64_t sub_1A67C6F8C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unint64_t sub_1A67C6F9C()
{
  unint64_t result = qword_1E96C27B0;
  if (!qword_1E96C27B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C27B0);
  }
  return result;
}

uint64_t sub_1A67C6FF0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t _s12TextToSpeech16PronuncationRuleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  int v10 = *(unsigned __int8 *)(a2 + 33);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1A6893120(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_1A6893120(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v4) {
        uint64_t v15 = 6385769;
      }
      else {
        uint64_t v15 = 7823730;
      }
      if (v9) {
        uint64_t v16 = 6385769;
      }
      else {
        uint64_t v16 = 7823730;
      }
      if (v15 == v16)
      {
        swift_bridgeObjectRelease_n();
        if (v5 != v10) {
          return 0;
        }
      }
      else
      {
        char v17 = sub_1A6893120();
        swift_bridgeObjectRelease_n();
        uint64_t result = 0;
        if (v17 & 1) == 0 || ((v5 ^ v10)) {
          return result;
        }
      }
      if ((~v6 & 0xF000000000000007) != 0)
      {
        uint64_t v24 = v6;
        if ((~v11 & 0xF000000000000007) != 0)
        {
          uint64_t v23 = v11;
          sub_1A67669A4(v6);
          swift_retain();
          char matched = _s12TextToSpeech13PostMatchRuleO2eeoiySbAC_ACtFZ_0(&v24, (unint64_t *)&v23);
          swift_release();
          sub_1A6766B08(v6);
          if (matched)
          {
LABEL_25:
            if (v22 == v20 && v21 == v19) {
              return 1;
            }
            return sub_1A6893120();
          }
          return 0;
        }
        swift_retain();
      }
      else if ((~v11 & 0xF000000000000007) == 0)
      {
        goto LABEL_25;
      }
      sub_1A67669A4(v11);
      sub_1A6766B08(v6);
      sub_1A6766B08(v11);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1A67C7254()
{
  unint64_t result = qword_1E96C77D0;
  if (!qword_1E96C77D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77D0);
  }
  return result;
}

unint64_t sub_1A67C72A8()
{
  unint64_t result = qword_1E96C27C0;
  if (!qword_1E96C27C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C27C0);
  }
  return result;
}

unint64_t sub_1A67C72FC()
{
  unint64_t result = qword_1E96C27D0;
  if (!qword_1E96C27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C27D0);
  }
  return result;
}

uint64_t type metadata accessor for PronunciationRuleSet()
{
  uint64_t result = qword_1E96C8D00;
  if (!qword_1E96C8D00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s12TextToSpeech11SiriRuleSetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  if ((sub_1A67BBBC4(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (!v4)
  {
    if (!v8)
    {
LABEL_11:
      if (v3 == v7 && v5 == v9) {
        return 1;
      }
      return sub_1A6893120();
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  if (v2 == v6 && v4 == v8) {
    goto LABEL_11;
  }
  char v10 = sub_1A6893120();
  uint64_t result = 0;
  if (v10) {
    goto LABEL_11;
  }
  return result;
}

uint64_t _s12TextToSpeech20PronunciationRuleSetV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = sub_1A6893120();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = (int *)type metadata accessor for PronunciationRuleSet();
  if ((sub_1A68917E0() & 1) == 0) {
    return 0;
  }
  uint64_t v8 = v7[6];
  uint64_t v9 = *(void *)((char *)a1 + v8);
  uint64_t v10 = *(void *)((char *)a1 + v8 + 8);
  uint64_t v11 = (void *)((char *)a2 + v8);
  if (v9 != *v11 || v10 != v11[1])
  {
    char v13 = sub_1A6893120();
    uint64_t result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  uint64_t v14 = v7[7];
  uint64_t v15 = *(void *)((char *)a1 + v14);
  unint64_t v27 = *(void *)((char *)a2 + v14);
  uint64_t v28 = v15;
  if ((_s12TextToSpeech21RulesetActivationRuleO2eeoiySbAC_ACtFZ_0(&v28, &v27) & 1) == 0) {
    return 0;
  }
  uint64_t v16 = v7[8];
  char v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = *(void *)((char *)a1 + v16 + 8);
  uint64_t v19 = (void *)((char *)a2 + v16);
  uint64_t v20 = v19[1];
  if (v18)
  {
    if (v20)
    {
      if (*v17 != *v19 || v18 != v20)
      {
        char v22 = sub_1A6893120();
        uint64_t result = 0;
        if ((v22 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_22;
    }
    return 0;
  }
  if (v20) {
    return 0;
  }
LABEL_22:
  if ((sub_1A67BB890(*(void *)((char *)a1 + v7[9]), *(void *)((char *)a2 + v7[9])) & 1) == 0
    || *(void *)((char *)a1 + v7[10]) != *(void *)((char *)a2 + v7[10])
    || *((unsigned __int8 *)a1 + v7[11]) != *((unsigned __int8 *)a2 + v7[11]))
  {
    return 0;
  }
  uint64_t v23 = v7[12];
  uint64_t v24 = *(void *)((char *)a1 + v23);
  uint64_t v25 = *(void *)((char *)a1 + v23 + 8);
  BOOL v26 = (void *)((char *)a2 + v23);
  if (v24 == *v26 && v25 == v26[1]) {
    return 1;
  }

  return sub_1A6893120();
}

unint64_t sub_1A67C7648()
{
  unint64_t result = qword_1E96C77D8;
  if (!qword_1E96C77D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77D8);
  }
  return result;
}

unint64_t sub_1A67C769C()
{
  unint64_t result = qword_1E96C27F8;
  if (!qword_1E96C27F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C27F8);
  }
  return result;
}

uint64_t sub_1A67C76F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6891800();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A67C7734()
{
  unint64_t result = qword_1E96C2818;
  if (!qword_1E96C2818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2818);
  }
  return result;
}

uint64_t _s12TextToSpeech8SiriRuleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1A6893120(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v9) {
        return 0;
      }
    }
    else
    {
      char v14 = sub_1A6893120();
      uint64_t result = 0;
      if (v14 & 1) == 0 || ((v4 ^ v9)) {
        return result;
      }
    }
    if (v5 == v10 && v6 == v11)
    {
      return 1;
    }
    else
    {
      return sub_1A6893120();
    }
  }
  return result;
}

unint64_t sub_1A67C78B4()
{
  unint64_t result = qword_1E96C77E0;
  if (!qword_1E96C77E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77E0);
  }
  return result;
}

uint64_t sub_1A67C7908(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1A67C7960(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A67C79D8()
{
  unint64_t result = qword_1E96C77E8;
  if (!qword_1E96C77E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C77E8);
  }
  return result;
}

unint64_t sub_1A67C7A2C()
{
  unint64_t result = qword_1E96C2898;
  if (!qword_1E96C2898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2898);
  }
  return result;
}

unint64_t sub_1A67C7A80()
{
  unint64_t result = qword_1E96C28B0;
  if (!qword_1E96C28B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C28B0);
  }
  return result;
}

uint64_t sub_1A67C7AD4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A67C7B24(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A67C7B70()
{
  unint64_t result = qword_1E96C77F0[0];
  if (!qword_1E96C77F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C77F0);
  }
  return result;
}

unint64_t sub_1A67C7BC4()
{
  unint64_t result = qword_1E96C28C8;
  if (!qword_1E96C28C8)
  {
    sub_1A6750AC4(&qword_1E96C28C0);
    sub_1A67C7D50(&qword_1E96C28D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C28C8);
  }
  return result;
}

unint64_t sub_1A67C7C60()
{
  unint64_t result = qword_1E96C28E8;
  if (!qword_1E96C28E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C28E8);
  }
  return result;
}

unint64_t sub_1A67C7CB4()
{
  unint64_t result = qword_1E96C28F8;
  if (!qword_1E96C28F8)
  {
    sub_1A6750AC4(&qword_1E96C28C0);
    sub_1A67C7D50(&qword_1E96C2900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C28F8);
  }
  return result;
}

uint64_t sub_1A67C7D50(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6750AC4(&qword_1E96C15A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A67C7DB4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6750AC4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A67C7E20()
{
  unint64_t result = qword_1E96C2910;
  if (!qword_1E96C2910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2910);
  }
  return result;
}

unint64_t sub_1A67C7E78()
{
  unint64_t result = qword_1E96C2918;
  if (!qword_1E96C2918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2918);
  }
  return result;
}

unint64_t sub_1A67C7ED0()
{
  unint64_t result = qword_1E96C2920;
  if (!qword_1E96C2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2920);
  }
  return result;
}

uint64_t sub_1A67C7F24()
{
  return sub_1A6766A64(&qword_1E96C2928, &qword_1E96C2930);
}

unint64_t sub_1A67C7F64()
{
  unint64_t result = qword_1E96C2938;
  if (!qword_1E96C2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2938);
  }
  return result;
}

unint64_t sub_1A67C7FBC()
{
  unint64_t result = qword_1E96C2940;
  if (!qword_1E96C2940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2940);
  }
  return result;
}

uint64_t sub_1A67C8010()
{
  return sub_1A6766A64(&qword_1E96C2948, &qword_1E96C2950);
}

unint64_t sub_1A67C8050()
{
  unint64_t result = qword_1E96C2958;
  if (!qword_1E96C2958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2958);
  }
  return result;
}

uint64_t sub_1A67C80A4()
{
  return sub_1A67CC240(&qword_1E96C2960, (void (*)(uint64_t))type metadata accessor for PronunciationRuleSet);
}

unint64_t sub_1A67C80F0()
{
  unint64_t result = qword_1E96C2968;
  if (!qword_1E96C2968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2968);
  }
  return result;
}

unint64_t sub_1A67C8148()
{
  unint64_t result = qword_1E96C2970;
  if (!qword_1E96C2970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2970);
  }
  return result;
}

unint64_t sub_1A67C81A0()
{
  unint64_t result = qword_1E96C2978;
  if (!qword_1E96C2978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2978);
  }
  return result;
}

uint64_t sub_1A67C81F4()
{
  return 0;
}

void *_s4SpecV7ControlOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s4SpecV7ControlOwxx()
{
  return swift_release();
}

void *_s4SpecV7ControlOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *_s4SpecV7ControlOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s4SpecV7ControlOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s4SpecV7ControlOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)unint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A67C836C(void *a1)
{
  return *a1 >> 62;
}

void *sub_1A67C8378(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1A67C8388(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for PostMatchRule()
{
  return &type metadata for PostMatchRule;
}

ValueMetadata *type metadata accessor for RulesetTargetSynthesizer()
{
  return &type metadata for RulesetTargetSynthesizer;
}

uint64_t dispatch thunk of TTSPronunciationLoader.siriRules(language:orderKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of TTSPronunciationLoader.axRules(language:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void *initializeBufferWithCopyOfBuffer for RulesetActivationRule(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for RulesetActivationRule()
{
  return swift_release();
}

void *assignWithCopy for RulesetActivationRule(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for RulesetActivationRule(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RulesetActivationRule(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RulesetActivationRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)unint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A67C8554(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 5;
  }
}

void *sub_1A67C8570(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1A67C8580(unint64_t *result, uint64_t a2)
{
  if (a2 < 5)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 5);
    unint64_t v3 = 0xA000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for RulesetActivationRule()
{
  return &type metadata for RulesetActivationRule;
}

uint64_t destroy for PronuncationRule(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 40) & 0xF000000000000007) != 0) {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PronuncationRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v7 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PronuncationRule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 40);
  unint64_t v7 = v6 & 0xF000000000000007;
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if (v7 == 0xF000000000000007)
    {
      sub_1A67C87B4(a1 + 40);
      *uint64_t v5 = *(void *)(a2 + 40);
    }
    else
    {
      *uint64_t v5 = v6;
      swift_retain();
      swift_release();
    }
  }
  else
  {
    *uint64_t v5 = v6;
    if (v7 != 0xF000000000000007) {
      swift_retain();
    }
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A67C87B4(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for PronuncationRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  unint64_t v7 = (void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(void *)(a2 + 40);
  if ((~v6 & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *unint64_t v7 = v8;
      swift_release();
      goto LABEL_6;
    }
    sub_1A67C87B4(a1 + 40);
  }
  *unint64_t v7 = v8;
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PronuncationRule(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PronuncationRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PronuncationRule()
{
  return &type metadata for PronuncationRule;
}

ValueMetadata *type metadata accessor for PronuncationRule.ReplacementType()
{
  return &type metadata for PronuncationRule.ReplacementType;
}

void *initializeBufferWithCopyOfBuffer for PronunciationRuleSet(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A6891800();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *(void *)((char *)v4 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = (void *)((char *)v4 + v18);
    uint64_t v21 = (void *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    *(void *)((char *)v4 + v19) = *(void *)((char *)a2 + v19);
    uint64_t v23 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
    uint64_t v24 = a3[12];
    uint64_t v25 = (void *)((char *)v4 + v24);
    BOOL v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PronunciationRuleSet(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A6891800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PronunciationRuleSet(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A6891800();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v17);
  uint64_t v20 = (void *)((char *)a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v22 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
  uint64_t v23 = a3[12];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PronunciationRuleSet(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A6891800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  void *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PronunciationRuleSet(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A6891800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *assignWithTake for PronunciationRuleSet(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A6891800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PronunciationRuleSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A67C905C);
}

uint64_t sub_1A67C905C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A6891800();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PronunciationRuleSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A67C9120);
}

uint64_t sub_1A67C9120(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A6891800();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A67C91C8()
{
  uint64_t result = sub_1A6891800();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SiriRule()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SiriRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SiriRule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SiriRule(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SiriRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriRule(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriRule()
{
  return &type metadata for SiriRule;
}

uint64_t destroy for SiriRuleSet()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SiriRuleSet(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SiriRuleSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SiriRuleSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriRuleSet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriRuleSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriRuleSet()
{
  return &type metadata for SiriRuleSet;
}

uint64_t destroy for SiriRulesetGroup()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s12TextToSpeech16SiriRulesetGroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SiriRulesetGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SiriRulesetGroup(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriRulesetGroup(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriRulesetGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriRulesetGroup()
{
  return &type metadata for SiriRulesetGroup;
}

ValueMetadata *type metadata accessor for SiriRulesetGroup.CodingKeys()
{
  return &type metadata for SiriRulesetGroup.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SiriRuleSet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67C999CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriRuleSet.CodingKeys()
{
  return &type metadata for SiriRuleSet.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriRule.CodingKeys()
{
  return &type metadata for SiriRule.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PronunciationRuleSet.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PronunciationRuleSet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67C9B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PronunciationRuleSet.CodingKeys()
{
  return &type metadata for PronunciationRuleSet.CodingKeys;
}

ValueMetadata *type metadata accessor for PronuncationRule.CodingKeys()
{
  return &type metadata for PronuncationRule.CodingKeys;
}

unsigned char *_s12TextToSpeech16PronuncationRuleV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67C9C5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RulesetActivationRule.CodingKeys()
{
  return &type metadata for RulesetActivationRule.CodingKeys;
}

ValueMetadata *type metadata accessor for RulesetActivationRule.VoiceIdentifierPrefixCodingKeys()
{
  return &type metadata for RulesetActivationRule.VoiceIdentifierPrefixCodingKeys;
}

ValueMetadata *type metadata accessor for RulesetActivationRule.SynthesizerCodingKeys()
{
  return &type metadata for RulesetActivationRule.SynthesizerCodingKeys;
}

ValueMetadata *type metadata accessor for RulesetActivationRule.AllCodingKeys()
{
  return &type metadata for RulesetActivationRule.AllCodingKeys;
}

ValueMetadata *type metadata accessor for RulesetActivationRule.AndCodingKeys()
{
  return &type metadata for RulesetActivationRule.AndCodingKeys;
}

ValueMetadata *type metadata accessor for RulesetActivationRule.OrCodingKeys()
{
  return &type metadata for RulesetActivationRule.OrCodingKeys;
}

ValueMetadata *type metadata accessor for RulesetActivationRule.NotCodingKeys()
{
  return &type metadata for RulesetActivationRule.NotCodingKeys;
}

uint64_t getEnumTagSinglePayload for TTSSpeechQueue.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12TextToSpeech24RulesetTargetSynthesizerOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67C9E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PostMatchRule.CodingKeys()
{
  return &type metadata for PostMatchRule.CodingKeys;
}

unsigned char *_s12TextToSpeech16PronuncationRuleV15ReplacementTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67C9F60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PostMatchRule.PartOfSpeechCodingKeys()
{
  return &type metadata for PostMatchRule.PartOfSpeechCodingKeys;
}

ValueMetadata *type metadata accessor for PostMatchRule.AndCodingKeys()
{
  return &type metadata for PostMatchRule.AndCodingKeys;
}

ValueMetadata *type metadata accessor for PostMatchRule.OrCodingKeys()
{
  return &type metadata for PostMatchRule.OrCodingKeys;
}

uint64_t getEnumTagSinglePayload for TTSSSEParamCustomUnit(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s12TextToSpeech21RulesetActivationRuleO31VoiceIdentifierPrefixCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A67CA0A4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PostMatchRule.NotCodingKeys()
{
  return &type metadata for PostMatchRule.NotCodingKeys;
}

unint64_t sub_1A67CA0E0()
{
  unint64_t result = qword_1E96C8E10[0];
  if (!qword_1E96C8E10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C8E10);
  }
  return result;
}

unint64_t sub_1A67CA138()
{
  unint64_t result = qword_1E96C9020[0];
  if (!qword_1E96C9020[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C9020);
  }
  return result;
}

unint64_t sub_1A67CA190()
{
  unint64_t result = qword_1E96C9230[0];
  if (!qword_1E96C9230[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C9230);
  }
  return result;
}

unint64_t sub_1A67CA1E8()
{
  unint64_t result = qword_1E96C9440[0];
  if (!qword_1E96C9440[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C9440);
  }
  return result;
}

unint64_t sub_1A67CA240()
{
  unint64_t result = qword_1E96C9650[0];
  if (!qword_1E96C9650[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C9650);
  }
  return result;
}

uint64_t sub_1A67CA294()
{
  return sub_1A67CC240(&qword_1E96C2988, (void (*)(uint64_t))type metadata accessor for NLTag);
}

uint64_t sub_1A67CA2DC()
{
  return sub_1A67CC240(&qword_1E96C2990, (void (*)(uint64_t))type metadata accessor for NLTag);
}

uint64_t sub_1A67CA324()
{
  return sub_1A67CC240(&qword_1E96C2998, (void (*)(uint64_t))type metadata accessor for NLTag);
}

unint64_t sub_1A67CA370()
{
  unint64_t result = qword_1E96C9B60[0];
  if (!qword_1E96C9B60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C9B60);
  }
  return result;
}

unint64_t sub_1A67CA3C8()
{
  unint64_t result = qword_1E96C9D70[0];
  if (!qword_1E96C9D70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C9D70);
  }
  return result;
}

unint64_t sub_1A67CA420()
{
  unint64_t result = qword_1E96C9F80[0];
  if (!qword_1E96C9F80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C9F80);
  }
  return result;
}

unint64_t sub_1A67CA478()
{
  unint64_t result = qword_1E96CA290[0];
  if (!qword_1E96CA290[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CA290);
  }
  return result;
}

unint64_t sub_1A67CA4D0()
{
  unint64_t result = qword_1E96CA4A0[0];
  if (!qword_1E96CA4A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CA4A0);
  }
  return result;
}

unint64_t sub_1A67CA528()
{
  unint64_t result = qword_1E96CA6B0[0];
  if (!qword_1E96CA6B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CA6B0);
  }
  return result;
}

unint64_t sub_1A67CA580()
{
  unint64_t result = qword_1E96CA8C0[0];
  if (!qword_1E96CA8C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CA8C0);
  }
  return result;
}

unint64_t sub_1A67CA5D8()
{
  unint64_t result = qword_1E96CAAD0[0];
  if (!qword_1E96CAAD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CAAD0);
  }
  return result;
}

unint64_t sub_1A67CA630()
{
  unint64_t result = qword_1E96CACE0[0];
  if (!qword_1E96CACE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CACE0);
  }
  return result;
}

unint64_t sub_1A67CA688()
{
  unint64_t result = qword_1E96CAEF0[0];
  if (!qword_1E96CAEF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CAEF0);
  }
  return result;
}

unint64_t sub_1A67CA6E0()
{
  unint64_t result = qword_1E96CB100[0];
  if (!qword_1E96CB100[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB100);
  }
  return result;
}

unint64_t sub_1A67CA738()
{
  unint64_t result = qword_1E96CB210;
  if (!qword_1E96CB210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB210);
  }
  return result;
}

unint64_t sub_1A67CA790()
{
  unint64_t result = qword_1E96CB218[0];
  if (!qword_1E96CB218[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB218);
  }
  return result;
}

unint64_t sub_1A67CA7E8()
{
  unint64_t result = qword_1E96CB2A0;
  if (!qword_1E96CB2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB2A0);
  }
  return result;
}

unint64_t sub_1A67CA840()
{
  unint64_t result = qword_1E96CB2A8[0];
  if (!qword_1E96CB2A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB2A8);
  }
  return result;
}

unint64_t sub_1A67CA898()
{
  unint64_t result = qword_1E96CB330;
  if (!qword_1E96CB330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB330);
  }
  return result;
}

unint64_t sub_1A67CA8F0()
{
  unint64_t result = qword_1E96CB338[0];
  if (!qword_1E96CB338[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB338);
  }
  return result;
}

unint64_t sub_1A67CA948()
{
  unint64_t result = qword_1E96CB3C0;
  if (!qword_1E96CB3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB3C0);
  }
  return result;
}

unint64_t sub_1A67CA9A0()
{
  unint64_t result = qword_1E96CB3C8[0];
  if (!qword_1E96CB3C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB3C8);
  }
  return result;
}

unint64_t sub_1A67CA9F8()
{
  unint64_t result = qword_1E96CB450;
  if (!qword_1E96CB450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB450);
  }
  return result;
}

unint64_t sub_1A67CAA50()
{
  unint64_t result = qword_1E96CB458[0];
  if (!qword_1E96CB458[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB458);
  }
  return result;
}

unint64_t sub_1A67CAAA8()
{
  unint64_t result = qword_1E96CB4E0;
  if (!qword_1E96CB4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB4E0);
  }
  return result;
}

unint64_t sub_1A67CAB00()
{
  unint64_t result = qword_1E96CB4E8[0];
  if (!qword_1E96CB4E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB4E8);
  }
  return result;
}

unint64_t sub_1A67CAB58()
{
  unint64_t result = qword_1E96CB570;
  if (!qword_1E96CB570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB570);
  }
  return result;
}

unint64_t sub_1A67CABB0()
{
  unint64_t result = qword_1E96CB578;
  if (!qword_1E96CB578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB578);
  }
  return result;
}

unint64_t sub_1A67CAC08()
{
  unint64_t result = qword_1E96CB600;
  if (!qword_1E96CB600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB600);
  }
  return result;
}

unint64_t sub_1A67CAC60()
{
  unint64_t result = qword_1E96CB608[0];
  if (!qword_1E96CB608[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB608);
  }
  return result;
}

unint64_t sub_1A67CACB8()
{
  unint64_t result = qword_1E96CB690;
  if (!qword_1E96CB690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB690);
  }
  return result;
}

unint64_t sub_1A67CAD10()
{
  unint64_t result = qword_1E96CB698[0];
  if (!qword_1E96CB698[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB698);
  }
  return result;
}

unint64_t sub_1A67CAD68()
{
  unint64_t result = qword_1E96CB720;
  if (!qword_1E96CB720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB720);
  }
  return result;
}

unint64_t sub_1A67CADC0()
{
  unint64_t result = qword_1E96CB728[0];
  if (!qword_1E96CB728[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB728);
  }
  return result;
}

unint64_t sub_1A67CAE18()
{
  unint64_t result = qword_1E96CB7B0;
  if (!qword_1E96CB7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB7B0);
  }
  return result;
}

unint64_t sub_1A67CAE70()
{
  unint64_t result = qword_1E96CB7B8[0];
  if (!qword_1E96CB7B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB7B8);
  }
  return result;
}

unint64_t sub_1A67CAEC8()
{
  unint64_t result = qword_1E96CB840;
  if (!qword_1E96CB840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB840);
  }
  return result;
}

unint64_t sub_1A67CAF20()
{
  unint64_t result = qword_1E96CB848[0];
  if (!qword_1E96CB848[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB848);
  }
  return result;
}

unint64_t sub_1A67CAF78()
{
  unint64_t result = qword_1E96CB8D0;
  if (!qword_1E96CB8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB8D0);
  }
  return result;
}

unint64_t sub_1A67CAFD0()
{
  unint64_t result = qword_1E96CB8D8[0];
  if (!qword_1E96CB8D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB8D8);
  }
  return result;
}

unint64_t sub_1A67CB028()
{
  unint64_t result = qword_1E96CB960;
  if (!qword_1E96CB960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB960);
  }
  return result;
}

unint64_t sub_1A67CB080()
{
  unint64_t result = qword_1E96CB968[0];
  if (!qword_1E96CB968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB968);
  }
  return result;
}

unint64_t sub_1A67CB0D8()
{
  unint64_t result = qword_1E96CB9F0;
  if (!qword_1E96CB9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CB9F0);
  }
  return result;
}

unint64_t sub_1A67CB130()
{
  unint64_t result = qword_1E96CB9F8[0];
  if (!qword_1E96CB9F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CB9F8);
  }
  return result;
}

unint64_t sub_1A67CB188()
{
  unint64_t result = qword_1E96CBA80;
  if (!qword_1E96CBA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CBA80);
  }
  return result;
}

unint64_t sub_1A67CB1E0()
{
  unint64_t result = qword_1E96CBA88[0];
  if (!qword_1E96CBA88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CBA88);
  }
  return result;
}

unint64_t sub_1A67CB238()
{
  unint64_t result = qword_1E96CBB10;
  if (!qword_1E96CBB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CBB10);
  }
  return result;
}

unint64_t sub_1A67CB290()
{
  unint64_t result = qword_1E96CBB18[0];
  if (!qword_1E96CBB18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CBB18);
  }
  return result;
}

uint64_t sub_1A67CB2E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7053664F74726170 && a2 == 0xEC00000068636565;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581857 && a2 == 0xE300000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7630702 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A67CB480(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61747265436E696DLL && a2 == 0xEC00000079746E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A67CB57C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001A68CE450 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69736568746E7973 && a2 == 0xEB0000000072657ALL || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7105633 && a2 == 0xE300000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6581857 && a2 == 0xE300000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7630702 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A67CB7CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7865676572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEB00000000746E65 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEF65707954746E65 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6374614D74736F70 && a2 == 0xE900000000000068 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A67CBA80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974617669746361 && a2 == 0xEE00656C75526E6FLL || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6974617265706FLL && a2 == 0xEE00786567655267 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656C7572 && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1A67CBE48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7865676572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEB00000000746E65 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A67CC00C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A68CE470 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A67CC154(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746573656C7572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A67CC240(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A67CC288()
{
  unint64_t result = qword_1E96C29C0;
  if (!qword_1E96C29C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C29C0);
  }
  return result;
}

uint64_t sub_1A67CC2DC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A67CC334()
{
  sub_1A67CC9A4();
  uint64_t result = sub_1A68929F0();
  qword_1E96D61F8 = result;
  return result;
}

uint64_t sub_1A67CC394()
{
  sub_1A67CC9A4();
  uint64_t result = sub_1A68929F0();
  qword_1E96D6200 = result;
  return result;
}

uint64_t sub_1A67CC3F0()
{
  sub_1A67CC9A4();
  uint64_t result = sub_1A68929F0();
  qword_1E96D6208 = result;
  return result;
}

id sub_1A67CC454()
{
  sub_1A6741AD0((uint64_t *)&unk_1E96C15F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A68A1D30;
  if (qword_1E96CBBA0 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)qword_1E96D61F8;
  *(void *)(v0 + 32) = qword_1E96D61F8;
  uint64_t v2 = qword_1E96CBBA8;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  char v5 = (void *)qword_1E96D6200;
  *(void *)(v0 + 40) = qword_1E96D6200;
  sub_1A6892300();
  qword_1E96CBBC0 = v0;

  return v5;
}

id sub_1A67CC544()
{
  if (qword_1E96CBBB0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E96D6208;

  return v0;
}

uint64_t sub_1A67CC5A0(int a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (qword_1E96CBBB8 != -1) {
    swift_once();
  }
  unint64_t v13 = qword_1E96CBBC0;
  swift_bridgeObjectRetain();
  char v14 = sub_1A67CC82C(a2, v13);
  uint64_t result = swift_bridgeObjectRelease();
  if (v14)
  {
    int v30 = a1;
    if (a3)
    {
      v29[2] = a10;
      uint64_t v16 = sub_1A6891770();
      v29[1] = v29;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A6891710();
      uint64_t v20 = sub_1A6891720();
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      uint64_t v31 = v20;
      uint64_t v32 = v22;
      sub_1A6892150();
      sub_1A6892150();
      sub_1A6892150();
      uint64_t v23 = v31;
      uint64_t v24 = v32;
      sub_1A6892030();
      uint64_t v31 = v23;
      uint64_t v32 = v24;
      swift_bridgeObjectRetain();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v31;
      uint64_t v26 = v32;
    }
    else
    {
      uint64_t v25 = sub_1A6892030();
      uint64_t v26 = v27;
    }
    sub_1A6741AD0(&qword_1E96C1638);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1A689DC40;
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 64) = sub_1A6764000();
    *(void *)(v28 + 32) = v25;
    *(void *)(v28 + 40) = v26;
    sub_1A6891CB0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A67CC82C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1A6892EB0())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x1AD0BFD30](0, a2);
LABEL_5:
      char v6 = v5;
      sub_1A67CC9A4();
      char v7 = sub_1A68929B0();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_1A68929B0();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x1AD0BFD30](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_1A68929B0();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1A67CC9A4()
{
  unint64_t result = qword_1E96C29D8;
  if (!qword_1E96C29D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96C29D8);
  }
  return result;
}

TextToSpeech::TTSAudioEffect_optional AudioEffectConfiguration.spec.getter@<W0>(uint64_t a1@<X8>)
{
  v2._countAndFlagsBits = sub_1A6891B90();
  result.value = TTSAudioEffect.init(rawValue:)(v2).value;
  if (v15 == 2)
  {
    *(void *)(a1 + 48) = 0;
    long long v4 = 0uLL;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    long long v5 = 0uLL;
  }
  else
  {
    result.value = TTSAudioEffect.spec.getter((uint64_t)v9);
    uint64_t v6 = v9[1];
    uint64_t v7 = v12;
    long long v4 = v13;
    long long v5 = v14;
    *(void *)a1 = v9[0];
    *(void *)(a1 + 8) = v6;
    long long v8 = v11;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = v7;
  }
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 72) = v5;
  return result;
}

uint64_t sub_1A67CCA78()
{
  unint64_t v1 = v0;
  uint64_t v33 = sub_1A6891BB0();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  long long v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = v0[3];
  long long v48 = v0[2];
  long long v49 = v5;
  uint64_t v50 = *((void *)v0 + 8);
  long long v6 = v0[1];
  long long v46 = *v0;
  long long v47 = v6;
  uint64_t v7 = sub_1A67CCE10();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    BOOL v29 = v0;
    long long v11 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v9 = v2 + 16;
    long long v10 = v11;
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64);
    uint64_t v28 = v7;
    unint64_t v13 = v7 + v12;
    uint64_t v14 = *(void *)(v9 + 56);
    char v15 = (void (**)(char *, uint64_t))(v9 - 8);
    uint64_t v16 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v17 = v33;
    uint64_t v32 = v9;
    uint64_t v31 = v11;
    uint64_t v30 = v14;
    v11(v4, v7 + v12, v33);
    while (1)
    {
      v18._countAndFlagsBits = sub_1A6891B90();
      TTSAudioEffect.init(rawValue:)(v18);
      if (v45 == 2)
      {
        (*v15)(v4, v17);
      }
      else
      {
        char v40 = v45 & 1;
        TTSAudioEffect.spec.getter((uint64_t)v41);
        uint64_t v19 = v41[0];
        uint64_t v20 = v41[1];
        uint64_t v21 = v41[2];
        uint64_t v37 = v41[3];
        uint64_t v36 = v41[4];
        uint64_t v35 = v41[5];
        int v34 = v42;
        long long v39 = v43;
        long long v38 = v44;
        (*v15)(v4, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1A67CF468(0, *((void *)v16 + 2) + 1, 1, v16);
        }
        unint64_t v23 = *((void *)v16 + 2);
        unint64_t v22 = *((void *)v16 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v16 = sub_1A67CF468((char *)(v22 > 1), v23 + 1, 1, v16);
        }
        *((void *)v16 + 2) = v23 + 1;
        uint64_t v24 = &v16[88 * v23];
        *((void *)v24 + 4) = v19;
        *((void *)v24 + 5) = v20;
        uint64_t v25 = v37;
        *((void *)v24 + 6) = v21;
        *((void *)v24 + 7) = v25;
        uint64_t v26 = v35;
        *((void *)v24 + 8) = v36;
        *((void *)v24 + 9) = v26;
        v24[80] = v34;
        *(_OWORD *)(v24 + 88) = v39;
        *(_OWORD *)(v24 + 104) = v38;
        uint64_t v17 = v33;
        long long v10 = v31;
        uint64_t v14 = v30;
      }
      v13 += v14;
      if (!--v8) {
        break;
      }
      v10(v4, v13, v17);
    }
    swift_bridgeObjectRelease();
    unint64_t v1 = v29;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = (char *)MEMORY[0x1E4FBC860];
  }
  if (sub_1A67CF230((uint64_t)v16, *((void *)v1 + 1)))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *((void *)v1 + 1) = v16;
    sub_1A67CD048();
  }
  return sub_1A67CD4D8();
}

uint64_t sub_1A67CCDD4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  *unint64_t v1 = a1;

  return sub_1A67CCA78();
}

uint64_t sub_1A67CCE10()
{
  uint64_t v1 = sub_1A6891BB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  long long v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v29 = *v0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(v29 + 16);
  uint64_t v10 = swift_bridgeObjectRetain();
  if (v9)
  {
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v11 = v2 + 16;
    unint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64);
    uint64_t v25 = v13;
    unint64_t v15 = v10 + v24;
    unint64_t v23 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v26 = v5;
    uint64_t v27 = v11;
    v13(v7, v10 + v24, v1);
    while (1)
    {
      if (sub_1A6891BA0())
      {
        uint64_t v17 = *v16;
        (*v16)(v5, v7, v1);
        uint64_t v18 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A67CF588(0, *(void *)(v18 + 16) + 1, 1);
          uint64_t v18 = v28;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        unint64_t v19 = *(void *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1A67CF588(v19 > 1, v20 + 1, 1);
          uint64_t v18 = v28;
        }
        *(void *)(v18 + 16) = v20 + 1;
        long long v5 = v26;
        v17((char *)(v18 + v24 + v20 * v14), v26, v1);
        uint64_t v28 = v18;
        unint64_t v12 = v25;
      }
      else
      {
        (*v23)(v7, v1);
      }
      v15 += v14;
      if (!--v9) {
        break;
      }
      v12(v7, v15, v1);
    }
    uint64_t v8 = v28;
  }
  sub_1A67D2B48((uint64_t)&v29);
  return v8;
}

uint64_t sub_1A67CD048()
{
  uint64_t v1 = v0;
  long long v2 = v0[3];
  v53[0] = v0[2];
  v53[1] = v2;
  uint64_t v54 = *((void *)v0 + 8);
  long long v3 = v0[1];
  long long v51 = *v0;
  long long v52 = v3;
  sub_1A67B4290((uint64_t)v53, (uint64_t)v58, &qword_1E96C14F0);
  sub_1A67B4290((uint64_t)&v54, (uint64_t)&v57, &qword_1E96C1548);
  uint64_t v4 = *(void *)(sub_1A67CCE10() + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = *((void *)&v51 + 1);
    v59[0] = *((void *)&v51 + 1);
    uint64_t v55 = *((void *)&v52 + 1);
    uint64_t v56 = v52;
    unint64_t v49 = 0xD000000000000045;
    unint64_t v50 = 0x80000001A68CE580;
    sub_1A67D2B48((uint64_t)&v56);
    sub_1A67D2B48((uint64_t)&v55);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    *((void *)v0 + 2) = MEMORY[0x1E4FBC860];
    *((void *)v0 + 3) = v6;
    uint64_t v30 = *(void *)(v5 + 16);
    if (v30)
    {
      unint64_t v35 = 0x75706E496E69616DLL;
      uint64_t v29 = v0;
      swift_bridgeObjectRetain();
      uint64_t v36 = 0;
      unint64_t v37 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = (long long *)(v5 + 56);
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v33 = v10;
        int v34 = v9;
        unint64_t v11 = *((void *)v8 - 2);
        uint64_t v12 = *((void *)v8 - 1);
        uint64_t v13 = *((void *)v8 + 2);
        char v14 = *((unsigned char *)v8 + 24);
        uint64_t v15 = *((void *)v8 + 4);
        uint64_t v16 = *((void *)v8 + 5);
        uint64_t v18 = *((void *)v8 + 6);
        uint64_t v17 = *((void *)v8 + 7);
        uint64_t v39 = *((void *)v8 - 3);
        unint64_t v40 = v11;
        uint64_t v41 = v12;
        long long v42 = *v8;
        uint64_t v43 = v13;
        char v44 = v14;
        uint64_t v45 = v15;
        uint64_t v46 = v16;
        uint64_t v47 = v18;
        uint64_t v48 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v31 = v7;
        sub_1A67D0B78((uint64_t)&v39, v7, v35, v36, v37, (uint64_t)v38);
        uint64_t v19 = v38[2];
        uint64_t v32 = v38[3];
        unint64_t v35 = v38[4];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1A67CF344(0, v34[2] + 1, 1, v34);
        }
        unint64_t v21 = v9[2];
        unint64_t v20 = v9[3];
        uint64_t v10 = v33;
        if (v21 >= v20 >> 1) {
          uint64_t v9 = sub_1A67CF344((void *)(v20 > 1), v21 + 1, 1, v9);
        }
        void v9[2] = v21 + 1;
        v9[v21 + 4] = v19;
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1A67CF344(0, v33[2] + 1, 1, v33);
          uint64_t v10 = (void *)result;
        }
        unint64_t v24 = v10[2];
        unint64_t v23 = v10[3];
        if (v24 >= v23 >> 1)
        {
          uint64_t result = (uint64_t)sub_1A67CF344((void *)(v23 > 1), v24 + 1, 1, v10);
          uint64_t v10 = (void *)result;
        }
        _OWORD v10[2] = v24 + 1;
        v10[v24 + 4] = v32;
        uint64_t v25 = *(void *)(v32 + 16);
        BOOL v26 = __OFADD__(v37, v25);
        v37 += v25;
        if (v26) {
          break;
        }
        uint64_t v27 = *(void *)(v19 + 16);
        BOOL v26 = __OFADD__(v36, v27);
        v36 += v27;
        if (v26) {
          goto LABEL_19;
        }
        ++v7;
        uint64_t v8 = (long long *)((char *)v8 + 88);
        swift_bridgeObjectRetain();
        sub_1A6892150();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30 == v31 + 1)
        {
          sub_1A67D2B48((uint64_t)v59);
          uint64_t v1 = v29;
          v29[2] = v9;
          void v29[3] = v10;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
    }
    else
    {
LABEL_16:
      uint64_t v39 = 0;
      unint64_t v40 = 0xE000000000000000;
      sub_1A6892C40();
      swift_bridgeObjectRelease();
      uint64_t v39 = 0x2065726977;
      unint64_t v40 = 0xE500000000000000;
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A6892150();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A67D2B1C((uint64_t)v58);
      sub_1A67D273C(&v57);
      unint64_t v28 = v50;
      v1[4] = v49;
      v1[5] = v28;
      v1[8] = 0;
      return sub_1A67CD4D8();
    }
  }
  else
  {
    sub_1A67D2B1C((uint64_t)v58);
    uint64_t result = (uint64_t)sub_1A67D273C(&v57);
    *((void *)v0 + 8) = 0;
    *((void *)v0 + 4) = 0;
    *((void *)v0 + 5) = 0;
  }
  return result;
}

uint64_t sub_1A67CD4D8()
{
  long long v1 = v0[3];
  long long v173 = v0[2];
  long long v174 = v1;
  unint64_t v175 = (void *)*((void *)v0 + 8);
  long long v2 = v0[1];
  long long v171 = *v0;
  long long v172 = v2;
  sub_1A679AF6C((uint64_t)&v171);
  uint64_t v3 = sub_1A67CCE10();
  sub_1A679AFF4((uint64_t)&v171);
  unint64_t v4 = sub_1A67D255C(MEMORY[0x1E4FBC860]);
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    sub_1A6891BB0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v160 = 0;
    uint64_t v6 = 0;
    unint64_t v7 = v4;
    uint64_t v154 = v5;
LABEL_5:
    uint64_t v158 = v7;
    v9._countAndFlagsBits = sub_1A6891B90();
    TTSAudioEffect.init(rawValue:)(v9);
    if (v170 == 2)
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      goto LABEL_4;
    }
    uint64_t v156 = v6;
    LOBYTE(v176) = v170 & 1;
    TTSAudioEffect.spec.getter((uint64_t)v178);
    uint64_t v10 = v183;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1A6891B70();
    int64_t v12 = 0;
    uint64_t v163 = v11 + 64;
    uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & *(void *)(v11 + 64);
    int64_t v166 = (unint64_t)(v13 + 63) >> 6;
    while (1)
    {
      if (v15)
      {
        unint64_t v16 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v17 = v16 | (v12 << 6);
        goto LABEL_28;
      }
      int64_t v18 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_167;
      }
      if (v18 >= v166) {
        break;
      }
      unint64_t v19 = *(void *)(v163 + 8 * v18);
      ++v12;
      if (!v19)
      {
        int64_t v12 = v18 + 1;
        if (v18 + 1 >= v166) {
          break;
        }
        unint64_t v19 = *(void *)(v163 + 8 * v12);
        if (!v19)
        {
          int64_t v12 = v18 + 2;
          if (v18 + 2 >= v166) {
            break;
          }
          unint64_t v19 = *(void *)(v163 + 8 * v12);
          if (!v19)
          {
            int64_t v20 = v18 + 3;
            if (v20 >= v166) {
              break;
            }
            unint64_t v19 = *(void *)(v163 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                int64_t v12 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_172;
                }
                if (v12 >= v166) {
                  goto LABEL_39;
                }
                unint64_t v19 = *(void *)(v163 + 8 * v12);
                ++v20;
                if (v19) {
                  goto LABEL_27;
                }
              }
            }
            int64_t v12 = v20;
          }
        }
      }
LABEL_27:
      unint64_t v15 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_28:
      unint64_t v21 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int v24 = *(_DWORD *)(*(void *)(v11 + 56) + 4 * v17);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v178[0] = v10;
      unint64_t v27 = sub_1A673F7AC(v23, v22);
      uint64_t v28 = *(void *)(v10 + 16);
      BOOL v29 = (v26 & 1) == 0;
      uint64_t v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
        goto LABEL_173;
      }
      char v31 = v26;
      if (*(void *)(v10 + 24) >= v30)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v26) {
            goto LABEL_10;
          }
        }
        else
        {
          sub_1A67D0790();
          uint64_t v10 = v178[0];
          if (v31) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        sub_1A67CFD38(v30, isUniquelyReferenced_nonNull_native);
        uint64_t v10 = v178[0];
        unint64_t v32 = sub_1A673F7AC(v23, v22);
        if ((v31 & 1) != (v33 & 1)) {
          goto LABEL_183;
        }
        unint64_t v27 = v32;
        if (v31)
        {
LABEL_10:
          *(_DWORD *)(*(void *)(v10 + 56) + 4 * v27) = v24;
          goto LABEL_11;
        }
      }
      *(void *)(v10 + 8 * (v27 >> 6) + 64) |= 1 << v27;
      int v34 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v27);
      *int v34 = v23;
      v34[1] = v22;
      *(_DWORD *)(*(void *)(v10 + 56) + 4 * v27) = v24;
      uint64_t v35 = *(void *)(v10 + 16);
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_166;
      }
      *(void *)(v10 + 16) = v37;
      swift_bridgeObjectRetain();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_39:
    swift_release();
    uint64_t v38 = v10 + 64;
    uint64_t v39 = 1 << *(unsigned char *)(v10 + 32);
    if (v39 < 64) {
      uint64_t v40 = ~(-1 << v39);
    }
    else {
      uint64_t v40 = -1;
    }
    unint64_t v41 = v40 & *(void *)(v10 + 64);
    int64_t v42 = (unint64_t)(v39 + 63) >> 6;
    uint64_t v8 = v158;
    swift_bridgeObjectRetain();
    int64_t v43 = 0;
    while (1)
    {
      if (v41)
      {
        unint64_t v44 = __clz(__rbit64(v41));
        v41 &= v41 - 1;
        unint64_t v45 = v44 | (v43 << 6);
        if ((v160 & 0x8000000000000000) != 0) {
          goto LABEL_161;
        }
      }
      else
      {
        int64_t v46 = v43 + 1;
        if (__OFADD__(v43, 1)) {
          goto LABEL_168;
        }
        if (v46 >= v42)
        {
LABEL_76:
          swift_release();
          if (__OFADD__(v160, 1)) {
            goto LABEL_176;
          }
          ++v160;
          uint64_t v6 = v156;
          uint64_t v5 = v154;
LABEL_4:
          ++v6;
          swift_bridgeObjectRelease();
          unint64_t v7 = v8;
          if (v6 == v5)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            unint64_t v4 = v8;
            goto LABEL_80;
          }
          goto LABEL_5;
        }
        unint64_t v47 = *(void *)(v38 + 8 * v46);
        ++v43;
        if (!v47)
        {
          int64_t v43 = v46 + 1;
          if (v46 + 1 >= v42) {
            goto LABEL_76;
          }
          unint64_t v47 = *(void *)(v38 + 8 * v43);
          if (!v47)
          {
            int64_t v43 = v46 + 2;
            if (v46 + 2 >= v42) {
              goto LABEL_76;
            }
            unint64_t v47 = *(void *)(v38 + 8 * v43);
            if (!v47)
            {
              int64_t v48 = v46 + 3;
              if (v48 >= v42) {
                goto LABEL_76;
              }
              unint64_t v47 = *(void *)(v38 + 8 * v48);
              if (!v47)
              {
                while (1)
                {
                  int64_t v43 = v48 + 1;
                  if (__OFADD__(v48, 1)) {
                    break;
                  }
                  if (v43 >= v42) {
                    goto LABEL_76;
                  }
                  unint64_t v47 = *(void *)(v38 + 8 * v43);
                  ++v48;
                  if (v47) {
                    goto LABEL_59;
                  }
                }
LABEL_173:
                __break(1u);
LABEL_174:
                __break(1u);
LABEL_175:
                __break(1u);
LABEL_176:
                __break(1u);
LABEL_177:
                __break(1u);
                goto LABEL_178;
              }
              int64_t v43 = v48;
            }
          }
        }
LABEL_59:
        unint64_t v41 = (v47 - 1) & v47;
        unint64_t v45 = __clz(__rbit64(v47)) + (v43 << 6);
        if ((v160 & 0x8000000000000000) != 0) {
          goto LABEL_161;
        }
      }
      uint64_t v49 = v169[2];
      if (v160 >= *(void *)(v49 + 16)) {
        goto LABEL_162;
      }
      uint64_t v50 = *(void *)(v49 + 8 * v160 + 32);
      if (*(void *)(v50 + 16))
      {
        long long v51 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v45);
        uint64_t v52 = *v51;
        uint64_t v53 = v51[1];
        int v54 = *(_DWORD *)(*(void *)(v10 + 56) + 4 * v45);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v55 = sub_1A673F7AC(v52, v53);
        if ((v56 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          continue;
        }
        unsigned int v57 = *(_DWORD *)(*(void *)(v50 + 56) + 4 * v55);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v164 = swift_isUniquelyReferenced_nonNull_native();
        v178[0] = v8;
        unint64_t v59 = sub_1A67420E8(v57);
        uint64_t v60 = v8;
        uint64_t v61 = *(void *)(v8 + 16);
        BOOL v62 = (v58 & 1) == 0;
        uint64_t v63 = v61 + v62;
        if (__OFADD__(v61, v62)) {
          goto LABEL_177;
        }
        char v64 = v58;
        if (*(void *)(v60 + 24) >= v63)
        {
          if (v164)
          {
            long long v67 = (void *)v178[0];
            if ((v58 & 1) == 0) {
              goto LABEL_73;
            }
          }
          else
          {
            sub_1A67D0600();
            long long v67 = (void *)v178[0];
            if ((v64 & 1) == 0) {
              goto LABEL_73;
            }
          }
        }
        else
        {
          sub_1A67CFA88(v63, v164);
          unint64_t v65 = sub_1A67420E8(v57);
          if ((v64 & 1) != (v66 & 1)) {
            goto LABEL_184;
          }
          unint64_t v59 = v65;
          long long v67 = (void *)v178[0];
          if ((v64 & 1) == 0)
          {
LABEL_73:
            v67[(v59 >> 6) + 8] |= 1 << v59;
            uint64_t v68 = 4 * v59;
            *(_DWORD *)(v67[6] + v68) = v57;
            *(_DWORD *)(v67[7] + v68) = v54;
            uint64_t v69 = v67[2];
            BOOL v36 = __OFADD__(v69, 1);
            uint64_t v70 = v69 + 1;
            if (v36) {
              goto LABEL_181;
            }
            uint64_t v8 = (uint64_t)v67;
            v67[2] = v70;
            goto LABEL_75;
          }
        }
        *(_DWORD *)(v67[7] + 4 * v59) = v54;
        uint64_t v8 = (uint64_t)v67;
LABEL_75:
        swift_bridgeObjectRelease();
        continue;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_80:
  uint64_t v176 = v174;
  sub_1A67D2B48((uint64_t)&v176);
  uint64_t v72 = *((void *)&v171 + 1);
  uint64_t v71 = v171;
  uint64_t v73 = *((void *)&v172 + 1);
  uint64_t v74 = v172;
  long long v75 = v173;
  char v76 = v175;
  v169[6] = v4;
  uint64_t v150 = v76;
  id v77 = v76;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v78 = sub_1A67CCE10();
  int v151 = v77;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v152 = v73;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v79 = sub_1A67D2638(MEMORY[0x1E4FBC860]);
  uint64_t v153 = *(void *)(v78 + 16);
  if (!v153)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v144 = v79;
LABEL_159:
    v169[7] = v144;
    v178[0] = v71;
    v178[1] = v72;
    v178[2] = v74;
    v178[3] = v152;
    long long v179 = v75;
    unint64_t v180 = v4;
    unint64_t v181 = v144;
    uint64_t v182 = v150;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v145 = v151;
    sub_1A67CE9B4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v147 = v74;
  uint64_t v148 = v72;
  uint64_t v149 = v71;
  sub_1A6891BB0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v80 = 0;
  uint64_t v81 = 0;
  unint64_t v157 = v4;
LABEL_85:
  uint64_t v155 = v81;
  v83._countAndFlagsBits = sub_1A6891B90();
  TTSAudioEffect.init(rawValue:)(v83);
  if (v185 != 2)
  {
    unint64_t v165 = v80;
    char v177 = v185 & 1;
    TTSAudioEffect.spec.getter((uint64_t)v178);
    uint64_t v84 = v184;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_1A6891B80();
    int64_t v86 = 0;
    uint64_t v159 = v85 + 64;
    uint64_t v167 = v85;
    uint64_t v87 = 1 << *(unsigned char *)(v85 + 32);
    if (v87 < 64) {
      uint64_t v88 = ~(-1 << v87);
    }
    else {
      uint64_t v88 = -1;
    }
    unint64_t v89 = v88 & *(void *)(v85 + 64);
    int64_t v161 = (unint64_t)(v87 + 63) >> 6;
    while (1)
    {
      if (v89)
      {
        unint64_t v90 = __clz(__rbit64(v89));
        v89 &= v89 - 1;
        unint64_t v91 = v90 | (v86 << 6);
      }
      else
      {
        int64_t v92 = v86 + 1;
        unint64_t v4 = v157;
        if (__OFADD__(v86, 1)) {
          goto LABEL_170;
        }
        unint64_t v93 = v165;
        if (v92 >= v161)
        {
LABEL_119:
          swift_release();
          uint64_t v112 = v84 + 64;
          uint64_t v113 = 1 << *(unsigned char *)(v84 + 32);
          if (v113 < 64) {
            uint64_t v114 = ~(-1 << v113);
          }
          else {
            uint64_t v114 = -1;
          }
          unint64_t v115 = v114 & *(void *)(v84 + 64);
          int64_t v116 = (unint64_t)(v113 + 63) >> 6;
          int64_t v117 = 0;
          uint64_t v168 = (void *)swift_bridgeObjectRetain();
          while (1)
          {
            if (v115)
            {
              unint64_t v118 = __clz(__rbit64(v115));
              v115 &= v115 - 1;
              unint64_t v119 = v118 | (v117 << 6);
              if ((v93 & 0x8000000000000000) != 0) {
                goto LABEL_164;
              }
            }
            else
            {
              int64_t v120 = v117 + 1;
              if (__OFADD__(v117, 1)) {
                goto LABEL_171;
              }
              if (v120 >= v116)
              {
LABEL_155:
                swift_release();
                BOOL v36 = __OFADD__(v93, 1);
                unint64_t v80 = v93 + 1;
                if (v36) {
                  goto LABEL_179;
                }
                uint64_t v82 = (uint64_t)v168;
LABEL_84:
                uint64_t v81 = v155 + 1;
                swift_bridgeObjectRelease();
                if (v155 + 1 == v153)
                {
                  unint64_t v144 = v82;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  uint64_t v72 = v148;
                  uint64_t v71 = v149;
                  uint64_t v74 = v147;
                  goto LABEL_159;
                }
                goto LABEL_85;
              }
              unint64_t v121 = *(void *)(v112 + 8 * v120);
              ++v117;
              if (!v121)
              {
                int64_t v117 = v120 + 1;
                if (v120 + 1 >= v116) {
                  goto LABEL_155;
                }
                unint64_t v121 = *(void *)(v112 + 8 * v117);
                if (!v121)
                {
                  int64_t v117 = v120 + 2;
                  if (v120 + 2 >= v116) {
                    goto LABEL_155;
                  }
                  unint64_t v121 = *(void *)(v112 + 8 * v117);
                  if (!v121)
                  {
                    int64_t v122 = v120 + 3;
                    if (v122 >= v116) {
                      goto LABEL_155;
                    }
                    unint64_t v121 = *(void *)(v112 + 8 * v122);
                    if (!v121)
                    {
                      while (1)
                      {
                        int64_t v117 = v122 + 1;
                        if (__OFADD__(v122, 1)) {
                          goto LABEL_175;
                        }
                        if (v117 >= v116) {
                          goto LABEL_155;
                        }
                        unint64_t v121 = *(void *)(v112 + 8 * v117);
                        ++v122;
                        if (v121) {
                          goto LABEL_139;
                        }
                      }
                    }
                    int64_t v117 = v122;
                  }
                }
              }
LABEL_139:
              unint64_t v115 = (v121 - 1) & v121;
              unint64_t v119 = __clz(__rbit64(v121)) + (v117 << 6);
              if ((v93 & 0x8000000000000000) != 0) {
                goto LABEL_164;
              }
            }
            uint64_t v123 = v169[3];
            if (v93 >= *(void *)(v123 + 16)) {
              goto LABEL_165;
            }
            uint64_t v124 = *(void *)(v123 + 8 * v93 + 32);
            if (*(void *)(v124 + 16))
            {
              uint64_t v125 = (uint64_t *)(*(void *)(v84 + 48) + 16 * v119);
              uint64_t v126 = *v125;
              uint64_t v127 = v125[1];
              int v128 = *(_DWORD *)(*(void *)(v84 + 56) + 4 * v119);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v129 = sub_1A673F7AC(v126, v127);
              if (v130)
              {
                unsigned int v131 = *(_DWORD *)(*(void *)(v124 + 56) + 4 * v129);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v132 = swift_isUniquelyReferenced_nonNull_native();
                v178[0] = v168;
                unsigned int v162 = v131;
                unint64_t v134 = sub_1A67420E8(v131);
                uint64_t v135 = v168[2];
                BOOL v136 = (v133 & 1) == 0;
                uint64_t v137 = v135 + v136;
                if (__OFADD__(v135, v136)) {
                  goto LABEL_180;
                }
                char v138 = v133;
                if (v168[3] >= v137)
                {
                  if ((v132 & 1) == 0) {
                    sub_1A67D0940();
                  }
                }
                else
                {
                  sub_1A67D0040(v137, v132);
                  unint64_t v139 = sub_1A67420E8(v162);
                  if ((v138 & 1) != (v140 & 1)) {
                    goto LABEL_184;
                  }
                  unint64_t v134 = v139;
                }
                uint64_t v168 = (void *)v178[0];
                if (v138)
                {
                  *(_DWORD *)(*(void *)(v178[0] + 56) + 4 * v134) = v128;
                }
                else
                {
                  *(void *)(v178[0] + 8 * (v134 >> 6) + 64) |= 1 << v134;
                  uint64_t v141 = 4 * v134;
                  *(_DWORD *)(v168[6] + v141) = v162;
                  *(_DWORD *)(v168[7] + v141) = v128;
                  uint64_t v142 = v168[2];
                  BOOL v36 = __OFADD__(v142, 1);
                  uint64_t v143 = v142 + 1;
                  if (v36) {
                    goto LABEL_182;
                  }
                  v168[2] = v143;
                }
                swift_bridgeObjectRelease();
                unint64_t v4 = v157;
                unint64_t v93 = v165;
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v93 = v165;
              }
            }
          }
        }
        unint64_t v94 = *(void *)(v159 + 8 * v92);
        ++v86;
        if (!v94)
        {
          int64_t v86 = v92 + 1;
          if (v92 + 1 >= v161) {
            goto LABEL_119;
          }
          unint64_t v94 = *(void *)(v159 + 8 * v86);
          if (!v94)
          {
            int64_t v86 = v92 + 2;
            if (v92 + 2 >= v161) {
              goto LABEL_119;
            }
            unint64_t v94 = *(void *)(v159 + 8 * v86);
            if (!v94)
            {
              int64_t v95 = v92 + 3;
              if (v95 >= v161) {
                goto LABEL_119;
              }
              unint64_t v94 = *(void *)(v159 + 8 * v95);
              if (!v94)
              {
                while (1)
                {
                  int64_t v86 = v95 + 1;
                  if (__OFADD__(v95, 1)) {
                    goto LABEL_174;
                  }
                  if (v86 >= v161) {
                    goto LABEL_119;
                  }
                  unint64_t v94 = *(void *)(v159 + 8 * v86);
                  ++v95;
                  if (v94) {
                    goto LABEL_107;
                  }
                }
              }
              int64_t v86 = v95;
            }
          }
        }
LABEL_107:
        unint64_t v89 = (v94 - 1) & v94;
        unint64_t v91 = __clz(__rbit64(v94)) + (v86 << 6);
      }
      uint64_t v96 = (uint64_t *)(*(void *)(v167 + 48) + 16 * v91);
      uint64_t v98 = *v96;
      uint64_t v97 = v96[1];
      int v99 = *(_DWORD *)(*(void *)(v167 + 56) + 4 * v91);
      swift_bridgeObjectRetain();
      char v100 = swift_isUniquelyReferenced_nonNull_native();
      v178[0] = v84;
      unint64_t v102 = sub_1A673F7AC(v98, v97);
      uint64_t v103 = *(void *)(v84 + 16);
      BOOL v104 = (v101 & 1) == 0;
      uint64_t v105 = v103 + v104;
      if (__OFADD__(v103, v104)) {
        goto LABEL_163;
      }
      char v106 = v101;
      if (*(void *)(v84 + 24) >= v105)
      {
        if (v100)
        {
          if (v101) {
            goto LABEL_90;
          }
        }
        else
        {
          sub_1A67D0450();
          uint64_t v84 = v178[0];
          if (v106) {
            goto LABEL_90;
          }
        }
      }
      else
      {
        sub_1A67CF77C(v105, v100);
        uint64_t v84 = v178[0];
        unint64_t v107 = sub_1A673F7AC(v98, v97);
        if ((v106 & 1) != (v108 & 1)) {
          goto LABEL_183;
        }
        unint64_t v102 = v107;
        if (v106)
        {
LABEL_90:
          *(_DWORD *)(*(void *)(v84 + 56) + 4 * v102) = v99;
          goto LABEL_91;
        }
      }
      *(void *)(v84 + 8 * (v102 >> 6) + 64) |= 1 << v102;
      uint64_t v109 = (uint64_t *)(*(void *)(v84 + 48) + 16 * v102);
      *uint64_t v109 = v98;
      v109[1] = v97;
      *(_DWORD *)(*(void *)(v84 + 56) + 4 * v102) = v99;
      uint64_t v110 = *(void *)(v84 + 16);
      BOOL v36 = __OFADD__(v110, 1);
      uint64_t v111 = v110 + 1;
      if (v36) {
        goto LABEL_169;
      }
      *(void *)(v84 + 16) = v111;
      swift_bridgeObjectRetain();
LABEL_91:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  BOOL v36 = __OFADD__(v80++, 1);
  if (!v36)
  {
    uint64_t v82 = swift_bridgeObjectRetain();
    goto LABEL_84;
  }
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  sub_1A6893150();
  __break(1u);
LABEL_184:
  uint64_t result = sub_1A6893150();
  __break(1u);
  return result;
}

uint64_t sub_1A67CE428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_1A6891BB0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  *(void *)&long long v55 = (char *)&v44 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(void *)&long long v63 = MEMORY[0x1E4FBC860];
  *((void *)&v63 + 1) = MEMORY[0x1E4FBC860];
  uint64_t v66 = 0;
  long long v64 = 0uLL;
  *(void *)&long long v62 = a1;
  *((void *)&v62 + 1) = MEMORY[0x1E4FBC860];
  v57[0] = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v49 = v7;
    unint64_t v15 = 0;
    uint64_t v50 = (uint64_t (**)(char *, uint64_t))(v4 + 8);
    *(void *)&long long v54 = v4 + 32;
    uint64_t v53 = a1;
    uint64_t v52 = v13;
    uint64_t v51 = v4 + 16;
    while (v15 < *(void *)(a1 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v17 = *(void *)(v4 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v11, a1 + v16 + v17 * v15, v3);
      if (sub_1A6891BA0())
      {
        int64_t v18 = *(uint64_t (**)(unint64_t, void, uint64_t))v54;
        (*(void (**)(void, char *, uint64_t))v54)(v55, v11, v3);
        uint64_t v19 = v57[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A67CF588(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v57[0];
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1A67CF588(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v57[0];
        }
        *(void *)(v19 + 16) = v21 + 1;
        uint64_t result = v18(v19 + v16 + v21 * v17, v55, v3);
        v57[0] = v19;
        a1 = v53;
        uint64_t v13 = v52;
      }
      else
      {
        uint64_t result = (*v50)(v11, v3);
      }
      if (v13 == ++v15)
      {
        uint64_t v12 = v57[0];
        unint64_t v7 = v49;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v12 + 16);
    if (v22)
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v24 = v4 + 16;
      uint64_t v23 = v25;
      uint64_t v26 = v12 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
      uint64_t v27 = *(void *)(v24 + 56);
      uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
      uint64_t v44 = v12;
      swift_retain();
      BOOL v29 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v47 = v25;
      uint64_t v46 = v27;
      do
      {
        v23(v7, v26, v3);
        v30._countAndFlagsBits = sub_1A6891B90();
        TTSAudioEffect.init(rawValue:)(v30);
        if (v61 == 2)
        {
          (*v28)(v7, v3);
        }
        else
        {
          char v56 = v61 & 1;
          TTSAudioEffect.spec.getter((uint64_t)v57);
          uint64_t v31 = v57[0];
          uint64_t v53 = v57[1];
          uint64_t v52 = v57[2];
          uint64_t v51 = v57[3];
          uint64_t v50 = (uint64_t (**)(char *, uint64_t))v57[4];
          uint64_t v49 = (char *)v57[5];
          int v48 = v58;
          long long v55 = v59;
          long long v54 = v60;
          (*v28)(v7, v3);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v29 = sub_1A67CF468(0, *((void *)v29 + 2) + 1, 1, v29);
          }
          unint64_t v33 = *((void *)v29 + 2);
          unint64_t v32 = *((void *)v29 + 3);
          if (v33 >= v32 >> 1) {
            BOOL v29 = sub_1A67CF468((char *)(v32 > 1), v33 + 1, 1, v29);
          }
          *((void *)v29 + 2) = v33 + 1;
          int v34 = &v29[88 * v33];
          uint64_t v35 = v53;
          *((void *)v34 + 4) = v31;
          *((void *)v34 + 5) = v35;
          uint64_t v36 = v51;
          *((void *)v34 + 6) = v52;
          *((void *)v34 + 7) = v36;
          uint64_t v37 = v49;
          *((void *)v34 + 8) = v50;
          *((void *)v34 + 9) = v37;
          v34[80] = v48;
          *(_OWORD *)(v34 + 88) = v55;
          *(_OWORD *)(v34 + 104) = v54;
          uint64_t v23 = v47;
          uint64_t v27 = v46;
        }
        v26 += v27;
        --v22;
      }
      while (v22);
      swift_release_n();
    }
    else
    {
      swift_release();
      BOOL v29 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v38 = v45;
    swift_bridgeObjectRelease();
    *((void *)&v62 + 1) = v29;
    uint64_t v39 = MEMORY[0x1E4FBC860];
    *(void *)&long long v65 = sub_1A67D255C(MEMORY[0x1E4FBC860]);
    *((void *)&v65 + 1) = sub_1A67D2638(v39);
    uint64_t result = sub_1A67CD048();
    uint64_t v40 = v66;
    long long v41 = v63;
    long long v42 = v64;
    long long v43 = v65;
    *(_OWORD *)uint64_t v38 = v62;
    *(_OWORD *)(v38 + 16) = v41;
    *(_OWORD *)(v38 + 32) = v42;
    *(_OWORD *)(v38 + 48) = v43;
    *(void *)(v38 + 64) = v40;
  }
  return result;
}

id *sub_1A67CE9B4()
{
  sub_1A67B4290(v0 + 64, (uint64_t)&v22, &qword_1E96C1548);
  uint64_t result = (id *)sub_1A67B4290((uint64_t)&v22, (uint64_t)&v23, &qword_1E96C1548);
  long long v2 = v23;
  if (!v23) {
    return result;
  }
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v20 = v3 + 64;
  uint64_t v21 = v3;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  sub_1A67D2710(&v22);
  uint64_t result = (id *)sub_1A67D2B74((uint64_t)&v21);
  int64_t v8 = 0;
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  long long v19 = xmmword_1A689DC40;
  while (v7)
  {
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v8 << 6);
LABEL_21:
    uint64_t v15 = 4 * v11;
    OSStatus v16 = AudioUnitSetParameter((AudioUnit)objc_msgSend(v2, sel_audioUnit, v19), *(_DWORD *)(*(void *)(v3 + 48) + v15), 0, 0, *(AudioUnitParameterValue *)(*(void *)(v3 + 56) + v15), 4u);
    uint64_t result = (id *)sub_1A6891D00();
    if (v16 != result)
    {
      uint64_t result = (id *)(id)AXTTSLogCommon();
      if (!result) {
        goto LABEL_28;
      }
      uint64_t v17 = result;
      sub_1A6892850();
      sub_1A6741AD0(&qword_1E96C1638);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = v19;
      *(void *)(v18 + 56) = MEMORY[0x1E4FBC150];
      *(void *)(v18 + 64) = MEMORY[0x1E4FBC1C0];
      *(_DWORD *)(v18 + 32) = v16;
      sub_1A6891CA0();

      uint64_t result = (id *)swift_bridgeObjectRelease();
    }
  }
  int64_t v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v12 >= v9) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v12);
  ++v8;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v8 = v12 + 1;
  if (v12 + 1 >= v9) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v8);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v8 = v12 + 2;
  if (v12 + 2 >= v9) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v8);
  if (v13)
  {
LABEL_20:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9)
  {
LABEL_24:
    swift_release();
    return sub_1A67D273C(&v22);
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v9) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A67CEC40()
{
  long long v1 = (void *)v0[8];
  id v2 = v1;
  if (!v1)
  {
    uint64_t v3 = v0[5];
    if (v3)
    {
      uint64_t v4 = v0[4];
      id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F15418]), sel_init);
      sub_1A67CECF4(v4, v3);
      v0[8] = v2;
      id v5 = v2;
      sub_1A67CE9B4();
    }
    else
    {
      id v2 = 0;
    }
  }
  id v6 = v1;
  return v2;
}

id sub_1A67CECF4(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = 0;
  if (a2) {
    uint64_t v11 = sub_1A6891FD0();
  }

  uint64_t v3 = (OpaqueAudioComponentInstance *)objc_msgSend(v2, sel_audioUnit, v11, v12);
  AudioUnitPropertyID v4 = sub_1A67CEE50();
  OSStatus v5 = AudioUnitSetProperty(v3, v4, 0, 0, &v11, 8u);
  id result = (id)sub_1A6891D00();
  if (v5 != result)
  {
    id result = (id)AXTTSLogCommon();
    if (result)
    {
      unint64_t v7 = result;
      sub_1A6892850();
      sub_1A6741AD0(&qword_1E96C1638);
      uint64_t v8 = swift_allocObject();
      uint64_t v9 = MEMORY[0x1E4FBC150];
      *(_OWORD *)(v8 + 16) = xmmword_1A689DC40;
      uint64_t v10 = MEMORY[0x1E4FBC1C0];
      *(void *)(v8 + 56) = v9;
      *(void *)(v8 + 64) = v10;
      *(_DWORD *)(v8 + 32) = v5;
      sub_1A6891CA0();

      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_1A67CEE50()
{
  v22[1] = *MEMORY[0x1E4F143B8];
  v22[0] = 0;
  uint64_t v0 = sub_1A6892070();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6892050();
  uint64_t v4 = sub_1A6892010();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = v6 >> 62;
    switch(v6 >> 62)
    {
      case 1uLL:
        LODWORD(v8) = HIDWORD(v4) - v4;
        if (__OFSUB__(HIDWORD(v4), v4)) {
          goto LABEL_18;
        }
        uint64_t v8 = (int)v8;
LABEL_7:
        if (v8 != 4) {
          goto LABEL_15;
        }
        if (v7)
        {
          if (v7 == 1)
          {
            if (v4 >> 32 < (int)v4) {
              goto LABEL_20;
            }
            sub_1A67D277C(v4, v6);
            sub_1A67D277C(v4, v6);
            sub_1A67D0AD0((int)v4, v4 >> 32, v6 & 0x3FFFFFFFFFFFFFFFLL, v4, v6, v22);
          }
          else
          {
            uint64_t v12 = *(void *)(v4 + 16);
            uint64_t v13 = *(void *)(v4 + 24);
            sub_1A67D277C(v4, v6);
            sub_1A67D277C(v4, v6);
            swift_retain();
            swift_retain();
            sub_1A67D0AD0(v12, v13, v6 & 0x3FFFFFFFFFFFFFFFLL, v4, v6, v22);
            swift_release();
            swift_release();
          }
          sub_1A67D2768(v4, v6);
LABEL_15:
          sub_1A67D2768(v4, v6);
        }
        else
        {
          uint64_t v16 = v4;
          __int16 v17 = v6;
          char v18 = BYTE2(v6);
          char v19 = BYTE3(v6);
          char v20 = BYTE4(v6);
          char v21 = BYTE5(v6);
          sub_1A67CF19C((unsigned __int8 *)&v16, v4, v6, v22);
          sub_1A67D2768(v4, v6);
          sub_1A67D2768(v4, v6);
          sub_1A67C7908(v4, v6);
        }
        break;
      case 2uLL:
        uint64_t v10 = *(void *)(v4 + 16);
        uint64_t v9 = *(void *)(v4 + 24);
        BOOL v11 = __OFSUB__(v9, v10);
        uint64_t v8 = v9 - v10;
        if (!v11) {
          goto LABEL_7;
        }
        goto LABEL_19;
      case 3uLL:
        goto LABEL_15;
      default:
        uint64_t v8 = BYTE6(v6);
        goto LABEL_7;
    }
  }
  unint64_t result = v22[0];
  if (HIDWORD(v22[0]))
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return result;
}

unsigned __int8 *sub_1A67CF19C(unsigned __int8 *result, uint64_t a2, unint64_t a3, unint64_t *a4)
{
  if (!result) {
    goto LABEL_16;
  }
  switch(a3 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a2) - a2;
      if (__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_14;
      }
      uint64_t v4 = (int)v4;
LABEL_7:
      if (v4 < 0)
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        JUMPOUT(0x1A67CF220);
      }
LABEL_8:
      if (v4)
      {
        unint64_t v8 = *a4;
        do
        {
          unsigned int v9 = *result++;
          unint64_t v8 = v9 | (v8 << 8);
          --v4;
        }
        while (v4);
        *a4 = v8;
      }
      return result;
    case 2uLL:
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v5 = *(void *)(a2 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_7;
      }
      goto LABEL_15;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a3);
      goto LABEL_8;
  }
}

uint64_t sub_1A67CF230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v5 = 1;
    }
    else
    {
      sub_1A67D2D58();
      uint64_t v3 = 0;
      uint64_t v4 = v2 - 1;
      do
      {
        char v5 = sub_1A6891FC0();
        BOOL v7 = v4-- != 0;
        if ((v5 & 1) == 0) {
          break;
        }
        v3 += 88;
      }
      while (v7);
    }
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

void *sub_1A67CF344(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2A08);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C2A10);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A67CF468(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C29E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1A67CF588(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1A67CF5A8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1A67CF5A8(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C2A28);
  uint64_t v10 = *(void *)(sub_1A6891BB0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_1A6891BB0() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_1A67CF77C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C29F0);
  char v37 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    id v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    int v32 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A6893200();
    sub_1A68920F0();
    uint64_t result = sub_1A6893250();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    char v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  id v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A67CFA88(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C29F8);
  uint64_t result = sub_1A6892ED0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    int v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 4 * v18;
      unsigned int v23 = *(_DWORD *)(*(void *)(v5 + 48) + v22);
      int v24 = *(_DWORD *)(*(void *)(v5 + 56) + v22);
      uint64_t result = MEMORY[0x1AD0C02A0](*(void *)(v7 + 40), v23, 4);
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 4 * v15;
      *(_DWORD *)(*(void *)(v7 + 48) + v16) = v23;
      *(_DWORD *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A67CFD38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C2A00);
  char v37 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unsigned int v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    int v33 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A6893200();
    sub_1A68920F0();
    uint64_t result = sub_1A6893250();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *int64_t v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unsigned int v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unsigned int v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A67D0040(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C29E8);
  uint64_t result = sub_1A6892ED0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    uint64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 4 * v18;
      unsigned int v23 = *(_DWORD *)(*(void *)(v5 + 48) + v22);
      int v24 = *(_DWORD *)(*(void *)(v5 + 56) + v22);
      uint64_t result = MEMORY[0x1AD0C02A0](*(void *)(v7 + 40), v23, 4);
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 4 * v15;
      *(_DWORD *)(*(void *)(v7 + 48) + v16) = v23;
      *(_DWORD *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A67D02EC(int a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A673F7AC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A67D0450();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(_DWORD *)(v18[7] + 4 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A67CF77C(result, a4 & 1);
  uint64_t result = sub_1A673F7AC(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A6893150();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v20 = a2;
  v20[1] = a3;
  *(_DWORD *)(v18[7] + 4 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v18[2] = v23;

  return swift_bridgeObjectRetain();
}

void *sub_1A67D0450()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C29F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(void *)(v2 + 56) + v20);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v20) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A67D0600()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C29F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 56) + v16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = *(_DWORD *)(*(void *)(v2 + 48) + v16);
    *(_DWORD *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A67D0790()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C2A00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 4 * v15;
    int v20 = *(_DWORD *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A67D0940()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C29E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 56) + v16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = *(_DWORD *)(*(void *)(v2 + 48) + v16);
    *(_DWORD *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A67D0AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t *a6)
{
  uint64_t result = sub_1A68916A0();
  unint64_t v12 = (unsigned __int8 *)result;
  if (result)
  {
    uint64_t result = sub_1A68916C0();
    if (__OFSUB__(a1, result)) {
      goto LABEL_7;
    }
    v12 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_1A68916B0();
    sub_1A67CF19C(v12, a4, a5, a6);
    return sub_1A67C7908(a4, a5);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A67D0B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)&v144[0] = 0x6870617267;
  *((void *)&v144[0] + 1) = 0xE500000000000000;
  sub_1A68930E0();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  long long v133 = v144[0];
  sub_1A6892C40();
  swift_bridgeObjectRelease();
  *(void *)&v144[0] = 0xD00000000000001BLL;
  *((void *)&v144[0] + 1) = 0x80000001A68CE600;
  *(void *)&v159[0] = a2;
  sub_1A68930E0();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  long long v141 = v144[0];
  if ((a5 & 0x8000000000000000) != 0) {
    goto LABEL_139;
  }
  if (HIDWORD(a5))
  {
LABEL_140:
    __break(1u);
LABEL_141:
    unint64_t v153 = 0;
    unint64_t v154 = 0xE000000000000000;
    sub_1A6892C40();
    swift_bridgeObjectRelease();
    unint64_t v153 = 0xD000000000000011;
    unint64_t v154 = 0x80000001A68CE6D0;
    sub_1A6892150();
    while (1)
    {
LABEL_142:
      sub_1A6892E60();
      __break(1u);
    }
  }
  sub_1A6892C40();
  swift_bridgeObjectRelease();
  *((void *)&v144[0] + 1) = 0xE900000000000020;
  LODWORD(v159[0]) = a5;
  sub_1A68930E0();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v138 = v9;
  *(void *)&v144[0] = v9;
  unint64_t v123 = a5;
  sub_1A67D02EC(a5, 0x737361707962, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v11 = v9;
  swift_bridgeObjectRelease();
  uint64_t v150 = v8;
  uint64_t v115 = v8 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v120 = v13 & *(void *)(v8 + 64);
  sub_1A67D2B74((uint64_t)&v150);
  int64_t v116 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v14 = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  unint64_t v117 = a3;
  uint64_t v118 = v14;
  uint64_t v130 = v8;
LABEL_8:
  uint64_t v139 = v11;
  if (v120)
  {
    unint64_t v16 = __clz(__rbit64(v120));
    int64_t v119 = v15;
    v120 &= v120 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v8 + 56) + 88 * v17;
    long long v23 = *(_OWORD *)(v22 + 16);
    v144[0] = *(_OWORD *)v22;
    v144[1] = v23;
    long long v25 = *(_OWORD *)(v22 + 48);
    long long v24 = *(_OWORD *)(v22 + 64);
    long long v26 = *(_OWORD *)(v22 + 32);
    uint64_t v147 = *(void *)(v22 + 80);
    long long v145 = v25;
    long long v146 = v24;
    v144[2] = v26;
    v159[0] = v133;
    swift_bridgeObjectRetain();
    sub_1A67D2BA0((uint64_t)v144);
    swift_bridgeObjectRetain();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    unint64_t v27 = *((void *)&v159[0] + 1);
    unint64_t v28 = *(void *)&v159[0];
    *(void *)&v159[0] = 0;
    *((void *)&v159[0] + 1) = 0xE000000000000000;
    sub_1A6892C40();
    swift_bridgeObjectRelease();
    *(void *)&v159[0] = 544763746;
    *((void *)&v159[0] + 1) = 0xE400000000000000;
    sub_1A6892150();
    sub_1A6892150();
    sub_1A6835AF8();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    uint64_t v29 = *((void *)&v146 + 1);
    uint64_t v149 = *((void *)&v146 + 1);
    uint64_t v155 = *(void *)(*((void *)&v146 + 1) + 16);
    sub_1A68930E0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    uint64_t v30 = v147;
    uint64_t v148 = v147;
    uint64_t v155 = *(void *)(v147 + 16);
    sub_1A68930E0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    *(void *)&v159[0] = 0;
    *((void *)&v159[0] + 1) = 0xE000000000000000;
    sub_1A6892C40();
    swift_bridgeObjectRelease();
    *(void *)&v159[0] = 0xD000000000000012;
    *((void *)&v159[0] + 1) = 0x80000001A68CE640;
    LODWORD(v155) = v123;
    sub_1A68930E0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    unint64_t v136 = v28;
    unint64_t v137 = v27;
    sub_1A6892150();
    sub_1A6892150();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void *)(v29 + 16);
    unint64_t v33 = v117;
    uint64_t v32 = v118;
    if (v31)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = (unint64_t *)(v29 + 40);
      do
      {
        unint64_t v35 = *v34;
        if (*v34)
        {
          if (v35 == 1) {
            goto LABEL_142;
          }
          uint64_t v36 = *(v34 - 1);
          uint64_t v37 = *(void *)(v8 + 16);
          swift_bridgeObjectRetain();
          if (!v37) {
            goto LABEL_142;
          }
          swift_bridgeObjectRetain();
          sub_1A673F7AC(v36, v35);
          char v39 = v38;
          sub_1A67D2C14(v36, v35);
          if ((v39 & 1) == 0) {
            goto LABEL_142;
          }
          v159[0] = v133;
          swift_bridgeObjectRetain();
          sub_1A6892150();
          sub_1A67D2C14(v36, v35);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        v34 += 2;
        *(void *)&v159[0] = 0;
        *((void *)&v159[0] + 1) = 0xE000000000000000;
        sub_1A6892C40();
        swift_bridgeObjectRelease();
        *(void *)&v159[0] = 0x2065726977;
        *((void *)&v159[0] + 1) = 0xE500000000000000;
        sub_1A6892150();
        swift_bridgeObjectRelease();
        sub_1A6892150();
        sub_1A6892150();
        sub_1A6892150();
        sub_1A6892150();
        swift_bridgeObjectRelease();
        sub_1A6892150();
        --v31;
      }
      while (v31);
      sub_1A67D2B48((uint64_t)&v149);
    }
    uint64_t v40 = *(void *)(v30 + 16);
    if (v40)
    {
      swift_bridgeObjectRetain();
      long long v41 = (unint64_t *)(v30 + 40);
      do
      {
        unint64_t v42 = *v41;
        if (*v41 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v32 = v137;
          swift_bridgeObjectRetain();
          unint64_t v33 = v136;
        }
        else
        {
          if (!v42) {
            goto LABEL_142;
          }
          uint64_t v43 = *(v41 - 1);
          uint64_t v44 = *(void *)(v8 + 16);
          swift_bridgeObjectRetain();
          if (!v44) {
            goto LABEL_142;
          }
          swift_bridgeObjectRetain();
          sub_1A673F7AC(v43, v42);
          char v46 = v45;
          sub_1A67D2C14(v43, v42);
          if ((v46 & 1) == 0) {
            goto LABEL_142;
          }
          v159[0] = v133;
          swift_bridgeObjectRetain();
          sub_1A6892150();
          sub_1A67D2C14(v43, v42);
          *(void *)&v159[0] = 0;
          *((void *)&v159[0] + 1) = 0xE000000000000000;
          sub_1A6892C40();
          swift_bridgeObjectRelease();
          *(void *)&v159[0] = 0x2065726977;
          *((void *)&v159[0] + 1) = 0xE500000000000000;
          sub_1A6892150();
          sub_1A6892150();
          sub_1A6892150();
          swift_bridgeObjectRelease();
          sub_1A6892150();
          sub_1A6892150();
          swift_bridgeObjectRelease();
        }
        v41 += 2;
        sub_1A6892150();
        --v40;
      }
      while (v40);
      unint64_t v117 = v33;
      uint64_t v118 = v32;
      sub_1A67D2B48((uint64_t)&v148);
    }
    uint64_t v124 = *((void *)&v145 + 1) + 64;
    uint64_t v47 = 1 << *(unsigned char *)(*((void *)&v145 + 1) + 32);
    if (v47 < 64) {
      uint64_t v48 = ~(-1 << v47);
    }
    else {
      uint64_t v48 = -1;
    }
    unint64_t v49 = v48 & *(void *)(*((void *)&v145 + 1) + 64);
    int64_t v126 = (unint64_t)(v47 + 63) >> 6;
    uint64_t v131 = *((void *)&v145 + 1);
    swift_bridgeObjectRetain();
    for (int64_t i = 0; ; int64_t i = v134)
    {
      if (v49)
      {
        unint64_t v53 = __clz(__rbit64(v49));
        v49 &= v49 - 1;
        int64_t v134 = i;
        unint64_t v54 = v53 | (i << 6);
      }
      else
      {
        int64_t v55 = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        uint64_t v56 = MEMORY[0x1E4FBC4C0];
        if (v55 >= v126) {
          goto LABEL_85;
        }
        unint64_t v57 = *(void *)(v124 + 8 * v55);
        int64_t v58 = i + 1;
        if (!v57)
        {
          int64_t v58 = i + 2;
          if (i + 2 >= v126) {
            goto LABEL_85;
          }
          unint64_t v57 = *(void *)(v124 + 8 * v58);
          if (!v57)
          {
            int64_t v58 = i + 3;
            if (i + 3 >= v126) {
              goto LABEL_85;
            }
            unint64_t v57 = *(void *)(v124 + 8 * v58);
            if (!v57)
            {
              uint64_t v59 = i + 4;
              if (i + 4 >= v126)
              {
LABEL_85:
                swift_release();
                uint64_t v80 = *(void *)(v146 + 64);
                uint64_t v125 = v146 + 64;
                uint64_t v81 = 1 << *(unsigned char *)(v146 + 32);
                uint64_t v132 = v146;
                swift_bridgeObjectRetain();
                sub_1A67D2C30((uint64_t)v144);
                int64_t v82 = 0;
                if (v81 < 64) {
                  uint64_t v83 = ~(-1 << v81);
                }
                else {
                  uint64_t v83 = -1;
                }
                unint64_t v84 = v83 & v80;
                int64_t v127 = (unint64_t)(v81 + 63) >> 6;
                uint64_t v11 = v139;
                while (2)
                {
                  uint64_t v140 = v11;
                  if (v84)
                  {
                    unint64_t v87 = __clz(__rbit64(v84));
                    v84 &= v84 - 1;
                    int64_t v135 = v82;
                    unint64_t v88 = v87 | (v82 << 6);
                  }
                  else
                  {
                    int64_t v89 = v82 + 1;
                    if (__OFADD__(v82, 1)) {
                      goto LABEL_128;
                    }
                    if (v89 >= v127)
                    {
LABEL_7:
                      swift_bridgeObjectRelease();
                      swift_release();
                      int64_t v15 = v119;
                      goto LABEL_8;
                    }
                    unint64_t v90 = *(void *)(v125 + 8 * v89);
                    int64_t v91 = v82 + 1;
                    if (!v90)
                    {
                      int64_t v91 = v82 + 2;
                      if (v82 + 2 >= v127) {
                        goto LABEL_7;
                      }
                      unint64_t v90 = *(void *)(v125 + 8 * v91);
                      if (!v90)
                      {
                        int64_t v91 = v82 + 3;
                        if (v82 + 3 >= v127) {
                          goto LABEL_7;
                        }
                        unint64_t v90 = *(void *)(v125 + 8 * v91);
                        if (!v90)
                        {
                          uint64_t v92 = v82 + 4;
                          if (v82 + 4 >= v127) {
                            goto LABEL_7;
                          }
                          unint64_t v90 = *(void *)(v125 + 8 * v92);
                          if (!v90)
                          {
                            while (1)
                            {
                              int64_t v91 = v92 + 1;
                              if (__OFADD__(v92, 1)) {
                                break;
                              }
                              if (v91 >= v127) {
                                goto LABEL_7;
                              }
                              unint64_t v90 = *(void *)(v125 + 8 * v91);
                              ++v92;
                              if (v90) {
                                goto LABEL_106;
                              }
                            }
LABEL_136:
                            __break(1u);
LABEL_137:
                            __break(1u);
LABEL_138:
                            __break(1u);
LABEL_139:
                            __break(1u);
                            goto LABEL_140;
                          }
                          int64_t v91 = v82 + 4;
                        }
                      }
                    }
LABEL_106:
                    unint64_t v84 = (v90 - 1) & v90;
                    int64_t v135 = v91;
                    unint64_t v88 = __clz(__rbit64(v90)) + (v91 << 6);
                  }
                  uint64_t v93 = *(unsigned int *)(*(void *)(v132 + 48) + 4 * v88);
                  sub_1A67B4290(*(void *)(v132 + 56) + 40 * v88, (uint64_t)v143, &qword_1E96C2A20);
                  sub_1A67D2D0C((uint64_t)v143, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
                  *(void *)&v159[0] = 40;
                  *((void *)&v159[0] + 1) = 0xE100000000000000;
                  sub_1A6892150();
                  sub_1A6892150();
                  uint64_t v155 = v93;
                  sub_1A68930E0();
                  sub_1A6892150();
                  swift_bridgeObjectRelease();
                  sub_1A6892150();
                  sub_1A67B4290((uint64_t)v143, (uint64_t)&v155, &qword_1E96C2A20);
                  sub_1A67B4290((uint64_t)v143, (uint64_t)v159, &qword_1E96C2A20);
                  if (v160)
                  {
                    uint64_t v94 = v156;
                    int v95 = v157;
                    char v96 = v158;
                    if (v156)
                    {
                      uint64_t v97 = v155;
                      sub_1A67D2D0C((uint64_t)v143, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      unint64_t v153 = v136;
                      unint64_t v154 = v137;
                      sub_1A67D2D0C((uint64_t)v143, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      sub_1A6892150();
                      sub_1A6892150();
                      sub_1A6892150();
                      *(void *)&long long v152 = v93;
                      sub_1A68930E0();
                      sub_1A6892150();
                      swift_bridgeObjectRelease();
                      uint64_t v97 = v153;
                      uint64_t v94 = v154;
                    }
                    uint64_t v104 = *(void *)(v11 + 16);
                    char v129 = v96;
                    if (v104)
                    {
                      swift_bridgeObjectRetain();
                      unint64_t v105 = sub_1A673F7AC(v97, v94);
                      if (v106)
                      {
                        LODWORD(v107) = *(_DWORD *)(*(void *)(v11 + 56) + 4 * v105);
                        swift_bridgeObjectRelease();
                        goto LABEL_121;
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v104 = *(void *)(v11 + 16);
                    }
                    unint64_t v107 = v104 + v123;
                    if (__OFADD__(v104, v123)) {
                      goto LABEL_132;
                    }
                    if ((v107 & 0x8000000000000000) != 0) {
                      goto LABEL_133;
                    }
                    if (HIDWORD(v107)) {
                      goto LABEL_134;
                    }
LABEL_121:
                    unint64_t v153 = 0;
                    unint64_t v154 = 0xE000000000000000;
                    sub_1A6892C40();
                    swift_bridgeObjectRelease();
                    unint64_t v153 = 0x7061724765726977;
                    unint64_t v154 = 0xE900000000000068;
                    *(void *)&long long v152 = 0x79747265706F7270;
                    *((void *)&v152 + 1) = 0xE800000000000000;
                    sub_1A6748030();
                    sub_1A6892A70();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    LODWORD(v152) = v107;
                    sub_1A68930E0();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    sub_1A6892150();
                    sub_1A6892150();
                    if (*(void *)(v11 + 16)
                      && (swift_bridgeObjectRetain(),
                          sub_1A673F7AC(v97, v94),
                          char v109 = v108,
                          swift_bridgeObjectRelease(),
                          (v109 & 1) != 0))
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v86 = v11;
                      uint64_t v8 = v130;
                    }
                    else
                    {
                      unint64_t v153 = 0x79747265706F7270;
                      unint64_t v154 = 0xE800000000000000;
                      swift_bridgeObjectRetain();
                      sub_1A6892150();
                      LODWORD(v152) = v107;
                      sub_1A68930E0();
                      sub_1A6892150();
                      swift_bridgeObjectRelease();
                      uint64_t v110 = v56;
                      unint64_t v112 = v153;
                      unint64_t v111 = v154;
                      if ((v129 & 1) == 0)
                      {
                        int v151 = v95;
                        *(void *)&long long v152 = 32;
                        *((void *)&v152 + 1) = 0xE100000000000000;
                        off_1EFB7D028(v110);
                        sub_1A6892150();
                        swift_bridgeObjectRelease();
                        sub_1A6892150();
                        swift_bridgeObjectRelease();
                        unint64_t v112 = v153;
                        unint64_t v111 = v154;
                      }
                      char v85 = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)&long long v152 = v11;
                      sub_1A67D02EC(v107, v97, v94, v85);
                      uint64_t v86 = v152;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      *(void *)&long long v152 = v112;
                      *((void *)&v152 + 1) = v111;
                      swift_bridgeObjectRetain();
                      sub_1A6892150();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRetain();
                      sub_1A6892150();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v8 = v130;
                      uint64_t v56 = MEMORY[0x1E4FBC4C0];
                    }
                  }
                  else
                  {
                    uint64_t v99 = v155;
                    uint64_t v98 = v156;
                    int v100 = v157;
                    uint64_t v101 = *(void *)(v8 + 16);
                    sub_1A67D2D0C((uint64_t)v143, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
                    swift_bridgeObjectRetain();
                    if (!v101) {
                      goto LABEL_141;
                    }
                    swift_bridgeObjectRetain();
                    sub_1A673F7AC(v99, v98);
                    char v103 = v102;
                    swift_bridgeObjectRelease();
                    if ((v103 & 1) == 0) {
                      goto LABEL_141;
                    }
                    unint64_t v153 = 0;
                    unint64_t v154 = 0xE000000000000000;
                    sub_1A6892C40();
                    swift_bridgeObjectRelease();
                    unint64_t v153 = 1701996919;
                    unint64_t v154 = 0xE400000000000000;
                    *(void *)&long long v152 = 0x79747265706F7270;
                    *((void *)&v152 + 1) = 0xE800000000000000;
                    sub_1A6748030();
                    sub_1A6892A70();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    long long v152 = v133;
                    swift_bridgeObjectRetain();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    LODWORD(v152) = v100;
                    sub_1A68930E0();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    sub_1A6892150();
                    swift_bridgeObjectRelease();
                    sub_1A6892150();
                    uint64_t v86 = v140;
                  }
                  swift_bridgeObjectRelease();
                  sub_1A67D2D0C((uint64_t)v143, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2DAC);
                  sub_1A6892150();
                  swift_bridgeObjectRelease();
                  uint64_t v11 = v86;
                  int64_t v82 = v135;
                  continue;
                }
              }
              unint64_t v57 = *(void *)(v124 + 8 * v59);
              if (!v57)
              {
                while (1)
                {
                  int64_t v58 = v59 + 1;
                  if (__OFADD__(v59, 1)) {
                    goto LABEL_135;
                  }
                  if (v58 >= v126) {
                    goto LABEL_85;
                  }
                  unint64_t v57 = *(void *)(v124 + 8 * v58);
                  ++v59;
                  if (v57) {
                    goto LABEL_65;
                  }
                }
              }
              int64_t v58 = i + 4;
            }
          }
        }
LABEL_65:
        unint64_t v49 = (v57 - 1) & v57;
        int64_t v134 = v58;
        unint64_t v54 = __clz(__rbit64(v57)) + (v58 << 6);
      }
      uint64_t v60 = *(unsigned int *)(*(void *)(v131 + 48) + 4 * v54);
      sub_1A67B4290(*(void *)(v131 + 56) + 40 * v54, (uint64_t)v142, &qword_1E96C2A18);
      sub_1A67D2D0C((uint64_t)v142, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
      *(void *)&v159[0] = 40;
      *((void *)&v159[0] + 1) = 0xE100000000000000;
      sub_1A6892150();
      sub_1A6892150();
      uint64_t v155 = v60;
      sub_1A68930E0();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A6892150();
      sub_1A67B4290((uint64_t)v142, (uint64_t)&v155, &qword_1E96C2A18);
      sub_1A67B4290((uint64_t)v142, (uint64_t)v159, &qword_1E96C2A18);
      if (v160) {
        break;
      }
      uint64_t v67 = v155;
      uint64_t v66 = v156;
      int v68 = v157;
      uint64_t v69 = *(void *)(v8 + 16);
      sub_1A67D2D0C((uint64_t)v142, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
      swift_bridgeObjectRetain();
      if (!v69) {
        goto LABEL_141;
      }
      swift_bridgeObjectRetain();
      sub_1A673F7AC(v67, v66);
      char v71 = v70;
      swift_bridgeObjectRelease();
      if ((v71 & 1) == 0) {
        goto LABEL_141;
      }
      unint64_t v153 = 0;
      unint64_t v154 = 0xE000000000000000;
      sub_1A6892C40();
      swift_bridgeObjectRelease();
      unint64_t v153 = 1701996919;
      unint64_t v154 = 0xE400000000000000;
      *(void *)&long long v152 = 0x6D61726170;
      *((void *)&v152 + 1) = 0xE500000000000000;
      sub_1A6748030();
      sub_1A6892A70();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A6892150();
      long long v152 = v133;
      swift_bridgeObjectRetain();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A6892150();
      LODWORD(v152) = v68;
      sub_1A68930E0();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A6892150();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      sub_1A6892150();
      uint64_t v52 = v138;
LABEL_49:
      swift_bridgeObjectRelease();
      sub_1A67D2D0C((uint64_t)v142, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2C28);
      sub_1A6892150();
      swift_bridgeObjectRelease();
      uint64_t v138 = v52;
    }
    uint64_t v61 = v156;
    int v62 = v157;
    char v63 = v158;
    if (v156)
    {
      uint64_t v64 = v155;
      sub_1A67D2D0C((uint64_t)v142, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
      uint64_t v65 = v138;
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v153 = v136;
      unint64_t v154 = v137;
      sub_1A67D2D0C((uint64_t)v142, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
      uint64_t v65 = v138;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A6892150();
      sub_1A6892150();
      sub_1A6892150();
      *(void *)&long long v152 = v60;
      sub_1A68930E0();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      uint64_t v64 = v153;
      uint64_t v61 = v154;
    }
    uint64_t v72 = *(void *)(v65 + 16);
    char v128 = v63;
    if (v72)
    {
      swift_bridgeObjectRetain();
      unint64_t v73 = sub_1A673F7AC(v64, v61);
      if (v74)
      {
        LODWORD(v75) = *(_DWORD *)(*(void *)(v65 + 56) + 4 * v73);
        swift_bridgeObjectRelease();
LABEL_80:
        unint64_t v153 = 0;
        unint64_t v154 = 0xE000000000000000;
        sub_1A6892C40();
        swift_bridgeObjectRelease();
        unint64_t v153 = 0x7061724765726977;
        unint64_t v154 = 0xE900000000000068;
        *(void *)&long long v152 = 0x6D61726170;
        *((void *)&v152 + 1) = 0xE500000000000000;
        sub_1A6748030();
        sub_1A6892A70();
        sub_1A6892150();
        swift_bridgeObjectRelease();
        sub_1A6892150();
        LODWORD(v152) = v75;
        sub_1A68930E0();
        sub_1A6892150();
        swift_bridgeObjectRelease();
        sub_1A6892150();
        sub_1A6892150();
        swift_bridgeObjectRelease();
        sub_1A6892150();
        sub_1A6892150();
        sub_1A6892150();
        if (*(void *)(v138 + 16)
          && (swift_bridgeObjectRetain(), sub_1A673F7AC(v64, v61),
                                          char v77 = v76,
                                          swift_bridgeObjectRelease(),
                                          (v77 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v52 = v138;
          uint64_t v8 = v130;
        }
        else
        {
          unint64_t v153 = 0x6D61726170;
          unint64_t v154 = 0xE500000000000000;
          swift_bridgeObjectRetain();
          sub_1A6892150();
          LODWORD(v152) = v75;
          sub_1A68930E0();
          sub_1A6892150();
          swift_bridgeObjectRelease();
          unint64_t v79 = v153;
          unint64_t v78 = v154;
          if ((v128 & 1) == 0)
          {
            int v151 = v62;
            *(void *)&long long v152 = 32;
            *((void *)&v152 + 1) = 0xE100000000000000;
            off_1EFB7CE30();
            sub_1A6892150();
            swift_bridgeObjectRelease();
            sub_1A6892150();
            swift_bridgeObjectRelease();
            unint64_t v79 = v153;
            unint64_t v78 = v154;
          }
          char v51 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v152 = v138;
          sub_1A67D02EC(v75, v64, v61, v51);
          uint64_t v52 = v152;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)&long long v152 = v79;
          *((void *)&v152 + 1) = v78;
          swift_bridgeObjectRetain();
          sub_1A6892150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1A6892150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v8 = v130;
        }
        goto LABEL_49;
      }
      swift_bridgeObjectRelease();
      uint64_t v72 = *(void *)(v65 + 16);
    }
    unint64_t v75 = v72 + a4;
    if (__OFADD__(v72, a4)) {
      goto LABEL_129;
    }
    if ((v75 & 0x8000000000000000) != 0) {
      goto LABEL_130;
    }
    if (HIDWORD(v75)) {
      goto LABEL_131;
    }
    goto LABEL_80;
  }
  int64_t v18 = v15 + 1;
  if (__OFADD__(v15, 1)) {
    goto LABEL_137;
  }
  if (v18 < v116)
  {
    unint64_t v19 = *(void *)(v115 + 8 * v18);
    int64_t v20 = v15 + 1;
    if (v19) {
      goto LABEL_23;
    }
    int64_t v20 = v15 + 2;
    if (v15 + 2 >= v116) {
      goto LABEL_126;
    }
    unint64_t v19 = *(void *)(v115 + 8 * v20);
    if (v19) {
      goto LABEL_23;
    }
    int64_t v20 = v15 + 3;
    if (v15 + 3 >= v116) {
      goto LABEL_126;
    }
    unint64_t v19 = *(void *)(v115 + 8 * v20);
    if (v19)
    {
LABEL_23:
      int64_t v119 = v20;
      unint64_t v120 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
      goto LABEL_24;
    }
    uint64_t v21 = v15 + 4;
    if (v15 + 4 < v116)
    {
      unint64_t v19 = *(void *)(v115 + 8 * v21);
      if (v19)
      {
        int64_t v20 = v15 + 4;
        goto LABEL_23;
      }
      while (1)
      {
        int64_t v20 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          goto LABEL_138;
        }
        if (v20 >= v116) {
          break;
        }
        unint64_t v19 = *(void *)(v115 + 8 * v20);
        ++v21;
        if (v19) {
          goto LABEL_23;
        }
      }
    }
  }
LABEL_126:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *(_OWORD *)a6 = v141;
  *(void *)(a6 + 16) = v138;
  *(void *)(a6 + 24) = v11;
  *(void *)(a6 + 32) = v117;
  *(void *)(a6 + 40) = v118;
  return result;
}

unint64_t sub_1A67D255C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1A6741AD0(&qword_1E96C29F8);
    uint64_t v3 = (void *)sub_1A6892EF0();
    for (int64_t i = (int *)(a1 + 36); ; i += 2)
    {
      unsigned int v5 = *(i - 1);
      int v6 = *i;
      unint64_t result = sub_1A67420E8(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 4 * result;
      *(_DWORD *)(v3[6] + v9) = v5;
      *(_DWORD *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1A67D2638(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1A6741AD0(&qword_1E96C29E8);
    uint64_t v3 = (void *)sub_1A6892EF0();
    for (int64_t i = (int *)(a1 + 36); ; i += 2)
    {
      unsigned int v5 = *(i - 1);
      int v6 = *i;
      unint64_t result = sub_1A67420E8(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 4 * result;
      *(_DWORD *)(v3[6] + v9) = v5;
      *(_DWORD *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

id *sub_1A67D2710(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_1A67D273C(id *a1)
{
  return a1;
}

uint64_t sub_1A67D2768(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A67C7908(a1, a2);
  }
  return a1;
}

uint64_t sub_1A67D277C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A67D2790(a1, a2);
  }
  return a1;
}

uint64_t sub_1A67D2790(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void _s7ManagerVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 64);
}

void *_s7ManagerVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  unint64_t v7 = (void *)a2[8];
  a1[8] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v7;
  return a1;
}

void *_s7ManagerVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[8];
  uint64_t v5 = (void *)a2[8];
  a1[8] = v5;
  id v6 = v5;

  return a1;
}

uint64_t _s7ManagerVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  return a1;
}

uint64_t _s7ManagerVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7ManagerVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s7ManagerVMa()
{
  return &_s7ManagerVN;
}

uint64_t sub_1A67D2B1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A67D2B48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A67D2B74(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A67D2BA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A67D2C14(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A67D2C28()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67D2C30(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A67D2CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A67D2D0C(uint64_t a1, void (*a2)(void, void, void, void, unint64_t, void))
{
  return a1;
}

unint64_t sub_1A67D2D58()
{
  unint64_t result = qword_1E96C2A30;
  if (!qword_1E96C2A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2A30);
  }
  return result;
}

uint64_t sub_1A67D2DB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 120))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A67D2DFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 128);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*sub_1A67D2E64())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67D2EB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 144))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A67D2F04(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 152);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1A67D2F6C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A67D2FB8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67D300C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 168))();
  *a2 = result;
  return result;
}

uint64_t sub_1A67D3058(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 176);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A67D30AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A67D30E4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67D312C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 192))();
  *a2 = result;
  return result;
}

uint64_t sub_1A67D3178(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 200);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A67D31CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A67D3204(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67D324C()
{
  uint64_t v0 = sub_1A6741AD0(&qword_1E96C1D80);
  sub_1A67495E4(v0, qword_1E96CBBD0);
  sub_1A6748F88(v0, (uint64_t)qword_1E96CBBD0);
  return sub_1A6891C20();
}

uint64_t SSMLConverter.__allocating_init(withSSML:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SSMLConverter.init(withSSML:)(a1, a2);
  return v4;
}

uint64_t SSMLConverter.init(withSSML:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  v3[2] = a1;
  v3[3] = a2;
  swift_bridgeObjectRetain();
  static SSMLConverter.plainStringAndIntervals(fromSSML:)(a1, a2, &v21);
  swift_bridgeObjectRelease();
  uint64_t v6 = v22;
  if (!v22)
  {
    v3[4] = 0;
    v3[5] = 0xE000000000000000;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    v3[6] = MEMORY[0x1E4FBC860];
    SpeechStringIntervalTree.init()(&v21);
    uint64_t v19 = v21;
    v3[7] = v18;
    v3[8] = v19;
    return (uint64_t)v3;
  }
  uint64_t v7 = v23;
  uint64_t v8 = v21;
  v3[4] = v21;
  v3[5] = v6;
  v3[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A67D3AFC(v8, v6);
  swift_beginAccess();
  uint64_t v9 = v3[5];
  v20[0] = v3[4];
  v20[1] = v9;
  uint64_t v10 = qword_1E96CBBC8;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C1D80);
  sub_1A6748F88(v11, (uint64_t)qword_1E96CBBD0);
  sub_1A6766A10();
  sub_1A67D3B40();
  uint64_t v12 = sub_1A6891F50();
  swift_bridgeObjectRelease();
  v3[7] = v12;
  SpeechStringIntervalTree.init()(v20);
  v3[8] = v20[0];
  swift_beginAccess();
  unint64_t v13 = v3[6];
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_6;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A6892EB0();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_6:
  if (v14 >= 1)
  {
    uint64_t v16 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = MEMORY[0x1AD0BFD30](v16, v13);
      }
      else
      {
        uint64_t v17 = *(void *)(v13 + 8 * v16 + 32);
        swift_retain();
      }
      ++v16;
      swift_beginAccess();
      SpeechStringIntervalTree.insert(_:)(v17);
      swift_endAccess();
      swift_release();
    }
    while (v14 != v16);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t static SSMLConverter.plainStringAndIntervals(fromSSML:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  uint64_t v38 = 0xE000000000000000;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  v36[1] = a1;
  v36[2] = a2;
  v36[3] = 0;
  v36[4] = v3;
  uint64_t v37 = 0;
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  uint64_t v4 = 0;
LABEL_4:
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  char v7 = 1;
  while (1)
  {
    uint64_t v9 = v4;
    uint64_t v10 = sub_1A6892180();
    if (!v11) {
      goto LABEL_45;
    }
    ++v4;
    if (__OFADD__(v9, 1)) {
      goto LABEL_49;
    }
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    if (v10 == 60 && v11 == 0xE100000000000000)
    {
      uint64_t v12 = 60;
LABEL_14:
      if (v7)
      {
        char v8 = 1;
        uint64_t v6 = v9;
        goto LABEL_7;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v28 = sub_1A6892850();
      id v29 = sub_1A67CC544();
      char v30 = sub_1A67BBF28();
      uint64_t v31 = 0xD000000000000044;
      uint64_t v32 = "Fatal! Found consecutive starting tages '<' without ending tag '>' !";
LABEL_48:
      sub_1A67CC5A0(v28, (uint64_t)v29, v30 & 1, 0xD000000000000071, 0x80000001A68CE6F0, 0xD000000000000022, 0x80000001A68CE770, v31, (unint64_t)(v32 - 32) | 0x8000000000000000, MEMORY[0x1E4FBC860]);

      uint64_t result = swift_bridgeObjectRelease();
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      return result;
    }
    if (sub_1A6893120()) {
      goto LABEL_14;
    }
    if (v12 == 62 && v13 == 0xE100000000000000)
    {
      uint64_t v12 = 62;
LABEL_20:
      if ((v7 & 1) == 0)
      {
        char v8 = 0;
        uint64_t v5 = v9;
        goto LABEL_7;
      }
LABEL_47:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v28 = sub_1A6892850();
      id v29 = sub_1A67CC544();
      char v30 = sub_1A67BBF28();
      uint64_t v31 = 0xD000000000000035;
      uint64_t v32 = "Fatal! Found ending tag '>' before starting tag '<' !";
      goto LABEL_48;
    }
    if (sub_1A6893120()) {
      goto LABEL_20;
    }
    if (v7) {
      break;
    }
LABEL_6:
    char v8 = 1;
LABEL_7:
    MEMORY[0x1AD0BF200](v12, v13);
    swift_bridgeObjectRelease();
    char v7 = 0;
    if ((v8 & 1) == 0)
    {
      sub_1A6741AD0(&qword_1E96C2A38);
      uint64_t v35 = v5;
      v36[0] = v6;
      uint64_t v18 = sub_1A67F054C((uint64_t)v36, (uint64_t)&v35);
      type metadata accessor for SpeechStringIntervalNode();
      uint64_t v19 = v37;
      uint64_t v20 = v38;
      swift_retain();
      char v21 = sub_1A67BBF28();
      sub_1A6810CA4(v18, v33, v19, v20, v21 & 1);
      MEMORY[0x1AD0BF380]();
      if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1A6892320();
      }
      sub_1A6892360();
      sub_1A6892300();
      swift_release();
      uint64_t v22 = v5 - v6;
      if (__OFSUB__(v5, v6)) {
        goto LABEL_50;
      }
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23) {
        goto LABEL_51;
      }
      if (!__OFADD__(v33, v24))
      {
        v33 += v24;
        uint64_t v37 = 0;
        uint64_t v38 = 0xE000000000000000;
        goto LABEL_4;
      }
      goto LABEL_52;
    }
  }
  MEMORY[0x1AD0BF200](v12, v13);
  MEMORY[0x1AD0BF200](v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1A6892180();
  if (!v15)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v26 = v41;
    uint64_t v27 = v39;
    *a3 = v40;
    a3[1] = v26;
    a3[2] = v27;
    return result;
  }
  uint64_t v12 = v14;
  uint64_t v13 = v15;
  uint64_t v6 = v9 + 1;
  while (1)
  {
    uint64_t v4 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v12 == 60 && v13 == 0xE100000000000000)
    {
      uint64_t v12 = 60;
LABEL_35:
      if (__OFSUB__(v6, 1)) {
        goto LABEL_53;
      }
      if (v6 - 1 >= 1)
      {
        type metadata accessor for SpeechStringIntervalNode();
        sub_1A6741AD0(&qword_1E96C2A38);
        uint64_t v35 = v6 - 1;
        v36[0] = v9;
        uint64_t v17 = sub_1A67F054C((uint64_t)v36, (uint64_t)&v35);
        sub_1A6810CA4(v17, v33, v37, v38, 0);
        MEMORY[0x1AD0BF380]();
        if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A6892320();
        }
        sub_1A6892360();
        sub_1A6892300();
        uint64_t v37 = 0;
        uint64_t v38 = 0xE000000000000000;
        goto LABEL_6;
      }
      goto LABEL_54;
    }
    if (sub_1A6893120()) {
      goto LABEL_35;
    }
    if (v12 == 62 && v13 == 0xE100000000000000 || (sub_1A6893120() & 1) != 0) {
      goto LABEL_47;
    }
    MEMORY[0x1AD0BF200](v12, v13);
    MEMORY[0x1AD0BF200](v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1A6892180();
    uint64_t v13 = v16;
    ++v6;
    if (!v16) {
      goto LABEL_45;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_1A6892E60();
  __break(1u);
  return result;
}

uint64_t sub_1A67D3AFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A67D3B40()
{
  unint64_t result = qword_1E96C1DB8;
  if (!qword_1E96C1DB8)
  {
    sub_1A6750AC4(&qword_1E96C1D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C1DB8);
  }
  return result;
}

uint64_t SSMLConverter.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SSMLConverter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A67D3C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = sub_1A6741AD0(&qword_1E96C1DC0);
  uint64_t v6 = *(void *)(v42 - 8);
  uint64_t result = MEMORY[0x1F4188790](v42);
  unint64_t v41 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v43 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 192))(result);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v32 = a2 - a1;
    uint64_t v11 = (uint64_t (**)(uint64_t))(*(void *)v3 + 144);
    uint64_t v38 = *v11;
    uint64_t v13 = *(uint64_t (**)(char *))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v14 = *(unsigned __int8 *)(v12 + 64);
    uint64_t v31 = v9;
    uint64_t v15 = v9 + ((v14 + 32) & ~v14);
    uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v12 - 8);
    uint64_t v37 = v13;
    uint64_t v39 = v12;
    uint64_t v40 = a1;
    uint64_t v33 = *(void *)(v12 + 56);
    uint64_t v34 = a1;
    uint64_t v35 = v11;
    uint64_t v16 = v42;
    uint64_t v17 = v38;
    while (1)
    {
      uint64_t v44 = v15;
      uint64_t v45 = v10;
      uint64_t v19 = v41;
      uint64_t v20 = v37(v41);
      uint64_t v21 = v17(v20);
      v17(v21);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      sub_1A6891C30();
      swift_release();
      uint64_t v22 = sub_1A68921C0();
      uint64_t v23 = swift_bridgeObjectRelease();
      uint64_t v24 = v17(v23);
      v17(v24);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      sub_1A6891C30();
      swift_release();
      uint64_t v25 = sub_1A68921C0();
      swift_bridgeObjectRelease();
      uint64_t result = (*v36)(v19, v16);
      uint64_t v26 = v25 - v22;
      if (__OFSUB__(v25, v22)) {
        goto LABEL_24;
      }
      BOOL v27 = __OFSUB__(v26, 1);
      uint64_t v28 = v26 - 1;
      if (v27) {
        goto LABEL_25;
      }
      if (v43 >= v22)
      {
        if (v25 <= v34)
        {
          BOOL v27 = __OFSUB__(v40, v28);
          uint64_t v29 = v40 - v28;
          uint64_t v18 = v45;
          if (v27) {
            goto LABEL_26;
          }
          uint64_t v40 = v29;
        }
        else if (v22 < v34 || v43 < v25)
        {
          uint64_t v18 = v45;
        }
        else
        {
          BOOL v27 = __OFSUB__(v32, v28);
          v32 -= v28;
          uint64_t v18 = v45;
          if (v27) {
            goto LABEL_27;
          }
        }
        uint64_t v15 = v44 + v33;
        uint64_t v10 = v18 - 1;
        if (v10) {
          continue;
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      a1 = v40;
      uint64_t v30 = v40 + v32;
      if (__OFADD__(v40, v32)) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v30 = a2;
  if (__OFADD__(a1, a2 - a1))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_19:
  if (v30 >= a1) {
    return a1;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A67D3FAC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

uint64_t SSMLConverter.plainStringRange(from:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  v27[1] = *(void *)(v2 + 64);
  sub_1A6741AD0(&qword_1E96C2A38);
  uint64_t v26 = a2;
  v27[0] = a1;
  swift_retain();
  uint64_t v5 = sub_1A67F054C((uint64_t)v27, (uint64_t)&v26);
  unint64_t v6 = SpeechStringIntervalTree.intersections(with:)(v5);
  swift_release();
  uint64_t result = swift_release();
  if (!(v6 >> 62))
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    int v24 = sub_1A6892850();
    id v19 = sub_1A67CC544();
    char v25 = sub_1A67BBF28();
    sub_1A67CC5A0(v24, (uint64_t)v19, v25 & 1, 0xD000000000000071, 0x80000001A68CE6F0, 0xD000000000000017, 0x80000001A68CE880, 0xD000000000000013, 0x80000001A68CE920, MEMORY[0x1E4FBC860]);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A6892EB0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_21;
  }
LABEL_3:
  if ((v6 & 0xC000000000000001) == 0)
  {
    unint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
      if (!__OFSUB__(v8, 1))
      {
        if (v8 - 1 < v9)
        {
          swift_retain();
          swift_retain();
LABEL_8:
          swift_bridgeObjectRelease();
          uint64_t v10 = sub_1A67D4320(a1, 0);
          char v12 = v11;
          uint64_t result = sub_1A67D4320(a2, 1);
          uint64_t v14 = result;
          if (v12)
          {
            if ((v13 & 1) == 0)
            {
              uint64_t v16 = result + 1;
              if (!__OFADD__(result, 1))
              {
                if ((v16 & 0x8000000000000000) == 0)
                {
                  uint64_t v15 = 0;
                  goto LABEL_16;
                }
                goto LABEL_31;
              }
LABEL_30:
              __break(1u);
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
            int v18 = sub_1A6892850();
            id v19 = sub_1A67CC544();
            char v20 = sub_1A67BBF28();
            uint64_t v21 = 0xD000000000000034;
            uint64_t v22 = MEMORY[0x1E4FBC860];
            uint64_t v23 = "Could not resolve start position in ssml translation";
          }
          else
          {
            if ((v13 & 1) == 0)
            {
              if (result >= v10)
              {
                uint64_t v15 = v10;
                uint64_t v16 = v14;
LABEL_16:
                uint64_t v17 = sub_1A67D3C34(v15, v16);
                swift_release();
                swift_release();
                return v17;
              }
              goto LABEL_29;
            }
            int v18 = sub_1A6892850();
            id v19 = sub_1A67CC544();
            char v20 = sub_1A67BBF28();
            uint64_t v21 = 0xD000000000000032;
            uint64_t v22 = MEMORY[0x1E4FBC860];
            uint64_t v23 = "Could not resolve end position in ssml translation";
          }
          sub_1A67CC5A0(v18, (uint64_t)v19, v20 & 1, 0xD000000000000071, 0x80000001A68CE6F0, 0xD000000000000017, 0x80000001A68CE880, v21, (unint64_t)(v23 - 32) | 0x8000000000000000, v22);
          swift_release();
          swift_release();
LABEL_22:

          return 0;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  MEMORY[0x1AD0BFD30](0, v6);
  swift_bridgeObjectRelease();
  uint64_t result = v8 - 1;
  if (!__OFSUB__(v8, 1))
  {
    MEMORY[0x1AD0BFD30](result, v6);
    goto LABEL_8;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A67D4320(uint64_t a1, char a2)
{
  if (a1 < 0)
  {
    int v8 = sub_1A6892850();
    id v9 = sub_1A67CC544();
    char v10 = sub_1A67BBF28();
    sub_1A67CC5A0(v8, (uint64_t)v9, v10 & 1, 0xD000000000000071, 0x80000001A68CE6F0, 0xD000000000000025, 0x80000001A68CE9B0, 0xD00000000000001CLL, 0x80000001A68CE9E0, MEMORY[0x1E4FBC860]);

    return 0;
  }
  if ((*(uint64_t (**)(void))(*(void *)v2 + 376))())
  {
    uint64_t v5 = (*(void *(**)(uint64_t *__return_ptr))(*(void *)v2 + 136))(&v12);
    uint64_t v6 = v12;
    uint64_t result = (*(uint64_t (**)(void *))(*(void *)v2 + 328))(v5);
    if (!__OFSUB__(v6, result)) {
      return (v6 - result) & ~((v6 - result) >> 63);
    }
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v2 + 328))();
  uint64_t v11 = a1 - result;
  if (__OFSUB__(a1, result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = v11 + (a2 & 1);
  if (__OFADD__(v11, a2 & 1)) {
LABEL_11:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A67D44D8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_1A67D451C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t sub_1A67D4560()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_1A67D45A4(uint64_t a1, uint64_t a2)
{
  return SSMLConverter.plainStringRange(from:)(a1, a2);
}

uint64_t SSMLConverter.ConversionResult.plainString.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SSMLConverter.ConversionResult.plainString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SSMLConverter.ConversionResult.plainString.modify())()
{
  return nullsub_19;
}

uint64_t SSMLConverter.ConversionResult.rangeIntervals.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SSMLConverter.ConversionResult.rangeIntervals.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SSMLConverter.ConversionResult.rangeIntervals.modify())()
{
  return nullsub_19;
}

uint64_t type metadata accessor for SSMLConverter()
{
  return self;
}

uint64_t method lookup function for SSMLConverter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SSMLConverter);
}

uint64_t dispatch thunk of SSMLConverter.originalString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SSMLConverter.originalString.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SSMLConverter.originalString.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SSMLConverter.plainString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of SSMLConverter.plainString.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of SSMLConverter.plainString.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SSMLConverter.rangeIntervals.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of SSMLConverter.rangeIntervals.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of SSMLConverter.rangeIntervals.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of SSMLConverter.escapedIntervals.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SSMLConverter.escapedIntervals.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of SSMLConverter.escapedIntervals.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of SSMLConverter.__allocating_init(withSSML:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t destroy for SSMLConverter.ConversionResult()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s12TextToSpeech13SSMLConverterC16ConversionResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SSMLConverter.ConversionResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SSMLConverter.ConversionResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SSMLConverter.ConversionResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SSMLConverter.ConversionResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SSMLConverter.ConversionResult()
{
  return &type metadata for SSMLConverter.ConversionResult;
}

uint64_t sub_1A67D4A70()
{
  return sub_1A6893250();
}

uint64_t sub_1A67D4AB8()
{
  return sub_1A6893230();
}

uint64_t sub_1A67D4AE4()
{
  return sub_1A6893250();
}

uint64_t commonScriptCode.getter()
{
  return 2038004058;
}

uint64_t sub_1A67D4B38()
{
  uint64_t v0 = sub_1A67610CC((uint64_t)&unk_1EFB76F90);
  uint64_t result = swift_arrayDestroy();
  qword_1E96D6210 = v0;
  *(void *)algn_1E96D6218 = 0;
  byte_1E96D6220 = 1;
  return result;
}

unint64_t sub_1A67D4B90()
{
  sub_1A6741AD0(&qword_1E96C2AB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A68A1E40;
  *(void *)(inited + 32) = 1768841544;
  *(void *)(inited + 40) = 0xE400000000000000;
  if (qword_1E96CBC00 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1E96D6210;
  uint64_t v2 = *(void *)algn_1E96D6218;
  *(void *)(inited + 48) = qword_1E96D6210;
  *(void *)(inited + 56) = v2;
  unsigned __int8 v3 = byte_1E96D6220;
  *(unsigned char *)(inited + 64) = byte_1E96D6220;
  *(void *)(inited + 72) = 1953390920;
  *(void *)(inited + 80) = 0xE400000000000000;
  *(void *)(inited + 88) = v1;
  *(void *)(inited + 96) = v2;
  *(unsigned char *)(inited + 104) = v3;
  *(void *)(inited + 112) = 1936613704;
  *(void *)(inited + 120) = 0xE400000000000000;
  *(void *)(inited + 128) = v1;
  *(void *)(inited + 136) = v2;
  *(unsigned char *)(inited + 144) = v3;
  *(void *)(inited + 152) = 1634888008;
  *(void *)(inited + 160) = 0xE400000000000000;
  *(void *)(inited + 168) = v1;
  *(void *)(inited + 176) = v2;
  *(unsigned char *)(inited + 184) = v3;
  *(void *)(inited + 192) = 1634623819;
  *(void *)(inited + 200) = 0xE400000000000000;
  *(void *)(inited + 208) = v1;
  *(void *)(inited + 216) = v2;
  *(unsigned char *)(inited + 224) = v3;
  *(void *)(inited + 232) = 1851879498;
  *(void *)(inited + 240) = 0xE400000000000000;
  *(void *)(inited + 248) = v1;
  *(void *)(inited + 256) = v2;
  *(unsigned char *)(inited + 264) = v3;
  *(void *)(inited + 272) = 1701998411;
  *(void *)(inited + 280) = 0xE400000000000000;
  sub_1A67DB658(v1, v2, v3);
  *(void *)(inited + 288) = v1;
  *(void *)(inited + 296) = v2;
  *(unsigned char *)(inited + 304) = v3;
  *(void *)(inited + 312) = 1735287112;
  *(void *)(inited + 320) = 0xE400000000000000;
  sub_1A67DB658(v1, v2, v3);
  *(void *)(inited + 328) = v1;
  *(void *)(inited + 336) = v2;
  *(unsigned char *)(inited + 344) = v3;
  sub_1A67DB658(v1, v2, v3);
  sub_1A67DB658(v1, v2, v3);
  sub_1A67DB658(v1, v2, v3);
  sub_1A67DB658(v1, v2, v3);
  sub_1A67DB658(v1, v2, v3);
  sub_1A67DB658(v1, v2, v3);
  unint64_t result = sub_1A67D4D5C(inited);
  qword_1E96D6228 = result;
  return result;
}

unint64_t sub_1A67D4D5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A6741AD0(&qword_1E96C2AC0);
  uint64_t v2 = (void *)sub_1A6892EF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned __int8 *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    unsigned __int8 v9 = *v4;
    swift_bridgeObjectRetain();
    sub_1A67DB658(v7, v8, v9);
    unint64_t result = sub_1A673F7AC(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 24 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(unsigned char *)(v13 + 16) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 40;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A67D4EA0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 112))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A67D4EF0(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 120))(*a1);
}

uint64_t sub_1A67D4F38(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_1A67D4F78()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A67D4FB0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67D4FF8(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v1 + 136))();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1A67DA2A0(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 2038004058;
    swift_bridgeObjectRelease();
    if (uscript_getShortName())
    {
      uint64_t v8 = sub_1A6892160();
      uint64_t v10 = v9;
      if (sub_1A6892100() < 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v11 = *(uint64_t (**)(unsigned char *))(*(void *)v2 + 152);
        swift_bridgeObjectRetain();
        uint64_t v12 = (void (*)(unsigned char *, void))v11(v18);
        uint64_t v14 = v13;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = *v14;
        *uint64_t v14 = 0x8000000000000000;
        sub_1A67DA90C(v8, v10, a1, isUniquelyReferenced_nonNull_native);
        *uint64_t v14 = v17;
        swift_bridgeObjectRelease();
        v12(v18, 0);
        return v8;
      }
    }
  }
  return v7;
}

char *sub_1A67D5180(int a1)
{
  if (a1 < 0) {
    __break(1u);
  }
  uint64_t v2 = v1;
  uint64_t v3 = (const void *)v1[5];
  int ScriptExtensions = uscript_getScriptExtensions();
  char v39 = 0;
  unint64_t v5 = sub_1A67DB348(v3, ScriptExtensions);
  uint64_t v6 = v5[2];
  if (!v6)
  {
    swift_release();
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_41;
  }
  uint64_t v7 = 0;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v9 = v5 + 4;
  uint64_t v35 = v2;
  uint64_t v36 = v5[2];
  uint64_t v38 = v5 + 4;
  do
  {
    int v10 = *((_DWORD *)v9 + v7);
    if (!v10)
    {
      char v39 = 1;
      goto LABEL_5;
    }
    uint64_t v11 = sub_1A67D4FF8(v10);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    if (qword_1E96CBC08 != -1) {
      uint64_t v11 = swift_once();
    }
    uint64_t v15 = qword_1E96D6228;
    if (!*(void *)(qword_1E96D6228 + 16)) {
      goto LABEL_16;
    }
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1A673F7AC(v12, v14);
    if ((v17 & 1) == 0)
    {
      uint64_t v11 = swift_bridgeObjectRelease();
LABEL_16:
      if (((*(uint64_t (**)(uint64_t))(*v2 + 112))(v11) & 1) == 0)
      {
        if (!*(void *)(v2[3] + 16)
          || (swift_bridgeObjectRetain(), sub_1A673F7AC(v12, v14),
                                          char v25 = v24,
                                          swift_bridgeObjectRelease(),
                                          (v25 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      LOBYTE(v20) = 0;
      uint64_t v19 = v14;
LABEL_20:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1A67DAF24(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v27 = *((void *)v8 + 2);
      unint64_t v26 = *((void *)v8 + 3);
      if (v27 >= v26 >> 1) {
        uint64_t v8 = sub_1A67DAF24((char *)(v26 > 1), v27 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v27 + 1;
      uint64_t v28 = &v8[24 * v27];
      *((void *)v28 + 4) = v12;
      *((void *)v28 + 5) = v19;
      v28[48] = v20;
      goto LABEL_37;
    }
    uint64_t v18 = *(void *)(v15 + 56) + 24 * v16;
    uint64_t v12 = *(void *)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    int v20 = *(unsigned __int8 *)(v18 + 16);
    sub_1A67DB658(*(void *)v18, v19, *(unsigned char *)(v18 + 16));
    swift_bridgeObjectRelease_n();
    if (v20)
    {
      if (v20 == 1)
      {
        uint64_t v21 = swift_bridgeObjectRetain();
        uint64_t v22 = sub_1A67DB3EC(v21);
        sub_1A67DB4D4(v12, v19, 1u);
        uint64_t v23 = v22[2];
        if (v23) {
          goto LABEL_29;
        }
      }
      else
      {
        sub_1A67DB4D4(v12, v19, 2u);
        uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (v23)
        {
LABEL_29:
          uint64_t v37 = v8;
          uint64_t v29 = v2[3];
          swift_bridgeObjectRetain();
          uint64_t v30 = v22 + 5;
          while (1)
          {
            if (*(void *)(v29 + 16))
            {
              uint64_t v31 = *(v30 - 1);
              uint64_t v32 = *v30;
              swift_bridgeObjectRetain_n();
              sub_1A673F7AC(v31, v32);
              LOBYTE(v31) = v33;
              swift_bridgeObjectRelease_n();
              if (v31) {
                break;
              }
            }
            v30 += 2;
            if (!--v23)
            {
              swift_bridgeObjectRelease();
              uint64_t v2 = v35;
              uint64_t v8 = v37;
              goto LABEL_36;
            }
          }
          swift_bridgeObjectRelease_n();
          uint64_t v2 = v35;
          uint64_t v6 = v36;
          uint64_t v8 = v37;
          if (v20 != 255) {
            goto LABEL_20;
          }
          goto LABEL_37;
        }
      }
    }
    else
    {
      sub_1A6741AD0(&qword_1EB67A388);
      uint64_t v22 = (void *)swift_allocObject();
      *((_OWORD *)v22 + 1) = xmmword_1A689DC40;
      v22[4] = v12;
      void v22[5] = v19;
      swift_bridgeObjectRetain();
      uint64_t v23 = v22[2];
      if (v23) {
        goto LABEL_29;
      }
    }
LABEL_36:
    swift_bridgeObjectRelease();
    sub_1A67DB4D4(v12, v19, v20);
    uint64_t v6 = v36;
LABEL_37:
    uint64_t v9 = v38;
LABEL_5:
    ++v7;
  }
  while (v7 != v6);
  swift_release();
  if (v39)
  {
    swift_bridgeObjectRelease();
    return (char *)&unk_1EFB79690;
  }
LABEL_41:
  if (!*((void *)v8 + 2))
  {
    swift_bridgeObjectRelease();
    return (char *)&unk_1EFB796C8;
  }
  return v8;
}

void *sub_1A67D5598()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1)
    {
      uint64_t v3 = swift_bridgeObjectRetain();
      uint64_t v4 = sub_1A67DB3EC(v3);
      sub_1A67DB4D4(v2, v1, 1u);
      return v4;
    }
    return (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1A6741AD0(&qword_1EB67A388);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1A689DC40;
    *(void *)(v6 + 32) = v2;
    *(void *)(v6 + 40) = v1;
    swift_bridgeObjectRetain();
  }
  return (void *)v6;
}

void *sub_1A67D563C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v102 = 0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v115 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v98 = (char *)&v94 - v6;
  uint64_t v103 = a3;
  uint64_t v7 = *(void *)(*(void *)(a3 + 8) + 8);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v8);
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v95 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v94 - v10;
  unint64_t v12 = MEMORY[0x1E4FBC860];
  int64_t v116 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v104 = a1;
  uint64_t v105 = v7;
  sub_1A6892790();
  unint64_t v13 = v12;
  sub_1A6892250();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  int v100 = v11;
  uint64_t v101 = v9;
  uint64_t v97 = AssociatedConformanceWitness;
  sub_1A6892A40();
  if (v122)
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v95 + 8))(v100, v101);
    unint64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = v104;
    if (v15)
    {
      swift_bridgeObjectRetain();
      unint64_t v17 = v13;
      uint64_t v18 = (unint64_t *)(v13 + 56);
      while (1)
      {
        unint64_t v19 = a2;
        unint64_t v20 = *(v18 - 3);
        unint64_t v13 = *(v18 - 2);
        uint64_t v21 = *((unsigned __int8 *)v18 - 8);
        unint64_t v22 = *v18;
        uint64_t v23 = v16;
        sub_1A68927A0();
        unint64_t v24 = v121;
        if (v121 >> 14 < v22 >> 14) {
          goto LABEL_131;
        }
        v18 += 5;
        unint64_t v121 = v20;
        unint64_t v122 = v13;
        char v123 = v21;
        unint64_t v124 = v22;
        unint64_t v125 = v24;
        sub_1A67D6C4C((uint64_t)&v121);
        --v15;
        a2 = v19;
        if (!v15)
        {
          unint64_t v13 = v17;
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    uint64_t v21 = (uint64_t)v116;
    uint64_t v25 = v116[2];
    if (!v25)
    {
      sub_1A6892770();
      unint64_t v15 = v121;
      sub_1A68927A0();
      uint64_t v23 = v117[0];
      if (v117[0] >> 14 < v15 >> 14) {
        goto LABEL_132;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_133;
      }
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  char v96 = (void (**)(char *, uint64_t))(v115 + 8);
  unint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v41 = v121;
  unint64_t v107 = a2;
LABEL_52:
  char v108 = (void *)v41;
  uint64_t v42 = v98;
  uint64_t v43 = v104;
  uint64_t v21 = v103;
  sub_1A6892AE0();
  v117[0] = v108;
  uint64_t v44 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  uint64_t v45 = (void (*)(unint64_t *, void))sub_1A68927F0();
  int v47 = *v46;
  v45(&v121, 0);
  uint64_t v48 = v42;
  unint64_t v49 = (unint64_t)v108;
  (*v96)(v48, v44);
  uint64_t v50 = sub_1A67D5180(v47);
  uint64_t v51 = sub_1A67DC170((uint64_t)v50);
  uint64_t v52 = swift_bridgeObjectRelease();
  unint64_t v15 = (unint64_t)&v94;
  MEMORY[0x1F4188790](v52);
  *(&v94 - 6) = a2;
  *(&v94 - 5) = v21;
  *(&v94 - 4) = v51;
  *(&v94 - 3) = (uint64_t)&v116;
  *(&v94 - 2) = v49;
  *(&v94 - 1) = v43;
  swift_bridgeObjectRetain();
  uint64_t v53 = v102;
  uint64_t v23 = sub_1A67D7110((uint64_t)sub_1A67DC218, (uint64_t)(&v94 - 8), v13);
  uint64_t v102 = v53;
  swift_bridgeObjectRelease();
  int64_t v54 = 0;
  uint64_t v55 = *(void *)(v51 + 56);
  uint64_t v109 = v51 + 56;
  uint64_t v56 = 1 << *(unsigned char *)(v51 + 32);
  if (v56 < 64) {
    uint64_t v57 = ~(-1 << v56);
  }
  else {
    uint64_t v57 = -1;
  }
  unint64_t v58 = v57 & v55;
  int64_t v110 = (unint64_t)(v56 + 63) >> 6;
  unint64_t v111 = (void *)v51;
  unint64_t v106 = v49 >> 14;
  unint64_t v13 = v23;
  while (1)
  {
    if (v58)
    {
      unint64_t v60 = __clz(__rbit64(v58));
      uint64_t v61 = (v58 - 1) & v58;
      unint64_t v62 = v60 | (v54 << 6);
    }
    else
    {
      int64_t v63 = v54 + 1;
      if (__OFADD__(v54, 1)) {
        goto LABEL_126;
      }
      if (v63 >= v110) {
        goto LABEL_51;
      }
      unint64_t v64 = *(void *)(v109 + 8 * v63);
      ++v54;
      if (!v64)
      {
        int64_t v54 = v63 + 1;
        if (v63 + 1 >= v110) {
          goto LABEL_51;
        }
        unint64_t v64 = *(void *)(v109 + 8 * v54);
        if (!v64)
        {
          int64_t v54 = v63 + 2;
          if (v63 + 2 >= v110) {
            goto LABEL_51;
          }
          unint64_t v64 = *(void *)(v109 + 8 * v54);
          if (!v64)
          {
            int64_t v65 = v63 + 3;
            if (v65 >= v110) {
              goto LABEL_51;
            }
            unint64_t v64 = *(void *)(v109 + 8 * v65);
            if (!v64)
            {
              while (1)
              {
                int64_t v54 = v65 + 1;
                if (__OFADD__(v65, 1)) {
                  goto LABEL_130;
                }
                if (v54 >= v110) {
                  break;
                }
                unint64_t v64 = *(void *)(v109 + 8 * v54);
                ++v65;
                if (v64) {
                  goto LABEL_73;
                }
              }
LABEL_51:
              swift_release();
              sub_1A6892A40();
              unint64_t v41 = v121;
              if (v122) {
                goto LABEL_2;
              }
              goto LABEL_52;
            }
            int64_t v54 = v65;
          }
        }
      }
LABEL_73:
      uint64_t v61 = (v64 - 1) & v64;
      unint64_t v62 = __clz(__rbit64(v64)) + (v54 << 6);
    }
    uint64_t v112 = v61;
    unint64_t v113 = v54;
    uint64_t v66 = v111[6] + 24 * v62;
    uint64_t v68 = *(void *)v66;
    uint64_t v67 = *(void *)(v66 + 8);
    uint64_t v21 = *(unsigned __int8 *)(v66 + 16);
    uint64_t v69 = *(void *)(v13 + 16);
    if (v69) {
      break;
    }
    sub_1A67DB658(*(void *)v66, *(void *)(v66 + 8), *(unsigned char *)(v66 + 16));
LABEL_103:
    unint64_t v15 = v49;
    if (!*(void *)(v13 + 16))
    {
      unint64_t v15 = v49;
      if (!v116[2])
      {
        uint64_t v23 = v104;
        sub_1A6892770();
        unint64_t v15 = v121;
        if (v106 < v121 >> 14)
        {
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
          goto LABEL_129;
        }
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v13 = (unint64_t)sub_1A67DB03C(0, *(void *)(v13 + 16) + 1, 1, (void *)v13);
    }
    unint64_t v83 = *(void *)(v13 + 16);
    unint64_t v82 = *(void *)(v13 + 24);
    uint64_t v23 = v83 + 1;
    if (v83 >= v82 >> 1) {
      unint64_t v13 = (unint64_t)sub_1A67DB03C((void *)(v82 > 1), v83 + 1, 1, (void *)v13);
    }
    *(void *)(v13 + 16) = v23;
    unint64_t v59 = v13 + 40 * v83;
    *(void *)(v59 + 32) = v68;
    *(void *)(v59 + 40) = v67;
    *(unsigned char *)(v59 + 48) = v21;
    *(void *)(v59 + 56) = v15;
    *(void *)(v59 + 64) = v49;
LABEL_57:
    unint64_t v58 = v112;
    int64_t v54 = v113;
  }
  sub_1A67DB658(*(void *)v66, *(void *)(v66 + 8), *(unsigned char *)(v66 + 16));
  BOOL v70 = v21 != 2;
  BOOL v71 = v21 == 2;
  if (v67 | v68) {
    BOOL v71 = 0;
  }
  LODWORD(v114) = v71;
  if (v68 != 1 || v67 != 0) {
    BOOL v70 = 1;
  }
  LODWORD(v115) = v70;
  swift_bridgeObjectRetain();
  unint64_t v73 = 0;
  uint64_t v74 = 64;
  while (1)
  {
    unint64_t v15 = v13;
    uint64_t v75 = *(void *)(v13 + v74 - 32);
    uint64_t v23 = *(void *)(v13 + v74 - 24);
    int v76 = *(unsigned __int8 *)(v13 + v74 - 16);
    if (!v76) {
      break;
    }
    if (v76 != 1)
    {
      if (v75 | v23)
      {
        if ((v115 & 1) == 0)
        {
          unint64_t v13 = v15;
          uint64_t v21 = v15 + v74 - 24;
          unint64_t v84 = (unsigned __int8 *)(v15 + v74 - 16);
          sub_1A67DB4D4(v75, v23, 2u);
          uint64_t v80 = 1;
          uint64_t v81 = 0;
LABEL_111:
          sub_1A67DB4D4(v80, v81, 2u);
          sub_1A67DB4D4(v75, v23, 2u);
          swift_bridgeObjectRelease();
          goto LABEL_115;
        }
      }
      else if (v114)
      {
        unint64_t v13 = v15;
        uint64_t v21 = v15 + v74 - 24;
        unint64_t v84 = (unsigned __int8 *)(v15 + v74 - 16);
        sub_1A67DB4D4(v75, v23, 2u);
        sub_1A67DB4D4(0, 0, 2u);
        uint64_t v80 = v75;
        uint64_t v81 = v23;
        goto LABEL_111;
      }
LABEL_84:
      sub_1A67DB658(v68, v67, v21);
      sub_1A67DB658(v75, v23, v76);
      sub_1A67DB4D4(v75, v23, v76);
      sub_1A67DB4D4(v68, v67, v21);
      goto LABEL_85;
    }
    if (v21 != 1) {
      goto LABEL_84;
    }
    sub_1A67DB658(v75, v23, 1u);
    sub_1A67DB658(v75, v23, 1u);
    sub_1A67DB658(v68, v67, 1u);
    sub_1A67DB658(v75, v23, 1u);
    char v77 = sub_1A67D8438(v75, v68);
    sub_1A67DB4D4(v75, v23, 1u);
    sub_1A67DB4D4(v68, v67, 1u);
    sub_1A67DB4D4(v75, v23, 1u);
    sub_1A67DB4D4(v75, v23, 1u);
    if (v77)
    {
      unint64_t v13 = v15;
      uint64_t v21 = v15 + v74 - 24;
      unint64_t v84 = (unsigned __int8 *)(v15 + v74 - 16);
      swift_bridgeObjectRelease();
      uint64_t v85 = v68;
      uint64_t v86 = v67;
      unsigned __int8 v87 = 1;
      goto LABEL_114;
    }
LABEL_85:
    ++v73;
    v74 += 40;
    unint64_t v13 = v15;
    if (v69 == v73)
    {
      swift_bridgeObjectRelease();
      a2 = v107;
      unint64_t v49 = (unint64_t)v108;
      goto LABEL_103;
    }
  }
  if (v21) {
    goto LABEL_84;
  }
  if (v75 != v68 || v23 != v67)
  {
    char v79 = sub_1A6893120();
    sub_1A67DB658(v68, v67, 0);
    sub_1A67DB658(v75, v23, 0);
    sub_1A67DB4D4(v75, v23, 0);
    sub_1A67DB4D4(v68, v67, 0);
    if (v79)
    {
      unint64_t v13 = v15;
      uint64_t v21 = v15 + v74 - 24;
      unint64_t v84 = (unsigned __int8 *)(v15 + v74 - 16);
      goto LABEL_113;
    }
    goto LABEL_85;
  }
  unint64_t v13 = v15;
  uint64_t v21 = v15 + v74 - 24;
  unint64_t v84 = (unsigned __int8 *)(v15 + v74 - 16);
  sub_1A67DB658(v68, v67, 0);
  sub_1A67DB658(v68, v67, 0);
  sub_1A67DB4D4(v68, v67, 0);
  sub_1A67DB4D4(v68, v67, 0);
LABEL_113:
  swift_bridgeObjectRelease();
  uint64_t v85 = v68;
  uint64_t v86 = v67;
  unsigned __int8 v87 = 0;
LABEL_114:
  sub_1A67DB4D4(v85, v86, v87);
LABEL_115:
  if (v73 >= *(void *)(v13 + 16)) {
    goto LABEL_127;
  }
  unint64_t v88 = *(void *)(v13 + v74 - 8);
  if (v106 < v88 >> 14) {
    goto LABEL_128;
  }
  unint64_t v13 = *(void *)(v13 + v74 - 32);
  uint64_t v21 = *(void *)v21;
  uint64_t v23 = *v84;
  sub_1A67DB658(v13, v21, *v84);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v15 = (unint64_t)sub_1A67DB644((void *)v15);
  }
  if (v73 < *(void *)(v15 + 16))
  {
    int64_t v89 = (void *)(v15 + v74);
    uint64_t v90 = *(void *)(v15 + v74 - 32);
    uint64_t v91 = *(void *)(v15 + v74 - 24);
    *(v89 - 4) = v13;
    *(v89 - 3) = v21;
    unsigned __int8 v92 = *(unsigned char *)(v15 + v74 - 16);
    *((unsigned char *)v89 - 16) = v23;
    *(v89 - 1) = v88;
    unint64_t v49 = (unint64_t)v108;
    *int64_t v89 = v108;
    sub_1A67DB4D4(v90, v91, v92);
    unint64_t v13 = v15;
    a2 = v107;
    goto LABEL_57;
  }
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  uint64_t v21 = (uint64_t)sub_1A67DB03C(0, *(void *)(v21 + 16) + 1, 1, (void *)v21);
LABEL_10:
  unint64_t v27 = *(void *)(v21 + 16);
  unint64_t v26 = *(void *)(v21 + 24);
  a2 = v27 + 1;
  if (v27 >= v26 >> 1) {
    uint64_t v21 = (uint64_t)sub_1A67DB03C((void *)(v26 > 1), v27 + 1, 1, (void *)v21);
  }
  *(void *)(v21 + 16) = a2;
  uint64_t v28 = v21 + 40 * v27;
  *(void *)(v28 + 32) = 0;
  *(void *)(v28 + 40) = 0;
  *(unsigned char *)(v28 + 48) = 2;
  *(void *)(v28 + 56) = v15;
  *(void *)(v28 + 64) = v23;
  uint64_t v25 = v27 + 1;
  int64_t v116 = (void *)v21;
LABEL_13:
  unint64_t v107 = v13;
  uint64_t v29 = 0;
  unint64_t v13 = 0;
  unint64_t v30 = 0;
  uint64_t v115 = 40 * v25 + 32;
  unint64_t v113 = 0;
  uint64_t v114 = -v25;
  uint64_t v21 = 255;
  uint64_t v23 = v25;
  while (2)
  {
    uint64_t v32 = (void *)v30;
    char v33 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v33 = sub_1A67DB644(v33);
    }
    uint64_t v34 = v33[2];
    if (v23 <= v34)
    {
      unint64_t v111 = v32;
      uint64_t v35 = v13;
      uint64_t v112 = v23 - 1;
      uint64_t v23 = v34 - 1;
      uint64_t v36 = *(void *)((char *)v33 + v115 - 40);
      unint64_t v37 = *(void *)((char *)v33 + v115 - 32);
      LODWORD(a2) = *((unsigned __int8 *)v33 + v115 - 24);
      unint64_t v13 = *(void *)((char *)v33 + v115 - 16);
      unint64_t v15 = *(void *)((char *)v33 + v115 - 8);
      memmove((char *)v33 + v115 - 40, (char *)v33 + v115, 40 * (v114 + v34));
      void v33[2] = v23;
      int64_t v116 = v33;
      if (v21 != 255)
      {
        if (v113 >> 14 < v13 >> 14)
        {
          __break(1u);
          goto LABEL_124;
        }
        int64_t v110 = v13;
        unint64_t v13 = v35;
        if (v21 >= 2u && !(v29 | v35))
        {
          sub_1A67DB4D4(v29, v35, 2u);
          sub_1A67DB4D4(0, 0, 2u);
          sub_1A67DB68C(v29, v35, v21);
          uint64_t v29 = v36;
          unint64_t v13 = v37;
          uint64_t v23 = v112;
          goto LABEL_46;
        }
        sub_1A67DB658(v29, v35, v21);
        sub_1A67DB4D4(v29, v35, v21);
        sub_1A67DB4D4(0, 0, 2u);
        uint64_t v23 = v112;
        if ((_BYTE)v21)
        {
          uint64_t v38 = v37;
          if (v21 == 1)
          {
            uint64_t v39 = v36;
            unint64_t v40 = v15;
            unint64_t v15 = (unint64_t)v111;
            if (a2 == 1)
            {
              uint64_t v109 = v40;
              sub_1A67DB678(v29, v13, v21);
              sub_1A67DB658(v39, v38, 1u);
              sub_1A67DB678(v29, v13, v21);
              sub_1A67DB658(v39, v38, 1u);
              LODWORD(v108) = sub_1A67D8438(v29, v39);
              sub_1A67DB4D4(v29, v13, 1u);
              sub_1A67DB4D4(v39, v38, 1u);
              sub_1A67DB4D4(v39, v38, 1u);
              unint64_t v40 = v109;
              sub_1A67DB68C(v29, v13, v21);
              if (v108)
              {
                sub_1A67DB68C(v29, v13, v21);
                LOBYTE(a2) = 1;
                goto LABEL_45;
              }
LABEL_43:
              sub_1A67DB658(v39, v38, a2);
              sub_1A67DB4D4(v39, v38, a2);
              sub_1A67DB4D4(0, 0, 2u);
              if (v33[2] < v23) {
                goto LABEL_125;
              }
              unint64_t v121 = v29;
              unint64_t v122 = v13;
              char v123 = v21;
              unint64_t v124 = v15;
              unint64_t v125 = v113;
              sub_1A67DB4F4(v23, v23, (uint64_t)&v121);
              unint64_t v113 = v40;
LABEL_45:
              uint64_t v29 = v39;
              unint64_t v13 = v38;
LABEL_46:
              unint64_t v30 = v110;
LABEL_15:
              uint64_t v21 = a2;
              BOOL v31 = __CFADD__(v114++, 1);
              v115 -= 40;
              if (v31) {
                goto LABEL_122;
              }
              continue;
            }
          }
          else
          {
            uint64_t v39 = v36;
            unint64_t v40 = v15;
            unint64_t v15 = (unint64_t)v111;
            if (v29 | v13)
            {
              if (a2 == 2 && v39 == 1 && !v38)
              {
                LOBYTE(a2) = 2;
                sub_1A67DB4D4(v29, v13, 2u);
                sub_1A67DB4D4(1, 0, 2u);
                sub_1A67DB68C(v29, v13, v21);
                unint64_t v13 = 0;
                uint64_t v29 = 1;
                goto LABEL_46;
              }
            }
            else if (a2 == 2 && !(v38 | v39))
            {
              LOBYTE(a2) = 2;
              sub_1A67DB4D4(v29, v13, 2u);
              sub_1A67DB4D4(0, 0, 2u);
              sub_1A67DB68C(v29, v13, v21);
              uint64_t v29 = 0;
              unint64_t v13 = 0;
              goto LABEL_46;
            }
          }
        }
        else
        {
          uint64_t v38 = v37;
          uint64_t v39 = v36;
          unint64_t v40 = v15;
          unint64_t v15 = (unint64_t)v111;
          if (!a2)
          {
            if (v29 == v39 && v13 == v38)
            {
              sub_1A67DB678(v29, v13, v21);
              sub_1A67DB658(v29, v13, 0);
              sub_1A67DB4D4(v29, v13, 0);
              sub_1A67DB4D4(v29, v13, 0);
            }
            else
            {
              LODWORD(v109) = sub_1A6893120();
              sub_1A67DB678(v29, v13, v21);
              sub_1A67DB658(v39, v38, 0);
              sub_1A67DB4D4(v29, v13, 0);
              sub_1A67DB4D4(v39, v38, 0);
              if ((v109 & 1) == 0) {
                goto LABEL_43;
              }
            }
            sub_1A67DB68C(v29, v13, v21);
            LOBYTE(a2) = 0;
            goto LABEL_45;
          }
        }
        sub_1A67DB678(v29, v13, v21);
        sub_1A67DB658(v39, v38, a2);
        sub_1A67DB4D4(v29, v13, v21);
        sub_1A67DB4D4(v39, v38, a2);
        if (a2 < 2 || v39 | v38) {
          goto LABEL_43;
        }
        sub_1A67DB4D4(v39, v38, 2u);
        sub_1A67DB4D4(0, 0, 2u);
        LOBYTE(a2) = v21;
        goto LABEL_46;
      }
      unint64_t v113 = v15;
      uint64_t v29 = v36;
      uint64_t v23 = v112;
      unint64_t v30 = v13;
      unint64_t v13 = v37;
      goto LABEL_15;
    }
    break;
  }
  __break(1u);
LABEL_122:
  v117[0] = v29;
  v117[1] = v13;
  char v118 = a2;
  unint64_t v119 = v30;
  unint64_t v120 = v113;
  sub_1A67DB4F4(0, 0, (uint64_t)v117);
  swift_bridgeObjectRelease();
  return v116;
}

uint64_t sub_1A67D67C0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return 0;
  }
  sub_1A6893200();
  if (a3)
  {
    sub_1A6893210();
    if (a3 == 1) {
      sub_1A67DBA7C((uint64_t)v29, a1);
    }
  }
  else
  {
    sub_1A6893210();
    sub_1A68920F0();
  }
  uint64_t v8 = sub_1A6893250();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v28 = ~v9;
  BOOL v11 = a3 != 2;
  BOOL v12 = a3 == 2;
  if (a2 | a1) {
    BOOL v12 = 0;
  }
  if (a1 != 1 || a2 != 0) {
    BOOL v11 = 1;
  }
  BOOL v26 = v12;
  BOOL v27 = v11;
  while (1)
  {
    uint64_t v14 = *(void *)(a4 + 48) + 24 * v10;
    uint64_t v16 = *(void *)v14;
    uint64_t v15 = *(void *)(v14 + 8);
    int v17 = *(unsigned __int8 *)(v14 + 16);
    if (!*(unsigned char *)(v14 + 16)) {
      break;
    }
    if (v17 != 1)
    {
      if (v16 | v15)
      {
        if (!v27)
        {
          sub_1A67DB4D4(v16, v15, 2u);
          uint64_t v18 = 1;
          sub_1A67DB4D4(1, 0, 2u);
          return v18;
        }
      }
      else if (v26)
      {
        sub_1A67DB4D4(v16, v15, 2u);
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        unsigned __int8 v25 = 2;
        goto LABEL_37;
      }
LABEL_16:
      sub_1A67DB658(v16, v15, v17);
      sub_1A67DB658(a1, a2, a3);
      sub_1A67DB4D4(v16, v15, v17);
      sub_1A67DB4D4(a1, a2, a3);
      goto LABEL_17;
    }
    if (a3 != 1) {
      goto LABEL_16;
    }
    uint64_t v18 = 1;
    sub_1A67DB658(v16, v15, 1u);
    sub_1A67DB658(v16, v15, 1u);
    sub_1A67DB658(a1, a2, 1u);
    char v19 = sub_1A67D8438(v16, a1);
    sub_1A67DB4D4(v16, v15, 1u);
    sub_1A67DB4D4(a1, a2, 1u);
    sub_1A67DB4D4(v16, v15, 1u);
    if (v19) {
      return v18;
    }
LABEL_17:
    unint64_t v10 = (v10 + 1) & v28;
    if (((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  if (a3) {
    goto LABEL_16;
  }
  if (v16 != a1 || v15 != a2)
  {
    char v21 = sub_1A6893120();
    sub_1A67DB658(v16, v15, 0);
    sub_1A67DB658(a1, a2, 0);
    sub_1A67DB4D4(v16, v15, 0);
    sub_1A67DB4D4(a1, a2, 0);
    if (v21) {
      return 1;
    }
    goto LABEL_17;
  }
  sub_1A67DB658(a1, a2, 0);
  sub_1A67DB658(a1, a2, 0);
  sub_1A67DB4D4(a1, a2, 0);
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  unsigned __int8 v25 = 0;
LABEL_37:
  sub_1A67DB4D4(v23, v24, v25);
  return 1;
}

uint64_t TTSStringTagger.Tag.extendingRangeTo(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  BOOL v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v4, v8);
  unint64_t v13 = *(void *)(v4 + *(int *)(a2 + 36));
  if (a1 >> 14 < v13 >> 14)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a3, v11, v8);
    uint64_t result = type metadata accessor for TTSStringTagger.Tag();
    uint64_t v14 = (unint64_t *)(a3 + *(int *)(result + 36));
    *uint64_t v14 = v13;
    v14[1] = a1;
  }
  return result;
}

uint64_t sub_1A67D6C4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  unint64_t v53 = v7;
  unint64_t v46 = v6;
  v58[0] = v6;
  sub_1A67DB658(v4, v3, v5);
  sub_1A67DB658(v4, v3, v5);
  uint64_t v49 = sub_1A6891F60();
  uint64_t v43 = v3;
  if (v5 != 2 || (v3 | v4) != 0)
  {
    uint64_t v9 = *(void *)(*v1 + 16);
    unsigned __int8 v44 = v5;
    if (!v9)
    {
LABEL_46:
      uint64_t v35 = v43;
      sub_1A67DB4D4(v4, v43, v5);
      goto LABEL_32;
    }
    uint64_t v42 = v4;
    uint64_t v45 = v1;
    unint64_t v47 = v46 >> 14;
    uint64_t v10 = 40 * v9 + 32;
    uint64_t v11 = -v9;
    uint64_t v2 = (void *)*v1;
    while (1)
    {
      if (v9 > v2[2])
      {
        __break(1u);
LABEL_41:
        uint64_t v4 = v42;
        uint64_t v35 = v43;
        sub_1A67DB4D4(v42, v43, v44);
LABEL_30:
        uint64_t v2 = v45;
        goto LABEL_33;
      }
      uint64_t v52 = v9;
      uint64_t v14 = (char *)v2 + v10;
      unint64_t v5 = *(void *)((char *)v2 + v10 - 8);
      unint64_t v48 = v7;
      v7 >>= 14;
      unint64_t v15 = v5 >> 14;
      if (v7 >= v5 >> 14)
      {
        uint64_t v4 = v42;
        uint64_t v35 = v43;
        sub_1A67DB4D4(v42, v43, v44);
        unint64_t v7 = v48;
        unint64_t v5 = v48;
        goto LABEL_30;
      }
      uint64_t v50 = v11;
      uint64_t v51 = v10;
      uint64_t v4 = (uint64_t)v2;
      uint64_t v17 = *((void *)v14 - 5);
      uint64_t v16 = *((void *)v14 - 4);
      unsigned __int8 v18 = *(v14 - 24);
      unint64_t v19 = *((void *)v14 - 2);
      uint64_t v2 = (void *)(v19 >> 14);
      if (v19 >> 14 == v7 && v15 == v47)
      {
        v58[0] = *((void *)v14 - 5);
        v58[1] = v16;
        unsigned __int8 v59 = v18;
        v56[0] = v42;
        v56[1] = v43;
        unsigned __int8 v57 = v44;
        sub_1A67DB658(v17, v16, v18);
        sub_1A67D7ECC((uint64_t)v58, (uint64_t)v56, (uint64_t)&v53);
        sub_1A67DB4D4(v42, v43, v44);
        sub_1A67DB4D4(v17, v16, v18);
        sub_1A67DB4D4(v42, v43, v44);
        uint64_t v4 = v53;
        uint64_t v36 = v54;
        unsigned __int8 v44 = v55;
        uint64_t v2 = v1;
        sub_1A67D72C4(v52 - 1, (uint64_t)&v53);
        uint64_t v35 = v36;
        sub_1A67DB4D4(v53, v54, v55);
        unint64_t v7 = v48;
        goto LABEL_32;
      }
      unint64_t v53 = *((void *)v14 - 2);
      v58[0] = v5;
      sub_1A67DB658(v17, v16, v18);
      if (sub_1A6891F60() >= v49) {
        break;
      }
      if ((unint64_t)v2 < v7)
      {
        unint64_t v7 = v48;
        uint64_t v21 = v52;
        if ((unint64_t)v2 > v48 >> 14) {
          goto LABEL_43;
        }
        uint64_t v2 = (void *)v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v2 = sub_1A67DB644((void *)v4);
        }
        uint64_t v4 = v51;
        if (v52 > v2[2]) {
          goto LABEL_44;
        }
        unint64_t v22 = (char *)v2 + v51;
        uint64_t v23 = *(void *)((char *)v2 + v51 - 40);
        uint64_t v24 = *(void *)((char *)v2 + v51 - 32);
        *((void *)v22 - 5) = v17;
        *((void *)v22 - 4) = v16;
        unsigned __int8 v25 = *((unsigned char *)v2 + v51 - 24);
        *(v22 - 24) = v18;
        *((void *)v22 - 2) = v19;
        *((void *)v22 - 1) = v48;
        sub_1A67DB4D4(v23, v24, v25);
        *uint64_t v1 = v2;
        unint64_t v5 = v48;
LABEL_7:
        uint64_t v12 = v50;
        goto LABEL_8;
      }
      sub_1A67DB4D4(v17, v16, v18);
      BOOL v26 = (void *)v4;
      unint64_t v7 = v48;
      uint64_t v21 = v52;
      uint64_t v12 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v26 = sub_1A67DB644((void *)v4);
      }
      uint64_t v4 = v51;
      uint64_t v27 = v26[2];
      if (v52 > v27) {
        goto LABEL_45;
      }
      uint64_t v28 = (char *)v26 + v51;
      uint64_t v29 = (void *)((char *)v26 + v51 - 40);
      uint64_t v30 = *v29;
      BOOL v31 = v26;
      uint64_t v32 = v27 - 1;
      uint64_t v33 = *(void *)((char *)v26 + v51 - 32);
      unsigned __int8 v34 = *(v28 - 24);
      memmove(v29, v28, 40 * (v50 + v27));
      v31[2] = v32;
      uint64_t v2 = v31;
      sub_1A67DB4D4(v30, v33, v34);
      *uint64_t v1 = v31;
      unint64_t v5 = v48;
LABEL_8:
      uint64_t v10 = v4 - 40;
      uint64_t v9 = v21 - 1;
      BOOL v13 = __CFADD__(v12, 1);
      uint64_t v11 = v12 + 1;
      if (v13) {
        goto LABEL_41;
      }
    }
    sub_1A67DB4D4(v17, v16, v18);
    if (v47 < v15)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    unint64_t v53 = v5;
    v58[0] = v46;
    uint64_t v49 = sub_1A6891F60();
    unint64_t v7 = v5;
    uint64_t v2 = (void *)v4;
    uint64_t v4 = v51;
    uint64_t v21 = v52;
    goto LABEL_7;
  }
  uint64_t v4 = 0;
  uint64_t v35 = 0;
  unsigned __int8 v44 = 2;
LABEL_32:
  unint64_t v5 = v7;
LABEL_33:
  if ((v5 ^ v46) < 0x4000) {
    return sub_1A67DB4D4(v4, v35, v44);
  }
  uint64_t v38 = (void *)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A67DB03C(0, v38[2] + 1, 1, v38);
    uint64_t v38 = (void *)result;
  }
  unint64_t v40 = v38[2];
  unint64_t v39 = v38[3];
  if (v40 >= v39 >> 1)
  {
    uint64_t result = (uint64_t)sub_1A67DB03C((void *)(v39 > 1), v40 + 1, 1, v38);
    uint64_t v38 = (void *)result;
  }
  v38[2] = v40 + 1;
  unint64_t v41 = &v38[5 * v40];
  v41[4] = v4;
  v41[5] = v35;
  *((unsigned char *)v41 + 48) = v44;
  v41[7] = v7;
  void v41[8] = v46;
  *uint64_t v2 = v38;
  return result;
}

uint64_t sub_1A67D7110(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v18 = (uint64_t (*)(void *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v3 = 0;
    uint64_t v4 = (void *)(a3 + 64);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v16 = a3;
    while (v3 < *(void *)(a3 + 16))
    {
      uint64_t v7 = *(v4 - 4);
      uint64_t v6 = *(v4 - 3);
      unsigned __int8 v8 = *((unsigned char *)v4 - 16);
      uint64_t v9 = *(v4 - 1);
      uint64_t v10 = *v4;
      v20[0] = v7;
      v20[1] = v6;
      unsigned __int8 v21 = v8;
      uint64_t v22 = v9;
      uint64_t v23 = v10;
      sub_1A67DB658(v7, v6, v8);
      char v11 = v18(v20);
      if (v19)
      {
        sub_1A67DB4D4(v7, v6, v8);
        swift_release();
        goto LABEL_16;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v24 = v5;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1A67DB6A0(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v24;
        }
        unint64_t v13 = *(void *)(v5 + 16);
        unint64_t v12 = *(void *)(v5 + 24);
        unint64_t v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          uint64_t result = (uint64_t)sub_1A67DB6A0((void *)(v12 > 1), v13 + 1, 1);
          unint64_t v14 = v13 + 1;
          uint64_t v5 = v24;
        }
        *(void *)(v5 + 16) = v14;
        uint64_t v15 = v5 + 40 * v13;
        *(void *)(v15 + 32) = v7;
        *(void *)(v15 + 40) = v6;
        *(unsigned char *)(v15 + 48) = v8;
        *(void *)(v15 + 56) = v9;
        *(void *)(v15 + 64) = v10;
      }
      else
      {
        uint64_t result = sub_1A67DB4D4(v7, v6, v8);
      }
      ++v3;
      v4 += 5;
      a3 = v16;
      if (v17 == v3) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1A67D72C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A67DB644(v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v7 = v5[2];
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = &v5[5 * a1];
    long long v10 = *((_OWORD *)v9 + 2);
    v9 += 4;
    char v11 = *((unsigned char *)v9 + 16);
    *(_OWORD *)a2 = v10;
    *(unsigned char *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v9 + 3);
    uint64_t result = (uint64_t)memmove(v9, v9 + 5, 40 * (v8 - a1));
    void v5[2] = v8;
    *uint64_t v2 = v5;
  }
  return result;
}

uint64_t sub_1A67D7368(uint64_t a1)
{
  swift_retain();
  uint64_t v3 = sub_1A67DC4F0(a1, v1);
  swift_release();
  return v3;
}

uint64_t sub_1A67D73C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v74 = a3;
  uint64_t v73 = v7;
  uint64_t v72 = v8;
  int v71 = v6;
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v9 = v4;
      swift_bridgeObjectRetain_n();
      sub_1A67DB4D4(v9, v5, 1u);
      sub_1A67DB4D4(1, 0, 2u);
      uint64_t v10 = swift_bridgeObjectRetain();
      char v11 = sub_1A67DB3EC(v10);
      sub_1A67DB4D4(v9, v5, 1u);
      uint64_t v70 = v9;
      uint64_t v69 = v5;
      sub_1A67DB4D4(v9, v5, 1u);
      uint64_t v12 = (uint64_t)v11;
    }
    else
    {
      uint64_t v14 = v4 | v5;
      uint64_t v15 = v4;
      sub_1A67DB4D4(v4, v5, 2u);
      sub_1A67DB4D4(1, 0, 2u);
      if (v14)
      {
        sub_1A6741AD0(&qword_1E96C1D58);
        sub_1A68918D0();
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1A689DC40;
        sub_1A68918B0();
        uint64_t v17 = sub_1A6760D00(v16);
        swift_setDeallocating();
        swift_arrayDestroy();
        uint64_t result = swift_deallocClassInstance();
        uint64_t v19 = v74;
        *uint64_t v74 = v15;
        v19[1] = v5;
        *((unsigned char *)v19 + 16) = 2;
        uint64_t v20 = v72;
        v19[3] = v17;
        v19[4] = v20;
        void v19[5] = v73;
        return result;
      }
      uint64_t v69 = v5;
      uint64_t v70 = v15;
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v13 = v4;
    swift_bridgeObjectRetain_n();
    sub_1A67DB4D4(v13, v5, 0);
    sub_1A67DB4D4(1, 0, 2u);
    sub_1A6741AD0(&qword_1EB67A388);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1A689DC40;
    uint64_t v70 = v13;
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v5;
    uint64_t v69 = v5;
  }
  uint64_t v81 = *(void *)(v12 + 16);
  if (v81)
  {
    uint64_t v80 = v12 + 32;
    uint64_t v21 = *(void *)(a2 + 24);
    uint64_t v68 = v12;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = MEMORY[0x1E4FBC870];
    uint64_t v75 = v21;
    do
    {
      uint64_t v24 = (uint64_t *)(v80 + 16 * v22);
      uint64_t v25 = *v24;
      uint64_t v26 = v24[1];
      uint64_t v100 = v23;
      if (*(void *)(v21 + 16))
      {
        uint64_t v82 = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v27 = sub_1A673F7AC(v25, v26);
        if (v28)
        {
          uint64_t v78 = v26;
          uint64_t v79 = v23;
          uint64_t v29 = *(void *)(*(void *)(v21 + 56) + 8 * v27);
          uint64_t v30 = sub_1A6741AD0(&qword_1EB67A238);
          MEMORY[0x1F4188790](v30 - 8);
          uint64_t v32 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v33 = *(void *)(v29 + 16);
          uint64_t v77 = v34;
          uint64_t v76 = v29;
          if (v33)
          {
            uint64_t v35 = sub_1A6891A40();
            uint64_t v36 = *(void *)(v35 - 8);
            uint64_t v37 = v36;
            uint64_t v38 = v29 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
            uint64_t v86 = *(void *)(v36 + 72);
            unsigned __int8 v92 = (void (**)(char *, void, uint64_t, uint64_t))(v36 + 56);
            uint64_t v40 = v36 + 16;
            unint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
            uint64_t v90 = v40;
            uint64_t v91 = v39;
            int64_t v89 = (uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
            uint64_t v87 = v37;
            unint64_t v84 = (void (**)(char *, uint64_t))(v37 + 8);
            uint64_t v85 = v37 + 32;
            swift_bridgeObjectRetain();
            unint64_t v88 = v32;
            uint64_t v83 = v35;
            while (1)
            {
              v91(v32, v38, v35);
              (*v92)(v32, 0, 1, v35);
              uint64_t v41 = (*v89)(v32, 1, v35);
              if (v41 == 1) {
                break;
              }
              uint64_t v96 = v38;
              uint64_t v98 = &v68;
              uint64_t v99 = v33;
              MEMORY[0x1F4188790](v41);
              uint64_t v43 = (char *)&v68 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v32, v35);
              uint64_t v45 = sub_1A68918D0();
              uint64_t v97 = &v68;
              uint64_t v46 = *(void *)(v45 - 8);
              uint64_t v47 = *(void *)(v46 + 64);
              MEMORY[0x1F4188790](v45);
              unint64_t v93 = (v47 + 15) & 0xFFFFFFFFFFFFFFF0;
              unint64_t v48 = (char *)&v68 - v93;
              uint64_t v49 = sub_1A6891A20();
              uint64_t v95 = &v68;
              uint64_t v50 = *(void *)(v49 - 8);
              MEMORY[0x1F4188790](v49);
              uint64_t v52 = (char *)&v68 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
              sub_1A6891A30();
              uint64_t v53 = sub_1A6741AD0(&qword_1EB67A210);
              uint64_t v94 = &v68;
              MEMORY[0x1F4188790](v53 - 8);
              unsigned __int8 v55 = (char *)&v68 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
              sub_1A68919F0();
              (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v49);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v55, 1, v45) == 1)
              {
                uint64_t v35 = v83;
                (*v84)(v43, v83);
                sub_1A6750210((uint64_t)v55, &qword_1EB67A210);
              }
              else
              {
                uint64_t v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v48, v55, v45);
                uint64_t v57 = MEMORY[0x1F4188790](v56);
                unint64_t v58 = (char *)&v68 - v93;
                MEMORY[0x1F4188790](v57);
                unint64_t v60 = (char *)&v68 - v59;
                (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)&v68 - v59, v48, v45);
                sub_1A675E668(v58, v60);
                uint64_t v61 = *(void (**)(char *, uint64_t))(v46 + 8);
                v61(v58, v45);
                v61(v48, v45);
                uint64_t v35 = v83;
                (*v84)(v43, v83);
              }
              uint64_t v38 = v96 + v86;
              uint64_t v33 = v99 - 1;
              uint64_t v32 = v88;
              if (v99 == 1) {
                goto LABEL_23;
              }
            }
          }
          else
          {
            swift_bridgeObjectRetain();
LABEL_23:
            uint64_t v62 = sub_1A6891A40();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v32, 1, 1, v62);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v23 = v100;
          uint64_t v21 = v75;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v22 = v82;
      }
      ++v22;
    }
    while (v22 != v81);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x1E4FBC870];
  }
  int64_t v63 = v74;
  uint64_t v64 = v70;
  uint64_t v65 = v69;
  *uint64_t v74 = v70;
  v63[1] = v65;
  unsigned __int8 v66 = v71;
  *((unsigned char *)v63 + 16) = v71;
  uint64_t v67 = v72;
  v63[3] = v23;
  v63[4] = v67;
  v63[5] = v73;
  return sub_1A67DB658(v64, v65, v66);
}

uint64_t sub_1A67D7CFC(void *a1)
{
  sub_1A673E63C(a1, a1[3]);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = sub_1A673E63C(a1, v3);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)v1 + 176))(v5, v3, v4);
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v1 + 184))();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t TTSStringTagger.__allocating_init(locales:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1A67DC64C(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t TTSStringTagger.init(locales:)(uint64_t a1)
{
  uint64_t v1 = sub_1A67DC64C(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t TTSStringTagger.deinit()
{
  MEMORY[0x1AD0C1C50](*(void *)(v0 + 40), -1, -1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTSStringTagger.__deallocating_deinit()
{
  MEMORY[0x1AD0C1C50](*(void *)(v0 + 40), -1, -1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1A67D7ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 >= 2 && *(_OWORD *)a1 == 0)
  {
    uint64_t v18 = *(void *)a1;
    uint64_t v19 = v4;
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    unsigned int v10 = *(unsigned __int8 *)(a2 + 16);
    sub_1A67DB658(*(void *)a1, v4, v6);
    sub_1A67DB4D4(v5, v4, v6);
    sub_1A67DB4D4(0, 0, 2u);
    if (v10 < 2 || (v9 | v8) != 0)
    {
      sub_1A67DB658(v9, v8, v10);
      sub_1A67DB4D4(v9, v8, v10);
      sub_1A67DB4D4(0, 0, 2u);
      if (v6)
      {
        if (v6 == 1)
        {
          uint64_t v12 = swift_bridgeObjectRetain();
          uint64_t v13 = (uint64_t)sub_1A67DB3EC(v12);
          sub_1A67DB4D4(v5, v4, 1u);
          if (!v10) {
            goto LABEL_17;
          }
LABEL_14:
          if (v10 == 1)
          {
            uint64_t v14 = swift_bridgeObjectRetain();
            uint64_t v15 = (uint64_t)sub_1A67DB3EC(v14);
            sub_1A67DB4D4(v9, v8, 1u);
          }
          else
          {
            sub_1A67DB4D4(v9, v8, 2u);
            uint64_t v15 = MEMORY[0x1E4FBC860];
          }
          goto LABEL_19;
        }
        sub_1A67DB4D4(v5, v4, 2u);
        uint64_t v13 = MEMORY[0x1E4FBC860];
        if (v10) {
          goto LABEL_14;
        }
      }
      else
      {
        sub_1A6741AD0(&qword_1EB67A388);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1A689DC40;
        *(void *)(v13 + 32) = v5;
        *(void *)(v13 + 40) = v4;
        swift_bridgeObjectRetain();
        if (v10) {
          goto LABEL_14;
        }
      }
LABEL_17:
      sub_1A6741AD0(&qword_1EB67A388);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1A689DC40;
      *(void *)(v15 + 32) = v9;
      *(void *)(v15 + 40) = v8;
      swift_bridgeObjectRetain();
LABEL_19:
      sub_1A6760268(v15);
      uint64_t v16 = sub_1A67610CC(v13);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = v16;
      *(void *)(a3 + 8) = 0;
      *(unsigned char *)(a3 + 16) = 1;
      return result;
    }
    uint64_t v18 = v9;
    uint64_t v19 = v8;
  }
  sub_1A67DB4D4(v18, v19, 2u);
  uint64_t result = sub_1A67DB4D4(0, 0, 2u);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 2;
  return result;
}

uint64_t TTSStringTagger.CombinedScriptLanguageTag.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  if (*(unsigned char *)(v1 + 16))
  {
    if (*(unsigned char *)(v1 + 16) == 1)
    {
      sub_1A6893210();
      swift_bridgeObjectRetain();
      sub_1A67DBA7C((uint64_t)a1, v3);
      sub_1A67DB4D4(v3, v4, 1u);
    }
    else
    {
      sub_1A6893210();
    }
  }
  else
  {
    sub_1A6893210();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    sub_1A67DB4D4(v3, v4, 0);
  }
  swift_bridgeObjectRetain();
  sub_1A67DBC14(a1, v5);

  return swift_bridgeObjectRelease();
}

uint64_t static TTSStringTagger.CombinedScriptLanguageTag.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v8 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v8 == 1)
      {
        sub_1A67DB658(*(void *)a2, *(void *)(a2 + 8), 1u);
        sub_1A67DB658(v3, v2, 1u);
        char v10 = sub_1A67D8438(v3, v7);
        sub_1A67DB4D4(v3, v2, 1u);
        uint64_t v11 = v7;
        uint64_t v12 = v6;
        unsigned __int8 v13 = 1;
        goto LABEL_11;
      }
LABEL_27:
      sub_1A67DB658(*(void *)a2, *(void *)(a2 + 8), v8);
      sub_1A67DB658(v3, v2, v4);
      sub_1A67DB4D4(v3, v2, v4);
      sub_1A67DB4D4(v7, v6, v8);
      return 0;
    }
    if (v3 | v2)
    {
      if (v8 != 2 || v7 != 1 || v6 != 0) {
        goto LABEL_27;
      }
      sub_1A67DB4D4(*(void *)a1, v2, 2u);
      uint64_t v18 = 1;
    }
    else
    {
      if (v8 != 2 || (v6 | v7) != 0) {
        goto LABEL_27;
      }
      sub_1A67DB4D4(*(void *)a1, v2, 2u);
      uint64_t v18 = 0;
    }
    uint64_t v21 = 0;
    unsigned __int8 v22 = 2;
  }
  else
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_27;
    }
    uint64_t v14 = *(void *)a1;
    if (v3 != v7 || v2 != v6)
    {
      char v10 = sub_1A6893120();
      sub_1A67DB658(v7, v6, 0);
      sub_1A67DB658(v3, v2, 0);
      sub_1A67DB4D4(v3, v2, 0);
      uint64_t v11 = v7;
      uint64_t v12 = v6;
      unsigned __int8 v13 = 0;
LABEL_11:
      sub_1A67DB4D4(v11, v12, v13);
      if (v10) {
        goto LABEL_33;
      }
      return 0;
    }
    sub_1A67DB658(v14, v2, 0);
    sub_1A67DB658(v3, v2, 0);
    sub_1A67DB4D4(v3, v2, 0);
    uint64_t v18 = v3;
    uint64_t v21 = v2;
    unsigned __int8 v22 = 0;
  }
  sub_1A67DB4D4(v18, v21, v22);
LABEL_33:

  return sub_1A67D86DC(v5, v9);
}

uint64_t sub_1A67D8438(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1A6893200();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    uint64_t v18 = sub_1A6893250();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    unsigned __int8 v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1A6893120() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        unint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1A6893120() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1A67D86DC(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v36 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = sub_1A68918D0();
  uint64_t v35 = v31;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  int64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v45 = v9 + 16;
  uint64_t v46 = v11;
  uint64_t v44 = v2 + 56;
  uint64_t v47 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v33 = v9;
  uint64_t v34 = v3;
  v31[1] = v9 + 32;
  uint64_t v32 = v12;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v39 = (v7 - 1) & v7;
  int64_t v40 = v13;
  for (unint64_t i = __clz(__rbit64(v7)) | (v13 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    uint64_t v19 = *(void *)(v9 + 72);
    unint64_t v20 = *(void *)(v3 + 48) + v19 * i;
    uint64_t v42 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v43 = v19;
    uint64_t v21 = v42(v12, v20, v8);
    uint64_t v41 = v31;
    MEMORY[0x1F4188790](v21);
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)v31 - v23, v12, v8);
    sub_1A67DDCEC(&qword_1E96C1568);
    uint64_t v24 = sub_1A6891F10();
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = v24 & ~v25;
    if (((*(void *)(v44 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
      break;
    }
    uint64_t v38 = (unint64_t)v47 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v27 = v2;
    uint64_t v28 = ~v25;
    while (1)
    {
      MEMORY[0x1F4188790](v24);
      v42((char *)v31 - v23, *(void *)(v27 + 48) + v26 * v43, v8);
      sub_1A67DDCEC(&qword_1E96C1550);
      char v29 = sub_1A6891FC0();
      int64_t v30 = *v47;
      uint64_t v24 = ((uint64_t (*)(char *, uint64_t))*v47)((char *)v31 - v23, v8);
      if (v29) {
        break;
      }
      unint64_t v26 = (v26 + 1) & v28;
      if (((*(void *)(v44 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      {
        v30((char *)v31 - v23, v8);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)((char *)v31 - v23, v8);
    int64_t v13 = v40;
    uint64_t v2 = v27;
    uint64_t v9 = v33;
    uint64_t v3 = v34;
    int64_t v12 = v32;
    unint64_t v7 = v39;
    if (v39) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v15 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
      return result;
    }
    if (v15 >= v37) {
      return 1;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    int64_t v17 = v13 + 1;
    if (!v16)
    {
      int64_t v17 = v13 + 2;
      if (v13 + 2 >= v37) {
        return 1;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v13 + 3;
        if (v13 + 3 >= v37) {
          return 1;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v13 + 4;
          if (v13 + 4 >= v37) {
            return 1;
          }
          unint64_t v16 = *(void *)(v36 + 8 * v17);
          if (!v16)
          {
            uint64_t v18 = v13 + 5;
            if (v13 + 5 >= v37) {
              return 1;
            }
            unint64_t v16 = *(void *)(v36 + 8 * v18);
            if (!v16)
            {
              while (1)
              {
                int64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_37;
                }
                if (v17 >= v37) {
                  return 1;
                }
                unint64_t v16 = *(void *)(v36 + 8 * v17);
                ++v18;
                if (v16) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v17 = v13 + 5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v39 = (v16 - 1) & v16;
    int64_t v40 = v17;
  }
  (*v47)((char *)v31 - v23, v8);
  return 0;
}

uint64_t TTSStringTagger.CombinedScriptLanguageTag.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  sub_1A6893200();
  if (v3)
  {
    sub_1A6893210();
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A67DBA7C((uint64_t)v6, v1);
      sub_1A67DB4D4(v1, v2, 1u);
    }
  }
  else
  {
    sub_1A6893210();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    sub_1A67DB4D4(v1, v2, 0);
  }
  swift_bridgeObjectRetain();
  sub_1A67DBC14(v6, v4);
  swift_bridgeObjectRelease();
  return sub_1A6893250();
}

uint64_t sub_1A67D8C4C()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  sub_1A6893200();
  if (v3)
  {
    sub_1A6893210();
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A67DBA7C((uint64_t)v6, v1);
      sub_1A67DB4D4(v1, v2, 1u);
    }
  }
  else
  {
    sub_1A6893210();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    sub_1A67DB4D4(v1, v2, 0);
  }
  swift_bridgeObjectRetain();
  sub_1A67DBC14(v6, v4);
  swift_bridgeObjectRelease();
  return sub_1A6893250();
}

uint64_t sub_1A67D8D44(long long *a1, long long *a2)
{
  char v2 = *((unsigned char *)a1 + 16);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a2 + 16);
  uint64_t v5 = *((void *)a2 + 3);
  long long v9 = *a1;
  char v10 = v2;
  long long v7 = *a2;
  char v8 = v4;
  if ((_s12TextToSpeech15TTSStringTaggerC9ScriptTagO2eeoiySbAE_AEtFZ_0((uint64_t)&v9, (uint64_t)&v7) & 1) == 0) {
    return 0;
  }

  return sub_1A67D86DC(v3, v5);
}

uint64_t TTSStringTagger.Tag.type.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TTSStringTagger.Tag.range.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

uint64_t TTSStringTagger.Tag.range.setter(uint64_t result, uint64_t a2, uint64_t a3)
{
  char v4 = (void *)(v3 + *(int *)(a3 + 36));
  *char v4 = result;
  v4[1] = a2;
  return result;
}

uint64_t (*TTSStringTagger.Tag.range.modify())()
{
  return nullsub_19;
}

BOOL static TTSStringTagger.Tag.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (sub_1A6891FC0())
  {
    uint64_t v4 = *(int *)(type metadata accessor for TTSStringTagger.Tag() + 36);
    uint64_t v5 = a1 + v4;
    unint64_t v6 = *(void *)(a1 + v4);
    long long v7 = (void *)(a2 + v4);
    if (!((*v7 ^ v6) >> 14) && (*(void *)(v5 + 8) ^ v7[1]) < 0x4000) {
      return 1;
    }
  }
  return result;
}

BOOL sub_1A67D8ED4(uint64_t a1, uint64_t a2)
{
  return static TTSStringTagger.Tag.== infix(_:_:)(a1, a2);
}

uint64_t TTSStringTagger.ScriptTag.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  if (*(unsigned char *)(v1 + 16))
  {
    if (*(unsigned char *)(v1 + 16) == 1)
    {
      sub_1A6893210();
      return sub_1A67DBA7C(a1, v3);
    }
    else
    {
      return sub_1A6893210();
    }
  }
  else
  {
    sub_1A6893210();
    return sub_1A68920F0();
  }
}

uint64_t TTSStringTagger.ScriptTag.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  sub_1A6893200();
  if (v2)
  {
    sub_1A6893210();
    if (v2 == 1) {
      sub_1A67DBA7C((uint64_t)v4, v1);
    }
  }
  else
  {
    sub_1A6893210();
    sub_1A68920F0();
  }
  return sub_1A6893250();
}

uint64_t sub_1A67D9054()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  sub_1A6893200();
  if (v2)
  {
    sub_1A6893210();
    if (v2 == 1) {
      sub_1A67DBA7C((uint64_t)v4, v1);
    }
  }
  else
  {
    sub_1A6893210();
    sub_1A68920F0();
  }
  return sub_1A6893250();
}

uint64_t sub_1A67D9100(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  if (*(unsigned char *)(v1 + 16))
  {
    if (*(unsigned char *)(v1 + 16) == 1)
    {
      sub_1A6893210();
      return sub_1A67DBA7C(a1, v3);
    }
    else
    {
      return sub_1A6893210();
    }
  }
  else
  {
    sub_1A6893210();
    return sub_1A68920F0();
  }
}

uint64_t sub_1A67D91C4()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  sub_1A6893200();
  if (v2)
  {
    sub_1A6893210();
    if (v2 == 1) {
      sub_1A67DBA7C((uint64_t)v4, v1);
    }
  }
  else
  {
    sub_1A6893210();
    sub_1A68920F0();
  }
  return sub_1A6893250();
}

uint64_t sub_1A67D926C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v9 = *v4;
  sub_1A6893200();
  uint64_t v35 = v4;
  if (a4)
  {
    sub_1A6893210();
    swift_bridgeObjectRetain();
    if (a4 == 1) {
      sub_1A67DBA7C((uint64_t)v39, a2);
    }
  }
  else
  {
    sub_1A6893210();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
  }
  uint64_t v10 = sub_1A6893250();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9 + 56;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39[0] = *v35;
    *uint64_t v35 = 0x8000000000000000;
    sub_1A67DB658(a2, a3, a4);
    sub_1A67D99FC(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v35 = v39[0];
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = a4;
    return result;
  }
  uint64_t v38 = ~v11;
  BOOL v14 = a4 != 2;
  BOOL v15 = a4 == 2;
  if (a3 | a2) {
    BOOL v15 = 0;
  }
  if (a2 != 1 || a3 != 0) {
    BOOL v14 = 1;
  }
  BOOL v36 = v15;
  BOOL v37 = v14;
  while (1)
  {
    uint64_t v17 = v9;
    uint64_t v18 = *(void *)(v9 + 48) + 24 * v12;
    uint64_t v20 = *(void *)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    if (!*(unsigned char *)(v18 + 16)) {
      break;
    }
    if (v21 != 1)
    {
      if (v20 | v19)
      {
        if (!v37)
        {
          sub_1A67DB4D4(v20, v19, 2u);
          uint64_t v25 = 1;
LABEL_34:
          sub_1A67DB4D4(v25, 0, 2u);
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
      }
      else if (v36)
      {
        sub_1A67DB4D4(v20, v19, 2u);
        uint64_t v25 = 0;
        goto LABEL_34;
      }
LABEL_15:
      sub_1A67DB658(a2, a3, a4);
      sub_1A67DB658(v20, v19, v21);
      sub_1A67DB4D4(v20, v19, v21);
      sub_1A67DB4D4(a2, a3, a4);
      goto LABEL_16;
    }
    if (a4 != 1) {
      goto LABEL_15;
    }
    sub_1A67DB658(v20, v19, 1u);
    sub_1A67DB658(a2, a3, 1u);
    sub_1A67DB658(v20, v19, 1u);
    char v22 = sub_1A67D8438(v20, a2);
    sub_1A67DB4D4(v20, v19, 1u);
    sub_1A67DB4D4(a2, a3, 1u);
    sub_1A67DB4D4(v20, v19, 1u);
    if (v22)
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = a2;
      uint64_t v29 = a3;
      unsigned __int8 v30 = 1;
      goto LABEL_37;
    }
LABEL_16:
    unint64_t v12 = (v12 + 1) & v38;
    uint64_t v9 = v17;
    if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_32;
    }
  }
  if (a4) {
    goto LABEL_15;
  }
  if (v20 != a2 || v19 != a3)
  {
    char v24 = sub_1A6893120();
    sub_1A67DB658(a2, a3, 0);
    sub_1A67DB658(v20, v19, 0);
    sub_1A67DB4D4(v20, v19, 0);
    sub_1A67DB4D4(a2, a3, 0);
    if (v24) {
      goto LABEL_36;
    }
    goto LABEL_16;
  }
  sub_1A67DB658(a2, a3, 0);
  sub_1A67DB658(a2, a3, 0);
  sub_1A67DB4D4(a2, a3, 0);
  sub_1A67DB4D4(a2, a3, 0);
LABEL_36:
  swift_bridgeObjectRelease();
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  unsigned __int8 v30 = 0;
LABEL_37:
  sub_1A67DB4D4(v28, v29, v30);
LABEL_38:
  uint64_t v31 = *(void *)(*v35 + 48) + 24 * v12;
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *(void *)(v31 + 8);
  *(void *)a1 = *(void *)v31;
  *(void *)(a1 + 8) = v33;
  unsigned __int8 v34 = *(unsigned char *)(v31 + 16);
  *(unsigned char *)(a1 + 16) = v34;
  sub_1A67DB658(v32, v33, v34);
  return 0;
}

uint64_t sub_1A67D96A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C2AA0);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v31 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v30 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v15 >= v30) {
          goto LABEL_37;
        }
        unint64_t v16 = v31[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v30) {
            goto LABEL_37;
          }
          unint64_t v16 = v31[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v30) {
              goto LABEL_37;
            }
            unint64_t v16 = v31[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v30)
              {
LABEL_37:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v31 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v31[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_43;
                  }
                  if (v10 >= v30) {
                    goto LABEL_37;
                  }
                  unint64_t v16 = v31[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      int v21 = *(unsigned __int8 *)(v18 + 16);
      sub_1A6893200();
      if (v21)
      {
        sub_1A6893210();
        if (v21 == 1) {
          sub_1A67DBA7C((uint64_t)v32, v19);
        }
      }
      else
      {
        sub_1A6893210();
        sub_1A68920F0();
      }
      uint64_t result = sub_1A6893250();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v8 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v19;
      *(void *)(v12 + 8) = v20;
      *(unsigned char *)(v12 + 16) = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A67D99FC(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4, char a5)
{
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*(void *)v5 + 16);
  unint64_t v13 = *(void *)(*(void *)v5 + 24);
  if (v13 > v12 && (a5 & 1) != 0) {
    goto LABEL_39;
  }
  if (a5)
  {
    sub_1A67D96A8();
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t result = (uint64_t)sub_1A67D9DB4();
      goto LABEL_39;
    }
    sub_1A67D9F74();
  }
  uint64_t v14 = *(void *)v5;
  sub_1A6893200();
  if (a3)
  {
    sub_1A6893210();
    if (a3 == 1) {
      sub_1A67DBA7C((uint64_t)v33, v11);
    }
  }
  else
  {
    sub_1A6893210();
    sub_1A68920F0();
  }
  uint64_t v5 = (uint64_t)v33;
  uint64_t result = sub_1A6893250();
  uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
  a4 = result & ~v15;
  if ((*(void *)(v14 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v16 = ~v15;
    BOOL v17 = a3 != 2;
    BOOL v18 = a3 == 2;
    if (a2 | v11) {
      BOOL v18 = 0;
    }
    if (v11 != 1 || a2 != 0) {
      BOOL v17 = 1;
    }
    BOOL v30 = v18;
    BOOL v31 = v17;
    do
    {
      uint64_t v20 = *(void *)(v14 + 48) + 24 * a4;
      uint64_t v6 = *(void *)v20;
      uint64_t v5 = *(void *)(v20 + 8);
      int v7 = *(unsigned __int8 *)(v20 + 16);
      if (*(unsigned char *)(v20 + 16))
      {
        if (v7 != 1)
        {
          if (v6 | v5)
          {
            if (!v31) {
              goto LABEL_42;
            }
          }
          else if (v30)
          {
            a2 = 0;
            uint64_t v11 = 0;
            goto LABEL_44;
          }
LABEL_23:
          sub_1A67DB658(v6, v5, v7);
          sub_1A67DB658(v11, a2, a3);
          sub_1A67DB4D4(v6, v5, v7);
          uint64_t result = sub_1A67DB4D4(v11, a2, a3);
          goto LABEL_24;
        }
        if (a3 != 1) {
          goto LABEL_23;
        }
        sub_1A67DB658(v6, v5, 1u);
        sub_1A67DB658(v6, v5, 1u);
        sub_1A67DB658(v11, a2, 1u);
        LOBYTE(v7) = sub_1A67D8438(v6, v11);
        sub_1A67DB4D4(v6, v5, 1u);
        sub_1A67DB4D4(v11, a2, 1u);
        uint64_t v21 = v6;
        uint64_t v22 = v5;
        unsigned __int8 v23 = 1;
      }
      else
      {
        if (a3) {
          goto LABEL_23;
        }
        if (v6 == v11 && v5 == a2)
        {
          sub_1A67DB658(v11, a2, 0);
          sub_1A67DB658(v11, a2, 0);
          uint64_t v5 = a2;
          uint64_t v6 = v11;
LABEL_44:
          sub_1A67DB4D4(v6, v5, v7);
          sub_1A67DB4D4(v11, a2, v7);
LABEL_45:
          uint64_t result = sub_1A6893140();
          __break(1u);
          return result;
        }
        LOBYTE(v7) = sub_1A6893120();
        sub_1A67DB658(v6, v5, 0);
        sub_1A67DB658(v11, a2, 0);
        sub_1A67DB4D4(v6, v5, 0);
        uint64_t v21 = v11;
        uint64_t v22 = a2;
        unsigned __int8 v23 = 0;
      }
      uint64_t result = sub_1A67DB4D4(v21, v22, v23);
      if (v7) {
        goto LABEL_45;
      }
LABEL_24:
      a4 = (a4 + 1) & v16;
    }
    while (((*(void *)(v14 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_39:
  uint64_t v25 = *v32;
  *(void *)(*v32 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v26 = *(void *)(v25 + 48) + 24 * a4;
  *(void *)uint64_t v26 = v11;
  *(void *)(v26 + 8) = a2;
  *(unsigned char *)(v26 + 16) = a3;
  uint64_t v27 = *(void *)(v25 + 16);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
    __break(1u);
LABEL_42:
    a2 = 0;
    uint64_t v11 = 1;
    goto LABEL_44;
  }
  *(void *)(v25 + 16) = v29;
  return result;
}

void *sub_1A67D9DB4()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C2AA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892BF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    unsigned __int8 v21 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v20 = *(void *)v17;
    *(void *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 16) = v21;
    uint64_t result = (void *)sub_1A67DB658(v18, v19, v21);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A67D9F74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C2AA0);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_39:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v29 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v15 >= v30) {
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v30) {
        goto LABEL_37;
      }
      unint64_t v16 = *(void *)(v29 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v30) {
          goto LABEL_37;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    sub_1A6893200();
    if (v21)
    {
      sub_1A6893210();
      if (v21 == 1)
      {
        swift_bridgeObjectRetain();
        sub_1A67DBA7C((uint64_t)v31, v19);
      }
    }
    else
    {
      sub_1A6893210();
      swift_bridgeObjectRetain();
      sub_1A68920F0();
    }
    uint64_t result = sub_1A6893250();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v8 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(unsigned char *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v30)
  {
LABEL_37:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_39;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1A67DA2A0(int a1)
{
  sub_1A6893200();
  sub_1A6893230();
  uint64_t v2 = sub_1A6893250();

  return sub_1A6742130(a1, v2);
}

uint64_t sub_1A67DA30C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C2A60);
  char v34 = a2;
  uint64_t result = sub_1A6892ED0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      int v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1A6893200();
      sub_1A6893230();
      uint64_t result = sub_1A6893250();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      int64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A67DA5F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C2A70);
  char v36 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A6893200();
    sub_1A68920F0();
    uint64_t result = sub_1A6893250();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A67DA90C(uint64_t a1, uint64_t a2, int a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A67DA2A0(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A67DABBC();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    int64_t v21 = (void *)(v18[7] + 16 * v12);
    *int64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      uint64_t v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A67DA30C(result, a4 & 1);
  uint64_t result = sub_1A67DA2A0(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for UScriptCode();
  uint64_t result = sub_1A6893150();
  __break(1u);
  return result;
}

uint64_t sub_1A67DAA4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A673F7AC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A67DAD6C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A67DA5F4(v15, a4 & 1);
  unint64_t v21 = sub_1A673F7AC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A6893150();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v18[2] = v26;

  return swift_bridgeObjectRetain();
}

void *sub_1A67DABBC()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C2A60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    char v22 = (void *)(*(void *)(v4 + 56) + v18);
    *char v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A67DAD6C()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C2A70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1A67DAF24(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2AA8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1A67DB03C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2A88);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C2A90);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1A67DB174(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1EB67A378);
  uint64_t v10 = *(void *)(sub_1A6891A40() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_1A6891A40() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

void *sub_1A67DB348(const void *a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if (a2 <= 0)
  {
    size_t v4 = 4 * a2;
    char v5 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C2AB0);
    size_t v4 = 4 * a2;
    char v5 = (void *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 29;
    }
    void v5[2] = a2;
    v5[3] = 2 * (v7 >> 2);
  }
  memcpy(v5 + 4, a1, v4);
  return v5;
}

void *sub_1A67DB3EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A6741AD0(&qword_1EB67A388);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A67DBF70((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A674CF48();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1A67DB4D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A67DB4F4(unint64_t result, int64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = result;
  unint64_t v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1A67DB03C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = (uint64_t)&v5[5 * v7 + 4];
  sub_1A6741AD0(&qword_1E96C2A90);
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_19;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_25;
  }
  uint64_t result = v14 + 40;
  uint64_t v18 = &v5[5 * a2 + 4];
  if ((void *)(v14 + 40) != v18 || result >= (unint64_t)&v18[5 * v17]) {
    uint64_t result = (unint64_t)memmove((void *)result, v18, 40 * v17);
  }
  uint64_t v19 = v5[2];
  BOOL v16 = __OFADD__(v19, v9);
  uint64_t v20 = v19 + v9;
  if (!v16)
  {
    void v5[2] = v20;
LABEL_19:
    long long v21 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)a3;
    *(_OWORD *)(v14 + 16) = v21;
    *(void *)(v14 + 32) = *(void *)(a3 + 32);
    *(void *)uint64_t v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1A67DB644(void *a1)
{
  return sub_1A67DB03C(0, a1[2], 0, a1);
}

uint64_t sub_1A67DB658(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A67DB678(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1A67DB658(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1A67DB68C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1A67DB4D4(a1, a2, a3);
  }
  return a1;
}

void *sub_1A67DB6A0(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A67DB6E0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A67DB6C0(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A67DB818(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A67DB6E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2A88);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C2A90);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1A67DB818(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2A78);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[6 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C2A80);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_1A67DB954(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_1A67DB174(result, v11, 1, v3);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = sub_1A6891A40();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1A67DBA7C(uint64_t a1, uint64_t a2)
{
  sub_1A6893250();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1A6893210();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1A6893200();
    swift_bridgeObjectRetain();
    sub_1A68920F0();
    uint64_t v11 = sub_1A6893250();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1A67DBC14(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 8);
  long long v4 = a1[1];
  long long v36 = *a1;
  long long v37 = v4;
  long long v5 = a1[2];
  long long v6 = a1[3];
  v32[2] = a1;
  long long v38 = v5;
  long long v39 = v6;
  uint64_t v40 = v3;
  uint64_t v7 = sub_1A6893250();
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v33 = a2 + 56;
  uint64_t v34 = v7;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  uint64_t v12 = sub_1A6741AD0(&qword_1EB67A210);
  v32[1] = v32;
  MEMORY[0x1F4188790](v12 - 8);
  int64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int64_t v18 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = *(void *)(v35 + 48);
    uint64_t v25 = sub_1A68918D0();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v14, v24 + *(void *)(v26 + 72) * i, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25);
    if (v27 == 1) {
      goto LABEL_19;
    }
    MEMORY[0x1F4188790](v27);
    uint64_t v29 = (char *)v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v14, v25);
    sub_1A67DDCEC(&qword_1E96C1568);
    uint64_t v30 = sub_1A6891F10();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    v17 ^= v30;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1)) {
      goto LABEL_21;
    }
    if (v18 >= v15) {
      goto LABEL_18;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_14:
    unint64_t v11 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v15)
  {
LABEL_18:
    uint64_t v31 = sub_1A68918D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 1, 1, v31);
LABEL_19:
    swift_release();
    return sub_1A6893210();
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22)
  {
    ++v18;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v15) {
      goto LABEL_18;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1A67DBF70(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *long long v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A67DC170(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A67DDD30();
  uint64_t result = sub_1A6892700();
  uint64_t v10 = result;
  if (v2)
  {
    long long v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      uint64_t v5 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      unsigned __int8 v7 = *v4;
      v4 += 24;
      sub_1A67DB658(v5, v6, v7);
      sub_1A67D926C((uint64_t)v8, v5, v6, v7);
      sub_1A67DB4D4(v8[0], v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1A67DC218(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  unint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  sub_1A67DB658(*(void *)a1, v5, v6);
  char v8 = sub_1A67D67C0(v4, v5, v6, v2);
  uint64_t result = sub_1A67DB4D4(v4, v5, v6);
  if (v8) {
    return v8 & 1;
  }
  if (v3 >> 14 >= v7 >> 14)
  {
    v10[0] = v4;
    v10[1] = v5;
    unsigned __int8 v11 = v6;
    unint64_t v12 = v7;
    unint64_t v13 = v3;
    sub_1A67D6C4C((uint64_t)v10);
    return v8 & 1;
  }
  __break(1u);
  return result;
}

uint64_t _s12TextToSpeech15TTSStringTaggerC9ScriptTagO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16))
    {
      if (v3 == v6 && v2 == v5) {
        char v11 = 1;
      }
      else {
        char v11 = sub_1A6893120();
      }
      sub_1A67DB658(v6, v5, 0);
      sub_1A67DB658(v3, v2, 0);
      sub_1A67DB4D4(v3, v2, 0);
      sub_1A67DB4D4(v6, v5, 0);
      return v11 & 1;
    }
    goto LABEL_25;
  }
  if (v4 == 1)
  {
    if (v7 == 1)
    {
      sub_1A67DB658(*(void *)a2, *(void *)(a2 + 8), 1u);
      sub_1A67DB658(v3, v2, 1u);
      char v8 = sub_1A67D8438(v3, v6);
      sub_1A67DB4D4(v3, v2, 1u);
      sub_1A67DB4D4(v6, v5, 1u);
      return v8 & 1;
    }
    goto LABEL_25;
  }
  if (!(v3 | v2))
  {
    if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_1A67DB4D4(*(void *)a1, v2, 2u);
      sub_1A67DB4D4(0, 0, 2u);
      char v11 = 1;
      return v11 & 1;
    }
    goto LABEL_25;
  }
  if (v7 != 2 || v6 != 1 || v5 != 0)
  {
LABEL_25:
    sub_1A67DB658(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_1A67DB658(v3, v2, v4);
    sub_1A67DB4D4(v3, v2, v4);
    sub_1A67DB4D4(v6, v5, v7);
    char v11 = 0;
    return v11 & 1;
  }
  sub_1A67DB4D4(*(void *)a1, v2, 2u);
  char v11 = 1;
  sub_1A67DB4D4(1, 0, 2u);
  return v11 & 1;
}

uint64_t type metadata accessor for TTSStringTagger.Tag()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A67DC4F0(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1A67DB6C0(0, v3, 0);
    uint64_t v4 = v28;
    for (unint64_t i = (_OWORD *)(a1 + 56); ; unint64_t i = (_OWORD *)((char *)i + 40))
    {
      uint64_t v8 = *((void *)i - 3);
      uint64_t v9 = *((void *)i - 2);
      unsigned __int8 v10 = *((unsigned char *)i - 8);
      v21[0] = v8;
      v21[1] = v9;
      unsigned __int8 v22 = v10;
      long long v23 = *i;
      sub_1A67DB658(v8, v9, v10);
      sub_1A67D73C4((uint64_t)v21, a2, (uint64_t *)&v24);
      if (v2) {
        break;
      }
      sub_1A67DB4D4(v8, v9, v10);
      long long v11 = v24;
      char v12 = v25;
      uint64_t v13 = v26;
      long long v14 = v27;
      uint64_t v28 = v4;
      unint64_t v16 = *(void *)(v4 + 16);
      unint64_t v15 = *(void *)(v4 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v19 = v27;
        long long v20 = v24;
        sub_1A67DB6C0((void *)(v15 > 1), v16 + 1, 1);
        long long v14 = v19;
        long long v11 = v20;
        uint64_t v4 = v28;
      }
      *(void *)(v4 + 16) = v16 + 1;
      uint64_t v17 = v4 + 48 * v16;
      *(_OWORD *)(v17 + 32) = v11;
      *(unsigned char *)(v17 + 48) = v12;
      *(void *)(v17 + 56) = v13;
      *(_OWORD *)(v17 + 64) = v14;
      if (!--v3) {
        return v4;
      }
    }
    sub_1A67DB4D4(v8, v9, v10);
    swift_release();
  }
  return v4;
}

uint64_t sub_1A67DC64C(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = 0;
  uint64_t v3 = MEMORY[0x1E4FBC868];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC868];
  uint64_t v74 = v1;
  *(void *)(v1 + 40) = swift_slowAlloc();
  uint64_t v4 = sub_1A6741AD0(&qword_1EB67A238);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = sub_1A6891A40();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = v9;
    uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v12 = (v11 + 32) & ~v11;
    uint64_t v13 = (char *)(a1 + v12);
    uint64_t v14 = *(void *)(v9 + 72);
    uint64_t v16 = v9 + 16;
    unint64_t v15 = *(void (**)(size_t, char *, uint64_t))(v9 + 16);
    uint64_t v87 = v16;
    unint64_t v88 = v15;
    unint64_t v84 = (uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v85 = (void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v81 = v10 + 32;
    uint64_t v82 = v14;
    uint64_t v77 = v14 + v12;
    uint64_t v78 = v12;
    uint64_t v76 = v11 | 7;
    uint64_t v83 = v10;
    uint64_t v80 = (void (**)(char *, uint64_t))(v10 + 8);
    long long v75 = xmmword_1A689DC40;
    uint64_t v79 = v6;
    uint64_t v86 = v8;
    v15((size_t)v6, (char *)(a1 + v12), v8);
    while (1)
    {
      (*v85)(v6, 0, 1, v8);
      uint64_t v19 = (*v84)(v6, 1, v8);
      if (v19 == 1) {
        goto LABEL_45;
      }
      uint64_t v90 = v13;
      uint64_t v96 = v3;
      unint64_t v93 = &v73;
      MEMORY[0x1F4188790](v19);
      uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v6, v8);
      uint64_t v23 = sub_1A6741AD0(&qword_1EB67A210);
      unsigned __int8 v92 = &v73;
      MEMORY[0x1F4188790](v23 - 8);
      char v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v26 = sub_1A6891A20();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(void *)(v27 + 64);
      MEMORY[0x1F4188790](v26);
      uint64_t v95 = v21;
      sub_1A6891A30();
      sub_1A68919F0();
      uint64_t v29 = v26;
      int64_t v89 = *(void (**)(char *, uint64_t))(v27 + 8);
      v89((char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v26);
      uint64_t v30 = sub_1A68918D0();
      uint64_t v31 = *(void *)(v30 - 8);
      int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 1, v30);
      uint64_t v91 = v7;
      uint64_t v94 = v27 + 8;
      if (v32 == 1)
      {
        sub_1A6750210((uint64_t)v25, &qword_1EB67A210);
      }
      else
      {
        uint64_t v35 = sub_1A6891890();
        uint64_t v37 = v36;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v30);
        if (v35 == 7236963 && v37 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v40 = v96;
          uint64_t v41 = v86;
          uint64_t v34 = v29;
          if (*(void *)(v96 + 16))
          {
            unint64_t v42 = sub_1A673F7AC(1936613704, 0xE400000000000000);
            uint64_t v43 = MEMORY[0x1E4FBC860];
            if (v44)
            {
              uint64_t v43 = *(void *)(*(void *)(v40 + 56) + 8 * v42);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            uint64_t v43 = MEMORY[0x1E4FBC860];
          }
          sub_1A6741AD0(&qword_1EB67A378);
          size_t v45 = swift_allocObject();
          *(_OWORD *)(v45 + 16) = v75;
          uint64_t v33 = v95;
          v88(v45 + v78, v95, v41);
          uint64_t v97 = v43;
          sub_1A67DB954(v45);
          uint64_t v46 = v97;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v97 = v40;
          sub_1A67DAA4C(v46, 1936613704, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
          uint64_t v96 = v97;
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        char v39 = sub_1A6893120();
        swift_bridgeObjectRelease();
        if (v39) {
          goto LABEL_17;
        }
      }
      uint64_t v33 = v95;
      uint64_t v34 = v29;
LABEL_22:
      unint64_t v48 = v89;
      uint64_t v49 = sub_1A6741AD0(&qword_1E96C2A68);
      uint64_t v50 = MEMORY[0x1F4188790](v49 - 8);
      uint64_t v52 = (char *)&v73 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v50);
      sub_1A6891A30();
      sub_1A6891A10();
      v48((char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v34);
      uint64_t v53 = sub_1A6891980();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
      {
        sub_1A6750210((uint64_t)v52, &qword_1E96C2A68);
        uint64_t v6 = v79;
        uint64_t v17 = v90;
        uint64_t v18 = v91;
        uint64_t v3 = v96;
        uint64_t v8 = v86;
        goto LABEL_4;
      }
      uint64_t v56 = sub_1A6891890();
      uint64_t v57 = v55;
      if (v56 == 1936613704 && v55 == 0xE400000000000000) {
        goto LABEL_25;
      }
      if (sub_1A6893120()) {
        goto LABEL_27;
      }
      if (v56 == 1953390920 && v57 == 0xE400000000000000)
      {
LABEL_25:
        uint64_t v58 = 0xE400000000000000;
        swift_bridgeObjectRelease();
LABEL_28:
        uint64_t v59 = 1768841544;
        goto LABEL_29;
      }
      if (sub_1A6893120())
      {
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v58 = 0xE400000000000000;
        goto LABEL_28;
      }
      uint64_t v59 = 1735287112;
      if (v56 != 1869439306 || v57 != 0xE400000000000000)
      {
        uint64_t v58 = 0xE400000000000000;
        char v69 = sub_1A6893120();
        swift_bridgeObjectRelease();
        uint64_t v8 = v86;
        if ((v69 & 1) == 0)
        {
          uint64_t v59 = sub_1A6891890();
          uint64_t v58 = v70;
        }
        goto LABEL_30;
      }
      uint64_t v58 = 0xE400000000000000;
      swift_bridgeObjectRelease();
LABEL_29:
      uint64_t v8 = v86;
LABEL_30:
      (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
      uint64_t v60 = v96;
      if (*(void *)(v96 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v61 = v59;
        unint64_t v62 = sub_1A673F7AC(v59, v58);
        uint64_t v63 = MEMORY[0x1E4FBC860];
        if (v64)
        {
          uint64_t v63 = *(void *)(*(void *)(v60 + 56) + 8 * v62);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v61 = v59;
        uint64_t v63 = MEMORY[0x1E4FBC860];
      }
      uint64_t v6 = v79;
      uint64_t v17 = v90;
      uint64_t v18 = v91;
      sub_1A6741AD0(&qword_1EB67A378);
      size_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v75;
      uint64_t v33 = v95;
      v88(v65 + v78, v95, v8);
      uint64_t v97 = v63;
      sub_1A67DB954(v65);
      uint64_t v67 = v96;
      uint64_t v66 = v97;
      char v68 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v97 = v67;
      sub_1A67DAA4C(v66, v61, v58, v68);
      uint64_t v3 = v97;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      (*v80)(v33, v8);
      uint64_t v13 = &v17[v82];
      uint64_t v7 = v18 - 1;
      if (!v7) {
        break;
      }
      v88((size_t)v6, v13, v8);
    }
  }
  uint64_t v71 = sub_1A6891A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v6, 1, 1, v71);
LABEL_45:
  uint64_t result = v74;
  *(void *)(v74 + 24) = v3;
  return result;
}

unint64_t sub_1A67DCFCC()
{
  unint64_t result = qword_1E96C2A40;
  if (!qword_1E96C2A40)
  {
    type metadata accessor for UScriptCode();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2A40);
  }
  return result;
}

void type metadata accessor for UScriptCode()
{
  if (!qword_1E96C2A58)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E96C2A58);
    }
  }
}

unint64_t sub_1A67DD080()
{
  unint64_t result = qword_1E96C2A48;
  if (!qword_1E96C2A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2A48);
  }
  return result;
}

unint64_t sub_1A67DD0D8()
{
  unint64_t result = qword_1E96C2A50;
  if (!qword_1E96C2A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2A50);
  }
  return result;
}

uint64_t type metadata accessor for TTSStringTagger()
{
  return self;
}

uint64_t method lookup function for TTSStringTagger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSStringTagger);
}

uint64_t dispatch thunk of TTSStringTagger.allowUnsupportedScripts.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of TTSStringTagger.allowUnsupportedScripts.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of TTSStringTagger.allowUnsupportedScripts.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TTSStringTagger.scriptTags<A>(forString:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of TTSStringTagger.possibleLanguageTags<A>(forScriptTags:string:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of TTSStringTagger.possibleLanguageTags(forString:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of TTSStringTagger.__allocating_init(locales:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t destroy for TTSStringTagger.CombinedScriptLanguageTag(uint64_t a1)
{
  sub_1A67DB4D4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTSStringTagger.CombinedScriptLanguageTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1A67DB658(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTSStringTagger.CombinedScriptLanguageTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1A67DB658(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1A67DB4D4(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTSStringTagger.CombinedScriptLanguageTag(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1A67DB4D4(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSStringTagger.CombinedScriptLanguageTag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSStringTagger.CombinedScriptLanguageTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSStringTagger.CombinedScriptLanguageTag()
{
  return &type metadata for TTSStringTagger.CombinedScriptLanguageTag;
}

uint64_t sub_1A67DD468()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A67DD500(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *char v4 = *a2;
    char v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1A67DD5F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1A67DD624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A67DD6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1A67DD724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A67DD7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1A67DD824(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A67DD938);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_1A67DD94C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1A67DDAF8);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t destroy for TTSStringTagger.ScriptTag(uint64_t a1)
{
  return sub_1A67DB4D4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12TextToSpeech15TTSStringTaggerC9ScriptTagOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A67DB658(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTSStringTagger.ScriptTag(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A67DB658(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A67DB4D4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TTSStringTagger.ScriptTag(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A67DB4D4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSStringTagger.ScriptTag(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSStringTagger.ScriptTag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A67DDCAC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1A67DDCC4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTSStringTagger.ScriptTag()
{
  return &type metadata for TTSStringTagger.ScriptTag;
}

uint64_t sub_1A67DDCEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A68918D0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A67DDD30()
{
  unint64_t result = qword_1E96C2A98;
  if (!qword_1E96C2A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2A98);
  }
  return result;
}

double sub_1A67DDD84@<D0>(uint64_t a1@<X8>)
{
  return TTSMarkupSpeech.content.getter(a1);
}

double TTSMarkupSpeech.content.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t TTSMarkupSpeech.startingTag.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 8))(v5);
  SSMLTag.rawValue.getter();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  TTSMarkupSpeech.attributeText.getter(a1, a2);
  sub_1A6892150();
  swift_bridgeObjectRelease();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 24))(v5, a1, a2);
  sub_1A6761FF4((uint64_t)v5);
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  return 60;
}

uint64_t TTSMarkupSpeech.endingTag.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 24))(v7);
  uint64_t v4 = v7[3];
  sub_1A6761FF4((uint64_t)v7);
  if (!v4) {
    return 0;
  }
  v7[0] = 12092;
  v7[1] = 0xE200000000000000;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v6, a1, a2);
  SSMLTag.rawValue.getter();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  return v7[0];
}

uint64_t TTSMarkupSpeech.ssml.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 32))();
  TTSMarkupSpeech.contentSSML.getter(a1, a2);
  sub_1A6892150();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  sub_1A6892150();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A67DE038()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t TTSMarkupSpeech.eventTaps.getter()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1A67DE050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  nullsub_19(a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t TTSMarkupSpeech.eventTaps.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  nullsub_19(a2, a3);

  return swift_bridgeObjectRelease();
}

void (*sub_1A67DE0D0(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTSMarkupSpeech.eventTaps.modify(v2);
  return sub_1A67DE120;
}

void sub_1A67DE120(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*TTSMarkupSpeech.eventTaps.modify(void *a1))()
{
  *a1 = MEMORY[0x1E4FBC860];
  return destroy for SpeechError;
}

uint64_t destroy for SpeechError()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67DE19C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A67DF338(a1, a2, a5, a6);
}

uint64_t TTSMarkupSpeech.handle(event:breadcrumb:ssml:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A67DF338(a1, a2, a5, a6);
}

void sub_1A67DE1B4(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1A67DE1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return nullsub_19(*(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t TTSMarkupSpeech.tap(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a5, v5);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  int v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 72);
  swift_retain();
  int v12 = (uint64_t (*)(unsigned char *, void))v11(v21, a3, a4);
  int v14 = v13;
  unsigned int v15 = *v13;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *int v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unsigned int v15 = sub_1A67DF128(0, v15[2] + 1, 1, v15);
    *int v14 = v15;
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    unsigned int v15 = sub_1A67DF128((void *)(v17 > 1), v18 + 1, 1, v15);
    *int v14 = v15;
  }
  v15[2] = v18 + 1;
  uint64_t v19 = &v15[2 * v18];
  v19[4] = sub_1A67DF430;
  void v19[5] = v10;
  return v12(v21, 0);
}

void TTSMarkupSpeech.init(ssml:)(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v6 = sub_1A6892A00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned int v9 = (char *)&v19 - v8;
  type metadata accessor for SSMLParser();
  uint64_t v10 = static SSMLParser.parseRootElement(ssml:)();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    uint64_t v11 = v7;
    uint64_t v12 = v19;
    sub_1A677BA04((uint64_t)&v20);
    sub_1A6741AD0(&qword_1E96C1CE0);
    char v13 = swift_dynamicCast();
    int v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
    if (v13)
    {
      uint64_t v15 = *(void *)(a1 - 8);
      v14(v9, 0, 1, a1);

      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v9, a1);
    }
    else
    {
      v14(v9, 1, 1, a1);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v6);
      unint64_t v20 = 0;
      unint64_t v21 = 0xE000000000000000;
      sub_1A6892C40();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000026;
      unint64_t v21 = 0x80000001A68CEA90;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v22, a1, v12);
      SSMLTag.rawValue.getter();
      sub_1A6892150();
      swift_bridgeObjectRelease();
      unint64_t v16 = v20;
      unint64_t v17 = v21;
      sub_1A6746E24();
      swift_allocError();
      unint64_t *v18 = v16;
      v18[1] = v17;
      swift_willThrow();
    }
  }
}

uint64_t Array<A>.init(_:)(void *a1)
{
  return 0;
}

void static Array<A>.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

unint64_t Array<A>.attributes.getter()
{
  return sub_1A6742BA0(MEMORY[0x1E4FBC860]);
}

uint64_t Array<A>.ssml.getter(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1A674CBF0(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v18;
    do
    {
      sub_1A673E788(v4, (uint64_t)v15);
      uint64_t v5 = v16;
      uint64_t v6 = v17;
      sub_1A673E63C(v15, v16);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(v5, v6);
      uint64_t v9 = v8;
      sub_1A6741A24((uint64_t)v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A674CBF0(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v18;
      }
      unint64_t v11 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1A674CBF0((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v2 = v18;
      }
      *(void *)(v2 + 16) = v11 + 1;
      uint64_t v12 = v2 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  v15[0] = v2;
  sub_1A6741AD0(&qword_1E96C15A0);
  sub_1A67DF458();
  uint64_t v13 = sub_1A6891F70();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A67DE7A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1A674CBF0(0, v1, 0);
  uint64_t v2 = v27;
  uint64_t result = sub_1A67B4C70(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v24 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v25 = *v12;
    uint64_t v26 = v12[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1A6892150();
    sub_1A6892150();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v27 + 16);
    unint64_t v14 = *(void *)(v27 + 24);
    if (v13 >= v14 >> 1) {
      uint64_t result = (uint64_t)sub_1A674CBF0((char *)(v14 > 1), v13 + 1, 1);
    }
    *(void *)(v27 + 16) = v13 + 1;
    uint64_t v15 = v27 + 16 * v13;
    *(void *)(v15 + 32) = v25;
    *(void *)(v15 + 40) = v26;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v24 + 1;
    uint64_t v6 = v9;
    if (v24 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t Array<A>.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a2, a3, a4);
}

uint64_t Array<A>.init(ssml:)()
{
  type metadata accessor for SSMLParser();
  int64_t v1 = static SSMLParser.parse(ssml:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    uint64_t v3 = sub_1A67DEAF0((unint64_t)v1);
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  return result;
}

void *sub_1A67DEAF0(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1A6892EB0())
  {
    uint64_t v15 = v2;
    int v5 = (void *)MEMORY[0x1E4FBC860];
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD0BFD30](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v2 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      sub_1A677BA04((uint64_t)&v12);

      if (v13)
      {
        sub_1A673E770(&v12, (uint64_t)v14);
        sub_1A673E770(v14, (uint64_t)&v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v5 = sub_1A676207C(0, v5[2] + 1, 1, v5);
        }
        unint64_t v10 = v5[2];
        unint64_t v9 = v5[3];
        if (v10 >= v9 >> 1) {
          int v5 = sub_1A676207C((void *)(v9 > 1), v10 + 1, 1, v5);
        }
        void v5[2] = v10 + 1;
        sub_1A673E770(&v12, (uint64_t)&v5[5 * v10 + 4]);
      }
      else
      {
        sub_1A6761FF4((uint64_t)&v12);
      }
      if (v2 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

void sub_1A67DECA8(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

double sub_1A67DECB4@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1A67DECC4()
{
  return 60;
}

uint64_t sub_1A67DED54()
{
  return Array<A>.ssml.getter(*v0);
}

uint64_t (*sub_1A67DED60(void *a1))()
{
  *a1 = MEMORY[0x1E4FBC860];
  return j__s12TextToSpeech11SpeechErrorOwxx;
}

uint64_t sub_1A67DED8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Array<A>.accept<A>(_:)(a1, *v3, a2, a3);
}

void sub_1A67DED9C(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
}

uint64_t TTSMarkupSpeech.ssmlTag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t TTSMarkupSpeech.attributeText.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  sub_1A67DE7A8(v2);
  swift_bridgeObjectRelease();
  sub_1A6741AD0(&qword_1E96C15A0);
  sub_1A67DF458();
  uint64_t v3 = sub_1A6891F70();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    sub_1A6892150();
    swift_bridgeObjectRelease();
    return 32;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

BOOL TTSMarkupSpeech.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 24))(v4);
  BOOL v2 = v4[3] == 0;
  sub_1A6761FF4((uint64_t)v4);
  return v2;
}

uint64_t TTSMarkupSpeech.contentSSML.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 24))(v5);
  uint64_t v2 = v6;
  if (v6)
  {
    uint64_t v3 = v7;
    sub_1A673E63C(v5, v6);
    uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
    sub_1A6741A24((uint64_t)v5);
  }
  else
  {
    sub_1A6761FF4((uint64_t)v5);
  }
  return v2;
}

uint64_t TTSMarkupSpeech.asSSML.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

Swift::String __swiftcall TTSMarkupSpeech.asPlainText()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  type metadata accessor for StringStream();
  uint64_t v5 = StringStream.__allocating_init()();
  sub_1A6741AD0(&qword_1E96C2AD0);
  v18[0] = v5;
  swift_retain();
  uint64_t v6 = FormattedStream.__allocating_init(_:)((uint64_t)v18);
  uint64_t v8 = nullsub_19(v6, v7);
  v18[4] = v3;
  v18[5] = v8;
  v18[3] = v4;
  unint64_t v9 = sub_1A675026C(v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v9, v2, v4);
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C2AD8);
  TTSMarkupVisitor.visit(_:)(v18, v10, (uint64_t)&off_1EFB79F00);
  uint64_t v11 = sub_1A6741A24((uint64_t)v18);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 88))(v11);
  unint64_t v14 = v13;
  swift_release();
  swift_release();
  uint64_t v15 = v12;
  uint64_t v16 = v14;
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

void *sub_1A67DF128(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2AE0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C1528);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A67DF24C()
{
  unint64_t v0 = sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  sub_1A67DE7A8(v0);
  swift_bridgeObjectRelease();
  sub_1A6741AD0(&qword_1E96C15A0);
  sub_1A67DF458();
  uint64_t v1 = sub_1A6891F70();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    sub_1A6892150();
    swift_bridgeObjectRelease();
    return 32;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1A67DF338(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v8 + 40;
    do
    {
      int64_t v11 = *(void (**)(void *))(v10 - 8);
      v13[0] = v4;
      v13[1] = v5;
      void v13[2] = v6;
      v13[3] = v7;
      swift_retain();
      v11(v13);
      swift_release();
      v10 += 16;
      --v9;
    }
    while (v9);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67DF3F8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A67DF430()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1A67DF458()
{
  unint64_t result = qword_1E96C2AC8;
  if (!qword_1E96C2AC8)
  {
    sub_1A6750AC4(&qword_1E96C15A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2AC8);
  }
  return result;
}

uint64_t sub_1A67DF4B4()
{
  return 16;
}

__n128 sub_1A67DF4C0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of static TTSMarkupSpeech.tag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.attributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.startingTag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.endingTag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.ssml.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.eventTaps.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.eventTaps.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.eventTaps.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of TTSMarkupSpeech.handle(event:breadcrumb:ssml:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

void *sub_1A67DF5C0()
{
  return &unk_1A68A20F0;
}

float TTSSSEParamValueUnset.getter()
{
  return -424240.0;
}

uint64_t TTSSSEParamCustomUnit.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A6892F30();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t TTSSSEParamCustomUnit.rawValue.getter()
{
  return 5066839;
}

uint64_t sub_1A67DF644()
{
  return sub_1A6893250();
}

uint64_t sub_1A67DF690()
{
  return sub_1A68920F0();
}

uint64_t sub_1A67DF6A0()
{
  return sub_1A6893250();
}

uint64_t sub_1A67DF6E8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A6892F30();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A67DF73C(void *a1@<X8>)
{
  *a1 = 5066839;
  a1[1] = 0xE300000000000000;
}

uint64_t TTSExtendedParameterInfo.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSExtendedParameterInfo.footerText.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

TextToSpeech::TTSExtendedParameterInfo __swiftcall TTSExtendedParameterInfo.init(name:footerText:)(Swift::String name, Swift::String_optional footerText)
{
  v2->value = name;
  v2[1] = footerText;
  result.footerText = footerText;
  result.name = name;
  return result;
}

uint64_t sub_1A67DF7BC()
{
  if (*v0) {
    return 0x65547265746F6F66;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1A67DF7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67E06C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67DF81C(uint64_t a1)
{
  unint64_t v2 = sub_1A67DFA0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67DF858(uint64_t a1)
{
  unint64_t v2 = sub_1A67DFA0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TTSExtendedParameterInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C1538);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  sub_1A673E63C(a1, a1[3]);
  sub_1A67DFA0C();
  sub_1A68932B0();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_1A6893040();
  if (!v8)
  {
    char v11 = 1;
    sub_1A6893020();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A67DFA0C()
{
  unint64_t result = qword_1E96C3CC0[0];
  if (!qword_1E96C3CC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C3CC0);
  }
  return result;
}

uint64_t TTSExtendedParameterInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C2AE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67DFA0C();
  sub_1A68932A0();
  if (v2) {
    return sub_1A6741A24((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_1A6892F80();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A6892F60();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  sub_1A6741A24((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67DFC64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TTSExtendedParameterInfo.init(from:)(a1, a2);
}

uint64_t sub_1A67DFC7C(void *a1)
{
  return TTSExtendedParameterInfo.encode(to:)(a1);
}

__n128 AUParameter.ttsExtendedInfo.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_displayName);
  sub_1A6892000();

  uint64_t v5 = sub_1A6892070();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6892060();
  uint64_t v9 = sub_1A6892010();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 >> 60 == 15)
  {
    id v12 = objc_msgSend(v2, sel_displayName);
    uint64_t v13 = sub_1A6892000();
    unint64_t v15 = v14;

    a1->n128_u64[0] = v13;
    a1->n128_u64[1] = v15;
    a1[1].n128_u64[0] = 0;
    a1[1].n128_u64[1] = 0;
  }
  else
  {
    sub_1A6891630();
    swift_allocObject();
    sub_1A6891620();
    sub_1A67DFE94();
    sub_1A6891610();
    sub_1A67D2768(v9, v11);
    swift_release();
    unint64_t v16 = v18[3];
    __n128 result = v19;
    a1->n128_u64[0] = v18[2];
    a1->n128_u64[1] = v16;
    a1[1] = result;
  }
  return result;
}

unint64_t sub_1A67DFE94()
{
  unint64_t result = qword_1E96C2AF0;
  if (!qword_1E96C2AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2AF0);
  }
  return result;
}

id static AUParameterTree.ttsCreateParameter(withIdentifier:name:address:min:max:unit:unitName:valueStrings:dependentParameters:footerText:)(uint64_t a1, uint64_t a2, float a3, float a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  sub_1A6891660();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A6891650();
  sub_1A67E0168();
  uint64_t v17 = sub_1A6891640();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v20 = sub_1A6892070();
  MEMORY[0x1F4188790](v20 - 8);
  sub_1A6892060();
  sub_1A6892020();
  uint64_t v22 = v21;
  sub_1A67C7908(v17, v19);
  if (!v22) {
    swift_bridgeObjectRetain();
  }
  uint64_t v23 = a11;
  uint64_t v24 = (void *)sub_1A6891FD0();
  uint64_t v25 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  if (a10) {
    a10 = (void *)sub_1A6891FD0();
  }
  uint64_t v26 = a12;
  if (a11) {
    uint64_t v23 = (void *)sub_1A68922D0();
  }
  if (a12)
  {
    sub_1A674CEA4();
    uint64_t v26 = (void *)sub_1A68922D0();
  }
  uint64_t v27 = self;
  *(float *)&double v28 = a3;
  *(float *)&double v29 = a4;
  id v30 = objc_msgSend(v27, sel_createParameterWithIdentifier_name_address_min_max_unit_unitName_flags_valueStrings_dependentParameters_, v24, v25, a7, a8, a10, 0, v28, v29, v23, v26, a9, a1, a2);

  return v30;
}

unint64_t sub_1A67E0168()
{
  unint64_t result = qword_1E96C1530;
  if (!qword_1E96C1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C1530);
  }
  return result;
}

unint64_t sub_1A67E01C0()
{
  unint64_t result = qword_1E96C2AF8;
  if (!qword_1E96C2AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2AF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTSSSEParamCustomUnit(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A67E02B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSSEParamCustomUnit()
{
  return &type metadata for TTSSSEParamCustomUnit;
}

uint64_t destroy for TTSExtendedParameterInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TTSExtendedParameterInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TTSExtendedParameterInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TTSExtendedParameterInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSExtendedParameterInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSExtendedParameterInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSExtendedParameterInfo()
{
  return &type metadata for TTSExtendedParameterInfo;
}

unsigned char *storeEnumTagSinglePayload for TTSExtendedParameterInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67E0580);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSExtendedParameterInfo.CodingKeys()
{
  return &type metadata for TTSExtendedParameterInfo.CodingKeys;
}

unint64_t sub_1A67E05BC()
{
  unint64_t result = qword_1E96CC290[0];
  if (!qword_1E96CC290[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CC290);
  }
  return result;
}

unint64_t sub_1A67E0614()
{
  unint64_t result = qword_1E96C3CE0[0];
  if (!qword_1E96C3CE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C3CE0);
  }
  return result;
}

unint64_t sub_1A67E066C()
{
  unint64_t result = qword_1E96C3CD8;
  if (!qword_1E96C3CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3CD8);
  }
  return result;
}

uint64_t sub_1A67E06C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65547265746F6F66 && a2 == 0xEA00000000007478)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t TTSSpeechEvent.description.getter()
{
  sub_1A67E080C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  return sub_1A6892090();
}

uint64_t sub_1A67E080C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result = a2;
  switch(a9)
  {
    case 0:
    case 4:
      goto LABEL_4;
    case 1:
    case 5:
      goto LABEL_3;
    case 2:
    case 3:
      swift_bridgeObjectRetain();
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t TTSSpeechEvent.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  switch(*(unsigned char *)(v0 + 64))
  {
    case 1:
      sub_1A6893210();
      sub_1A68920F0();
      goto LABEL_6;
    case 2:
      sub_1A6893210();
      sub_1A68920F0();
      sub_1A68920F0();
      sub_1A6893210();
      sub_1A6893210();
      goto LABEL_6;
    case 3:
      sub_1A6893210();
      sub_1A68920F0();
      sub_1A68920F0();
      goto LABEL_6;
    case 5:
      sub_1A6893210();
      sub_1A68920F0();
      if (!v1) {
        return sub_1A6893220();
      }
      sub_1A6893220();
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      return swift_bridgeObjectRelease();
    case 6:
      sub_1A6893210();
      return sub_1A6893220();
    case 7:
      sub_1A6893210();
      sub_1A6893210();
      goto LABEL_17;
    case 8:
      sub_1A6893210();
      sub_1A6893210();
      sub_1A6893210();
      sub_1A6893210();
      goto LABEL_17;
    case 9:
LABEL_17:
      uint64_t result = sub_1A6893210();
      break;
    default:
      sub_1A6893210();
LABEL_6:
      uint64_t result = sub_1A68920F0();
      break;
  }
  return result;
}

uint64_t sub_1A67E0C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A67E9F8C(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A67E0C48(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9714();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E0C84(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9714();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A67E0CC0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65756575716E65;
      break;
    case 2:
    case 16:
      return result;
    case 3:
      unint64_t result = 0x72776552656C7572;
      break;
    case 4:
      unint64_t result = 0x776552726568746FLL;
      break;
    case 5:
      unint64_t result = 0x7472617473;
      break;
    case 6:
      unint64_t result = 0x696C537472617473;
      break;
    case 7:
      unint64_t result = 0x6573756170;
      break;
    case 8:
      unint64_t result = 0x656D75736572;
      break;
    case 9:
      unint64_t result = 1886352499;
      break;
    case 10:
      unint64_t result = 0x64656873696E6966;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 13:
    case 14:
      unint64_t result = 0x6465766965636572;
      break;
    case 15:
      unint64_t result = 0x655272656B72616DLL;
      break;
    default:
      unint64_t result = 0x696F506B63656863;
      break;
  }
  return result;
}

uint64_t sub_1A67E0EC8(char a1)
{
  if (a1) {
    return 28532;
  }
  else {
    return 1836020326;
  }
}

uint64_t sub_1A67E0EEC(char a1)
{
  return qword_1A68A3838[a1];
}

uint64_t sub_1A67E0F0C(char a1)
{
  return *(void *)&aOriginalreplac[8 * a1];
}

uint64_t sub_1A67E0F2C(char a1)
{
  if (a1) {
    return 0x6563696F76;
  }
  else {
    return 0x6563696C73;
  }
}

unint64_t sub_1A67E0F4C()
{
  return sub_1A67E0CC0(*v0);
}

uint64_t sub_1A67E0F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67E9860(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A67E0F7C(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1A67E0F88(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9128();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E0FC4(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9128();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1000(uint64_t a1)
{
  unint64_t v2 = sub_1A67E96C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E103C(uint64_t a1)
{
  unint64_t v2 = sub_1A67E96C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E107C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A67E9ED4(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A67E10AC(uint64_t a1)
{
  unint64_t v2 = sub_1A67E93CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E10E8(uint64_t a1)
{
  unint64_t v2 = sub_1A67E93CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1124()
{
  return sub_1A67E0EC8(*v0);
}

uint64_t sub_1A67E112C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67E9FFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67E1154(uint64_t a1)
{
  unint64_t v2 = sub_1A67E917C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1190(uint64_t a1)
{
  unint64_t v2 = sub_1A67E917C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E11CC(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9228();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1208(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9228();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1244(uint64_t a1)
{
  unint64_t v2 = sub_1A67E966C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1280(uint64_t a1)
{
  unint64_t v2 = sub_1A67E966C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E12BC()
{
  return sub_1A67E0EEC(*v0);
}

uint64_t sub_1A67E12C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67EA0C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67E12EC(uint64_t a1)
{
  unint64_t v2 = sub_1A67E95C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1328(uint64_t a1)
{
  unint64_t v2 = sub_1A67E95C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1364(uint64_t a1)
{
  unint64_t v2 = sub_1A67E94C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E13A0(uint64_t a1)
{
  unint64_t v2 = sub_1A67E94C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E13DC(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9324();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1418(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9324();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1454(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9378();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1490(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9378();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E14CC(uint64_t a1)
{
  unint64_t v2 = sub_1A67E92D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1508(uint64_t a1)
{
  unint64_t v2 = sub_1A67E92D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1544(uint64_t a1)
{
  unint64_t v2 = sub_1A67E927C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E1580(uint64_t a1)
{
  unint64_t v2 = sub_1A67E927C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E15BC(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9474();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E15F8(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9474();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1634()
{
  return sub_1A67E0F0C(*v0);
}

uint64_t sub_1A67E163C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67EA1D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67E1664(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9618();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E16A0(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9618();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E16E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A67EA384(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A67E1710(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9570();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E174C(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9570();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1788()
{
  return sub_1A67E0F2C(*v0);
}

uint64_t sub_1A67E1790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67EA418(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A67E17B8(uint64_t a1)
{
  unint64_t v2 = sub_1A67E951C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E17F4(uint64_t a1)
{
  unint64_t v2 = sub_1A67E951C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A67E1830(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9420();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E186C(uint64_t a1)
{
  unint64_t v2 = sub_1A67E9420();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TTSSpeechEvent.encode(to:)(void *a1)
{
  uint64_t v115 = sub_1A6741AD0(&qword_1E96C2B00);
  uint64_t v94 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v114 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1A6741AD0(&qword_1E96C2B08);
  uint64_t v98 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  uint64_t v112 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1A6741AD0(&qword_1E96C2B10);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v72 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1A6741AD0(&qword_1E96C2B18);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  char v69 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1A6741AD0(&qword_1E96C2B20);
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  long long v75 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1A6741AD0(&qword_1E96C2B28);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v78 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1A6741AD0(&qword_1E96C2B30);
  uint64_t v97 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  int64_t v110 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1A6741AD0(&qword_1E96C2B38);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v81 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1A6741AD0(&qword_1E96C2B40);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  unint64_t v84 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1A6741AD0(&qword_1E96C2B48);
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v87 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1A6741AD0(&qword_1E96C2B50);
  uint64_t v93 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  unint64_t v107 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1A6741AD0(&qword_1E96C2B58);
  uint64_t v96 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v102 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1A6741AD0(&qword_1E96C2B60);
  uint64_t v92 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v104 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1A6741AD0(&qword_1E96C2B68);
  uint64_t v91 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v105 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1A6741AD0(&qword_1E96C2B70);
  uint64_t v95 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v100 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1A6741AD0(&qword_1E96C2B78);
  uint64_t v90 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1A6741AD0(&qword_1E96C2B80);
  uint64_t v99 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1A6741AD0(&qword_1E96C2B88);
  uint64_t v123 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  uint64_t v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = *v1;
  uint64_t v26 = v1[1];
  uint64_t v27 = v1[2];
  uint64_t v121 = v1[3];
  uint64_t v122 = v26;
  uint64_t v119 = v1[4];
  uint64_t v120 = v27;
  uint64_t v28 = v1[5];
  uint64_t v116 = v1[6];
  uint64_t v117 = v1[7];
  uint64_t v118 = v28;
  uint64_t v29 = *((unsigned __int8 *)v1 + 64);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67E9128();
  unint64_t v124 = v25;
  sub_1A68932B0();
  switch(v29)
  {
    case 1:
      LOBYTE(v128) = 2;
      sub_1A67E966C();
      int v32 = v100;
      uint64_t v34 = v124;
      uint64_t v33 = v125;
      sub_1A6893010();
      LOBYTE(v128) = 0;
      uint64_t v35 = v126;
      uint64_t v36 = v101;
      sub_1A6893040();
      if (!v35)
      {
        LOBYTE(v128) = 1;
        sub_1A6893040();
      }
      (*(void (**)(char *, uint64_t))(v95 + 8))(v32, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v34, v33);
    case 2:
      LOBYTE(v128) = 3;
      sub_1A67E9618();
      long long v38 = v105;
      uint64_t v40 = v124;
      uint64_t v39 = v125;
      sub_1A6893010();
      LOBYTE(v128) = 0;
      uint64_t v41 = v126;
      uint64_t v42 = v108;
      sub_1A6893040();
      if (!v41)
      {
        LOBYTE(v128) = 1;
        sub_1A6893040();
        uint64_t v128 = v119;
        uint64_t v129 = v118;
        char v131 = 2;
        type metadata accessor for _NSRange();
        sub_1A67EB1D8(&qword_1E96C2B90, (void (*)(uint64_t))type metadata accessor for _NSRange);
        sub_1A6893080();
        LOBYTE(v128) = 3;
        sub_1A6893040();
      }
      uint64_t v43 = &v123;
      goto LABEL_20;
    case 3:
      LOBYTE(v128) = 4;
      sub_1A67E95C4();
      char v44 = v104;
      uint64_t v31 = v124;
      uint64_t v30 = v125;
      sub_1A6893010();
      LOBYTE(v128) = 0;
      uint64_t v45 = v126;
      uint64_t v46 = v106;
      sub_1A6893040();
      if (!v45)
      {
        LOBYTE(v128) = 1;
        sub_1A6893040();
        LOBYTE(v128) = 2;
        sub_1A6893040();
      }
      uint64_t v47 = (uint64_t *)&v124;
      goto LABEL_16;
    case 4:
      LOBYTE(v128) = 5;
      sub_1A67E9570();
      char v44 = v102;
      uint64_t v31 = v124;
      uint64_t v30 = v125;
      sub_1A6893010();
      uint64_t v46 = v103;
      sub_1A6893040();
      uint64_t v47 = &v128;
      goto LABEL_16;
    case 5:
      LOBYTE(v128) = 6;
      sub_1A67E951C();
      char v44 = v107;
      uint64_t v31 = v124;
      uint64_t v30 = v125;
      sub_1A6893010();
      LOBYTE(v128) = 0;
      uint64_t v48 = v126;
      uint64_t v46 = v109;
      sub_1A6893040();
      if (!v48)
      {
        LOBYTE(v128) = 1;
        sub_1A6893020();
      }
      uint64_t v47 = &v125;
LABEL_16:
      (*(void (**)(char *, uint64_t))(*(v47 - 32) + 8))(v44, v46);
      goto LABEL_17;
    case 6:
      LOBYTE(v128) = 10;
      sub_1A67E93CC();
      uint64_t v49 = v110;
      uint64_t v40 = v124;
      uint64_t v39 = v125;
      sub_1A6893010();
      uint64_t v50 = v111;
      sub_1A6893050();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v49, v50);
      goto LABEL_21;
    case 7:
      LOBYTE(v128) = 15;
      sub_1A67E9228();
      long long v38 = v112;
      uint64_t v40 = v124;
      uint64_t v39 = v125;
      sub_1A6893010();
      uint64_t v128 = v127;
      uint64_t v129 = v122;
      type metadata accessor for _NSRange();
      sub_1A67EB1D8(&qword_1E96C2B90, (void (*)(uint64_t))type metadata accessor for _NSRange);
      uint64_t v42 = v113;
      sub_1A6893080();
      uint64_t v43 = (uint64_t *)&v130;
LABEL_20:
      (*(void (**)(char *, uint64_t))(*(v43 - 32) + 8))(v38, v42);
LABEL_21:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v40, v39);
      break;
    case 8:
      LOBYTE(v128) = 16;
      sub_1A67E917C();
      uint64_t v51 = v114;
      uint64_t v53 = v124;
      uint64_t v52 = v125;
      sub_1A6893010();
      uint64_t v128 = v127;
      uint64_t v129 = v122;
      char v131 = 0;
      type metadata accessor for _NSRange();
      sub_1A67EB1D8(&qword_1E96C2B90, (void (*)(uint64_t))type metadata accessor for _NSRange);
      uint64_t v54 = v115;
      uint64_t v55 = v126;
      sub_1A6893080();
      if (!v55)
      {
        uint64_t v128 = v120;
        uint64_t v129 = v121;
        char v131 = 1;
        sub_1A6893080();
      }
      (*(void (**)(char *, uint64_t))(v94 + 8))(v51, v54);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v53, v52);
      break;
    case 9:
      uint64_t v56 = v119 | v118 | v116;
      if (v120 | v122 | v127 | v121 | v56 | v117)
      {
        uint64_t v57 = v120 | v122 | v121 | v56 | v117;
        if (v127 != 1 || v57)
        {
          if (v127 != 2 || v57)
          {
            if (v127 != 3 || v57)
            {
              if (v127 != 4 || v57)
              {
                if (v127 != 5 || v57)
                {
                  uint64_t v59 = v125;
                  uint64_t v60 = v124;
                  if (v127 != 6 || v57)
                  {
                    LOBYTE(v128) = 14;
                    sub_1A67E927C();
                    char v68 = v72;
                    sub_1A6893010();
                    (*(void (**)(char *, uint64_t))(v73 + 8))(v68, v74);
                  }
                  else
                  {
                    LOBYTE(v128) = 13;
                    sub_1A67E92D0();
                    uint64_t v67 = v69;
                    sub_1A6893010();
                    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v71);
                  }
                }
                else
                {
                  LOBYTE(v128) = 12;
                  sub_1A67E9324();
                  uint64_t v66 = v75;
                  uint64_t v60 = v124;
                  uint64_t v59 = v125;
                  sub_1A6893010();
                  (*(void (**)(char *, uint64_t))(v76 + 8))(v66, v77);
                }
              }
              else
              {
                LOBYTE(v128) = 11;
                sub_1A67E9378();
                size_t v65 = v78;
                uint64_t v60 = v124;
                uint64_t v59 = v125;
                sub_1A6893010();
                (*(void (**)(char *, uint64_t))(v79 + 8))(v65, v80);
              }
            }
            else
            {
              LOBYTE(v128) = 9;
              sub_1A67E9420();
              char v64 = v81;
              uint64_t v60 = v124;
              uint64_t v59 = v125;
              sub_1A6893010();
              (*(void (**)(char *, uint64_t))(v82 + 8))(v64, v83);
            }
          }
          else
          {
            LOBYTE(v128) = 8;
            sub_1A67E9474();
            uint64_t v63 = v84;
            uint64_t v60 = v124;
            uint64_t v59 = v125;
            sub_1A6893010();
            (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v86);
          }
        }
        else
        {
          LOBYTE(v128) = 7;
          sub_1A67E94C8();
          uint64_t v58 = v87;
          uint64_t v60 = v124;
          uint64_t v59 = v125;
          sub_1A6893010();
          (*(void (**)(char *, uint64_t))(v88 + 8))(v58, v89);
        }
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v60, v59);
      }
      else
      {
        LOBYTE(v128) = 1;
        sub_1A67E96C0();
        uint64_t v61 = v124;
        uint64_t v62 = v125;
        sub_1A6893010();
        (*(void (**)(char *, uint64_t))(v90 + 8))(v20, v18);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v61, v62);
      }
      break;
    default:
      LOBYTE(v128) = 0;
      sub_1A67E9714();
      uint64_t v31 = v124;
      uint64_t v30 = v125;
      sub_1A6893010();
      sub_1A6893040();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v23, v21);
LABEL_17:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v31, v30);
      break;
  }
  return result;
}

uint64_t TTSSpeechEvent.hashValue.getter()
{
  return sub_1A6893250();
}

uint64_t TTSSpeechEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v178 = a2;
  uint64_t v165 = sub_1A6741AD0(&qword_1E96C2B98);
  uint64_t v143 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  uint64_t v183 = (char *)&v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_1A6741AD0(&qword_1E96C2BA0);
  uint64_t v142 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  uint64_t v182 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_1A6741AD0(&qword_1E96C2BA8);
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  char v177 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_1A6741AD0(&qword_1E96C2BB0);
  uint64_t v160 = *(void *)(v161 - 8);
  MEMORY[0x1F4188790](v161);
  uint64_t v176 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_1A6741AD0(&qword_1E96C2BB8);
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  unint64_t v175 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_1A6741AD0(&qword_1E96C2BC0);
  uint64_t v155 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790](v157);
  long long v174 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1A6741AD0(&qword_1E96C2BC8);
  uint64_t v141 = *(void *)(v156 - 8);
  MEMORY[0x1F4188790](v156);
  long long v173 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_1A6741AD0(&qword_1E96C2BD0);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  long long v172 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_1A6741AD0(&qword_1E96C2BD8);
  uint64_t v150 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  char v170 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1A6741AD0(&qword_1E96C2BE0);
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v169 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_1A6741AD0(&qword_1E96C2BE8);
  uint64_t v140 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  long long v171 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1A6741AD0(&qword_1E96C2BF0);
  uint64_t v139 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  uint64_t v168 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_1A6741AD0(&qword_1E96C2BF8);
  uint64_t v136 = *(void *)(v152 - 8);
  MEMORY[0x1F4188790](v152);
  unint64_t v180 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_1A6741AD0(&qword_1E96C2C00);
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v184 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1A6741AD0(&qword_1E96C2C08);
  uint64_t v138 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  long long v179 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1A6741AD0(&qword_1E96C2C10);
  uint64_t v144 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1A6741AD0(&qword_1E96C2C18);
  uint64_t v137 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_1A6741AD0(&qword_1E96C2C20);
  uint64_t v24 = *(void *)(v181 - 8);
  MEMORY[0x1F4188790](v181);
  uint64_t v26 = (char *)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[3];
  char v185 = a1;
  sub_1A673E63C(a1, v27);
  sub_1A67E9128();
  uint64_t v28 = v186;
  sub_1A68932A0();
  if (v28) {
    return sub_1A6741A24((uint64_t)v185);
  }
  long long v133 = v20;
  int64_t v134 = v23;
  uint64_t v131 = v18;
  uint64_t v132 = v21;
  uint64_t v30 = v179;
  uint64_t v29 = v180;
  uint64_t v135 = 0;
  uint64_t v31 = v182;
  int v32 = v183;
  uint64_t v186 = v24;
  uint64_t v33 = v181;
  uint64_t v34 = sub_1A6892FF0();
  uint64_t v35 = (char *)v34;
  if (*(void *)(v34 + 16) != 1)
  {
    uint64_t v38 = sub_1A6892CA0();
    swift_allocError();
    uint64_t v39 = v26;
    uint64_t v41 = v40;
    sub_1A6741AD0(&qword_1E96C26F0);
    *uint64_t v41 = &type metadata for TTSSpeechEvent;
    sub_1A6892F50();
    sub_1A6892C90();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v186 + 8))(v39, v33);
    return sub_1A6741A24((uint64_t)v185);
  }
  switch(*(unsigned char *)(v34 + 32))
  {
    case 1:
      LOBYTE(v189) = 1;
      sub_1A67E96C0();
      uint64_t v42 = v133;
      uint64_t v43 = v135;
      sub_1A6892F40();
      uint64_t v44 = v43;
      if (v43) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v144 + 8))(v42, v131);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      goto LABEL_44;
    case 2:
      LOBYTE(v189) = 2;
      sub_1A67E966C();
      uint64_t v53 = v30;
      uint64_t v54 = v33;
      uint64_t v55 = v135;
      sub_1A6892F40();
      if (v55) {
        goto LABEL_18;
      }
      LOBYTE(v189) = 0;
      uint64_t v56 = v145;
      uint64_t v57 = sub_1A6892F80();
      uint64_t v58 = v186;
      uint64_t v46 = v106;
      uint64_t v183 = (char *)v57;
      LOBYTE(v189) = 1;
      uint64_t v44 = sub_1A6892F80();
      unint64_t v107 = v53;
      uint64_t v47 = v108;
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v138 + 8))(v107, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v26, v33);
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 1;
      goto LABEL_46;
    case 3:
      LOBYTE(v189) = 3;
      sub_1A67E9618();
      uint64_t v54 = v33;
      uint64_t v59 = v135;
      sub_1A6892F40();
      if (v59) {
        goto LABEL_18;
      }
      LOBYTE(v189) = 0;
      uint64_t v60 = sub_1A6892F80();
      uint64_t v61 = v186;
      uint64_t v182 = v26;
      uint64_t v183 = (char *)v60;
      long long v179 = v109;
      LOBYTE(v189) = 1;
      uint64_t v44 = sub_1A6892F80();
      uint64_t v47 = v121;
      unint64_t v180 = v35;
      type metadata accessor for _NSRange();
      LOBYTE(v187) = 2;
      sub_1A67EB1D8(&qword_1E96C2C28, (void (*)(uint64_t))type metadata accessor for _NSRange);
      sub_1A6892FC0();
      uint64_t v48 = v189;
      uint64_t v49 = v190;
      LOBYTE(v187) = 3;
      uint64_t v127 = sub_1A6892F80();
      uint64_t v135 = 0;
      uint64_t v50 = v127;
      uint64_t v51 = v129;
      (*(void (**)(char *, uint64_t))(v166 + 8))(v184, v167);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v182, v54);
      char v52 = 2;
      goto LABEL_47;
    case 4:
      LOBYTE(v189) = 4;
      sub_1A67E95C4();
      uint64_t v54 = v33;
      uint64_t v62 = v135;
      sub_1A6892F40();
      if (v62) {
        goto LABEL_18;
      }
      LOBYTE(v189) = 0;
      uint64_t v63 = v152;
      uint64_t v64 = sub_1A6892F80();
      uint64_t v65 = v186;
      uint64_t v183 = (char *)v64;
      long long v179 = v110;
      LOBYTE(v189) = 1;
      uint64_t v111 = v29;
      uint64_t v44 = sub_1A6892F80();
      uint64_t v47 = v122;
      uint64_t v182 = v26;
      LOBYTE(v189) = 2;
      uint64_t v123 = sub_1A6892F80();
      uint64_t v124 = v63;
      uint64_t v135 = 0;
      uint64_t v48 = v123;
      uint64_t v49 = v128;
      (*(void (**)(char *, uint64_t))(v136 + 8))(v111, v124);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v182, v54);
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 3;
LABEL_47:
      uint64_t v125 = v178;
      uint64_t v46 = v179;
      uint64_t v45 = (uint64_t)v183;
      goto LABEL_45;
    case 5:
      LOBYTE(v189) = 5;
      sub_1A67E9570();
      uint64_t v66 = v168;
      uint64_t v67 = v135;
      sub_1A6892F40();
      if (v67) {
        goto LABEL_40;
      }
      uint64_t v68 = v146;
      uint64_t v69 = sub_1A6892F80();
      uint64_t v70 = v66;
      uint64_t v44 = 0;
      uint64_t v71 = v186;
      uint64_t v46 = v112;
      uint64_t v135 = 0;
      uint64_t v113 = v69;
      (*(void (**)(char *, uint64_t))(v139 + 8))(v70, v68);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v33);
      uint64_t v45 = v113;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 4;
      goto LABEL_44;
    case 6:
      LOBYTE(v189) = 6;
      sub_1A67E951C();
      uint64_t v72 = v171;
      uint64_t v54 = v33;
      uint64_t v73 = v135;
      sub_1A6892F40();
      if (v73)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v54);
        return sub_1A6741A24((uint64_t)v185);
      }
      LOBYTE(v189) = 0;
      uint64_t v103 = v149;
      uint64_t v104 = sub_1A6892F80();
      uint64_t v105 = v186;
      uint64_t v46 = v119;
      uint64_t v183 = (char *)v104;
      LOBYTE(v189) = 1;
      uint64_t v44 = sub_1A6892F60();
      uint64_t v120 = v72;
      uint64_t v135 = 0;
      uint64_t v47 = v126;
      (*(void (**)(char *, uint64_t))(v140 + 8))(v120, v103);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v26, v54);
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 5;
LABEL_46:
      uint64_t v125 = v178;
      uint64_t v45 = (uint64_t)v183;
      goto LABEL_45;
    case 7:
      LOBYTE(v189) = 7;
      sub_1A67E94C8();
      uint64_t v74 = v169;
      uint64_t v75 = v135;
      sub_1A6892F40();
      uint64_t v44 = v75;
      if (v75) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v147 + 8))(v74, v148);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      uint64_t v45 = 1;
      goto LABEL_44;
    case 8:
      LOBYTE(v189) = 8;
      sub_1A67E9474();
      uint64_t v76 = v170;
      uint64_t v77 = v135;
      sub_1A6892F40();
      uint64_t v44 = v77;
      if (v77) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v150 + 8))(v76, v151);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      uint64_t v45 = 2;
      goto LABEL_44;
    case 9:
      LOBYTE(v189) = 9;
      sub_1A67E9420();
      uint64_t v78 = v172;
      uint64_t v79 = v135;
      sub_1A6892F40();
      uint64_t v44 = v79;
      if (v79) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v153 + 8))(v78, v154);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      uint64_t v45 = 3;
      goto LABEL_44;
    case 0xA:
      LOBYTE(v189) = 10;
      sub_1A67E93CC();
      uint64_t v80 = v173;
      uint64_t v81 = v135;
      sub_1A6892F40();
      if (v81) {
        goto LABEL_40;
      }
      uint64_t v82 = v156;
      char v83 = sub_1A6892F90();
      uint64_t v44 = 0;
      uint64_t v84 = v186;
      char v114 = v83;
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v141 + 8))(v80, v82);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v45 = v114 & 1;
      char v52 = 6;
      goto LABEL_44;
    case 0xB:
      LOBYTE(v189) = 11;
      sub_1A67E9378();
      uint64_t v85 = v174;
      uint64_t v86 = v135;
      sub_1A6892F40();
      uint64_t v44 = v86;
      if (v86) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v155 + 8))(v85, v157);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      uint64_t v45 = 4;
      goto LABEL_44;
    case 0xC:
      LOBYTE(v189) = 12;
      sub_1A67E9324();
      uint64_t v87 = v175;
      uint64_t v88 = v135;
      sub_1A6892F40();
      uint64_t v44 = v88;
      if (v88) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v158 + 8))(v87, v159);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      uint64_t v45 = 5;
      goto LABEL_44;
    case 0xD:
      LOBYTE(v189) = 13;
      sub_1A67E92D0();
      uint64_t v89 = v176;
      uint64_t v90 = v135;
      sub_1A6892F40();
      uint64_t v44 = v90;
      if (v90) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v160 + 8))(v89, v161);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      uint64_t v45 = 6;
      goto LABEL_44;
    case 0xE:
      LOBYTE(v189) = 14;
      sub_1A67E927C();
      uint64_t v91 = v177;
      uint64_t v92 = v135;
      sub_1A6892F40();
      uint64_t v44 = v92;
      if (v92) {
        goto LABEL_40;
      }
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v162 + 8))(v91, v163);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 9;
      uint64_t v45 = 7;
      goto LABEL_44;
    case 0xF:
      LOBYTE(v189) = 15;
      sub_1A67E9228();
      uint64_t v93 = v31;
      uint64_t v94 = v135;
      sub_1A6892F40();
      uint64_t v44 = v94;
      if (v94) {
        goto LABEL_40;
      }
      type metadata accessor for _NSRange();
      sub_1A67EB1D8(&qword_1E96C2C28, (void (*)(uint64_t))type metadata accessor for _NSRange);
      uint64_t v95 = v164;
      sub_1A6892FC0();
      uint64_t v96 = v186;
      uint64_t v135 = 0;
      (*(void (**)(char *, uint64_t))(v142 + 8))(v93, v95);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v26, v33);
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v45 = v189;
      uint64_t v46 = v190;
      char v52 = 7;
      goto LABEL_44;
    case 0x10:
      LOBYTE(v189) = 16;
      sub_1A67E917C();
      uint64_t v97 = v135;
      sub_1A6892F40();
      if (!v97)
      {
        unint64_t v180 = v35;
        uint64_t v182 = v26;
        type metadata accessor for _NSRange();
        LOBYTE(v187) = 0;
        sub_1A67EB1D8(&qword_1E96C2C28, (void (*)(uint64_t))type metadata accessor for _NSRange);
        uint64_t v98 = v165;
        sub_1A6892FC0();
        uint64_t v99 = v186;
        uint64_t v115 = v32;
        uint64_t v116 = v189;
        uint64_t v46 = v190;
        char v191 = 1;
        sub_1A6892FC0();
        uint64_t v135 = 0;
        (*(void (**)(char *, uint64_t))(v143 + 8))(v115, v98);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v182, v33);
        uint64_t v48 = 0;
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        uint64_t v44 = v187;
        uint64_t v47 = v188;
        char v52 = 8;
        uint64_t v45 = v116;
        goto LABEL_44;
      }
LABEL_40:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      return sub_1A6741A24((uint64_t)v185);
    default:
      LOBYTE(v189) = 0;
      sub_1A67E9714();
      uint64_t v36 = v134;
      uint64_t v37 = v135;
      sub_1A6892F40();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
        return sub_1A6741A24((uint64_t)v185);
      }
      uint64_t v100 = v132;
      uint64_t v101 = sub_1A6892F80();
      uint64_t v44 = 0;
      uint64_t v46 = v117;
      uint64_t v135 = 0;
      uint64_t v118 = v101;
      (*(void (**)(char *, uint64_t))(v137 + 8))(v36, v100);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v26, v33);
      uint64_t v45 = v118;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      char v52 = 0;
LABEL_44:
      uint64_t v125 = v178;
LABEL_45:
      *(void *)uint64_t v125 = v45;
      *(void *)(v125 + 8) = v46;
      *(void *)(v125 + 16) = v44;
      *(void *)(v125 + 24) = v47;
      *(void *)(v125 + 32) = v48;
      *(void *)(v125 + 40) = v49;
      *(void *)(v125 + 48) = v50;
      *(void *)(v125 + 56) = v51;
      *(unsigned char *)(v125 + 64) = v52;
      uint64_t result = sub_1A6741A24((uint64_t)v185);
      break;
  }
  return result;
}

uint64_t sub_1A67E4DEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSSpeechEvent.init(from:)(a1, a2);
}

uint64_t sub_1A67E4E04(void *a1)
{
  return TTSSpeechEvent.encode(to:)(a1);
}

uint64_t sub_1A67E4E1C()
{
  return sub_1A6893250();
}

uint64_t sub_1A67E4E7C()
{
  return sub_1A6893250();
}

double TTSSpeechEvent.markup.getter@<D0>(_OWORD *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 64) == 5)
  {
    swift_bridgeObjectRetain();
    TTSMarkup.SpeechDocument.init(ssml:)((uint64_t)a1);
  }
  else
  {
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

BOOL TTSSpeechEvent.isSensitive.getter()
{
  return *(unsigned __int8 *)(v0 + 64) - 1 < 4;
}

uint64_t TTSSpeechEvent.redacted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  char v8 = *(unsigned char *)(v1 + 64);
  switch(v8)
  {
    case 1:
      *(_OWORD *)a1 = xmmword_1A68A2340;
      *(_OWORD *)(a1 + 16) = xmmword_1A68A2340;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      char v9 = 1;
      goto LABEL_10;
    case 2:
      *(_OWORD *)a1 = xmmword_1A68A2340;
      *(_OWORD *)(a1 + 16) = xmmword_1A68A2340;
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 48) = v6;
      *(void *)(a1 + 56) = v7;
      *(unsigned char *)(a1 + 64) = 2;
      goto LABEL_6;
    case 3:
      *(void *)a1 = result;
      *(void *)(a1 + 8) = v3;
      *(_OWORD *)(a1 + 16) = xmmword_1A68A2340;
      *(_OWORD *)(a1 + 32) = xmmword_1A68A2340;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 56) = 0;
      *(unsigned char *)(a1 + 64) = 3;
LABEL_6:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 4:
      *(_OWORD *)a1 = xmmword_1A68A2340;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      char v9 = 4;
LABEL_10:
      *(unsigned char *)(a1 + 64) = v9;
      break;
    default:
      uint64_t v10 = *(void *)(v1 + 16);
      uint64_t v11 = *(void *)(v1 + 24);
      *(void *)a1 = result;
      *(void *)(a1 + 8) = v3;
      *(void *)(a1 + 16) = v10;
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 48) = v6;
      *(void *)(a1 + 56) = v7;
      *(unsigned char *)(a1 + 64) = v8;
      uint64_t result = sub_1A67E080C(result, v3, v10, v11, v4, v5, v6, v7, v8);
      break;
  }
  return result;
}

Swift::Void __swiftcall TTSSpeechEvent.emit(forJob:)(Swift::String forJob)
{
  object = forJob._object;
  uint64_t countAndFlagsBits = forJob._countAndFlagsBits;
  long long v4 = *v1;
  long long v5 = v1[1];
  long long v6 = v1[2];
  long long v7 = v1[3];
  char v8 = *((unsigned char *)v1 + 64);
  if (qword_1E96CC3A0 != -1)
  {
    long long v11 = v1[1];
    long long v12 = *v1;
    long long v9 = v1[3];
    long long v10 = v1[2];
    swift_once();
    long long v7 = v9;
    long long v6 = v10;
    long long v5 = v11;
    long long v4 = v12;
  }
  v13[0] = v4;
  v13[1] = v5;
  void v13[2] = v6;
  v13[3] = v7;
  char v14 = v8;
  (*(void (**)(_OWORD *, uint64_t, void *))((*MEMORY[0x1E4FBC8C8] & *(void *)qword_1E96CC3A8) + 0x128))(v13, countAndFlagsBits, object);
}

uint64_t TTSSpeechEvent.logLevel.getter()
{
  int v1 = v0[4].u8[0];
  if (v1 == 4 || v1 == 6) {
    return sub_1A6892870();
  }
  if (v1 != 9) {
    return sub_1A6892840();
  }
  int8x16_t v3 = vorrq_s8(v0[2], v0[3]);
  uint64_t v4 = *(void *)&vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)) | v0[1].i64[1] | v0[1].i64[0] | v0->i64[1];
  if ((unint64_t)(v0->i64[0] - 1) <= 2 && v4 == 0) {
    return sub_1A6892870();
  }
  if (v0->i64[0] != 4 || v4 != 0) {
    return sub_1A6892840();
  }
  return MEMORY[0x1F41886C0]();
}

uint64_t TTSLoggedSpeechEvent.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSLoggedSpeechEvent.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTSLoggedSpeechEvent.identifier.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSLoggedSpeechEvent.event.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  char v10 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1A67E080C(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

__n128 TTSLoggedSpeechEvent.event.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v6 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  char v4 = *((unsigned char *)a1 + 64);
  sub_1A67E9768(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80));
  *(_OWORD *)(v1 + 16) = v8;
  *(_OWORD *)(v1 + 32) = v7;
  __n128 result = v6;
  *(__n128 *)(v1 + 48) = v6;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  *(unsigned char *)(v1 + 80) = v4;
  return result;
}

uint64_t (*TTSLoggedSpeechEvent.event.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSLoggedSpeechEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TTSLoggedSpeechEvent() + 24);
  uint64_t v4 = sub_1A68917C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TTSLoggedSpeechEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TTSLoggedSpeechEvent() + 24);
  uint64_t v4 = sub_1A68917C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TTSLoggedSpeechEvent.timestamp.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSLoggedSpeechEvent.pid.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for TTSLoggedSpeechEvent() + 28));
}

uint64_t TTSLoggedSpeechEvent.pid.setter(int a1)
{
  uint64_t result = type metadata accessor for TTSLoggedSpeechEvent();
  *(_DWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*TTSLoggedSpeechEvent.pid.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSLoggedSpeechEvent.processName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TTSLoggedSpeechEvent() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSLoggedSpeechEvent.processName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TTSLoggedSpeechEvent() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TTSLoggedSpeechEvent.processName.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSLoggedSpeechEvent.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  TTSSpeechEvent.hash(into:)();
  type metadata accessor for TTSLoggedSpeechEvent();
  sub_1A68917C0();
  sub_1A67EB1D8(&qword_1E96C2C30, MEMORY[0x1F418B9C0]);
  sub_1A6891F20();
  sub_1A6893230();
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67E5700(char a1)
{
  return *(void *)&aIdentifievent[8 * a1];
}

uint64_t sub_1A67E5720()
{
  return sub_1A67E5700(*v0);
}

uint64_t sub_1A67E5728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A67EA7F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A67E5750(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A67E575C(uint64_t a1)
{
  unint64_t v2 = sub_1A67EA614();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A67E5798(uint64_t a1)
{
  unint64_t v2 = sub_1A67EA614();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TTSLoggedSpeechEvent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C2C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A673E63C(a1, a1[3]);
  sub_1A67EA614();
  sub_1A68932B0();
  LOBYTE(v14) = 0;
  sub_1A6893040();
  if (!v2)
  {
    char v9 = *(unsigned char *)(v3 + 80);
    long long v10 = *(_OWORD *)(v3 + 32);
    long long v14 = *(_OWORD *)(v3 + 16);
    long long v15 = v10;
    long long v11 = *(_OWORD *)(v3 + 64);
    long long v16 = *(_OWORD *)(v3 + 48);
    long long v17 = v11;
    char v18 = v9;
    v13[15] = 1;
    sub_1A67EA668();
    sub_1A6893080();
    type metadata accessor for TTSLoggedSpeechEvent();
    LOBYTE(v14) = 2;
    sub_1A68917C0();
    sub_1A67EB1D8(&qword_1E96C2C48, MEMORY[0x1F418B9C0]);
    sub_1A6893080();
    LOBYTE(v14) = 3;
    sub_1A6893090();
    LOBYTE(v14) = 4;
    sub_1A6893040();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TTSLoggedSpeechEvent.hashValue.getter()
{
  return sub_1A6893250();
}

uint64_t TTSLoggedSpeechEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = sub_1A6741AD0(&qword_1E96C2C50);
  uint64_t v4 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for TTSLoggedSpeechEvent();
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A67EA614();
  sub_1A68932A0();
  if (v2) {
    return sub_1A6741A24((uint64_t)a1);
  }
  uint64_t v28 = a1;
  uint64_t v10 = v4;
  LOBYTE(v31) = 0;
  *(void *)char v9 = sub_1A6892F80();
  *((void *)v9 + 1) = v11;
  char v36 = 1;
  sub_1A67EA6BC();
  sub_1A6892FC0();
  char v12 = v35;
  long long v13 = v32;
  *((_OWORD *)v9 + 1) = v31;
  *((_OWORD *)v9 + 2) = v13;
  long long v14 = v34;
  *((_OWORD *)v9 + 3) = v33;
  *((_OWORD *)v9 + 4) = v14;
  v9[80] = v12;
  uint64_t v15 = sub_1A68917C0();
  v26[1] = v26;
  uint64_t v27 = v9;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  char v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v31) = 2;
  sub_1A67EB1D8(&qword_1E96C2C60, MEMORY[0x1F418B9C0]);
  sub_1A6892FC0();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v27[v7[6]], v18, v15);
  LOBYTE(v31) = 3;
  int v19 = sub_1A6892FD0();
  uint64_t v20 = (uint64_t)v27;
  *(_DWORD *)&v27[v7[7]] = v19;
  LOBYTE(v31) = 4;
  uint64_t v21 = sub_1A6892F80();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v30);
  uint64_t v24 = (uint64_t *)(v20 + v7[8]);
  *uint64_t v24 = v21;
  v24[1] = v23;
  sub_1A67EA710(v20, v29);
  sub_1A6741A24((uint64_t)v28);
  return sub_1A67EA774(v20);
}

uint64_t sub_1A67E5FF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSLoggedSpeechEvent.init(from:)(a1, a2);
}

uint64_t sub_1A67E6010(void *a1)
{
  return TTSLoggedSpeechEvent.encode(to:)(a1);
}

uint64_t sub_1A67E602C()
{
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  TTSSpeechEvent.hash(into:)();
  sub_1A68917C0();
  sub_1A67EB1D8(&qword_1E96C2C30, MEMORY[0x1F418B9C0]);
  sub_1A6891F20();
  sub_1A6893230();
  swift_bridgeObjectRetain();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67E6140()
{
  return sub_1A6893250();
}

id sub_1A67E6250()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTSSpeechTracer()), sel_init);
  qword_1E96CC3A8 = (uint64_t)result;
  return result;
}

id TTSSpeechTracer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static TTSSpeechTracer.shared.getter()
{
  if (qword_1E96CC3A0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E96CC3A8;

  return v0;
}

uint64_t sub_1A67E636C()
{
  id v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer____lazy_storage___pid);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer____lazy_storage___pid + 4) != 1) {
    return *(unsigned int *)v1;
  }
  uint64_t result = getpid();
  *(_DWORD *)id v1 = result;
  v1[4] = 0;
  return result;
}

uint64_t sub_1A67E63B4()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer____lazy_storage___procName);
  if (*(void *)(v0 + OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer____lazy_storage___procName + 8))
  {
    uint64_t v2 = *v1;
  }
  else
  {
    id v3 = objc_msgSend(self, sel_processInfo);
    id v4 = objc_msgSend(v3, sel_processName);

    uint64_t v2 = sub_1A6892000();
    uint64_t v6 = v5;

    *id v1 = v2;
    v1[1] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1A67E6474()
{
  uint64_t v0 = sub_1A6891CE0();
  sub_1A67495E4(v0, qword_1E96CC3B8);
  sub_1A6748F88(v0, (uint64_t)qword_1E96CC3B8);
  id result = TTSRosebudLogger();
  if (result) {
    return (id)sub_1A6891CF0();
  }
  __break(1u);
  return result;
}

uint64_t static TTSSpeechTracer.eventLog.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96CC3B0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A6891CE0();
  uint64_t v3 = sub_1A6748F88(v2, (uint64_t)qword_1E96CC3B8);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

id TTSSpeechTracer.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer____lazy_storage___pid];
  *(_DWORD *)id v1 = 0;
  v1[4] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer____lazy_storage___procName];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v17 = OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_operationQueue;
  sub_1A677C8A8();
  uint64_t v3 = sub_1A6891E10();
  v16[1] = v16;
  MEMORY[0x1F4188790](v3 - 8);
  id v4 = v0;
  sub_1A6891DF0();
  uint64_t v5 = sub_1A6892890();
  MEMORY[0x1F4188790](v5);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1A67EB1D8((unint64_t *)&unk_1EB67A330, MEMORY[0x1F41AB108]);
  sub_1A6741AD0(&qword_1EB67A2B0);
  sub_1A67EB220(&qword_1EB67A2B8, &qword_1EB67A2B0);
  sub_1A6892B90();
  uint64_t v6 = sub_1A68928A0();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50]);
  *(void *)&v0[v17] = sub_1A68928D0();
  uint64_t v9 = OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_encoder;
  sub_1A6891660();
  swift_allocObject();
  *(void *)&v4[v9] = sub_1A6891650();
  *(void *)&v4[OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_eventQueue] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_eventBufferSize] = 1000;

  uint64_t v10 = (objc_class *)type metadata accessor for TTSSpeechTracer();
  v18.receiver = v4;
  v18.super_class = v10;
  id v11 = objc_msgSendSuper2(&v18, sel_init);
  if (TTSIsInternalBuild())
  {
    char v12 = (void *)sub_1A6891FD0();
    long long v13 = CFNotificationCenterGetDarwinNotifyCenter();
    long long v14 = v12;
    CFNotificationCenterAddObserver(v13, 0, (CFNotificationCallback)sub_1A67E68F8, v14, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  }
  return v11;
}

uint64_t sub_1A67E6920()
{
  return sub_1A6892230();
}

uint64_t sub_1A67E69AC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A67EADE8(0, result, 0xD00000000000003ELL, 0x80000001A68CEAE0);
    sub_1A6741AD0(&qword_1E96C2C98);
    sub_1A67EB220(&qword_1E96C2CA0, &qword_1E96C2C98);
    return sub_1A6892230();
  }
  return result;
}

uint64_t sub_1A67E6B0C(void *a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x58))(&v19);
  uint64_t v4 = v19;
  uint64_t v5 = v20;
  uint64_t v6 = v21;
  uint64_t v7 = v22;
  uint64_t v8 = v23;
  uint64_t v9 = v24;
  uint64_t v10 = v26;
  uint64_t v14 = v25;
  char v11 = v27;
  v17[0] = v19;
  v17[1] = v20;
  v17[2] = v21;
  v17[3] = v22;
  void v17[4] = v23;
  void v17[5] = v24;
  v17[6] = v25;
  v17[7] = v26;
  uint64_t v12 = *MEMORY[0x1E4FBC8C8] & *v3;
  char v18 = v27;
  (*(void (**)(void *, uint64_t, uint64_t))(v12 + 296))(v17, a2, a3);
  return sub_1A67E9768(v4, v5, v6, v7, v8, v9, v14, v10, v11);
}

uint64_t sub_1A67E6DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A67EAFAC(a1, (uint64_t)v39);
  uint64_t result = TTSIsInternalBuild();
  if (result)
  {
    sub_1A67EAFAC((uint64_t)v39, (uint64_t)v40);
    if (v45 == 3)
    {
      uint64_t result = v41;
      uint64_t v7 = v42;
      uint64_t v8 = v44;
      if (v41 != v43) {
        goto LABEL_8;
      }
    }
    else
    {
      if (v45 != 1)
      {
LABEL_9:
        uint64_t v9 = sub_1A68917C0();
        char v36 = &v29;
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v11 = *(void *)(v10 + 64);
        MEMORY[0x1F4188790](v9);
        long long v34 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v12 = sub_1A68917B0();
        char v35 = &v29;
        long long v13 = *(void **)&v3[OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_operationQueue];
        MEMORY[0x1F4188790](v12);
        uint64_t v14 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
        uint64_t v33 = v9;
        v15(v14, v14, v9);
        unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 97) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = a2;
        *(void *)(v18 + 24) = a3;
        sub_1A67EAFAC((uint64_t)v39, v18 + 32);
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v14, v9);
        *(void *)(v18 + v17) = v3;
        aBlock[4] = sub_1A67EB0E0;
        aBlock[5] = v18;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1A677469C;
        aBlock[3] = &unk_1EFB80898;
        uint64_t v30 = _Block_copy(aBlock);
        uint64_t v31 = sub_1A6891E10();
        long long v32 = &v29;
        uint64_t v19 = *(void *)(v31 - 8);
        MEMORY[0x1F4188790](v31);
        uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
        id v22 = v13;
        swift_bridgeObjectRetain();
        sub_1A67EB18C((uint64_t)v39);
        uint64_t v23 = v3;
        sub_1A6891DF0();
        uint64_t v24 = sub_1A6891DE0();
        uint64_t v29 = (uint64_t)&v29;
        uint64_t v25 = *(void *)(v24 - 8);
        MEMORY[0x1F4188790](v24);
        char v27 = (char *)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v37 = MEMORY[0x1E4FBC860];
        sub_1A67EB1D8((unint64_t *)&qword_1E96C1600, MEMORY[0x1F41AAF38]);
        sub_1A6741AD0(&qword_1E96C1618);
        sub_1A67EB220((unint64_t *)&unk_1E96C1620, &qword_1E96C1618);
        sub_1A6892B90();
        uint64_t v28 = v30;
        MEMORY[0x1AD0BF980](0, v21, v27, v30);
        _Block_release(v28);

        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v31);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v33);
        return swift_release();
      }
      uint64_t result = v40[0];
      uint64_t v7 = v40[1];
      uint64_t v8 = v42;
      if (v40[0] != v41)
      {
LABEL_8:
        uint64_t result = sub_1A6893120();
        if (result) {
          return result;
        }
        goto LABEL_9;
      }
    }
    if (v7 == v8) {
      return result;
    }
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A67E7298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v10 = type metadata accessor for TTSLoggedSpeechEvent();
  v46[0] = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  long long v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  unint64_t v16 = (void *)((char *)v46 - v15);
  unint64_t v17 = (char *)v46 + *(int *)(v14 + 24) - v15;
  uint64_t v18 = sub_1A68917C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a4, v18);
  swift_bridgeObjectRetain();
  sub_1A67EB18C(a3);
  LODWORD(v17) = sub_1A67E636C();
  uint64_t v19 = sub_1A67E63B4();
  uint64_t v21 = v20;
  *unint64_t v16 = a1;
  v16[1] = a2;
  sub_1A67EAFAC(a3, (uint64_t)(v16 + 2));
  *(_DWORD *)((char *)v16 + *(int *)(v10 + 28)) = v17;
  id v22 = (void *)((char *)v16 + *(int *)(v10 + 32));
  *id v22 = v19;
  v22[1] = v21;
  uint64_t v23 = *(void *)(a5 + OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_eventBufferSize);
  uint64_t v24 = (unint64_t *)(a5 + OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_eventQueue);
  swift_beginAccess();
  sub_1A67EA710((uint64_t)v16, (uint64_t)v13);
  unint64_t v25 = *v24;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v24 = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v25 = sub_1A67E82D0(0, *(void *)(v25 + 16) + 1, 1, v25);
    *uint64_t v24 = v25;
  }
  unint64_t v28 = *(void *)(v25 + 16);
  unint64_t v27 = *(void *)(v25 + 24);
  if (v28 >= v27 >> 1)
  {
    unint64_t v25 = sub_1A67E82D0(v27 > 1, v28 + 1, 1, v25);
    *uint64_t v24 = v25;
  }
  *(void *)(v25 + 16) = v28 + 1;
  sub_1A67ED82C((uint64_t)v13, v25+ ((*(unsigned __int8 *)(v46[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46[0] + 80))+ *(void *)(v46[0] + 72) * v28);
  uint64_t v29 = *(void *)(*v24 + 16);
  if (v23 < v29)
  {
    if (!v29)
    {
      __break(1u);
LABEL_20:
      swift_once();
LABEL_13:
      uint64_t v38 = sub_1A6891CE0();
      sub_1A6748F88(v38, (uint64_t)qword_1E96CC3B8);
      os_log_type_t v39 = sub_1A6892870();
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1A6891CC0();
      os_log_type_t v41 = v39;
      if (os_log_type_enabled(v40, v39))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = v28;
        uint64_t v44 = swift_slowAlloc();
        v47[0] = v44;
        *(_DWORD *)uint64_t v42 = 136315138;
        v46[0] = v42 + 4;
        swift_bridgeObjectRetain();
        v46[1] = sub_1A673F908(v43, v10, v47);
        sub_1A6892A50();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A66D3000, v40, v41, "%s", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0C1C50](v44, -1, -1);
        MEMORY[0x1AD0C1C50](v42, -1, -1);
        sub_1A67C7908(v23, a5);
      }
      else
      {
        sub_1A67C7908(v23, a5);
        swift_bridgeObjectRelease_n();
      }

      return sub_1A67EA774((uint64_t)v16);
    }
    sub_1A67EDA2C(0, 1);
  }
  swift_endAccess();
  if ((TTSIsBaseSystem() & 1) == 0)
  {
    uint64_t v30 = *(uint64_t (**)(uint64_t))(*(void *)*sub_1A6811510() + 120);
    uint64_t v31 = swift_retain();
    long long v32 = (void *)v30(v31);
    swift_release();
    sub_1A6891BC0();

    uint64_t v33 = *(void *)(v47[0] + 16);
    swift_bridgeObjectRelease();
    if (v33 || (objc_msgSend(self, sel_shouldLogSensitiveSpeech) & 1) != 0)
    {
      sub_1A67ED890(&qword_1E96C2CC8);
      swift_retain();
      uint64_t v23 = sub_1A6891640();
      a5 = v34;
      swift_release();
      uint64_t v35 = sub_1A6892070();
      MEMORY[0x1F4188790](v35 - 8);
      sub_1A6892060();
      uint64_t v36 = sub_1A6892020();
      if (!v37)
      {
        sub_1A67EA774((uint64_t)v16);
        return sub_1A67C7908(v23, a5);
      }
      unint64_t v28 = v36;
      unint64_t v10 = v37;
      if (qword_1E96CC3B0 == -1) {
        goto LABEL_13;
      }
      goto LABEL_20;
    }
  }
  return sub_1A67EA774((uint64_t)v16);
}

uint64_t sub_1A67E7814(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTSLoggedSpeechEvent();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_eventQueue);
  swift_beginAccess();
  uint64_t result = *v6;
  uint64_t v8 = *(void *)(*v6 + 16);
  if (v8)
  {
    uint64_t v9 = OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_encoder;
    uint64_t v10 = result + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v33 = *(void *)(v3 + 72);
    v25[0] = result;
    swift_bridgeObjectRetain();
    *(void *)&long long v11 = 136315138;
    long long v26 = v11;
    v25[1] = MEMORY[0x1E4FBC840] + 8;
    uint64_t v27 = v2;
    uint64_t v28 = a1;
    uint64_t v29 = v9;
    uint64_t v30 = v5;
    while (1)
    {
      sub_1A67EA710(v10, (uint64_t)v5);
      sub_1A67ED890(&qword_1E96C2CC8);
      swift_retain();
      uint64_t v12 = sub_1A6891640();
      unint64_t v14 = v13;
      swift_release();
      uint64_t v15 = sub_1A6892070();
      MEMORY[0x1F4188790](v15 - 8);
      sub_1A6892060();
      uint64_t v31 = v12;
      unint64_t v32 = v14;
      uint64_t v16 = sub_1A6892020();
      if (!v17) {
        break;
      }
      uint64_t v18 = v16;
      unint64_t v19 = v17;
      if (qword_1E96CC3B0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1A6891CE0();
      sub_1A6748F88(v20, (uint64_t)qword_1E96CC3B8);
      os_log_type_t v21 = sub_1A6892870();
      swift_bridgeObjectRetain();
      id v22 = sub_1A6891CC0();
      if (os_log_type_enabled(v22, v21))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v34 = v24;
        *(_DWORD *)uint64_t v23 = v26;
        swift_bridgeObjectRetain();
        *(void *)(v23 + 4) = sub_1A673F908(v18, v19, &v34);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A66D3000, v22, v21, "%s", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0C1C50](v24, -1, -1);
        MEMORY[0x1AD0C1C50](v23, -1, -1);
        sub_1A67C7908(v31, v32);
      }
      else
      {
        sub_1A67C7908(v31, v32);
        swift_bridgeObjectRelease_n();
      }

      uint64_t v5 = v30;
      sub_1A67EA774((uint64_t)v30);
      v10 += v33;
      if (!--v8) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_1A67C7908(v31, v32);
    sub_1A67EA774((uint64_t)v30);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id TTSSpeechTracer.__deallocating_deinit()
{
  return sub_1A67E8144(type metadata accessor for TTSSpeechTracer);
}

uint64_t sub_1A67E7C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12TextToSpeech18TTSSpeechEventObjc_wrappedEvent;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  char v12 = *(unsigned char *)(v3 + 64);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  return sub_1A67E080C(v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1A67E7CC4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[4];
  long long v18 = *(_OWORD *)(a1 + 5);
  long long v19 = *((_OWORD *)a1 + 1);
  uint64_t v5 = a1[7];
  char v6 = *((unsigned char *)a1 + 64);
  uint64_t v7 = v1 + OBJC_IVAR____TtC12TextToSpeech18TTSSpeechEventObjc_wrappedEvent;
  swift_beginAccess();
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = *(void *)(v7 + 32);
  uint64_t v13 = *(void *)(v7 + 40);
  uint64_t v14 = *(void *)(v7 + 48);
  uint64_t v15 = *(void *)(v7 + 56);
  char v16 = *(unsigned char *)(v7 + 64);
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = v3;
  *(_OWORD *)(v7 + 16) = v19;
  *(void *)(v7 + 32) = v4;
  *(_OWORD *)(v7 + 40) = v18;
  *(void *)(v7 + 56) = v5;
  *(unsigned char *)(v7 + 64) = v6;
  return sub_1A67E9768(v8, v9, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t (*sub_1A67E7D78())()
{
  return j__swift_endAccess;
}

id sub_1A67E7DD4(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  char v4 = *(unsigned char *)(a1 + 64);
  uint64_t v5 = &v3[OBJC_IVAR____TtC12TextToSpeech18TTSSpeechEventObjc_wrappedEvent];
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v7;
  v5[64] = v4;
  v9.receiver = v3;
  v9.super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

id static TTSSpeechEventObjc.make(otherRewrite:from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (objc_class *)type metadata accessor for TTSSpeechEventObjc();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  uint64_t v14 = &v13[OBJC_IVAR____TtC12TextToSpeech18TTSSpeechEventObjc_wrappedEvent];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  *((void *)v14 + 2) = a3;
  *((void *)v14 + 3) = a4;
  *((void *)v14 + 4) = a5;
  *((void *)v14 + 5) = a6;
  *((void *)v14 + 6) = 0;
  *((void *)v14 + 7) = 0;
  v14[64] = 3;
  v16.receiver = v13;
  v16.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v16, sel_init);
}

id static TTSSpeechEventObjc.make(start:)(uint64_t a1, uint64_t a2)
{
  char v4 = (objc_class *)type metadata accessor for TTSSpeechEventObjc();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  long long v6 = &v5[OBJC_IVAR____TtC12TextToSpeech18TTSSpeechEventObjc_wrappedEvent];
  *(void *)long long v6 = a1;
  *((void *)v6 + 1) = a2;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  v6[64] = 4;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, sel_init);
}

void TTSSpeechEventObjc.init()()
{
}

id TTSSpeechEventObjc.__deallocating_deinit()
{
  return sub_1A67E8144(type metadata accessor for TTSSpeechEventObjc);
}

id sub_1A67E8144(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void *sub_1A67E81C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A6741AD0(&qword_1E96C2CD8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A67EACF4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A67E82D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C2CD0);
  uint64_t v10 = *(void *)(type metadata accessor for TTSLoggedSpeechEvent() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1A6892E50();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for TTSLoggedSpeechEvent() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A67ED8D4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t _s12TextToSpeech14TTSSpeechEventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v11 = *(void *)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v16 = *(void *)(a2 + 40);
  uint64_t v17 = *(void *)(a2 + 48);
  uint64_t v18 = *(void *)(a2 + 56);
  int v19 = *(unsigned __int8 *)(a2 + 64);
  v156[0] = *(void *)a1;
  v156[1] = v3;
  v156[2] = v4;
  v156[3] = v5;
  v156[4] = v7;
  v156[5] = v6;
  v156[6] = v8;
  v156[7] = v9;
  char v157 = v10;
  uint64_t v158 = v11;
  uint64_t v159 = v12;
  uint64_t v160 = v14;
  uint64_t v161 = v13;
  uint64_t v162 = v15;
  uint64_t v163 = v16;
  uint64_t v164 = v17;
  uint64_t v165 = v18;
  char v166 = v19;
  switch(v10)
  {
    case 1:
      if (v19 != 1)
      {
        uint64_t v21 = v15;
        uint64_t v22 = v13;
        uint64_t v23 = v16;
        uint64_t v24 = v17;
        uint64_t v25 = v18;
        goto LABEL_73;
      }
      uint64_t v153 = v6;
      uint64_t v131 = v5;
      uint64_t v143 = v4;
      if (v2 != v11 || v3 != v12)
      {
        uint64_t v122 = v2;
        uint64_t v28 = v15;
        uint64_t v29 = v18;
        uint64_t v136 = v8;
        uint64_t v30 = v17;
        uint64_t v147 = v7;
        uint64_t v31 = v13;
        uint64_t v32 = v16;
        char v33 = sub_1A6893120();
        uint64_t v15 = v28;
        uint64_t v2 = v122;
        uint64_t v5 = v131;
        uint64_t v16 = v32;
        uint64_t v13 = v31;
        uint64_t v4 = v143;
        uint64_t v7 = v147;
        uint64_t v17 = v30;
        uint64_t v8 = v136;
        uint64_t v18 = v29;
        if ((v33 & 1) == 0)
        {
          char v78 = 1;
          goto LABEL_109;
        }
      }
      if (v4 == v14 && v5 == v13)
      {
        char v26 = 1;
      }
      else
      {
        uint64_t v129 = v2;
        uint64_t v87 = v15;
        uint64_t v88 = v18;
        uint64_t v141 = v8;
        uint64_t v89 = v17;
        uint64_t v151 = v7;
        uint64_t v90 = v13;
        uint64_t v91 = v16;
        char v92 = sub_1A6893120();
        uint64_t v15 = v87;
        uint64_t v2 = v129;
        uint64_t v16 = v91;
        uint64_t v13 = v90;
        uint64_t v7 = v151;
        uint64_t v17 = v89;
        uint64_t v8 = v141;
        uint64_t v18 = v88;
        char v26 = v92;
      }
      sub_1A67E080C(v11, v12, v14, v13, v15, v16, v17, v18, 1);
      char v93 = 1;
      goto LABEL_102;
    case 2:
      if (v19 != 2) {
        goto LABEL_70;
      }
      uint64_t v148 = v7;
      uint64_t v153 = v6;
      uint64_t v132 = v5;
      uint64_t v144 = v4;
      if (v2 != v11 || v3 != v12)
      {
        uint64_t v123 = v2;
        uint64_t v34 = v15;
        uint64_t v35 = v18;
        uint64_t v137 = v8;
        uint64_t v36 = v17;
        uint64_t v37 = v13;
        uint64_t v38 = v16;
        char v39 = sub_1A6893120();
        uint64_t v15 = v34;
        uint64_t v2 = v123;
        uint64_t v5 = v132;
        uint64_t v16 = v38;
        uint64_t v13 = v37;
        uint64_t v4 = v144;
        uint64_t v7 = v148;
        uint64_t v17 = v36;
        uint64_t v8 = v137;
        uint64_t v18 = v35;
        if ((v39 & 1) == 0) {
          goto LABEL_81;
        }
      }
      if (v4 != v14 || v5 != v13)
      {
        uint64_t v124 = v2;
        uint64_t v40 = v15;
        uint64_t v41 = v18;
        uint64_t v138 = v8;
        uint64_t v42 = v17;
        uint64_t v43 = v13;
        uint64_t v44 = v16;
        char v45 = sub_1A6893120();
        uint64_t v15 = v40;
        uint64_t v2 = v124;
        uint64_t v5 = v132;
        uint64_t v16 = v44;
        uint64_t v13 = v43;
        uint64_t v4 = v144;
        uint64_t v7 = v148;
        uint64_t v17 = v42;
        uint64_t v8 = v138;
        uint64_t v18 = v41;
        if ((v45 & 1) == 0) {
          goto LABEL_81;
        }
      }
      if (v7 != v15 || v153 != v16)
      {
LABEL_81:
        char v78 = 2;
        goto LABEL_109;
      }
      if (v8 == v17 && v9 == v18)
      {
        char v26 = 1;
      }
      else
      {
        uint64_t v112 = v18;
        uint64_t v113 = v17;
        char v114 = sub_1A6893120();
        uint64_t v17 = v113;
        uint64_t v18 = v112;
        char v26 = v114;
      }
      sub_1A67E080C(v11, v12, v14, v13, v148, v153, v17, v18, 2);
      char v116 = 2;
      uint64_t v79 = v2;
      uint64_t v80 = v3;
      uint64_t v81 = v144;
      uint64_t v83 = v132;
      uint64_t v82 = v148;
      uint64_t v85 = v153;
      goto LABEL_103;
    case 3:
      uint64_t v153 = v6;
      if (v19 != 3)
      {
LABEL_70:
        uint64_t v21 = v15;
        uint64_t v22 = v13;
        uint64_t v23 = v16;
        uint64_t v24 = v17;
        uint64_t v25 = v18;
        swift_bridgeObjectRetain();
        goto LABEL_73;
      }
      uint64_t v131 = v5;
      uint64_t v139 = v8;
      uint64_t v143 = v4;
      uint64_t v149 = v7;
      uint64_t v125 = v2;
      if (v2 != v11 || v3 != v12)
      {
        uint64_t v46 = v15;
        uint64_t v47 = v18;
        uint64_t v48 = v17;
        uint64_t v49 = v13;
        uint64_t v50 = v16;
        char v51 = sub_1A6893120();
        uint64_t v15 = v46;
        uint64_t v2 = v125;
        uint64_t v5 = v131;
        uint64_t v16 = v50;
        uint64_t v13 = v49;
        uint64_t v4 = v143;
        uint64_t v7 = v149;
        uint64_t v17 = v48;
        uint64_t v8 = v139;
        uint64_t v18 = v47;
        if ((v51 & 1) == 0) {
          goto LABEL_89;
        }
      }
      if (v4 != v14 || v5 != v13)
      {
        uint64_t v52 = v15;
        uint64_t v53 = v18;
        uint64_t v54 = v17;
        uint64_t v55 = v13;
        uint64_t v56 = v16;
        char v57 = sub_1A6893120();
        uint64_t v15 = v52;
        uint64_t v2 = v125;
        uint64_t v5 = v131;
        uint64_t v16 = v56;
        uint64_t v13 = v55;
        uint64_t v4 = v143;
        uint64_t v7 = v149;
        uint64_t v17 = v54;
        uint64_t v8 = v139;
        uint64_t v18 = v53;
        if ((v57 & 1) == 0)
        {
LABEL_89:
          char v78 = 3;
LABEL_109:
          uint64_t v103 = v11;
          uint64_t v104 = v12;
          uint64_t v105 = v4;
          uint64_t v106 = v5;
          sub_1A67E080C(v103, v104, v14, v13, v15, v16, v17, v18, v78);
          char v115 = v78;
          uint64_t v74 = v2;
          uint64_t v75 = v3;
          uint64_t v76 = v105;
          uint64_t v77 = v106;
          uint64_t v15 = v7;
          uint64_t v16 = v153;
          goto LABEL_113;
        }
      }
      if (v7 == v15 && v153 == v16)
      {
        char v26 = 1;
      }
      else
      {
        uint64_t v94 = v15;
        uint64_t v95 = v18;
        uint64_t v96 = v17;
        uint64_t v97 = v13;
        uint64_t v98 = v16;
        char v99 = sub_1A6893120();
        uint64_t v15 = v94;
        uint64_t v2 = v125;
        uint64_t v16 = v98;
        uint64_t v13 = v97;
        uint64_t v7 = v149;
        uint64_t v17 = v96;
        uint64_t v8 = v139;
        uint64_t v18 = v95;
        char v26 = v99;
      }
      sub_1A67E080C(v11, v12, v14, v13, v15, v16, v17, v18, 3);
      char v93 = 3;
LABEL_102:
      char v116 = v93;
      uint64_t v79 = v2;
      uint64_t v80 = v3;
      uint64_t v81 = v143;
      uint64_t v83 = v131;
      uint64_t v82 = v7;
      uint64_t v85 = v153;
LABEL_103:
      uint64_t v84 = v8;
      uint64_t v86 = v9;
LABEL_104:
      sub_1A67E080C(v79, v80, v81, v83, v82, v85, v84, v86, v116);
      sub_1A67EDC54((uint64_t)v156);
      return v26 & 1;
    case 4:
      uint64_t v58 = v2;
      uint64_t v21 = v15;
      uint64_t v146 = v7;
      uint64_t v22 = v13;
      uint64_t v23 = v16;
      uint64_t v135 = v8;
      uint64_t v24 = v17;
      uint64_t v120 = v9;
      uint64_t v25 = v18;
      if (v19 != 4) {
        goto LABEL_74;
      }
      uint64_t v142 = v4;
      uint64_t v130 = v5;
      uint64_t v152 = v6;
      if (v58 == v11 && v3 == v12)
      {
        char v26 = 1;
        uint64_t v27 = v58;
      }
      else
      {
        uint64_t v127 = v58;
        char v26 = sub_1A6893120();
        uint64_t v17 = v24;
        uint64_t v16 = v23;
        uint64_t v27 = v127;
      }
      sub_1A67E080C(v11, v12, v14, v22, v21, v16, v17, v25, 4);
      char v116 = 4;
      goto LABEL_92;
    case 5:
      if (v19 != 5)
      {
        uint64_t v21 = v15;
        uint64_t v22 = v13;
        uint64_t v23 = v16;
        uint64_t v24 = v17;
        uint64_t v25 = v18;
LABEL_73:
        swift_bridgeObjectRetain();
LABEL_74:
        swift_bridgeObjectRetain();
        uint64_t v18 = v25;
        uint64_t v17 = v24;
        uint64_t v16 = v23;
        uint64_t v13 = v22;
        uint64_t v15 = v21;
        goto LABEL_75;
      }
      uint64_t v145 = v4;
      if (v2 == v11 && v3 == v12) {
        goto LABEL_43;
      }
      uint64_t v150 = v7;
      uint64_t v154 = v6;
      uint64_t v126 = v2;
      uint64_t v133 = v5;
      uint64_t v59 = v15;
      uint64_t v60 = v18;
      uint64_t v140 = v8;
      uint64_t v61 = v17;
      uint64_t v62 = v13;
      uint64_t v63 = v16;
      char v64 = sub_1A6893120();
      uint64_t v15 = v59;
      uint64_t v2 = v126;
      uint64_t v5 = v133;
      uint64_t v16 = v63;
      uint64_t v13 = v62;
      uint64_t v7 = v150;
      uint64_t v6 = v154;
      uint64_t v17 = v61;
      uint64_t v8 = v140;
      uint64_t v18 = v60;
      if (v64)
      {
LABEL_43:
        if (!v5)
        {
          uint64_t v101 = v11;
          uint64_t v102 = v6;
          sub_1A67E080C(v101, v12, v14, v13, v15, v16, v17, v18, 5);
          sub_1A67E080C(v2, v3, v145, 0, v7, v102, v8, v9, 5);
          swift_bridgeObjectRetain();
          sub_1A67EDC54((uint64_t)v156);
          if (v13)
          {
            swift_bridgeObjectRelease();
            char v26 = 0;
            return v26 & 1;
          }
          goto LABEL_120;
        }
        if (v13)
        {
          uint64_t v155 = v6;
          if (v145 == v14 && v5 == v13)
          {
            uint64_t v65 = v11;
            uint64_t v66 = v5;
            sub_1A67E080C(v65, v12, v145, v5, v15, v16, v17, v18, 5);
            sub_1A67E080C(v2, v3, v145, v66, v7, v155, v8, v9, 5);
            goto LABEL_136;
          }
          uint64_t v134 = v5;
          uint64_t v117 = v15;
          uint64_t v118 = v17;
          uint64_t v119 = v18;
          uint64_t v111 = v16;
          char v121 = sub_1A6893120();
          sub_1A67E080C(v11, v12, v14, v13, v117, v111, v118, v119, 5);
          sub_1A67E080C(v2, v3, v145, v134, v7, v155, v8, v9, 5);
          sub_1A67EDC54((uint64_t)v156);
          if (v121)
          {
LABEL_120:
            char v26 = 1;
            return v26 & 1;
          }
          goto LABEL_77;
        }
        uint64_t v109 = v11;
        uint64_t v108 = v6;
        uint64_t v110 = v5;
        sub_1A67E080C(v109, v12, v14, 0, v15, v16, v17, v18, 5);
        char v115 = 5;
        uint64_t v74 = v2;
        uint64_t v75 = v3;
        uint64_t v76 = v145;
        uint64_t v77 = v110;
      }
      else
      {
        uint64_t v107 = v11;
        uint64_t v108 = v154;
        sub_1A67E080C(v107, v12, v14, v13, v15, v16, v17, v60, 5);
        char v115 = 5;
        uint64_t v74 = v126;
        uint64_t v75 = v3;
        uint64_t v76 = v145;
        uint64_t v77 = v133;
      }
      uint64_t v15 = v7;
      uint64_t v16 = v108;
LABEL_113:
      uint64_t v17 = v8;
      uint64_t v18 = v9;
      goto LABEL_76;
    case 6:
      if (v19 != 6) {
        goto LABEL_75;
      }
      sub_1A67EDC54((uint64_t)v156);
      char v26 = ((v2 & 1) == 0) ^ v11;
      return v26 & 1;
    case 7:
      if (v19 != 7) {
        goto LABEL_75;
      }
      sub_1A67EDC54((uint64_t)v156);
      BOOL v67 = v2 == v11 && v3 == v12;
      goto LABEL_60;
    case 8:
      if (v19 != 8) {
        goto LABEL_75;
      }
      uint64_t v68 = v4;
      uint64_t v69 = v5;
      sub_1A67EDC54((uint64_t)v156);
      char v26 = 0;
      if (v2 != v11 || v3 != v12) {
        return v26 & 1;
      }
      BOOL v67 = v68 == v14 && v69 == v13;
LABEL_60:
      char v26 = v67;
      return v26 & 1;
    case 9:
      uint64_t v70 = v4 | v3;
      uint64_t v71 = v4 | v3 | v2 | v5;
      uint64_t v72 = v7 | v6 | v8;
      if (v71 | v72 | v9)
      {
        uint64_t v73 = v70 | v5 | v72 | v9;
        if (v2 == 1 && !v73)
        {
          if (v19 != 9 || v11 != 1) {
            goto LABEL_75;
          }
          goto LABEL_135;
        }
        if (v2 == 2 && !v73)
        {
          if (v19 != 9 || v11 != 2) {
            goto LABEL_75;
          }
LABEL_135:
          if (v14 | v12 | v13 | v15 | v16 | v17 | v18) {
            goto LABEL_75;
          }
          goto LABEL_136;
        }
        if (v2 != 3 || v73)
        {
          if (v2 != 4 || v73)
          {
            if (v2 != 5 || v73)
            {
              if (v2 != 6 || v73)
              {
                if (v19 == 9 && v11 == 7) {
                  goto LABEL_135;
                }
              }
              else if (v19 == 9 && v11 == 6)
              {
                goto LABEL_135;
              }
            }
            else if (v19 == 9 && v11 == 5)
            {
              goto LABEL_135;
            }
          }
          else if (v19 == 9 && v11 == 4)
          {
            goto LABEL_135;
          }
        }
        else if (v19 == 9 && v11 == 3)
        {
          goto LABEL_135;
        }
      }
      else if (v19 == 9 && !(v14 | v12 | v11 | v13 | v15 | v16 | v17 | v18))
      {
LABEL_136:
        sub_1A67EDC54((uint64_t)v156);
        char v26 = 1;
        return v26 & 1;
      }
LABEL_75:
      char v115 = v19;
      uint64_t v74 = v11;
      uint64_t v75 = v12;
      uint64_t v76 = v14;
      uint64_t v77 = v13;
LABEL_76:
      sub_1A67E080C(v74, v75, v76, v77, v15, v16, v17, v18, v115);
      sub_1A67EDC54((uint64_t)v156);
LABEL_77:
      char v26 = 0;
      return v26 & 1;
    default:
      uint64_t v20 = v2;
      uint64_t v21 = v15;
      uint64_t v146 = v7;
      uint64_t v22 = v13;
      uint64_t v23 = v16;
      uint64_t v135 = v8;
      uint64_t v24 = v17;
      uint64_t v120 = v9;
      uint64_t v25 = v18;
      if (v19) {
        goto LABEL_74;
      }
      uint64_t v142 = v4;
      uint64_t v130 = v5;
      uint64_t v152 = v6;
      if (v20 == v11 && v3 == v12)
      {
        char v26 = 1;
        uint64_t v27 = v20;
      }
      else
      {
        uint64_t v128 = v20;
        char v26 = sub_1A6893120();
        uint64_t v16 = v23;
        uint64_t v27 = v128;
      }
      sub_1A67E080C(v11, v12, v14, v22, v21, v16, v24, v25, 0);
      char v116 = 0;
LABEL_92:
      uint64_t v79 = v27;
      uint64_t v80 = v3;
      uint64_t v81 = v142;
      uint64_t v82 = v146;
      uint64_t v83 = v130;
      uint64_t v84 = v135;
      uint64_t v85 = v152;
      uint64_t v86 = v120;
      goto LABEL_104;
  }
}

unint64_t sub_1A67E9128()
{
  unint64_t result = qword_1E96CC3D0;
  if (!qword_1E96CC3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC3D0);
  }
  return result;
}

unint64_t sub_1A67E917C()
{
  unint64_t result = qword_1E96CC3D8;
  if (!qword_1E96CC3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC3D8);
  }
  return result;
}

void type metadata accessor for _NSRange()
{
  if (!qword_1E96C2CC0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E96C2CC0);
    }
  }
}

unint64_t sub_1A67E9228()
{
  unint64_t result = qword_1E96CC3E0;
  if (!qword_1E96CC3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC3E0);
  }
  return result;
}

unint64_t sub_1A67E927C()
{
  unint64_t result = qword_1E96CC3E8;
  if (!qword_1E96CC3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC3E8);
  }
  return result;
}

unint64_t sub_1A67E92D0()
{
  unint64_t result = qword_1E96CC3F0;
  if (!qword_1E96CC3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC3F0);
  }
  return result;
}

unint64_t sub_1A67E9324()
{
  unint64_t result = qword_1E96CC3F8;
  if (!qword_1E96CC3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC3F8);
  }
  return result;
}

unint64_t sub_1A67E9378()
{
  unint64_t result = qword_1E96CC400;
  if (!qword_1E96CC400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC400);
  }
  return result;
}

unint64_t sub_1A67E93CC()
{
  unint64_t result = qword_1E96CC408;
  if (!qword_1E96CC408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC408);
  }
  return result;
}

unint64_t sub_1A67E9420()
{
  unint64_t result = qword_1E96CC410;
  if (!qword_1E96CC410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC410);
  }
  return result;
}

unint64_t sub_1A67E9474()
{
  unint64_t result = qword_1E96CC418;
  if (!qword_1E96CC418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC418);
  }
  return result;
}

unint64_t sub_1A67E94C8()
{
  unint64_t result = qword_1E96CC420;
  if (!qword_1E96CC420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC420);
  }
  return result;
}

unint64_t sub_1A67E951C()
{
  unint64_t result = qword_1E96CC428;
  if (!qword_1E96CC428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC428);
  }
  return result;
}

unint64_t sub_1A67E9570()
{
  unint64_t result = qword_1E96CC430;
  if (!qword_1E96CC430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC430);
  }
  return result;
}

unint64_t sub_1A67E95C4()
{
  unint64_t result = qword_1E96CC438;
  if (!qword_1E96CC438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC438);
  }
  return result;
}

unint64_t sub_1A67E9618()
{
  unint64_t result = qword_1E96CC440;
  if (!qword_1E96CC440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC440);
  }
  return result;
}

unint64_t sub_1A67E966C()
{
  unint64_t result = qword_1E96CC448;
  if (!qword_1E96CC448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC448);
  }
  return result;
}

unint64_t sub_1A67E96C0()
{
  unint64_t result = qword_1E96CC450;
  if (!qword_1E96CC450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC450);
  }
  return result;
}

unint64_t sub_1A67E9714()
{
  unint64_t result = qword_1E96CC458;
  if (!qword_1E96CC458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CC458);
  }
  return result;
}

uint64_t sub_1A67E9768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result = a2;
  switch(a9)
  {
    case 0:
    case 4:
      goto LABEL_4;
    case 1:
    case 5:
      goto LABEL_3;
    case 2:
    case 3:
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for TTSLoggedSpeechEvent()
{
  uint64_t result = qword_1E96CC870;
  if (!qword_1E96CC870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A67E9854()
{
  return 12383;
}

uint64_t sub_1A67E9860(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696F506B63656863 && a2 == 0xEA0000000000746ELL || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756575716E65 && a2 == 0xE700000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A68CECA0 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72776552656C7572 && a2 == 0xEB00000000657469 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776552726568746FLL && a2 == 0xEC00000065746972 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7472617473 && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C537472617473 && a2 == 0xEA00000000006563 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6573756170 && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656D75736572 && a2 == 0xE600000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1886352499 && a2 == 0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A68CECC0 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A68CECE0 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6465766965636572 && a2 == 0xED00007472617453 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6465766965636572 && a2 == 0xEC000000706F7453 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x655272656B72616DLL && a2 == 0xEE00646576656963 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A68CED00)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v5 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v5) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t sub_1A67E9ED4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6673736563637573 && a2 == 0xEC000000796C6C75)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1A6893120();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A67E9F6C()
{
  return 0x6673736563637573;
}

uint64_t sub_1A67E9F8C(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1A6893120();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A67E9FFC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1836020326 && a2 == 0xE400000000000000;
  if (v3 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28532 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A67EA0C0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 7956599 && a2 == 0xE300000000000000;
  if (v3 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1836020326 && a2 == 0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 28532 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A67EA1D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C616E696769726FLL && a2 == 0xE800000000000000;
  if (v3 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEB00000000746E65 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A67EA384(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x686365657073 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1A6893120();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A67EA404()
{
  return 0x686365657073;
}

uint64_t sub_1A67EA418(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6563696C73 && a2 == 0xE500000000000000;
  if (v3 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6563696F76 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t _s12TextToSpeech09TTSLoggedC5EventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_1A6893120(), result = 0, (v5 & 1) != 0))
  {
    char v7 = *(unsigned char *)(a1 + 80);
    long long v8 = *(_OWORD *)(a1 + 32);
    v20[0] = *(_OWORD *)(a1 + 16);
    v20[1] = v8;
    long long v9 = *(_OWORD *)(a1 + 64);
    void v20[2] = *(_OWORD *)(a1 + 48);
    void v20[3] = v9;
    char v21 = v7;
    char v10 = *(unsigned char *)(a2 + 80);
    long long v11 = *(_OWORD *)(a2 + 32);
    v18[0] = *(_OWORD *)(a2 + 16);
    v18[1] = v11;
    long long v12 = *(_OWORD *)(a2 + 64);
    uint64_t v18[2] = *(_OWORD *)(a2 + 48);
    v18[3] = v12;
    char v19 = v10;
    if ((_s12TextToSpeech14TTSSpeechEventO2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v18) & 1) != 0
      && (uint64_t v13 = type metadata accessor for TTSLoggedSpeechEvent(), (sub_1A68917A0() & 1) != 0)
      && *(_DWORD *)(a1 + *(int *)(v13 + 28)) == *(_DWORD *)(a2 + *(int *)(v13 + 28)))
    {
      uint64_t v14 = *(int *)(v13 + 32);
      uint64_t v15 = *(void *)(a1 + v14);
      uint64_t v16 = *(void *)(a1 + v14 + 8);
      uint64_t v17 = (void *)(a2 + v14);
      if (v15 == *v17 && v16 == v17[1])
      {
        return 1;
      }
      else
      {
        return sub_1A6893120();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1A67EA614()
{
  unint64_t result = qword_1E96CC460[0];
  if (!qword_1E96CC460[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CC460);
  }
  return result;
}

unint64_t sub_1A67EA668()
{
  unint64_t result = qword_1E96C2C40;
  if (!qword_1E96C2C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2C40);
  }
  return result;
}

unint64_t sub_1A67EA6BC()
{
  unint64_t result = qword_1E96C2C58;
  if (!qword_1E96C2C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2C58);
  }
  return result;
}

uint64_t sub_1A67EA710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTSLoggedSpeechEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A67EA774(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTSLoggedSpeechEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TTSSpeechTracer()
{
  return self;
}

uint64_t sub_1A67EA7F4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E657665 && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6580592 && a2 == 0xE300000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4E737365636F7270 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A67EA9FC()
{
  if (qword_1E96CC3A0 != -1) {
    swift_once();
  }
  uint64_t v0 = (char *)qword_1E96CC3A8;
  uint64_t result = TTSIsInternalBuild();
  if (result)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC12TextToSpeech15TTSSpeechTracer_operationQueue];
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    aBlock[4] = sub_1A67EDC4C;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A677469C;
    aBlock[3] = &unk_1EFB821D0;
    uint64_t v4 = _Block_copy(aBlock);
    uint64_t v15 = sub_1A6891E10();
    uint64_t v16 = &v14;
    uint64_t v5 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15);
    char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v8 = v2;
    long long v9 = v0;
    sub_1A6891DF0();
    uint64_t v10 = sub_1A6891DE0();
    uint64_t v14 = (uint64_t)&v14;
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x1F4188790](v10);
    uint64_t v13 = (char *)&v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1A67EB1D8((unint64_t *)&qword_1E96C1600, MEMORY[0x1F41AAF38]);
    sub_1A6741AD0(&qword_1E96C1618);
    sub_1A67EB220((unint64_t *)&unk_1E96C1620, &qword_1E96C1618);
    sub_1A6892B90();
    MEMORY[0x1AD0BF980](0, v7, v13, v4);
    _Block_release(v4);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A67EACF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A67EADE8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result == a2)
  {
    return MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = result;
    if (a2 >= result)
    {
      uint64_t v7 = HIBYTE(a4) & 0xF;
      if ((a4 & 0x2000000000000000) == 0) {
        uint64_t v7 = a3 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v16 = v7;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      while (v6 < a2)
      {
        if (v16)
        {
          uint64_t result = sub_1A6892100();
          if (result < 0) {
            goto LABEL_22;
          }
          unint64_t v9 = result;
          if (!result) {
            goto LABEL_23;
          }
          uint64_t v17 = 0;
          MEMORY[0x1AD0C1C70](&v17, 8);
          if (v9 > v17 * v9)
          {
            unint64_t v10 = -(uint64_t)v9 % v9;
            while (v10 > v17 * v9)
            {
              uint64_t v17 = 0;
              MEMORY[0x1AD0C1C70](&v17, 8);
            }
          }
          sub_1A6892120();
          uint64_t v11 = sub_1A6892220();
          uint64_t v13 = v12;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1A67E81C0(0, v4[2] + 1, 1, v4);
            uint64_t v4 = (void *)result;
          }
          unint64_t v15 = v4[2];
          unint64_t v14 = v4[3];
          if (v15 >= v14 >> 1)
          {
            uint64_t result = (uint64_t)sub_1A67E81C0((void *)(v14 > 1), v15 + 1, 1, v4);
            uint64_t v4 = (void *)result;
          }
          v4[2] = v15 + 1;
          id v8 = &v4[2 * v15];
          v8[4] = v11;
          void v8[5] = v13;
        }
        if (++v6 == a2) {
          return (uint64_t)v4;
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A67EAFAC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t sub_1A67EAFD4()
{
  uint64_t v1 = sub_1A68917C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 97) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  sub_1A67E9768(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1A67EB0E0()
{
  uint64_t v1 = *(void *)(sub_1A68917C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 97) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  unint64_t v5 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1A67E7298(v3, v4, v0 + 32, v0 + v2, v5);
}

uint64_t sub_1A67EB174(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A67EB184()
{
  return swift_release();
}

uint64_t sub_1A67EB18C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A67EB1D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A67EB220(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6750AC4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TTSSpeechEventObjc()
{
  return self;
}

unint64_t sub_1A67EB298()
{
  unint64_t result = qword_1E96C2CB0;
  if (!qword_1E96C2CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2CB0);
  }
  return result;
}

uint64_t sub_1A67EB2EC()
{
  return sub_1A67ED890(&qword_1E96C2CB8);
}

uint64_t destroy for TTSSpeechEvent(uint64_t a1)
{
  return sub_1A67E9768(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t initializeWithCopy for TTSSpeechEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1A67E080C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for TTSSpeechEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1A67E080C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1A67E9768(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 initializeWithTake for TTSSpeechEvent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TTSSpeechEvent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1A67E9768(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSSpeechEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 9) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSSpeechEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 247;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A67EB5DC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 8u) {
    return *(unsigned __int8 *)(a1 + 64);
  }
  else {
    return (*(_DWORD *)a1 + 9);
  }
}

uint64_t sub_1A67EB5F4(uint64_t result, unsigned int a2)
{
  if (a2 >= 9)
  {
    *(void *)__n128 result = a2 - 9;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(void *)(result + 56) = 0;
    LOBYTE(a2) = 9;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent()
{
  return &type metadata for TTSSpeechEvent;
}

uint64_t initializeBufferWithCopyOfBuffer for TTSLoggedSpeechEvent(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)a1 = *a2;
    a1 = v23 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[2];
    uint64_t v25 = a2[3];
    uint64_t v8 = a2[4];
    uint64_t v9 = a2[5];
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[7];
    uint64_t v12 = a2[8];
    uint64_t v13 = a2[9];
    char v14 = *((unsigned char *)a2 + 80);
    swift_bridgeObjectRetain();
    sub_1A67E080C(v7, v25, v8, v9, v10, v11, v12, v13, v14);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v25;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(unsigned char *)(a1 + 80) = v14;
    uint64_t v15 = a3[6];
    uint64_t v16 = a1 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_1A68917C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[8];
    *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    char v20 = (void *)(a1 + v19);
    char v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TTSLoggedSpeechEvent(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_1A67E9768(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A68917C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTSLoggedSpeechEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v23 = *(void *)(a2 + 64);
  char v13 = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  sub_1A67E080C(v6, v7, v8, v9, v10, v11, v23, v12, v13);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v23;
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v13;
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1A68917C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v19 = (void *)(a1 + v18);
  char v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTSLoggedSpeechEvent(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  sub_1A67E080C(v5, v6, v7, v8, v9, v10, v12, v11, *(unsigned char *)(a2 + 80));
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  char v21 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v30;
  sub_1A67E9768(v13, v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = a3[6];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1A68917C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TTSLoggedSpeechEvent(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 16);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v11 = sub_1A68917C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for TTSLoggedSpeechEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  char v16 = *(unsigned char *)(a1 + 80);
  long long v17 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v17;
  long long v18 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v18;
  *(unsigned char *)(a1 + 80) = v7;
  sub_1A67E9768(v8, v9, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v19 = a3[6];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1A68917C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSLoggedSpeechEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A67EBCBC);
}

uint64_t sub_1A67EBCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A68917C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TTSLoggedSpeechEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A67EBD80);
}

uint64_t sub_1A67EBD80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A68917C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A67EBE28()
{
  uint64_t result = sub_1A68917C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for TTSSpeechTracer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSSpeechTracer);
}

uint64_t dispatch thunk of TTSSpeechTracer.makeSpeechJobIdentifier()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of TTSSpeechTracer.emit(event:forIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t method lookup function for TTSSpeechEventObjc(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSSpeechEventObjc);
}

unsigned char *storeEnumTagSinglePayload for TTSLoggedSpeechEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67EC088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSLoggedSpeechEvent.CodingKeys()
{
  return &type metadata for TTSLoggedSpeechEvent.CodingKeys;
}

uint64_t sub_1A67EC0C0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A67EC0E0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TTSSpeechEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTSSpeechEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67EC264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.CodingKeys()
{
  return &type metadata for TTSSpeechEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.CheckPointCodingKeys()
{
  return &type metadata for TTSSpeechEvent.CheckPointCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.EnqueueCodingKeys()
{
  return &type metadata for TTSSpeechEvent.EnqueueCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.MarkupConversionCodingKeys()
{
  return &type metadata for TTSSpeechEvent.MarkupConversionCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TTSSpeechEvent.RuleRewriteCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67EC3A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.RuleRewriteCodingKeys()
{
  return &type metadata for TTSSpeechEvent.RuleRewriteCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TTSSpeechEvent.OtherRewriteCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67EC4A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.OtherRewriteCodingKeys()
{
  return &type metadata for TTSSpeechEvent.OtherRewriteCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.StartCodingKeys()
{
  return &type metadata for TTSSpeechEvent.StartCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.StartSliceCodingKeys()
{
  return &type metadata for TTSSpeechEvent.StartSliceCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.PauseCodingKeys()
{
  return &type metadata for TTSSpeechEvent.PauseCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.ResumeCodingKeys()
{
  return &type metadata for TTSSpeechEvent.ResumeCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.StopCodingKeys()
{
  return &type metadata for TTSSpeechEvent.StopCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.FinishedCodingKeys()
{
  return &type metadata for TTSSpeechEvent.FinishedCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.ReceivedFirstBufferCodingKeys()
{
  return &type metadata for TTSSpeechEvent.ReceivedFirstBufferCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.PlayedFirstBufferCodingKeys()
{
  return &type metadata for TTSSpeechEvent.PlayedFirstBufferCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.ReceivedStartCodingKeys()
{
  return &type metadata for TTSSpeechEvent.ReceivedStartCodingKeys;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.ReceivedStopCodingKeys()
{
  return &type metadata for TTSSpeechEvent.ReceivedStopCodingKeys;
}

unsigned char *_s12TextToSpeech14TTSSpeechEventO20CheckPointCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A67EC618);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.MarkerRecievedCodingKeys()
{
  return &type metadata for TTSSpeechEvent.MarkerRecievedCodingKeys;
}

unsigned char *_s12TextToSpeech14TTSSpeechEventO26MarkupConversionCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67EC71CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechEvent.MarkerConversionCodingKeys()
{
  return &type metadata for TTSSpeechEvent.MarkerConversionCodingKeys;
}

unint64_t sub_1A67EC758()
{
  unint64_t result = qword_1E96CC980[0];
  if (!qword_1E96CC980[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CC980);
  }
  return result;
}

unint64_t sub_1A67EC7B0()
{
  unint64_t result = qword_1E96CCB90[0];
  if (!qword_1E96CCB90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CCB90);
  }
  return result;
}

unint64_t sub_1A67EC808()
{
  unint64_t result = qword_1E96CD1A0[0];
  if (!qword_1E96CD1A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CD1A0);
  }
  return result;
}

unint64_t sub_1A67EC860()
{
  unint64_t result = qword_1E96CD6B0[0];
  if (!qword_1E96CD6B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CD6B0);
  }
  return result;
}

unint64_t sub_1A67EC8B8()
{
  unint64_t result = qword_1E96CD8C0[0];
  if (!qword_1E96CD8C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CD8C0);
  }
  return result;
}

unint64_t sub_1A67EC910()
{
  unint64_t result = qword_1E96CDAD0[0];
  if (!qword_1E96CDAD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CDAD0);
  }
  return result;
}

unint64_t sub_1A67EC968()
{
  unint64_t result = qword_1E96CDCE0[0];
  if (!qword_1E96CDCE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CDCE0);
  }
  return result;
}

unint64_t sub_1A67EC9C0()
{
  unint64_t result = qword_1E96CDEF0[0];
  if (!qword_1E96CDEF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CDEF0);
  }
  return result;
}

unint64_t sub_1A67ECA18()
{
  unint64_t result = qword_1E96CE200[0];
  if (!qword_1E96CE200[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CE200);
  }
  return result;
}

unint64_t sub_1A67ECA70()
{
  unint64_t result = qword_1E96CE410[0];
  if (!qword_1E96CE410[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CE410);
  }
  return result;
}

unint64_t sub_1A67ECAC8()
{
  unint64_t result = qword_1E96CE620[0];
  if (!qword_1E96CE620[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CE620);
  }
  return result;
}

unint64_t sub_1A67ECB20()
{
  unint64_t result = qword_1E96CE730;
  if (!qword_1E96CE730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CE730);
  }
  return result;
}

unint64_t sub_1A67ECB78()
{
  unint64_t result = qword_1E96CE738[0];
  if (!qword_1E96CE738[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CE738);
  }
  return result;
}

unint64_t sub_1A67ECBD0()
{
  unint64_t result = qword_1E96CE7C0;
  if (!qword_1E96CE7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CE7C0);
  }
  return result;
}

unint64_t sub_1A67ECC28()
{
  unint64_t result = qword_1E96CE7C8[0];
  if (!qword_1E96CE7C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CE7C8);
  }
  return result;
}

unint64_t sub_1A67ECC80()
{
  unint64_t result = qword_1E96CE850;
  if (!qword_1E96CE850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CE850);
  }
  return result;
}

unint64_t sub_1A67ECCD8()
{
  unint64_t result = qword_1E96CE858[0];
  if (!qword_1E96CE858[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CE858);
  }
  return result;
}

unint64_t sub_1A67ECD30()
{
  unint64_t result = qword_1E96CE8E0;
  if (!qword_1E96CE8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CE8E0);
  }
  return result;
}

unint64_t sub_1A67ECD88()
{
  unint64_t result = qword_1E96CE8E8[0];
  if (!qword_1E96CE8E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CE8E8);
  }
  return result;
}

unint64_t sub_1A67ECDE0()
{
  unint64_t result = qword_1E96CE970;
  if (!qword_1E96CE970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CE970);
  }
  return result;
}

unint64_t sub_1A67ECE38()
{
  unint64_t result = qword_1E96CE978;
  if (!qword_1E96CE978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CE978);
  }
  return result;
}

unint64_t sub_1A67ECE90()
{
  unint64_t result = qword_1E96CEA00;
  if (!qword_1E96CEA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEA00);
  }
  return result;
}

unint64_t sub_1A67ECEE8()
{
  unint64_t result = qword_1E96CEA08[0];
  if (!qword_1E96CEA08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEA08);
  }
  return result;
}

unint64_t sub_1A67ECF40()
{
  unint64_t result = qword_1E96CEA90;
  if (!qword_1E96CEA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEA90);
  }
  return result;
}

unint64_t sub_1A67ECF98()
{
  unint64_t result = qword_1E96CEA98[0];
  if (!qword_1E96CEA98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEA98);
  }
  return result;
}

unint64_t sub_1A67ECFF0()
{
  unint64_t result = qword_1E96CEB20;
  if (!qword_1E96CEB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEB20);
  }
  return result;
}

unint64_t sub_1A67ED048()
{
  unint64_t result = qword_1E96CEB28[0];
  if (!qword_1E96CEB28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEB28);
  }
  return result;
}

unint64_t sub_1A67ED0A0()
{
  unint64_t result = qword_1E96CEBB0;
  if (!qword_1E96CEBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEBB0);
  }
  return result;
}

unint64_t sub_1A67ED0F8()
{
  unint64_t result = qword_1E96CEBB8[0];
  if (!qword_1E96CEBB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEBB8);
  }
  return result;
}

unint64_t sub_1A67ED150()
{
  unint64_t result = qword_1E96CEC40;
  if (!qword_1E96CEC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEC40);
  }
  return result;
}

unint64_t sub_1A67ED1A8()
{
  unint64_t result = qword_1E96CEC48[0];
  if (!qword_1E96CEC48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEC48);
  }
  return result;
}

unint64_t sub_1A67ED200()
{
  unint64_t result = qword_1E96CECD0;
  if (!qword_1E96CECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CECD0);
  }
  return result;
}

unint64_t sub_1A67ED258()
{
  unint64_t result = qword_1E96CECD8[0];
  if (!qword_1E96CECD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CECD8);
  }
  return result;
}

unint64_t sub_1A67ED2B0()
{
  unint64_t result = qword_1E96CED60;
  if (!qword_1E96CED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CED60);
  }
  return result;
}

unint64_t sub_1A67ED308()
{
  unint64_t result = qword_1E96CED68[0];
  if (!qword_1E96CED68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CED68);
  }
  return result;
}

unint64_t sub_1A67ED360()
{
  unint64_t result = qword_1E96CEDF0;
  if (!qword_1E96CEDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEDF0);
  }
  return result;
}

unint64_t sub_1A67ED3B8()
{
  unint64_t result = qword_1E96CEDF8[0];
  if (!qword_1E96CEDF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEDF8);
  }
  return result;
}

unint64_t sub_1A67ED410()
{
  unint64_t result = qword_1E96CEE80;
  if (!qword_1E96CEE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEE80);
  }
  return result;
}

unint64_t sub_1A67ED468()
{
  unint64_t result = qword_1E96CEE88[0];
  if (!qword_1E96CEE88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEE88);
  }
  return result;
}

unint64_t sub_1A67ED4C0()
{
  unint64_t result = qword_1E96CEF10;
  if (!qword_1E96CEF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEF10);
  }
  return result;
}

unint64_t sub_1A67ED518()
{
  unint64_t result = qword_1E96CEF18[0];
  if (!qword_1E96CEF18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEF18);
  }
  return result;
}

unint64_t sub_1A67ED570()
{
  unint64_t result = qword_1E96CEFA0;
  if (!qword_1E96CEFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CEFA0);
  }
  return result;
}

unint64_t sub_1A67ED5C8()
{
  unint64_t result = qword_1E96CEFA8[0];
  if (!qword_1E96CEFA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CEFA8);
  }
  return result;
}

unint64_t sub_1A67ED620()
{
  unint64_t result = qword_1E96CF030;
  if (!qword_1E96CF030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CF030);
  }
  return result;
}

unint64_t sub_1A67ED678()
{
  unint64_t result = qword_1E96CF038[0];
  if (!qword_1E96CF038[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CF038);
  }
  return result;
}

unint64_t sub_1A67ED6D0()
{
  unint64_t result = qword_1E96CF0C0;
  if (!qword_1E96CF0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CF0C0);
  }
  return result;
}

unint64_t sub_1A67ED728()
{
  unint64_t result = qword_1E96CF0C8[0];
  if (!qword_1E96CF0C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CF0C8);
  }
  return result;
}

unint64_t sub_1A67ED780()
{
  unint64_t result = qword_1E96CF150;
  if (!qword_1E96CF150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96CF150);
  }
  return result;
}

unint64_t sub_1A67ED7D8()
{
  unint64_t result = qword_1E96CF158[0];
  if (!qword_1E96CF158[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96CF158);
  }
  return result;
}

uint64_t sub_1A67ED82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTSLoggedSpeechEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A67ED890(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TTSLoggedSpeechEvent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A67ED8D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for TTSLoggedSpeechEvent() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A67EDA2C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1A67E82D0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for TTSLoggedSpeechEvent() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *int v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A67EDC14()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A67EDC4C()
{
  return sub_1A67E7814(*(void *)(v0 + 16));
}

uint64_t sub_1A67EDC54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_1A67E9768(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  sub_1A67E9768(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t TTSMarkup.SpeechDocument.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(a3 + 8))(v3);
}

void static TTSMarkup.SpeechDocument.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unint64_t TTSMarkup.SpeechDocument.attributes.getter()
{
  return sub_1A6742BA0(MEMORY[0x1E4FBC860]);
}

uint64_t TTSMarkup.SpeechDocument.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.SpeechDocument.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.SpeechDocument.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.SpeechDocument._content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.SpeechDocument._content.setter(long long *a1)
{
  uint64_t v3 = v1 + 8;
  sub_1A6741A24(v3);

  return sub_1A673E770(a1, v3);
}

uint64_t (*TTSMarkup.SpeechDocument._content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.SpeechDocument.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.SpeechDocument.init(_:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&v21[0] = MEMORY[0x1E4FBC860];
  unint64_t v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x100))();
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v15 = a2;
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease_n();
    uint64_t v19 = sub_1A6741AD0(&qword_1E96C1D60);
    uint64_t v20 = &protocol witness table for <A> [A];

    *(void *)&long long v18 = v9;
    uint64_t result = sub_1A673E770(&v18, (uint64_t)v21 + 8);
    long long v14 = v21[1];
    *uint64_t v15 = v21[0];
    v15[1] = v14;
    v15[2] = v21[2];
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A6892EB0();
  uint64_t v6 = result;
  uint64_t v15 = a2;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1AD0BFD30](v8, v5);
      }
      else {
        id v10 = *(id *)(v5 + 8 * v8 + 32);
      }
      int64_t v11 = v10;
      sub_1A677BA04((uint64_t)&v16);

      if (v17)
      {
        sub_1A673E770(&v16, (uint64_t)&v18);
        sub_1A673E770(&v18, (uint64_t)&v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1A676207C(0, v9[2] + 1, 1, v9);
        }
        unint64_t v13 = v9[2];
        unint64_t v12 = v9[3];
        if (v13 >= v12 >> 1) {
          uint64_t v9 = sub_1A676207C((void *)(v12 > 1), v13 + 1, 1, v9);
        }
        void v9[2] = v13 + 1;
        sub_1A673E770(&v16, (uint64_t)&v9[5 * v13 + 4]);
      }
      else
      {
        sub_1A6750210((uint64_t)&v16, &qword_1E96C1CE0);
      }
      ++v8;
    }
    while (v6 != v8);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t TTSMarkup.SpeechDocument.init(_:)@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x1E4FBC860];
  return a1();
}

uint64_t TTSMarkup.SpeechDocument.init(ssml:)@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  type metadata accessor for SSMLParser();
  uint64_t v3 = static SSMLParser.parseRootElement(ssml:)();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_1A677BA04((uint64_t)v8);
    if (v9)
    {
      sub_1A6741AD0(&qword_1E96C1CF8);
      if (swift_dynamicCast())
      {
        if ((void)v10)
        {

          long long v13 = v10;
          long long v14 = v11;
          long long v15 = v12;
          uint64_t result = swift_bridgeObjectRelease();
          long long v5 = v14;
          *(_OWORD *)a1 = v13;
          *(_OWORD *)(a1 + 16) = v5;
          *(_OWORD *)(a1 + 32) = v15;
          return result;
        }
      }
      else
      {
        long long v11 = 0u;
        long long v12 = 0u;
        long long v10 = 0u;
      }
    }
    else
    {
      sub_1A6750210((uint64_t)v8, &qword_1E96C1CE0);
      long long v10 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
    }
    sub_1A6750210((uint64_t)&v10, &qword_1E96C2CE0);
    *(void *)&long long v13 = 0;
    *((void *)&v13 + 1) = 0xE000000000000000;
    sub_1A6892C40();
    swift_bridgeObjectRelease();
    *(void *)&long long v13 = 0xD000000000000026;
    *((void *)&v13 + 1) = 0x80000001A68CEA90;
    LOBYTE(v10) = 0;
    SSMLTag.rawValue.getter();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    long long v6 = v13;
    sub_1A6746E24();
    swift_allocError();
    *uint64_t v7 = v6;
    swift_willThrow();
  }
  return swift_bridgeObjectRelease();
}

Swift::String __swiftcall TTSMarkup.SpeechDocument.asSSML()()
{
  uint64_t v0 = TTSMarkupSpeech.ssml.getter((uint64_t)&type metadata for TTSMarkup.SpeechDocument, (uint64_t)&protocol witness table for TTSMarkup.SpeechDocument);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall TTSMarkup.SpeechDocument.asSwiftSpeech()()
{
  type metadata accessor for StringStream();
  uint64_t v0 = StringStream.__allocating_init()();
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 88))(v0);
  uint64_t v3 = v2;
  swift_release();
  uint64_t v4 = v1;
  long long v5 = v3;
  result._object = v5;
  result._uint64_t countAndFlagsBits = v4;
  return result;
}

float sub_1A67EE308()
{
  return 225.0;
}

float sub_1A67EE314()
{
  return 50.0;
}

float sub_1A67EE320()
{
  return 500.0;
}

float sub_1A67EE32C()
{
  return 41.0;
}

Swift::String __swiftcall TTSMarkup.SpeechDocument.asPlainTalk(normalSpeakingRate:minSpeakingRate:maxSpeakingRate:defaultVoiceMidiPitch:)(Swift::Float normalSpeakingRate, Swift::Float minSpeakingRate, Swift::Float maxSpeakingRate, Swift::Float defaultVoiceMidiPitch)
{
  type metadata accessor for StringStream();
  uint64_t v9 = StringStream.__allocating_init()();
  sub_1A6741AD0(&qword_1E96C2AD0);
  uint64_t v20 = v9;
  swift_retain();
  long long v10 = FormattedStream.__allocating_init(_:)((uint64_t)&v20);
  sub_1A67696A4((uint64_t)v10, (uint64_t)&v20);
  sub_1A67EE864((uint64_t)&v21, (uint64_t)v22);
  sub_1A67EE864((uint64_t)v22, (uint64_t)v19);
  *(Swift::Float *)&v19[2] = normalSpeakingRate;
  *(Swift::Float *)&v19[3] = minSpeakingRate;
  *(Swift::Float *)&v19[4] = maxSpeakingRate;
  *(Swift::Float *)&void v19[5] = defaultVoiceMidiPitch;
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C2CF0);
  uint64_t v12 = TTSMarkupVisitor.visit(_:)(v4, v11, (uint64_t)&off_1EFB79588);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 88))(v12);
  long long v15 = v14;
  swift_release();
  swift_release();
  uint64_t v16 = v13;
  uint64_t v17 = v15;
  result._object = v17;
  result._uint64_t countAndFlagsBits = v16;
  return result;
}

uint64_t sub_1A67EE464()
{
  uint64_t v0 = sub_1A6741AD0(&qword_1E96C2CF8);
  sub_1A67495E4(v0, qword_1E96CF1E8);
  sub_1A6748F88(v0, (uint64_t)qword_1E96CF1E8);
  sub_1A6741AD0(&qword_1E96C2D08);
  return sub_1A6891C20();
}

uint64_t static TTSMarkup.SpeechDocument.vocalizerEndingMarkupRegex.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96CF1E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C2CF8);
  uint64_t v3 = sub_1A6748F88(v2, (uint64_t)qword_1E96CF1E8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static TTSMarkup.SpeechDocument.vocalizerEndingMarkupRegex.setter(uint64_t a1)
{
  if (qword_1E96CF1E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C2CF8);
  uint64_t v3 = sub_1A6748F88(v2, (uint64_t)qword_1E96CF1E8);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static TTSMarkup.SpeechDocument.vocalizerEndingMarkupRegex.modify())()
{
  if (qword_1E96CF1E0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A6741AD0(&qword_1E96C2CF8);
  sub_1A6748F88(v0, (uint64_t)qword_1E96CF1E8);
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::String __swiftcall TTSMarkup.SpeechDocument.asVocalizerMarkup(normalVoiceMidi:defaultRate:defaultPitch:defaultVolume:language:)(Swift::Float normalVoiceMidi, Swift::Int defaultRate, Swift::Int defaultPitch, Swift::Int defaultVolume, Swift::String language)
{
  type metadata accessor for StringStream();
  uint64_t v10 = StringStream.__allocating_init()();
  sub_1A6741AD0(&qword_1E96C2AD0);
  v20.i64[0] = v10;
  swift_retain();
  uint64_t v11 = FormattedStream.__allocating_init(_:)((uint64_t)&v20);
  VocalizerMarkupWriter.init(stream:)((uint64_t)v11, &v20);
  Swift::Int v21 = defaultRate;
  Swift::Int v22 = defaultPitch;
  Swift::Int v23 = defaultVolume;
  Swift::Float v24 = normalVoiceMidi;
  uint64_t v12 = sub_1A6741AD0(&qword_1E96C2D00);
  uint64_t v13 = VocalizerMarkupWriter.visit(_:)(v5, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 88))(v13);
  uint64_t v16 = v15;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v17 = v14;
  long long v18 = v16;
  result._object = v18;
  result._uint64_t countAndFlagsBits = v17;
  return result;
}

uint64_t sub_1A67EE864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C2CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TTSMarkup.SpeechDocument()
{
  return &type metadata for TTSMarkup.SpeechDocument;
}

uint64_t sub_1A67EE8DC()
{
  sub_1A6891630();
  swift_allocObject();
  uint64_t v0 = sub_1A6891620();
  type metadata accessor for TTSPronunciationUtils();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = (void *)sub_1A6891FD0();
  uint64_t v4 = (void *)sub_1A6891FD0();
  id v5 = objc_msgSend(v2, sel_URLForResource_withExtension_, v3, v4);

  uint64_t v6 = sub_1A6741AD0(&qword_1E96C2D10);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5)
  {
    uint64_t v9 = sub_1A6891770();
    uint64_t v10 = *(void *)(v9 - 8);
    MEMORY[0x1F4188790](v9);
    uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A6891740();

    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    if (result != 1)
    {
      sub_1A6891750();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      id v14 = objc_allocWithZone((Class)TTSStreamingZipReader);
      long long v15 = (void *)sub_1A6891FD0();
      swift_bridgeObjectRelease();
      uint64_t v16 = (void *)sub_1A6891FD0();
      objc_msgSend(v14, sel_initWithPath_andPassword_, v15, v16);

      return v0;
    }
  }
  else
  {
    uint64_t v17 = sub_1A6891770();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A67EEBF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v45 = a3;
  uint64_t v46 = a8;
  uint64_t v43 = a7;
  uint64_t v44 = a4;
  uint64_t v12 = sub_1A6741AD0(&qword_1E96C2D10);
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
  MEMORY[0x1F4188790](v12 - 8);
  sub_1A6891760();
  uint64_t v14 = sub_1A6891770();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v14) == 1) {
    return sub_1A6750210((uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1E96C2D10);
  }
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v18 = (void *)sub_1A6891700();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  v19((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  if (!v18[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v41 = v18[4];
  uint64_t v42 = v19;
  uint64_t v20 = v18[5];
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v21);
  sub_1A6891760();
  if (v16((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v14) == 1)
  {
    swift_bridgeObjectRelease();
    return sub_1A6750210((uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1E96C2D10);
  }
  uint64_t v22 = sub_1A6891700();
  v42((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v24 = v22 + 16 * v23;
  uint64_t v26 = *(void *)(v24 + 16);
  uint64_t v25 = *(void *)(v24 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v41 == v47 && v20 == v48)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v26 == 0x6C75722E69726973 && v25 == 0xEB00000000626465)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v31 = (uint64_t *)(v43 + 16);
    uint64_t v51 = v45(result);
    unint64_t v52 = v32;
    uint64_t v33 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)v46 + 104))(&v51, a9, a10);
    swift_beginAccess();
    uint64_t *v31 = v33;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v34 = *v31;
    if (!*v31) {
      return sub_1A67C7908(v51, v52);
    }
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1A6892EB0();
      uint64_t v35 = result;
      if (result) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v35)
      {
LABEL_27:
        if (v35 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v36 = 0;
        do
        {
          if ((v34 & 0xC000000000000001) != 0) {
            id v37 = (id)MEMORY[0x1AD0BFD30](v36, v34);
          }
          else {
            id v37 = *(id *)(v34 + 8 * v36 + 32);
          }
          uint64_t v38 = v37;
          ++v36;
          uint64_t v49 = 0x5F69726973;
          unint64_t v50 = 0xE500000000000000;
          sub_1A6892150();
          sub_1A6892150();
          id v39 = objc_msgSend(v38, sel_identifier);
          sub_1A6892000();

          sub_1A6892150();
          swift_bridgeObjectRelease();
          uint64_t v40 = (void *)sub_1A6891FD0();
          swift_bridgeObjectRelease();
          objc_msgSend(v38, sel_setIdentifier_, v40);
        }
        while (v35 != v36);
      }
    }
    swift_bridgeObjectRelease();
    sub_1A67C7908(v51, v52);
    return swift_bridgeObjectRelease();
  }
  char v30 = sub_1A6893120();
  uint64_t result = swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1A67EF100(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(a1 + 32);
  uint64_t v5 = sub_1A6892000();
  uint64_t v7 = v6;
  uint64_t v8 = _Block_copy(a3);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  swift_retain();
  v4(v5, v7, sub_1A67EFDC4, v9);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1A67EF1C0(uint64_t a1)
{
  id v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  uint64_t v2 = sub_1A6891790();

  return v2;
}

uint64_t sub_1A67EF214(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = a2;
  _OWORD v9[4] = a3;
  v9[5] = a4;
  v9[6] = v8;
  void v14[4] = sub_1A67EFC48;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1A67EF100;
  v14[3] = &unk_1EFB808C0;
  uint64_t v10 = _Block_copy(v14);
  swift_bridgeObjectRetain();
  swift_retain();
  id v11 = a4;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_enumerateFiles_, v10);
  _Block_release(v10);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v12;
}

uint64_t sub_1A67EF380(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a8;
  char v45 = a3;
  uint64_t v46 = a7;
  uint64_t v44 = a4;
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C2D18);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PronunciationRuleSet();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v42 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v43 = (uint64_t)&v39 - v15;
  uint64_t v16 = sub_1A6741AD0(&qword_1E96C2D10);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6891760();
  uint64_t v19 = sub_1A6891770();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    return sub_1A6750210((uint64_t)v18, &qword_1E96C2D10);
  }
  uint64_t v40 = v12;
  uint64_t v22 = (void *)sub_1A6891700();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  if (!v22[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v24 = v22[4];
  uint64_t v23 = v22[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1A68920A0();
  sub_1A68920A0();
  char v25 = sub_1A68921F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v40;
  }
  else
  {
    BOOL v27 = v24 == 42 && v23 == 0xE100000000000000;
    uint64_t v26 = v40;
    if (v27)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = sub_1A6893120();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v28 & 1) == 0) {
        return result;
      }
    }
  }
  uint64_t result = sub_1A6892200();
  if (result)
  {
    uint64_t v29 = v45();
    unint64_t v31 = v30;
    sub_1A67EFDCC();
    sub_1A6891610();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v11);
    uint64_t v32 = v43;
    sub_1A6766B20((uint64_t)v10, v43);
    if (*(unsigned char *)(v32 + *(int *)(v11 + 44)) == 1)
    {
      uint64_t v33 = v42;
      unint64_t v34 = (void **)(v41 + 16);
      sub_1A6766854(v32, v42);
      swift_beginAccess();
      uint64_t v35 = *v34;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v34 = v35;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v35 = (void *)sub_1A67EF868(0, v35[2] + 1, 1, v35);
        *unint64_t v34 = v35;
      }
      unint64_t v38 = v35[2];
      unint64_t v37 = v35[3];
      if (v38 >= v37 >> 1)
      {
        uint64_t v35 = (void *)sub_1A67EF868(v37 > 1, v38 + 1, 1, v35);
        *unint64_t v34 = v35;
      }
      v35[2] = v38 + 1;
      sub_1A6766B20(v33, (uint64_t)v35+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v38);
      sub_1A67C7908(v29, v31);
      return sub_1A67668B8(v32);
    }
    else
    {
      sub_1A67668B8(v32);
      return sub_1A67C7908(v29, v31);
    }
  }
  return result;
}

uint64_t sub_1A67EF858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A67EFA3C(a1, a2, a3, a4, *(void **)(v4 + 8));
}

uint64_t sub_1A67EF860(uint64_t a1, uint64_t a2)
{
  return sub_1A67EF214(a1, a2, *(void *)v2, *(void **)(v2 + 8));
}

size_t sub_1A67EF868(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C1DC8);
  uint64_t v10 = *(void *)(type metadata accessor for PronunciationRuleSet() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for PronunciationRuleSet() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

uint64_t sub_1A67EFA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  type metadata accessor for TTSSQLiteReader();
  uint64_t v10 = sub_1A67FBE6C();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  unint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a1;
  void v12[3] = a2;
  v12[4] = v11;
  void v12[5] = v10;
  void v12[6] = a3;
  v12[7] = a4;
  v16[4] = sub_1A67EFE74;
  void v16[5] = v12;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  void v16[2] = sub_1A67EF100;
  v16[3] = &unk_1EFB80960;
  uint64_t v13 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a5, sel_enumerateFiles_, v13);
  swift_release();
  _Block_release(v13);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v14;
}

uint64_t sub_1A67EFBC0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A67EFBF8()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A67EFC48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  return sub_1A67EF380(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[6]);
}

uint64_t sub_1A67EFC58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A67EFC68()
{
  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for TTSEmbeddedResourceRulesetLoader(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

void destroy for TTSEmbeddedResourceRulesetLoader(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for TTSEmbeddedResourceRulesetLoader(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  char v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for TTSEmbeddedResourceRulesetLoader(uint64_t a1, _OWORD *a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for TTSEmbeddedResourceRulesetLoader()
{
  return &type metadata for TTSEmbeddedResourceRulesetLoader;
}

uint64_t sub_1A67EFD8C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A67EFDC4()
{
  return sub_1A67EF1C0(*(void *)(v0 + 16));
}

unint64_t sub_1A67EFDCC()
{
  unint64_t result = qword_1E96C2D20;
  if (!qword_1E96C2D20)
  {
    type metadata accessor for PronunciationRuleSet();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2D20);
  }
  return result;
}

uint64_t sub_1A67EFE24()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A67EFE74(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_1A67EEBF4(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

uint64_t sub_1A67EFEB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1A67EFF58(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1A67F0004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 104);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1A67F00A8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1A67F0154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1A67F01F8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*sub_1A67F02A4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A67F030C()
{
  return swift_retain();
}

uint64_t sub_1A67F0364(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 120));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1A67F03C4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67F042C()
{
  return swift_retain();
}

uint64_t sub_1A67F0484(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 128));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1A67F04E4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A67F054C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1A67F059C(a1, a2);
  return v4;
}

uint64_t sub_1A67F059C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 80);
  int64_t v7 = *(void **)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v19 - v11;
  *(void *)&v3[*(void *)(v5 + 120)] = 0;
  *(void *)&v3[*(void *)(*(void *)v3 + 128)] = 0;
  uint64_t v13 = (void (*)(char *))v7[2];
  uint64_t v19 = v14;
  v13((char *)&v19 - v11);
  uint64_t v20 = a2;
  ((void (*)(char *, uint64_t, uint64_t))v13)(v10, a2, v6);
  LOBYTE(v5) = sub_1A6891FB0();
  uint64_t v15 = (void (*)(char *, uint64_t))v7[1];
  v15(v10, v6);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
  if (v5)
  {
    uint64_t v17 = (void (*)(char *, uint64_t, uint64_t))v7[4];
    v17(&v3[*(void *)(*(void *)v3 + 96)], v19, v6);
    uint64_t v18 = v20;
    ((void (*)(char *, uint64_t, uint64_t))v13)(&v3[*(void *)(*(void *)v3 + 104)], v20, v6);
    v17(&v3[*(void *)(*(void *)v3 + 112)], v18, v6);
    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A67F07EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)v11 - v4;
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v6 = sub_1A6892150();
  (*(void (**)(uint64_t))(*(void *)v1 + 136))(v6);
  sub_1A6893110();
  int64_t v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  v7(v5, v2);
  uint64_t v8 = sub_1A6892150();
  (*(void (**)(uint64_t))(*(void *)v1 + 160))(v8);
  sub_1A6893110();
  v7(v5, v2);
  uint64_t v9 = sub_1A6892150();
  (*(void (**)(uint64_t))(*(void *)v1 + 184))(v9);
  sub_1A6893110();
  v7(v5, v2);
  sub_1A6892150();
  return v11[0];
}

uint64_t IntervalNode.deinit()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v2(v0 + *(void *)(*(void *)v0 + 96), v1);
  v2(v0 + *(void *)(*(void *)v0 + 104), v1);
  v2(v0 + *(void *)(*(void *)v0 + 112), v1);
  swift_release();
  swift_release();
  return v0;
}

uint64_t IntervalNode.__deallocating_deinit()
{
  IntervalNode.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1A67F0B3C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 264))();
}

void *IntervalNode<>.asRange()()
{
  uint64_t v1 = (*(void *(**)(uint64_t *__return_ptr))(*(void *)v0 + 136))(&v5);
  uint64_t v2 = v5;
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, void *))(*(void *)v0 + 160))(&v4, v1);
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else if (v4 + 1 >= v2)
  {
    return (void *)v2;
  }
  __break(1u);
  return result;
}

void *IntervalNode<>.asClosedRange()()
{
  uint64_t v1 = (*(void *(**)(uint64_t *__return_ptr))(*(void *)v0 + 136))(&v5);
  uint64_t v2 = v5;
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, void *))(*(void *)v0 + 160))(&v4, v1);
  if (v4 >= v2) {
    return (void *)v2;
  }
  __break(1u);
  return result;
}

uint64_t static IntervalNode.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  unint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v10 + 136))();
  (*(void (**)(uint64_t))(*(void *)a2 + 136))(v13);
  char v14 = sub_1A6891FC0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  uint64_t v16 = ((uint64_t (*)(char *, uint64_t))v15)(v12, v5);
  if (v14)
  {
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(v16);
    (*(void (**)(uint64_t))(*(void *)a2 + 160))(v17);
    char v18 = sub_1A6891FC0();
    v15(v9, v5);
    v15(v12, v5);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t static IntervalNode.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A67F0FC0(a1, a2, MEMORY[0x1E4FBAFC8]);
}

uint64_t static IntervalNode.<= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A67F0F3C(a1, a2, static IntervalNode.< infix(_:_:));
}

uint64_t type metadata accessor for IntervalNode()
{
  return sub_1A674B1C8();
}

uint64_t static IntervalNode.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A67F0F3C(a1, a2, static IntervalNode.> infix(_:_:));
}

uint64_t sub_1A67F0F3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (a3(a1, a2)) {
    return 1;
  }
  else {
    return static IntervalNode.== infix(_:_:)(a1, a2) & 1;
  }
}

uint64_t static IntervalNode.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A67F0FC0(a1, a2, MEMORY[0x1E4FBAFC0]);
}

uint64_t sub_1A67F0FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *, uint64_t, void))
{
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = (*(uint64_t (**)(void))(*(void *)v11 + 136))();
  (*(void (**)(uint64_t))(*(void *)a2 + 136))(v14);
  char v15 = a3(v13, v10, v6, *(void *)(v3 + 88));
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v10, v6);
  v16(v13, v6);
  return v15 & 1;
}

uint64_t sub_1A67F113C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A67F1158(uint64_t *a1, uint64_t *a2)
{
  return static IntervalNode.< infix(_:_:)(*a1, *a2);
}

uint64_t sub_1A67F1164(uint64_t *a1, uint64_t *a2)
{
  return static IntervalNode.<= infix(_:_:)(*a1, *a2);
}

uint64_t sub_1A67F1170(uint64_t *a1, uint64_t *a2)
{
  return static IntervalNode.>= infix(_:_:)(*a1, *a2);
}

uint64_t sub_1A67F117C(uint64_t *a1, uint64_t *a2)
{
  return static IntervalNode.> infix(_:_:)(*a1, *a2);
}

uint64_t sub_1A67F1188(uint64_t *a1, uint64_t *a2)
{
  return static IntervalNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1A67F1194()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for IntervalNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IntervalNode);
}

uint64_t dispatch thunk of IntervalNode.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

void sub_1A67F127C()
{
}

uint64_t sub_1A67F1290()
{
  MEMORY[0x1AD0BFD80]();

  return swift_deallocClassInstance();
}

uint64_t sub_1A67F12E4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ManagedCriticalState.LockedBuffer();
  uint64_t v4 = sub_1A6892CB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A67F139C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2, v3);
}

void sub_1A67F1434(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t getEnumTagSinglePayload for Lock(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Lock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Lock()
{
  return &type metadata for Lock;
}

uint64_t type metadata accessor for ManagedCriticalState()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A67F1590()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_1E96C1670)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E96C1670);
    }
  }
}

uint64_t EloquenceProsody.rate.getter()
{
  return *(void *)v0;
}

uint64_t EloquenceProsody.rate.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*EloquenceProsody.rate.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceProsody.pitch.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t EloquenceProsody.pitch.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*EloquenceProsody.pitch.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceProsody.volume.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t EloquenceProsody.volume.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*EloquenceProsody.volume.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceMarkupWriter.voiceMinRate.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t EloquenceMarkupWriter.voiceMinRate.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*EloquenceMarkupWriter.voiceMinRate.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceMarkupWriter.voiceMaxRate.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t EloquenceMarkupWriter.voiceMaxRate.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*EloquenceMarkupWriter.voiceMaxRate.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceMarkupWriter.voiceNormalRate.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t EloquenceMarkupWriter.voiceNormalRate.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*EloquenceMarkupWriter.voiceNormalRate.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceMarkupWriter.voiceNormalPitch.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t EloquenceMarkupWriter.voiceNormalPitch.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*EloquenceMarkupWriter.voiceNormalPitch.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceMarkupWriter.voiceNormalVolume.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t EloquenceMarkupWriter.voiceNormalVolume.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*EloquenceMarkupWriter.voiceNormalVolume.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceMarkupWriter.language.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EloquenceMarkupWriter.language.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*EloquenceMarkupWriter.language.modify())(void, void)
{
  return nullsub_19;
}

uint64_t EloquenceMarkupWriter.phonemeMappings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EloquenceMarkupWriter.phonemeMappings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*EloquenceMarkupWriter.phonemeMappings.modify())(void, void)
{
  return nullsub_19;
}

__n128 EloquenceMarkupWriter.defaultProsody.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 40);
  __n128 result = *(__n128 *)(v1 + 24);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  return result;
}

__n128 sub_1A67F189C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = *(void *)(v2 + 48);
    *(_OWORD *)a1 = *(_OWORD *)(v2 + 32);
    *(void *)(a1 + 16) = v3;
    sub_1A67F2A78(0, 1);
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 40);
    __n128 result = *(__n128 *)(v1 + 24);
    *(__n128 *)a1 = result;
    *(void *)(a1 + 16) = v5;
  }
  return result;
}

float EloquenceMarkupWriter.standardVoiceMidiPitch.getter()
{
  return *(float *)(v0 + 80);
}

void EloquenceMarkupWriter.standardVoiceMidiPitch.setter(float a1)
{
  *(float *)(v1 + 80) = a1;
}

uint64_t (*EloquenceMarkupWriter.standardVoiceMidiPitch.modify())(void, void)
{
  return nullsub_19;
}

double EloquenceMarkupWriter.init(stream:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v5 = sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  *(void *)a2 = a1;
  *(_OWORD *)(a2 + 8) = xmmword_1A68A3B00;
  *(_OWORD *)(a2 + 24) = xmmword_1A68A3AF0;
  *(void *)&double result = 92;
  *(_OWORD *)(a2 + 40) = xmmword_1A68A3B10;
  *(void *)(a2 + 56) = 0xE500000000000000;
  *(void *)(a2 + 64) = v5;
  *(void *)(a2 + 72) = v4;
  *(_DWORD *)(a2 + 80) = 1110441984;
  return result;
}

void EloquenceMarkupWriter.visit(_:)()
{
  double v1 = sub_1A685AE4C() * 1000.0;
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18)
  {
    uint64_t v2 = *v0;
    sub_1A68930E0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    (*(void (**)(uint64_t, unint64_t))(*(void *)v2 + 208))(7364640, 0xE300000000000000);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t EloquenceMarkupWriter.visit(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(a1 + 8) == 14)
  {
    sub_1A6763F50(a1, (uint64_t)v11);
  }
  else
  {
    v11[0] = *(unsigned char *)(a1 + 8);
    v10[0] = 0;
    sub_1A6764048();
    char v6 = sub_1A6891FC0();
    sub_1A6763F50(a1, (uint64_t)v11);
    if (v6)
    {
      sub_1A6763FAC((uint64_t)v11);
      sub_1A6763F50(a1, (uint64_t)v10);
      goto LABEL_8;
    }
  }
  if (v12 == 14)
  {
    sub_1A6763FAC((uint64_t)v11);
    sub_1A6763F50(a1, (uint64_t)v10);
    goto LABEL_9;
  }
  v10[0] = v12;
  sub_1A6764048();
  char v7 = sub_1A6891FC0();
  sub_1A6763FAC((uint64_t)v11);
  sub_1A6763F50(a1, (uint64_t)v10);
  if (v7)
  {
LABEL_8:
    sub_1A6763FAC((uint64_t)v10);
LABEL_12:
    (*(void (**)(uint64_t, unint64_t))(**(void **)v3 + 208))(0x203273746020, 0xE600000000000000);
    TTSMarkupVisitor.visit(_:)((void *)(a1 + 16), a2, (uint64_t)&protocol witness table for EloquenceMarkupWriter<A>);
    return (*(uint64_t (**)(uint64_t, unint64_t))(**(void **)v3 + 208))(0x203073746020, 0xE600000000000000);
  }
LABEL_9:
  if (v10[8] == 14) {
    return sub_1A6763FAC((uint64_t)v10);
  }
  sub_1A6764048();
  char v9 = sub_1A6891FC0();
  uint64_t result = sub_1A6763FAC((uint64_t)v10);
  if (v9) {
    goto LABEL_12;
  }
  return result;
}

void EloquenceMarkupWriter.visit(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int8 *)(a1 + 60) << 32);
  if (*(unsigned __int8 *)(a1 + 60) >> 2 > 0x3EuLL)
  {
    uint64_t v6 = 0;
  }
  else
  {
    LODWORD(v46) = *(_DWORD *)(a1 + 56);
    BYTE4(v46) = BYTE4(v5);
    uint64_t v6 = sub_1A67F2078(v2[4], *((float *)v2 + 20));
  }
  unint64_t v7 = *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 52) << 32);
  if (*(unsigned __int8 *)(a1 + 52) == 255)
  {
    uint64_t v8 = 0;
  }
  else
  {
    LODWORD(v46) = *(_DWORD *)(a1 + 48);
    BYTE4(v46) = BYTE4(v7) & 1;
    uint64_t v8 = sub_1A67F2270(v2[1], v2[3], v2[2]);
  }
  unint64_t v9 = *(unsigned int *)(a1 + 64) | ((unint64_t)*(unsigned __int8 *)(a1 + 68) << 32);
  if (*(unsigned __int8 *)(a1 + 68) != 255)
  {
    sub_1A676CAA4();
    LODWORD(v46) = v9;
    BYTE4(v46) = BYTE4(v9) & 1;
    float v10 = sub_1A676CAA4() * (float)v2[5];
    if ((~LODWORD(v10) & 0x7F800000) != 0)
    {
      if (v10 > -9.2234e18)
      {
        if (v10 < 9.2234e18)
        {
          uint64_t v11 = (uint64_t)v10;
          goto LABEL_13;
        }
LABEL_47:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v11 = 0;
LABEL_13:
  unint64_t v12 = v5 >> 34;
  unint64_t v13 = HIDWORD(v9);
  if (HIDWORD(v7) < 0xFF) {
    goto LABEL_21;
  }
  if (v12 >= 0x3F && v13 >= 0xFF)
  {
    TTSMarkupVisitor.visit(_:)((void *)(a1 + 8), a2, (uint64_t)&protocol witness table for EloquenceMarkupWriter<A>);
    return;
  }
  uint64_t v14 = v2[9];
  if (*(void *)(v14 + 16))
  {
    uint64_t v8 = *(void *)(v14 + 32);
LABEL_21:
    if (v12 < 0x3F) {
      goto LABEL_26;
    }
    goto LABEL_22;
  }
  uint64_t v8 = v2[3];
  if (v12 < 0x3F) {
    goto LABEL_26;
  }
LABEL_22:
  uint64_t v15 = v2[9];
  if (*(void *)(v15 + 16)) {
    uint64_t v6 = *(void *)(v15 + 40);
  }
  else {
    uint64_t v6 = v2[4];
  }
LABEL_26:
  uint64_t v16 = (void *)v2[9];
  uint64_t v17 = v2[5];
  uint64_t v18 = v16[2];
  BOOL v20 = v13 > 0xFE || v18 == 0;
  if (v13 >= 0xFF) {
    uint64_t v21 = v2[5];
  }
  else {
    uint64_t v21 = v11;
  }
  if (v13 >= 0xFF && v18)
  {
    BOOL v20 = 0;
    uint64_t v21 = v16[6];
  }
  uint64_t v22 = *v2;
  long long v23 = *(_OWORD *)(v2 + 1);
  uint64_t v25 = v2[3];
  uint64_t v24 = v2[4];
  uint64_t v26 = v2[6];
  long long v27 = *(_OWORD *)(v2 + 7);
  int v28 = *((_DWORD *)v2 + 20);
  uint64_t v29 = v24;
  uint64_t v30 = v2[5];
  uint64_t v31 = v25;
  if (!v20)
  {
    uint64_t v29 = v16[5];
    uint64_t v30 = v16[6];
    uint64_t v31 = v16[4];
  }
  uint64_t v38 = v30;
  uint64_t v45 = v21;
  uint64_t v46 = v22;
  long long v47 = v23;
  *(void *)&long long v48 = v25;
  *((void *)&v48 + 1) = v24;
  *(void *)&long long v49 = v17;
  *((void *)&v49 + 1) = v26;
  long long v50 = v27;
  uint64_t v51 = v16;
  int v52 = v28;
  uint64_t v43 = v8;
  uint64_t v44 = v6;
  if (!v20)
  {
    uint64_t v24 = v16[5];
    uint64_t v17 = v16[6];
    uint64_t v25 = v16[4];
  }
  *(void *)&long long v41 = v25;
  *((void *)&v41 + 1) = v24;
  uint64_t v42 = v17;
  sub_1A67F23A4(&v43, (uint64_t *)&v41);
  sub_1A67F2824(0, 0, v8, v6, v21);
  TTSMarkupVisitor.visit(_:)((void *)(a1 + 8), a2, (uint64_t)&protocol witness table for EloquenceMarkupWriter<A>);
  uint64_t v32 = *v2;
  uint64_t v33 = v2[7];
  uint64_t v34 = v2[8];
  uint64_t v35 = (void *)v2[9];
  int v36 = *((_DWORD *)v2 + 20);
  long long v37 = *(_OWORD *)(v2 + 3);
  long long v47 = *(_OWORD *)(v2 + 1);
  long long v48 = v37;
  long long v49 = *(_OWORD *)(v2 + 5);
  *(void *)&long long v50 = v33;
  *((void *)&v50 + 1) = v34;
  uint64_t v51 = v35;
  int v52 = v36;
  uint64_t v43 = v31;
  uint64_t v44 = v29;
  uint64_t v45 = v38;
  uint64_t v46 = v32;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A67F189C((uint64_t)&v41);
  long long v39 = v41;
  uint64_t v40 = v42;
  sub_1A67F23A4(&v43, (uint64_t *)&v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
}

uint64_t sub_1A67F2078(uint64_t a1, float a2)
{
  unsigned int v5 = *((unsigned __int8 *)v2 + 4);
  unint64_t v6 = *v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32);
  sub_1A6748E8C(a2);
  if (v5 >> 6)
  {
    if (v5 >> 6 == 1)
    {
      sub_1A6748EC4(*(float *)&v6);
      return sub_1A67F2078(a1, a2);
    }
    uint64_t v8 = HIDWORD(v6) & 0x3F;
    if (!v8) {
      return sub_1A67F2078(a1, a2);
    }
    if (v8 == 1)
    {
      sub_1A680FC18(-12.0, 12.0, 0.0, 200.0, *(float *)&v6);
      return sub_1A67F2078(a1, a2);
    }
    if (*(float *)&v6 >= 0.0)
    {
      if (*(float *)&v6 <= 0.0) {
        return a1;
      }
      float v9 = sub_1A680FC18(0.0, 100.0, (float)a1, 100.0, *(float *)&v6);
      if ((~LODWORD(v9) & 0x7F800000) != 0)
      {
        if (v9 > -9.2234e18)
        {
          if (v9 < 9.2234e18) {
            return (uint64_t)v9;
          }
LABEL_25:
          __break(1u);
          JUMPOUT(0x1A67F225CLL);
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      float v9 = sub_1A680FC18(-100.0, 0.0, 40.0, (float)a1, *(float *)&v6);
      if ((~LODWORD(v9) & 0x7F800000) != 0)
      {
        if (v9 > -9.2234e18)
        {
          if (v9 >= 9.2234e18)
          {
            __break(1u);
            return 100;
          }
          return (uint64_t)v9;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
  uint64_t result = 40;
  switch((char)v6)
  {
    case 1:
    case 3:
      return sub_1A67F2078(a1, a2);
    case 2:
      return a1;
    case 4:
      return 100;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A67F2270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float v4 = *(float *)v3;
  if ((*(unsigned char *)(v3 + 4) & 1) == 0)
  {
    float v5 = 2.0;
    float v7 = 0.25;
    switch(*(_DWORD *)v3)
    {
      case 1u:
        float v7 = 0.5;
        goto LABEL_6;
      case 2u:
        return a2;
      case 3u:
        goto LABEL_14;
      case 4u:
        float v5 = 4.0;
        goto LABEL_14;
      default:
        goto LABEL_6;
    }
  }
  float v5 = *(float *)v3;
  BOOL v6 = v4 <= 1.0;
  if (v4 >= 1.0)
  {
LABEL_10:
    if (v6) {
      return a2;
    }
LABEL_14:
    float v8 = sub_1A680FC18(1.0, 4.0, (float)a2, (float)a3, v5);
    if ((~LODWORD(v8) & 0x7F800000) != 0)
    {
      if (v8 > -9.2234e18)
      {
        if (v8 < 9.2234e18) {
          return (uint64_t)v8;
        }
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67F2390);
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  float v7 = *(float *)v3;
LABEL_6:
  float v8 = sub_1A680FC18(0.0, 1.0, (float)a1, (float)a2, v7);
  if ((~LODWORD(v8) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v8 <= -9.2234e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  BOOL v6 = v8 <= 9.2234e18;
  if (v8 >= 9.2234e18)
  {
    __break(1u);
    goto LABEL_10;
  }
  return (uint64_t)v8;
}

uint64_t *sub_1A67F23A4(uint64_t *result, uint64_t *a2)
{
  uint64_t v3 = *result;
  uint64_t v4 = result[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[2];
  uint64_t v7 = *v2;
  if (result[1] == a2[1])
  {
    if (v3 == v5) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1A68930E0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    (*(void (**)(uint64_t, unint64_t))(*(void *)v7 + 208))(1651925024, 0xE400000000000000);
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
    if (v3 == v5)
    {
LABEL_3:
      if (v4 == v6) {
        return result;
      }
      goto LABEL_4;
    }
  }
  sub_1A68930E0();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  (*(void (**)(uint64_t, unint64_t))(*(void *)v7 + 208))(1937137696, 0xE400000000000000);
  uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  if (v4 == v6) {
    return result;
  }
LABEL_4:
  sub_1A68930E0();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  (*(void (**)(uint64_t, unint64_t))(*(void *)v7 + 208))(1987469344, 0xE400000000000000);
  return (uint64_t *)swift_bridgeObjectRelease();
}

void EloquenceMarkupWriter.visit(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_1A6891FD0();
  uint64_t v7 = (void *)sub_1A6891FD0();
  id v8 = objc_msgSend(v5, sel_eloquencePhonemesFromIPA_language_, v6, v7);

  if (v8)
  {
    uint64_t v9 = sub_1A6892000();
    uint64_t v11 = v10;

    unint64_t v12 = v2 + 8;
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = *v12;
      uint64_t *v12 = 0x8000000000000000;
      sub_1A6747404(v3, v4, v9, v11, isUniquelyReferenced_nonNull_native);
      uint64_t *v12 = v15;
    }
    else
    {
      sub_1A6763B7C(v9, v11);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = *v2;
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    (*(void (**)(uint64_t, unint64_t))(*(void *)v14 + 208))(5988384, 0xE300000000000000);
    swift_bridgeObjectRelease();
  }
  else if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)*v2 + 208))(v3, v4);
  }
}

uint64_t EloquenceMarkupWriter.visit(_:)(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(**(void **)v1 + 208))(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

unint64_t sub_1A67F2824(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  if (v8 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v9 = result;
  unint64_t v10 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v11 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v12 = v8 + v11;
  if (__OFADD__(v8, v11))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v12 > *(void *)(v7 + 24) >> 1)
  {
    if (v8 <= v12) {
      int64_t v16 = v8 + v11;
    }
    else {
      int64_t v16 = v8;
    }
    uint64_t result = (unint64_t)sub_1A67F2960((char *)result, v16, 1, (char *)v7);
    unint64_t v7 = result;
  }
  unint64_t v17 = v7 + 32;
  uint64_t v18 = (void *)(v7 + 32 + 24 * v9);
  if (!v11) {
    goto LABEL_19;
  }
  uint64_t v19 = *(void *)(v7 + 16);
  BOOL v20 = __OFSUB__(v19, a2);
  uint64_t v21 = v19 - a2;
  if (v20) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v18 + 3);
  uint64_t v22 = (void *)(v17 + 24 * a2);
  if (v18 + 3 != v22 || result >= (unint64_t)&v22[3 * v21]) {
    uint64_t result = (unint64_t)memmove((void *)result, v22, 24 * v21);
  }
  uint64_t v23 = *(void *)(v7 + 16);
  BOOL v20 = __OFADD__(v23, v11);
  uint64_t v24 = v23 + v11;
  if (!v20)
  {
    *(void *)(v7 + 16) = v24;
LABEL_19:
    void *v18 = a3;
    unint64_t v25 = v17 + 24 * v9;
    *(void *)(v25 + 8) = a4;
    *(void *)(v25 + 16) = a5;
    *uint64_t v5 = v7;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_1A67F2960(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C2D28);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 24 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1A67F2A78(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)sub_1A67F2960((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + 24 * v6;
  uint64_t v14 = (const void *)(v4 + 32 + 24 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 24 * v13) {
    uint64_t result = (unint64_t)memmove((void *)result, v14, 24 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for EloquenceProsody()
{
  return &type metadata for EloquenceProsody;
}

uint64_t sub_1A67F2B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1A67F2BA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67F2BF0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A67F2C70(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

__n128 sub_1A67F2D38(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1A67F2D5C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t sub_1A67F2DDC(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 84)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A67F2E24(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 84) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 84) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for EloquenceMarkupWriter()
{
  return sub_1A674B1C8();
}

void TTSMarkup.SpeechText.init(_:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1;
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x178))();
  uint64_t v5 = v4;
  if (v4)
  {
    unint64_t v6 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v6, sel_xmlDeEscaped);

    uint64_t v5 = sub_1A6892000();
    uint64_t v9 = v8;

    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  else
  {

    uint64_t v2 = 0;
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  *a2 = v2;
  a2[1] = v10;
  a2[2] = v5;
  a2[3] = v9;
}

void static TTSMarkup.SpeechText.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

unint64_t TTSMarkup.SpeechText.attributes.getter()
{
  return sub_1A6742BA0(MEMORY[0x1E4FBC860]);
}

uint64_t TTSMarkup.SpeechText.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.SpeechText.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*TTSMarkup.SpeechText.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.SpeechText.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *a3 = 0;
  a3[1] = v3;
  a3[2] = result;
  a3[3] = a2;
  return result;
}

uint64_t TTSMarkup.SpeechText.startingTag.getter()
{
  return 0;
}

uint64_t TTSMarkup.SpeechText.endingTag.getter()
{
  return 0;
}

uint64_t TTSMarkup.SpeechText.ssml.getter()
{
  uint64_t v0 = (void *)sub_1A6891FD0();
  id v1 = objc_msgSend(v0, sel_xmlEscaped);

  uint64_t v2 = sub_1A6892000();
  return v2;
}

uint64_t TTSMarkup.SpeechText.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *((void *)v3 + 2);
  uint64_t v5 = *((void *)v3 + 3);
  long long v7 = *v3;
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  return (*(uint64_t (**)(long long *))(a3 + 32))(&v7);
}

unint64_t TTSMarkup.SpeechText.handle(event:breadcrumb:ssml:)(unint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v5 = *(void *)result;
    uint64_t v6 = *(void *)(result + 8);
    unint64_t v8 = *(void *)(result + 16);
    unint64_t v7 = *(void *)(result + 24);
    if (v8 >> 61 == 1)
    {
      if (*(void *)(result + 16))
      {
        sub_1A6799AC8(*(void *)result, v6, v8);
        goto LABEL_10;
      }
      if (v5 >> 14 < *(void *)(a2 + 16) >> 14)
      {
        __break(1u);
      }
      else
      {
        sub_1A6799AC8(v5, v6, 0);
        uint64_t v9 = sub_1A6892240();
        MEMORY[0x1AD0BF180](v9);
        swift_bridgeObjectRelease();
        uint64_t v10 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
        id v11 = objc_msgSend(v10, sel_xmlDeEscaped);

        sub_1A6892000();
        uint64_t v12 = sub_1A6892240();
        MEMORY[0x1AD0BF180](v12);
        swift_bridgeObjectRelease();
        uint64_t v13 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
        id v14 = objc_msgSend(v13, sel_xmlDeEscaped);

        sub_1A6892000();
        sub_1A6892100();
        swift_bridgeObjectRelease();
        unint64_t v15 = sub_1A6892120();
        sub_1A6892100();
        swift_bridgeObjectRelease();
        uint64_t result = sub_1A6892120();
        if (result >> 14 >= v15 >> 14)
        {
          v18.n128_u64[0] = v15;
          v18.n128_u64[1] = result;
          char v19 = 0;
          sub_1A67F39E8(&v18, v7, &v20);
          sub_1A6799AF4((void *)v5, v6, v8);
          uint64_t v6 = v20.n128_i64[1];
          unint64_t v5 = v20.n128_u64[0];
          unint64_t v7 = v22;
          unint64_t v8 = v21 | 0x2000000000000000;
LABEL_10:
          swift_bridgeObjectRetain();
          uint64_t v16 = v3 + 40;
          do
          {
            unint64_t v17 = *(void (**)(__n128 *))(v16 - 8);
            v20.n128_u64[0] = v5;
            v20.n128_u64[1] = v6;
            unint64_t v21 = v8;
            unint64_t v22 = v7;
            swift_retain();
            sub_1A6799AA0((id)v5, v6, v8);
            v17(&v20);
            swift_release();
            sub_1A6799AF4((void *)v5, v6, v8);
            v16 += 16;
            --v4;
          }
          while (v4);
          sub_1A6799AF4((void *)v5, v6, v8);
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
      return result;
    }
    sub_1A6799AA0(*(id *)result, v6, v8);
    goto LABEL_10;
  }
  return result;
}

void sub_1A67F33EC(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1A67F33FC()
{
  uint64_t v0 = (void *)sub_1A6891FD0();
  id v1 = objc_msgSend(v0, sel_xmlEscaped);

  uint64_t v2 = sub_1A6892000();
  return v2;
}

uint64_t sub_1A67F3464()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A67F346C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1A67F3498())(void, void)
{
  return nullsub_19;
}

void sub_1A67F34BC(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1;
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x178))();
  uint64_t v5 = v4;
  if (v4)
  {
    uint64_t v6 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v6, sel_xmlDeEscaped);

    uint64_t v5 = sub_1A6892000();
    uint64_t v9 = v8;

    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  else
  {

    uint64_t v2 = 0;
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  *a2 = v2;
  a2[1] = v10;
  a2[2] = v5;
  a2[3] = v9;
}

uint64_t _s10SpeechTextVwxx(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s10SpeechTextVwcp(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10SpeechTextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10SpeechTextVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTSMarkup.SpeechText()
{
  return &type metadata for TTSMarkup.SpeechText;
}

uint64_t sub_1A67F3714()
{
  return sub_1A68927D0();
}

uint64_t sub_1A67F3784(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v2);
  sub_1A68923C0();
  return sub_1A6892380();
}

void sub_1A67F3854()
{
  sub_1A68923C0();
  swift_getWitnessTable();
  swift_getWitnessTable();

  JUMPOUT(0x1AD0BF8C0);
}

uint64_t sub_1A67F38E8()
{
  return sub_1A67F3714();
}

uint64_t sub_1A67F3904(void *a1, void *a2, uint64_t a3)
{
  return sub_1A67F3900(*a1, *a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1A67F3918()
{
  v0._uint64_t countAndFlagsBits = sub_1A677C084();
  Array.printByIndex(delimiter:)(v0);
  swift_bridgeObjectRelease();
  sub_1A6892DC0();
  return 0;
}

uint64_t sub_1A67F399C()
{
  return sub_1A67F3918();
}

uint64_t sub_1A67F39AC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for Stack()
{
  return sub_1A674B1C8();
}

uint64_t CoreSynthesizer.Marker.mark.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1A6799AC8(v2, v3, v4);
}

uint64_t CoreSynthesizer.Marker.offset.getter()
{
  return *(void *)(v0 + 24);
}

__n128 sub_1A67F39E8@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unsigned __int8 v3 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *a3 = *a1;
  a3[1].n128_u8[0] = v3;
  a3[1].n128_u64[1] = a2;
  return result;
}

id sub_1A67F3A00@<X0>(void *a1@<X2>, uint64_t *a2@<X8>)
{
  id v6 = objc_msgSend(v2, sel_textRange);
  if (v5) {
    BOOL v7 = a1 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7) {
    objc_msgSend(a1, sel_translateRangeInTransformedString_, v6, v5);
  }
  uint64_t v8 = sub_1A6892810();
  uint64_t v10 = v9;
  char v12 = v11;
  switch((unint64_t)objc_msgSend(v2, sel_mark))
  {
    case 0uLL:
      id v13 = objc_msgSend(v2, sel_phoneme);
      uint64_t v14 = sub_1A6892000();
      uint64_t v16 = v15;

      id result = objc_msgSend(v2, sel_byteSampleOffset);
      *a2 = v14;
      a2[1] = v16;
      uint64_t v18 = 4;
      goto LABEL_16;
    case 1uLL:
      if (v12) {
        goto LABEL_14;
      }
      id result = objc_msgSend(v2, sel_byteSampleOffset);
      *a2 = v8;
      a2[1] = v10;
      a2[2] = 0;
      goto LABEL_17;
    case 2uLL:
      if (v12) {
        goto LABEL_14;
      }
      id result = objc_msgSend(v2, sel_byteSampleOffset);
      *a2 = v8;
      a2[1] = v10;
      uint64_t v18 = 1;
      goto LABEL_16;
    case 3uLL:
      if (v12) {
        goto LABEL_14;
      }
      id result = objc_msgSend(v2, sel_byteSampleOffset);
      *a2 = v8;
      a2[1] = v10;
      uint64_t v18 = 2;
      goto LABEL_16;
    case 4uLL:
      id v19 = objc_msgSend(v2, sel_bookmarkName);
      uint64_t v20 = sub_1A6892000();
      uint64_t v22 = v21;

      id result = objc_msgSend(v2, sel_byteSampleOffset);
      *a2 = v20;
      a2[1] = v22;
      uint64_t v18 = 3;
      goto LABEL_16;
    default:
LABEL_14:
      id result = 0;
      *a2 = 0;
      a2[1] = 0;
      uint64_t v18 = 255;
LABEL_16:
      a2[2] = v18;
LABEL_17:
      a2[3] = (uint64_t)result;
      return result;
  }
}

uint64_t _s6MarkerVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1A6799AC8(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s6MarkerVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_1A6799AC8(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1A6799B1C(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s6MarkerVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1A6799B1C(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s6MarkerVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s6MarkerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Marker()
{
  return &type metadata for CoreSynthesizer.Marker;
}

uint64_t _s6MarkerV4MarkOwxx(uint64_t a1)
{
  return sub_1A6799B1C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s6MarkerV4MarkOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A6799AC8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s6MarkerV4MarkOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A6799AC8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A6799B1C(v6, v7, v8);
  return a1;
}

uint64_t _s6MarkerV4MarkOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A6799B1C(v4, v5, v6);
  return a1;
}

uint64_t _s6MarkerV4MarkOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s6MarkerV4MarkOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)id result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A67F3F30(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A67F3F38(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Marker.Mark()
{
  return &type metadata for CoreSynthesizer.Marker.Mark;
}

uint64_t sub_1A67F3FD0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___SSMLRangeConverterInternal_ssml);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A67F4094(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___SSMLRangeConverterInternal_ssml);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67F40F4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x68))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A67F4150(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x70);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*sub_1A67F41C8())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A67F428C()
{
  uint64_t v1 = (void *)((char *)v0 + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___plainString);
  if (*(void *)((char *)v0 + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___plainString + 8))
  {
    uint64_t v2 = *v1;
  }
  else
  {
    uint64_t v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
    uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v3 + 144))();
    uint64_t v5 = v4;
    swift_release();
    *uint64_t v1 = v2;
    v1[1] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A67F43B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___plainString);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67F43D4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **a1) + 0x80))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A67F4430(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & **a2) + 0x88);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*sub_1A67F44A8(uint64_t *a1))(void *a1)
{
  a1[2] = v1;
  *a1 = sub_1A67F428C();
  a1[1] = v3;
  return sub_1A67F44F0;
}

uint64_t sub_1A67F44F0(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = (void *)(a1[2] + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___plainString);
  *uint64_t v2 = *a1;
  v2[1] = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67F4510()
{
  uint64_t v1 = OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___converter;
  if (*(void *)((char *)v0 + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___converter))
  {
    uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___converter);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for SSMLConverter();
    uint64_t v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
    uint64_t v2 = SSMLConverter.__allocating_init(withSSML:)(v4, v5);
    *(void *)((char *)v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1A67F45BC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___converter) = a1;
  return swift_release();
}

uint64_t (*sub_1A67F45D4(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_1A67F4510();
  return sub_1A67F461C;
}

uint64_t sub_1A67F461C(void *a1)
{
  *(void *)(a1[1] + OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___converter) = *a1;
  return swift_release();
}

id SSMLRangeConverter.__allocating_init(withSSML:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (char *)objc_allocWithZone(v2);
  unsigned __int8 v6 = &v5[OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___plainString];
  *(void *)unsigned __int8 v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v5[OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___converter] = 0;
  uint64_t v7 = &v5[OBJC_IVAR___SSMLRangeConverterInternal_ssml];
  *(void *)uint64_t v7 = a1;
  *((void *)v7 + 1) = a2;
  v9.receiver = v5;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, sel_init);
}

id SSMLRangeConverter.init(withSSML:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___plainString];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v2[OBJC_IVAR___SSMLRangeConverterInternal____lazy_storage___converter] = 0;
  uint64_t v4 = &v2[OBJC_IVAR___SSMLRangeConverterInternal_ssml];
  *(void *)uint64_t v4 = a1;
  *((void *)v4 + 1) = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for SSMLRangeConverter();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for SSMLRangeConverter()
{
  return self;
}

uint64_t sub_1A67F47A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A6891600();
  if (result == a1) {
    return 0;
  }
  uint64_t v6 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!a2) {
    return 0;
  }
  if (v6 == a1) {
    goto LABEL_12;
  }
  if (__OFSUB__(v6, 1))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0xC0))(a1, v6 - 1);
  if (v8) {
    return 0;
  }
  if (__OFSUB__(v7, result))
  {
    __break(1u);
    return 0;
  }
  return result;
}

uint64_t sub_1A67F48B0(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v4 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x68);
  v4();
  sub_1A6892810();
  char v6 = v5;
  uint64_t v7 = swift_bridgeObjectRelease();
  if (v6) {
    return 0;
  }
  ((void (*)(uint64_t))v4)(v7);
  v4();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1A68921C0();
  uint64_t v9 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v4)(v9);
  v4();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1A68921C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 < v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 < 0)
  {
    int v22 = sub_1A6892850();
    id v23 = sub_1A67CC544();
    char v24 = sub_1A67BBF28();
    sub_1A67CC5A0(v22, (uint64_t)v23, v24 & 1, 0xD000000000000079, 0x80000001A68CEE20, 0xD000000000000012, 0x80000001A68CEEA0, 0xD000000000000055, 0x80000001A68CEF30, MEMORY[0x1E4FBC860]);

    return 0;
  }
  ((void (*)(uint64_t))v4)(result);
  uint64_t v11 = sub_1A6892100();
  uint64_t v12 = swift_bridgeObjectRelease();
  if (v10 >= v11)
  {
    int v25 = sub_1A6892850();
    sub_1A6892C40();
    uint64_t v26 = sub_1A6892150();
    ((void (*)(uint64_t))v4)(v26);
    sub_1A6892100();
    swift_bridgeObjectRelease();
    sub_1A68930E0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    sub_1A6892DC0();
    sub_1A6892150();
    sub_1A6892DC0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_1A6892150();
    ((void (*)(uint64_t))v4)(v27);
    sub_1A6892150();
    swift_bridgeObjectRelease();
    id v28 = sub_1A67CC544();
    char v29 = sub_1A67BBF28();
    sub_1A67CC5A0(v25, (uint64_t)v28, v29 & 1, 0xD000000000000079, 0x80000001A68CEE20, 0xD000000000000012, 0x80000001A68CEEA0, 0, 0xE000000000000000, MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();

    return 0;
  }
  (*(void (**)(uint64_t))((*v3 & *v2) + 0x98))(v12);
  uint64_t v13 = SSMLConverter.plainStringRange(from:)(v8, v10);
  char v15 = v14;
  uint64_t v16 = swift_release();
  if (v15) {
    return v13;
  }
  unint64_t v17 = *(void (**)(void))((*v3 & *v2) + 0x80);
  ((void (*)(uint64_t))v17)(v16);
  v17();
  swift_bridgeObjectRelease();
  unint64_t v18 = sub_1A6892120();
  uint64_t v19 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v17)(v19);
  v17();
  swift_bridgeObjectRelease();
  unint64_t v20 = sub_1A6892120();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20 >> 14 < v18 >> 14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  ((void (*)(uint64_t))v17)(result);
  sub_1A6741AD0(&qword_1E96C2D48);
  sub_1A67F4E48();
  sub_1A6748030();
  uint64_t result = sub_1A68929D0();
  if (__OFADD__(result, v21))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v13 = result;
  if (result + v21 >= result) {
    return v13;
  }
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_1A67F4E48()
{
  unint64_t result = qword_1E96C31E0;
  if (!qword_1E96C31E0)
  {
    sub_1A6750AC4(&qword_1E96C2D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C31E0);
  }
  return result;
}

id SSMLRangeConverter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SSMLRangeConverter.init()()
{
}

id SSMLRangeConverter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SSMLRangeConverter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SSMLRangeConverter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SSMLRangeConverter);
}

uint64_t dispatch thunk of SSMLRangeConverter.ssml.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SSMLRangeConverter.ssml.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SSMLRangeConverter.ssml.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SSMLRangeConverter.plainString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SSMLRangeConverter.plainString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SSMLRangeConverter.plainString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SSMLRangeConverter.__allocating_init(withSSML:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of SSMLRangeConverter.stringRange(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

void sub_1A67F5168()
{
  uint64_t v0 = (void *)sub_1A6891FD0();
  id v1 = TTSLocString(v0);

  if (!v1)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v2 = sub_1A6892000();
  uint64_t v4 = v3;

  sub_1A6741AD0(&qword_1E96C1BE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 30049;
  *(void *)(inited + 40) = 0xE200000000000000;
  v162[0] = xmmword_1A689DC50;
  v162[1] = xmmword_1A68A3D30;
  uint64_t v163 = sub_1A68353C0();
  uint64_t v164 = v6;
  char v165 = 0;
  unint64_t v7 = sub_1A67421CC((uint64_t)&unk_1EFB77FF8, &qword_1E96C1C08, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1A67423E8);
  sub_1A6741AD0(&qword_1E96C1BE8);
  swift_arrayDestroy();
  unint64_t v8 = sub_1A67421CC((uint64_t)&unk_1EFB77F48, &qword_1E96C1C00, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))sub_1A67423F0);
  sub_1A6741AD0(&qword_1E96C2D50);
  swift_arrayDestroy();
  sub_1A68370E0(v162, v7, v8, (uint64_t)&unk_1EFB77F98, (uint64_t)&unk_1EFB77FC8, (uint64_t)v160);
  long long v9 = v160[3];
  *(_OWORD *)(inited + 80) = v160[2];
  *(_OWORD *)(inited + 96) = v9;
  *(_OWORD *)(inited + 112) = v160[4];
  *(void *)(inited + 128) = v161;
  long long v10 = v160[1];
  *(_OWORD *)(inited + 48) = v160[0];
  *(_OWORD *)(inited + 64) = v10;
  unint64_t v159 = sub_1A6741DE0(inited);
  sub_1A6741AD0(&qword_1E96C1BF0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1A689FD30;
  uint64_t v12 = swift_allocObject();
  strcpy((char *)(v12 + 16), "ultraLowGain");
  *(unsigned char *)(v12 + 29) = 0;
  *(_WORD *)(v12 + 30) = -5120;
  uint64_t v13 = (void *)sub_1A6891FD0();
  id v14 = TTSLocString(v13);

  if (!v14)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v15 = sub_1A6892000();
  uint64_t v17 = v16;

  *(void *)(v12 + 32) = v15;
  *(void *)(v12 + 40) = v17;
  *(void *)(v12 + 48) = 0x41A00000C1A00000;
  *(_DWORD *)(v12 + 56) = 1056964608;
  *(_OWORD *)(v12 + 64) = xmmword_1A68A3D40;
  *(void *)(v11 + 32) = v12 | 0xC000000000000000;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0x6E696147776F6CLL;
  *(void *)(v18 + 24) = 0xE700000000000000;
  uint64_t v19 = (void *)sub_1A6891FD0();
  id v20 = TTSLocString(v19);

  if (!v20)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v21 = sub_1A6892000();
  uint64_t v23 = v22;

  *(void *)(v18 + 32) = v21;
  *(void *)(v18 + 40) = v23;
  *(void *)(v18 + 48) = 0x41A00000C1A00000;
  *(_DWORD *)(v18 + 56) = 1056964608;
  *(_OWORD *)(v18 + 64) = xmmword_1A68A3D40;
  *(void *)(v11 + 40) = v18 | 0xC000000000000000;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0x6E69614764696DLL;
  *(void *)(v24 + 24) = 0xE700000000000000;
  int v25 = (void *)sub_1A6891FD0();
  id v26 = TTSLocString(v25);

  if (!v26)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v27 = sub_1A6892000();
  uint64_t v29 = v28;

  *(void *)(v24 + 32) = v27;
  *(void *)(v24 + 40) = v29;
  *(void *)(v24 + 48) = 0x41A00000C1A00000;
  *(_DWORD *)(v24 + 56) = 1056964608;
  *(_OWORD *)(v24 + 64) = xmmword_1A68A3D40;
  *(void *)(v11 + 48) = v24 | 0xC000000000000000;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0x6E69614768676968;
  *(void *)(v30 + 24) = 0xE800000000000000;
  uint64_t v31 = (void *)sub_1A6891FD0();
  id v32 = TTSLocString(v31);

  if (!v32)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v33 = sub_1A6892000();
  uint64_t v35 = v34;

  *(void *)(v30 + 32) = v33;
  *(void *)(v30 + 40) = v35;
  *(void *)(v30 + 48) = 0x41A00000C1A00000;
  *(_DWORD *)(v30 + 56) = 1056964608;
  *(_OWORD *)(v30 + 64) = xmmword_1A68A3D40;
  *(void *)(v11 + 56) = v30 | 0xC000000000000000;
  if (TTSIsInternalBuild())
  {
    int v36 = (void *)sub_1A6891FD0();
    id v37 = TTSLocString(v36);

    if (v37)
    {
      uint64_t v38 = swift_allocObject();
      uint64_t v39 = sub_1A6892000();
      uint64_t v41 = v40;

      *(void *)(v38 + 16) = v39;
      *(void *)(v38 + 24) = v41;
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1A689DC40;
      uint64_t v43 = (void *)sub_1A6891FD0();
      id v44 = TTSLocString(v43);

      uint64_t v158 = v2;
      if (v44)
      {
        uint64_t v45 = sub_1A6892000();
        uint64_t v47 = v46;
      }
      else
      {
        uint64_t v45 = 0;
        uint64_t v47 = 0;
      }
      uint64_t v157 = v4;
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v45;
      *(void *)(v48 + 24) = v47;
      uint64_t v156 = v48;
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1A689FD30;
      long long v50 = (void *)sub_1A6891FD0();
      id v51 = TTSLocString(v50);

      if (v51)
      {
        uint64_t v155 = v42;
        uint64_t v52 = swift_allocObject();
        uint64_t v53 = sub_1A6892000();
        uint64_t v55 = v54;

        *(void *)(v52 + 16) = v53;
        *(void *)(v52 + 24) = v55;
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1A689E4C0;
        uint64_t v57 = swift_allocObject();
        strcpy((char *)(v57 + 16), "ultraLowFreq");
        *(unsigned char *)(v57 + 29) = 0;
        *(_WORD *)(v57 + 30) = -5120;
        uint64_t v58 = (void *)sub_1A6891FD0();
        id v59 = TTSLocString(v58);

        if (v59)
        {
          uint64_t v60 = sub_1A6892000();
          uint64_t v62 = v61;

          *(void *)(v57 + 32) = v60;
          *(void *)(v57 + 40) = v62;
          *(void *)(v57 + 48) = 0x437A000041200000;
          *(_DWORD *)(v57 + 56) = 1065353216;
          *(_OWORD *)(v57 + 64) = xmmword_1A68A3D50;
          *(void *)(v56 + 32) = v57 | 0xC000000000000000;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = 0x776F4C6172746C75;
          *(void *)(v63 + 24) = 0xEA00000000005742;
          char v64 = (void *)sub_1A6891FD0();
          id v65 = TTSLocString(v64);

          if (v65)
          {
            uint64_t v66 = sub_1A6892000();
            uint64_t v68 = v67;

            *(void *)(v63 + 32) = v66;
            *(void *)(v63 + 40) = v68;
            *(void *)(v63 + 48) = 0x408000003F000000;
            *(_DWORD *)(v63 + 56) = 1056964608;
            *(_OWORD *)(v63 + 64) = xmmword_1A68A3D60;
            *(void *)(v56 + 40) = v63 | 0xC000000000000000;
            uint64_t v69 = swift_allocObject();
            strcpy((char *)(v69 + 16), "ultraLowBypass");
            *(unsigned char *)(v69 + 31) = -18;
            uint64_t v70 = (void *)sub_1A6891FD0();
            id v71 = TTSLocString(v70);

            if (v71)
            {
              uint64_t v72 = sub_1A6892000();
              uint64_t v74 = v73;

              *(void *)(v69 + 32) = v72;
              *(void *)(v69 + 40) = v74;
              *(void *)(v56 + 48) = v69 | 0x8000000000000000;
              *(void *)(v52 + 32) = v56;
              *(void *)(v49 + 32) = v52 | 0x4000000000000000;
              uint64_t v75 = (void *)sub_1A6891FD0();
              id v76 = TTSLocString(v75);

              if (v76)
              {
                uint64_t v77 = swift_allocObject();
                uint64_t v78 = sub_1A6892000();
                uint64_t v80 = v79;

                *(void *)(v77 + 16) = v78;
                *(void *)(v77 + 24) = v80;
                uint64_t v81 = swift_allocObject();
                *(_OWORD *)(v81 + 16) = xmmword_1A689E4C0;
                uint64_t v82 = swift_allocObject();
                *(void *)(v82 + 16) = 0x71657246776F6CLL;
                *(void *)(v82 + 24) = 0xE700000000000000;
                uint64_t v83 = (void *)sub_1A6891FD0();
                id v84 = TTSLocString(v83);

                if (v84)
                {
                  uint64_t v85 = sub_1A6892000();
                  uint64_t v87 = v86;

                  *(void *)(v82 + 32) = v85;
                  *(void *)(v82 + 40) = v87;
                  *(void *)(v82 + 48) = 0x44BB8000437A0000;
                  *(_DWORD *)(v82 + 56) = 1065353216;
                  *(_OWORD *)(v82 + 64) = xmmword_1A68A3D50;
                  *(void *)(v81 + 32) = v82 | 0xC000000000000000;
                  uint64_t v88 = swift_allocObject();
                  *(void *)(v88 + 16) = 0x5742776F6CLL;
                  *(void *)(v88 + 24) = 0xE500000000000000;
                  uint64_t v89 = (void *)sub_1A6891FD0();
                  id v90 = TTSLocString(v89);

                  if (v90)
                  {
                    uint64_t v91 = sub_1A6892000();
                    uint64_t v93 = v92;

                    *(void *)(v88 + 32) = v91;
                    *(void *)(v88 + 40) = v93;
                    *(void *)(v88 + 48) = 0x408000003F000000;
                    *(_DWORD *)(v88 + 56) = 1056964608;
                    *(_OWORD *)(v88 + 64) = xmmword_1A68A3D60;
                    *(void *)(v81 + 40) = v88 | 0xC000000000000000;
                    uint64_t v94 = swift_allocObject();
                    *(void *)(v94 + 16) = 0x7361707942776F6CLL;
                    *(void *)(v94 + 24) = 0xE900000000000073;
                    uint64_t v95 = (void *)sub_1A6891FD0();
                    id v96 = TTSLocString(v95);

                    if (v96)
                    {
                      uint64_t v97 = sub_1A6892000();
                      uint64_t v99 = v98;

                      *(void *)(v94 + 32) = v97;
                      *(void *)(v94 + 40) = v99;
                      *(void *)(v81 + 48) = v94 | 0x8000000000000000;
                      *(void *)(v77 + 32) = v81;
                      *(void *)(v49 + 40) = v77 | 0x4000000000000000;
                      uint64_t v100 = (void *)sub_1A6891FD0();
                      id v101 = TTSLocString(v100);

                      if (v101)
                      {
                        uint64_t v102 = swift_allocObject();
                        uint64_t v103 = sub_1A6892000();
                        uint64_t v105 = v104;

                        *(void *)(v102 + 16) = v103;
                        *(void *)(v102 + 24) = v105;
                        uint64_t v106 = swift_allocObject();
                        *(_OWORD *)(v106 + 16) = xmmword_1A689E4C0;
                        uint64_t v107 = swift_allocObject();
                        *(void *)(v107 + 16) = 0x7165724664696DLL;
                        *(void *)(v107 + 24) = 0xE700000000000000;
                        uint64_t v108 = (void *)sub_1A6891FD0();
                        id v109 = TTSLocString(v108);

                        if (v109)
                        {
                          uint64_t v110 = sub_1A6892000();
                          uint64_t v112 = v111;

                          *(void *)(v107 + 32) = v110;
                          *(void *)(v107 + 40) = v112;
                          *(void *)(v107 + 48) = 0x457A000044BB8000;
                          *(_DWORD *)(v107 + 56) = 1065353216;
                          *(_OWORD *)(v107 + 64) = xmmword_1A68A3D50;
                          *(void *)(v106 + 32) = v107 | 0xC000000000000000;
                          uint64_t v113 = swift_allocObject();
                          *(void *)(v113 + 16) = 0x574264696DLL;
                          *(void *)(v113 + 24) = 0xE500000000000000;
                          char v114 = (void *)sub_1A6891FD0();
                          id v115 = TTSLocString(v114);

                          if (v115)
                          {
                            uint64_t v116 = sub_1A6892000();
                            uint64_t v118 = v117;

                            *(void *)(v113 + 32) = v116;
                            *(void *)(v113 + 40) = v118;
                            *(void *)(v113 + 48) = 0x408000003F000000;
                            *(_DWORD *)(v113 + 56) = 1056964608;
                            *(_OWORD *)(v113 + 64) = xmmword_1A68A3D60;
                            *(void *)(v106 + 40) = v113 | 0xC000000000000000;
                            uint64_t v119 = swift_allocObject();
                            *(void *)(v119 + 16) = 0x736170794264696DLL;
                            *(void *)(v119 + 24) = 0xE900000000000073;
                            uint64_t v120 = (void *)sub_1A6891FD0();
                            id v121 = TTSLocString(v120);

                            if (v121)
                            {
                              uint64_t v122 = sub_1A6892000();
                              uint64_t v124 = v123;

                              *(void *)(v119 + 32) = v122;
                              *(void *)(v119 + 40) = v124;
                              *(void *)(v106 + 48) = v119 | 0x8000000000000000;
                              *(void *)(v102 + 32) = v106;
                              *(void *)(v49 + 48) = v102 | 0x4000000000000000;
                              uint64_t v125 = (void *)sub_1A6891FD0();
                              id v126 = TTSLocString(v125);

                              if (v126)
                              {
                                uint64_t v127 = swift_allocObject();
                                uint64_t v128 = sub_1A6892000();
                                uint64_t v130 = v129;

                                *(void *)(v127 + 16) = v128;
                                *(void *)(v127 + 24) = v130;
                                uint64_t v131 = swift_allocObject();
                                *(_OWORD *)(v131 + 16) = xmmword_1A689E4C0;
                                uint64_t v132 = swift_allocObject();
                                *(void *)(v132 + 16) = 0x7165724668676968;
                                *(void *)(v132 + 24) = 0xE800000000000000;
                                uint64_t v133 = (void *)sub_1A6891FD0();
                                id v134 = TTSLocString(v133);

                                if (v134)
                                {
                                  uint64_t v135 = sub_1A6892000();
                                  uint64_t v137 = v136;

                                  *(void *)(v132 + 32) = v135;
                                  *(void *)(v132 + 40) = v137;
                                  *(void *)(v132 + 48) = 0x461C4000457A0000;
                                  *(_DWORD *)(v132 + 56) = 1065353216;
                                  *(_OWORD *)(v132 + 64) = xmmword_1A68A3D50;
                                  *(void *)(v131 + 32) = v132 | 0xC000000000000000;
                                  uint64_t v138 = swift_allocObject();
                                  *(void *)(v138 + 16) = 0x574268676968;
                                  *(void *)(v138 + 24) = 0xE600000000000000;
                                  uint64_t v139 = (void *)sub_1A6891FD0();
                                  id v140 = TTSLocString(v139);

                                  if (v140)
                                  {
                                    uint64_t v141 = sub_1A6892000();
                                    uint64_t v143 = v142;

                                    *(void *)(v138 + 32) = v141;
                                    *(void *)(v138 + 40) = v143;
                                    *(void *)(v138 + 48) = 0x408000003F000000;
                                    *(_DWORD *)(v138 + 56) = 1056964608;
                                    *(_OWORD *)(v138 + 64) = xmmword_1A68A3D60;
                                    *(void *)(v131 + 40) = v138 | 0xC000000000000000;
                                    uint64_t v144 = swift_allocObject();
                                    *(void *)(v144 + 16) = 0x6170794268676968;
                                    *(void *)(v144 + 24) = 0xEA00000000007373;
                                    uint64_t v145 = (void *)sub_1A6891FD0();
                                    id v146 = TTSLocString(v145);

                                    if (v146)
                                    {
                                      uint64_t v147 = sub_1A6892000();
                                      uint64_t v149 = v148;

                                      *(void *)(v144 + 32) = v147;
                                      *(void *)(v144 + 40) = v149;
                                      *(void *)(v131 + 48) = v144 | 0x8000000000000000;
                                      *(void *)(v127 + 32) = v131;
                                      *(void *)(v49 + 56) = v127 | 0x4000000000000000;
                                      *(void *)(v156 + 32) = v49;
                                      *(void *)(v155 + 32) = v156;
                                      *(void *)(v38 + 32) = v155;
                                      swift_retain();
                                      uint64_t v11 = (uint64_t)sub_1A67F62C8((char *)1, 5, 1, (char *)v11);
                                      *(void *)(v11 + 16) = 5;
                                      *(void *)(v11 + 64) = v38 | 0x4000000000000000;
                                      swift_release();
                                      uint64_t v4 = v157;
                                      uint64_t v2 = v158;
                                      goto LABEL_28;
                                    }
LABEL_53:
                                    __break(1u);
                                    return;
                                  }
LABEL_52:
                                  __break(1u);
                                  goto LABEL_53;
                                }
LABEL_51:
                                __break(1u);
                                goto LABEL_52;
                              }
LABEL_50:
                              __break(1u);
                              goto LABEL_51;
                            }
LABEL_49:
                            __break(1u);
                            goto LABEL_50;
                          }
LABEL_48:
                          __break(1u);
                          goto LABEL_49;
                        }
LABEL_47:
                        __break(1u);
                        goto LABEL_48;
                      }
LABEL_46:
                      __break(1u);
                      goto LABEL_47;
                    }
LABEL_45:
                    __break(1u);
                    goto LABEL_46;
                  }
LABEL_44:
                  __break(1u);
                  goto LABEL_45;
                }
LABEL_43:
                __break(1u);
                goto LABEL_44;
              }
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_28:
  uint64_t v150 = (void *)sub_1A6891FD0();
  id v151 = TTSLocString(v150);

  if (v151)
  {
    uint64_t v152 = sub_1A6892000();
    uint64_t v154 = v153;
  }
  else
  {
    uint64_t v152 = 0;
    uint64_t v154 = 0;
  }
  sub_1A683C7C4(v2, v4, v159, v11, 0xD000000000000011, 0x80000001A68CF060, v152, v154, (uint64_t)&qword_1E96CF818, 1);
}

uint64_t *sub_1A67F6190()
{
  if (qword_1E96CF810 != -1) {
    swift_once();
  }
  return &qword_1E96CF818;
}

uint64_t static TTSAudioEffect.SimpleEQ.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E96CF810 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1E96CF820;
  uint64_t v3 = qword_1E96CF828;
  uint64_t v4 = qword_1E96CF840;
  char v5 = byte_1E96CF848;
  uint64_t v6 = qword_1E96CF850;
  uint64_t v7 = unk_1E96CF858;
  uint64_t v8 = qword_1E96CF860;
  uint64_t v9 = unk_1E96CF868;
  *(void *)a1 = qword_1E96CF818;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)algn_1E96CF830;
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

char *sub_1A67F62C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C1BF0);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    long long v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A67F63CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A67F641C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A67F645C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

double TTSMarkup.ForEach.init(_:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();

  double result = 0.0;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
  return result;
}

uint64_t static TTSMarkup.ForEach.tag.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E96C2D58;
  return result;
}

uint64_t static TTSMarkup.ForEach.tag.setter(char *a1)
{
  char v1 = *a1;
  uint64_t result = swift_beginAccess();
  byte_1E96C2D58 = v1;
  return result;
}

uint64_t (*static TTSMarkup.ForEach.tag.modify())()
{
  return j__swift_endAccess;
}

uint64_t TTSMarkup.ForEach.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.ForEach.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.ForEach.attributes.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.ForEach._content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.ForEach._content.setter(long long *a1)
{
  uint64_t v3 = v1 + 8;
  sub_1A6741A24(v3);

  return sub_1A673E770(a1, v3);
}

uint64_t (*TTSMarkup.ForEach._content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.ForEach.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.ForEach.init<A>(_:iterationBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  *a5 = sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  v16[7] = a1;
  void v16[2] = a4;
  v16[3] = a2;
  v16[4] = a3;
  uint64_t v10 = sub_1A68923C0();
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C1CF8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_1A67F67D4((void (*)(char *, char *))sub_1A67F67A4, (uint64_t)v16, v10, v11, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v13);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A6741AD0(&qword_1E96C1D60);
  a5[4] = result;
  a5[5] = (unint64_t)&protocol witness table for <A> [A];
  a5[1] = v14;
  return result;
}

uint64_t sub_1A67F67A4()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A67F67D4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1A6892780();
  if (!v18) {
    return sub_1A6892330();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1A6891E70();
  uint64_t v32 = sub_1A6892D60();
  sub_1A6892D00();
  uint64_t v36 = v8;
  uint64_t result = sub_1A6892770();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1A68927F0();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1A6892D40();
      sub_1A68927B0();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t TTSMarkup.ForEach.init(speeches:)@<X0>(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  *a2 = sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  uint64_t result = sub_1A6741AD0(&qword_1E96C1D60);
  a2[4] = result;
  a2[5] = (unint64_t)&protocol witness table for <A> [A];
  a2[1] = a1;
  return result;
}

uint64_t TTSMarkup.ForEach.ssml.getter()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_1A673E63C(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t TTSMarkup.ForEach.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  sub_1A673E63C(v3 + 1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 80))(a1, a2, a3, v7, v8);
}

uint64_t sub_1A67F6CEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E96C2D58;
  return result;
}

uint64_t sub_1A67F6D38()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_1A673E63C(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

void (*sub_1A67F6D94(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTSMarkupSpeech.eventTaps.modify(v2);
  return sub_1A67DE120;
}

double sub_1A67F6E08@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();

  double result = 0.0;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.ForEach()
{
  return &type metadata for TTSMarkup.ForEach;
}

uint64_t TTSMarkup.GenericSpeechElement.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v21[0] = MEMORY[0x1E4FBC860];
  memset(v22, 0, sizeof(v22));
  uint64_t v23 = 0;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  _OWORD v21[3] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8))();
  v21[1] = (*(uint64_t (**)(void))((*v4 & *a1) + 0xD0))();
  void v21[2] = v5;
  unint64_t v6 = (*(uint64_t (**)(void))((*v4 & *a1) + 0x100))();
  unint64_t v7 = v6;
  if (!(v6 >> 62))
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1A6741AD0(&qword_1E96C1D60);
    id v20 = &protocol witness table for <A> [A];

    *(void *)&long long v18 = v11;
    sub_1A67F711C((uint64_t)&v18, (uint64_t)v22);
    sub_1A67F7184(v21, a2);
    return sub_1A67F7194((uint64_t)v21);
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A6892EB0();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x1AD0BFD30](v10, v7);
      }
      else {
        id v12 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      sub_1A677BA04((uint64_t)&v16);

      if (v17)
      {
        sub_1A673E770(&v16, (uint64_t)&v18);
        sub_1A673E770(&v18, (uint64_t)&v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1A676207C(0, v11[2] + 1, 1, v11);
        }
        unint64_t v15 = v11[2];
        unint64_t v14 = v11[3];
        if (v15 >= v14 >> 1) {
          uint64_t v11 = sub_1A676207C((void *)(v14 > 1), v15 + 1, 1, v11);
        }
        void v11[2] = v15 + 1;
        sub_1A673E770(&v16, (uint64_t)&v11[5 * v15 + 4]);
      }
      else
      {
        sub_1A6761FF4((uint64_t)&v16);
      }
      ++v10;
    }
    while (v8 != v10);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A67F711C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A67F7184(void *a1, uint64_t a2)
{
  return _s20GenericSpeechElementVwcp(a2, a1);
}

uint64_t sub_1A67F7194(uint64_t a1)
{
  return a1;
}

uint64_t TTSMarkup.GenericSpeechElement.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.GenericSpeechElement.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.GenericSpeechElement.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

void static TTSMarkup.GenericSpeechElement.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t TTSMarkup.GenericSpeechElement.tag.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSMarkup.GenericSpeechElement.tag.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TTSMarkup.GenericSpeechElement.tag.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.GenericSpeechElement.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.GenericSpeechElement.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*TTSMarkup.GenericSpeechElement.attributes.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.GenericSpeechElement.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A67F7408(v1 + 32, a1);
}

uint64_t TTSMarkup.GenericSpeechElement.content.setter(uint64_t a1)
{
  return sub_1A67F711C(a1, v1 + 32);
}

uint64_t (*TTSMarkup.GenericSpeechElement.content.modify())(void, void)
{
  return nullsub_19;
}

double TTSMarkup.GenericSpeechElement.init(tag:attributes:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(void *)(a4 + 64) = 0;
  *(void *)a4 = v4;
  *(void *)(a4 + 8) = a1;
  *(void *)(a4 + 16) = a2;
  *(void *)(a4 + 24) = a3;
  return result;
}

uint64_t TTSMarkup.GenericSpeechElement.init(tag:attributes:speech:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void *__return_ptr)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(a5 + 48) = 0u;
  *(void *)(a5 + 64) = 0;
  *(void *)a5 = v5;
  *(void *)(a5 + 8) = a1;
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  *(_OWORD *)(a5 + 32) = 0u;
  uint64_t v6 = a5 + 32;
  a4(v8);
  return sub_1A67F711C((uint64_t)v8, v6);
}

uint64_t TTSMarkup.GenericSpeechElement.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(a3 + 96))(v3);
}

uint64_t sub_1A67F73EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A67F73F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1A67F7408(v1 + 32, a1);
}

uint64_t sub_1A67F7408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s20GenericSpeechElementVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    return sub_1A6741A24(a1 + 32);
  }
  return result;
}

uint64_t _s20GenericSpeechElementVwcp(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = (_OWORD *)(a1 + 32);
  unint64_t v7 = a2 + 4;
  uint64_t v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v9;
    (**(void (***)(uint64_t, void *, uint64_t))(v8 - 8))(a1 + 32, v7, v8);
  }
  else
  {
    long long v10 = *((_OWORD *)v7 + 1);
    *uint64_t v6 = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 48) = v10;
    *(void *)(a1 + 64) = v7[4];
  }
  return a1;
}

uint64_t _s20GenericSpeechElementVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)(a1 + 56) = v4;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 32);
    long long v6 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  if (!v4)
  {
    sub_1A6741A24(a1 + 32);
    goto LABEL_7;
  }
  sub_1A67588AC((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t _s20GenericSpeechElementVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    sub_1A6741A24(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for TTSMarkup.GenericSpeechElement()
{
  return &type metadata for TTSMarkup.GenericSpeechElement;
}

uint64_t CoreSynthesizer.Voice.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreSynthesizer.Voice.cannonicId.getter()
{
  uint64_t v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    sub_1A6892000();
    sub_1A6892000();
    sub_1A6748030();
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1A6892AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t CoreSynthesizer.Voice.alternateIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CoreSynthesizer.Voice.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void CoreSynthesizer.Voice.quality.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

void CoreSynthesizer.Voice.gender.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

void CoreSynthesizer.Voice.traits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
}

void *CoreSynthesizer.Voice.traits.setter(void *result)
{
  *(void *)(v1 + 48) = *result;
  return result;
}

uint64_t (*CoreSynthesizer.Voice.traits.modify())(void, void)
{
  return nullsub_19;
}

void CoreSynthesizer.Voice.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

uint64_t CoreSynthesizer.Voice.primaryLocales.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CoreSynthesizer.Voice.secondaryLocales.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CoreSynthesizer.Voice.locales.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();

  return sub_1A679FB1C(v2, v1);
}

uint64_t CoreSynthesizer.Voice.primaryLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_1A6741AD0(&qword_1EB67A238);
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A67F7AA4(v3, (uint64_t)v6);
  uint64_t v7 = sub_1A6891A40();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  }
  sub_1A6750210((uint64_t)v6, &qword_1EB67A238);
  uint64_t result = sub_1A6892E60();
  __break(1u);
  return result;
}

uint64_t sub_1A67F7AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A674CD14(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = sub_1A6891A40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_1A67F9240(result, v5, a1, a2);
    uint64_t v12 = sub_1A6891A40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

id CoreSynthesizer.Voice.synthesisProviderVoice.getter()
{
  return *(id *)(v0 + 80);
}

void CoreSynthesizer.Voice.synthesisProviderVoice.setter(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
}

uint64_t (*CoreSynthesizer.Voice.synthesisProviderVoice.modify())(void, void)
{
  return nullsub_19;
}

unint64_t CoreSynthesizer.Voice.downloadSizeBytes.getter()
{
  return *(unsigned int *)(v0 + 88) | ((unint64_t)*(unsigned __int8 *)(v0 + 92) << 32);
}

uint64_t CoreSynthesizer.Voice.downloadSizeBytes.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 88) = result;
  *(unsigned char *)(v1 + 92) = BYTE4(result) & 1;
  return result;
}

uint64_t (*CoreSynthesizer.Voice.downloadSizeBytes.modify())(void, void)
{
  return nullsub_19;
}

uint64_t sub_1A67F7C2C()
{
  return 0x100000000;
}

unint64_t CoreSynthesizer.Voice.diskSizeBytes.getter()
{
  return *(unsigned int *)(v0 + 96) | ((unint64_t)*(unsigned __int8 *)(v0 + 100) << 32);
}

uint64_t CoreSynthesizer.Voice.diskSizeBytes.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 96) = result;
  *(unsigned char *)(v1 + 100) = BYTE4(result) & 1;
  return result;
}

uint64_t (*CoreSynthesizer.Voice.diskSizeBytes.modify())(void, void)
{
  return nullsub_19;
}

__n128 CoreSynthesizer.Voice.init(id:alternateIdentifiers:name:localizedName:localizedNameWithFootprint:quality:gender:traits:type:primaryLocales:secondaryLocales:synthesisProviderVoice:downloadSizeBytes:diskSizeBytes:sampleAudio:sampleText:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, __n128 *a6@<X8>, uint64_t a7, unsigned __int8 *a8, unsigned __int8 *a9, unint64_t *a10, unsigned __int8 *a11, __n128 a12, unint64_t a13, unsigned __int32 a14, char a15, unsigned __int32 a16, char a17, uint64_t a18)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned __int8 v19 = *a8;
  unsigned __int8 v20 = *a9;
  unint64_t v21 = *a10;
  unsigned __int8 v22 = *a11;
  sub_1A6750210(a18, &qword_1E96C2D10);
  a6->n128_u64[0] = a1;
  a6->n128_u64[1] = a2;
  a6[1].n128_u64[0] = a3;
  a6[1].n128_u64[1] = a4;
  a6[2].n128_u64[0] = a5;
  a6[2].n128_u8[8] = v19;
  a6[2].n128_u8[9] = v20;
  a6[3].n128_u64[0] = v21;
  a6[3].n128_u8[8] = v22;
  __n128 result = a12;
  a6[4] = a12;
  a6[5].n128_u64[0] = a13;
  a6[5].n128_u32[2] = a14;
  a6[5].n128_u8[12] = a15 & 1;
  a6[6].n128_u32[0] = a16;
  a6[6].n128_u8[4] = a17 & 1;
  return result;
}

uint64_t CoreSynthesizer.Voice.sampleText.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v1 = (void *)sub_1A6891FD0();
  id v2 = objc_msgSend(v0, sel_sampleStringForVoiceIdentifier_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1A6892000();

  return v3;
}

uint64_t CoreSynthesizer.Voice.localizedName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unsigned int v2 = *(unsigned __int8 *)(v0 + 56);
  if (v2 > 0xA) {
    goto LABEL_8;
  }
  if (((1 << v2) & 0x338) != 0)
  {
LABEL_3:
    uint64_t v3 = self;
    uint64_t v4 = (void *)sub_1A6891FD0();
    id v5 = objc_msgSend(v3, sel_localizedName_forLanguage_, v4, 0);

LABEL_9:
    uint64_t v1 = sub_1A6892000();

    return v1;
  }
  if (((1 << v2) & 0x480) == 0)
  {
    if (v2 == 6 && (*(unsigned char *)(v0 + 49) & 0x80) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    char v6 = self;
    uint64_t v7 = (void *)sub_1A6891FD0();
    uint64_t v8 = (void *)sub_1A6891FD0();
    id v5 = objc_msgSend(v6, sel_siriLocalizedNameForName_identifier_includeSiri_, v7, v8, 0);

    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1A67F7FE8()
{
  return &unk_1A68A3E68;
}

BOOL static CoreSynthesizer.Voice.VoiceType.SiriVoiceTechnology.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CoreSynthesizer.Voice.localizedNameWithFootprint.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unsigned int v2 = *(unsigned __int8 *)(v0 + 56);
  if (v2 > 0xA) {
    goto LABEL_8;
  }
  if (((1 << v2) & 0x70) == 0)
  {
    if (((1 << v2) & 0x308) != 0)
    {
      uint64_t v3 = self;
      uint64_t v4 = (void *)sub_1A6891FD0();
      id v5 = objc_msgSend(v3, sel_localizedName_forLanguage_, v4, 0);

LABEL_9:
      uint64_t v1 = sub_1A6892000();

      return v1;
    }
    if (((1 << v2) & 0x480) != 0)
    {
      swift_bridgeObjectRetain();
      return v1;
    }
LABEL_8:
    uint64_t v8 = self;
    uint64_t v9 = (void *)sub_1A6891FD0();
    uint64_t v10 = (void *)sub_1A6891FD0();
    id v5 = objc_msgSend(v8, sel_siriLocalizedNameForName_identifier_includeSiri_, v9, v10, 0);

    goto LABEL_9;
  }
  uint64_t v13 = self;
  uint64_t v12 = sub_1A683469C();
  CoreSynthesizer.Voice.localizedName.getter();
  char v6 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v13, sel_localizedNameWithFootprint_name_, v12, v6);

  uint64_t v1 = sub_1A6892000();
  return v1;
}

uint64_t CoreSynthesizer.Voice.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v11 = *(void **)(v1 + 80);
  char v12 = *(unsigned char *)(v1 + 92);
  int v13 = *(unsigned __int8 *)(v1 + 100);
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  sub_1A6893210();
  uint64_t v7 = *(void *)(v3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A68920F0();
      swift_bridgeObjectRelease();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  swift_bridgeObjectRelease();
  sub_1A6893210();
  sub_1A6893210();
  sub_1A6893210();
  if ((v4 - 4) >= 7u) {
    sub_1A6893210();
  }
  sub_1A6893210();
  swift_bridgeObjectRetain();
  sub_1A67F8EE4(a1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A67F8EE4(a1, v5);
  swift_bridgeObjectRelease();
  id v9 = v11;
  sub_1A68929C0();

  if (v12)
  {
    sub_1A6893220();
    if (!v13)
    {
LABEL_9:
      sub_1A6893220();
      return sub_1A6893230();
    }
  }
  else
  {
    sub_1A6893220();
    sub_1A6893230();
    if (!v13) {
      goto LABEL_9;
    }
  }
  return sub_1A6893220();
}

uint64_t sub_1A67F8498(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1A6893120(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    id v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1A6893120() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A67F8564(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v36 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = sub_1A6891A40();
  uint64_t v35 = v31;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  char v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v45 = v9 + 16;
  uint64_t v46 = v11;
  uint64_t v44 = v2 + 56;
  uint64_t v47 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v33 = v9;
  uint64_t v34 = v3;
  v31[1] = v9 + 32;
  uint64_t v32 = v12;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v39 = (v7 - 1) & v7;
  int64_t v40 = v13;
  for (unint64_t i = __clz(__rbit64(v7)) | (v13 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    uint64_t v19 = *(void *)(v9 + 72);
    unint64_t v20 = *(void *)(v3 + 48) + v19 * i;
    uint64_t v42 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v43 = v19;
    uint64_t v21 = v42(v12, v20, v8);
    uint64_t v41 = v31;
    MEMORY[0x1F4188790](v21);
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)v31 - v23, v12, v8);
    sub_1A67843F4((unint64_t *)&qword_1EB67A220);
    uint64_t v24 = sub_1A6891F10();
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = v24 & ~v25;
    if (((*(void *)(v44 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
      break;
    }
    uint64_t v38 = (unint64_t)v47 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v27 = v2;
    uint64_t v28 = ~v25;
    while (1)
    {
      MEMORY[0x1F4188790](v24);
      v42((char *)v31 - v23, *(void *)(v27 + 48) + v26 * v43, v8);
      sub_1A67843F4(&qword_1EB67A230);
      char v29 = sub_1A6891FC0();
      uint64_t v30 = *v47;
      uint64_t v24 = ((uint64_t (*)(char *, uint64_t))*v47)((char *)v31 - v23, v8);
      if (v29) {
        break;
      }
      unint64_t v26 = (v26 + 1) & v28;
      if (((*(void *)(v44 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      {
        v30((char *)v31 - v23, v8);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)((char *)v31 - v23, v8);
    int64_t v13 = v40;
    uint64_t v2 = v27;
    uint64_t v9 = v33;
    uint64_t v3 = v34;
    char v12 = v32;
    unint64_t v7 = v39;
    if (v39) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v15 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
      return result;
    }
    if (v15 >= v37) {
      return 1;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    int64_t v17 = v13 + 1;
    if (!v16)
    {
      int64_t v17 = v13 + 2;
      if (v13 + 2 >= v37) {
        return 1;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v13 + 3;
        if (v13 + 3 >= v37) {
          return 1;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v13 + 4;
          if (v13 + 4 >= v37) {
            return 1;
          }
          unint64_t v16 = *(void *)(v36 + 8 * v17);
          if (!v16)
          {
            uint64_t v18 = v13 + 5;
            if (v13 + 5 >= v37) {
              return 1;
            }
            unint64_t v16 = *(void *)(v36 + 8 * v18);
            if (!v16)
            {
              while (1)
              {
                int64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_37;
                }
                if (v17 >= v37) {
                  return 1;
                }
                unint64_t v16 = *(void *)(v36 + 8 * v17);
                ++v18;
                if (v16) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v17 = v13 + 5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v39 = (v16 - 1) & v16;
    int64_t v40 = v17;
  }
  (*v47)((char *)v31 - v23, v8);
  return 0;
}

uint64_t CoreSynthesizer.Voice.hashValue.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __int16 v3 = *((_WORD *)v0 + 20);
  uint64_t v4 = v0[6];
  char v5 = *((unsigned char *)v0 + 56);
  uint64_t v6 = v0[10];
  int v7 = *((_DWORD *)v0 + 22);
  char v8 = *((unsigned char *)v0 + 92);
  int v9 = *((_DWORD *)v0 + 24);
  char v10 = *((unsigned char *)v0 + 100);
  uint64_t v13 = *v0;
  long long v14 = *(_OWORD *)(v0 + 1);
  uint64_t v15 = v1;
  uint64_t v16 = v2;
  __int16 v17 = v3;
  uint64_t v18 = v4;
  char v19 = v5;
  long long v20 = *((_OWORD *)v0 + 4);
  uint64_t v21 = v6;
  int v22 = v7;
  char v23 = v8;
  int v24 = v9;
  char v25 = v10;
  sub_1A6893200();
  CoreSynthesizer.Voice.hash(into:)(v12);
  return sub_1A6893250();
}

uint64_t sub_1A67F8A74()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __int16 v3 = *((_WORD *)v0 + 20);
  uint64_t v4 = v0[6];
  char v5 = *((unsigned char *)v0 + 56);
  uint64_t v6 = v0[10];
  int v7 = *((_DWORD *)v0 + 22);
  char v8 = *((unsigned char *)v0 + 92);
  int v9 = *((_DWORD *)v0 + 24);
  char v10 = *((unsigned char *)v0 + 100);
  uint64_t v13 = *v0;
  long long v14 = *(_OWORD *)(v0 + 1);
  uint64_t v15 = v1;
  uint64_t v16 = v2;
  __int16 v17 = v3;
  uint64_t v18 = v4;
  char v19 = v5;
  long long v20 = *((_OWORD *)v0 + 4);
  uint64_t v21 = v6;
  int v22 = v7;
  char v23 = v8;
  int v24 = v9;
  char v25 = v10;
  sub_1A6893200();
  CoreSynthesizer.Voice.hash(into:)(v12);
  return sub_1A6893250();
}

uint64_t sub_1A67F8B1C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __int16 v3 = *((_WORD *)v0 + 20);
  uint64_t v4 = v0[6];
  char v5 = *((unsigned char *)v0 + 56);
  uint64_t v6 = v0[10];
  int v7 = *((_DWORD *)v0 + 22);
  char v8 = *((unsigned char *)v0 + 92);
  int v9 = *((_DWORD *)v0 + 24);
  char v10 = *((unsigned char *)v0 + 100);
  uint64_t v13 = *v0;
  long long v14 = *(_OWORD *)(v0 + 1);
  uint64_t v15 = v1;
  uint64_t v16 = v2;
  __int16 v17 = v3;
  uint64_t v18 = v4;
  char v19 = v5;
  long long v20 = *((_OWORD *)v0 + 4);
  uint64_t v21 = v6;
  int v22 = v7;
  char v23 = v8;
  int v24 = v9;
  char v25 = v10;
  sub_1A6893200();
  CoreSynthesizer.Voice.hash(into:)(v12);
  return sub_1A6893250();
}

uint64_t CoreSynthesizer.Voice.VoiceType.SiriVoiceTechnology.hash(into:)()
{
  return sub_1A6893210();
}

uint64_t CoreSynthesizer.Voice.VoiceType.hash(into:)()
{
  if ((*v0 - 4) >= 7u) {
    sub_1A6893210();
  }
  return sub_1A6893210();
}

uint64_t CoreSynthesizer.Voice.VoiceType.hashValue.getter()
{
  char v1 = *v0;
  sub_1A6893200();
  if ((v1 - 4) >= 7u) {
    sub_1A6893210();
  }
  sub_1A6893210();
  return sub_1A6893250();
}

uint64_t sub_1A67F8CD0()
{
  char v1 = *v0;
  sub_1A6893200();
  if ((v1 - 4) >= 7u) {
    sub_1A6893210();
  }
  sub_1A6893210();
  return sub_1A6893250();
}

unint64_t CoreSynthesizer.Voice.Quality.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 5;
  if (result < 5) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t CoreSynthesizer.Voice.Quality.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1A67F8D64@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return CoreSynthesizer.Voice.Quality.init(rawValue:)(*a1, a2);
}

void sub_1A67F8D6C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t CoreSynthesizer.Voice.Trait.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t CoreSynthesizer.Voice.Trait.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_1A67F8D88()
{
  return &unk_1A68A3E10;
}

void static CoreSynthesizer.Voice.Trait.novelty.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void *sub_1A67F8DA0()
{
  return &unk_1A68A3E18;
}

void static CoreSynthesizer.Voice.Trait.personal.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void *sub_1A67F8DB8()
{
  return &unk_1A68A3E20;
}

void static CoreSynthesizer.Voice.Trait.thirdParty.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void *sub_1A67F8DD0()
{
  return &unk_1A68A3E28;
}

void static CoreSynthesizer.Voice.Trait.system.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void *sub_1A67F8DE8()
{
  return &unk_1A68A3E30;
}

void static CoreSynthesizer.Voice.Trait.localeDefault.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void *sub_1A67F8E00()
{
  return &unk_1A68A3E38;
}

void static CoreSynthesizer.Voice.Trait.siri.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void *sub_1A67F8E18()
{
  return &unk_1A68A3E40;
}

void static CoreSynthesizer.Voice.Trait.installed.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void *sub_1A67F8E30()
{
  return &unk_1A68A3E48;
}

void static CoreSynthesizer.Voice.Trait.firstParty.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void *sub_1A67F8E48()
{
  return &unk_1A68A3E50;
}

void static CoreSynthesizer.Voice.Trait.hasSystemCounterpart.getter(void *a1@<X8>)
{
  *a1 = 4096;
}

void *sub_1A67F8E60()
{
  return &unk_1A68A3E58;
}

void static CoreSynthesizer.Voice.Trait.hasNeuralCounterpart.getter(void *a1@<X8>)
{
  *a1 = 0x2000;
}

void *sub_1A67F8E78()
{
  return &unk_1A68A3E60;
}

void static CoreSynthesizer.Voice.Trait.hasNeuralAXCounterpart.getter(void *a1@<X8>)
{
  *a1 = 0x4000;
}

void static CoreSynthesizer.Voice.Trait.hasPremiumSiriCounterpart.getter(void *a1@<X8>)
{
  *a1 = 0x8000;
}

void *sub_1A67F8E9C()
{
  return &unk_1A68A3E70;
}

void static CoreSynthesizer.Voice.Trait.hasSuperCompactCounterpart.getter(void *a1@<X8>)
{
  *a1 = 0x10000;
}

void *sub_1A67F8EB4()
{
  return &unk_1A68A3E78;
}

void static CoreSynthesizer.Voice.Trait.downloadable.getter(void *a1@<X8>)
{
  *a1 = 0x20000;
}

void *sub_1A67F8ECC()
{
  return &unk_1A68A3E80;
}

void static CoreSynthesizer.Voice.Trait.downloading.getter(void *a1@<X8>)
{
  *a1 = 0x40000;
}

uint64_t sub_1A67F8EE4(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 8);
  long long v4 = a1[1];
  long long v36 = *a1;
  long long v37 = v4;
  long long v5 = a1[2];
  long long v6 = a1[3];
  v32[2] = a1;
  long long v38 = v5;
  long long v39 = v6;
  uint64_t v40 = v3;
  uint64_t v7 = sub_1A6893250();
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v33 = a2 + 56;
  uint64_t v34 = v7;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  uint64_t v12 = sub_1A6741AD0(&qword_1EB67A238);
  v32[1] = v32;
  MEMORY[0x1F4188790](v12 - 8);
  long long v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int64_t v18 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = *(void *)(v35 + 48);
    uint64_t v25 = sub_1A6891A40();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v14, v24 + *(void *)(v26 + 72) * i, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25);
    if (v27 == 1) {
      goto LABEL_19;
    }
    MEMORY[0x1F4188790](v27);
    char v29 = (char *)v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v14, v25);
    sub_1A67843F4((unint64_t *)&qword_1EB67A220);
    uint64_t v30 = sub_1A6891F10();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    v17 ^= v30;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1)) {
      goto LABEL_21;
    }
    if (v18 >= v15) {
      goto LABEL_18;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_14:
    unint64_t v11 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v15)
  {
LABEL_18:
    uint64_t v31 = sub_1A6891A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 1, 1, v31);
LABEL_19:
    swift_release();
    return sub_1A6893210();
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22)
  {
    ++v18;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v15) {
      goto LABEL_18;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1A67F9240@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = sub_1A6891A40();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v6 + *(void *)(v8 + 72) * v4;

  return v9(a4, v10, v7);
}

BOOL _s12TextToSpeech15CoreSynthesizerC5VoiceV0F4TypeO2eeoiySbAG_AGtFZ_0(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 4:
      if (v2 != 4) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 5:
      if (v2 != 5) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 6:
      if (v2 != 6) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 7:
      if (v2 != 7) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 8:
      if (v2 != 8) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 9:
      if (v2 != 9) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 0xA:
      if (v2 != 10) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    default:
      if ((v2 - 4) < 7) {
LABEL_18:
      }
        BOOL result = 0;
      else {
        BOOL result = *a1 == v2;
      }
      break;
  }
  return result;
}

BOOL _s12TextToSpeech15CoreSynthesizerC5VoiceV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  int v32 = *(unsigned __int8 *)(a1 + 41);
  uint64_t v31 = *(void *)(a1 + 48);
  int v30 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 72);
  char v24 = *(unsigned char *)(a1 + 92);
  int v18 = *(_DWORD *)(a1 + 96);
  int v21 = *(_DWORD *)(a1 + 88);
  char v22 = *(unsigned char *)(a1 + 100);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  int v10 = *(unsigned __int8 *)(a2 + 41);
  uint64_t v11 = *(void *)(a2 + 48);
  int v29 = *(unsigned __int8 *)(a2 + 56);
  uint64_t v27 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  int v23 = *(unsigned __int8 *)(a2 + 92);
  int v17 = *(_DWORD *)(a2 + 96);
  char v19 = *(unsigned char *)(a2 + 100);
  int v20 = *(_DWORD *)(a2 + 88);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_1A6893120(), BOOL result = 0, (v12 & 1) != 0))
  {
    if ((sub_1A67F8498(v2, v6) & 1) == 0) {
      return 0;
    }
    if (v3 == v7 && v4 == v8)
    {
      BOOL result = 0;
    }
    else
    {
      char v14 = sub_1A6893120();
      BOOL result = 0;
      if ((v14 & 1) == 0) {
        return result;
      }
    }
    if (v5 == v9 && v32 == v10 && v31 == v11)
    {
      switch(v30)
      {
        case 4:
          if (v29 != 4) {
            return 0;
          }
          goto LABEL_29;
        case 5:
          if (v29 != 5) {
            return 0;
          }
          goto LABEL_29;
        case 6:
          if (v29 != 6) {
            return 0;
          }
          goto LABEL_29;
        case 7:
          if (v29 != 7) {
            return 0;
          }
          goto LABEL_29;
        case 8:
          if (v29 != 8) {
            return 0;
          }
          goto LABEL_29;
        case 9:
          if (v29 != 9) {
            return 0;
          }
          goto LABEL_29;
        case 10:
          if (v29 != 10) {
            return 0;
          }
          goto LABEL_29;
        default:
          BOOL result = 0;
          if ((v29 - 11) > 0xFFFFFFF8 || v30 != v29) {
            return result;
          }
LABEL_29:
          if ((sub_1A67F8564(v28, v27) & 1) == 0) {
            return 0;
          }
          if ((sub_1A67F8564(v26, v25) & 1) == 0) {
            return 0;
          }
          sub_1A67FA110();
          if ((sub_1A68929B0() & 1) == 0) {
            return 0;
          }
          if (v24)
          {
            if (!v23) {
              return 0;
            }
          }
          else
          {
            char v15 = v23;
            if (v21 != v20) {
              char v15 = 1;
            }
            if (v15) {
              return 0;
            }
          }
          if (v22) {
            return (v19 & 1) != 0;
          }
          char v16 = v19;
          if (v18 != v17) {
            char v16 = 1;
          }
          if ((v16 & 1) == 0) {
            return 1;
          }
          break;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1A67F96D4()
{
  unint64_t result = qword_1E96C2D60;
  if (!qword_1E96C2D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2D60);
  }
  return result;
}

unint64_t sub_1A67F972C()
{
  unint64_t result = qword_1E96C2D68;
  if (!qword_1E96C2D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2D68);
  }
  return result;
}

unint64_t sub_1A67F9784()
{
  unint64_t result = qword_1E96C16C0;
  if (!qword_1E96C16C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C16C0);
  }
  return result;
}

unint64_t sub_1A67F97EC()
{
  unint64_t result = qword_1EB67A268;
  if (!qword_1EB67A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB67A268);
  }
  return result;
}

void _s5VoiceVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = *(void **)(a1 + 80);
}

uint64_t _s5VoiceVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v6;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  return a1;
}

uint64_t _s5VoiceVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 80);
  uint64_t v5 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v4;
  id v6 = v4;

  int v7 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v7;
  int v8 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v8;
  return a1;
}

__n128 _s5VoiceVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 93) = *(void *)((char *)a2 + 93);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s5VoiceVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  return a1;
}

uint64_t _s5VoiceVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 101)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5VoiceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 100) = 0;
    *(_DWORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 101) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 101) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Voice()
{
  return &type metadata for CoreSynthesizer.Voice;
}

unsigned char *_s5VoiceV6GenderOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67F9CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Voice.Gender()
{
  return &type metadata for CoreSynthesizer.Voice.Gender;
}

uint64_t _s5VoiceV9VoiceTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6)
  {
    unsigned int v2 = a2 + 10;
    if (a2 + 10 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 10;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 10;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A67F9DB4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 10;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 4) {
    unsigned int v8 = v7 - 3;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 8) {
    return v8 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *_s5VoiceV9VoiceTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 10;
  if (a3 + 10 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF6) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v7 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1A67F9E9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t sub_1A67F9EC4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1A67F9ED8(unsigned char *result, int a2)
{
  if (a2) {
    *__n128 result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Voice.VoiceType()
{
  return &type metadata for CoreSynthesizer.Voice.VoiceType;
}

unsigned char *_s5VoiceV9VoiceTypeO19SiriVoiceTechnologyOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67F9FC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Voice.VoiceType.SiriVoiceTechnology()
{
  return &type metadata for CoreSynthesizer.Voice.VoiceType.SiriVoiceTechnology;
}

unsigned char *_s5VoiceV7QualityOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67FA0C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Voice.Quality()
{
  return &type metadata for CoreSynthesizer.Voice.Quality;
}

ValueMetadata *type metadata accessor for CoreSynthesizer.Voice.Trait()
{
  return &type metadata for CoreSynthesizer.Voice.Trait;
}

unint64_t sub_1A67FA110()
{
  unint64_t result = qword_1EB67A1C8;
  if (!qword_1EB67A1C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB67A1C8);
  }
  return result;
}

uint64_t TTSMarkup.Paragraph.init(_:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&v20[0] = MEMORY[0x1E4FBC860];
  unint64_t v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x100))();
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    int v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease_n();
    uint64_t v18 = sub_1A6741AD0(&qword_1E96C1D60);
    char v19 = &protocol witness table for <A> [A];

    *(void *)&long long v17 = v9;
    uint64_t result = sub_1A673E770(&v17, (uint64_t)v20 + 8);
    long long v14 = v20[1];
    *a2 = v20[0];
    a2[1] = v14;
    a2[2] = v20[2];
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A6892EB0();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    int v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1AD0BFD30](v8, v5);
      }
      else {
        id v10 = *(id *)(v5 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      sub_1A677BA04((uint64_t)&v15);

      if (v16)
      {
        sub_1A673E770(&v15, (uint64_t)&v17);
        sub_1A673E770(&v17, (uint64_t)&v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v9 = sub_1A676207C(0, v9[2] + 1, 1, v9);
        }
        unint64_t v13 = v9[2];
        unint64_t v12 = v9[3];
        if (v13 >= v12 >> 1) {
          int v9 = sub_1A676207C((void *)(v12 > 1), v13 + 1, 1, v9);
        }
        void v9[2] = v13 + 1;
        sub_1A673E770(&v15, (uint64_t)&v9[5 * v13 + 4]);
      }
      else
      {
        sub_1A6761FF4((uint64_t)&v15);
      }
      ++v8;
    }
    while (v6 != v8);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

void static TTSMarkup.Paragraph.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

unint64_t TTSMarkup.Paragraph.attributes.getter()
{
  return sub_1A6742BA0(MEMORY[0x1E4FBC860]);
}

uint64_t TTSMarkup.Paragraph.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.Paragraph.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unsigned int v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.Paragraph.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Paragraph._content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.Paragraph._content.setter(long long *a1)
{
  uint64_t v3 = v1 + 8;
  sub_1A6741A24(v3);

  return sub_1A673E770(a1, v3);
}

uint64_t (*TTSMarkup.Paragraph._content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Paragraph.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.Paragraph.init(speech:)@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x1E4FBC860];
  return a1();
}

uint64_t TTSMarkup.Paragraph.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[3] = &type metadata for TTSMarkup.Paragraph;
  v7[4] = &protocol witness table for TTSMarkup.Paragraph;
  v7[0] = swift_allocObject();
  sub_1A67644CC(v3, v7[0] + 16);
  TTSMarkupVisitor.visit(_:)(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

uint64_t sub_1A67FA538()
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

ValueMetadata *type metadata accessor for TTSMarkup.Paragraph()
{
  return &type metadata for TTSMarkup.Paragraph;
}

uint64_t IntervalTree.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  swift_retain();
  uint64_t v7 = sub_1A67FA600(a1, v6, a2);
  uint64_t result = swift_release_n();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A67FA600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v34 - v12;
  if (v14)
  {
    uint64_t v35 = *v3;
    long long v15 = *(void (**)(uint64_t))(*(void *)v6 + 160);
    uint64_t v16 = swift_retain();
    uint64_t v34 = v15;
    uint64_t v17 = ((uint64_t (*)(uint64_t))v15)(v16);
    (*(void (**)(uint64_t))(*(void *)a2 + 184))(v17);
    uint64_t v36 = a3;
    char v18 = sub_1A6891F80();
    char v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v11, v7);
    uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v19)(v13, v7);
    if (v18)
    {
      v34(v20);
      (*(void (**)(char *))(*(void *)a2 + 192))(v13);
    }
    type metadata accessor for IntervalNode();
    char v21 = static IntervalNode.> infix(_:_:)(v6, a2);
    uint64_t v22 = *(void *)a2;
    if (v21)
    {
      int v23 = *(uint64_t (**)(void))(v22 + 232);
      uint64_t v24 = v23();
      uint64_t v25 = swift_release();
      uint64_t v26 = v36;
      if (!v24)
      {
        int v29 = *(void (**)(uint64_t))(*(void *)a2 + 240);
        uint64_t v30 = swift_retain();
        v29(v30);
        return a2;
      }
    }
    else
    {
      int v23 = *(uint64_t (**)(void))(v22 + 208);
      uint64_t v27 = v23();
      uint64_t v25 = swift_release();
      uint64_t v26 = v36;
      if (!v27)
      {
        uint64_t v31 = *(void (**)(uint64_t))(*(void *)a2 + 216);
        uint64_t v32 = swift_retain();
        v31(v32);
        return a2;
      }
    }
    uint64_t v37 = v35;
    uint64_t v28 = ((uint64_t (*)(uint64_t))v23)(v25);
    sub_1A67FA600(v6, v28, v26);
    swift_release();
    swift_release();
    return a2;
  }
  swift_retain();
  return v6;
}

Swift::Void __swiftcall IntervalTree.printTree()()
{
  sub_1A67FA988(*v1, v0);
}

uint64_t sub_1A67FA988(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    unint64_t v4 = *(uint64_t (**)(void))(*(void *)a1 + 208);
    swift_retain();
    if (v4())
    {
      ((void (*)(void))sub_1A67FA988)();
      swift_release();
    }
    sub_1A6741AD0(&qword_1E96C1728);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1A689DC40;
    *(void *)(v5 + 56) = type metadata accessor for IntervalNode();
    *(void *)(v5 + 32) = a1;
    swift_retain();
    sub_1A68931D0();
    uint64_t v6 = swift_bridgeObjectRelease();
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 232))(v6);
    if (v7)
    {
      sub_1A67FA988(v7, a2);
      swift_release();
    }
    return swift_release();
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C1728);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1A689DC40;
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 32) = 0xD000000000000012;
    *(void *)(v8 + 40) = 0x80000001A68CF0C0;
    sub_1A68931D0();
    return swift_bridgeObjectRelease();
  }
}

uint64_t IntervalTree.asArray.getter(uint64_t a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for IntervalNode();
  uint64_t v5 = sub_1A6892330();
  sub_1A67FABD8(v3, (uint64_t)&v5, a1);
  return v5;
}

uint64_t sub_1A67FABD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(uint64_t (**)(void))(*(void *)result + 208);
    swift_retain();
    if (v6())
    {
      ((void (*)(void))sub_1A67FABD8)();
      swift_release();
    }
    type metadata accessor for IntervalNode();
    sub_1A68923C0();
    swift_retain();
    uint64_t v7 = sub_1A6892380();
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 232))(v7);
    if (v8)
    {
      sub_1A67FABD8(v8, a2, a3);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t IntervalTree.intersections(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  type metadata accessor for IntervalNode();
  uint64_t v7 = sub_1A6891E70();
  sub_1A67FAD7C(a1, v5, (uint64_t)&v7, a2);
  return v7;
}

uint64_t sub_1A67FAD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v16 = (char *)&v31 - v15;
  if (v17)
  {
    uint64_t v33 = v14;
    uint64_t v31 = *v4;
    char v18 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 160);
    uint64_t v19 = swift_retain();
    uint64_t v20 = v18(v19);
    (*(void (**)(uint64_t))(*(void *)a2 + 136))(v20);
    uint64_t v32 = a4;
    char v21 = sub_1A6891F90();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v12, v8);
    uint64_t v23 = ((uint64_t (*)(char *, uint64_t))v22)(v16, v8);
    if ((v21 & 1) == 0)
    {
      uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(v23);
      (*(void (**)(uint64_t))(*(void *)a2 + 160))(v24);
      char v25 = sub_1A6891F80();
      v22(v12, v8);
      uint64_t v23 = ((uint64_t (*)(char *, uint64_t))v22)(v16, v8);
      if ((v25 & 1) == 0)
      {
        uint64_t v34 = a2;
        type metadata accessor for IntervalNode();
        sub_1A68923C0();
        swift_retain();
        uint64_t v23 = sub_1A6892380();
      }
    }
    uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 208))(v23);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = (*(uint64_t (**)(void))(*(void *)v26 + 184))();
      (*(void (**)(uint64_t))(*(void *)a1 + 136))(v28);
      char v29 = sub_1A6891FA0();
      v22(v12, v8);
      v22(v16, v8);
      if (v29)
      {
        uint64_t v34 = v31;
        swift_retain();
        sub_1A67FAD7C(a1, v27, v33, v32);
        uint64_t v26 = swift_release_n();
      }
      else
      {
        uint64_t v26 = swift_release();
      }
    }
    uint64_t v34 = v31;
    uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 232))(v26);
    sub_1A67FAD7C(a1, v30, v33, v32);
    swift_release();
    return swift_release();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SpeechStringIntervalTree(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

void *assignWithCopy for SpeechStringIntervalTree(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SpeechStringIntervalTree(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeechStringIntervalTree(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeechStringIntervalTree(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for IntervalTree()
{
  return sub_1A674B1C8();
}

ValueMetadata *type metadata accessor for TTSMarkup()
{
  return &type metadata for TTSMarkup;
}

void sub_1A67FB2D8()
{
  qword_1E96D6230 = -1;
}

uint64_t sub_1A67FB2E8(uint64_t *a1)
{
  ppDb[1] = *(sqlite3 **)MEMORY[0x1E4F143B8];
  ppDb[0] = 0;
  int v4 = sub_1A67FBEDC(a1);
  uint64_t v5 = (uint64_t)v2;
  sqlite3_open("file::memory:", ppDb);
  uint64_t v6 = (uint64_t)ppDb[0];
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  sqlite3_int64 v9 = 0;
  switch(v8 >> 62)
  {
    case 1uLL:
      BOOL v10 = __OFSUB__(HIDWORD(v7), v7);
      int v11 = HIDWORD(v7) - v7;
      if (v10) {
        goto LABEL_72;
      }
      sqlite3_int64 v9 = v11;
LABEL_6:
      if (sqlite3_deserialize(ppDb[0], "main", (unsigned __int8 *)v4, v9, v9, 0))
      {
        sub_1A67FC0C0();
        swift_allocError();
        uint64_t v16 = 3;
LABEL_8:
        *(void *)uint64_t v15 = v16;
        *(unsigned char *)(v15 + 8) = 1;
LABEL_12:
        swift_willThrow();
        goto LABEL_13;
      }
      ppStmt = 0;
      uint64_t v17 = sub_1A68920B0();
      sqlite3_prepare_v2((sqlite3 *)v6, (const char *)(v17 + 32), -1, &ppStmt, 0);
      swift_release();
      uint64_t v6 = (uint64_t)ppStmt;
      if (qword_1E96CFBF0 != -1) {
        goto LABEL_68;
      }
      break;
    case 2uLL:
      uint64_t v14 = v7 + 16;
      uint64_t v12 = *(void *)(v7 + 16);
      uint64_t v13 = *(void *)(v14 + 8);
      sqlite3_int64 v9 = v13 - v12;
      if (!__OFSUB__(v13, v12)) {
        goto LABEL_6;
      }
      goto LABEL_73;
    case 3uLL:
      goto LABEL_6;
    default:
      sqlite3_int64 v9 = BYTE6(v8);
      goto LABEL_6;
  }
  while (2)
  {
    char v18 = (void (__cdecl *)(void *))qword_1E96D6230;
    uint64_t v19 = sub_1A68920B0();
    int v20 = sqlite3_bind_text((sqlite3_stmt *)v6, 1, (const char *)(v19 + 32), -1, v18);
    swift_release();
    if (v20)
    {
      sub_1A67FC0C0();
      swift_allocError();
      *(void *)uint64_t v21 = 4;
      *(unsigned char *)(v21 + 8) = 1;
      goto LABEL_12;
    }
    if (sqlite3_step((sqlite3_stmt *)v6) != 100)
    {
      sqlite3_finalize(ppStmt);
      sub_1A67FC0C0();
      swift_allocError();
      uint64_t v16 = 5;
      goto LABEL_8;
    }
    uint64_t v82 = v1;
    if (!sqlite3_column_text((sqlite3_stmt *)v6, 0))
    {
      __break(1u);
LABEL_78:
      sub_1A6893150();
      __break(1u);
      JUMPOUT(0x1A67FBCD0);
    }
    uint64_t v23 = sub_1A6892170();
    unint64_t v25 = v24;
    v90[0] = (sqlite3_stmt *)44;
    v90[1] = (sqlite3_stmt *)0xE100000000000000;
    MEMORY[0x1F4188790](v23);
    v80[2] = v90;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1A674A62C(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A674AC60, (uint64_t)v80, v23, v25);
    v80[4] = v5;
    swift_bridgeObjectRelease();
    int64_t v27 = *((void *)v26 + 2);
    if (v27)
    {
      v90[0] = (sqlite3_stmt *)MEMORY[0x1E4FBC860];
      sub_1A674CBF0(0, v27, 0);
      uint64_t v28 = v90[0];
      char v29 = (uint64_t *)(v26 + 56);
      do
      {
        uint64_t v31 = *(v29 - 3);
        uint64_t v30 = *(v29 - 2);
        uint64_t v32 = *(v29 - 1);
        uint64_t v33 = *v29;
        swift_bridgeObjectRetain();
        uint64_t v34 = MEMORY[0x1AD0BF180](v31, v30, v32, v33);
        uint64_t v36 = v35;
        swift_bridgeObjectRelease();
        v90[0] = v28;
        unint64_t v38 = *((void *)v28 + 2);
        unint64_t v37 = *((void *)v28 + 3);
        if (v38 >= v37 >> 1)
        {
          sub_1A674CBF0((char *)(v37 > 1), v38 + 1, 1);
          uint64_t v28 = v90[0];
        }
        *((void *)v28 + 2) = v38 + 1;
        long long v39 = (char *)v28 + 16 * v38;
        *((void *)v39 + 4) = v34;
        *((void *)v39 + 5) = v36;
        v29 += 4;
        --v27;
      }
      while (v27);
      uint64_t v86 = v28;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v86 = (sqlite3_stmt *)MEMORY[0x1E4FBC860];
    }
    sqlite3_finalize(ppStmt);
    v90[0] = 0;
    uint64_t v40 = ppDb[0];
    uint64_t v41 = sub_1A68920B0();
    sqlite3_prepare_v2(v40, (const char *)(v41 + 32), -1, v90, 0);
    swift_release();
    unint64_t v42 = MEMORY[0x1E4FBC860];
    unint64_t v87 = sub_1A67FBCE0(MEMORY[0x1E4FBC860]);
    uint64_t v6 = (uint64_t)v90[0];
    if (sqlite3_step(v90[0]) == 100)
    {
      uint64_t v43 = 1;
      while (sqlite3_column_text((sqlite3_stmt *)v6, 0))
      {
        uint64_t v44 = sub_1A6892170();
        uint64_t v5 = (uint64_t)v45;
        uint64_t v1 = (unint64_t *)v87;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v89 = (unint64_t)v1;
        uint64_t v6 = sub_1A673F7AC(v44, v5);
        unint64_t v48 = v1[2];
        BOOL v49 = (v47 & 1) == 0;
        uint64_t v50 = v48 + v49;
        if (__OFADD__(v48, v49)) {
          goto LABEL_64;
        }
        char v51 = v47;
        if ((uint64_t)v1[3] >= v50)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v1 = &v89;
            sub_1A67FC420();
          }
        }
        else
        {
          sub_1A67FC114(v50, isUniquelyReferenced_nonNull_native);
          uint64_t v1 = (unint64_t *)v89;
          unint64_t v52 = sub_1A673F7AC(v44, v5);
          if ((v51 & 1) != (v53 & 1)) {
            goto LABEL_78;
          }
          uint64_t v6 = v52;
        }
        uint64_t v54 = (void *)v89;
        unint64_t v87 = v89;
        if (v51)
        {
          *(void *)(*(void *)(v89 + 56) + 8 * v6) = v43;
        }
        else
        {
          *(void *)(v89 + 8 * ((unint64_t)v6 >> 6) + 64) |= 1 << v6;
          uint64_t v55 = (uint64_t *)(v54[6] + 16 * v6);
          *uint64_t v55 = v44;
          v55[1] = v5;
          *(void *)(v54[7] + 8 * v6) = v43;
          uint64_t v56 = v54[2];
          BOOL v10 = __OFADD__(v56, 1);
          uint64_t v57 = v56 + 1;
          if (v10) {
            goto LABEL_67;
          }
          v54[2] = v57;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (__OFADD__(v43, 1)) {
          goto LABEL_65;
        }
        uint64_t v6 = (uint64_t)v90[0];
        ++v43;
        if (sqlite3_step(v90[0]) != 100) {
          goto LABEL_40;
        }
      }
LABEL_76:
      __break(1u);
    }
LABEL_40:
    sqlite3_finalize((sqlite3_stmt *)v6);
    unint64_t v89 = v42;
    uint64_t v58 = v86;
    uint64_t v1 = (unint64_t *)v87;
    id v59 = (sqlite3_stmt *)*((void *)v86 + 2);
    if (!v59)
    {
LABEL_61:
      swift_bridgeObjectRelease();
      uint64_t v6 = v89;
      swift_bridgeObjectRelease();
      sqlite3_close(ppDb[0]);
      return v6;
    }
    uint64_t v5 = 0;
    uint64_t v84 = 30;
    uint64_t v85 = (char *)v86 + 32;
    uint64_t v81 = v59;
    while (1)
    {
      if ((unint64_t)v5 >= *((void *)v58 + 2)) {
        goto LABEL_66;
      }
      if (!v1[2]) {
        goto LABEL_43;
      }
      uint64_t v60 = (uint64_t *)&v85[16 * v5];
      uint64_t v62 = *v60;
      uint64_t v61 = v60[1];
      swift_bridgeObjectRetain();
      uint64_t v6 = (uint64_t)v1;
      unint64_t v63 = sub_1A673F7AC(v62, v61);
      if (v64) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v58 = v86;
LABEL_43:
      if ((sqlite3_stmt *)++v5 == v59) {
        goto LABEL_61;
      }
    }
    uint64_t v6 = *(void *)(v1[7] + 8 * v63);
    id v65 = objc_msgSend(objc_allocWithZone((Class)TTSRuleset), sel_init);
    uint64_t v66 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    objc_msgSend(v65, sel_setIdentifier_, v66);

    id v88 = v65;
    uint64_t v67 = v65;
    uint64_t v68 = v84;
    objc_msgSend(v67, sel_setPriority_, v84);
    uint64_t v84 = v68 + 1;
    if (__OFADD__(v68, 1))
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    uint64_t v91 = 0;
    uint64_t v69 = ppDb[0];
    uint64_t v70 = sub_1A68920B0();
    sqlite3_prepare_v2(v69, (const char *)(v70 + 32), -1, &v91, 0);
    swift_release();
    if (v6 < (uint64_t)0xFFFFFFFF80000000) {
      goto LABEL_70;
    }
    if (v6 > 0x7FFFFFFF) {
      goto LABEL_71;
    }
    uint64_t v83 = (sqlite3_stmt *)v5;
    uint64_t v5 = (uint64_t)v91;
    if (!sqlite3_bind_int(v91, 1, v6))
    {
      while (1)
      {
        if (sqlite3_step((sqlite3_stmt *)v5) != 100)
        {
          uint64_t v6 = (uint64_t)v88;
          MEMORY[0x1AD0BF380]();
          if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1A6892320();
          }
          sub_1A6892360();
          sub_1A6892300();
          sqlite3_finalize((sqlite3_stmt *)v5);

          id v59 = v81;
          uint64_t v58 = v86;
          uint64_t v1 = (unint64_t *)v87;
          uint64_t v5 = (uint64_t)v83;
          goto LABEL_43;
        }
        if (!sqlite3_column_text((sqlite3_stmt *)v5, 0)) {
          goto LABEL_74;
        }
        sub_1A6892170();
        if (!sqlite3_column_text((sqlite3_stmt *)v5, 1)) {
          goto LABEL_75;
        }
        sub_1A6892170();
        int v71 = sqlite3_column_int((sqlite3_stmt *)v5, 2);
        uint64_t v72 = sqlite3_column_int((sqlite3_stmt *)v5, 3);
        id v73 = objc_msgSend(objc_allocWithZone((Class)TTSRuleReplacement), sel_init);
        id v74 = objc_allocWithZone((Class)TTSRegex);
        uint64_t v75 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
        id v76 = objc_msgSend(v74, sel_initWithPerlPattern_, v75);

        objc_msgSend(v73, sel_setRegex_, v76);
        objc_msgSend(v73, sel_setIsTerminalRule_, v71 == 1);
        uint64_t v1 = (unint64_t *)self;
        uint64_t v77 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
        uint64_t v6 = (uint64_t)objc_msgSend(v1, sel_processReplacementStringForSpecialCharacters_, v77);

        if (!v6)
        {
          sub_1A6892000();
          uint64_t v1 = v78;
          uint64_t v6 = sub_1A6891FD0();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v73, sel_setReplacement_, v6);

        if ((v72 & 0x80000000) != 0) {
          break;
        }
        objc_msgSend(v73, sel_setOriginalRulesetIndex_, v72);
        objc_msgSend(v88, sel_addRuleReplacement_, v73);
      }
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      swift_once();
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A67FC0C0();
  swift_allocError();
  *(void *)uint64_t v79 = 4;
  *(unsigned char *)(v79 + 8) = 1;
  swift_willThrow();

  swift_bridgeObjectRelease();
LABEL_13:
  sqlite3_close(ppDb[0]);
  return v6;
}

unint64_t sub_1A67FBCE0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unsigned int v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A6741AD0(&qword_1E96C2D78);
  unsigned int v2 = (void *)sub_1A6892EF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A673F7AC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v10 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t TTSSQLiteReader.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTSSQLiteReader.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1A67FBE6C()
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = 0xD000000000000033;
  result[3] = 0x80000001A68CF100;
  result[4] = 0xD00000000000002ALL;
  result[5] = 0x80000001A68CF140;
  result[6] = 0xD000000000000049;
  result[7] = 0x80000001A68CF170;
  return result;
}

uint64_t *sub_1A67FBEDC(uint64_t *a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1A68A4450;
      uint64_t v6 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v6 < (int)v2) {
        goto LABEL_15;
      }
      if (sub_1A68916A0() && __OFSUB__((int)v2, sub_1A68916C0())) {
        goto LABEL_16;
      }
      sub_1A68916D0();
      swift_allocObject();
      uint64_t v8 = sub_1A6891690();
      swift_release();
      uint64_t v5 = v8;
LABEL_11:
      if (v6 < (int)v2)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      unint64_t result = (uint64_t *)sub_1A67FC5D0((int)v2, v2 >> 32);
      *a1 = v2;
      a1[1] = v5 | 0x4000000000000000;
      return result;
    case 2uLL:
      uint64_t v9 = *a1;
      uint64_t v10 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1A6891780();
      uint64_t v7 = v10;
      unint64_t result = (uint64_t *)sub_1A67FC5D0(*(void *)(v9 + 16), *(void *)(v9 + 24));
      *a1 = v9;
      a1[1] = v7 | 0x8000000000000000;
      return result;
    case 3uLL:
      return &v9;
    default:
      unint64_t result = &v9;
      a1[1] = v1 & 0xFFFFFFFFFFFFFFLL;
      return result;
  }
}

unint64_t sub_1A67FC0C0()
{
  unint64_t result = qword_1E96C2D70;
  if (!qword_1E96C2D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2D70);
  }
  return result;
}

uint64_t sub_1A67FC114(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C2D78);
  char v37 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A6893200();
    sub_1A68920F0();
    uint64_t result = sub_1A6893250();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    char v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1A67FC420()
{
  unint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C2D78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A67FC5D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A68916A0();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t result = sub_1A68916C0();
    uint64_t v6 = a1 - result;
    if (__OFSUB__(a1, result))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_1A68916B0();
      return v5 + v6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SQLiteError(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SQLiteError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SQLiteError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1A67FC6A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A67FC6C4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

uint64_t type metadata accessor for TTSSQLiteReader()
{
  return self;
}

uint64_t method lookup function for TTSSQLiteReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSSQLiteReader);
}

uint64_t dispatch thunk of TTSSQLiteReader.loadSiriRules(fromData:orderKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t TTSAudioEffect.spec.getter@<X0>(uint64_t a1@<X8>)
{
  if (*v1) {
    char v3 = sub_1A6741FB0();
  }
  else {
    char v3 = sub_1A67F6190();
  }
  uint64_t v5 = v3[9];
  uint64_t v4 = v3[10];
  uint64_t v7 = v3[7];
  uint64_t v6 = v3[8];
  char v15 = *((unsigned char *)v3 + 48);
  uint64_t v8 = v3[5];
  uint64_t v14 = v3[4];
  uint64_t v10 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v12 = *v3;
  uint64_t v11 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v4;
  return result;
}

TextToSpeech::TTSAudioEffect_optional __swiftcall TTSAudioEffect.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A6892F30();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static TTSAudioEffect.allCases.getter()
{
  return &unk_1EFB78318;
}

uint64_t TTSAudioEffect.rawValue.getter()
{
  if (*v0) {
    return 0x627265766572;
  }
  else {
    return 0x657A696C61757165;
  }
}

uint64_t sub_1A67FC8E8(char *a1, char *a2)
{
  return sub_1A67FC8F4(*a1, *a2);
}

uint64_t sub_1A67FC8F4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x627265766572;
  }
  else {
    uint64_t v3 = 0x657A696C61757165;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000072;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x627265766572;
  }
  else {
    uint64_t v5 = 0x657A696C61757165;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000072;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1A6893120();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

TextToSpeech::TTSAudioEffect_optional sub_1A67FC99C(Swift::String *a1)
{
  return TTSAudioEffect.init(rawValue:)(*a1);
}

void sub_1A67FC9A8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x657A696C61757165;
  if (*v1) {
    uint64_t v2 = 0x627265766572;
  }
  unint64_t v3 = 0xE900000000000072;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1A67FC9EC()
{
  unint64_t result = qword_1E96C2D80;
  if (!qword_1E96C2D80)
  {
    sub_1A6750AC4(&qword_1E96C2D88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2D80);
  }
  return result;
}

void sub_1A67FCA48(void *a1@<X8>)
{
  *a1 = &unk_1EFB78420;
}

unint64_t sub_1A67FCA5C()
{
  unint64_t result = qword_1E96C2D90;
  if (!qword_1E96C2D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2D90);
  }
  return result;
}

uint64_t sub_1A67FCAB0()
{
  return sub_1A6893250();
}

uint64_t sub_1A67FCB34()
{
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67FCBA4()
{
  return sub_1A6893250();
}

uint64_t sub_1A67FCC24()
{
  return sub_1A68922B0();
}

uint64_t sub_1A67FCC84()
{
  return sub_1A68922A0();
}

unsigned char *storeEnumTagSinglePayload for TTSAudioEffect(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A67FCDA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSAudioEffect()
{
  return &type metadata for TTSAudioEffect;
}

unint64_t sub_1A67FCDD8()
{
  unint64_t result = qword_1E96C2D98[0];
  if (!qword_1E96C2D98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96C2D98);
  }
  return result;
}

uint64_t StreamCachedValue.executor.getter()
{
  sub_1A68036A0();

  return swift_retain();
}

uint64_t sub_1A67FCE54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 112);
  swift_beginAccess();
  uint64_t v4 = sub_1A6892A00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1A67FCF04(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 112);
  swift_beginAccess();
  uint64_t v4 = sub_1A6892A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1A67FCFBC()
{
  v1[2] = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  type metadata accessor for StreamCachedValue();
  swift_getWitnessTable();
  uint64_t v4 = sub_1A68923E0();
  v1[6] = v4;
  v1[7] = v3;
  return MEMORY[0x1F4188298](sub_1A67FD0EC, v4, v3);
}

uint64_t sub_1A67FD0EC()
{
  uint64_t v1 = (int **)(v0[2] + *(void *)(*(void *)v0[2] + 120));
  uint64_t v2 = *v1;
  v0[8] = *v1;
  if (v2)
  {
    v0[9] = v1[1];
    char v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[10] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1A67FD234;
    uint64_t v4 = v0[5];
    return v7(v4);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1A67FD234()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1A67FD354, v3, v2);
}

uint64_t sub_1A67FD354()
{
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[4];
  uint64_t v2 = (char *)v0[5];
  uint64_t v4 = v0[3];
  sub_1A67FD3FC(v2);
  sub_1A67978FC(v1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1A67FD3FC(char *a1)
{
  uint64_t v60 = *v1;
  uint64_t v3 = *(char **)(v60 + 80);
  uint64_t v4 = (void *)*((void *)v3 - 1);
  MEMORY[0x1F4188790](a1);
  BOOL v49 = (char *)&v48 - v5;
  uint64_t v6 = sub_1A6892A00();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v50 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v10 = (char *)&v48 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  uint64_t v57 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v62 = (char *)&v48 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v48 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v58 = v1;
  sub_1A67FCE54((uint64_t)&v48 - v19);
  uint64_t v21 = (void (*)(char *, char *, char *))v4[2];
  id v59 = a1;
  uint64_t v55 = v4 + 2;
  char v53 = v21;
  v21(v18, a1, v3);
  uint64_t v22 = (void (*)(uint64_t, void, uint64_t, char *))v4[7];
  uint64_t v56 = v4 + 7;
  uint64_t v54 = v22;
  v22((uint64_t)v18, 0, 1, v3);
  uint64_t v51 = TupleTypeMetadata2;
  int64_t v23 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
  unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v24(v10, v20, v6);
  uint64_t v61 = v23;
  int64_t v25 = v23;
  uint64_t v26 = v6;
  v24(v25, v18, v6);
  unint64_t v52 = v4;
  BOOL v27 = (unsigned int (*)(char *, uint64_t, char *))v4[6];
  unint64_t v63 = v10;
  if (v27(v10, 1, v3) == 1)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v11 + 8);
    v28(v18, v26);
    v28(v20, v26);
    char v29 = v3;
    if (v27(v61, 1, v3) == 1) {
      return ((uint64_t (*)(char *, uint64_t))v28)(v63, v26);
    }
  }
  else
  {
    unint64_t v48 = v20;
    uint64_t v31 = v26;
    v24(v62, v63, v26);
    uint64_t v32 = v61;
    char v29 = v3;
    if (v27(v61, 1, v3) != 1)
    {
      int64_t v35 = v52;
      uint64_t v36 = v49;
      ((void (*)(char *, char *, char *))v52[4])(v49, v32, v3);
      uint64_t v37 = v60;
      unint64_t v38 = v62;
      char v39 = sub_1A6891FC0();
      uint64_t v40 = (void (*)(char *, char *))v35[1];
      v40(v36, v3);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v11 + 8);
      v41(v18, v31);
      v41(v48, v31);
      v40(v38, v3);
      char v29 = v3;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v41)(v63, v31);
      uint64_t v34 = v37;
      if (v39) {
        return result;
      }
      goto LABEL_8;
    }
    uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
    v33(v18, v31);
    v33(v48, v31);
    ((void (*)(char *, char *))v52[1])(v62, v3);
  }
  (*(void (**)(char *, uint64_t))(v50 + 8))(v63, v51);
  uint64_t v34 = v60;
LABEL_8:
  uint64_t v42 = (uint64_t)v57;
  uint64_t v43 = v59;
  v53(v57, v59, v29);
  v54(v42, 0, 1, v29);
  uint64_t v44 = v58;
  sub_1A67FCF04(v42);
  swift_beginAccess();
  uint64_t v45 = v44[3];
  sub_1A6891800();
  sub_1A6892510();
  uint64_t v46 = sub_1A680407C(&qword_1EB67A200, MEMORY[0x1F418BC90]);
  uint64_t v64 = v45;
  MEMORY[0x1F4188790](v46);
  char v47 = *(char **)(v34 + 88);
  *(&v48 - 4) = v29;
  *(&v48 - 3) = v47;
  *(&v48 - 2) = v43;
  sub_1A6891ED0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1A6892280();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A67FDA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A68924C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1A6892510();
  sub_1A68924F0();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A67FDBDC()
{
  sub_1A6892510();
  uint64_t v0 = sub_1A6892A00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - v2;
  swift_beginAccess();
  sub_1A6891800();
  sub_1A680407C(&qword_1EB67A200, MEMORY[0x1F418BC90]);
  sub_1A6891EF0();
  sub_1A6891EB0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_endAccess();
}

uint64_t sub_1A67FDD3C(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v37 = *v1;
  uint64_t v2 = *(void *)(v37 + 80);
  uint64_t v40 = sub_1A6892510();
  uint64_t v3 = sub_1A6892A00();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v38 = (char *)&v33 - v4;
  uint64_t v5 = sub_1A68924C0();
  int64_t v35 = *(uint64_t **)(v5 - 8);
  uint64_t v36 = (uint64_t *)v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_1A6892A00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = *(void *)(v2 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v10);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v33 - v17;
  char v39 = v1;
  sub_1A67FCE54((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v2);
    sub_1A68924F0();
    ((void (*)(char *, uint64_t *))v35[1])(v7, v36);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v2);
  }
  uint64_t v19 = sub_1A6891800();
  uint64_t v36 = &v33;
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1A68917F0();
  int64_t v35 = &v33;
  MEMORY[0x1F4188790](v23);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v34(v22, v22, v19);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  int64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = v2;
  uint64_t v26 = v39;
  *((void *)v25 + 3) = *(void *)(v37 + 88);
  *((void *)v25 + 4) = v26;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v25[v24], v22, v19);
  swift_retain();
  uint64_t v28 = v40;
  uint64_t v27 = v41;
  uint64_t v29 = sub_1A68924D0();
  MEMORY[0x1F4188790](v29);
  v34(v22, v22, v19);
  uint64_t v30 = *(void *)(v28 - 8);
  uint64_t v31 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v38, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v28);
  swift_beginAccess();
  sub_1A680407C(&qword_1EB67A200, MEMORY[0x1F418BC90]);
  sub_1A6891EF0();
  sub_1A6891F00();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_1A67FE2FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = sub_1A6891800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = *(void *)(v3 + 80);
  *((void *)v13 + 5) = *(void *)(v3 + 88);
  *((void *)v13 + 6) = v8;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[v12], (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1A67FE6F4((uint64_t)v6, (uint64_t)&unk_1E96C2E90, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1A67FE524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  void v7[6] = a4;
  v7[7] = a5;
  void v7[5] = a1;
  return MEMORY[0x1F4188298](sub_1A67FE54C, 0, 0);
}

uint64_t sub_1A67FE54C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    type metadata accessor for StreamCachedValue();
    swift_getWitnessTable();
    uint64_t v3 = sub_1A68923E0();
    return MEMORY[0x1F4188298](sub_1A67FE658, v3, v2);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1A67FE658()
{
  sub_1A67FDBDC();
  swift_release();
  return MEMORY[0x1F4188298](sub_1A67FE6CC, 0, 0);
}

uint64_t sub_1A67FE6CC()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A67FE6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A68924A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A6892490();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A677B668(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A68923E0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_1A6741AD0(&qword_1EB67A398);
  return swift_task_create();
}

uint64_t sub_1A67FE8A0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  v2[4] = v4;
  uint64_t v5 = sub_1A6892560();
  v2[5] = v5;
  v2[6] = *(void *)(v5 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v6 = sub_1A6892A00();
  v2[8] = v6;
  v2[9] = *(void *)(v6 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = *(void *)(v3 + 88);
  type metadata accessor for StreamCachedValue();
  swift_getWitnessTable();
  uint64_t v8 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A67FEA94, v8, v7);
}

uint64_t sub_1A67FEA94()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[4];
  sub_1A67FCE54(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[4];
    uint64_t v6 = v0[3];
    uint64_t v7 = (*(uint64_t (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    (*(void (**)(uint64_t))(*(void *)v6 + 216))(v7);
    uint64_t v8 = swift_task_alloc();
    v0[14] = v8;
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v4;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[15] = v9;
    uint64_t WitnessTable = swift_getWitnessTable();
    void *v9 = v0;
    v9[1] = sub_1A67FECCC;
    uint64_t v11 = v0[5];
    uint64_t v12 = v0[2];
    return MEMORY[0x1F4187E80](v12, &unk_1E96C2DC0, v8, v11, WitnessTable);
  }
  else
  {
    uint64_t v14 = v0[11];
    uint64_t v13 = v0[12];
    uint64_t v15 = v0[4];
    uint64_t v16 = v0[2];
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
    v17(v13, v0[10], v15);
    v17(v16, v13, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1A67FECCC()
{
  uint64_t v1 = *(void *)(*v0 + 56);
  uint64_t v2 = *(void *)(*v0 + 48);
  uint64_t v3 = *(void *)(*v0 + 40);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
  return v5();
}

uint64_t sub_1A67FEE88()
{
  return sub_1A68051D4(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_1A67FEEC4@<X0>(uint64_t a1@<X8>)
{
  v22[1] = a1;
  uint64_t v24 = *v1;
  uint64_t v2 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v23 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v24 + 80);
  uint64_t v5 = sub_1A68924E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v22 - v7;
  uint64_t v9 = sub_1A6892510();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v22 - v14;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBD028], v5);
  sub_1A68924B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = sub_1A68924A0();
  uint64_t v17 = (uint64_t)v23;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v23, 1, 1, v16);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = v24;
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0;
  *((void *)v19 + 4) = v4;
  *((void *)v19 + 5) = *(void *)(v20 + 88);
  *((void *)v19 + 6) = v1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v18], v13, v9);
  swift_retain();
  sub_1A6787038(v17, (uint64_t)&unk_1E96C2DD8, (uint64_t)v19);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_1A67FF1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  type metadata accessor for StreamCachedValue();
  swift_getWitnessTable();
  uint64_t v7 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A67FF2BC, v7, v6);
}

uint64_t sub_1A67FF2BC()
{
  sub_1A67FDD3C(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StreamCachedValue.recomputeBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
  sub_1A6798390(v1);
  return v1;
}

char *sub_1A67FF368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a2;
  uint64_t v28 = a1;
  uint64_t v7 = *v4;
  uint64_t v23 = *(void *)(*v4 + 80);
  uint64_t v8 = sub_1A6892560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = sub_1A6892560();
  uint64_t v26 = *(void *)(v12 - 8);
  uint64_t v27 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v22 = a4;
  uint64_t v24 = type metadata accessor for StreamCachedValue();
  (*(void (**)(void))(v7 + 216))();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v23;
  void v15[3] = a3;
  void v15[4] = *(void *)(v7 + 88);
  void v15[5] = a4;
  uint64_t v16 = v25;
  v15[6] = v28;
  v15[7] = v16;
  swift_retain();
  sub_1A6892520();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = v22;
  v17[2] = a3;
  v17[3] = v18;
  void v17[4] = v28;
  void v17[5] = v16;
  v17[6] = v4;
  swift_retain();
  swift_retain();
  uint64_t v19 = sub_1A6803F78((uint64_t)v14, (uint64_t)&unk_1E96C2DF8, (uint64_t)v17);
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
  return v19;
}

uint64_t sub_1A67FF628(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = v5;
  uint64_t v10 = sub_1A6892A00();
  uint64_t v8[2] = v10;
  v8[3] = *(void *)(v10 - 8);
  uint64_t v11 = swift_task_alloc();
  v8[4] = v11;
  uint64_t v12 = *(void *)(a5 - 8);
  (*(void (**)(void))(v12 + 16))();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, a5);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v13 = (void *)swift_task_alloc();
  void v8[5] = v13;
  void *v13 = v8;
  v13[1] = sub_1A67FF7F8;
  return v15(a1, v11);
}

uint64_t sub_1A67FF7F8()
{
  uint64_t v1 = *(void *)(*v0 + 32);
  uint64_t v2 = *(void *)(*v0 + 24);
  uint64_t v3 = *(void *)(*v0 + 16);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1A67FF950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v4[3] = a2;
  v4[4] = a3;
  v4[2] = a1;
  uint64_t v10 = *a4;
  uint64_t v5 = sub_1A6892A00();
  void v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v4[7] = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t))(*(void *)(v10 + 208) + **(int **)(v10 + 208));
  uint64_t v7 = (void *)swift_task_alloc();
  v4[8] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1A67FFAE8;
  return v9(v6);
}

uint64_t sub_1A67FFAE8()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = *(int **)(*v0 + 24);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v1[9] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1A67FFCA8;
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[2];
  return v8(v6, v5);
}

uint64_t sub_1A67FFCA8()
{
  uint64_t v1 = *(void *)(*v0 + 56);
  uint64_t v2 = *(void *)(*v0 + 48);
  uint64_t v3 = *(void *)(*v0 + 40);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

char *StreamCachedValue.__allocating_init(stream:recomputeBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A6803F78(a1, a2, a3);
  sub_1A67978FC(a2);
  uint64_t v6 = sub_1A6892560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

char *StreamCachedValue.init(stream:recomputeBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A6803C1C(a1, a2, a3);
  sub_1A67978FC(a2);
  uint64_t v6 = sub_1A6892560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

uint64_t sub_1A67FFF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  void v7[5] = a4;
  void v7[6] = a5;
  v7[9] = *(void *)(a6 - 8);
  void v7[10] = swift_task_alloc();
  sub_1A6892A00();
  v7[11] = swift_task_alloc();
  uint64_t v8 = sub_1A6892550();
  v7[12] = v8;
  v7[13] = *(void *)(v8 - 8);
  v7[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A680007C, 0, 0);
}

uint64_t sub_1A680007C()
{
  sub_1A6892560();
  sub_1A6892530();
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A6800160;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return MEMORY[0x1F4187D58](v2, 0, 0, v3);
}

uint64_t sub_1A6800160()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A680025C, 0, 0);
}

uint64_t sub_1A680025C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[10], v1, v3);
    uint64_t Strong = swift_weakLoadStrong();
    v0[16] = Strong;
    if (Strong)
    {
      type metadata accessor for StreamCachedValue();
      swift_getWitnessTable();
      uint64_t v8 = sub_1A68923E0();
      return MEMORY[0x1F4188298](sub_1A6800474, v8, v7);
    }
    else
    {
      (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[7]);
      uint64_t v9 = (void *)swift_task_alloc();
      v0[15] = v9;
      void *v9 = v0;
      v9[1] = sub_1A6800160;
      uint64_t v10 = v0[11];
      uint64_t v11 = v0[12];
      return MEMORY[0x1F4187D58](v10, 0, 0, v11);
    }
  }
}

uint64_t sub_1A6800474()
{
  sub_1A67FD3FC(*(char **)(v0 + 80));
  swift_release();
  return MEMORY[0x1F4188298](sub_1A68004E8, 0, 0);
}

uint64_t sub_1A68004E8()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[7]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A6800160;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return MEMORY[0x1F4187D58](v2, 0, 0, v3);
}

uint64_t StreamCachedValue.deinit()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_1A6891800();
  sub_1A6892510();
  sub_1A680407C(&qword_1EB67A200, MEMORY[0x1F418BC90]);
  sub_1A6891ED0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1A6892280();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1A6891EF0();
  sub_1A6891EE0();
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 112);
  uint64_t v3 = sub_1A6892A00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_1A67978FC(*(void *)(v1 + *(void *)(*(void *)v1 + 120)));
  return v1;
}

uint64_t StreamCachedValue.__deallocating_deinit()
{
  return sub_1A6803190((void (*)(void))StreamCachedValue.deinit);
}

uint64_t sub_1A68007CC()
{
  uint64_t v0 = type metadata accessor for StreamCachedValue();
  uint64_t WitnessTable = swift_getWitnessTable();

  return TTSActor.unownedExecutor.getter(v0, WitnessTable);
}

uint64_t sub_1A680082C()
{
  sub_1A68036A0();

  return swift_retain();
}

uint64_t sub_1A6800854()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1A680088C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_unknownObjectRelease();
}

double sub_1A68008D4()
{
  swift_beginAccess();
  return *(double *)(v0 + 24);
}

uint64_t sub_1A6800908(double a1)
{
  uint64_t result = swift_beginAccess();
  *(double *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_1A6800948())()
{
  return j_j__swift_endAccess;
}

id sub_1A680099C()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);

  return v1;
}

uint64_t sub_1A68009E0(double a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1A6800A28(a1);
  return v2;
}

uint64_t sub_1A6800A28(double a1)
{
  *(void *)(v1 + 16) = 0;
  sub_1A67501D4(0, (unint64_t *)&qword_1EB67A340);
  uint64_t v3 = sub_1A6891E10();
  MEMORY[0x1F4188790](v3 - 8);
  sub_1A6891DF0();
  uint64_t v4 = sub_1A6892890();
  MEMORY[0x1F4188790](v4);
  v9[1] = MEMORY[0x1E4FBC860];
  sub_1A680407C((unint64_t *)&unk_1EB67A330, MEMORY[0x1F41AB0E0]);
  sub_1A6741AD0(&qword_1EB67A2B0);
  sub_1A67EB220(&qword_1EB67A2B8, &qword_1EB67A2B0);
  sub_1A6892B90();
  uint64_t v5 = sub_1A68928A0();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50]);
  *(void *)(v1 + 32) = sub_1A68928D0();
  *(double *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1A6800C74(uint64_t a1, uint64_t a2)
{
  v17[0] = (*(uint64_t (**)(void))(*(void *)v2 + 152))();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v2;
  void v5[3] = a1;
  v5[4] = a2;
  aBlock[4] = sub_1A6804058;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A677469C;
  aBlock[3] = &unk_1EFB808E8;
  uint64_t v6 = _Block_copy(aBlock);
  uint64_t v7 = sub_1A6891E10();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1A6891DF0();
  uint64_t v11 = sub_1A6891DE0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1A680407C((unint64_t *)&qword_1E96C1600, MEMORY[0x1F41AAFC0]);
  sub_1A6741AD0(&qword_1E96C1618);
  sub_1A67EB220((unint64_t *)&unk_1E96C1620, &qword_1E96C1618);
  sub_1A6892B90();
  uint64_t v15 = (void *)v17[0];
  MEMORY[0x1AD0BF980](0, v10, v14, v6);
  _Block_release(v6);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1A6800F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 104);
  uint64_t v41 = a1;
  if (v3(a1))
  {
    swift_getObjectType();
    sub_1A6892920();
    swift_unknownObjectRelease();
  }
  sub_1A67501D4(0, &qword_1E96C1630);
  uint64_t v4 = sub_1A68928F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A68928E0();
  uint64_t v9 = v41;
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v41 + 152))(v8);
  uint64_t v11 = sub_1A6892900();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = sub_1A6891E40();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v42 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = v33;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v33 - v16;
  sub_1A6891E20();
  uint64_t v18 = sub_1A6891DD0();
  uint64_t v37 = v33;
  uint64_t v19 = *(void **)(v18 - 8);
  uint64_t v20 = v19[8];
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  double v22 = (*(double (**)(uint64_t))(*(void *)v9 + 128))(v21) * 1000.0;
  if ((~*(void *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v22 < 9.22337204e18)
  {
    *(void *)((char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0)) = (uint64_t)v22;
    uint64_t v23 = *MEMORY[0x1E4FBCAC0];
    v33[0] = v11;
    uint64_t v24 = (void (*)(char *, uint64_t, uint64_t))v19[13];
    v24((char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v18);
    sub_1A6891E30();
    uint64_t v34 = v12;
    uint64_t v25 = (void (*)(char *, uint64_t))v19[1];
    v25((char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v35 = v13 + 8;
    uint64_t v36 = v26;
    v26(v17, v12);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v37 = v33;
    unint64_t v38 = (void *)ObjectType;
    MEMORY[0x1F4188790](ObjectType);
    uint64_t v28 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = ((uint64_t (*)(char *, void, uint64_t))v24)(v28, *MEMORY[0x1E4FBCAD8], v18);
    v33[1] = v33;
    MEMORY[0x1F4188790](v29);
    *(void *)uint64_t v28 = 0;
    v24(v28, *MEMORY[0x1E4FBCAA0], v18);
    MEMORY[0x1AD0BFA30](v42, v28, v28, ObjectType);
    v25(v28, v18);
    v25(v28, v18);
    aBlock[4] = v39;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A68015CC;
    aBlock[3] = &unk_1EFB7EA20;
    _Block_copy(aBlock);
    uint64_t v30 = sub_1A6891DE0();
    MEMORY[0x1F4188790](v30);
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1A680407C((unint64_t *)&qword_1E96C1600, MEMORY[0x1F41AAFC0]);
    swift_retain();
    sub_1A6741AD0(&qword_1E96C1618);
    sub_1A67EB220((unint64_t *)&unk_1E96C1620, &qword_1E96C1618);
    sub_1A6892B90();
    sub_1A6891E60();
    swift_allocObject();
    sub_1A6891E50();
    swift_release();
    sub_1A6892910();
    swift_release();
    sub_1A6892930();
    uint64_t v31 = *(void (**)(uint64_t))(*(void *)v41 + 112);
    uint64_t v32 = swift_unknownObjectRetain();
    v31(v32);
    swift_unknownObjectRelease();
    v36(v42, v34);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1A68015D0()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1A6801610()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A6801648(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A6801690())()
{
  return j__swift_endAccess;
}

void sub_1A68016E4()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_1A68040F0();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1A6801750(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v11[-v7];
  (*(void (**)(unsigned char *))(v3 + 16))(v6);
  uint64_t v9 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)a1 + 128))(v11);
  sub_1A6892760();
  sub_1A6892710();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  return v9(v11, 0);
}

void sub_1A68018EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1A6804FAC();
  os_unfair_lock_unlock(v3);
}

void sub_1A68019A8()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_1A680521C();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1A6801A14(void *a1, uint64_t *a2)
{
  uint64_t v23 = *a2;
  uint64_t v4 = *(void *)(v23 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  double v22 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = sub_1A6892A00();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = sub_1A673E63C(a1, a1[3]);
  MEMORY[0x1F4188790](v13);
  (*(void (**)(char *))(v15 + 16))((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1A675026C(v25);
  sub_1A6892250();
  uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v17 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v18 = (void (**)(char *, uint64_t))(v5 + 8);
  while (1)
  {
    sub_1A674E06C((uint64_t)v25, AssociatedTypeWitness);
    sub_1A6892A40();
    if ((*v16)(v12, 1, v4) == 1) {
      break;
    }
    (*v17)(v22, v12, v4);
    uint64_t v19 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*a2 + 128))(v24);
    sub_1A6892760();
    sub_1A6892710();
    (*v18)(v9, v4);
    v19(v24, 0);
  }
  return sub_1A6741A24((uint64_t)v25);
}

void sub_1A6801D78()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_1A680521C();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1A6801DE4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = sub_1A6892A00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v8[-v4];
  uint64_t v6 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(v1 + 128))(v8);
  sub_1A6892760();
  sub_1A6892720();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return v6(v8, 0);
}

uint64_t sub_1A6801F54()
{
  return sub_1A6801F84((uint64_t)sub_1A6804170);
}

uint64_t sub_1A6801F6C()
{
  return sub_1A6801F84((uint64_t)sub_1A6804244);
}

uint64_t sub_1A6801F84(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1A6892760();
  sub_1A68018EC(a1, v1, v3);
  return v5;
}

uint64_t sub_1A680200C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1A680204C()
{
  uint64_t v0 = swift_allocObject();
  sub_1A6802084();
  return v0;
}

uint64_t sub_1A6802084()
{
  sub_1A6741AD0(&qword_1E96C1678);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = sub_1A6891E80();
  return v0;
}

void sub_1A68020F8(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
  sub_1A68042A4(v2);
}

uint64_t sub_1A6802108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  sub_1A6750AC4(&qword_1E96C1520);
  sub_1A6892670();
  uint64_t v4 = sub_1A6892A00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1A68021E0(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  sub_1A6750AC4(&qword_1E96C1520);
  sub_1A6892670();
  uint64_t v4 = sub_1A6892A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

id sub_1A68022C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v52 = *v1;
  uint64_t v2 = *(void *)(v52 + 80);
  sub_1A6750AC4(&qword_1E96C1520);
  uint64_t v50 = sub_1A6892630();
  uint64_t v41 = *(void *)(v50 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v50);
  BOOL v49 = (char *)&v39 - v4;
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  unint64_t v48 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v7;
  MEMORY[0x1F4188790](v6);
  char v53 = (char *)&v39 - v8;
  uint64_t v9 = sub_1A6892670();
  uint64_t v10 = sub_1A6892A00();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v51 = sub_1A6892640();
  uint64_t v13 = *(void *)(v51 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v51);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = sub_1A68926A0();
  uint64_t v43 = *(void *)(v20 - 8);
  uint64_t v44 = v20;
  MEMORY[0x1F4188790](v20);
  double v22 = (char *)&v39 - v21;
  objc_msgSend(*(id *)((char *)v1 + *(void *)(v52 + 120)), sel_lock);
  sub_1A6802938((uint64_t)v16);
  uint64_t v42 = v22;
  sub_1A6892620();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v51);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v51 = (uint64_t)v19;
  v23(v12, v19, v9);
  uint64_t v45 = v17;
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v52 = v9;
  v24(v12, 0, 1, v9);
  sub_1A68021E0((uint64_t)v12);
  uint64_t v25 = *(void *)(*v1 + 104);
  char v47 = v1;
  uint64_t v26 = (uint64_t *)((char *)v1 + v25);
  swift_beginAccess();
  uint64_t v27 = *v26;
  uint64_t v28 = swift_bridgeObjectRetain();
  if (MEMORY[0x1AD0BF450](v28, v2))
  {
    uint64_t v29 = 0;
    uint64_t v30 = (void (**)(char *, uint64_t))(v41 + 8);
    uint64_t v31 = v49;
    do
    {
      char v32 = sub_1A6892350();
      sub_1A6892310();
      if (v32)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v53, v27+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v29, v2);
        uint64_t v33 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        id result = (id)sub_1A6892C60();
        if (v40 != 8)
        {
          __break(1u);
          return result;
        }
        v54[0] = result;
        (*(void (**)(char *, id *, uint64_t))(v5 + 16))(v53, v54, v2);
        swift_unknownObjectRelease();
        uint64_t v33 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
LABEL_10:
          __break(1u);
          break;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v48, v53, v2);
      sub_1A6892650();
      (*v30)(v31, v50);
      ++v29;
    }
    while (v33 != MEMORY[0x1AD0BF450](v27, v2));
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = v47;
  swift_beginAccess();
  sub_1A68923C0();
  sub_1A68923B0();
  swift_endAccess();
  uint64_t v36 = (void *)v35[2];
  if (v36 == (void *)1)
  {
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v52);
  }
  else
  {
    v54[0] = (id)v35[2];
    sub_1A6804294(v36);
    uint64_t v37 = v51;
    uint64_t v38 = v52;
    sub_1A6892660();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v37, v38);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v46, v42, v44);
  return objc_msgSend(*(id *)((char *)v35 + *(void *)(*v35 + 120)), sel_unlock);
}

uint64_t sub_1A6802938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBD120];
  sub_1A6750AC4(&qword_1E96C1520);
  uint64_t v3 = sub_1A6892640();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

id sub_1A68029D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v25 = (char *)&v21 - v5;
  sub_1A6750AC4(&qword_1E96C1520);
  uint64_t v6 = sub_1A6892630();
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_1A6892670();
  uint64_t v10 = sub_1A6892A00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v21 - v16;
  objc_msgSend(*(id *)((char *)v2 + *(void *)(v3 + 120)), sel_lock);
  sub_1A6802108((uint64_t)v14);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v9);
  uint64_t v19 = (void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  if (v18 == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    (*v19)(v25, v24, v4);
    swift_beginAccess();
    sub_1A68923C0();
    sub_1A6892380();
    swift_endAccess();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v9);
    (*v19)(v25, v24, v4);
    sub_1A6892650();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v9);
  }
  return objc_msgSend(*(id *)((char *)v2 + *(void *)(*v2 + 120)), sel_unlock);
}

id sub_1A6802DB8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_1A6750AC4(&qword_1E96C1520);
  uint64_t v5 = sub_1A6892670();
  uint64_t v6 = sub_1A6892A00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v18 - v12;
  objc_msgSend(*(id *)((char *)v2 + *(void *)(v4 + 120)), sel_lock);
  id v14 = a1;
  uint64_t v15 = (void *)v2[2];
  v2[2] = a1;
  sub_1A68042A4(v15);
  sub_1A6802108((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v5);
    v18[1] = a1;
    id v16 = a1;
    sub_1A6892660();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v5);
  }
  return objc_msgSend(*(id *)((char *)v2 + *(void *)(*v2 + 120)), sel_unlock);
}

uint64_t sub_1A6803024()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))(0);
}

id *SuspendableStream.deinit()
{
  (*((void (**)(void))*v0 + 34))();
  sub_1A68042A4(v0[2]);
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 12);
  sub_1A6750AC4(&qword_1E96C1520);
  sub_1A6892670();
  uint64_t v2 = sub_1A6892A00();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t SuspendableStream.__deallocating_deinit()
{
  return sub_1A6803190((void (*)(void))SuspendableStream.deinit);
}

uint64_t sub_1A6803190(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_1A68031EC()
{
  uint64_t v0 = swift_allocObject();
  sub_1A6803224();
  return v0;
}

void *sub_1A6803224()
{
  uint64_t v1 = *v0;
  v0[2] = 1;
  uint64_t v2 = (char *)v0 + *(void *)(v1 + 96);
  sub_1A6750AC4(&qword_1E96C1520);
  uint64_t v3 = sub_1A6892670();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = *(void *)(*v0 + 104);
  *(void *)((char *)v0 + v4) = sub_1A6892330();
  *((unsigned char *)v0 + *(void *)(*v0 + 112)) = 2;
  uint64_t v5 = *(void *)(*v0 + 120);
  *(void *)((char *)v0 + v5) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FC8]), sel_init);
  return v0;
}

uint64_t sub_1A6803350()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1A6803358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1A680337C, v3, 0);
}

uint64_t sub_1A680337C()
{
  uint64_t v1 = *(void *)(v0[5] + 112);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(v0[3] + *(int *)v0[3]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A6803460;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_1A6803460()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A6803554()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1A68035B0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t sub_1A68035F0(uint64_t a1)
{
  type metadata accessor for AXSendableLockBox();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t sub_1A6803640()
{
  swift_unknownObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1A6803678()
{
  return v0;
}

uint64_t sub_1A6803684()
{
  return sub_1A6803678();
}

uint64_t sub_1A68036A0()
{
  return *(void *)(v0 + 16);
}

uint64_t type metadata accessor for StreamCachedValue()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A68036C0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A6803754;
  return sub_1A6803754(1);
}

uint64_t sub_1A6803754(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1A6803850()
{
  uint64_t v1 = sub_1A6892510();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A6803928()
{
  uint64_t v2 = *(void *)(sub_1A6892510() - 8);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  return sub_1A67FF1EC((uint64_t)v5, v6, v7, v3, v4);
}

uint64_t sub_1A6803A00()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A6803A38(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v8 = (int *)v2[6];
  uint64_t v7 = v2[7];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_1A677B9EC;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1E96C2DE0 + dword_1E96C2DE0);
  return v10(a1, a2, v8, v7, v6);
}

uint64_t sub_1A6803B28()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A6803B68(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = (uint64_t *)v1[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A677B9EC;
  return sub_1A67FF950(a1, v4, v5, v6);
}

char *sub_1A6803C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v6 = *(void *)v3;
  uint64_t v29 = a1;
  uint64_t v30 = v6;
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t v28 = sub_1A6892560();
  uint64_t v8 = *(void *)(v28 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v28);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v14;
  type metadata accessor for TTSExecutor();
  *((void *)v3 + 2) = TTSExecutor.__allocating_init()();
  sub_1A6891800();
  sub_1A6892510();
  swift_getTupleTypeMetadata2();
  sub_1A6892330();
  sub_1A680407C(&qword_1EB67A200, MEMORY[0x1F418BC90]);
  *((void *)v3 + 3) = sub_1A6891EC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(&v4[*(void *)(*(void *)v4 + 112)], 1, 1, v7);
  uint64_t v15 = (uint64_t *)&v4[*(void *)(*(void *)v4 + 120)];
  *uint64_t v15 = a2;
  v15[1] = v27;
  uint64_t v16 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  int v18 = v11;
  uint64_t v19 = v11;
  uint64_t v20 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v19, v29, v28);
  unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  uint64_t v23 = v30;
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = v7;
  *((void *)v22 + 5) = *(void *)(v23 + 88);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v22[v21], v18, v20);
  *(void *)&v22[(v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8] = v17;
  sub_1A6798390(v26);
  sub_1A6787038((uint64_t)v25, (uint64_t)&unk_1E96C2EB0, (uint64_t)v22);
  swift_release();
  return v4;
}

char *sub_1A6803F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A6803C1C(a1, a2, a3);
}

uint64_t sub_1A6803FD4()
{
  return sub_1A6892500();
}

uint64_t sub_1A6804018()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1A6804058()
{
  sub_1A6800F3C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A6804064(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A6804074()
{
  return swift_release();
}

uint64_t sub_1A680407C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A68040C4()
{
  return sub_1A6801750(*(void *)(v0 + 16));
}

uint64_t sub_1A68040F0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A6804118()
{
  return sub_1A6801A14(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1A6804144()
{
  return sub_1A6801DE4(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1A6804170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)v1 + 112))();
  uint64_t v4 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 128))(v6);
  sub_1A6892760();
  sub_1A6892750();
  uint64_t result = v4(v6, 0);
  *a1 = v3;
  return result;
}

uint64_t sub_1A6804244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v1 + 112))();
  *a1 = result;
  return result;
}

id sub_1A6804294(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_1A68042A4(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t type metadata accessor for AXSendableLockBox()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A68042CC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A6804308()
{
  uint64_t result = sub_1A6892A00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StreamCachedValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StreamCachedValue);
}

uint64_t dispatch thunk of StreamCachedValue.recompute()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 176) + **(int **)(*(void *)v0 + 176));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  return v4();
}

uint64_t dispatch thunk of StreamCachedValue.currentValue()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 208) + **(int **)(*(void *)v1 + 208));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A6750954;
  return v6(a1);
}

uint64_t dispatch thunk of StreamCachedValue.subscribe()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of StreamCachedValue.derived<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of StreamCachedValue.__allocating_init(stream:recomputeBlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t type metadata accessor for Debouncer()
{
  return self;
}

uint64_t sub_1A6804654()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ThreadSafeBuffer()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A68046C0()
{
  sub_1A6750AC4(&qword_1E96C1520);
  sub_1A6892670();
  uint64_t result = sub_1A6892A00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SuspendableStream()
{
  return sub_1A674B1C8();
}

uint64_t method lookup function for SuspendableStream(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SuspendableStream);
}

uint64_t dispatch thunk of SuspendableStream.subscribe()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of SuspendableStream.yield(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of SuspendableStream.finish(throwing:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of SuspendableStream.finish()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t sub_1A6804884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

void sub_1A6804890(void **a1)
{
  unint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void *sub_1A68048B4(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **sub_1A6804900(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      id v11 = v7;
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v9 = v7;
    uint64_t v10 = *a1;
    *a1 = v7;
  }
  return a1;
}

void **sub_1A68049A0(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t sub_1A6804A14(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A6804A70(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A6804ACC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1A6804AEC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

uint64_t type metadata accessor for SuspendableStream.State()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A6804B34()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A6804B80()
{
  uint64_t v1 = sub_1A6891800();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A6804C4C()
{
  uint64_t v1 = *(void *)(sub_1A6891800() - 8);
  uint64_t v2 = *(uint64_t **)(v0 + 32);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1A67FE2FC(v2, v3);
}

uint64_t sub_1A6804CB0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A6804CE8()
{
  uint64_t v1 = sub_1A6891800();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A6804DBC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A6891800() - 8);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_1A677B9EC;
  *(_OWORD *)(v7 + 64) = v8;
  *(void *)(v7 + 48) = v5;
  *(void *)(v7 + 56) = v6;
  *(void *)(v7 + 40) = a1;
  return MEMORY[0x1F4188298](sub_1A67FE54C, 0, 0);
}

uint64_t sub_1A6804EBC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A6804EF4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A6750954;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96C2E98 + dword_1E96C2E98);
  return v6(a1, v4);
}

uint64_t sub_1A6804FAC()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A6804FD4()
{
  uint64_t v1 = sub_1A6892560();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1A68050C0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(sub_1A6892560() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1A677B9EC;
  return sub_1A67FFF2C((uint64_t)v8, v9, v10, v6, v7, v2, v3);
}

uint64_t sub_1A68051D4(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1A68051E8(uint64_t a1)
{
  return sub_1A67FDA60(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1A680521C()
{
  return sub_1A68040F0();
}

uint64_t TTSMarkup.Emphasis.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.Emphasis.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.Emphasis.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

void TTSMarkup.Emphasis.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  if (!*(void *)((*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8))() + 16)
    || (sub_1A673F7AC(0x6C6576656CLL, 0xE500000000000000), (v5 & 1) == 0))
  {

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = TTSMarkup.Emphasis.Level.init(rawValue:)((char *)&v18);
  if (v18 == 3)
  {

LABEL_6:
    *(unsigned char *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return;
  }
  v22[40] = v18;
  unint64_t v7 = (*(uint64_t (**)(uint64_t))((*v4 & *a1) + 0x100))(v6);
  unint64_t v8 = v7;
  if (!(v7 >> 62))
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_9;
    }
LABEL_23:
    id v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
    swift_bridgeObjectRelease_n();
    uint64_t v19 = sub_1A6741AD0(&qword_1E96C1D60);
    uint64_t v20 = &protocol witness table for <A> [A];

    *(void *)&long long v18 = v11;
    sub_1A673E770(&v18, (uint64_t)v22);
    sub_1A6805CE8((uint64_t)&v21, a2);
    sub_1A6805CF8((uint64_t)&v21);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1A6892EB0();
  if (!v9) {
    goto LABEL_23;
  }
LABEL_9:
  if (v9 >= 1)
  {
    uint64_t v10 = 0;
    id v11 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x1AD0BFD30](v10, v8);
      }
      else {
        id v12 = *(id *)(v8 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      sub_1A677BA04((uint64_t)&v16);

      if (v17)
      {
        sub_1A673E770(&v16, (uint64_t)&v18);
        sub_1A673E770(&v18, (uint64_t)&v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v11 = sub_1A676207C(0, v11[2] + 1, 1, v11);
        }
        unint64_t v15 = v11[2];
        unint64_t v14 = v11[3];
        if (v15 >= v14 >> 1) {
          id v11 = sub_1A676207C((void *)(v14 > 1), v15 + 1, 1, v11);
        }
        void v11[2] = v15 + 1;
        sub_1A673E770(&v16, (uint64_t)&v11[5 * v15 + 4]);
      }
      else
      {
        sub_1A6761FF4((uint64_t)&v16);
      }
      ++v10;
    }
    while (v9 != v10);
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t TTSMarkup.Emphasis.Level.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A6892F30();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void static TTSMarkup.Emphasis.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t TTSMarkup.Emphasis._content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.Emphasis._content.setter(long long *a1)
{
  uint64_t v3 = v1 + 8;
  sub_1A6741A24(v3);

  return sub_1A673E770(a1, v3);
}

uint64_t (*TTSMarkup.Emphasis._content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Emphasis.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.Emphasis.Level.description.getter()
{
  uint64_t v1 = 0x6574617265646F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656375646572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E6F727473;
  }
}

uint64_t TTSMarkup.Emphasis.Level.rawValue.getter()
{
  uint64_t v1 = 0x6574617265646F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656375646572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E6F727473;
  }
}

uint64_t sub_1A6805708(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A6805714(*a1, *a2);
}

uint64_t sub_1A6805714(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6574617265646F6DLL;
    }
    else {
      uint64_t v3 = 0x64656375646572;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6574617265646F6DLL;
      }
      else {
        uint64_t v6 = 0x64656375646572;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x676E6F727473;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x676E6F727473)
  {
LABEL_21:
    char v8 = sub_1A6893120();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A6805828()
{
  return sub_1A6893250();
}

uint64_t sub_1A68058C8()
{
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A6805954()
{
  return sub_1A6893250();
}

uint64_t sub_1A68059F0@<X0>(char *a1@<X8>)
{
  return TTSMarkup.Emphasis.Level.init(rawValue:)(a1);
}

void sub_1A68059FC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6574617265646F6DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656375646572;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676E6F727473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A6805A58()
{
  uint64_t v1 = 0x6574617265646F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656375646572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E6F727473;
  }
}

uint64_t TTSMarkup.Emphasis.init(_:speech:)@<X0>(char *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a1;
  *(void *)a3 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a3 + 48) = v3;
  return a2();
}

unint64_t TTSMarkup.Emphasis.attributes.getter()
{
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 0x6C6576656CLL;
  *(void *)(inited + 40) = 0xE500000000000000;
  int v2 = *(unsigned __int8 *)(v0 + 48);
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6574617265646F6DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656375646572;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*(unsigned char *)(v0 + 48)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676E6F727473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v3;
  return sub_1A6742BA0(inited);
}

uint64_t TTSMarkup.Emphasis.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[3] = &type metadata for TTSMarkup.Emphasis;
  v7[4] = &protocol witness table for TTSMarkup.Emphasis;
  v7[0] = swift_allocObject();
  sub_1A6805CE8(v3, v7[0] + 16);
  TTSMarkupVisitor.visit(_:)(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

void sub_1A6805C28(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

unint64_t sub_1A6805C34()
{
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 0x6C6576656CLL;
  *(void *)(inited + 40) = 0xE500000000000000;
  int v2 = *(unsigned __int8 *)(v0 + 48);
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6574617265646F6DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656375646572;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*(unsigned char *)(v0 + 48)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676E6F727473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v3;
  return sub_1A6742BA0(inited);
}

uint64_t sub_1A6805CE8(uint64_t a1, uint64_t a2)
{
  return _s8EmphasisVwcp(a2, a1);
}

uint64_t sub_1A6805CF8(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  swift_bridgeObjectRelease();
  sub_1A6741A24(v2);
  return a1;
}

uint64_t sub_1A6805D30()
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 24);

  return MEMORY[0x1F4186498](v0, 65, 7);
}

unint64_t sub_1A6805D74()
{
  unint64_t result = qword_1E96C2F20;
  if (!qword_1E96C2F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C2F20);
  }
  return result;
}

uint64_t _s8EmphasisVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 8, v4, v6);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s8EmphasisVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1A67588AC((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 _s4SpecV3BoxV7BoxTypeOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s8EmphasisVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  sub_1A6741A24(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s8EmphasisVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8EmphasisVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.Emphasis()
{
  return &type metadata for TTSMarkup.Emphasis;
}

unsigned char *_s8EmphasisV5LevelOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A68060B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.Emphasis.Level()
{
  return &type metadata for TTSMarkup.Emphasis.Level;
}

id sub_1A68060E8()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoreSynthesisVoiceShim()), sel_init);
  qword_1E96D0388 = (uint64_t)result;
  return result;
}

id CoreSynthesisVoiceShim.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static CoreSynthesisVoiceShim.shared.getter()
{
  if (qword_1E96D0380 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_1E96D0388;

  return v0;
}

void static CoreSynthesisVoiceShim.shared.setter(uint64_t a1)
{
  if (qword_1E96D0380 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_1E96D0388;
  qword_1E96D0388 = a1;
}

uint64_t (*static CoreSynthesisVoiceShim.shared.modify())()
{
  if (qword_1E96D0380 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A68063D4()
{
  uint64_t v1 = OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___internalResolver;
  if (*(void *)(v0 + OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___internalResolver))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___internalResolver);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for VoiceResolver();
    uint64_t v4 = *sub_1A677FE2C();
    v8[3] = type metadata accessor for DefaultVoiceSource();
    v8[4] = &protocol witness table for DefaultVoiceSource;
    v8[0] = v4;
    swift_retain();
    uint64_t v7 = *(void *)sub_1A67F8E18();
    sub_1A673D258(&v6);
    uint64_t v2 = VoiceResolver.__allocating_init(voiceSource:requiredTraits:sortMode:)((uint64_t)v8, &v7, &v6);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1A6806494(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___internalResolver) = a1;
  return swift_release();
}

uint64_t (*sub_1A68064AC(uint64_t *a1))(void *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1A68063D4();
  return sub_1A68064F4;
}

uint64_t sub_1A68064F4(void *a1, uint64_t a2)
{
  return sub_1A6806714(a1, a2, &OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___internalResolver);
}

uint64_t sub_1A6806500()
{
  uint64_t v1 = OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___publicResolver;
  if (*(void *)(v0 + OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___publicResolver))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___publicResolver);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for VoiceResolver();
    uint64_t v4 = *sub_1A677FE2C();
    v10[3] = type metadata accessor for DefaultVoiceSource();
    void v10[4] = &protocol witness table for DefaultVoiceSource;
    v10[0] = v4;
    sub_1A674CEE4();
    swift_retain();
    sub_1A6741AD0(&qword_1EB67A298);
    sub_1A6766A64((unint64_t *)&qword_1EB67A2A0, &qword_1EB67A298);
    sub_1A6892B90();
    v9[0] = v9[1];
    sub_1A6741AD0((uint64_t *)&unk_1E96C3040);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1A689DC40;
    *(void *)(v5 + 32) = *(void *)sub_1A67F8E00();
    sub_1A6892B90();
    v8[0] = v8[1];
    sub_1A673D258(&v7);
    uint64_t v2 = VoiceResolver.__allocating_init(voiceSource:requiredTraits:forbiddenTraits:sortMode:)(v10, v9, v8, &v7);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1A68066A8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___publicResolver) = a1;
  return swift_release();
}

uint64_t (*sub_1A68066C0(uint64_t *a1))(void *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1A6806500();
  return sub_1A6806708;
}

uint64_t sub_1A6806708(void *a1, uint64_t a2)
{
  return sub_1A6806714(a1, a2, &OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___publicResolver);
}

uint64_t sub_1A6806714(void *a1, uint64_t a2, void *a3)
{
  *(void *)(a1[1] + *a3) = *a1;
  return swift_release();
}

uint64_t sub_1A6806728(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1A680674C, 0, 0);
}

uint64_t sub_1A680674C()
{
  uint64_t v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 136)) + 0x78))();
  *(void *)(v0 + 144) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 264)
                                                         + **(int **)(*(void *)v1 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A68068A4;
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  return v6(v0 + 16, v3, v4);
}

uint64_t sub_1A68068A4()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_1A6809AE4, 0, 0);
}

uint64_t sub_1A6806B38(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_1A6892000();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  void *v9 = v3;
  v9[1] = sub_1A6809AE8;
  v9[16] = v7;
  v9[17] = v8;
  v9[15] = v5;
  return MEMORY[0x1F4188298](sub_1A680674C, 0, 0);
}

uint64_t sub_1A6806C24(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1A6806C48, 0, 0);
}

uint64_t sub_1A6806C48()
{
  uint64_t v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 136)) + 0x78))();
  *(void *)(v0 + 144) = v1;
  uint64_t v2 = sub_1A6891A40();
  *(void *)(v0 + 152) = v2;
  *(void *)(v0 + 160) = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 168) = v3;
  swift_bridgeObjectRetain();
  sub_1A6891900();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v1 + 304) + **(int **)(*(void *)v1 + 304));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A6806E28;
  return v6(v0 + 16, v3);
}

uint64_t sub_1A6806E28()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A6809AE4, 0, 0);
}

uint64_t sub_1A6807120(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_1A6892000();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  void *v9 = v3;
  v9[1] = sub_1A6809AE8;
  v9[16] = v7;
  v9[17] = v8;
  v9[15] = v5;
  return MEMORY[0x1F4188298](sub_1A6806C48, 0, 0);
}

uint64_t sub_1A680720C()
{
  v1[3] = v0;
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C1500);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C1658);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A6807340, 0, 0);
}

uint64_t sub_1A6807340()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 24)) + 0x78))();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v1, v5 + OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voices, v3);
  swift_release();
  v6(v2, v1, v3);
  sub_1A6766A64(&qword_1E96C2F50, &qword_1E96C1658);
  sub_1A6892600();
  uint64_t v7 = sub_1A6766A64(&qword_1E96C2F58, &qword_1E96C1500);
  id v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v8;
  *id v8 = v0;
  v8[1] = sub_1A68074FC;
  uint64_t v9 = *(void *)(v0 + 32);
  return MEMORY[0x1F4187C78](v0 + 16, v9, v7);
}

uint64_t sub_1A68074FC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    uint64_t v4 = v2[4];
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2[5] + 8);
    return v5(v3, v4);
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1A6807634, 0, 0);
  }
}

uint64_t sub_1A6807634()
{
  uint64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v2 = v0[10];
    uint64_t v3 = v0[7];
    uint64_t v4 = v0[8];
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    uint64_t v5 = sub_1A680775C(v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[7];
    uint64_t v8 = v0[8];
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v5);
}

uint64_t sub_1A680775C(uint64_t a1)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v1 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  for (v4 &= v4 - 1; ; uint64_t v4 = (v9 - 1) & v9)
  {
    sub_1A6834320();
    MEMORY[0x1AD0BF380]();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1A6892320();
    }
    sub_1A6892360();
    uint64_t result = sub_1A6892300();
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v8 >= v5) {
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_25;
      }
      uint64_t v9 = *(void *)(v1 + 8 * v7);
      if (!v9)
      {
        int64_t v7 = v8 + 2;
        if (v8 + 2 >= v5) {
          goto LABEL_25;
        }
        uint64_t v9 = *(void *)(v1 + 8 * v7);
        if (!v9)
        {
          int64_t v7 = v8 + 3;
          if (v8 + 3 >= v5) {
            goto LABEL_25;
          }
          uint64_t v9 = *(void *)(v1 + 8 * v7);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_20:
    ;
  }
  int64_t v10 = v8 + 4;
  if (v10 >= v5)
  {
LABEL_25:
    swift_release();
    return v11;
  }
  uint64_t v9 = *(void *)(v1 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(v1 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A6807988(uint64_t a1, char a2)
{
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v15 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v16 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (v4)
  {
    uint64_t v19 = (v4 - 1) & v4;
    int64_t v20 = v6;
    unint64_t v7 = __clz(__rbit64(v4)) | (v6 << 6);
LABEL_24:
    id v12 = *(void **)(*(void *)(a1 + 48) + 104 * v7 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v12;
    sub_1A67F8E00();
    sub_1A674CEE4();
    if ((sub_1A6892B10() & 1) != 0 && (a2 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A6834320();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = swift_bridgeObjectRelease();
      MEMORY[0x1AD0BF380](v14);
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1A6892320();
      }
      sub_1A6892360();
      uint64_t result = sub_1A6892300();
    }
    unint64_t v4 = v19;
    int64_t v6 = v20;
  }
  int64_t v8 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= v16) {
    goto LABEL_29;
  }
  unint64_t v9 = *(void *)(v15 + 8 * v8);
  int64_t v10 = v6 + 1;
  if (v9) {
    goto LABEL_23;
  }
  int64_t v10 = v6 + 2;
  if (v6 + 2 >= v16) {
    goto LABEL_29;
  }
  unint64_t v9 = *(void *)(v15 + 8 * v10);
  if (v9) {
    goto LABEL_23;
  }
  int64_t v10 = v6 + 3;
  if (v6 + 3 >= v16) {
    goto LABEL_29;
  }
  unint64_t v9 = *(void *)(v15 + 8 * v10);
  if (v9) {
    goto LABEL_23;
  }
  int64_t v10 = v6 + 4;
  if (v6 + 4 >= v16) {
    goto LABEL_29;
  }
  unint64_t v9 = *(void *)(v15 + 8 * v10);
  if (v9)
  {
LABEL_23:
    uint64_t v19 = (v9 - 1) & v9;
    int64_t v20 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    goto LABEL_24;
  }
  uint64_t v11 = v6 + 5;
  if (v6 + 5 >= v16)
  {
LABEL_29:
    swift_release();
    return v21;
  }
  unint64_t v9 = *(void *)(v15 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v6 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v16) {
      goto LABEL_29;
    }
    unint64_t v9 = *(void *)(v15 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A6807E60(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  unint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_1A6807F08;
  return sub_1A680720C();
}

uint64_t sub_1A6807F08()
{
  uint64_t v1 = *(void (***)(void, void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v6 = *v0;
  swift_task_dealloc();

  sub_1A6809830();
  uint64_t v3 = (void *)sub_1A68922D0();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v3);

  _Block_release(v1);
  unint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1A6808074(char a1)
{
  *(void *)(v2 + 24) = v1;
  *(unsigned char *)(v2 + 104) = a1;
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C1500);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = *(void *)(v3 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1658);
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = *(void *)(v4 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A68081AC, 0, 0);
}

uint64_t sub_1A68081AC()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 24)) + 0x60))();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v1, v5 + OBJC_IVAR____TtC12TextToSpeech13VoiceResolver_voices, v3);
  swift_release();
  v6(v2, v1, v3);
  sub_1A6766A64(&qword_1E96C2F50, &qword_1E96C1658);
  sub_1A6892600();
  uint64_t v7 = sub_1A6766A64(&qword_1E96C2F58, &qword_1E96C1500);
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v8;
  *int64_t v8 = v0;
  v8[1] = sub_1A6808368;
  uint64_t v9 = *(void *)(v0 + 32);
  return MEMORY[0x1F4187C78](v0 + 16, v9, v7);
}

uint64_t sub_1A6808368()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    uint64_t v4 = v2[4];
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2[5] + 8);
    return v5(v3, v4);
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1A68084A0, 0, 0);
  }
}

uint64_t sub_1A68084A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    char v5 = *(unsigned char *)(v0 + 104);
    (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    uint64_t v6 = sub_1A6807988(v1, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 64);
    (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v6);
}

uint64_t sub_1A6808750(char a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  uint64_t v6 = (void *)swift_task_alloc();
  v3[4] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A6809AEC;
  return sub_1A6808074(a1);
}

uint64_t sub_1A680880C(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1A6808830, 0, 0);
}

uint64_t sub_1A6808830()
{
  uint64_t v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 136)) + 0x60))();
  *(void *)(v0 + 144) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 264)
                                                         + **(int **)(*(void *)v1 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A6808988;
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  return v6(v0 + 16, v3, v4);
}

uint64_t sub_1A6808988()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_1A6808AA0, 0, 0);
}

uint64_t sub_1A6808AA0()
{
  uint64_t v1 = v0[3];
  if (v1)
  {
    uint64_t v2 = (void *)v0[12];
    uint64_t v3 = v0[11];
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[8];
    uint64_t v4 = v0[7];
    uint64_t v14 = v0[6];
    uint64_t v6 = v0[4];
    uint64_t v5 = v0[5];
    uint64_t v7 = v0[2];
    id v8 = sub_1A6834320();
    sub_1A673FF60(v7, v1, v6, v5, v14, v4, v13, v12, v11, v3, v2);
  }
  else
  {
    id v8 = 0;
  }
  uint64_t v9 = (uint64_t (*)(id))v0[1];
  return v9(v8);
}

uint64_t sub_1A6808D54(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_1A6892000();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  void *v9 = v3;
  v9[1] = sub_1A6808E40;
  v9[16] = v7;
  v9[17] = v8;
  v9[15] = v5;
  return MEMORY[0x1F4188298](sub_1A6808830, 0, 0);
}

uint64_t sub_1A6808E40(void *a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  ((void (**)(void, void *))v3)[2](v3, a1);
  _Block_release(v3);

  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

id CoreSynthesisVoiceShim.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___internalResolver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC12TextToSpeech22CoreSynthesisVoiceShim____lazy_storage___publicResolver] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreSynthesisVoiceShim();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for CoreSynthesisVoiceShim()
{
  return self;
}

id CoreSynthesisVoiceShim.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreSynthesisVoiceShim();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for CoreSynthesisVoiceShim(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreSynthesisVoiceShim);
}

uint64_t dispatch thunk of CoreSynthesisVoiceShim.voice(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x90);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A677B9E8;
  return v9(a1, a2);
}

uint64_t dispatch thunk of CoreSynthesisVoiceShim.voice(languageCode:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x98);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A677B9E8;
  return v9(a1, a2);
}

uint64_t dispatch thunk of CoreSynthesisVoiceShim.publicVoices()()
{
  objc_super v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9E8;
  return v5();
}

uint64_t dispatch thunk of CoreSynthesisVoiceShim.internalVoices(includingSiri:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA8);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A677B9E8;
  return v7(a1);
}

uint64_t dispatch thunk of CoreSynthesisVoiceShim.internalVoice(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xB0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A677A564;
  return v9(a1, a2);
}

uint64_t sub_1A6809678()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A6750954;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E96C2F98 + dword_1E96C2F98);
  return v6(v2, v3, v4);
}

uint64_t sub_1A6809734()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A6809774()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(char, void *, void *))((char *)&dword_1E96C2FB8 + dword_1E96C2FB8);
  return v6(v2, v4, v3);
}

unint64_t sub_1A6809830()
{
  unint64_t result = qword_1E96C2FD8;
  if (!qword_1E96C2FD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96C2FD8);
  }
  return result;
}

uint64_t sub_1A6809870()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A68098B0()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A677B9EC;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1E96C2FE0 + dword_1E96C2FE0);
  return v5(v2, v3);
}

uint64_t sub_1A6809968()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E96C3000 + dword_1E96C3000);
  return v6(v2, v3, v4);
}

uint64_t sub_1A6809A28()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E96C3020 + dword_1E96C3020);
  return v6(v2, v3, v4);
}

uint64_t CoreSynthesizer.isSpeaking.getter()
{
  return sub_1A6809B68(3);
}

uint64_t CoreSynthesizer.isPaused.getter()
{
  return sub_1A6809B68(1);
}

uint64_t sub_1A6809B68(char a1)
{
  (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x120))();
  swift_retain();
  swift_release();
  sub_1A6891D20();
  swift_release();
  v5[0] = v5[1];
  char v4 = a1;
  return static TTSSpeechQueue.State.== infix(_:_:)(v5, &v4) & 1;
}

uint64_t CoreSynthesizer.speak(_:synth:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v3[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A6809CB4, 0, 0);
}

uint64_t sub_1A6809CB4()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  (*(void (**)(void, void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x488))(0, 0);
  sub_1A6741AD0(&qword_1E96C3060);
  sub_1A67501D4(0, &qword_1E96C3068);
  uint64_t v5 = sub_1A68035F0(v3);
  sub_1A6741AD0(&qword_1E96C3070);
  sub_1A67501D4(0, &qword_1E96C3078);
  uint64_t v6 = sub_1A68035F0(v4);
  uint64_t v7 = sub_1A68924A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v2;
  *(unsigned char *)(v8 + 56) = 0;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  uint64_t v9 = v2;
  sub_1A67724DC(v1, (uint64_t)&unk_1E96C3088, v8);
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1A680A000(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  void v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[6] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1A680A0D8;
  return CoreSynthesizer.speak(_:synth:)((uint64_t)v8, (uint64_t)v9);
}

uint64_t sub_1A680A0D8()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 40);
  uint64_t v2 = *(void **)(*v0 + 32);
  uint64_t v3 = *(void **)(*v0 + 24);
  uint64_t v4 = *(void **)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_1A680A248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 808) = v14;
  *(_OWORD *)(v8 + 792) = v13;
  *(void *)(v8 + 784) = a8;
  *(unsigned char *)(v8 + 217) = a7;
  *(void *)(v8 + 776) = a6;
  *(void *)(v8 + 768) = a5;
  *(void *)(v8 + 760) = a4;
  uint64_t v9 = sub_1A6741AD0((uint64_t *)&unk_1E96C31F0);
  *(void *)(v8 + 816) = v9;
  *(void *)(v8 + 824) = *(void *)(v9 - 8);
  *(void *)(v8 + 832) = swift_task_alloc();
  uint64_t v10 = sub_1A6741AD0((uint64_t *)&unk_1E96C2240);
  *(void *)(v8 + 840) = v10;
  *(void *)(v8 + 848) = *(void *)(v10 - 8);
  *(void *)(v8 + 856) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A680A394, 0, 0);
}

uint64_t sub_1A680A394()
{
  uint64_t v1 = (NSString *)sub_1A6891FD0();
  Class v2 = NSClassFromString(v1);
  v0[108] = v2;

  if (v2)
  {
    uint64_t v3 = (void *)v0[95];
    v0[109] = swift_getKeyPath();
    uint64_t v4 = *v3 + 120;
    v0[110] = *(void *)v4;
    v0[111] = v4 & 0xFFFFFFFFFFFFLL | 0xEBF000000000000;
    return MEMORY[0x1F4188298](sub_1A680A590, v3, 0);
  }
  else
  {
    uint64_t v5 = v0[97];
    uint64_t v6 = v0[96];
    uint64_t v7 = swift_task_alloc();
    v0[117] = v7;
    *(void *)(v7 + 16) = v5;
    uint64_t v11 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 112)
                                                                     + **(int **)(*(void *)v6 + 112));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[118] = v8;
    uint64_t v9 = sub_1A6741AD0(&qword_1E96C3210);
    *uint64_t v8 = v0;
    v8[1] = sub_1A680ADC4;
    return v11(v0 + 28, &unk_1E96C3208, v7, v9);
  }
}

uint64_t sub_1A680A590()
{
  (*(void (**)(void))(v0 + 880))(*(void *)(v0 + 872));
  swift_release();
  return MEMORY[0x1F4188298](sub_1A680A614, 0, 0);
}

uint64_t sub_1A680A614()
{
  if (*(void *)(v0 + 752)
    && (unsigned __int8 v1 = objc_msgSend(*(id *)(v0 + 752), sel_isKindOfClass_, *(void *)(v0 + 864)),
        swift_unknownObjectRelease(),
        (v1 & 1) != 0))
  {
    uint64_t v2 = *(void **)(v0 + 768);
    *(void *)(v0 + 896) = objc_msgSend(self, sel_shared);
    *(void *)(v0 + 904) = swift_getKeyPath();
    uint64_t v3 = *v2 + 120;
    *(void *)(v0 + 912) = *(void *)v3;
    *(void *)(v0 + 920) = v3 & 0xFFFFFFFFFFFFLL | 0xEBF000000000000;
    return MEMORY[0x1F4188298](sub_1A680A82C, v2, 0);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 776);
    uint64_t v5 = *(void *)(v0 + 768);
    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 936) = v6;
    *(void *)(v6 + 16) = v4;
    uint64_t v10 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 112)
                                                                    + **(int **)(*(void *)v5 + 112));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 944) = v7;
    uint64_t v8 = sub_1A6741AD0(&qword_1E96C3210);
    *uint64_t v7 = v0;
    v7[1] = sub_1A680ADC4;
    return v10(v0 + 224, &unk_1E96C3208, v6, v8);
  }
}

uint64_t sub_1A680A82C()
{
  (*(void (**)(void))(v0 + 912))(*(void *)(v0 + 904));
  swift_release();
  return MEMORY[0x1F4188298](sub_1A680A8B0, 0, 0);
}

uint64_t sub_1A680A8B0()
{
  unsigned __int8 v1 = (void *)v0[112];
  uint64_t v2 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_parseSSMLToPlainText_, v2);

  id v4 = objc_msgSend(v3, sel_error);
  if (v4)
  {
    uint64_t v5 = v0[97];
    uint64_t v6 = v0[96];
    uint64_t v7 = swift_task_alloc();
    v0[117] = v7;
    *(void *)(v7 + 16) = v5;
    uint64_t v12 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 112)
                                                                     + **(int **)(*(void *)v6 + 112));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[118] = v8;
    uint64_t v9 = sub_1A6741AD0(&qword_1E96C3210);
    *uint64_t v8 = v0;
    v8[1] = sub_1A680ADC4;
    return v12(v0 + 28, &unk_1E96C3208, v7, v9);
  }
  else
  {
    long long v13 = (uint64_t (*)(void))(*(void *)(*(void *)v0[96] + 112) + **(int **)(*(void *)v0[96] + 112));
    uint64_t v11 = (void *)swift_task_alloc();
    v0[116] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1A680AB74;
    return v13();
  }
}

uint64_t sub_1A680AB74()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A680AC70, 0, 0);
}

uint64_t sub_1A680AC70()
{
  uint64_t v1 = v0[97];
  uint64_t v2 = v0[96];
  uint64_t v3 = swift_task_alloc();
  v0[117] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v7 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(*(void *)v2 + 112)
                                                                  + **(int **)(*(void *)v2 + 112));
  id v4 = (void *)swift_task_alloc();
  v0[118] = v4;
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C3210);
  *id v4 = v0;
  v4[1] = sub_1A680ADC4;
  return v7(v0 + 28, &unk_1E96C3208, v3, v5);
}

uint64_t sub_1A680ADC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A680AEDC, 0, 0);
}

uint64_t sub_1A680AEDC()
{
  if (*(void *)(v0 + 232))
  {
    uint64_t v1 = *(void **)(v0 + 776);
    long long v2 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 64) = v2;
    long long v3 = *(_OWORD *)(v0 + 336);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 320);
    *(_OWORD *)(v0 + 128) = v3;
    long long v4 = *(_OWORD *)(v0 + 304);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v0 + 96) = v4;
    *(_OWORD *)(v0 + 201) = *(_OWORD *)(v0 + 409);
    long long v5 = *(_OWORD *)(v0 + 400);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 384);
    *(_OWORD *)(v0 + 192) = v5;
    long long v6 = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v0 + 160) = v6;
    long long v7 = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 32) = v7;
    if (*(unsigned char *)(v0 + 217) == 1) {
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x428))();
    }
    else {
      (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x410))();
    }
    sub_1A6892530();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A680B0C0;
    uint64_t v11 = *(void *)(v0 + 816);
    return MEMORY[0x1F4187ED8](v0 + 688, 0, 0, v11, v0 + 736);
  }
  else
  {
    sub_1A6750210(v0 + 224, &qword_1E96C3210);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_1A680B0C0()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1A680B6B4;
  }
  else {
    uint64_t v1 = sub_1A680B1D0;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1A680B1D0()
{
  unint64_t v1 = *(void *)(v0 + 704);
  if (v1 >> 3 == 0xFFFFFFFF)
  {
    uint64_t v2 = *(void *)(v0 + 856);
    uint64_t v3 = *(void *)(v0 + 848);
    uint64_t v4 = *(void *)(v0 + 840);
    (*(void (**)(void, void))(*(void *)(v0 + 824) + 8))(*(void *)(v0 + 832), *(void *)(v0 + 816));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    sub_1A67982E0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    long long v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 696);
    uint64_t v35 = *(void **)(v0 + 688);
    uint64_t v33 = *(void *)(v0 + 712);
    uint64_t v28 = *(void *)(v0 + 800);
    uint64_t v29 = *(void *)(v0 + 808);
    uint64_t v7 = *(void *)(v0 + 792);
    uint64_t v8 = *(void *)(v0 + 784);
    uint64_t v9 = *(void **)(v0 + 776);
    uint64_t v10 = *(void *)(v0 + 768);
    uint64_t v11 = *(void *)(v0 + 760);
    sub_1A67501D4(0, (unint64_t *)&qword_1EB67A340);
    char v32 = (void *)sub_1A68928B0();
    sub_1A6798284(v0 + 16, v0 + 432);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v10;
    *(void *)(v12 + 32) = v35;
    *(void *)(v12 + 40) = v34;
    *(void *)(v12 + 48) = v1;
    *(void *)(v12 + 56) = v33;
    *(void *)(v12 + 64) = v8;
    *(void *)(v12 + 72) = v7;
    long long v13 = *(_OWORD *)(v0 + 608);
    *(_OWORD *)(v12 + 240) = *(_OWORD *)(v0 + 592);
    *(_OWORD *)(v12 + 256) = v13;
    *(_OWORD *)(v12 + 265) = *(_OWORD *)(v0 + 617);
    long long v14 = *(_OWORD *)(v0 + 544);
    *(_OWORD *)(v12 + 176) = *(_OWORD *)(v0 + 528);
    *(_OWORD *)(v12 + 192) = v14;
    long long v15 = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v12 + 208) = *(_OWORD *)(v0 + 560);
    *(_OWORD *)(v12 + 224) = v15;
    long long v16 = *(_OWORD *)(v0 + 480);
    *(_OWORD *)(v12 + 112) = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v12 + 128) = v16;
    long long v17 = *(_OWORD *)(v0 + 512);
    *(_OWORD *)(v12 + 144) = *(_OWORD *)(v0 + 496);
    *(_OWORD *)(v12 + 160) = v17;
    long long v18 = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v12 + 80) = *(_OWORD *)(v0 + 432);
    *(_OWORD *)(v12 + 96) = v18;
    *(void *)(v12 + 288) = v28;
    *(void *)(v12 + 296) = v29;
    *(void *)(v12 + 304) = v9;
    *(void *)(v0 + 672) = sub_1A680F608;
    *(void *)(v0 + 680) = v12;
    *(void *)(v0 + 640) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 648) = 1107296256;
    *(void *)(v0 + 656) = sub_1A677469C;
    *(void *)(v0 + 664) = &unk_1EFB7E9D0;
    uint64_t v30 = _Block_copy((const void *)(v0 + 640));
    aBlock = (void *)sub_1A6891E10();
    uint64_t v19 = *(aBlock - 1);
    uint64_t v20 = swift_task_alloc();
    swift_retain();
    swift_retain();
    unint64_t v21 = v1;
    sub_1A680FA2C(v35, v34, v1);
    sub_1A6798390(v8);
    sub_1A6798390(v28);
    id v22 = v9;
    sub_1A6891DF0();
    uint64_t v23 = sub_1A6891DE0();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = swift_task_alloc();
    *(void *)(v0 + 744) = MEMORY[0x1E4FBC860];
    sub_1A680FA40();
    sub_1A6741AD0(&qword_1E96C1618);
    sub_1A6766A64((unint64_t *)&unk_1E96C1620, &qword_1E96C1618);
    sub_1A6892B90();
    MEMORY[0x1AD0BF980](0, v20, v25, v30);
    _Block_release(v30);

    sub_1A680FA8C(v35, v34, v21);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    (*(void (**)(uint64_t, void *))(v19 + 8))(v20, aBlock);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_release();
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1A680B0C0;
    uint64_t v27 = *(void *)(v0 + 816);
    return MEMORY[0x1F4187ED8](v0 + 688, 0, 0, v27, v0 + 736);
  }
}

uint64_t sub_1A680B6B4()
{
  uint64_t v1 = v0[107];
  uint64_t v2 = v0[106];
  uint64_t v3 = v0[105];
  (*(void (**)(void, void))(v0[103] + 8))(v0[104], v0[102]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1A67982E0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A680B784()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1A677B9EC;
  return sub_1A680A248((uint64_t)v7, v8, v9, v2, v3, v4, v5, v6);
}

id sub_1A680B868@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_delegate);
  *a2 = result;
  return result;
}

id sub_1A680B8A4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDelegate_, *a1);
}

void sub_1A680B8B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_speechString);
  uint64_t v4 = sub_1A6892000();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_1A680B910(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return MEMORY[0x1F4188298](sub_1A680B930, 0, 0);
}

uint64_t sub_1A680B930()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_speechString);
  if (!v1)
  {
    sub_1A6892000();
    id v1 = (id)sub_1A6891FD0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(*(id *)(v0 + 16), sel_setSsmlRepresentation_, v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A680B9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1A680B9FC, 0, 0);
}

uint64_t sub_1A680B9FC()
{
  uint64_t v1 = (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 32)) + 0x150))(*(id *)(v0 + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A680BAE8;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  return sub_1A673D78C(v3, v4, v1);
}

uint64_t sub_1A680BAE8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id sub_1A680BBDC(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 24);
  switch(*(unsigned char *)(a1 + 16))
  {
    case 1:
      uint64_t v4 = sub_1A680E3E8(*(void *)a1, v2);
      uint64_t v6 = v9;
      id v7 = objc_allocWithZone(MEMORY[0x1E4F15448]);
      uint64_t v8 = sel_initWithSentenceRange_atByteSampleOffset_;
      goto LABEL_5;
    case 2:
      uint64_t v4 = sub_1A680E3E8(*(void *)a1, v2);
      uint64_t v6 = v10;
      id v7 = objc_allocWithZone(MEMORY[0x1E4F15448]);
      uint64_t v8 = sel_initWithParagraphRange_atByteSampleOffset_;
      goto LABEL_5;
    case 3:
      id v12 = objc_allocWithZone(MEMORY[0x1E4F15448]);
      swift_bridgeObjectRetain();
      long long v13 = (void *)sub_1A6891FD0();
      sub_1A6799B1C(v1, v2, 3u);
      id v14 = objc_msgSend(v12, sel_initWithBookmarkName_atByteSampleOffset_, v13, v3);
      goto LABEL_10;
    case 4:
      id v15 = objc_allocWithZone(MEMORY[0x1E4F15448]);
      swift_bridgeObjectRetain();
      long long v13 = (void *)sub_1A6891FD0();
      sub_1A6799B1C(v1, v2, 4u);
      id v14 = objc_msgSend(v15, sel_initWithPhonemeString_atByteSampleOffset_, v13, v3);
LABEL_10:
      id v16 = v14;

      id result = v16;
      break;
    default:
      uint64_t v4 = sub_1A680E3E8(*(void *)a1, v2);
      uint64_t v6 = v5;
      id v7 = objc_allocWithZone(MEMORY[0x1E4F15448]);
      uint64_t v8 = sel_initWithWordRange_atByteSampleOffset_;
LABEL_5:
      id result = objc_msgSend(v7, v8, v4, v6, v3);
      break;
  }
  return result;
}

uint64_t CoreSynthesizer.write(_:toBufferCallback:synth:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[5] = a4;
  v5[6] = v4;
  void v5[3] = a2;
  v5[4] = a3;
  unsigned char v5[2] = a1;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v5[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A680BE34, 0, 0);
}

uint64_t sub_1A680BE34()
{
  unint64_t v2 = (void *)v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  (*(void (**)(void, void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x488))(0, 0);
  sub_1A6741AD0(&qword_1E96C3060);
  sub_1A67501D4(0, &qword_1E96C3068);
  uint64_t v7 = sub_1A68035F0(v4);
  sub_1A6741AD0(&qword_1E96C3070);
  sub_1A67501D4(0, &qword_1E96C3078);
  uint64_t v8 = sub_1A68035F0(v5);
  uint64_t v9 = sub_1A68924A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = v7;
  *(void *)(v10 + 40) = v8;
  *(void *)(v10 + 48) = v2;
  *(unsigned char *)(v10 + 56) = 1;
  *(void *)(v10 + 64) = v6;
  *(void *)(v10 + 72) = v3;
  *(void *)(v10 + 80) = 0;
  *(void *)(v10 + 88) = 0;
  uint64_t v11 = v2;
  swift_retain();
  sub_1A67724DC(v1, (uint64_t)&unk_1E96C3098, v10);
  swift_release();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1A680C1B4(void *a1, void *aBlock, void *a3, const void *a4, void *a5)
{
  void v5[3] = a3;
  v5[4] = a5;
  unsigned char v5[2] = a1;
  uint64_t v10 = _Block_copy(aBlock);
  void v5[5] = _Block_copy(a4);
  uint64_t v11 = swift_allocObject();
  v5[6] = v11;
  *(void *)(v11 + 16) = v10;
  id v12 = a1;
  id v13 = a3;
  a5;
  uint64_t v14 = (void *)swift_task_alloc();
  v5[7] = v14;
  *uint64_t v14 = v5;
  v14[1] = sub_1A680C2DC;
  return CoreSynthesizer.write(_:toBufferCallback:synth:)((uint64_t)v12, (uint64_t)sub_1A680FB10, v11, (uint64_t)v13);
}

uint64_t sub_1A680C2DC()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 40);
  unint64_t v2 = *(void **)(*v0 + 32);
  uint64_t v3 = *(void **)(*v0 + 24);
  uint64_t v4 = *(void **)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();
  swift_release();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t CoreSynthesizer.write(_:toBufferCallback:toMarkerCallback:synth:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  void v7[5] = a4;
  void v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v7[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A680C510, 0, 0);
}

uint64_t sub_1A680C510()
{
  unint64_t v2 = (void *)v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v15 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[3];
  (*(void (**)(void, void))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x488))(0, 0);
  sub_1A6741AD0(&qword_1E96C3060);
  sub_1A67501D4(0, &qword_1E96C3068);
  uint64_t v8 = sub_1A68035F0(v4);
  sub_1A6741AD0(&qword_1E96C3070);
  sub_1A67501D4(0, &qword_1E96C3078);
  uint64_t v9 = sub_1A68035F0(v6);
  uint64_t v10 = sub_1A68924A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v1, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v9;
  *(void *)(v11 + 48) = v2;
  *(unsigned char *)(v11 + 56) = 1;
  *(void *)(v11 + 64) = v7;
  *(void *)(v11 + 72) = v5;
  *(void *)(v11 + 80) = v15;
  *(void *)(v11 + 88) = v3;
  id v12 = v2;
  swift_retain();
  swift_retain();
  sub_1A67724DC(v1, (uint64_t)&unk_1E96C30A8, v11);
  swift_release();
  swift_task_dealloc();
  id v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1A680C8BC(void *a1, void *aBlock, const void *a3, void *a4, const void *a5, void *a6)
{
  void v6[3] = a4;
  long long v6[4] = a6;
  void v6[2] = a1;
  id v12 = _Block_copy(aBlock);
  id v13 = _Block_copy(a3);
  v6[5] = _Block_copy(a5);
  uint64_t v14 = swift_allocObject();
  v6[6] = v14;
  *(void *)(v14 + 16) = v12;
  uint64_t v15 = swift_allocObject();
  v6[7] = v15;
  *(void *)(v15 + 16) = v13;
  id v16 = a1;
  id v17 = a4;
  a6;
  long long v18 = (void *)swift_task_alloc();
  v6[8] = v18;
  void *v18 = v6;
  v18[1] = sub_1A680CA2C;
  return CoreSynthesizer.write(_:toBufferCallback:toMarkerCallback:synth:)((uint64_t)v16, (uint64_t)sub_1A680F064, v14, (uint64_t)sub_1A680F078, v15, (uint64_t)v17);
}

uint64_t sub_1A680CA2C()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 40);
  unint64_t v2 = *(void **)(*v0 + 32);
  uint64_t v3 = *(void **)(*v0 + 24);
  uint64_t v4 = *(void **)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

void sub_1A680CBDC(uint64_t a1, uint64_t a2)
{
  sub_1A67501D4(0, &qword_1E96C3170);
  id v3 = (id)sub_1A68922D0();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);
}

uint64_t CoreSynthesizer.stopSpeaking(at:)(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x1F4188298](sub_1A680CC78, 0, 0);
}

uint64_t sub_1A680CC78()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  id v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0 + 18;
  uint64_t v8 = v0 + 16;
  uint64_t v7 = v0[16];
  uint64_t v6 = (void *)v8[1];
  v1[2] = v2;
  v1[7] = v5;
  v1[3] = sub_1A680CDCC;
  uint64_t v9 = swift_continuation_init();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  v1[14] = sub_1A680E6F8;
  v1[15] = v10;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1A677F400;
  v1[13] = &unk_1EFB80910;
  uint64_t v11 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v6, sel_stopSpeakingAt_completionHandler_, v7, v11);
  _Block_release(v11);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1A680CDCC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)v0 + 144);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 8);
  return v2(v1);
}

uint64_t CoreSynthesizer.stopSpeaking(at:completionHandler:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v7 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)v27 - v11;
  if (objc_msgSend(v3, sel_isSpeaking))
  {
    uint64_t v13 = 1;
    if (a1)
    {
LABEL_3:
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v3;
      uint64_t v15 = *(void (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x488);
      id v16 = v3;
      v15(sub_1A680E770, v14);
      return a2(v13);
    }
  }
  else
  {
    uint64_t v13 = (uint64_t)objc_msgSend(v3, sel_isPaused);
    if (a1) {
      goto LABEL_3;
    }
  }
  long long v18 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = sub_1A68924A0();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v12, 1, 1, v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v3;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a3;
  *(unsigned char *)(v22 + 40) = v13;
  sub_1A6780A34((uint64_t)v12, (uint64_t)v10);
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20);
  swift_retain();
  uint64_t v24 = v3;
  swift_retain();
  if (v23 == 1)
  {
    sub_1A6750210((uint64_t)v10, (uint64_t *)&unk_1EB67A2C0);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v20);
  }
  unint64_t v25 = sub_1A680E85C();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = &unk_1E96C30C0;
  *(void *)(v26 + 24) = v22;
  v27[1] = 6;
  void v27[2] = 0;
  v27[3] = v19;
  v27[4] = v25;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A680D1C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 40) = a5;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a4;
  uint64_t v8 = (uint64_t (*)(void))(*(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x438)
                         + **(int **)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x438));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v5 + 32) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1A680D2E0;
  return v8();
}

uint64_t sub_1A680D2E0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A680D3DC, 0, 0);
}

uint64_t sub_1A680D3DC()
{
  (*(void (**)(void))(v0 + 16))(*(unsigned __int8 *)(v0 + 40));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A680D444(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(int **)((*MEMORY[0x1E4FBC8C8] & *a4) + 0x438);
  uint64_t v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1A677B9EC;
  return v8();
}

uint64_t CoreSynthesizer.pauseSpeaking(at:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1A680D5F4, 0, 0);
}

uint64_t sub_1A680D5F4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 40) = objc_msgSend(*(id *)(v0 + 24), sel_isSpeaking);
  uint64_t v2 = *(void **)(v0 + 24);
  if (v1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    uint64_t v4 = *(void (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x488);
    uint64_t v5 = v2;
    v4(sub_1A680E8B4, v3);
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v7 = *(unsigned __int8 *)(v0 + 40);
    return v6(v7);
  }
  else
  {
    uint64_t v9 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x440);
    uint64_t v11 = (uint64_t (*)(void))((char *)v9 + *v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A680D7F4;
    return v11();
  }
}

uint64_t sub_1A680D7F4()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 40);
  return v2(v3);
}

uint64_t sub_1A680D8EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v9[2] = 0;
  v9[3] = 0;
  _OWORD v9[4] = a1;
  uint64_t v10 = a1;
  sub_1A6787038((uint64_t)v7, a3, (uint64_t)v9);
  swift_release();
  return (*(uint64_t (**)(void, void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x488))(0, 0);
}

uint64_t sub_1A680DA30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(int **)((*MEMORY[0x1E4FBC8C8] & *a4) + 0x440);
  uint64_t v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1A677B9EC;
  return v8();
}

uint64_t sub_1A680DCB8(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v5 = a3;
  return MEMORY[0x1F4188298](sub_1A680DD34, 0, 0);
}

uint64_t sub_1A680DD34()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 48) = objc_msgSend(*(id *)(v0 + 24), sel_isSpeaking);
  uint64_t v2 = *(void **)(v0 + 24);
  if (v1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    uint64_t v4 = *(void (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x488);
    id v5 = v2;
    v4(sub_1A680FB38, v3);
    uint64_t v6 = *(unsigned __int8 *)(v0 + 48);
    uint64_t v7 = *(void (***)(void, void))(v0 + 32);

    v7[2](v7, v6);
    _Block_release(v7);
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v9 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x440);
    uint64_t v12 = (uint64_t (*)(void))((char *)v9 + *v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A680DF58;
    uint64_t v8 = v12;
  }
  return v8();
}

uint64_t sub_1A680DF58()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v4 = *(unsigned __int8 *)(v2 + 48);
  id v5 = *(void (***)(void, void))(v1 + 32);

  v5[2](v5, v4);
  _Block_release(v5);
  uint64_t v6 = *(uint64_t (**)(void))(v3 + 8);
  return v6();
}

Swift::Bool __swiftcall CoreSynthesizer.continueSpeaking()()
{
  uint64_t v1 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v4 = objc_msgSend(v0, sel_isPaused);
  uint64_t v5 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = 0;
  void v6[3] = 0;
  long long v6[4] = v0;
  id v7 = v0;
  sub_1A6787038((uint64_t)v3, (uint64_t)&unk_1E96C30F0, (uint64_t)v6);
  swift_release();
  return v4;
}

uint64_t sub_1A680E1B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(int **)((*MEMORY[0x1E4FBC8C8] & *a4) + 0x448);
  uint64_t v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1A677B9EC;
  return v8();
}

uint64_t sub_1A680E3E8(unint64_t a1, unint64_t a2)
{
  sub_1A673D228(v2 + 144, (uint64_t)&v12);
  if (v14 >= 2u) {
    goto LABEL_15;
  }
  uint64_t v5 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v5 = v12 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v6 = 4 * v5;
  if (v6 < a1 >> 14 || v6 < a2 >> 14)
  {
    sub_1A6892850();
    id v8 = (id)AXTTSLogCommon();
    if (v8)
    {
      uint64_t v9 = v8;
      sub_1A6891CB0();

      uint64_t v10 = sub_1A6892100();
      swift_bridgeObjectRelease();
      uint64_t result = v10 - 1;
      if (!__OFSUB__(v10, 1)) {
        return result;
      }
      __break(1u);
    }
    __break(1u);
LABEL_15:
    uint64_t result = sub_1A6892E60();
    __break(1u);
    return result;
  }
  unint64_t v12 = a1;
  unint64_t v13 = a2;
  sub_1A6741AD0(&qword_1E96C2D48);
  sub_1A6766A64((unint64_t *)&qword_1E96C31E0, &qword_1E96C2D48);
  sub_1A6748030();
  return sub_1A68929D0();
}

uint64_t sub_1A680E594()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  if (*(void *)(v0 + 80)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1A680E604()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *id v7 = v1;
  v7[1] = sub_1A6750954;
  return sub_1A680A248((uint64_t)v7, v8, v9, v2, v3, v4, v5, v6);
}

uint64_t sub_1A680E6E8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A680E6F8(char a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  **(unsigned char **)(*(void *)(v2 + 64) + 40) = a1;
  return MEMORY[0x1F41881F8](v2);
}

uint64_t sub_1A680E720(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A680E730()
{
  return swift_release();
}

uint64_t sub_1A680E738()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A680E770()
{
  return sub_1A680D8EC(*(void **)(v0 + 16), (uint64_t)&unk_1EFB82C58, (uint64_t)&unk_1E96C31D0);
}

uint64_t sub_1A680E7AC()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A677B9EC;
  return sub_1A680D1C4((uint64_t)v6, v2, v3, v4, v5);
}

unint64_t sub_1A680E85C()
{
  unint64_t result = qword_1E96C16A0;
  if (!qword_1E96C16A0)
  {
    type metadata accessor for TTSExecutor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C16A0);
  }
  return result;
}

uint64_t sub_1A680E8B4()
{
  return sub_1A680D8EC(*(void **)(v0 + 16), (uint64_t)&unk_1EFB82C30, (uint64_t)&unk_1E96C31C0);
}

uint64_t sub_1A680E8F0()
{
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return sub_1A680E1B0((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A680E988()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A680E9C8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_1E96C3100 + dword_1E96C3100);
  return v6(v2, v3, v4);
}

uint64_t sub_1A680EA84(uint64_t a1, void *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v27 - v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  _Block_copy(a3);
  if (objc_msgSend(a2, sel_isSpeaking))
  {
    uint64_t v13 = 1;
    if (a1)
    {
LABEL_3:
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a2;
      uint64_t v15 = *(void (**)(uint64_t (*)(), uint64_t))((*MEMORY[0x1E4FBC8C8] & *a2) + 0x488);
      id v16 = a2;
      v15(sub_1A680FB3C, v14);
      a3[2](a3, v13);
      return swift_release();
    }
  }
  else
  {
    uint64_t v13 = (uint64_t)objc_msgSend(a2, sel_isPaused);
    if (a1) {
      goto LABEL_3;
    }
  }
  long long v18 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = sub_1A68924A0();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v11, 1, 1, v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = sub_1A680EE1C;
  *(void *)(v22 + 32) = v12;
  *(unsigned char *)(v22 + 40) = v13;
  sub_1A6780A34((uint64_t)v11, (uint64_t)v9);
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20);
  uint64_t v24 = a2;
  swift_retain();
  swift_retain();
  if (v23 == 1)
  {
    sub_1A6750210((uint64_t)v9, (uint64_t *)&unk_1EB67A2C0);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  unint64_t v25 = sub_1A680E85C();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = &unk_1E96C3140;
  *(void *)(v26 + 24) = v22;
  v27[1] = 6;
  void v27[2] = 0;
  v27[3] = v19;
  v27[4] = v25;
  swift_task_create();
  swift_release();
  return swift_release();
}

uint64_t sub_1A680EE1C(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1A680EE38()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1A680EE78()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A6750954;
  return sub_1A680D1C4((uint64_t)v6, v2, v3, v4, v5);
}

uint64_t sub_1A680EF28()
{
  _Block_release(*(const void **)(v0 + 24));
  _Block_release(*(const void **)(v0 + 32));

  _Block_release(*(const void **)(v0 + 48));

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A680EF88()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (const void *)v0[4];
  char v5 = (void *)v0[5];
  uint64_t v7 = (const void *)v0[6];
  uint64_t v6 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1A677B9EC;
  uint64_t v9 = (uint64_t (*)(void *, void *, const void *, void *, const void *, void *))((char *)&dword_1E96C3150
                                                                                          + dword_1E96C3150);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_1A680F064()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1A680F078(uint64_t a1)
{
  sub_1A680CBDC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A680F080()
{
  _Block_release(*(const void **)(v0 + 24));
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A680F0D8()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  char v5 = (const void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1A677B9EC;
  uint64_t v8 = (uint64_t (*)(void *, void *, void *, const void *, void *))((char *)&dword_1E96C3178 + dword_1E96C3178);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_1A680F1A8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A680F1E0()
{
  _Block_release(*(const void **)(v0 + 32));

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A680F230()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  char v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A677B9EC;
  uint64_t v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_1E96C3198 + dword_1E96C3198);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1A680F2F8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A680F334()
{
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return sub_1A680DA30((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A680F3CC()
{
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return sub_1A680D444((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A680F460(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1A677B9EC;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1A680B9FC, 0, 0);
}

uint64_t sub_1A680F51C()
{
  swift_release();
  swift_release();
  sub_1A6799AF4(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 264);
  if (v1 == 2)
  {
    sub_1A6741A24(v0 + 224);
    if (*(void *)(v0 + 288)) {
LABEL_9:
    }
      swift_release();
  }
  else
  {
    if (v1 <= 1) {
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 288)) {
      goto LABEL_9;
    }
  }

  return MEMORY[0x1F4186498](v0, 312, 7);
}

void sub_1A680F608()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  unint64_t v3 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void (**)(id))(v0 + 64);
  uint64_t v7 = *(void (**)(uint64_t))(v0 + 288);
  uint64_t v24 = *(void **)(v0 + 304);
  id v25 = (id)(*(uint64_t (**)(void))(**(void **)(v0 + 16) + 104))();
  uint64_t v8 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 104))();
  id v9 = objc_msgSend(v25, sel_delegate);
  uint64_t v10 = v9;
  switch(v3 >> 61)
  {
    case 1uLL:
      uint64_t v11 = v8;
      v26[0] = v2;
      v26[1] = v4;
      char v27 = v3;
      uint64_t v28 = v6;
      id v12 = sub_1A680BBDC((uint64_t)v26);
      if (v10
        && (objc_msgSend(v10, sel_respondsToSelector_, sel_speechSynthesizer_willSpeakMarker_utterance_) & 1) != 0)
      {
        objc_msgSend(v10, sel_speechSynthesizer_willSpeakMarker_utterance_, v25, v12, v8);
      }
      if (v7)
      {
        sub_1A6741AD0((uint64_t *)&unk_1E96C15F0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1A689E330;
        *(void *)(v13 + 32) = v12;
        v26[0] = v13;
        sub_1A6892300();
        uint64_t v14 = v26[0];
        id v15 = v12;
        v7(v14);
        swift_bridgeObjectRelease();
      }
      if (objc_msgSend(v12, sel_mark) == (id)1)
      {
        id v16 = (void (*)(void))(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v24) + 0x480))();
        if (v16)
        {
          uint64_t v17 = (uint64_t)v16;
          v16();
          sub_1A67978FC(v17);
        }
        id v18 = objc_msgSend(v12, sel_textRange);
        if (v10)
        {
          id v20 = v18;
          uint64_t v21 = v19;
          if (objc_msgSend(v10, sel_respondsToSelector_, sel_speechSynthesizer_willSpeakRangeOfSpeechString_utterance_))
          {
            uint64_t v22 = v21;
            uint64_t v8 = v11;
            objc_msgSend(v10, sel_speechSynthesizer_willSpeakRangeOfSpeechString_utterance_, v25, v20, v22, v11);

            goto LABEL_37;
          }
          swift_unknownObjectRelease();
        }

        uint64_t v8 = v11;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      break;
    case 2uLL:
      if (!v5) {
        goto LABEL_37;
      }
      v5((id)v2);
      swift_unknownObjectRelease();
      sub_1A6799AF4((void *)v2, v4, v3);
      break;
    case 3uLL:
      if (v2)
      {
        if (v9)
        {
          if (objc_msgSend(v9, sel_respondsToSelector_, sel_speechSynthesizer_didFinishSpeechUtterance_)) {
            objc_msgSend(v10, sel_speechSynthesizer_didFinishSpeechUtterance_, v25, v8);
          }
          goto LABEL_37;
        }
      }
      else if (v9)
      {
        if (objc_msgSend(v9, sel_respondsToSelector_, sel_speechSynthesizer_didCancelSpeechUtterance_)) {
          objc_msgSend(v10, sel_speechSynthesizer_didCancelSpeechUtterance_, v25, v8);
        }
        goto LABEL_37;
      }
      break;
    case 4uLL:
      uint64_t v23 = v6 | v4;
      if (v3 != 0x8000000000000000 || v23 | v2)
      {
        if (v3 == 0x8000000000000000 && v2 == 1 && !v23)
        {
          if (v9)
          {
            if (objc_msgSend(v9, sel_respondsToSelector_, sel_speechSynthesizer_didPauseSpeechUtterance_))objc_msgSend(v10, sel_speechSynthesizer_didPauseSpeechUtterance_, v25, v8); {
            goto LABEL_37;
            }
          }
        }
        else if (v9)
        {
          if (objc_msgSend(v9, sel_respondsToSelector_, sel_speechSynthesizer_didContinueSpeechUtterance_))objc_msgSend(v10, sel_speechSynthesizer_didContinueSpeechUtterance_, v25, v8); {
          goto LABEL_37;
          }
        }
      }
      else if (v9)
      {
        if (objc_msgSend(v9, sel_respondsToSelector_, sel_speechSynthesizer_didStartSpeechUtterance_)) {
          objc_msgSend(v10, sel_speechSynthesizer_didStartSpeechUtterance_, v25, v8);
        }
        goto LABEL_37;
      }
      break;
    default:
LABEL_37:
      swift_unknownObjectRelease();
      break;
  }
}

id sub_1A680FA2C(id result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 3 != 0xFFFFFFFF) {
    return sub_1A6799AA0(result, a2, a3);
  }
  return result;
}

unint64_t sub_1A680FA40()
{
  unint64_t result = qword_1E96C1600;
  if (!qword_1E96C1600)
  {
    sub_1A6891DE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C1600);
  }
  return result;
}

void sub_1A680FA8C(void *a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 3 != 0xFFFFFFFF) {
    sub_1A6799AF4(a1, a2, a3);
  }
}

char *sub_1A680FAA0()
{
  return sel_delegate;
}

char *sub_1A680FAAC()
{
  return sel_speechString;
}

void type metadata accessor for AVSpeechBoundary()
{
  if (!qword_1E96C3288)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E96C3288);
    }
  }
}

void *sub_1A680FB44()
{
  return &unk_1A68A4A8C;
}

float kAVSpeechUtteranceDefaultRate.getter()
{
  return 0.5;
}

void *sub_1A680FB58()
{
  return &unk_1A68A4A90;
}

float kAVSpeechUtteranceMinimumPitchMultiplier.getter()
{
  return 0.5;
}

void *sub_1A680FB6C()
{
  return &unk_1A68A4A94;
}

float kAVSpeechUtteranceMaximumPitchMultiplier.getter()
{
  return 2.0;
}

void *sub_1A680FB80()
{
  return &unk_1A68A4A98;
}

float kAVSpeechUtteranceDefaultPitchMultiplier.getter()
{
  return 1.0;
}

double kAVSpeechUtteranceMinimumVolume.getter()
{
  return 0.0;
}

float kAVSpeechUtteranceMaximumVolume.getter()
{
  return 1.0;
}

void *sub_1A680FBA4()
{
  return &unk_1A68A4A9C;
}

float kAVSpeechUtteranceDefaultVolume.getter()
{
  return 1.0;
}

double String.asSpeech.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  TTSMarkup.SpeechText.init(_:)(a1, a2, &v9);
  double result = *(double *)&v9;
  uint64_t v7 = v10;
  uint64_t v8 = v11;
  *(_OWORD *)a3 = v9;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  return result;
}

float sub_1A680FC18(float a1, float a2, float a3, float a4, float a5)
{
  return (float)((float)(a4 - a3) * (float)((float)(a5 - a1) / (float)(a2 - a1))) + a3;
}

uint64_t sub_1A680FC34()
{
  return 0;
}

uint64_t AVSpeechUtterance.asSpeech.getter@<X0>(void *a1@<X8>)
{
  objc_msgSend(v1, sel_rate);
  if (v3 < 0.0) {
    objc_msgSend(v1, sel_setRate_, 0.0);
  }
  objc_msgSend(v1, sel_rate);
  if (v4 == *(float *)sub_1A680FB44()) {
    goto LABEL_4;
  }
  objc_msgSend(v1, sel_rate);
  float v8 = v7;
  float v9 = *MEMORY[0x1E4F15290];
  objc_msgSend(v1, sel_rate);
  if (v8 >= v9)
  {
    if (v9 >= v10)
    {
LABEL_4:
      float v5 = 0.0;
      int v6 = 1;
      goto LABEL_10;
    }
    objc_msgSend(v1, sel_rate);
    int v6 = 0;
    float v11 = (float)((float)(v13 - v9) / (float)(*MEMORY[0x1E4F15298] - v9)) * 3.0;
    float v12 = 1.0;
  }
  else
  {
    int v6 = 0;
    float v11 = (float)((float)(v10 - *MEMORY[0x1E4F152A8]) / (float)(v9 - *MEMORY[0x1E4F152A8])) * 0.875;
    float v12 = 0.125;
  }
  float v5 = v11 + v12;
LABEL_10:
  objc_msgSend(v1, sel_pitchMultiplier);
  float v15 = v14;
  id v16 = (float *)sub_1A680FB80();
  if (v15 == *v16)
  {
LABEL_11:
    float v17 = 0.0;
    int v18 = 1;
    goto LABEL_17;
  }
  uint64_t v19 = v16;
  objc_msgSend(v1, sel_pitchMultiplier);
  float v21 = v20;
  float v22 = *v19;
  objc_msgSend(v1, sel_pitchMultiplier);
  float v24 = *(float *)&v23;
  if (v21 >= v22)
  {
    if (*v19 >= *(float *)&v23) {
      goto LABEL_11;
    }
    *(float *)&double v23 = *v19;
    objc_msgSend(v1, sel_pitchMultiplier, v23);
    float v28 = *v19;
    int v18 = 0;
    float v26 = (float)((float)(v29 - v28) / (float)(*(float *)sub_1A680FB6C() - v28)) * 100.0;
    float v27 = 0.0;
  }
  else
  {
    id v25 = (float *)sub_1A680FB58();
    int v18 = 0;
    float v26 = (float)((float)(v24 - *v25) / (float)(*v19 - *v25)) * 50.0;
    float v27 = -50.0;
  }
  float v17 = v26 + v27;
LABEL_17:
  objc_msgSend(v1, sel_volume);
  float v31 = v30;
  char v32 = (float *)sub_1A680FBA4();
  if (v31 == *v32)
  {
    if (v6) {
      uint64_t v33 = 0xFFFFFFFF00000000;
    }
    else {
      uint64_t v33 = LODWORD(v5) | 0x100000000;
    }
    if (v18) {
      uint64_t v34 = 0xFFFFFFFC00000000;
    }
    else {
      uint64_t v34 = LODWORD(v17) | 0x8200000000;
    }
    uint64_t v35 = 0xFF00000000;
  }
  else
  {
    objc_msgSend(v1, sel_volume);
    if (v6) {
      uint64_t v33 = 0xFFFFFFFF00000000;
    }
    else {
      uint64_t v33 = LODWORD(v5) | 0x100000000;
    }
    if (v18) {
      uint64_t v34 = 0xFFFFFFFC00000000;
    }
    else {
      uint64_t v34 = LODWORD(v17) | 0x8200000000;
    }
    sub_1A676CBE4((uint64_t)&v46, v36);
    uint64_t v37 = 0x100000000;
    if (!v47) {
      uint64_t v37 = 0;
    }
    uint64_t v35 = v37 | v46;
  }
  int v44 = v33;
  char v45 = BYTE4(v33);
  char v43 = BYTE4(v34);
  int v42 = v34;
  char v41 = BYTE4(v35);
  int v40 = v35;
  MEMORY[0x1F4188790](v32);
  uint64_t v38 = TTSMarkup.Prosody.init(rate:pitch:volume:speech:)(&v44, &v42, &v40, (uint64_t (*)(void))sub_1A6810058, (uint64_t)&v46);
  MEMORY[0x1F4188790](v38);
  TTSMarkup.SpeechDocument.init(_:)(sub_1A68104D0, a1);
  return sub_1A68104D8((uint64_t)&v46);
}

uint64_t sub_1A6810058@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + 16), sel_speechString);
  uint64_t v4 = sub_1A6892000();
  uint64_t v6 = v5;

  v8[3] = &type metadata for TTSMarkup.SpeechText;
  v8[4] = &protocol witness table for TTSMarkup.SpeechText;
  v8[0] = swift_allocObject();
  TTSMarkup.SpeechText.init(_:)(v4, v6, (void *)(v8[0] + 16));
  static TTSMarkup.SpeechBuilder.buildExpression(_:)(v9, v8);
  sub_1A6741A24((uint64_t)v8);
  static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)v9, a1);
  return sub_1A6741A24((uint64_t)v9);
}