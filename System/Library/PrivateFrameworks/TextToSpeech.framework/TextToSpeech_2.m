uint64_t sub_1A6810118(void *a1, uint64_t a2)
{
  double v4;
  double v5;
  float v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  float v16;
  uint64_t v17;
  unsigned char v19[40];
  _OWORD v20[2];
  uint64_t v21;
  void v22[5];
  long long v23;
  long long v24;
  _UNKNOWN **v25;
  void v26[5];

  objc_msgSend(a1, sel_preUtteranceDelay);
  if (v4 == 0.0)
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    static TTSMarkup.SpeechBuilder.buildIf(_:)((uint64_t)&v23, (uint64_t)v26);
    sub_1A6761FF4((uint64_t)&v23);
  }
  else
  {
    objc_msgSend(a1, sel_preUtteranceDelay);
    v6 = v5;
    v26[3] = &type metadata for TTSMarkup.Pause;
    v26[4] = &protocol witness table for TTSMarkup.Pause;
    v26[0] = swift_allocObject();
    TTSMarkup.Pause.init(seconds:)(v26[0] + 16, v6);
    static TTSMarkup.SpeechBuilder.buildExpression(_:)(&v23, v26);
    sub_1A6741A24((uint64_t)v26);
    static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)&v23, (uint64_t)v22);
    static TTSMarkup.SpeechBuilder.buildIf(_:)((uint64_t)v22, (uint64_t)v26);
    sub_1A6761FF4((uint64_t)v22);
    sub_1A6741A24((uint64_t)&v23);
  }
  v7 = objc_msgSend(a1, sel_voice);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_identifier);

    v10 = sub_1A6892000();
    v12 = v11;

    MEMORY[0x1F4188790](v13);
    *((void *)&v24 + 1) = &type metadata for TTSMarkup.Voice;
    v25 = &protocol witness table for TTSMarkup.Voice;
    *(void *)&v23 = swift_allocObject();
    TTSMarkup.Voice.init(named:speech:)(v10, v12, (uint64_t (*)(void))sub_1A681056C, v23 + 16);
    static TTSMarkup.SpeechBuilder.buildExpression(_:)(v22, &v23);
    sub_1A6741A24((uint64_t)&v23);
    static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)v22, (uint64_t)v20);
    static TTSMarkup.SpeechBuilder.buildEither(first:)(&v23, v20);
  }
  else
  {
    *((void *)&v24 + 1) = &type metadata for TTSMarkup.Prosody;
    v25 = &protocol witness table for TTSMarkup.Prosody;
    *(void *)&v23 = swift_allocObject();
    sub_1A6810690(a2, v23 + 16);
    static TTSMarkup.SpeechBuilder.buildExpression(_:)(v22, &v23);
    sub_1A6741A24((uint64_t)&v23);
    static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)v22, (uint64_t)v20);
    static TTSMarkup.SpeechBuilder.buildEither(second:)(&v23, v20);
  }
  sub_1A6741A24((uint64_t)v20);
  sub_1A6741A24((uint64_t)v22);
  objc_msgSend(a1, sel_postUtteranceDelay);
  if (v14 == 0.0)
  {
    v21 = 0;
    memset(v20, 0, sizeof(v20));
    static TTSMarkup.SpeechBuilder.buildIf(_:)((uint64_t)v20, (uint64_t)v22);
    sub_1A6761FF4((uint64_t)v20);
  }
  else
  {
    objc_msgSend(a1, sel_postUtteranceDelay);
    v16 = v15;
    v22[3] = &type metadata for TTSMarkup.Pause;
    v22[4] = &protocol witness table for TTSMarkup.Pause;
    v22[0] = swift_allocObject();
    TTSMarkup.Pause.init(seconds:)(v22[0] + 16, v16);
    static TTSMarkup.SpeechBuilder.buildExpression(_:)(v20, v22);
    sub_1A6741A24((uint64_t)v22);
    static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)v20, (uint64_t)v19);
    static TTSMarkup.SpeechBuilder.buildIf(_:)((uint64_t)v19, (uint64_t)v22);
    sub_1A6761FF4((uint64_t)v19);
    sub_1A6741A24((uint64_t)v20);
  }
  sub_1A6741AD0(&qword_1E96C1D68);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1A689E4C0;
  sub_1A673E788((uint64_t)v26, v17 + 32);
  sub_1A673E788((uint64_t)&v23, v17 + 72);
  sub_1A673E788((uint64_t)v22, v17 + 112);
  static TTSMarkup.SpeechBuilder.buildBlock(_:)(v17);
  swift_bridgeObjectRelease();
  sub_1A6741A24((uint64_t)v22);
  sub_1A6741A24((uint64_t)&v23);
  return sub_1A6741A24((uint64_t)v26);
}

uint64_t sub_1A68104D0()
{
  return sub_1A6810118(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1A68104D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A681052C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A681056C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  v5[3] = &type metadata for TTSMarkup.Prosody;
  v5[4] = &protocol witness table for TTSMarkup.Prosody;
  v5[0] = swift_allocObject();
  sub_1A6810690(v3, v5[0] + 16);
  static TTSMarkup.SpeechBuilder.buildExpression(_:)(v6, v5);
  sub_1A6741A24((uint64_t)v5);
  static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)v6, a1);
  return sub_1A6741A24((uint64_t)v6);
}

uint64_t sub_1A68105F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 56);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1A6810650()
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 24);

  return MEMORY[0x1F4186498](v0, 85, 7);
}

uint64_t sub_1A6810690(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A68106EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A6810734@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 304))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6810788(uint64_t a1, uint64_t a2)
{
  v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 312);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1A68107E4()
{
  return swift_retain();
}

uint64_t sub_1A681081C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t sub_1A6810864@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 328))();
  *a2 = result;
  return result;
}

uint64_t sub_1A68108B8(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 336))(*a1);
}

uint64_t sub_1A6810908()
{
  swift_beginAccess();
  return *(void *)(v0 + 64);
}

uint64_t sub_1A681093C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*sub_1A681097C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1A68109D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 352))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A6810A24(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 360);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1A6810A94()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A6810AE0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A6810B34())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A6810B88@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 376))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1A6810BE0(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 384))(*a1);
}

uint64_t sub_1A6810C30()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1A6810C64(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 88) = a1;
  return result;
}

uint64_t sub_1A6810CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_allocObject();
  uint64_t v10 = sub_1A68110C4(a1, a2, a3, a4, a5);
  swift_release();
  return v10;
}

uint64_t sub_1A6810D20()
{
  uint64_t v1 = v0;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  uint64_t v2 = sub_1A6892C40();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v0 + 136))(&v11, v2);
  uint64_t v3 = sub_1A68930E0();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t v12 = v3;
  unint64_t v13 = v5;
  uint64_t v6 = sub_1A6892150();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v1 + 160))(&v11, v6);
  sub_1A68930E0();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1A6892150();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 328))(v7);
  sub_1A68930E0();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  uint64_t v12 = 10;
  unint64_t v13 = 0xE100000000000000;
  sub_1A6892150();
  uint64_t v8 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v1 + 376))(v8);
  sub_1A6892150();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1A6892150();
  (*(void (**)(uint64_t))(*(void *)v1 + 352))(v9);
  sub_1A6892150();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1A6810FDC()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t SpeechStringIntervalNode.deinit()
{
  uint64_t v0 = IntervalNode.deinit();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SpeechStringIntervalNode.__deallocating_deinit()
{
  IntervalNode.deinit();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1A6811094()
{
}

uint64_t sub_1A68110C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *(*v8)(uint64_t *__return_ptr, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  uint64_t v6 = v5;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = a2;
  *(void *)(v6 + 72) = a3;
  *(void *)(v6 + 80) = a4;
  *(unsigned char *)(v6 + 88) = a5;
  uint64_t v8 = *(void *(**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 136);
  uint64_t v9 = swift_retain();
  uint64_t v10 = v8(&v15, v9);
  v14 = v15;
  (*(void (**)(uint64_t *__return_ptr, void *))(*(void *)a1 + 160))(&v13, v10);
  uint64_t v12 = v13;
  return sub_1A67F059C((uint64_t)&v14, (uint64_t)&v12);
}

uint64_t type metadata accessor for SpeechStringIntervalNode()
{
  uint64_t result = qword_1E96D0420;
  if (!qword_1E96D0420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A68111C4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for SpeechStringIntervalNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SpeechStringIntervalNode);
}

uint64_t dispatch thunk of SpeechStringIntervalNode.originalRange.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.originalRange.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.originalRange.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.plainStringOffset.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.plainStringOffset.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.plainStringOffset.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.associatedSubstring.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.associatedSubstring.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.associatedSubstring.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.isWithinElement.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.isWithinElement.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of SpeechStringIntervalNode.isWithinElement.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t sub_1A6811454()
{
  type metadata accessor for TTSSettings();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1A6811E7C(MEMORY[0x1E4FBC860]);
  *(void *)(v0 + 16) = sub_1A6811AC0(v2);
  unint64_t v3 = sub_1A6811FB8(v1);
  uint64_t result = sub_1A6812B7C(v3);
  *(void *)(v0 + 24) = result;
  qword_1E96C4168 = v0;
  return result;
}

uint64_t sub_1A68114B4()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1A6811E7C(MEMORY[0x1E4FBC860]);
  *(void *)(v0 + 16) = sub_1A6811AC0(v2);
  unint64_t v3 = sub_1A6811FB8(v1);
  *(void *)(v0 + 24) = sub_1A6812B7C(v3);
  return v0;
}

uint64_t *sub_1A6811510()
{
  if (qword_1E96C4290 != -1) {
    swift_once();
  }
  return &qword_1E96C4168;
}

uint64_t static TTSSettings.shared.getter()
{
  if (qword_1E96C4290 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1A68115B8()
{
  if (*v0) {
    return 6580592;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1A68115E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A681581C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6811608(uint64_t a1)
{
  unint64_t v2 = sub_1A6813CB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6811644(uint64_t a1)
{
  unint64_t v2 = sub_1A6813CB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TTSSettings.SpeechTracingClient.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C3290);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(_DWORD *)(v1 + 16);
  sub_1A673E63C(a1, a1[3]);
  sub_1A6813CB8();
  sub_1A68932B0();
  char v12 = 0;
  uint64_t v7 = v9[1];
  sub_1A6893040();
  if (!v7)
  {
    char v11 = 1;
    sub_1A6893090();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TTSSettings.SpeechTracingClient.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v19 = a2;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C3298);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6891800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A68917F0();
  sub_1A68917D0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  getpid();
  sub_1A673E63C(a1, a1[3]);
  sub_1A6813CB8();
  sub_1A68932A0();
  if (!v2)
  {
    char v21 = 0;
    uint64_t v12 = sub_1A6892F80();
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v20 = 1;
    int v16 = sub_1A6892FD0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = v19;
    uint64_t *v19 = v12;
    v17[1] = v14;
    *((_DWORD *)v17 + 4) = v16;
  }
  sub_1A6741A24((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A6811A90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TTSSettings.SpeechTracingClient.init(from:)(a1, a2);
}

uint64_t sub_1A6811AA8(void *a1)
{
  return TTSSettings.SpeechTracingClient.encode(to:)(a1);
}

uint64_t sub_1A6811AC0(uint64_t a1)
{
  uint64_t v2 = sub_1A6891B50();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1A6891B60();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v9[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F47EE0]);
  v9[0] = MEMORY[0x1E4FBC860];
  sub_1A68158E8(&qword_1E96C16E0, 255, MEMORY[0x1E4F47ED0]);
  sub_1A6741AD0(&qword_1E96C16F0);
  sub_1A6813D0C();
  sub_1A6892B90();
  v9[3] = sub_1A6891AD0();
  v9[4] = MEMORY[0x1E4F47E70];
  sub_1A675026C(v9);
  sub_1A6891AC0();
  uint64_t v8 = a1;
  id v6 = objc_allocWithZone((Class)sub_1A6741AD0(&qword_1E96C32A0));
  return sub_1A6891BD0();
}

uint64_t sub_1A6811CEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6811D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 104);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A6811D8C()
{
  id v1 = *(id *)(v0 + 16);
  sub_1A6891BF0();

  return v3;
}

void sub_1A6811DCC()
{
  id v1 = *(id *)(v0 + 16);
  sub_1A6891C00();
}

uint64_t (*sub_1A6811E0C(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void **)(v1 + 16);
  v3[4] = v4;
  id v5 = v4;
  v3[5] = sub_1A6891BE0();
  return sub_1A6811E78;
}

unint64_t sub_1A6811E7C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A6741AD0(&qword_1E96C32C0);
  uint64_t v2 = (void *)sub_1A6892EF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_DWORD *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    int v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A673F7AC(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 24 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(_DWORD *)(v13 + 16) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 10;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A6811FB8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1A6741AD0(&qword_1E96C32C8);
    uint64_t v2 = (void *)sub_1A6892EF0();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C1690);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v24 = &v7[*(int *)(v4 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v10 = *(void *)(v5 + 72);
    v22[1] = a1;
    uint64_t v23 = v10;
    swift_retain();
    while (1)
    {
      sub_1A6815930(v9, (uint64_t)v7);
      unint64_t result = sub_1A675E2B8((uint64_t)v7);
      if (v12) {
        break;
      }
      unint64_t v13 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v14 = v2[6];
      uint64_t v15 = sub_1A68918D0();
      uint64_t v16 = *(void *)(v15 - 8);
      v17 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 32);
      unint64_t v18 = *(void *)(v16 + 72) * v13;
      v17(v14 + v18, v7, v15);
      unint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v17)(v2[7] + v18, v24, v15);
      uint64_t v19 = v2[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_12;
      }
      v2[2] = v21;
      v9 += v23;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

uint64_t sub_1A68121C8()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = sub_1A6891C10();

  return v2;
}

uint64_t (*sub_1A6812200())()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A6891800();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A68917F0();
  uint64_t v9 = sub_1A68917D0();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LODWORD(v5) = getpid();
  char v12 = *(uint64_t (**)(unsigned char *))(*(void *)v1 + 112);
  swift_bridgeObjectRetain_n();
  unint64_t v13 = (void (*)(unsigned char *, void))v12(v24);
  uint64_t v15 = v14;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v15;
  *uint64_t v15 = 0x8000000000000000;
  sub_1A68147A4(v9, v11, v5, v9, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v15 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13(v24, 0);
  uint64_t v17 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(void *)(v18 + 32) = v9;
  *(void *)(v18 + 40) = v11;
  *(_DWORD *)(v18 + 48) = v5;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1A67724DC((uint64_t)v4, (uint64_t)&unk_1E96C32B0, v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v1;
  *(void *)(v20 + 24) = v9;
  *(void *)(v20 + 32) = v11;
  *(_DWORD *)(v20 + 40) = v5;
  *(void *)(v20 + 48) = v19;
  swift_retain();
  return sub_1A6814A5C;
}

uint64_t sub_1A68124C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  uint64_t v6 = sub_1A6892D70();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  uint64_t v7 = sub_1A6892D90();
  v5[13] = v7;
  v5[14] = *(void *)(v7 - 8);
  v5[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A68125EC, 0, 0);
}

uint64_t sub_1A68125EC()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  sub_1A6892D80();
  *(_OWORD *)(v0 + 40) = xmmword_1A68A4B30;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  uint64_t v4 = sub_1A68158E8(&qword_1E96C1F10, 255, MEMORY[0x1E4FBD1A8]);
  sub_1A6893160();
  sub_1A68158E8(&qword_1E96C1F18, 255, MEMORY[0x1E4FBD178]);
  sub_1A6892DA0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 128) = v5;
  *(void *)(v0 + 136) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A68127AC;
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 104);
  return MEMORY[0x1F4188178](v8, v0 + 16, v7, v4);
}

uint64_t sub_1A68127AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 128))(*(void *)(v2 + 96), *(void *)(v2 + 72));
    uint64_t v3 = sub_1A6812AE0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v6 = *(void *)(v2 + 104);
    (*(void (**)(void, void))(v2 + 128))(*(void *)(v2 + 96), *(void *)(v2 + 72));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1A6812904;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A6812904()
{
  uint64_t v1 = sub_1A68920B0();
  notify_post((const char *)(v1 + 32));
  swift_release();
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  sub_1A6892D80();
  *(_OWORD *)(v0 + 40) = xmmword_1A68A4B30;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  uint64_t v5 = sub_1A68158E8(&qword_1E96C1F10, 255, MEMORY[0x1E4FBD1A8]);
  sub_1A6893160();
  sub_1A68158E8(&qword_1E96C1F18, 255, MEMORY[0x1E4FBD178]);
  sub_1A6892DA0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 128) = v6;
  *(void *)(v0 + 136) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v2, v4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1A68127AC;
  uint64_t v9 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 104);
  return MEMORY[0x1F4188178](v9, v0 + 16, v8, v5);
}

uint64_t sub_1A6812AE0()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A6812B7C(uint64_t a1)
{
  uint64_t v2 = sub_1A6891B50();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1A6891B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A68929E0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F47EE0], v3);
  v10[0] = MEMORY[0x1E4FBC860];
  sub_1A68158E8(&qword_1E96C16E0, 255, MEMORY[0x1E4F47ED0]);
  sub_1A6741AD0(&qword_1E96C16F0);
  sub_1A6813D0C();
  sub_1A6892B90();
  v10[3] = sub_1A6891AD0();
  v10[4] = MEMORY[0x1E4F47E70];
  sub_1A675026C(v10);
  sub_1A6891AC0();
  uint64_t v9 = a1;
  id v7 = objc_allocWithZone((Class)sub_1A6741AD0(&qword_1E96C16E8));
  return sub_1A6891BD0();
}

uint64_t sub_1A6812DB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6812DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 144);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A6812E50()
{
  id v1 = *(id *)(v0 + 24);
  sub_1A6891BF0();

  return v3;
}

void sub_1A6812E90()
{
  id v1 = *(id *)(v0 + 24);
  sub_1A6891C00();
}

uint64_t (*sub_1A6812ED0(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void **)(v1 + 24);
  v3[4] = v4;
  id v5 = v4;
  v3[5] = sub_1A6891BE0();
  return sub_1A6811E78;
}

void sub_1A6812F3C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);

  free(v1);
}

uint64_t sub_1A6812F8C()
{
  id v1 = *(id *)(v0 + 24);
  uint64_t v2 = sub_1A6891C10();

  return v2;
}

uint64_t sub_1A6812FC4()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 136))();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v90 = v1 + 64;
  uint64_t v92 = v1;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v101 = v4 & v2;
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C1688);
  v89[1] = v89;
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  unint64_t v95 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v96 = v7;
  uint64_t v8 = (char *)v89 - v95;
  int64_t v97 = 0;
  int64_t v91 = (unint64_t)(v3 + 63) >> 6;
  v89[0] = v91 - 1;
  v102 = (void *)MEMORY[0x1E4FBC868];
  long long v94 = xmmword_1A689DC40;
  for (i = (char *)v89 - v95; ; uint64_t v8 = i)
  {
    MEMORY[0x1F4188790](v6);
    uint64_t v11 = (char *)v89 - v95;
    if (v101)
    {
      unint64_t v12 = __clz(__rbit64(v101));
      v101 &= v101 - 1;
      unint64_t v13 = v12 | (v97 << 6);
LABEL_8:
      uint64_t v14 = v92;
      uint64_t v15 = *(void *)(v92 + 48);
      uint64_t v16 = sub_1A68918D0();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 72) * v13;
      v18(v11, v15 + v19, v16);
      unint64_t v20 = *(void *)(v14 + 56) + v19;
      uint64_t v21 = sub_1A6741AD0(&qword_1E96C1680);
      v18(&v11[*(int *)(v21 + 48)], v20, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 0, 1, v21);
      goto LABEL_27;
    }
    int64_t v22 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      goto LABEL_62;
    }
    if (v22 < v91)
    {
      unint64_t v23 = *(void *)(v90 + 8 * v22);
      if (v23) {
        goto LABEL_12;
      }
      int64_t v24 = v97 + 2;
      ++v97;
      if (v22 + 1 < v91)
      {
        unint64_t v23 = *(void *)(v90 + 8 * v24);
        if (v23) {
          goto LABEL_15;
        }
        int64_t v97 = v22 + 1;
        if (v22 + 2 < v91)
        {
          unint64_t v23 = *(void *)(v90 + 8 * (v22 + 2));
          if (v23)
          {
            v22 += 2;
LABEL_12:
            unint64_t v101 = (v23 - 1) & v23;
            unint64_t v13 = __clz(__rbit64(v23)) + (v22 << 6);
            int64_t v97 = v22;
            goto LABEL_8;
          }
          int64_t v24 = v22 + 3;
          int64_t v97 = v22 + 2;
          if (v22 + 3 < v91)
          {
            unint64_t v23 = *(void *)(v90 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_63;
                }
                if (v22 >= v91)
                {
                  int64_t v97 = v89[0];
                  goto LABEL_26;
                }
                unint64_t v23 = *(void *)(v90 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_12;
                }
              }
            }
LABEL_15:
            int64_t v22 = v24;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_26:
    uint64_t v25 = sub_1A6741AD0(&qword_1E96C1680);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
    unint64_t v101 = 0;
LABEL_27:
    sub_1A6814CEC((uint64_t)v11, (uint64_t)v8);
    uint64_t v26 = sub_1A6741AD0(&qword_1E96C1680);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v8, 1, v26) == 1)
    {
      swift_release();
      id v52 = objc_msgSend(self, sel_sharedPreferences);
      id v53 = objc_msgSend(v52, sel_languageCode);

      if (!v53) {
        return (uint64_t)v102;
      }
      uint64_t v54 = sub_1A6892000();
      uint64_t v56 = v55;

      v100 = (void *)sub_1A6891A40();
      unint64_t v101 = (unint64_t)v89;
      v99 = (char *)*(v100 - 1);
      MEMORY[0x1F4188790](v100);
      v58 = (char *)v89 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_bridgeObjectRetain();
      sub_1A6891900();
      uint64_t v59 = sub_1A6741AD0(&qword_1EB67A210);
      MEMORY[0x1F4188790](v59 - 8);
      v61 = (char *)v89 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v62 = sub_1A6891A20();
      uint64_t v63 = *(void *)(v62 - 8);
      MEMORY[0x1F4188790](v62);
      v65 = (char *)v89 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A6891A30();
      sub_1A68919F0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v62);
      uint64_t v66 = sub_1A68918D0();
      uint64_t v67 = *(void *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v61, 1, v66) == 1)
      {
        sub_1A6750210((uint64_t)v61, &qword_1EB67A210);
      }
      else
      {
        uint64_t v69 = sub_1A6891890();
        uint64_t v71 = v70;
        (*(void (**)(char *, uint64_t))(v67 + 8))(v61, v66);
        if (v69 == 6649209 && v71 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
        char v74 = sub_1A6893120();
        swift_bridgeObjectRelease();
        if (v74) {
          goto LABEL_53;
        }
      }
      if ((v54 != 0x4B482D687ALL || v56 != 0xE500000000000000)
        && (sub_1A6893120() & 1) == 0
        && (v54 != 0x4B485F687ALL || v56 != 0xE500000000000000))
      {
        char v72 = sub_1A6893120();
        uint64_t v73 = swift_bridgeObjectRelease();
        if ((v72 & 1) == 0)
        {
          (*((void (**)(char *, void *))v99 + 1))(v58, v100);
          return (uint64_t)v102;
        }
LABEL_54:
        v98 = v58;
        uint64_t v75 = *(void *)(v67 + 64);
        MEMORY[0x1F4188790](v73);
        unint64_t v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF0;
        v77 = (char *)v89 - v76;
        uint64_t v78 = sub_1A68918C0();
        MEMORY[0x1F4188790](v78);
        v79 = (char *)v89 - v76;
        sub_1A68918C0();
        if (v102[2] && (unint64_t v80 = sub_1A675E2B8((uint64_t)v89 - v76), (v81 & 1) != 0))
        {
          v82 = *(void **)(v102[7] + 8 * v80);
          v83 = *(void (**)(char *, uint64_t))(v67 + 8);
          swift_bridgeObjectRetain();
          v83(v79, v66);
        }
        else
        {
          v83 = *(void (**)(char *, uint64_t))(v67 + 8);
          v83(v79, v66);
          v82 = (void *)MEMORY[0x1E4FBC860];
        }
        sub_1A6741AD0(&qword_1E96C1D30);
        type metadata accessor for TTSMacroLanguageDisambiguationMapping();
        size_t v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = v94;
        sub_1A68918C0();
        swift_storeEnumTagMultiPayload();
        v103 = v82;
        sub_1A6760140(v84);
        v85 = v102;
        uint64_t v86 = (uint64_t)v103;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v103 = v85;
        sub_1A6814B44(v86, (uint64_t)v77, isUniquelyReferenced_nonNull_native);
        v68 = v103;
        swift_bridgeObjectRelease();
        v83(v77, v66);
        (*((void (**)(char *, void *))v99 + 1))(v98, v100);
        return (uint64_t)v68;
      }
LABEL_53:
      uint64_t v73 = swift_bridgeObjectRelease();
      goto LABEL_54;
    }
    uint64_t v27 = sub_1A68918D0();
    v100 = v89;
    v28 = *(void **)(v27 - 8);
    uint64_t v29 = v28[8];
    MEMORY[0x1F4188790](v27);
    v30 = (char *)v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v31 = (uint64_t (*)(char *, char *, uint64_t))v28[4];
    uint64_t v32 = v31(v30, &v8[*(int *)(v26 + 48)], v27);
    v98 = (char *)v89;
    MEMORY[0x1F4188790](v32);
    uint64_t v33 = (uint64_t)v30;
    v31(v30, v8, v27);
    sub_1A6741AD0(&qword_1E96C1D30);
    uint64_t v34 = *(void *)(type metadata accessor for TTSMacroLanguageDisambiguationMapping() - 8);
    unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = v94;
    v37 = (void (*)(unint64_t, char *, uint64_t))v28[2];
    v99 = v30;
    v37(v36 + v35, v30, v27);
    swift_storeEnumTagMultiPayload();
    v38 = v102;
    int v39 = swift_isUniquelyReferenced_nonNull_native();
    v103 = v38;
    unint64_t v41 = sub_1A675E2B8((uint64_t)v30);
    uint64_t v42 = v38[2];
    BOOL v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43)) {
      break;
    }
    char v45 = v40;
    if (v38[3] >= v44)
    {
      if ((v39 & 1) == 0) {
        sub_1A6814FD8();
      }
    }
    else
    {
      sub_1A68141A0(v44, v39);
      unint64_t v46 = sub_1A675E2B8(v33);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_64;
      }
      unint64_t v41 = v46;
    }
    v48 = v103;
    v102 = v103;
    if (v45)
    {
      uint64_t v9 = v103[7];
      swift_bridgeObjectRelease();
      *(void *)(v9 + 8 * v41) = v36;
    }
    else
    {
      v103[(v41 >> 6) + 8] |= 1 << v41;
      v37(v48[6] + v28[9] * v41, (char *)v33, v27);
      *(void *)(v48[7] + 8 * v41) = v36;
      uint64_t v49 = v48[2];
      BOOL v50 = __OFADD__(v49, 1);
      uint64_t v51 = v49 + 1;
      if (v50) {
        goto LABEL_61;
      }
      v48[2] = v51;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v28[1];
    v10(v33, v27);
    uint64_t v6 = ((uint64_t (*)(char *, uint64_t))v10)(v99, v27);
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  uint64_t result = sub_1A6893150();
  __break(1u);
  return result;
}

uint64_t TTSSettings.deinit()
{
  return v0;
}

uint64_t TTSSettings.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1A6813CB8()
{
  unint64_t result = qword_1E96D0430[0];
  if (!qword_1E96D0430[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D0430);
  }
  return result;
}

unint64_t sub_1A6813D0C()
{
  unint64_t result = qword_1E96C16F8;
  if (!qword_1E96C16F8)
  {
    sub_1A6750AC4(&qword_1E96C16F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C16F8);
  }
  return result;
}

uint64_t sub_1A6813D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1A673F7AC(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A6814E0C();
      uint64_t v12 = v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 24 * v8;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    LODWORD(v13) = *(_DWORD *)(v13 + 16);
    *(void *)a3 = v14;
    *(void *)(a3 + 8) = v15;
    *(_DWORD *)(a3 + 16) = v13;
    sub_1A68145AC(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t sub_1A6813E78(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C32C0);
  char v40 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      int v35 = *(_DWORD *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A6893200();
      sub_1A68920F0();
      uint64_t result = sub_1A6893250();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(_DWORD *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A68141A0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C1D48);
  int v43 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  unint64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v40) {
      break;
    }
    uint64_t v19 = v41;
    unint64_t v20 = v41[v18];
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v20 = v41[v14];
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v41[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v40) {
              goto LABEL_34;
            }
            unint64_t v20 = v41[v14];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = sub_1A68918D0();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x1F4188790](v22);
    char v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = *(void *)(v26 + 72);
    unint64_t v28 = *(void *)(v5 + 48) + v27 * v17;
    uint64_t v44 = v29;
    if (v43)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 32))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      swift_bridgeObjectRetain();
    }
    sub_1A67DDCEC(&qword_1E96C1568);
    uint64_t result = sub_1A6891F10();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v12 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v15 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v23 + 32))(*(void *)(v7 + 48) + v27 * v15, v25, v22);
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v19 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v19, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1A68145AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A6892BA0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A6893200();
        swift_bridgeObjectRetain();
        sub_1A68920F0();
        uint64_t v10 = sub_1A6893250();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v3);
          int64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *int64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          unint64_t v17 = (long long *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, int64_t v3 = v6, !v18))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A68147A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1A673F7AC(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1A6814E0C();
LABEL_7:
    uint64_t v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(_DWORD *)(v23 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A6813E78(v19, a6 & 1);
  unint64_t v25 = sub_1A673F7AC(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A6893150();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a4;
  v27[1] = a5;
  uint64_t v28 = v22[7] + 24 * v16;
  *(void *)uint64_t v28 = a1;
  *(void *)(v28 + 8) = a2;
  *(_DWORD *)(v28 + 16) = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v22[2] = v31;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A681493C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 52, 7);
}

uint64_t sub_1A681497C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A6750954;
  return sub_1A68124C0((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_1A6814A14()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A6814A5C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(uint64_t (**)(unsigned char *))(**(void **)(v0 + 16) + 112);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void (*)(unsigned char *, void))v3(v6);
  sub_1A6813D68(v1, v2, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v6, 0);
  sub_1A6741AD0(&qword_1E96C1520);
  return sub_1A6892590();
}

uint64_t sub_1A6814B44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1A675E2B8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A6814FD8();
    goto LABEL_7;
  }
  sub_1A68141A0(v13, a3 & 1);
  unint64_t v19 = sub_1A675E2B8(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    sub_1A68918D0();
    uint64_t result = sub_1A6893150();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  unint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v21 = sub_1A68918D0();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v24 + 16))(v23, a2);
  return sub_1A6814D54(v10, (uint64_t)v23, a1, v16);
}

uint64_t sub_1A6814CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6814D54(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1A68918D0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_1A6814E0C()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C32C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    LODWORD(v21) = *(_DWORD *)(v21 + 16);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v22;
    *(void *)(v25 + 8) = v23;
    *(_DWORD *)(v25 + 16) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A6814FD8()
{
  sub_1A6741AD0(&qword_1E96C1D48);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1A6892EC0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v35 = v2;
  if (!v3)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v29 = v35;
    int64_t v28 = v31;
LABEL_28:
    uint64_t *v28 = v29;
    return result;
  }
  uint64_t v4 = v2;
  uint64_t result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v35;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v34 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v32 = v1 + 64;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v35;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v34;
      goto LABEL_12;
    }
    int64_t v25 = v8 + 1;
    uint64_t v15 = v34;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v8;
    if (!v26)
    {
      int64_t v8 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v8);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v14 = __clz(__rbit64(v26)) + (v8 << 6);
LABEL_12:
    uint64_t v16 = sub_1A68918D0();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x1F4188790](v16);
    uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v21 = *(void *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, *(void *)(v15 + 48) + v21, v16);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = 8 * v14;
    uint64_t v24 = *(void *)(v22 + 8 * v14);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v12 + 48) + v21, v19, v16);
    *(void *)(*(void *)(v12 + 56) + v23) = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    int64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v8 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v8 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v8);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A68152A4(uint64_t a1, uint64_t a2)
{
  return sub_1A68158E8(&qword_1E96C32B8, a2, (void (*)(uint64_t))type metadata accessor for TTSSettings);
}

uint64_t type metadata accessor for TTSSettings()
{
  return self;
}

uint64_t method lookup function for TTSSettings(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSSettings);
}

uint64_t dispatch thunk of TTSSettings.speechTraceClients.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of TTSSettings.speechTraceClients.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of TTSSettings.speechTraceClients.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of TTSSettings.$speechTraceClients.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of TTSSettings.registerSpeechTracingClient()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TTSSettings.macroLanguageDisambiguations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of TTSSettings.macroLanguageDisambiguations.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of TTSSettings.macroLanguageDisambiguations.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of TTSSettings.$macroLanguageDisambiguations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of TTSSettings.languageDisambiguations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1A6815494(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTSSettings.SpeechTracingClient(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for TTSSettings.SpeechTracingClient(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTSSettings.SpeechTracingClient(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSSettings.SpeechTracingClient(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTSSettings.SpeechTracingClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSettings.SpeechTracingClient()
{
  return &type metadata for TTSSettings.SpeechTracingClient;
}

unsigned char *storeEnumTagSinglePayload for TTSSettings.SpeechTracingClient.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A68156DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSettings.SpeechTracingClient.CodingKeys()
{
  return &type metadata for TTSSettings.SpeechTracingClient.CodingKeys;
}

unint64_t sub_1A6815718()
{
  unint64_t result = qword_1E96D0740[0];
  if (!qword_1E96D0740[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D0740);
  }
  return result;
}

unint64_t sub_1A6815770()
{
  unint64_t result = qword_1E96D0850;
  if (!qword_1E96D0850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D0850);
  }
  return result;
}

unint64_t sub_1A68157C8()
{
  unint64_t result = qword_1E96D0858[0];
  if (!qword_1E96D0858[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D0858);
  }
  return result;
}

uint64_t sub_1A681581C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6580592 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A68158E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A6815930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C1690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CoreSynthesizer.speak(request:synthesizer:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v26[0] = a3;
  uint64_t v7 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v26 - v11;
  unint64_t v13 = sub_1A6833CCC();
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = sub_1A68924A0();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v26[0];
  v18[3] = a4;
  v18[4] = v4;
  v18[5] = a1;
  v18[6] = v17;
  uint64_t v19 = (uint64_t)v12;
  uint64_t v20 = v14;
  sub_1A6780A34(v19, (uint64_t)v10);
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15);
  swift_retain();
  swift_retain();
  id v21 = v4;
  id v22 = a1;
  if (v14 == 1)
  {
    sub_1A677B668((uint64_t)v10);
  }
  else
  {
    sub_1A6892490();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v15);
  }
  unint64_t v23 = sub_1A680E85C();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = &unk_1E96C32D8;
  *(void *)(v24 + 24) = v18;
  v26[1] = 6;
  v26[2] = 0;
  v26[3] = v20;
  v26[4] = v23;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A6815C18()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A6815C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[90] = a6;
  v6[89] = a5;
  v6[88] = a4;
  v6[87] = a3;
  v6[86] = a2;
  uint64_t v7 = sub_1A6741AD0((uint64_t *)&unk_1E96C31F0);
  v6[91] = v7;
  v6[92] = *(void *)(v7 - 8);
  v6[93] = swift_task_alloc();
  uint64_t v8 = sub_1A6741AD0((uint64_t *)&unk_1E96C2240);
  v6[94] = v8;
  v6[95] = *(void *)(v8 - 8);
  v6[96] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A6815D84, 0, 0);
}

id sub_1A6815D84()
{
  id result = objc_msgSend(*(id *)(v0 + 712), sel_voice);
  if (result)
  {
    BOOL v2 = result;
    int v3 = *(void **)(v0 + 704);
    id v4 = objc_msgSend(result, sel_identifier);

    uint64_t v5 = sub_1A6892000();
    uint64_t v7 = v6;

    *(void *)(v0 + 776) = v7;
    uint64_t v8 = (*MEMORY[0x1E4FBC8C8] & *v3) + 1024;
    uint64_t v9 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x400);
    *(void *)(v0 + 784) = v9;
    *(void *)(v0 + 792) = v8 & 0xFFFFFFFFFFFFLL | 0x4BF7000000000000;
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 800) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A6815F20;
    return (id)v11(v0 + 328, v5, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A6815F20()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A6816038, 0, 0);
}

uint64_t sub_1A6816038()
{
  uint64_t v143 = v0;
  uint64_t v1 = *(void *)(v0 + 336);
  if (v1)
  {
    uint64_t v2 = *(unsigned __int8 *)(v0 + 428);
    uint64_t v3 = *(unsigned int *)(v0 + 424);
    id v4 = *(void **)(v0 + 408);
    uint64_t v6 = *(void *)(v0 + 392);
    uint64_t v5 = *(void *)(v0 + 400);
    uint64_t v7 = *(void *)(v0 + 384);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    uint64_t v10 = *(void *)(v0 + 352);
    uint64_t v12 = *(void *)(v0 + 328);
    uint64_t v123 = *(void *)(v0 + 416);
    uint64_t v126 = *(void *)(v0 + 376);
    *(void *)(v0 + 920) = v123;
    *(void *)(v0 + 912) = v4;
    *(void *)(v0 + 904) = v5;
    *(void *)(v0 + 896) = v6;
    unsigned __int16 v120 = v8;
    unsigned __int8 v121 = v7;
    *(void *)(v0 + 888) = v7;
    *(void *)(v0 + 880) = v126;
    *(void *)(v0 + 872) = v8;
    *(void *)(v0 + 864) = v9;
    uint64_t v122 = v10;
    *(void *)(v0 + 856) = v10;
    *(void *)(v0 + 848) = v11;
    *(void *)(v0 + 840) = v1;
    uint64_t v117 = v2;
    uint64_t v119 = v12;
    *(void *)(v0 + 832) = v12;
    *(unsigned char *)(v0 + 828) = v2;
    uint64_t v115 = v3;
    *(_DWORD *)(v0 + 824) = v3;
    unint64_t v13 = *(void **)(v0 + 712);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v4;
    id v15 = objc_msgSend(v13, sel_speechString);
    if (v15)
    {
      uint64_t v20 = v15;
      v109 = v14;
      v110 = v4;
      uint64_t v111 = v11;
      uint64_t v112 = v9;
      uint64_t v114 = v5;
      id v21 = objc_msgSend(v15, sel_transformedString);

      id v22 = v21;
      if (!v21)
      {
        sub_1A6892000();
        id v22 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
      }
      uint64_t v113 = v6;
      uint64_t v23 = sub_1A6892000();
      uint64_t v25 = v24;
      unint64_t v26 = self;
      id v27 = objc_msgSend(v26, sel_shared);
      unsigned __int8 v28 = objc_msgSend(v27, sel_isSSMLValid_, v22);

      uint64_t v29 = &selRef_compatibilityVersion;
      if ((v28 & 1) == 0)
      {
        uint64_t v30 = *(void **)(v0 + 712);
        id v31 = objc_allocWithZone(MEMORY[0x1E4F15498]);
        swift_bridgeObjectRetain();
        uint64_t v32 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(v31, sel_initWithString_, v32);

        objc_msgSend(v30, sel_rate);
        *(float *)&double v34 = v34;
        objc_msgSend(v33, sel_setRate_, v34);
        objc_msgSend(v30, sel_volume);
        *(float *)&double v35 = v35;
        objc_msgSend(v33, sel_setVolume_, v35);
        objc_msgSend(v30, sel_pitch);
        *(float *)&double v36 = v36;
        objc_msgSend(v33, sel_setPitchMultiplier_, v36);
        id v37 = objc_msgSend(v26, sel_shared);
        id v38 = objc_msgSend(v37, sel_generateSSMLFromAVSpeechUtterance_, v33);

        id v39 = objc_msgSend(v38, sel_ssmlResult);
        uint64_t v40 = sub_1A6892000();
        uint64_t v42 = v41;

        uint64_t v127 = v23;
        uint64_t v128 = v25;
        uint64_t v129 = v40;
        uint64_t v130 = v42;
        long long v131 = 0u;
        long long v132 = 0u;
        LOBYTE(v133) = 1;
        swift_bridgeObjectRetain();
        id v15 = objc_msgSend(v30, sel_jobIdentifier);
        if (!v15)
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        int v43 = v15;
        uint64_t v44 = sub_1A6892000();
        unint64_t v46 = v45;

        v47._countAndFlagsBits = v44;
        v47._object = v46;
        TTSSpeechEvent.emit(forJob:)(v47);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = &selRef_compatibilityVersion;
      }
      v48 = *(void **)(v0 + 712);
      uint64_t v49 = self;
      *(void *)(v0 + 928) = v49;
      BOOL v50 = (void *)sub_1A6891FD0();
      swift_bridgeObjectRelease();
      id v51 = objc_msgSend(v49, sel_unescapeDelimeterBoundedSSMLInString_, v50);

      objc_msgSend(v48, sel_setUnescapedSpeechString_, v51);
      id v15 = objc_msgSend(v48, sel_unescapedSpeechString);
      if (v15)
      {
        id v52 = v15;
        uint64_t v108 = v0 + 16;
        uint64_t v53 = v115 | (v117 << 32);
        uint64_t v54 = *(void *)(v0 + 720) + 16;
        id v55 = objc_msgSend(v15, sel_transformedString);

        uint64_t v56 = sub_1A6892000();
        uint64_t v116 = v57;
        uint64_t v118 = v56;

        swift_beginAccess();
        v58 = (void *)MEMORY[0x1AD0C1D60](v54);
        if (v58)
        {
          uint64_t v59 = v58;
          objc_msgSend(v58, sel_speechRequestDidStart_forService_, *(void *)(v0 + 712), 0);
        }
        id v60 = [*(id *)(v0 + 712) v29[275]];
        if (v60)
        {
          v61 = v60;
          uint64_t v62 = sub_1A6892000();
          uint64_t v64 = v63;
        }
        else
        {
          uint64_t v62 = 0;
          uint64_t v64 = 0;
        }
        size_t v84 = *(void **)(v0 + 712);
        uint64_t v127 = v119;
        uint64_t v128 = v1;
        uint64_t v129 = v111;
        uint64_t v130 = v122;
        *(void *)&long long v131 = v112;
        *((void *)&v131 + 1) = v120;
        *(void *)&long long v132 = v126;
        *((void *)&v132 + 1) = v121;
        uint64_t v133 = v113;
        uint64_t v134 = v114;
        v135 = v110;
        uint64_t v136 = v123 & 0x1FFFFFFFFLL;
        char v138 = BYTE4(v53) & 1;
        int v137 = v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v85 = v109;
        uint64_t v86 = sub_1A673D248();
        sub_1A673D250(&v139);
        char v140 = v139;
        sub_1A673D250(&v141);
        v142[0] = v141;
        CoreSynthesizer.Utterance.init(id:ssml:voice:priority:behavior:isoPrioritizedBehavior:)(v62, v64, v118, v116, (uint64_t)&v127, v86, &v140, v142, v108);
        id v87 = objc_msgSend(v84, sel_voiceSettings);
        if (v87)
        {
          v88 = v87;
          sub_1A674CEA4();
          uint64_t v89 = sub_1A6891EA0();

          uint64_t v90 = sub_1A6818234(v89);
          swift_bridgeObjectRelease();
          if (v90[2])
          {
            sub_1A6741AD0(&qword_1E96C2A00);
            uint64_t v91 = sub_1A6892EF0();
          }
          else
          {
            uint64_t v91 = MEMORY[0x1E4FBC868];
          }
          uint64_t v127 = v91;
          uint64_t v103 = swift_bridgeObjectRetain();
          sub_1A68185A4(v103, 1, &v127);
          swift_bridgeObjectRelease();
          uint64_t v104 = v127;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 152) = v104;
        }
        v105 = *(void **)(v0 + 704);
        if (objc_msgSend(*(id *)(v0 + 712), sel_synthesizeSilently)) {
          (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v105) + 0x428))(v108);
        }
        else {
          (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v105) + 0x410))(v108);
        }
        sub_1A6892530();
        swift_beginAccess();
        *(void *)(v0 + 936) = 0;
        v106 = (void *)swift_task_alloc();
        *(void *)(v0 + 944) = v106;
        void *v106 = v0;
        v106[1] = sub_1A681774C;
        uint64_t v18 = *(void *)(v0 + 728);
        id v15 = (id)(v0 + 464);
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v19 = v0 + 672;
        return MEMORY[0x1F4187ED8](v15, v16, v17, v18, v19);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  id v15 = objc_msgSend(*(id *)(v0 + 712), sel_voice);
  if (!v15) {
    goto LABEL_40;
  }
  v65 = v15;
  id v66 = objc_msgSend(v15, sel_identifier);

  uint64_t v67 = sub_1A6892000();
  uint64_t v69 = v68;

  *(void *)(v0 + 592) = v67;
  *(void *)(v0 + 600) = v69;
  *(void *)(v0 + 608) = sub_1A6892000();
  *(void *)(v0 + 616) = v70;
  sub_1A6748030();
  char v71 = sub_1A6892AD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(*(id *)(v0 + 712), sel_voice);
  char v72 = v15;
  if (v71)
  {
    if (!v15)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v124 = *(int **)(v0 + 784);
    id v73 = objc_msgSend(v15, sel_identifier);

    uint64_t v74 = sub_1A6892000();
    uint64_t v76 = v75;

    *(void *)(v0 + 624) = v74;
    *(void *)(v0 + 632) = v76;
    *(void *)(v0 + 640) = sub_1A6892000();
    *(void *)(v0 + 648) = v77;
    *(void *)(v0 + 656) = sub_1A6892000();
    *(void *)(v0 + 664) = v78;
    uint64_t v79 = sub_1A6892AA0();
    uint64_t v81 = v80;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 808) = v81;
    v125 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v124 + *v124);
    v82 = (void *)swift_task_alloc();
    *(void *)(v0 + 816) = v82;
    void *v82 = v0;
    v82[1] = sub_1A6816C40;
    return v125(v0 + 224, v79, v81);
  }
  else
  {
    if (!v15)
    {
LABEL_43:
      __break(1u);
      return MEMORY[0x1F4187ED8](v15, v16, v17, v18, v19);
    }
    id v92 = objc_msgSend(v15, sel_identifier);

    uint64_t v93 = sub_1A6892000();
    uint64_t v95 = v94;

    sub_1A6818928();
    uint64_t v96 = (void *)swift_allocError();
    *int64_t v97 = v93;
    v97[1] = v95;
    swift_willThrow();
    sub_1A673FF60(*(void *)(v0 + 328), *(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 368), *(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 400), *(void **)(v0 + 408));
    uint64_t v98 = *(void *)(v0 + 720) + 16;
    swift_beginAccess();
    uint64_t v99 = MEMORY[0x1AD0C1D60](v98);
    if (v99)
    {
      v100 = (void *)v99;
      uint64_t v101 = *(void *)(v0 + 712);
      v102 = (void *)sub_1A68916E0();
      objc_msgSend(v100, sel_speechRequest_didStopWithSuccess_phonemesSpoken_forService_error_, v101, 0, 0, 0, v102);
    }
    else
    {
    }
    (*(void (**)(void))(v0 + 688))();
    swift_task_dealloc();
    swift_task_dealloc();
    v107 = *(uint64_t (**)(void))(v0 + 8);
    return v107();
  }
}

uint64_t sub_1A6816C40()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A6816D58, 0, 0);
}

uint64_t sub_1A6816D58()
{
  uint64_t v122 = v0;
  sub_1A673FF60(*(void *)(v0 + 328), *(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 368), *(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 400), *(void **)(v0 + 408));
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v10 = *(void *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v12 = *(void **)(v0 + 304);
  uint64_t v11 = *(void *)(v0 + 312);
  uint64_t v13 = *(unsigned __int8 *)(v0 + 324);
  uint64_t v14 = *(unsigned int *)(v0 + 320);
  *(void *)(v0 + 328) = v2;
  *(void *)(v0 + 336) = v1;
  *(void *)(v0 + 344) = v4;
  *(void *)(v0 + 352) = v3;
  *(void *)(v0 + 360) = v6;
  *(void *)(v0 + 368) = v5;
  *(void *)(v0 + 376) = v7;
  *(void *)(v0 + 384) = v8;
  *(void *)(v0 + 392) = v10;
  *(void *)(v0 + 400) = v9;
  *(void *)(v0 + 408) = v12;
  *(void *)(v0 + 416) = v11;
  *(unsigned char *)(v0 + 428) = v13;
  *(_DWORD *)(v0 + 424) = v14;
  if (v1)
  {
    uint64_t v100 = v11;
    unsigned __int8 v101 = v8;
    *(void *)(v0 + 920) = v11;
    *(void *)(v0 + 912) = v12;
    uint64_t v15 = v14 | (v13 << 32);
    *(void *)(v0 + 904) = v9;
    *(void *)(v0 + 896) = v10;
    *(void *)(v0 + 888) = v8;
    uint64_t v104 = v7;
    uint64_t v105 = v3;
    *(void *)(v0 + 880) = v7;
    unsigned __int16 v102 = v5;
    *(void *)(v0 + 872) = v5;
    *(void *)(v0 + 864) = v6;
    *(void *)(v0 + 856) = v3;
    *(void *)(v0 + 848) = v4;
    *(void *)(v0 + 840) = v1;
    *(void *)(v0 + 832) = v2;
    *(_DWORD *)(v0 + 824) = v15;
    uint64_t v99 = v15;
    *(unsigned char *)(v0 + 828) = BYTE4(v15);
    uint64_t v16 = *(void **)(v0 + 712);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v103 = v12;
    id v98 = v12;
    id v17 = objc_msgSend(v16, sel_speechString);
    if (v17)
    {
      id v22 = v17;
      uint64_t v93 = v2;
      uint64_t v94 = v4;
      uint64_t v95 = v10;
      uint64_t v97 = v9;
      id v23 = objc_msgSend(v17, sel_transformedString);

      uint64_t v24 = v23;
      if (!v23)
      {
        sub_1A6892000();
        uint64_t v24 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
      }
      uint64_t v96 = v6;
      uint64_t v25 = sub_1A6892000();
      uint64_t v27 = v26;
      unsigned __int8 v28 = self;
      id v29 = objc_msgSend(v28, sel_shared);
      unsigned __int8 v30 = objc_msgSend(v29, sel_isSSMLValid_, v24);

      id v31 = &selRef_compatibilityVersion;
      if ((v30 & 1) == 0)
      {
        uint64_t v32 = *(void **)(v0 + 712);
        id v33 = objc_allocWithZone(MEMORY[0x1E4F15498]);
        swift_bridgeObjectRetain();
        double v34 = (void *)sub_1A6891FD0();
        swift_bridgeObjectRelease();
        id v35 = objc_msgSend(v33, sel_initWithString_, v34);

        objc_msgSend(v32, sel_rate);
        *(float *)&double v36 = v36;
        objc_msgSend(v35, sel_setRate_, v36);
        objc_msgSend(v32, sel_volume);
        *(float *)&double v37 = v37;
        objc_msgSend(v35, sel_setVolume_, v37);
        objc_msgSend(v32, sel_pitch);
        *(float *)&double v38 = v38;
        objc_msgSend(v35, sel_setPitchMultiplier_, v38);
        id v39 = objc_msgSend(v28, sel_shared);
        id v40 = objc_msgSend(v39, sel_generateSSMLFromAVSpeechUtterance_, v35);

        id v41 = objc_msgSend(v40, sel_ssmlResult);
        uint64_t v42 = sub_1A6892000();
        uint64_t v44 = v43;

        uint64_t v106 = v25;
        uint64_t v107 = v27;
        uint64_t v108 = v42;
        uint64_t v109 = v44;
        long long v110 = 0u;
        long long v111 = 0u;
        LOBYTE(v112) = 1;
        swift_bridgeObjectRetain();
        id v17 = objc_msgSend(v32, sel_jobIdentifier);
        if (!v17)
        {
LABEL_35:
          __break(1u);
          return MEMORY[0x1F4187ED8](v17, v18, v19, v20, v21);
        }
        char v45 = v17;
        uint64_t v46 = sub_1A6892000();
        v48 = v47;

        v49._countAndFlagsBits = v46;
        v49._object = v48;
        TTSSpeechEvent.emit(forJob:)(v49);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v31 = &selRef_compatibilityVersion;
      }
      BOOL v50 = *(void **)(v0 + 712);
      id v51 = self;
      *(void *)(v0 + 928) = v51;
      id v52 = (void *)sub_1A6891FD0();
      swift_bridgeObjectRelease();
      id v53 = objc_msgSend(v51, sel_unescapeDelimeterBoundedSSMLInString_, v52);

      objc_msgSend(v50, sel_setUnescapedSpeechString_, v53);
      id v17 = objc_msgSend(v50, sel_unescapedSpeechString);
      if (v17)
      {
        uint64_t v54 = v17;
        uint64_t v55 = *(void *)(v0 + 720) + 16;
        id v56 = objc_msgSend(v17, sel_transformedString);

        uint64_t v91 = sub_1A6892000();
        uint64_t v92 = v57;

        swift_beginAccess();
        v58 = (void *)MEMORY[0x1AD0C1D60](v55);
        if (v58)
        {
          uint64_t v59 = v58;
          objc_msgSend(v58, sel_speechRequestDidStart_forService_, *(void *)(v0 + 712), 0);
        }
        id v60 = [*(id *)(v0 + 712) v31[275]];
        if (v60)
        {
          v61 = v60;
          uint64_t v62 = sub_1A6892000();
          uint64_t v64 = v63;
        }
        else
        {
          uint64_t v62 = 0;
          uint64_t v64 = 0;
        }
        uint64_t v77 = *(void **)(v0 + 712);
        uint64_t v106 = v93;
        uint64_t v107 = v1;
        uint64_t v108 = v94;
        uint64_t v109 = v105;
        *(void *)&long long v110 = v96;
        *((void *)&v110 + 1) = v102;
        *(void *)&long long v111 = v104;
        *((void *)&v111 + 1) = v101;
        uint64_t v112 = v95;
        uint64_t v113 = v97;
        uint64_t v114 = v103;
        uint64_t v115 = v100 & 0x1FFFFFFFFLL;
        char v117 = BYTE4(v99) & 1;
        int v116 = v99;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v78 = v98;
        uint64_t v79 = sub_1A673D248();
        sub_1A673D250(&v118);
        char v119 = v118;
        sub_1A673D250(&v120);
        v121[0] = v120;
        CoreSynthesizer.Utterance.init(id:ssml:voice:priority:behavior:isoPrioritizedBehavior:)(v62, v64, v91, v92, (uint64_t)&v106, v79, &v119, v121, v0 + 16);
        id v80 = objc_msgSend(v77, sel_voiceSettings);
        if (v80)
        {
          uint64_t v81 = v80;
          sub_1A674CEA4();
          uint64_t v82 = sub_1A6891EA0();

          v83 = sub_1A6818234(v82);
          swift_bridgeObjectRelease();
          if (v83[2])
          {
            sub_1A6741AD0(&qword_1E96C2A00);
            uint64_t v84 = sub_1A6892EF0();
          }
          else
          {
            uint64_t v84 = MEMORY[0x1E4FBC868];
          }
          uint64_t v106 = v84;
          uint64_t v85 = swift_bridgeObjectRetain();
          sub_1A68185A4(v85, 1, &v106);
          swift_bridgeObjectRelease();
          uint64_t v86 = v106;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 152) = v86;
        }
        id v87 = *(void **)(v0 + 704);
        if (objc_msgSend(*(id *)(v0 + 712), sel_synthesizeSilently)) {
          (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v87) + 0x428))(v0 + 16);
        }
        else {
          (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v87) + 0x410))(v0 + 16);
        }
        sub_1A6892530();
        swift_beginAccess();
        *(void *)(v0 + 936) = 0;
        v88 = (void *)swift_task_alloc();
        *(void *)(v0 + 944) = v88;
        void *v88 = v0;
        v88[1] = sub_1A681774C;
        uint64_t v20 = *(void *)(v0 + 728);
        id v17 = (id)(v0 + 464);
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        uint64_t v21 = v0 + 672;
        return MEMORY[0x1F4187ED8](v17, v18, v19, v20, v21);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v17 = objc_msgSend(*(id *)(v0 + 712), sel_voice);
  if (!v17) {
    goto LABEL_34;
  }
  v65 = v17;
  id v66 = objc_msgSend(v17, sel_identifier);

  uint64_t v67 = sub_1A6892000();
  uint64_t v69 = v68;

  sub_1A6818928();
  uint64_t v70 = (void *)swift_allocError();
  *char v71 = v67;
  v71[1] = v69;
  swift_willThrow();
  sub_1A673FF60(*(void *)(v0 + 328), *(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 368), *(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 400), *(void **)(v0 + 408));
  uint64_t v72 = *(void *)(v0 + 720) + 16;
  swift_beginAccess();
  uint64_t v73 = MEMORY[0x1AD0C1D60](v72);
  if (v73)
  {
    uint64_t v74 = (void *)v73;
    uint64_t v75 = *(void *)(v0 + 712);
    uint64_t v76 = (void *)sub_1A68916E0();
    objc_msgSend(v74, sel_speechRequest_didStopWithSuccess_phonemesSpoken_forService_error_, v75, 0, 0, 0, v76);
  }
  else
  {
  }
  (*(void (**)(void))(v0 + 688))();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v89 = *(uint64_t (**)(void))(v0 + 8);
  return v89();
}

uint64_t sub_1A681774C()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1A6817F24;
  }
  else {
    uint64_t v1 = sub_1A681785C;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1A681785C()
{
  unint64_t v1 = *(void *)(v0 + 480);
  if (v1 >> 3 == 0xFFFFFFFF)
  {
    uint64_t v2 = *(void *)(v0 + 720) + 16;
    (*(void (**)(void, void))(*(void *)(v0 + 736) + 8))(*(void *)(v0 + 744), *(void *)(v0 + 728));
    swift_beginAccess();
    uint64_t v3 = (void *)MEMORY[0x1AD0C1D60](v2);
    if (v3)
    {
      uint64_t v4 = v3;
      objc_msgSend(v3, sel_speechRequest_didStopWithSuccess_phonemesSpoken_forService_error_, *(void *)(v0 + 712), 1, 0, 0, 0);
    }
    if (TTSSpeechUnitTestingMode())
    {
      uint64_t v5 = *(void **)(v0 + 936);
      uint64_t v6 = *(void *)(v0 + 768);
      uint64_t v7 = *(void *)(v0 + 760);
      uint64_t v8 = *(void *)(v0 + 752);
      sub_1A673FF60(*(void *)(v0 + 832), *(void *)(v0 + 840), *(void *)(v0 + 848), *(void *)(v0 + 856), *(void *)(v0 + 864), *(void *)(v0 + 872), *(void *)(v0 + 880), *(void *)(v0 + 888), *(void *)(v0 + 896), *(void *)(v0 + 904), *(void **)(v0 + 912));

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    }
    else
    {
      id v17 = objc_msgSend(*(id *)(v0 + 712), sel_audioBufferCallback);
      uint64_t v18 = *(void **)(v0 + 936);
      if (v17)
      {
        uint64_t v19 = (void (**)(void, void))v17;
        v58 = *(void **)(v0 + 912);
        uint64_t v20 = *(void *)(v0 + 888);
        uint64_t v21 = *(void *)(v0 + 856);
        uint64_t v22 = *(void *)(v0 + 760);
        uint64_t v56 = *(void *)(v0 + 752);
        uint64_t v57 = *(void *)(v0 + 768);
        uint64_t v54 = *(void *)(v0 + 872);
        uint64_t v55 = *(void *)(v0 + 880);
        uint64_t v52 = *(void *)(v0 + 832);
        uint64_t v53 = *(void *)(v0 + 864);
        uint64_t v51 = *(void *)(v0 + 848);
        if (v18)
        {
          uint64_t v46 = *(void *)(v0 + 904);
          uint64_t v47 = *(void *)(v0 + 896);
          uint64_t v48 = *(void *)(v0 + 840);
          uint64_t v49 = *(void *)(v0 + 888);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F153B8]);
          id v24 = v18;
          id v25 = objc_msgSend(v23, sel_initWithPCMFormat_frameCapacity_, v24, 0);
          ((void (**)(void, id))v19)[2](v19, v25);

          _Block_release(v19);
          sub_1A673FF60(v52, v48, v51, v21, v53, v54, v55, v49, v47, v46, v58);
        }
        else
        {
          uint64_t v50 = *(void *)(v0 + 856);
          uint64_t v40 = *(void *)(v0 + 896);
          uint64_t v41 = *(void *)(v0 + 904);
          uint64_t v42 = *(void *)(v0 + 840);
          _Block_release(v17);
          sub_1A673FF60(v52, v42, v51, v50, v53, v54, v55, v20, v40, v41, v58);
        }
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v57, v56);
      }
      else
      {
        uint64_t v35 = *(void *)(v0 + 768);
        uint64_t v36 = *(void *)(v0 + 760);
        uint64_t v37 = *(void *)(v0 + 752);
        sub_1A673FF60(*(void *)(v0 + 832), *(void *)(v0 + 840), *(void *)(v0 + 848), *(void *)(v0 + 856), *(void *)(v0 + 864), *(void *)(v0 + 872), *(void *)(v0 + 880), *(void *)(v0 + 888), *(void *)(v0 + 896), *(void *)(v0 + 904), *(void **)(v0 + 912));

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      }
    }
    sub_1A673FF60(*(void *)(v0 + 328), *(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 368), *(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 400), *(void **)(v0 + 408));
    uint64_t v43 = sub_1A67982E0(v0 + 16);
    (*(void (**)(uint64_t))(v0 + 688))(v43);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
    return v44();
  }
  uint64_t v10 = *(void **)(v0 + 464);
  uint64_t v9 = *(void *)(v0 + 472);
  uint64_t v11 = *(void *)(v0 + 488);
  if (v1 >> 61 == 1)
  {
    uint64_t v26 = *(void **)(v0 + 928);
    uint64_t v27 = *(void *)(v0 + 712);
    *(void *)(v0 + 432) = v10;
    *(void *)(v0 + 440) = v9;
    *(unsigned char *)(v0 + 448) = v1;
    *(void *)(v0 + 456) = v11;
    id v28 = sub_1A680BBDC(v0 + 432);
    id v29 = objc_msgSend(v26, sel_ttsMarkerForSSEMarker_forRequest_, v28, v27);
    id v30 = v29;
    if (v29 && objc_msgSend(v29, sel_markType) == (id)1)
    {
      id v31 = (void (*)(void))(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 704)) + 0x480))();
      if (v31)
      {
        uint64_t v32 = (uint64_t)v31;
        v31();
        sub_1A67978FC(v32);
      }
      (*(void (**)(void, void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 704)) + 0x488))(0, 0);
    }
    id v33 = (void *)MEMORY[0x1AD0C1D60](*(void *)(v0 + 720) + 16);
    if (v33)
    {
      double v34 = v33;
      objc_msgSend(v33, sel_speechRequest_withMarker_didStartForService_, *(void *)(v0 + 712), v30, 0);
      swift_unknownObjectRelease();

      sub_1A680FA8C(v10, v9, v1);
      goto LABEL_24;
    }
    swift_unknownObjectRelease();

LABEL_23:
    sub_1A680FA8C(v10, v9, v1);
    goto LABEL_24;
  }
  if (v1 >> 61 != 2) {
    goto LABEL_23;
  }
  uint64_t v12 = *(void **)(v0 + 712);
  sub_1A6799AA0(*(id *)(v0 + 464), *(void *)(v0 + 472), *(void *)(v0 + 480));
  id v13 = objc_msgSend(v12, sel_audioBufferCallback);
  if (!v13)
  {
    sub_1A680FA8C(v10, v9, v1);
    goto LABEL_23;
  }
  uint64_t v14 = (void (**)(void, void))v13;
  uint64_t v15 = *(void **)(v0 + 936);
  id v16 = objc_msgSend(v10, sel_format);

  ((void (**)(void, void *))v14)[2](v14, v10);
  sub_1A680FA8C(v10, v9, v1);
  sub_1A680FA8C(v10, v9, v1);
  _Block_release(v14);
  *(void *)(v0 + 936) = v16;
LABEL_24:
  double v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 944) = v38;
  void *v38 = v0;
  v38[1] = sub_1A681774C;
  uint64_t v39 = *(void *)(v0 + 728);
  return MEMORY[0x1F4187ED8](v0 + 464, 0, 0, v39, v0 + 672);
}

uint64_t sub_1A6817F24()
{
  unint64_t v1 = *(void **)(v0 + 936);
  uint64_t v2 = *(void *)(v0 + 768);
  uint64_t v3 = *(void *)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 752);
  uint64_t v5 = *(void *)(v0 + 744);
  uint64_t v6 = *(void *)(v0 + 736);
  uint64_t v7 = *(void *)(v0 + 728);
  sub_1A673FF60(*(void *)(v0 + 832), *(void *)(v0 + 840), *(void *)(v0 + 848), *(void *)(v0 + 856), *(void *)(v0 + 864), *(void *)(v0 + 872), *(void *)(v0 + 880), *(void *)(v0 + 888), *(void *)(v0 + 896), *(void *)(v0 + 904), *(void **)(v0 + 912));

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1A673FF60(*(void *)(v0 + 328), *(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 368), *(void *)(v0 + 376), *(void *)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 400), *(void **)(v0 + 408));
  uint64_t v8 = *(void **)(v0 + 672);
  sub_1A67982E0(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 720) + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1AD0C1D60](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = *(void *)(v0 + 712);
    id v13 = (void *)sub_1A68916E0();
    objc_msgSend(v11, sel_speechRequest_didStopWithSuccess_phonemesSpoken_forService_error_, v12, 0, 0, 0, v13);
  }
  else
  {
  }
  (*(void (**)(void))(v0 + 688))();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A6818128()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A6818178()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1A6750954;
  return sub_1A6815C50((uint64_t)v7, v2, v3, v4, v5, v6);
}

id sub_1A6818234(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return (id)v2;
  }
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1A681897C(0, v1, 0);
  uint64_t v2 = v29;
  id result = (id)sub_1A67B4C70(a1);
  uint64_t v6 = (uint64_t)result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v28 = *v12;
    uint64_t v14 = *(void **)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    id result = objc_msgSend(v14, sel_floatValue);
    int v16 = v15;
    unint64_t v18 = *(void *)(v29 + 16);
    unint64_t v17 = *(void *)(v29 + 24);
    if (v18 >= v17 >> 1) {
      id result = sub_1A681897C((void *)(v17 > 1), v18 + 1, 1);
    }
    *(void *)(v29 + 16) = v18 + 1;
    uint64_t v19 = v29 + 24 * v18;
    *(void *)(v19 + 32) = v28;
    *(void *)(v19 + 40) = v13;
    *(_DWORD *)(v19 + 48) = v16;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v20 = *(void *)(v27 + 8 * v11);
    if ((v20 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v26;
    if (*(_DWORD *)(a1 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v25;
    }
    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v27 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(a1 + 80 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return (id)v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A6818524()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A681855C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A6818594()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1A68185A4(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  int v9 = *(_DWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  int64_t v10 = (void *)*a3;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1A673F7AC(v8, v7);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v10[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1A67D0790();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    unint64_t v22 = (uint64_t *)(v21[6] + 16 * v12);
    *unint64_t v22 = v8;
    v22[1] = v7;
    *(_DWORD *)(v21[7] + 4 * v12) = v9;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    uint64_t v26 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v27 = (_DWORD *)(a1 + 72);
    while (1)
    {
      uint64_t v29 = *((void *)v27 - 2);
      uint64_t v28 = *((void *)v27 - 1);
      int v30 = *v27;
      id v31 = (void *)*a3;
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1A673F7AC(v29, v28);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v24 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v24) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_1A67CFD38(v36, 1);
        unint64_t v32 = sub_1A673F7AC(v29, v28);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *uint64_t v40 = v29;
      v40[1] = v28;
      *(_DWORD *)(v39[7] + 4 * v32) = v30;
      uint64_t v41 = v39[2];
      BOOL v24 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v27 += 6;
      v39[2] = v42;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1A67CFD38(v15, a2 & 1);
  unint64_t v17 = sub_1A673F7AC(v8, v7);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    sub_1A6741AD0(&qword_1E96C1520);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1A6893150();
  __break(1u);
LABEL_26:
  sub_1A6892C40();
  sub_1A6892150();
  sub_1A6892DC0();
  sub_1A6892150();
  sub_1A6892E60();
  __break(1u);
}

unint64_t sub_1A6818928()
{
  unint64_t result = qword_1E96C32E8;
  if (!qword_1E96C32E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C32E8);
  }
  return result;
}

void *sub_1A681897C(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1A681899C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A681899C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C32F0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_1A6741AD0(&qword_1E96C32F8);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_1A6818AD4@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_1A6892940();
  uint64_t v5 = sub_1A6818BF4(v4);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  unint64_t v6 = (void *)v5;
  double v7 = COERCE_DOUBLE(sub_1A6818C64(v4));
  char v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0 || v7 < a2)
  {

LABEL_6:
    uint64_t v10 = sub_1A6891A40();
    size_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a1;
    uint64_t v14 = 1;
    goto LABEL_7;
  }
  sub_1A6892000();
  sub_1A6891850();

  uint64_t v16 = sub_1A6891A40();
  size_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v12 = v16;
  uint64_t v13 = a1;
  uint64_t v14 = 0;
LABEL_7:

  return v11(v13, v14, 1, v12);
}

uint64_t sub_1A6818BF4(uint64_t a1)
{
  uint64_t result = sub_1A681FE34(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = (void *)sub_1A68201C8(result, v3, 0, a1);
  id v6 = v5;
  return (uint64_t)v5;
}

uint64_t sub_1A6818C64(uint64_t a1)
{
  uint64_t result = sub_1A67B4C70(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  sub_1A681FDE4(result, v3, 0, a1);
  return v5;
}

uint64_t type metadata accessor for TTSSegmentGenerator.Segment()
{
  uint64_t result = qword_1E96D09E0;
  if (!qword_1E96D09E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A6818D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1EB67A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6818D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1EB67A210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6818E00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 144))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6818E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 152);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A6818EA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A6818ED8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

BOOL static TTSSegmentGenerator.SwitchMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TTSSegmentGenerator.SwitchMode.hash(into:)()
{
  return sub_1A6893210();
}

uint64_t TTSSegmentGenerator.SwitchMode.hashValue.getter()
{
  return sub_1A6893250();
}

void TTSSegmentGenerator.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t sub_1A6818FB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 168))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6819000(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 176))(*a1);
}

uint64_t sub_1A6819048()
{
  swift_beginAccess();
  return *(void *)(v0 + 32);
}

uint64_t sub_1A681907C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t TTSSegmentGenerator.__allocating_init(mode:tokenUnit:locales:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 8) = sub_1A677A564;
  *(void *)(v8 + 16) = a2;
  *(unsigned char *)(v8 + 40) = *a1;
  return MEMORY[0x1F4188298](sub_1A68191C0, 0, 0);
}

uint64_t TTSSegmentGenerator.init(mode:tokenUnit:locales:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 40) = *a1;
  return MEMORY[0x1F4188298](sub_1A68191C0, 0, 0);
}

uint64_t sub_1A68191C0()
{
  char v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 32) = 20;
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A68192C0(v5);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 64) = v6;
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A6819EC8(v7);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 72) = v8;
  type metadata accessor for TTSStringTagger();
  *(void *)(v3 + 40) = TTSStringTagger.__allocating_init(locales:)(v2);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F388E0]), sel_init);
  *(unsigned char *)(v3 + 24) = v1;
  *(void *)(v3 + 48) = v9;
  *(void *)(v3 + 56) = v4;
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v11 = *(void *)(v0 + 32);
  return v10(v11);
}

uint64_t sub_1A68192C0(uint64_t a1)
{
  uint64_t v2 = sub_1A6741AD0(&qword_1EB67A238);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  v38[1] = a1;
  if (v5)
  {
    uint64_t v6 = sub_1A6891A40();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = v7;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v41 = *(void *)(v7 + 72);
    uint64_t v48 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 16;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v46 = v11;
    uint64_t v47 = v10;
    char v45 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v42 = v8;
    uint64_t v39 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v40 = v8 + 32;
    swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x1E4FBC870];
    uint64_t v43 = v6;
    uint64_t v44 = v4;
    while (1)
    {
      v47(v4, v9, v6);
      (*v48)(v4, 0, 1, v6);
      uint64_t v14 = (*v45)(v4, 1, v6);
      if (v14 == 1) {
        break;
      }
      uint64_t v56 = v5;
      uint64_t v54 = v38;
      MEMORY[0x1F4188790](v14);
      uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v16, v4, v6);
      uint64_t v57 = v12;
      uint64_t v18 = sub_1A68918D0();
      uint64_t v52 = v38;
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(void *)(v19 + 64);
      MEMORY[0x1F4188790](v18);
      unint64_t v49 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v50 = (char *)v38 - v49;
      uint64_t v21 = sub_1A6891A20();
      uint64_t v51 = v38;
      uint64_t v22 = *(void *)(v21 - 8);
      MEMORY[0x1F4188790](v21);
      BOOL v24 = (char *)v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v55 = v12;
      swift_bridgeObjectRetain();
      uint64_t v53 = v16;
      sub_1A6891A30();
      uint64_t v25 = sub_1A6741AD0(&qword_1EB67A210);
      MEMORY[0x1F4188790](v25 - 8);
      uint64_t v27 = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A68919F0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v27, 1, v18) == 1)
      {
        sub_1A6750210((uint64_t)v27, &qword_1EB67A210);
      }
      else
      {
        uint64_t v28 = v50;
        uint64_t v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v50, v27, v18);
        uint64_t v30 = MEMORY[0x1F4188790](v29);
        id v31 = (char *)v38 - v49;
        MEMORY[0x1F4188790](v30);
        char v33 = (char *)v38 - v32;
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))((char *)v38 - v32, v28, v18);
        sub_1A675E668(v31, v33);
        uint64_t v34 = *(void (**)(char *, uint64_t))(v19 + 8);
        v34(v31, v18);
        v34(v28, v18);
      }
      uint64_t v35 = v56;
      uint64_t v13 = v57;
      uint64_t v6 = v43;
      (*v39)(v53, v43);
      swift_bridgeObjectRelease();
      v9 += v41;
      uint64_t v12 = v13;
      uint64_t v5 = v35 - 1;
      uint64_t v4 = v44;
      if (!v5) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = MEMORY[0x1E4FBC870];
LABEL_9:
    uint64_t v36 = sub_1A6891A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v4, 1, 1, v36);
    uint64_t v12 = v13;
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1A681984C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v43 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = sub_1A6741AD0(&qword_1EB67A238);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v44 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v46 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = MEMORY[0x1E4FBC870];
  for (i = v8; ; uint64_t v8 = i)
  {
    if (v5)
    {
      unint64_t v12 = __clz(__rbit64(v5));
      uint64_t v13 = (v5 - 1) & v5;
      unint64_t v14 = v12 | (v10 << 6);
      goto LABEL_26;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v15 >= v44) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v43 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v44) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v43 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v44) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v43 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v44) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v43 + 8 * v10);
          if (!v16)
          {
            int64_t v10 = v15 + 4;
            if (v15 + 4 >= v44) {
              goto LABEL_29;
            }
            unint64_t v16 = *(void *)(v43 + 8 * v10);
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v13 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_26:
    uint64_t v18 = *(void *)(v46 + 48);
    uint64_t v19 = sub_1A6891A40();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v8, v18 + *(void *)(v20 + 72) * v14, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v19);
    if (v21 == 1) {
      goto LABEL_30;
    }
    unint64_t v50 = v13;
    int64_t v51 = v10;
    uint64_t v54 = &v42;
    MEMORY[0x1F4188790](v21);
    uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v8, v19);
    uint64_t v57 = v11;
    uint64_t v24 = sub_1A68918D0();
    uint64_t v52 = &v42;
    uint64_t v25 = *(void *)(v24 - 8);
    MEMORY[0x1F4188790](v24);
    unint64_t v47 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v48 = v26;
    unint64_t v49 = (char *)&v42 - v47;
    uint64_t v27 = sub_1A6891A20();
    uint64_t v56 = &v42;
    uint64_t v28 = *(void *)(v27 - 8);
    MEMORY[0x1F4188790](v27);
    uint64_t v30 = (char *)&v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v55 = v11;
    swift_bridgeObjectRetain();
    uint64_t v53 = v23;
    sub_1A6891A30();
    uint64_t v31 = sub_1A6741AD0(&qword_1EB67A210);
    MEMORY[0x1F4188790](v31 - 8);
    char v33 = (char *)&v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A68919F0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v33, 1, v24) == 1)
    {
      sub_1A6750210((uint64_t)v33, &qword_1EB67A210);
    }
    else
    {
      uint64_t v34 = v49;
      uint64_t v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v49, v33, v24);
      uint64_t v56 = &v42;
      uint64_t v36 = MEMORY[0x1F4188790](v35);
      char v37 = (char *)&v42 - v47;
      MEMORY[0x1F4188790](v36);
      uint64_t v39 = (char *)&v42 - v38;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)&v42 - v38, v34, v24);
      sub_1A675E668(v37, v39);
      uint64_t v40 = *(void (**)(char *, uint64_t))(v25 + 8);
      v40(v37, v24);
      v40(v34, v24);
    }
    unint64_t v5 = v50;
    int64_t v10 = v51;
    uint64_t v11 = v57;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v53, v19);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 5;
  if (v17 >= v44)
  {
LABEL_29:
    uint64_t v41 = sub_1A6891A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v8, 1, 1, v41);
LABEL_30:
    swift_release();
    return v11;
  }
  unint64_t v16 = *(void *)(v43 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v44) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v43 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A6819EC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = sub_1A6741AD0(&qword_1EB67A210);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = MEMORY[0x1E4FBC870];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v12 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v10 << 6))
  {
    uint64_t v17 = *(void *)(v29 + 48);
    uint64_t v18 = sub_1A68918D0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v8, v17 + *(void *)(v19 + 72) * i, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v8, 0, 1, v18);
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18);
    if (v20 == 1) {
      goto LABEL_28;
    }
    MEMORY[0x1F4188790](v20);
    uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v8, v18);
    uint64_t v30 = v11;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1A681E604();
    sub_1A681EA18(v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = v30;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v11 = v24;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v10 >= v28) {
      goto LABEL_27;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v10);
    if (!v15) {
      break;
    }
LABEL_19:
    unint64_t v5 = (v15 - 1) & v15;
  }
  int64_t v16 = v10 + 1;
  if (v10 + 1 >= v28) {
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v10 + 2;
  if (v10 + 2 >= v28) {
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v10 + 3;
  if (v10 + 3 >= v28) {
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v10 + 4;
  if (v10 + 4 >= v28) {
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v10 + 5;
  if (v10 + 5 >= v28)
  {
LABEL_27:
    uint64_t v25 = sub_1A68918D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
LABEL_28:
    swift_release();
    return v11;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
LABEL_18:
    int64_t v10 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_27;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A681A280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v36 = a4;
  uint64_t v6 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v42 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C3310);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1A6741AD0(&qword_1E96C3318);
  uint64_t v12 = *(void *)(v34 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v34);
  uint64_t v35 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  int64_t v16 = (char *)&v33 - v15;
  type metadata accessor for StreamingTokenizer();
  uint64_t v17 = *(void *)(v4 + 56);
  uint64_t v39 = a2;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A677C8E8(v41, a2, v17);
  type metadata accessor for TTSSegmentGenerator.Segment();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBD028], v8);
  sub_1A68924B0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_retain();
  uint64_t v19 = v34;
  uint64_t v20 = v16;
  char v37 = v16;
  sub_1A68924D0();
  uint64_t v21 = sub_1A68924A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v42, 1, 1, v21);
  uint64_t v22 = v35;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v35, v20, v19);
  uint64_t v23 = sub_1A6741AD0(&qword_1EB67A210);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  MEMORY[0x1F4188790](v23 - 8);
  sub_1A6818D30(v40, (uint64_t)&v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v27 = (v13 + *(unsigned __int8 *)(v24 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  int64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0;
  uint64_t v29 = v38;
  *((void *)v28 + 4) = v18;
  *((void *)v28 + 5) = v29;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v28[v26], v22, v19);
  sub_1A6818D98((uint64_t)&v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v28[v27]);
  uint64_t v30 = &v28[(v25 + v27 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v31 = v39;
  *(void *)uint64_t v30 = v41;
  *((void *)v30 + 1) = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1A67724DC(v42, (uint64_t)&unk_1E96C3328, (uint64_t)v28);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v37, v19);
}

uint64_t sub_1A681A6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a8;
  v8[21] = v13;
  v8[18] = a6;
  v8[19] = a7;
  v8[16] = a4;
  v8[17] = a5;
  v8[22] = type metadata accessor for TTSSegmentGenerator.Segment();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C33D0);
  v8[25] = v9;
  v8[26] = *(void *)(v9 - 8);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C1FD0);
  v8[29] = v10;
  v8[30] = *(void *)(v10 - 8);
  v8[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A681A858, 0, 0);
}

uint64_t sub_1A681A858()
{
  (*(void (**)(void))(**(void **)(v0 + 128) + 128))();
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v1;
  *char v1 = v0;
  v1[1] = sub_1A681A930;
  uint64_t v2 = *(void *)(v0 + 232);
  return MEMORY[0x1F4187D58](v0 + 16, 0, 0, v2);
}

uint64_t sub_1A681A930()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A681AA2C, 0, 0);
}

uint64_t sub_1A681AA2C()
{
  uint64_t v199 = v0[2];
  uint64_t v209 = v0[7];
  if (v209)
  {
    uint64_t v1 = (uint64_t *)v0[3];
    uint64_t v2 = v0[4];
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v5 = v0[17];
    int v6 = *(unsigned __int8 *)(v5 + 24);
    v195 = v0 + 2;
    if (!*(unsigned char *)(v5 + 24))
    {
      uint64_t v45 = v0[28];
      uint64_t v46 = v0[26];
      uint64_t v239 = v0[25];
      unint64_t v47 = (void *)v0[24];
      uint64_t v48 = v0[3];
      uint64_t v49 = v0[22];
      unint64_t v50 = (char *)v47 + *(int *)(v49 + 24);
      uint64_t v51 = sub_1A68918D0();
      uint64_t v52 = v50;
      uint64_t v25 = (void *)v231;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v52, 1, 1, v51);
      *unint64_t v47 = v2;
      v47[1] = v3;
      v47[2] = v4;
      v47[3] = v209;
      v47[4] = v199;
      v47[5] = v48;
      uint64_t v53 = (_OWORD *)((char *)v47 + *(int *)(v49 + 28));
      *uint64_t v53 = 0u;
      v53[1] = 0u;
      sub_1A6741AD0(&qword_1E96C3318);
      sub_1A68924F0();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v239);
      goto LABEL_167;
    }
    uint64_t v7 = *(void *)(v5 + 40);
    v0[11] = MEMORY[0x1E4FBB7A8];
    v0[12] = sub_1A67CC288();
    uint64_t v8 = (void *)swift_allocObject();
    v0[8] = v8;
    v8[2] = v2;
    v8[3] = v3;
    uint64_t v204 = v3;
    v8[4] = v4;
    v8[5] = v209;
    uint64_t v9 = *(uint64_t (**)(void *))(*(void *)v7 + 192);
    swift_bridgeObjectRetain();
    uint64_t v10 = v9(v0 + 8);
    sub_1A6741A24((uint64_t)(v0 + 8));
    v196 = v1;
    uint64_t v202 = v2;
    uint64_t v203 = v4;
    if (*(void *)(v10 + 16) == 1)
    {
      uint64_t v11 = *(void *)(v10 + 56);
      if (*(void *)(v11 + 16) == 1)
      {
        sub_1A6741AD0(&qword_1EB67A210);
        uint64_t v1 = (uint64_t *)swift_task_alloc();
        uint64_t v12 = *(void *)(v10 + 32);
        uint64_t v13 = *(void *)(v10 + 40);
        unsigned __int8 v14 = *(unsigned char *)(v10 + 48);
        sub_1A67DB658(v12, v13, v14);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        sub_1A67DB4D4(v12, v13, v14);
        swift_bridgeObjectRelease();
        uint64_t v15 = swift_task_alloc();
        uint64_t v19 = v15;
        unint64_t v20 = v11 + 56;
        unint64_t v21 = *(void *)(v11 + 56);
        char v22 = *(unsigned char *)(v11 + 32);
        uint64_t v23 = 1 << v22;
        if (v21)
        {
          uint64_t v24 = 0;
          uint64_t v25 = (void *)v231;
        }
        else
        {
          unsigned int v54 = v22 & 0x3F;
          uint64_t v25 = (void *)v231;
          if (v54 < 7) {
            goto LABEL_164;
          }
          unint64_t v21 = *(void *)(v11 + 64);
          if (v21)
          {
            uint64_t v24 = 64;
          }
          else
          {
            if (v54 < 8) {
              goto LABEL_164;
            }
            unint64_t v21 = *(void *)(v11 + 72);
            if (!v21)
            {
LABEL_158:
              unint64_t v182 = (unint64_t)(v23 + 63) >> 6;
              if (v182 <= 3) {
                unint64_t v182 = 3;
              }
              v183 = (unint64_t *)(v11 + 80);
              unint64_t v184 = v182 - 3;
              uint64_t v24 = 128;
              while (v184)
              {
                unint64_t v185 = *v183++;
                unint64_t v21 = v185;
                v24 += 64;
                --v184;
                if (v185) {
                  goto LABEL_7;
                }
              }
              goto LABEL_164;
            }
            uint64_t v24 = 128;
          }
        }
LABEL_7:
        unint64_t v26 = __clz(__rbit64(v21));
        uint64_t v27 = v26 + v24;
        if (v26 + v24 != v23)
        {
          if ((v27 & 0x8000000000000000) == 0 && v27 < v23)
          {
            if ((*(void *)(v20 + (((unint64_t)v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v26))
            {
              uint64_t v28 = *(void *)(v11 + 48);
              uint64_t v29 = sub_1A68918D0();
              uint64_t v30 = *(void *)(v29 - 8);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v19, v28 + *(void *)(v30 + 72) * v27, v29);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v19, 0, 1, v29);
              uint64_t v25 = (void *)v231;
              goto LABEL_165;
            }
            goto LABEL_177;
          }
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
          goto LABEL_181;
        }
LABEL_164:
        uint64_t v29 = sub_1A68918D0();
        uint64_t v30 = *(void *)(v29 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v19, 1, 1, v29);
LABEL_165:
        swift_bridgeObjectRelease();
        sub_1A68918D0();
        uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v19, 1, v29);
        if (v15 != 1)
        {
          uint64_t v187 = v25[26];
          uint64_t v186 = v25[27];
          uint64_t v188 = *(void *)(v231 + 200);
          v189 = *(void **)(v231 + 184);
          uint64_t v190 = *(void *)(v231 + 176);
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v30 + 32))(v1, v19, v29);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v30 + 56))(v1, 0, 1, v29);
          void *v189 = v202;
          v189[1] = v204;
          v189[2] = v203;
          v189[3] = v209;
          v189[4] = v199;
          v189[5] = v196;
          sub_1A6818D98((uint64_t)v1, (uint64_t)v189 + *(int *)(v190 + 24));
          v191 = (_OWORD *)((char *)v189 + *(int *)(v190 + 28));
          _OWORD *v191 = 0u;
          v191[1] = 0u;
          swift_task_dealloc();
          swift_task_dealloc();
          sub_1A6741AD0(&qword_1E96C3318);
          sub_1A68924F0();
          uint64_t v192 = v188;
          uint64_t v25 = (void *)v231;
          (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v186, v192);
LABEL_167:
          v193 = (void *)swift_task_alloc();
          v25[32] = v193;
          void *v193 = v25;
          v193[1] = sub_1A681A930;
          uint64_t v18 = v25[29];
          uint64_t v15 = (uint64_t)v195;
          uint64_t v16 = 0;
          uint64_t v17 = 0;
          return MEMORY[0x1F4187D58](v15, v16, v17, v18);
        }
        goto LABEL_182;
      }
    }
    uint64_t v201 = v10;
    uint64_t v25 = (void *)v231;
    uint64_t v33 = *(void *)(v231 + 152);
    uint64_t v11 = (*(void *)(*(void *)(sub_1A6741AD0(&qword_1EB67A210) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v19 = swift_task_alloc();
    sub_1A6818D30(v33, v19);
    uint64_t v200 = v19;
    uint64_t v219 = v11;
    if (v6 != 2)
    {
LABEL_39:
      uint64_t v57 = sub_1A68918D0();
      uint64_t v58 = *(void *)(v57 - 8);
      uint64_t v59 = swift_task_alloc();
      uint64_t v60 = swift_task_alloc();
      sub_1A6818D30(v19, v60);
      v218 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
      uint64_t v237 = v58;
      uint64_t v240 = v57;
      if (v218(v60, 1, v57) == 1)
      {
        sub_1A6750210(v60, &qword_1EB67A210);
        swift_task_dealloc();
        uint64_t v61 = v201;
        goto LABEL_103;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v59, v60, v57);
      swift_task_dealloc();
      uint64_t v232 = v59;
      uint64_t v206 = *(void *)(v201 + 16);
      if (!v206)
      {
        swift_bridgeObjectRelease();
LABEL_96:
        uint64_t v107 = v25[26];
        uint64_t v234 = v25[28];
        uint64_t v236 = v25[25];
        uint64_t v108 = (void *)v25[24];
        uint64_t v109 = v25[22];
        long long v110 = (char *)v108 + *(int *)(v109 + 24);
        (*(void (**)(char *, uint64_t, uint64_t))(v237 + 16))(v110, v232, v240);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v237 + 56))(v110, 0, 1, v240);
        *uint64_t v108 = v2;
        v108[1] = v204;
        v108[2] = v4;
        v108[3] = v209;
        v108[4] = v199;
        v108[5] = v196;
        long long v111 = (_OWORD *)((char *)v108 + *(int *)(v109 + 28));
        *long long v111 = 0u;
        v111[1] = 0u;
        sub_1A6741AD0(&qword_1E96C3318);
        sub_1A68924F0();
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v234, v236);
        sub_1A6750210(v200, &qword_1EB67A210);
        (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v232, v240);
        swift_task_dealloc();
LABEL_151:
        swift_task_dealloc();
        goto LABEL_167;
      }
      v228 = (void (**)(uint64_t, uint64_t))(v58 + 8);
      swift_bridgeObjectRetain();
      uint64_t v62 = 0;
LABEL_45:
      uint64_t v213 = v62;
      uint64_t v63 = v201 + 32 + 48 * v62;
      uint64_t v64 = *(void *)v63;
      uint64_t v65 = *(void *)(v63 + 8);
      unsigned __int8 v66 = *(unsigned char *)(v63 + 16);
      uint64_t v67 = *(void *)(v63 + 24);
      unsigned __int8 v223 = v66;
      uint64_t v220 = v65;
      uint64_t v215 = *(void *)v63;
      if (*(void *)(v67 + 16))
      {
        sub_1A67DB658(v64, v65, v66);
        sub_1A67DDCEC(&qword_1E96C1568);
        swift_bridgeObjectRetain();
        uint64_t v68 = sub_1A6891F10();
        uint64_t v69 = -1 << *(unsigned char *)(v67 + 32);
        unint64_t v70 = v68 & ~v69;
        uint64_t v71 = v67 + 56;
        if ((*(void *)(v67 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70))
        {
          uint64_t v72 = ~v69;
          while (1)
          {
            uint64_t v73 = swift_task_alloc();
            uint64_t v74 = v67;
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v237 + 16))(v73, *(void *)(v67 + 48) + *(void *)(v237 + 72) * v70, v240);
            sub_1A67DDCEC(&qword_1E96C1550);
            char v75 = sub_1A6891FC0();
            (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v73, v240);
            swift_task_dealloc();
            if (v75) {
              break;
            }
            unint64_t v70 = (v70 + 1) & v72;
            uint64_t v67 = v74;
            if (((*(void *)(v71 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70) & 1) == 0) {
              goto LABEL_52;
            }
          }
          sub_1A67DB4D4(v215, v220, v223);
          swift_bridgeObjectRelease();
          uint64_t v25 = (void *)v231;
          goto LABEL_44;
        }
      }
      else
      {
        sub_1A67DB658(v64, v65, v66);
        swift_bridgeObjectRetain();
      }
LABEL_52:
      uint64_t v25 = (void *)v231;
      uint64_t v76 = *(void *)(v231 + 136);
      uint64_t v1 = (uint64_t *)v215;
      sub_1A67DB658(v215, v220, v223);
      sub_1A6892A20();
      uint64_t v11 = sub_1A6892A10();
      uint64_t v77 = swift_bridgeObjectRelease();
      if ((*(uint64_t (**)(uint64_t))(*(void *)v76 + 168))(v77) < v11)
      {
        sub_1A67DB4D4(v215, v220, v223);
        sub_1A67DB4D4(v215, v220, v223);
        swift_bridgeObjectRelease();
        uint64_t v61 = v201;
        uint64_t v95 = v232;
        goto LABEL_102;
      }
      *(void *)(v231 + 104) = v215;
      *(void *)(v231 + 112) = v220;
      *(unsigned char *)(v231 + 120) = v223;
      id v78 = sub_1A67D5598();
      sub_1A67DB4D4(v215, v220, v223);
      uint64_t v79 = sub_1A6892700();
      uint64_t v80 = v79;
      uint64_t v1 = (uint64_t *)v78[2];
      if (!v1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_74;
      }
      uint64_t v11 = 0;
      v233 = v78 + 4;
      uint64_t v81 = v79 + 56;
      while (1)
      {
        uint64_t v82 = &v233[2 * v11];
        uint64_t v83 = *v82;
        uint64_t v84 = v82[1];
        ++v11;
        sub_1A6893200();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A68920F0();
        uint64_t v85 = sub_1A6893250();
        uint64_t v86 = -1 << *(unsigned char *)(v80 + 32);
        unint64_t v87 = v85 & ~v86;
        if (((*(void *)(v81 + ((v87 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v87) & 1) == 0) {
          goto LABEL_70;
        }
        uint64_t v88 = *(void *)(v80 + 48);
        uint64_t v89 = (void *)(v88 + 16 * v87);
        BOOL v90 = *v89 == v83 && v89[1] == v84;
        if (v90 || (sub_1A6893120() & 1) != 0)
        {
LABEL_55:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((uint64_t *)v11 == v1) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v91 = ~v86;
          while (1)
          {
            unint64_t v87 = (v87 + 1) & v91;
            if (((*(void *)(v81 + ((v87 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v87) & 1) == 0) {
              break;
            }
            uint64_t v92 = (void *)(v88 + 16 * v87);
            BOOL v93 = *v92 == v83 && v92[1] == v84;
            if (v93 || (sub_1A6893120() & 1) != 0) {
              goto LABEL_55;
            }
          }
LABEL_70:
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          swift_bridgeObjectRetain();
          sub_1A675F048(v83, v84, v87, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((uint64_t *)v11 == v1)
          {
LABEL_72:
            swift_bridgeObjectRelease();
            uint64_t v2 = v202;
            uint64_t v4 = v203;
LABEL_74:
            uint64_t v95 = v232;
            if (!*(void *)(v80 + 16)
              || (sub_1A6893200(),
                  sub_1A68920F0(),
                  uint64_t v96 = sub_1A6893250(),
                  uint64_t v97 = -1 << *(unsigned char *)(v80 + 32),
                  unint64_t v98 = v96 & ~v97,
                  uint64_t v99 = v80 + 56,
                  ((*(void *)(v80 + 56 + ((v98 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v98) & 1) == 0))
            {
LABEL_94:
              swift_bridgeObjectRelease();
              sub_1A67DB4D4(v215, v220, v223);
              uint64_t v61 = v201;
              swift_bridgeObjectRelease();
              goto LABEL_102;
            }
            uint64_t v11 = *(void *)(v80 + 48);
            uint64_t v100 = (void *)(v11 + 16 * v98);
            BOOL v101 = *v100 == 1853120844 && v100[1] == 0xE400000000000000;
            if (!v101 && (sub_1A6893120() & 1) == 0)
            {
              uint64_t v102 = ~v97;
              unint64_t v103 = (v98 + 1) & v102;
              if (((*(void *)(v99 + ((v103 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v103) & 1) == 0) {
                goto LABEL_94;
              }
              uint64_t v104 = (void *)(v11 + 16 * v103);
              if (*v104 != 1853120844 || v104[1] != 0xE400000000000000)
              {
                while (1)
                {
                  if (sub_1A6893120()) {
                    goto LABEL_43;
                  }
                  unint64_t v103 = (v103 + 1) & v102;
                  if (((*(void *)(v99 + ((v103 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v103) & 1) == 0) {
                    break;
                  }
                  uint64_t v105 = (void *)(v11 + 16 * v103);
                  if (*v105 == 1853120844 && v105[1] == 0xE400000000000000) {
                    goto LABEL_43;
                  }
                }
                swift_bridgeObjectRelease();
                sub_1A67DB4D4(v215, v220, v223);
                swift_bridgeObjectRelease();
                uint64_t v61 = v201;
LABEL_102:
                swift_bridgeObjectRelease();
                (*v228)(v95, v240);
                uint64_t v19 = v200;
LABEL_103:
                uint64_t v15 = swift_task_dealloc();
                uint64_t v198 = *(void *)(v61 + 16);
                if (!v198)
                {
LABEL_150:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1A6750210(v19, &qword_1EB67A210);
                  goto LABEL_151;
                }
                unint64_t v117 = 0;
                uint64_t v197 = v61 + 32;
                v235 = (void (**)(uint64_t, uint64_t))(v237 + 8);
                uint64_t v23 = v237 + 56;
                v205 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v237 + 56);
                while (2)
                {
                  unint64_t v20 = *(void *)(v61 + 16);
                  if (v117 >= v20)
                  {
                    __break(1u);
                    goto LABEL_158;
                  }
                  unint64_t v124 = v197 + 48 * v117;
                  uint64_t v125 = *(void *)(v124 + 8);
                  unsigned __int8 v126 = *(unsigned char *)(v124 + 16);
                  uint64_t v128 = *(void *)(v124 + 24);
                  uint64_t v127 = *(void *)(v124 + 32);
                  uint64_t v129 = *(void *)(v124 + 40);
                  uint64_t v214 = *(void *)v124;
                  sub_1A67DB658(*(void *)v124, v125, v126);
                  swift_bridgeObjectRetain();
                  uint64_t v216 = v127;
                  uint64_t v130 = sub_1A6892A20();
                  uint64_t v224 = v131;
                  uint64_t v226 = v130;
                  uint64_t v221 = v132;
                  uint64_t v229 = v133;
                  uint64_t v134 = swift_task_alloc();
                  sub_1A6818D30(v19, v134);
                  uint64_t v15 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v218)(v134, 1, v240);
                  if (v15 == 1) {
                    goto LABEL_180;
                  }
                  uint64_t v211 = v125;
                  unint64_t v212 = v117;
                  uint64_t v210 = v126;
                  if (*(void *)(v128 + 16))
                  {
                    sub_1A67DDCEC(&qword_1E96C1568);
                    swift_bridgeObjectRetain();
                    uint64_t v135 = sub_1A6891F10();
                    uint64_t v136 = -1 << *(unsigned char *)(v128 + 32);
                    unint64_t v137 = v135 & ~v136;
                    if ((*(void *)(v128 + 56 + ((v137 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v137))
                    {
                      uint64_t v138 = ~v136;
                      while (1)
                      {
                        uint64_t v139 = swift_task_alloc();
                        (*(void (**)(uint64_t, unint64_t, uint64_t))(v237 + 16))(v139, *(void *)(v128 + 48) + *(void *)(v237 + 72) * v137, v240);
                        sub_1A67DDCEC(&qword_1E96C1550);
                        char v140 = sub_1A6891FC0();
                        char v141 = *(void (**)(uint64_t, uint64_t))(v237 + 8);
                        v141(v139, v240);
                        swift_task_dealloc();
                        if (v140) {
                          break;
                        }
                        unint64_t v137 = (v137 + 1) & v138;
                        if (((*(void *)(v128 + 56 + ((v137 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v137) & 1) == 0) {
                          goto LABEL_117;
                        }
                      }
                      uint64_t v25 = (void *)v231;
                      uint64_t v222 = *(void *)(v231 + 224);
                      uint64_t v225 = *(void *)(v231 + 208);
                      v155 = *(uint64_t **)(v231 + 192);
                      uint64_t v227 = *(void *)(v231 + 200);
                      uint64_t v156 = *(void *)(v231 + 176);
                      v141(v134, v240);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_task_dealloc();
                      uint64_t v157 = sub_1A6892240();
                      uint64_t v1 = v158;
                      uint64_t v160 = v159;
                      uint64_t v230 = v161;
                      uint64_t v19 = v200;
                      sub_1A6818D30(v200, (uint64_t)v155 + *(int *)(v156 + 24));
                      uint64_t *v155 = v157;
                      v155[1] = (uint64_t)v1;
                      v155[2] = v160;
                      v155[3] = v230;
                      v155[4] = v216;
                      v155[5] = v129;
                      v162 = (uint64_t *)((char *)v155 + *(int *)(v156 + 28));
                      uint64_t *v162 = v214;
                      v162[1] = v211;
                      v162[2] = v210;
                      v162[3] = v128;
                      sub_1A6741AD0(&qword_1E96C3318);
                      uint64_t v11 = v222;
                      sub_1A68924F0();
                      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v225 + 8))(v222, v227);
LABEL_107:
                      unint64_t v117 = v212 + 1;
                      uint64_t v61 = v201;
                      if (v212 + 1 == v198) {
                        goto LABEL_150;
                      }
                      continue;
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRetain();
                  }
                  break;
                }
LABEL_117:
                v142 = *v235;
                uint64_t v143 = v240;
                (*v235)(v134, v240);
                swift_task_dealloc();
                uint64_t v15 = swift_task_alloc();
                uint64_t v144 = v15;
                unint64_t v145 = *(void *)(v128 + 56);
                char v146 = *(unsigned char *)(v128 + 32);
                uint64_t v147 = 1 << v146;
                if (v145)
                {
                  uint64_t v148 = 0;
                  v149 = (void *)v231;
                  uint64_t v150 = v237;
                  goto LABEL_119;
                }
                unsigned int v154 = v146 & 0x3F;
                v149 = (void *)v231;
                uint64_t v150 = v237;
                if (v154 >= 7)
                {
                  unint64_t v145 = *(void *)(v128 + 64);
                  if (v145)
                  {
                    uint64_t v148 = 1;
                    goto LABEL_119;
                  }
                  if (v154 >= 8)
                  {
                    unint64_t v145 = *(void *)(v128 + 72);
                    if (v145)
                    {
                      uint64_t v148 = 2;
                      goto LABEL_119;
                    }
                    unint64_t v145 = *(void *)(v128 + 80);
                    if (v145)
                    {
                      uint64_t v148 = 3;
LABEL_119:
                      unint64_t v151 = __clz(__rbit64(v145));
                      uint64_t v152 = v151 + (v148 << 6);
                      if (v152 != v147)
                      {
                        if (v152 < 0 || v152 >= v147)
                        {
                          __break(1u);
LABEL_171:
                          __break(1u);
LABEL_172:
                          __break(1u);
LABEL_173:
                          __break(1u);
                          goto LABEL_174;
                        }
                        if (((*(void *)(v128 + 56 + (((unint64_t)v152 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v151) & 1) == 0) {
                          goto LABEL_171;
                        }
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16))(v15, *(void *)(v128 + 48) + *(void *)(v150 + 72) * v152, v240);
                        v153 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 56);
                        v153(v144, 0, 1, v240);
LABEL_140:
                        uint64_t v217 = v144;
                        if (*(void *)(v128 + 16) < 2uLL)
                        {
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          v208 = v153;
                          v166 = *(void **)(v149[17] + 48);
                          objc_msgSend(v166, sel_reset);
                          uint64_t v167 = sub_1A6819EC8(v128);
                          swift_bridgeObjectRelease();
                          sub_1A681FEE4(v167);
                          swift_bridgeObjectRelease();
                          type metadata accessor for NLLanguage(0);
                          v168 = (void *)sub_1A68922D0();
                          swift_release();
                          objc_msgSend(v166, sel_setLanguageConstraints_, v168);

                          MEMORY[0x1AD0BF180](v226, v224, v221, v229);
                          v169 = (void *)sub_1A6891FD0();
                          swift_bridgeObjectRelease();
                          objc_msgSend(v166, sel_processString_, v169);

                          uint64_t v170 = swift_task_alloc();
                          sub_1A6741AD0(&qword_1EB67A238);
                          uint64_t v171 = swift_task_alloc();
                          sub_1A6818AD4(v171, 0.95);
                          uint64_t v172 = sub_1A6891A40();
                          uint64_t v173 = *(void *)(v172 - 8);
                          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172) == 1)
                          {
                            sub_1A6750210(v171, &qword_1EB67A238);
                            swift_task_dealloc();
                            swift_task_dealloc();
                            uint64_t v143 = v240;
                            goto LABEL_146;
                          }
                          v194 = v142;
                          uint64_t v174 = sub_1A6891A20();
                          uint64_t v175 = *(void *)(v174 - 8);
                          uint64_t v176 = swift_task_alloc();
                          sub_1A6891A30();
                          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v171, v172);
                          sub_1A68919F0();
                          (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v176, v174);
                          uint64_t v143 = v240;
                          if (v218(v170, 1, v240) == 1)
                          {
                            swift_task_dealloc();
                            swift_task_dealloc();
                            sub_1A6750210(v170, &qword_1EB67A210);
                            swift_task_dealloc();
LABEL_146:
                            uint64_t v144 = v217;
                            v153 = v208;
                          }
                          else
                          {
                            sub_1A6891890();
                            v194(v170, v240);
                            swift_task_dealloc();
                            swift_task_dealloc();
                            swift_task_dealloc();
                            uint64_t v177 = swift_task_alloc();
                            sub_1A68918E0();
                            uint64_t v144 = v217;
                            sub_1A6750210(v217, &qword_1EB67A210);
                            v153 = v208;
                            v208(v177, 0, 1, v240);
                            sub_1A6818D98(v177, v217);
                            swift_task_dealloc();
                          }
                        }
                        uint64_t v178 = v149[19];
                        uint64_t v11 = swift_task_alloc();
                        uint64_t v179 = swift_task_alloc();
                        sub_1A6818D30(v144, v179);
                        uint64_t v180 = swift_task_alloc();
                        sub_1A6818D30(v178, v180);
                        if (v218(v179, 1, v143) == 1)
                        {
                          sub_1A6818D98(v180, v11);
                          sub_1A6750210(v179, &qword_1EB67A210);
                        }
                        else
                        {
                          sub_1A6750210(v180, &qword_1EB67A210);
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 32))(v11, v179, v143);
                          v153(v11, 0, 1, v143);
                        }
                        uint64_t v1 = &qword_1EB67A210;
                        uint64_t v118 = v149[28];
                        uint64_t v119 = v149[26];
                        uint64_t v207 = v149[25];
                        char v120 = (uint64_t *)v149[24];
                        uint64_t v121 = *(void *)(v231 + 176);
                        swift_task_dealloc();
                        swift_task_dealloc();
                        sub_1A6818D30(v11, (uint64_t)v120 + *(int *)(v121 + 24));
                        *char v120 = v226;
                        v120[1] = v224;
                        v120[2] = v221;
                        v120[3] = v229;
                        v120[4] = v199;
                        v120[5] = (uint64_t)v196;
                        uint64_t v122 = *(int *)(v121 + 28);
                        uint64_t v25 = (void *)v231;
                        uint64_t v123 = (uint64_t *)((char *)v120 + v122);
                        *uint64_t v123 = v214;
                        v123[1] = v211;
                        v123[2] = v210;
                        v123[3] = v128;
                        sub_1A6741AD0(&qword_1E96C3318);
                        sub_1A68924F0();
                        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v207);
                        sub_1A6750210(v11, &qword_1EB67A210);
                        sub_1A6750210(v217, &qword_1EB67A210);
                        swift_task_dealloc();
                        uint64_t v15 = swift_task_dealloc();
                        uint64_t v19 = v200;
                        goto LABEL_107;
                      }
                    }
                    else
                    {
                      uint64_t v163 = 0;
                      unint64_t v164 = (unint64_t)(v147 + 63) >> 6;
                      if (v164 <= 4) {
                        unint64_t v164 = 4;
                      }
                      unint64_t v165 = v164 - 4;
                      while (v165 != v163)
                      {
                        unint64_t v145 = *(void *)(v128 + 88 + 8 * v163++);
                        if (v145)
                        {
                          uint64_t v148 = v163 + 3;
                          goto LABEL_119;
                        }
                      }
                    }
                  }
                }
                v153 = *v205;
                (*v205)(v15, 1, 1, v240);
                goto LABEL_140;
              }
            }
LABEL_43:
            swift_bridgeObjectRelease();
            sub_1A67DB4D4(v215, v220, v223);
            swift_bridgeObjectRelease();
LABEL_44:
            uint64_t v62 = v213 + 1;
            if (v213 + 1 == v206)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_96;
            }
            goto LABEL_45;
          }
          uint64_t v81 = v80 + 56;
        }
      }
    }
    uint64_t v34 = *(void **)(*(void *)(v231 + 136) + 48);
    uint64_t v35 = swift_bridgeObjectRetain();
    sub_1A681FEE4(v35);
    swift_bridgeObjectRelease();
    type metadata accessor for NLLanguage(0);
    uint64_t v36 = (void *)sub_1A68922D0();
    swift_release();
    objc_msgSend(v34, sel_setLanguageConstraints_, v36);

    objc_msgSend(v34, sel_reset);
    MEMORY[0x1AD0BF180](v2, v204, v4, v209);
    char v37 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_processString_, v37);

    uint64_t v38 = sub_1A6891A40();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = swift_task_alloc();
    sub_1A6741AD0(&qword_1EB67A238);
    uint64_t v41 = swift_task_alloc();
    uint64_t v42 = sub_1A6892940();
    uint64_t v15 = sub_1A681FE34(v42);
    if (v17)
    {
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    int v43 = *(_DWORD *)(v42 + 36);
    if (v43 != v16) {
      goto LABEL_172;
    }
    uint64_t v44 = 1 << *(unsigned char *)(v42 + 32);
    if (v15 == v44)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = (void *)v231;
      goto LABEL_36;
    }
    if (v15 < 0 || v15 >= v44) {
      goto LABEL_173;
    }
    if ((*(void *)(v42 + 64 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15))
    {
      uint64_t v1 = *(uint64_t **)(*(void *)(v42 + 48) + 8 * v15);
      uint64_t v15 = sub_1A67B4C70(v42);
      if (v17)
      {
LABEL_183:
        __break(1u);
        return MEMORY[0x1F4187D58](v15, v16, v17, v18);
      }
      if (v43 == v16)
      {
        uint64_t v25 = (void *)v231;
        if (v15 == v44)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v15 < 0 || v15 >= v44) {
            goto LABEL_178;
          }
          if (((*(void *)(v42 + 64 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            goto LABEL_179;
          }
          double v55 = *(double *)(*(void *)(v42 + 56) + 8 * v15);
          uint64_t v56 = v1;
          swift_bridgeObjectRelease();
          if (v55 >= 0.9)
          {
            sub_1A6892000();
            sub_1A6891850();

            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v38);
            uint64_t v25 = (void *)v231;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v41, 1, v38) != 1)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v40, v41, v38);
              swift_task_dealloc();
              uint64_t v112 = sub_1A68918D0();
              uint64_t v238 = *(void *)(v112 - 8);
              uint64_t v113 = swift_task_alloc();
              uint64_t v114 = sub_1A6891A20();
              uint64_t v115 = *(void *)(v114 - 8);
              uint64_t v116 = swift_task_alloc();
              sub_1A6891A30();
              uint64_t v1 = (uint64_t *)swift_task_alloc();
              sub_1A68919F0();
              (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v116, v114);
              (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
              if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v238 + 48))(v1, 1, v112) == 1)
              {
                sub_1A6750210((uint64_t)v1, &qword_1EB67A210);
                swift_task_dealloc();
                swift_task_dealloc();
              }
              else
              {
                sub_1A6750210(v200, &qword_1EB67A210);
                v181 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v238 + 32);
                v181(v113, v1, v112);
                swift_task_dealloc();
                swift_task_dealloc();
                v181(v200, (uint64_t *)v113, v112);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v238 + 56))(v200, 0, 1, v112);
              }
              uint64_t v25 = (void *)v231;
              uint64_t v2 = v202;
              uint64_t v4 = v203;
              goto LABEL_38;
            }
LABEL_37:
            sub_1A6750210(v41, &qword_1EB67A238);
            uint64_t v4 = v203;
LABEL_38:
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v19 = v200;
            uint64_t v11 = v219;
            goto LABEL_39;
          }

          uint64_t v25 = (void *)v231;
        }
LABEL_36:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v41, 1, 1, v38);
        goto LABEL_37;
      }
    }
    else
    {
LABEL_174:
      __break(1u);
    }
    __break(1u);
    goto LABEL_176;
  }
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  sub_1A6741AD0(&qword_1E96C3318);
  sub_1A6892500();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t TTSSegmentGenerator.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTSSegmentGenerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t TTSSegmentGenerator.utteranceStream(string:voice:resolver:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a4;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  v32[1] = a5;
  uint64_t v6 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C3330);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A6741AD0(&qword_1E96C3338);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v32 - v18;
  long long v20 = a3[5];
  long long v41 = a3[4];
  v42[0] = v20;
  *(void *)((char *)v42 + 13) = *(void *)((char *)a3 + 93);
  long long v21 = a3[1];
  long long v37 = *a3;
  long long v38 = v21;
  long long v22 = a3[3];
  long long v39 = a3[2];
  long long v40 = v22;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBD028], v9);
  sub_1A68924B0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v23 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v25 = swift_allocObject();
  long long v26 = v39;
  *(_OWORD *)(v25 + 104) = v40;
  long long v27 = v42[0];
  *(_OWORD *)(v25 + 120) = v41;
  *(_OWORD *)(v25 + 136) = v27;
  long long v28 = v38;
  *(_OWORD *)(v25 + 56) = v37;
  *(_OWORD *)(v25 + 72) = v28;
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  uint64_t v29 = v34;
  uint64_t v30 = v33;
  *(void *)(v25 + 32) = v35;
  *(void *)(v25 + 40) = v30;
  *(void *)(v25 + 48) = v29;
  *(void *)(v25 + 149) = *(void *)((char *)v42 + 13);
  *(_OWORD *)(v25 + 88) = v26;
  *(void *)(v25 + 160) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25 + v24, v17, v13);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A67AEA1C((uint64_t)&v37);
  swift_retain();
  sub_1A6787038((uint64_t)v8, (uint64_t)&unk_1E96C3348, v25);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

uint64_t sub_1A681CCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[65] = v15;
  v8[63] = a7;
  v8[64] = a8;
  v8[61] = a5;
  v8[62] = a6;
  v8[60] = a4;
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C33B0);
  v8[66] = v9;
  v8[67] = *(void *)(v9 - 8);
  v8[68] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for TTSSegmentGenerator.Segment();
  v8[69] = v10;
  v8[70] = *(void *)(v10 - 8);
  v8[71] = swift_task_alloc();
  sub_1A6741AD0(&qword_1E96C33B8);
  v8[72] = swift_task_alloc();
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C33C0);
  v8[73] = v11;
  v8[74] = *(void *)(v11 - 8);
  v8[75] = swift_task_alloc();
  uint64_t v12 = sub_1A6741AD0(&qword_1E96C33C8);
  v8[76] = v12;
  v8[77] = *(void *)(v12 - 8);
  v8[78] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A681CEEC, 0, 0);
}

uint64_t sub_1A681CEEC()
{
  uint64_t v1 = v0[75];
  uint64_t v18 = v0[74];
  uint64_t v16 = v0[62];
  uint64_t v17 = v0[73];
  uint64_t v2 = v0[60];
  uint64_t v15 = v0[61];
  uint64_t v3 = sub_1A6891A40();
  v0[79] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[80] = *(void *)(v4 + 64);
  uint64_t v5 = swift_task_alloc();
  CoreSynthesizer.Voice.primaryLocale.getter(v5);
  uint64_t v6 = sub_1A6891A20();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_task_alloc();
  sub_1A6891A30();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[81] = v9;
  v0[82] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v5, v3);
  v0[83] = *(void *)(*(void *)(sub_1A6741AD0(&qword_1EB67A210) - 8) + 64);
  uint64_t v10 = swift_task_alloc();
  sub_1A68919F0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 248))(v15, v16, v10);
  sub_1A6750210(v10, &qword_1EB67A210);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1A6892530();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v17);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[84] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1A681D1E0;
  uint64_t v12 = v0[76];
  uint64_t v13 = v0[72];
  return MEMORY[0x1F4187D58](v13, 0, 0, v12);
}

uint64_t sub_1A681D1E0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A681D2DC, 0, 0);
}

uint64_t sub_1A681D2DC()
{
  uint64_t v98 = v0;
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void *)(v0 + 552);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 560) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 616) + 8))(*(void *)(v0 + 624), *(void *)(v0 + 608));
    sub_1A6741AD0(&qword_1E96C3338);
    sub_1A6892500();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  uint64_t v5 = *(void *)(v0 + 568);
  sub_1A68215E0(v1, v5);
  uint64_t v6 = sub_1A68918D0();
  *(void *)(v0 + 680) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v0 + 688) = v7;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 696) = v8;
  uint64_t v9 = v5 + *(int *)(v2 + 24);
  uint64_t v10 = swift_task_alloc();
  sub_1A6818D30(v9, v10);
  uint64_t v91 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v91(v10, 1, v6) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 504);
    sub_1A6750210(v10, &qword_1EB67A210);
    swift_task_dealloc();
    swift_task_dealloc();
    int v84 = *(_DWORD *)(v11 + 96);
    unsigned int v82 = *(_DWORD *)(v11 + 88);
    int v79 = *(unsigned __int8 *)(v11 + 92);
    uint64_t v89 = *(void *)(v11 + 64);
    uint64_t v92 = *(void *)(v11 + 72);
    unsigned int v71 = *(unsigned __int8 *)(v11 + 56);
    uint64_t v73 = *(void *)(v11 + 48);
    unsigned int v69 = *(unsigned __int8 *)(v11 + 41);
    unsigned int v66 = *(unsigned __int8 *)(v11 + 40);
    uint64_t v86 = *(void **)(v11 + 80);
    uint64_t v87 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 16);
    uint64_t v70 = *(void *)(v11 + 24);
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t v67 = *(void *)v11;
    uint64_t v14 = v11;
    int v15 = *(unsigned __int8 *)(v11 + 100);
    sub_1A67AEA1C(v14);
    goto LABEL_34;
  }
  uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v80(v8, v10, v6);
  swift_task_dealloc();
  sub_1A6741AD0(&qword_1E96C1D58);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v88 = *(void *)(v7 + 72);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1A689DC40;
  uint64_t v85 = *(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16);
  v85(v17 + v16, v8, v6);
  uint64_t v18 = sub_1A6760D00(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v19 = Locale.LanguageCode.isMacroLanguage.getter();
  if ((v19 & 1) == 0)
  {
LABEL_32:
    uint64_t v42 = *(void *)(v0 + 504);
    long long v43 = *(_OWORD *)(v42 + 80);
    v96[4] = *(_OWORD *)(v42 + 64);
    v97[0] = v43;
    *(void *)((char *)v97 + 13) = *(void *)(v42 + 93);
    long long v44 = *(_OWORD *)(v42 + 16);
    v96[0] = *(_OWORD *)v42;
    v96[1] = v44;
    long long v45 = *(_OWORD *)(v42 + 48);
    v96[2] = *(_OWORD *)(v42 + 32);
    v96[3] = v45;
    uint64_t v46 = CoreSynthesizer.Voice.locales.getter();
    uint64_t v47 = sub_1A681984C(v46);
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_1A67B3034(v18, v47);
    swift_bridgeObjectRelease();
    unint64_t v49 = v48[2];
    swift_release();
    if (!v49)
    {
      uint64_t v63 = *(void *)(v0 + 512);
      uint64_t v64 = swift_task_alloc();
      *(void *)(v0 + 704) = v64;
      sub_1A6891890();
      sub_1A6891900();
      BOOL v90 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v63 + 304)
                                                     + **(int **)(*(void *)v63 + 304));
      uint64_t v65 = (void *)swift_task_alloc();
      *(void *)(v0 + 712) = v65;
      void *v65 = v0;
      v65[1] = sub_1A681DD38;
      return v90(v0 + 328, v64);
    }
    uint64_t v50 = *(void *)(v0 + 504);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
    int v84 = *(_DWORD *)(v50 + 96);
    int v15 = *(unsigned __int8 *)(v50 + 100);
    unsigned int v82 = *(_DWORD *)(v50 + 88);
    int v79 = *(unsigned __int8 *)(v50 + 92);
    uint64_t v89 = *(void *)(v50 + 64);
    uint64_t v92 = *(void *)(v50 + 72);
    unsigned int v71 = *(unsigned __int8 *)(v50 + 56);
    uint64_t v73 = *(void *)(v50 + 48);
    unsigned int v69 = *(unsigned __int8 *)(v50 + 41);
    unsigned int v66 = *(unsigned __int8 *)(v50 + 40);
    uint64_t v86 = *(void **)(v50 + 80);
    uint64_t v87 = *(void *)(v50 + 32);
    uint64_t v12 = *(void *)(v50 + 16);
    uint64_t v70 = *(void *)(v50 + 24);
    uint64_t v13 = *(void *)(v50 + 8);
    uint64_t v67 = *(void *)v50;
    sub_1A67AEA1C(v50);
    swift_task_dealloc();
LABEL_34:
    uint64_t v76 = *(void *)(v0 + 536);
    id v78 = *(uint64_t **)(v0 + 568);
    uint64_t v81 = *(void *)(v0 + 528);
    uint64_t v68 = *(void *)(v0 + 544);
    uint64_t v51 = *v78;
    uint64_t v52 = v78[1];
    uint64_t v53 = v78[2];
    uint64_t v54 = v78[3];
    swift_bridgeObjectRetain();
    uint64_t v55 = MEMORY[0x1AD0BF180](v51, v52, v53, v54);
    uint64_t v57 = v56;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 432) = v55;
    *(void *)(v0 + 440) = v57;
    *(_DWORD *)(v0 + 448) = 0;
    *(unsigned char *)(v0 + 452) = 1;
    *(_DWORD *)(v0 + 456) = 0;
    *(unsigned char *)(v0 + 460) = 1;
    *(_DWORD *)(v0 + 464) = 0;
    *(unsigned char *)(v0 + 468) = 1;
    *(unsigned char *)(v0 + 472) = 1;
    char v58 = 1;
    if (v79) {
      uint64_t v59 = 0x100000000;
    }
    else {
      uint64_t v59 = 0;
    }
    if (!v15) {
      char v58 = 0;
    }
    *(void *)(v0 + 224) = v67;
    *(void *)(v0 + 232) = v13;
    *(void *)(v0 + 240) = v12;
    *(void *)(v0 + 248) = v70;
    *(void *)(v0 + 256) = v87;
    *(void *)(v0 + 264) = v66 | ((unint64_t)v69 << 8);
    *(void *)(v0 + 272) = v73;
    *(void *)(v0 + 280) = v71;
    *(void *)(v0 + 288) = v89;
    *(void *)(v0 + 296) = v92;
    *(void *)(v0 + 304) = v86;
    *(void *)(v0 + 312) = v59 | v82;
    *(unsigned char *)(v0 + 324) = v58;
    *(_DWORD *)(v0 + 320) = v84;
    char v93 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v60 = v86;
    uint64_t v61 = sub_1A673D248();
    sub_1A673D250(&v94);
    char v95 = v94;
    sub_1A673D258(v96);
    CoreSynthesizer.Utterance.init(id:speech:voice:priority:behavior:isoPrioritizedBehavior:replacementOptions:)(0, 0, (long long *)(v0 + 432), v0 + 224, v61, &v95, &v93, (uint64_t *)v96, v0 + 16);
    sub_1A6741AD0(&qword_1E96C3338);
    sub_1A68924F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v68, v81);
    sub_1A6821644((uint64_t)v78);
    uint64_t v62 = (void *)swift_task_alloc();
    *(void *)(v0 + 672) = v62;
    *uint64_t v62 = v0;
    v62[1] = sub_1A681D1E0;
    uint64_t v28 = *(void *)(v0 + 608);
    uint64_t v25 = *(void *)(v0 + 576);
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    return MEMORY[0x1F4187D58](v25, v26, v27, v28);
  }
  uint64_t v20 = v7;
  uint64_t v74 = v8;
  uint64_t v21 = Locale.LanguageCode.childLanguages.getter(v19);
  uint64_t v75 = v21 + 56;
  uint64_t v83 = v21;
  uint64_t v22 = -1 << *(unsigned char *)(v21 + 32);
  if (-v22 < 64) {
    uint64_t v23 = ~(-1 << -(char)v22);
  }
  else {
    uint64_t v23 = -1;
  }
  unint64_t v24 = v23 & *(void *)(v21 + 56);
  uint64_t v25 = swift_task_alloc();
  uint64_t v29 = v25;
  int64_t v30 = 0;
  int64_t v77 = (unint64_t)(63 - v22) >> 6;
  uint64_t v31 = v20;
  uint64_t v32 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v72 = v31;
  uint64_t v33 = (void (**)(uint64_t, uint64_t))(v31 + 8);
  if (!v24) {
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v34 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  for (unint64_t i = v34 | (v30 << 6); ; unint64_t i = __clz(__rbit64(v37)) + (v30 << 6))
  {
    v85(v29, *(void *)(v83 + 48) + i * v88, v6);
    (*v32)(v29, 0, 1, v6);
    if (v91(v29, 1, v6) == 1) {
      goto LABEL_31;
    }
    uint64_t v39 = swift_task_alloc();
    uint64_t v40 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v39, v29, v6);
    uint64_t v41 = Locale.LanguageCode.childLanguages.getter(v40);
    uint64_t v18 = sub_1A681E268(v41, v18);
    (*v33)(v39, v6);
    uint64_t v25 = swift_task_dealloc();
    if (v24) {
      goto LABEL_12;
    }
LABEL_13:
    int64_t v36 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v36 >= v77) {
      goto LABEL_30;
    }
    unint64_t v37 = *(void *)(v75 + 8 * v36);
    ++v30;
    if (!v37)
    {
      int64_t v30 = v36 + 1;
      if (v36 + 1 >= v77) {
        goto LABEL_30;
      }
      unint64_t v37 = *(void *)(v75 + 8 * v30);
      if (!v37)
      {
        int64_t v30 = v36 + 2;
        if (v36 + 2 >= v77) {
          goto LABEL_30;
        }
        unint64_t v37 = *(void *)(v75 + 8 * v30);
        if (!v37) {
          break;
        }
      }
    }
LABEL_26:
    unint64_t v24 = (v37 - 1) & v37;
  }
  int64_t v38 = v36 + 3;
  if (v38 >= v77)
  {
LABEL_30:
    (*v32)(v29, 1, 1, v6);
LABEL_31:
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = v72;
    uint64_t v8 = v74;
    goto LABEL_32;
  }
  unint64_t v37 = *(void *)(v75 + 8 * v38);
  if (v37)
  {
    int64_t v30 = v38;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v30 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v30 >= v77) {
      goto LABEL_30;
    }
    unint64_t v37 = *(void *)(v75 + 8 * v30);
    ++v38;
    if (v37) {
      goto LABEL_26;
    }
  }
LABEL_46:
  __break(1u);
  return MEMORY[0x1F4187D58](v25, v26, v27, v28);
}

uint64_t sub_1A681DD38()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 704);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 648);
  uint64_t v3 = *(void *)(*(void *)v0 + 632);
  swift_task_dealloc();
  v2(v1, v3);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A681DEA0, 0, 0);
}

uint64_t sub_1A681DEA0()
{
  uint64_t v41 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 688) + 8))(*(void *)(v0 + 696), *(void *)(v0 + 680));
  uint64_t v1 = *(void *)(v0 + 336);
  if (v1)
  {
    int v32 = *(_DWORD *)(v0 + 424);
    uint64_t v36 = *(void *)(v0 + 400);
    uint64_t v33 = *(void **)(v0 + 408);
    uint64_t v35 = *(void *)(v0 + 392);
    uint64_t v29 = *(void *)(v0 + 376);
    uint64_t v30 = *(void *)(v0 + 360);
    uint64_t v2 = *(void *)(v0 + 344);
    uint64_t v27 = *(void *)(v0 + 352);
    unint64_t v23 = *(void *)(v0 + 416);
    uint64_t v24 = *(void *)(v0 + 328);
    unint64_t v3 = *(void *)(v0 + 368);
    uint64_t v25 = HIDWORD(v23) & 1;
    int v26 = *(unsigned char *)(v0 + 428) & 1;
    unsigned __int8 v20 = *(unsigned char *)(v0 + 384);
    unint64_t v21 = v3 >> 8;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 504);
    int v32 = *(_DWORD *)(v4 + 96);
    int v26 = *(unsigned __int8 *)(v4 + 100);
    LODWORD(v23) = *(_DWORD *)(v4 + 88);
    LODWORD(v25) = *(unsigned __int8 *)(v4 + 92);
    uint64_t v36 = *(void *)(v4 + 72);
    uint64_t v33 = *(void **)(v4 + 80);
    uint64_t v35 = *(void *)(v4 + 64);
    unsigned __int8 v20 = *(unsigned char *)(v4 + 56);
    LOBYTE(v21) = *(unsigned char *)(v4 + 41);
    LOBYTE(v3) = *(unsigned char *)(v4 + 40);
    uint64_t v29 = *(void *)(v4 + 48);
    uint64_t v30 = *(void *)(v4 + 32);
    uint64_t v2 = *(void *)(v4 + 16);
    uint64_t v27 = *(void *)(v4 + 24);
    uint64_t v1 = *(void *)(v4 + 8);
    uint64_t v24 = *(void *)v4;
    sub_1A67AEA1C(v4);
  }
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t **)(v0 + 568);
  uint64_t v28 = *(void *)(v0 + 536);
  uint64_t v31 = *(void *)(v0 + 528);
  uint64_t v22 = *(void *)(v0 + 544);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = v5[2];
  uint64_t v9 = v5[3];
  swift_bridgeObjectRetain();
  uint64_t v10 = MEMORY[0x1AD0BF180](v6, v7, v8, v9);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 432) = v10;
  *(void *)(v0 + 440) = v12;
  *(_DWORD *)(v0 + 448) = 0;
  *(unsigned char *)(v0 + 452) = 1;
  *(_DWORD *)(v0 + 456) = 0;
  *(unsigned char *)(v0 + 460) = 1;
  *(_DWORD *)(v0 + 464) = 0;
  *(unsigned char *)(v0 + 468) = 1;
  *(unsigned char *)(v0 + 472) = 1;
  char v13 = 1;
  if (v25) {
    uint64_t v14 = 0x100000000;
  }
  else {
    uint64_t v14 = 0;
  }
  if (!v26) {
    char v13 = 0;
  }
  *(void *)(v0 + 224) = v24;
  *(void *)(v0 + 232) = v1;
  *(void *)(v0 + 240) = v2;
  *(void *)(v0 + 248) = v27;
  *(void *)(v0 + 256) = v30;
  *(void *)(v0 + 264) = v3 | ((unint64_t)v21 << 8);
  *(void *)(v0 + 272) = v29;
  *(void *)(v0 + 280) = v20;
  *(void *)(v0 + 288) = v35;
  *(void *)(v0 + 296) = v36;
  *(void *)(v0 + 304) = v33;
  *(void *)(v0 + 312) = v14 | v23;
  *(unsigned char *)(v0 + 324) = v13;
  *(_DWORD *)(v0 + 320) = v32;
  char v37 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v34 = v33;
  uint64_t v15 = sub_1A673D248();
  sub_1A673D250(&v38);
  char v39 = v38;
  sub_1A673D258(&v40);
  CoreSynthesizer.Utterance.init(id:speech:voice:priority:behavior:isoPrioritizedBehavior:replacementOptions:)(0, 0, (long long *)(v0 + 432), v0 + 224, v15, &v39, &v37, &v40, v0 + 16);
  sub_1A6741AD0(&qword_1E96C3338);
  sub_1A68924F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v22, v31);
  sub_1A6821644((uint64_t)v5);
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 672) = v16;
  *unint64_t v16 = v0;
  v16[1] = sub_1A681D1E0;
  uint64_t v17 = *(void *)(v0 + 608);
  uint64_t v18 = *(void *)(v0 + 576);
  return MEMORY[0x1F4187D58](v18, 0, 0, v17);
}

uint64_t sub_1A681E268(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = sub_1A6741AD0(&qword_1EB67A210);
  v26[1] = v26;
  uint64_t result = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v29 + 48);
    uint64_t v17 = sub_1A68918D0();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v9, v16 + *(void *)(v18 + 72) * i, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17);
    if (v19 == 1) {
      goto LABEL_25;
    }
    uint64_t v20 = MEMORY[0x1F4188790](v19);
    uint64_t v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v20);
    uint64_t v24 = (char *)v26 - v23;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v26 - v23, v9, v17);
    sub_1A675E668(v22, v24);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v28) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v28)
  {
LABEL_24:
    uint64_t v25 = sub_1A68918D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
LABEL_25:
    swift_release();
    return v30;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A681E604()
{
  uint64_t v1 = v0;
  if (sub_1A6891890() == 26746 && v2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1A6893120();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_1A68918D0();
  unint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = v5[8];
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (void (*)(char *, uint64_t, uint64_t))v5[2];
  v8((char *)v30 - v7, v0, v4);
  uint64_t v31 = v0;
  if (v3)
  {
    char v9 = 1;
  }
  else
  {
    if (sub_1A6891890() == 6649209 && v10 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      char v9 = 1;
    }
    else
    {
      char v9 = sub_1A6893120();
      swift_bridgeObjectRelease();
    }
    uint64_t v1 = v31;
  }
  uint64_t v12 = (uint64_t (*)(char *, uint64_t))v5[1];
  uint64_t v13 = v12((char *)v30 - v7, v4);
  v30[1] = v30;
  MEMORY[0x1F4188790](v13);
  v8((char *)v30 - v7, v1, v4);
  if ((v9 & 1) == 0)
  {
    if (sub_1A6891890() != 7697783 || v14 != 0xE300000000000000)
    {
      char v16 = sub_1A6893120();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  char v16 = 1;
LABEL_22:
  uint64_t v17 = v12((char *)v30 - v7, v4);
  MEMORY[0x1F4188790](v17);
  v8((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v4);
  if (v16)
  {
LABEL_30:
    v12((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    goto LABEL_31;
  }
  if (sub_1A6891890() == 7236963 && v18 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  char v20 = sub_1A6893120();
  swift_bridgeObjectRelease();
  v12((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  if (v20)
  {
LABEL_31:
    sub_1A6741AD0(&qword_1E96C3350);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A689DE50;
    uint64_t v25 = (void *)*MEMORY[0x1E4F38760];
    *(void *)(inited + 32) = *MEMORY[0x1E4F38760];
    int v26 = (void *)*MEMORY[0x1E4F38788];
    *(void *)(inited + 40) = *MEMORY[0x1E4F38788];
    id v27 = v25;
    id v28 = v26;
    uint64_t v23 = sub_1A6820218(inited);
    swift_setDeallocating();
    type metadata accessor for NLLanguage(0);
    goto LABEL_32;
  }
  sub_1A6741AD0(&qword_1E96C3350);
  uint64_t v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1A689DC40;
  sub_1A6891890();
  uint64_t v22 = sub_1A6891FD0();
  swift_bridgeObjectRelease();
  *(void *)(v21 + 32) = v22;
  uint64_t v23 = sub_1A6820218(v21);
  swift_setDeallocating();
  type metadata accessor for NLLanguage(0);
LABEL_32:
  swift_arrayDestroy();
  return v23;
}

void sub_1A681EA18(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v7;
    if (!v13)
    {
      int64_t v7 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v7);
      if (!v13)
      {
        int64_t v7 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v7);
        if (!v13)
        {
          int64_t v7 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v7);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v9 = __clz(__rbit64(v13)) + (v7 << 6);
LABEL_5:
    id v10 = *(id *)(*(void *)(a1 + 48) + 8 * v9);
    sub_1A681F1E8(&v15, v10);
    unint64_t v11 = v15;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v7 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v7);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1A681EB9C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_1A681EBC0()
{
  uint64_t v1 = sub_1A6741AD0(&qword_1E96C3318);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_1A6741AD0(&qword_1EB67A210) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = sub_1A68918D0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, ((v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | v7 | 7);
}

uint64_t sub_1A681ED98()
{
  uint64_t v2 = *(void *)(sub_1A6741AD0(&qword_1E96C3318) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_1A6741AD0(&qword_1EB67A210) - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v9 = v0 + v3;
  uint64_t v10 = v0 + v6;
  uint64_t v11 = *(void *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  int64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *int64_t v12 = v1;
  v12[1] = sub_1A6750954;
  return sub_1A681A6D4((uint64_t)v12, v13, v14, v7, v8, v9, v10, v11);
}

uint64_t sub_1A681EF24()
{
  uint64_t v1 = sub_1A6741AD0(&qword_1E96C3338);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 168) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A681F03C()
{
  sub_1A6741AD0(&qword_1E96C3338);
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[20];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A6750954;
  return sub_1A681CCC8((uint64_t)v6, v7, v8, v2, v3, v4, (uint64_t)(v0 + 7), v5);
}

uint64_t sub_1A681F144(uint64_t a1, uint64_t a2)
{
  return sub_1A67968CC(a1, a2, MEMORY[0x1F418C118]);
}

uint64_t sub_1A681F150(uint64_t a1)
{
  uint64_t v2 = sub_1A6821568(&qword_1E96C3398);
  uint64_t v3 = sub_1A6821568(&qword_1E96C33A0);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A681F1E8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1A6892000();
  sub_1A6893200();
  swift_bridgeObjectRetain();
  sub_1A68920F0();
  uint64_t v7 = sub_1A6893250();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_1A681F728((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_1A6892000();
  uint64_t v12 = v11;
  if (v10 == sub_1A6892000() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_1A6893120();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_1A6892000();
        uint64_t v19 = v18;
        if (v17 == sub_1A6892000() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  int v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_1A681F414()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C33A8);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    id v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_1A6892000();
      sub_1A6893200();
      sub_1A68920F0();
      uint64_t v18 = sub_1A6893250();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A681F728(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1A681F414();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1A681F958();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1A681FB04();
  }
  uint64_t v9 = *v3;
  sub_1A6892000();
  sub_1A6893200();
  sub_1A68920F0();
  uint64_t v10 = sub_1A6893250();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_1A6892000();
  uint64_t v14 = v13;
  if (v12 == sub_1A6892000() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_1A6893120();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_1A6892000();
      uint64_t v21 = v20;
      if (v19 == sub_1A6892000() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_1A6893120();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for NLLanguage(0);
  uint64_t result = sub_1A6893140();
  __break(1u);
  return result;
}

id sub_1A681F958()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C33A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892BF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    char v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A681FB04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C33A8);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    char v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_1A6892000();
    sub_1A6893200();
    id v18 = v17;
    sub_1A68920F0();
    uint64_t v19 = sub_1A6893250();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A681FDE4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) != a2) {
LABEL_8:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A681FE34(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  int64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1A681FEE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A6741AD0(&qword_1E96C3350);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  unsigned int v6 = sub_1A681FFCC(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A674CF48();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1A681FFCC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *unint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A68201C8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1A6820218(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1A6741AD0(&qword_1E96C33A8);
    uint64_t v3 = sub_1A6892C10();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_1A6892000();
      sub_1A6893200();
      id v7 = v6;
      sub_1A68920F0();
      uint64_t v8 = sub_1A6893250();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1A6892000();
        uint64_t v17 = v16;
        if (v15 == sub_1A6892000() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1A6893120();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1A6892000();
          uint64_t v24 = v23;
          if (v22 == sub_1A6892000() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1A6893120();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void type metadata accessor for NLLanguage(uint64_t a1)
{
}

unint64_t sub_1A6820460()
{
  unint64_t result = qword_1E96C3358;
  if (!qword_1E96C3358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3358);
  }
  return result;
}

uint64_t type metadata accessor for TTSSegmentGenerator()
{
  return self;
}

uint64_t method lookup function for TTSSegmentGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSSegmentGenerator);
}

uint64_t dispatch thunk of TTSSegmentGenerator.preferredLocales.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of TTSSegmentGenerator.preferredLocales.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of TTSSegmentGenerator.preferredLocales.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of TTSSegmentGenerator.backupSwitchThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of TTSSegmentGenerator.backupSwitchThreshold.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of TTSSegmentGenerator.backupSwitchThreshold.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of TTSSegmentGenerator.__allocating_init(mode:tokenUnit:locales:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 192) + **(int **)(v3 + 192));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1A677B9E8;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of TTSSegmentGenerator.segmentStream(string:baseLanguage:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

void *initializeBufferWithCopyOfBuffer for TTSSegmentGenerator.Segment(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    uint64_t v8 = *(int *)(a3 + 24);
    unint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A68918D0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1A6741AD0(&qword_1EB67A210);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    if (*(uint64_t *)((char *)a2 + v16 + 24))
    {
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      unsigned __int8 v21 = *(unsigned char *)(v18 + 16);
      sub_1A67DB658(*(void *)v18, v20, v21);
      *(void *)uint64_t v17 = v19;
      *((void *)v17 + 1) = v20;
      v17[16] = v21;
      *((void *)v17 + 3) = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *(_OWORD *)(v18 + 16);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
    }
  }
  return v4;
}

uint64_t destroy for TTSSegmentGenerator.Segment(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A68918D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  if (*(void *)(v8 + 24))
  {
    sub_1A67DB4D4(*(void *)v8, *(void *)(v8 + 8), *(unsigned char *)(v8 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TTSSegmentGenerator.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1A68918D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1A6741AD0(&qword_1EB67A210);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  if (*(void *)(a2 + v14 + 24))
  {
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    unsigned __int8 v19 = *(unsigned char *)(v16 + 16);
    sub_1A67DB658(*(void *)v16, v18, v19);
    *(void *)uint64_t v15 = v17;
    *(void *)(v15 + 8) = v18;
    *(unsigned char *)(v15 + 16) = v19;
    *(void *)(v15 + 24) = *(void *)(v16 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v20;
  }
  return a1;
}

void *assignWithCopy for TTSSegmentGenerator.Segment(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A68918D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_1A6741AD0(&qword_1EB67A210);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a1 + v15 + 24);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
  if (v18)
  {
    if (v19)
    {
      uint64_t v20 = *(void *)v17;
      uint64_t v21 = *((void *)v17 + 1);
      unsigned __int8 v22 = v17[16];
      sub_1A67DB658(*(void *)v17, v21, v22);
      uint64_t v23 = *(void *)v16;
      uint64_t v24 = *(void *)(v16 + 8);
      *(void *)uint64_t v16 = v20;
      *(void *)(v16 + 8) = v21;
      unsigned __int8 v25 = *(unsigned char *)(v16 + 16);
      *(unsigned char *)(v16 + 16) = v22;
      sub_1A67DB4D4(v23, v24, v25);
      *(void *)(v16 + 24) = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A6820DD0(v16);
      long long v29 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v29;
    }
  }
  else if (v19)
  {
    uint64_t v26 = *(void *)v17;
    uint64_t v27 = *((void *)v17 + 1);
    unsigned __int8 v28 = v17[16];
    sub_1A67DB658(*(void *)v17, v27, v28);
    *(void *)uint64_t v16 = v26;
    *(void *)(v16 + 8) = v27;
    *(unsigned char *)(v16 + 16) = v28;
    *(void *)(v16 + 24) = *((void *)v17 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v30;
  }
  return a1;
}

uint64_t sub_1A6820DD0(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for TTSSegmentGenerator.Segment(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A68918D0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1A6741AD0(&qword_1EB67A210);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t assignWithTake for TTSSegmentGenerator.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1A68918D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1A6741AD0(&qword_1EB67A210);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (!*(void *)(a1 + v16 + 24))
  {
LABEL_11:
    long long v23 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v23;
    return a1;
  }
  if (!*(void *)(v18 + 24))
  {
    sub_1A6820DD0(v17);
    goto LABEL_11;
  }
  char v19 = *(unsigned char *)(v18 + 16);
  uint64_t v20 = *(void *)v17;
  uint64_t v21 = *(void *)(v17 + 8);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  unsigned __int8 v22 = *(unsigned char *)(v17 + 16);
  *(unsigned char *)(v17 + 16) = v19;
  sub_1A67DB4D4(v20, v21, v22);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTSSegmentGenerator.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A6821174);
}

uint64_t sub_1A6821174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A6741AD0(&qword_1EB67A210);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TTSSegmentGenerator.Segment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A682123C);
}

uint64_t sub_1A682123C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A6741AD0(&qword_1EB67A210);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A68212E8()
{
  sub_1A6821390();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A6821390()
{
  if (!qword_1E96C3368)
  {
    sub_1A68918D0();
    unint64_t v0 = sub_1A6892A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E96C3368);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TTSSegmentGenerator.SwitchMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A68214B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSegmentGenerator.SwitchMode()
{
  return &type metadata for TTSSegmentGenerator.SwitchMode;
}

void type metadata accessor for NLTokenUnit(uint64_t a1)
{
}

uint64_t sub_1A6821500()
{
  return sub_1A6821568(&qword_1E96C3380);
}

uint64_t sub_1A6821534()
{
  return sub_1A6821568(&qword_1E96C3388);
}

uint64_t sub_1A6821568(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NLLanguage(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A68215AC()
{
  return sub_1A6821568(&qword_1E96C3390);
}

uint64_t sub_1A68215E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTSSegmentGenerator.Segment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6821644(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTSSegmentGenerator.Segment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A68216A0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t TTSMarkup.Sub.init(_:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  v28[5] = MEMORY[0x1E4FBC860];
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8))();
  if (!*(void *)(v5 + 16) || (unint64_t v6 = sub_1A673F7AC(0x7361696C61, 0xE500000000000000), (v7 & 1) == 0))
  {

    uint64_t result = swift_bridgeObjectRelease();
    a2[2] = 0u;
    a2[3] = 0u;
    *a2 = 0u;
    a2[1] = 0u;
    return result;
  }
  uint64_t v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRelease();
  v27[0] = v10;
  v27[1] = v9;
  unint64_t v12 = (*(uint64_t (**)(uint64_t))((*v4 & *a1) + 0x100))(v11);
  unint64_t v13 = v12;
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_5;
    }
LABEL_20:
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
    swift_bridgeObjectRelease_n();
    uint64_t v25 = sub_1A6741AD0(&qword_1E96C1D60);
    uint64_t v26 = &protocol witness table for <A> [A];

    *(void *)&long long v24 = v17;
    sub_1A673E770(&v24, (uint64_t)v28);
    sub_1A6821CA0((uint64_t)v27, (uint64_t)a2);
    return sub_1A6821CB0((uint64_t)v27);
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A6892EB0();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_5:
  if (v14 >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v18 = (id)MEMORY[0x1AD0BFD30](v16, v13);
      }
      else {
        id v18 = *(id *)(v13 + 8 * v16 + 32);
      }
      char v19 = v18;
      sub_1A677BA04((uint64_t)&v22);

      if (v23)
      {
        sub_1A673E770(&v22, (uint64_t)&v24);
        sub_1A673E770(&v24, (uint64_t)&v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_1A676207C(0, v17[2] + 1, 1, v17);
        }
        unint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        if (v21 >= v20 >> 1) {
          uint64_t v17 = sub_1A676207C((void *)(v20 > 1), v21 + 1, 1, v17);
        }
        v17[2] = v21 + 1;
        sub_1A673E770(&v22, (uint64_t)&v17[5 * v21 + 4]);
      }
      else
      {
        sub_1A6761FF4((uint64_t)&v22);
      }
      ++v16;
    }
    while (v14 != v16);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void static TTSMarkup.Sub.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t TTSMarkup.Sub._content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 16, a1);
}

uint64_t TTSMarkup.Sub._content.setter(long long *a1)
{
  uint64_t v3 = v1 + 16;
  sub_1A6741A24(v3);

  return sub_1A673E770(a1, v3);
}

uint64_t (*TTSMarkup.Sub._content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Sub.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.Sub.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*TTSMarkup.Sub.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Sub.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 16, a1);
}

uint64_t sub_1A6821A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[7] = MEMORY[0x1E4FBC860];
  a4[1] = a2;
  return a3();
}

unint64_t TTSMarkup.Sub.attributes.getter()
{
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 0x7361696C61;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v2 = v0[1];
  *(void *)(inited + 48) = *v0;
  *(void *)(inited + 56) = v2;
  swift_bridgeObjectRetain();
  return sub_1A6742BA0(inited);
}

uint64_t TTSMarkup.Sub.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[3] = &type metadata for TTSMarkup.Sub;
  v7[4] = &protocol witness table for TTSMarkup.Sub;
  v7[0] = swift_allocObject();
  sub_1A6821CA0(v3, v7[0] + 16);
  TTSMarkupVisitor.visit(_:)(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

void sub_1A6821BBC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

unint64_t sub_1A6821BC8()
{
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 0x7361696C61;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v2 = v0[1];
  *(void *)(inited + 48) = *v0;
  *(void *)(inited + 56) = v2;
  swift_bridgeObjectRetain();
  return sub_1A6742BA0(inited);
}

uint64_t sub_1A6821C38@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 16, a1);
}

uint64_t sub_1A6821C44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A6821C4C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_1A6821C78())(void, void)
{
  return nullsub_19;
}

uint64_t sub_1A6821CA0(uint64_t a1, uint64_t a2)
{
  return _s3SubVwcp(a2, a1);
}

uint64_t sub_1A6821CB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A6821CD8()
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 32);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t _s3SubVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(a1 + 16);

  return swift_bridgeObjectRelease();
}

uint64_t _s3SubVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

void *_s3SubVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1A67588AC(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s3SubVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  sub_1A6741A24(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTSMarkup.Sub()
{
  return &type metadata for TTSMarkup.Sub;
}

uint64_t CoreSynthesizer.UtteranceRunner.executor.getter()
{
  return swift_retain();
}

uint64_t sub_1A6821EE8()
{
  return CoreSynthesizer.Utterance.description.getter();
}

uint64_t sub_1A6821F0C()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 24)) + 0x1E0))();
}

uint64_t CoreSynthesizer.UtteranceRunner.rootUtterance.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6798284(v1 + 32, a1);
}

uint64_t CoreSynthesizer.UtteranceRunner.speechTree.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 240, a1);
}

uint64_t sub_1A6821F80()
{
  return *(void *)(v0 + 224);
}

uint64_t sub_1A6821F88()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1A6821FB8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

void sub_1A6821FC4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 49);
}

uint64_t _s15UtteranceRunnerC14SynthesisStateVMa(uint64_t a1)
{
  return sub_1A675A684(a1, qword_1E96D1020);
}

uint64_t sub_1A6821FF0(uint64_t a1)
{
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C23B0);
  MEMORY[0x1F4188790](v3 - 8);
  long long v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A6741AD0((uint64_t *)&unk_1E96C33D8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  sub_1A675B090(v1 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, (uint64_t)v5, &qword_1E96C23B0);
  uint64_t v13 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v13) == 1)
  {
    sub_1A6750210((uint64_t)v5, &qword_1E96C23B0);
    uint64_t v15 = sub_1A6741AD0(&qword_1E96C23E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  else
  {
    v18[0] = v9;
    v18[1] = v10;
    v18[2] = v11;
    v18[3] = v12;
    sub_1A6799AA0(v9, v10, v11);
    sub_1A6892650();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
    uint64_t v16 = sub_1A6741AD0(&qword_1E96C23E8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  }
  return sub_1A6750210((uint64_t)v8, (uint64_t *)&unk_1E96C33D8);
}

uint64_t sub_1A6822234()
{
  *(void *)(v1 + 16) = v0;
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v3 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A68222EC, v3, v2);
}

uint64_t sub_1A68222EC()
{
  uint64_t v1 = v0[2];
  switch(*(unsigned char *)(v1 + 281))
  {
    case 1:
      uint64_t result = sub_1A6892E60();
      break;
    case 2:
      *(unsigned char *)(v1 + 281) = 1;
      uint64_t v4 = (void *)swift_task_alloc();
      v0[4] = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1A68225B4;
      uint64_t result = sub_1A682A308();
      break;
    case 3:
      uint64_t v5 = (uint64_t (*)(void))v0[1];
      uint64_t result = v5();
      break;
    default:
      *(unsigned char *)(v1 + 281) = 1;
      uint64_t v2 = (void *)swift_task_alloc();
      v0[3] = v2;
      *uint64_t v2 = v0;
      v2[1] = sub_1A68224B8;
      uint64_t result = sub_1A6822DC4();
      break;
  }
  return result;
}

uint64_t sub_1A68224B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A68225B4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t type metadata accessor for CoreSynthesizer.UtteranceRunner(uint64_t a1)
{
  return sub_1A675A684(a1, (uint64_t *)&unk_1E96D1010);
}

uint64_t sub_1A68226D0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v5 = sub_1A68923E0();
  v3[5] = v5;
  v3[6] = v4;
  return MEMORY[0x1F4188298](sub_1A682278C, v5, v4);
}

uint64_t sub_1A682278C()
{
  unint64_t v20 = v0;
  if (v0[2])
  {
    unint64_t v1 = v0[3];
    uint64_t v2 = v0[4];
    uint64_t v14 = v0[2];
    long long v15 = v1;
    *(void *)&long long v16 = 0;
    uint64_t v3 = *(void (**)(uint64_t *))(*(void *)v2 + 256);
    swift_unknownObjectRetain();
    v3(&v14);
    swift_unknownObjectRelease();
  }
  uint64_t v4 = v0[4];
  switch(*(unsigned char *)(v4 + 281))
  {
    case 1:
      uint64_t v7 = *(void **)(v4 + 24);
      uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
      uint64_t v9 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x1B0))();
      objc_msgSend(v9, sel_stop);

      uint64_t v10 = (*(uint64_t (**)(void))((*v8 & *v7) + 0x210))();
      v0[7] = v10;
      uint64_t v11 = *(void *)v10;
      v0[8] = *(void *)(*(void *)v10 + 360);
      v0[9] = (v11 + 360) & 0xFFFFFFFFFFFFLL | 0x8DBC000000000000;
      type metadata accessor for TTSAURenderer();
      sub_1A682ADF4(&qword_1E96C1E88, (void (*)(uint64_t))type metadata accessor for TTSAURenderer);
      uint64_t v13 = sub_1A68923E0();
      uint64_t result = MEMORY[0x1F4188298](sub_1A6822A24, v13, v12);
      break;
    case 3:
      goto LABEL_5;
    default:
      *(unsigned char *)(v4 + 281) = 3;
      uint64_t v14 = 3;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      uint64_t v18 = 0;
      char v19 = 9;
      TTSSpeechEvent.emit(forJob:)(*(Swift::String *)(v4 + 32));
      sub_1A682AA2C(0);
LABEL_5:
      uint64_t v5 = (uint64_t (*)(void))v0[1];
      uint64_t result = v5();
      break;
  }
  return result;
}

uint64_t sub_1A6822A24()
{
  (*(void (**)(void))(v0 + 64))();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return MEMORY[0x1F4188298](sub_1A6822A94, v1, v2);
}

uint64_t sub_1A6822A94()
{
  uint64_t v1 = *(void *)(v0 + 32);
  *(unsigned char *)(v1 + 281) = 3;
  TTSSpeechEvent.emit(forJob:)(*(Swift::String *)(v1 + 32));
  sub_1A682AA2C(0);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A6822B38(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v5 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A6822BF4, v5, v4);
}

uint64_t sub_1A6822BF4()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[4];
  if (*(unsigned char *)(v1 + 281) == 1)
  {
    uint64_t v2 = v0[2];
    *(void *)uint64_t v10 = 1;
    memset(&v10[8], 0, 32);
    long long v11 = 0u;
    uint64_t v12 = 0;
    LOBYTE(v13) = 9;
    TTSSpeechEvent.emit(forJob:)(*(Swift::String *)(v1 + 32));
    uint64_t v4 = v0[4];
    if (v2)
    {
      *(_OWORD *)uint64_t v10 = *((_OWORD *)v0 + 1);
      *(_OWORD *)&v10[16] = 0uLL;
      uint64_t v5 = *(void (**)(unsigned char *))(*(void *)v4 + 256);
      swift_unknownObjectRetain();
      v5(v10);
      uint64_t v3 = swift_unknownObjectRelease();
    }
    uint64_t v6 = (void **)v0[4];
    *(unsigned char *)(v1 + 281) = 2;
    uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v6[3]) + 0x1B0))(v3);
    objc_msgSend(v7, sel_stop, *(_OWORD *)v10, *(_OWORD *)&v10[16], *(void *)&v10[32], v11, v12, v13);

    *(_OWORD *)uint64_t v10 = xmmword_1A689FD40;
    *(_OWORD *)&v10[16] = xmmword_1A689F420;
    ((void (*)(unsigned char *))(*v6)[32])(v10);
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A6822DC4()
{
  v1[3] = v0;
  v1[4] = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_1A6891CE0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v4 = sub_1A68923E0();
  v1[9] = v4;
  v1[10] = v3;
  return MEMORY[0x1F4188298](sub_1A6822F08, v4, v3);
}

uint64_t sub_1A6822F08()
{
  uint64_t v1 = *(void **)(v0[3] + 24);
  v0[11] = v1;
  uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x210))();
  v0[12] = v2;
  uint64_t v3 = *(void *)v2;
  v0[13] = *(void *)(*(void *)v2 + 360);
  v0[14] = (v3 + 360) & 0xFFFFFFFFFFFFLL | 0x8DBC000000000000;
  type metadata accessor for TTSAURenderer();
  sub_1A682ADF4(&qword_1E96C1E88, (void (*)(uint64_t))type metadata accessor for TTSAURenderer);
  uint64_t v5 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A6823040, v5, v4);
}

uint64_t sub_1A6823040()
{
  (*(void (**)(void))(v0 + 104))();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return MEMORY[0x1F4188298](sub_1A68230B0, v1, v2);
}

uint64_t sub_1A68230B0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if ((*(unsigned char *)(v1 + 232) & 1) == 0)
  {
    CoreSynthesizer.Utterance.ssml.getter();
    TTSSpeechEvent.emit(forJob:)(*(Swift::String *)(v1 + 32));
    swift_bridgeObjectRelease();
    uint64_t v1 = *(void *)(v0 + 24);
  }
  uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 88)) + 0x150))();
  *(void *)(v0 + 120) = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 408) + **(int **)(*(void *)v1 + 408));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A6823250;
  return v5(v2);
}

uint64_t sub_1A6823250(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return MEMORY[0x1F4188298](sub_1A682339C, v4, v3);
}

uint64_t sub_1A682339C()
{
  id v34 = v0;
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1A6891CC0();
  os_log_type_t v6 = sub_1A6892840();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v29 = v0[7];
    uint64_t v30 = v0[6];
    uint64_t v31 = v0[8];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v32[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = type metadata accessor for SpeechSlicer.Slice(0);
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x1AD0BF3B0](v10, v9);
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v0[2] = sub_1A673F908(v11, v13, v32);
    sub_1A6892A50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A66D3000, v5, v6, "Speaking effective slices: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v8, -1, -1);
    MEMORY[0x1AD0C1C50](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    uint64_t v15 = v0[7];
    uint64_t v14 = v0[8];
    uint64_t v16 = v0[6];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  long long v17 = (unsigned __int8 *)v0[3];
  int v18 = v17[281];
  if (v18 == 2)
  {
    swift_bridgeObjectRelease();
    v17[281] = 0;
  }
  else
  {
    if (v18 == 1)
    {
      uint64_t v19 = v0[17];
      uint64_t v21 = v0[4];
      unint64_t v20 = (void *)v0[5];
      v32[0] = 0;
      v32[1] = 0;
      long long v33 = xmmword_1A689F420;
      (*(void (**)(uint64_t *))(*(void *)v17 + 256))(v32);
      long long v22 = (char *)v20 + *(int *)(v21 + 24);
      uint64_t v23 = type metadata accessor for SpeechSlicer.Slice(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
      uint64_t v24 = MEMORY[0x1E4FBC860];
      *unint64_t v20 = 0;
      v20[1] = v24;
      *(void *)((char *)v20 + *(int *)(v21 + 28)) = v19;
      uint64_t v25 = (void *)swift_task_alloc();
      v0[18] = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_1A6823748;
      uint64_t v26 = v0[5];
      return sub_1A68238F0(v26);
    }
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1A6823748()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x1F4188298](sub_1A6823868, v3, v2);
}

uint64_t sub_1A6823868()
{
  sub_1A68310B4(*(void *)(v0 + 40), _s15UtteranceRunnerC14SynthesisStateVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A68238F0(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  sub_1A6741AD0(&qword_1E96C23B0);
  v2[8] = swift_task_alloc();
  sub_1A6741AD0(qword_1E96C3440);
  v2[9] = swift_task_alloc();
  uint64_t v3 = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v5 = sub_1A68923E0();
  v2[16] = v5;
  v2[17] = v4;
  return MEMORY[0x1F4188298](sub_1A6823A8C, v5, v4);
}

uint64_t sub_1A6823A8C()
{
  sub_1A683104C(v0[6], v0[15], _s15UtteranceRunnerC14SynthesisStateVMa);
  v0[18] = OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_suspendedState;
  uint64_t v1 = (uint64_t *)v0[15];
  uint64_t v2 = *v1;
  sub_1A683104C((uint64_t)v1, v0[14], _s15UtteranceRunnerC14SynthesisStateVMa);
  if (v2)
  {
    uint64_t v3 = v0[15];
    uint64_t v4 = v0[13];
    sub_1A68310B4(v0[14], _s15UtteranceRunnerC14SynthesisStateVMa);
    sub_1A683104C(v3, v4, _s15UtteranceRunnerC14SynthesisStateVMa);
LABEL_4:
    sub_1A68310B4(v0[13], _s15UtteranceRunnerC14SynthesisStateVMa);
    goto LABEL_5;
  }
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[13];
  uint64_t v8 = *(void *)(*(void *)(v5 + *(int *)(v0[10] + 28)) + 16);
  sub_1A68310B4(v5, _s15UtteranceRunnerC14SynthesisStateVMa);
  sub_1A683104C(v6, v7, _s15UtteranceRunnerC14SynthesisStateVMa);
  if (v8) {
    goto LABEL_4;
  }
  uint64_t v13 = v0[13];
  uint64_t v14 = *(void *)(*(void *)(v13 + 8) + 16);
  sub_1A68310B4(v13, _s15UtteranceRunnerC14SynthesisStateVMa);
  if (!v14)
  {
    if (*(unsigned char *)(v0[7] + 281) == 1) {
      sub_1A682AA2C(1);
    }
    goto LABEL_12;
  }
LABEL_5:
  if (*(unsigned char *)(v0[7] + 281) == 1)
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v0[19] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1A6823D0C;
    uint64_t v10 = v0[15];
    uint64_t v11 = v0[12];
    return sub_1A6824310(v11, v10);
  }
LABEL_12:
  sub_1A68310B4(v0[15], _s15UtteranceRunnerC14SynthesisStateVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1A6823D0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_1A6824168;
  }
  else {
    uint64_t v5 = sub_1A6823E48;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1A6823E48()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[7];
  sub_1A68310B4(v1, _s15UtteranceRunnerC14SynthesisStateVMa);
  sub_1A6831118(v2, v1, _s15UtteranceRunnerC14SynthesisStateVMa);
  if (*(unsigned char *)(v3 + 281) == 2)
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v7 = v0[7] + v0[18];
    sub_1A683104C(v0[15], v6, _s15UtteranceRunnerC14SynthesisStateVMa);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v6, 0, 1, v4);
    swift_beginAccess();
    sub_1A68314D0(v6, v7);
    swift_endAccess();
  }
  uint64_t v8 = (uint64_t *)v0[15];
  uint64_t v9 = *v8;
  sub_1A683104C((uint64_t)v8, v0[14], _s15UtteranceRunnerC14SynthesisStateVMa);
  uint64_t v10 = v0[14];
  uint64_t v11 = v0[15];
  uint64_t v12 = v0[13];
  if (v9)
  {
    sub_1A68310B4(v10, _s15UtteranceRunnerC14SynthesisStateVMa);
    sub_1A683104C(v11, v12, _s15UtteranceRunnerC14SynthesisStateVMa);
LABEL_6:
    sub_1A68310B4(v0[13], _s15UtteranceRunnerC14SynthesisStateVMa);
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + *(int *)(v0[10] + 28)) + 16);
  sub_1A68310B4(v10, _s15UtteranceRunnerC14SynthesisStateVMa);
  sub_1A683104C(v11, v12, _s15UtteranceRunnerC14SynthesisStateVMa);
  if (v13) {
    goto LABEL_6;
  }
  uint64_t v18 = v0[13];
  uint64_t v19 = *(void *)(*(void *)(v18 + 8) + 16);
  sub_1A68310B4(v18, _s15UtteranceRunnerC14SynthesisStateVMa);
  if (!v19)
  {
    if (*(unsigned char *)(v0[7] + 281) == 1) {
      sub_1A682AA2C(1);
    }
    goto LABEL_14;
  }
LABEL_7:
  if (*(unsigned char *)(v0[7] + 281) == 1)
  {
    uint64_t v14 = (void *)swift_task_alloc();
    v0[19] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1A6823D0C;
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[12];
    return sub_1A6824310(v16, v15);
  }
LABEL_14:
  sub_1A68310B4(v0[15], _s15UtteranceRunnerC14SynthesisStateVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1A6824168()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_1A68310B4(*(void *)(v0 + 120), _s15UtteranceRunnerC14SynthesisStateVMa);
  sub_1A675B090(v1 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, v2, &qword_1E96C23B0);
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 64);

    sub_1A6750210(v5, &qword_1E96C23B0);
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 160);
    *(void *)(v0 + 40) = v6;
    uint64_t v7 = *(void *)(v0 + 64);
    id v8 = v6;
    sub_1A6892660();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1A6824310(uint64_t a1, uint64_t a2)
{
  v3[55] = a2;
  v3[56] = v2;
  v3[54] = a1;
  uint64_t v4 = sub_1A6891CE0();
  v3[57] = v4;
  v3[58] = *(void *)(v4 - 8);
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  sub_1A6741AD0(&qword_1E96C1CE8);
  v3[61] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SpeechSlicer.Slice(0);
  v3[62] = v5;
  v3[63] = *(void *)(v5 - 8);
  v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  v3[66] = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  v3[67] = swift_task_alloc();
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v7 = sub_1A68923E0();
  v3[68] = v7;
  v3[69] = v6;
  return MEMORY[0x1F4188298](sub_1A6824508, v7, v6);
}

uint64_t sub_1A6824508()
{
  uint64_t v119 = v1;
  *(void *)(v1 + 400) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 368) = 0;
  *(unsigned char *)(v1 + 376) = 0;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 376) > 1u)
  {
LABEL_30:
    uint64_t v60 = *(void *)(v1 + 480);
    uint64_t v61 = *(void *)(v1 + 456);
    uint64_t v62 = *(void *)(v1 + 464);
    uint64_t v63 = sub_1A6748FEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v60, v63, v61);
    swift_retain_n();
    uint64_t v64 = sub_1A6891CC0();
    os_log_type_t v65 = sub_1A6892850();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v117 = *(void *)(v1 + 480);
    uint64_t v67 = *(void *)(v1 + 456);
    uint64_t v68 = *(void *)(v1 + 464);
    if (v66)
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      v118[0] = v70;
      *(_DWORD *)uint64_t v69 = 136315394;
      sub_1A6798334();
      uint64_t v71 = sub_1A68930E0();
      *(void *)(v1 + 416) = sub_1A673F908(v71, v72, v118);
      sub_1A6892A50();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2080;
      swift_beginAccess();
      uint64_t v73 = *(void *)(v1 + 400);
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1A6741AD0(&qword_1E96C1520);
      uint64_t v75 = MEMORY[0x1AD0BF3B0](v73, v74);
      unint64_t v77 = v76;
      swift_bridgeObjectRelease();
      *(void *)(v1 + 424) = sub_1A673F908(v75, v77, v118);
      sub_1A6892A50();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A66D3000, v64, v65, "Utterance: %s failed with errors: %s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0C1C50](v70, -1, -1);
      MEMORY[0x1AD0C1C50](v69, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v117, v67);
    swift_beginAccess();
    uint64_t v78 = *(void *)(v1 + 400);
    sub_1A683147C();
    swift_allocError();
    void *v79 = v78;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v80 = *(uint64_t (**)(void))(v1 + 8);
    return v80();
  }
  while (1)
  {
    if (*(unsigned char *)(*(void *)(v1 + 448) + 281) != 1) {
      goto LABEL_30;
    }
    uint64_t v3 = *(void ***)(v1 + 536);
    sub_1A683104C(*(void *)(v1 + 440), (uint64_t)v3, _s15UtteranceRunnerC14SynthesisStateVMa);
    uint64_t v4 = *v3;
    uint64_t v5 = *(void **)(v1 + 536);
    if (*v3) {
      break;
    }
    uint64_t v6 = *(void *)(v1 + 528);
    uint64_t v7 = (char *)v5 + *(int *)(v6 + 28);
    if (!*(void *)(*(void *)v7 + 16))
    {
      __break(1u);
LABEL_54:
      sub_1A6892320();
LABEL_45:
      sub_1A6892360();
      sub_1A6892300();

LABEL_46:
      uint64_t v94 = *(void *)(v1 + 520);
      uint64_t v95 = *(void *)(v1 + 488);
      uint64_t v96 = *(void *)(v1 + 496);
      uint64_t v97 = (*(uint64_t (**)(void))((*v2 & *v4) + 0x210))();
      *(void *)(v1 + 880) = v97;
      sub_1A675B090(v94 + *(int *)(v96 + 20), v95, &qword_1E96C1CE8);
      uint64_t v98 = sub_1A6891B40();
      uint64_t v99 = *(void *)(v98 - 8);
      int v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v95, 1, v98);
      uint64_t v101 = *(void *)(v1 + 488);
      if (v100 == 1)
      {
        sub_1A6750210(*(void *)(v1 + 488), &qword_1E96C1CE8);
        goto LABEL_49;
      }
      uint64_t v102 = sub_1A6891B10();
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v101, v98);
      if (!v102)
      {
LABEL_49:
        uint64_t v102 = *(void *)(*(void *)(v1 + 448) + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(void *)(v1 + 888) = v102;
      uint64_t v103 = *(void *)(v1 + 408);
      *(void *)(v1 + 896) = v103;
      uint64_t v114 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(*(void *)v97 + 352)
                                                          + **(int **)(*(void *)v97 + 352));
      uint64_t v104 = (void *)swift_task_alloc();
      *(void *)(v1 + 904) = v104;
      *uint64_t v104 = v1;
      v104[1] = sub_1A68266F4;
      return v114(v0, v102, v103);
    }
    id v8 = *(uint64_t **)(v1 + 520);
    uint64_t v9 = *(void *)(v1 + 496);
    uint64_t v10 = *(void *)(v1 + 504);
    uint64_t v11 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v10 + 16);
    unint64_t v12 = *(void *)v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    *(void *)(v1 + 560) = v11;
    *(void *)(v1 + 568) = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v11(v8, v12, v9);
    sub_1A682F814(0, 1);
    uint64_t v13 = (uint64_t)v5 + *(int *)(v6 + 24);
    sub_1A6750210(v13, &qword_1E96C34B0);
    v11((uint64_t *)v13, (unint64_t)v8, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
    uint64_t v14 = sub_1A675628C();
    uint64_t v16 = v15;
    uint64_t v17 = *v8;
    *(void *)(v1 + 576) = *v8;
    uint64_t v18 = v8[1];
    *(void *)(v1 + 584) = v18;
    uint64_t v112 = v8[2];
    *(void *)(v1 + 592) = v112;
    uint64_t v108 = v8[3];
    *(void *)(v1 + 600) = v108;
    uint64_t v111 = v8[4];
    *(void *)(v1 + 608) = v111;
    uint64_t v105 = v8[5];
    *(void *)(v1 + 616) = v105;
    uint64_t v107 = v8[6];
    *(void *)(v1 + 624) = v107;
    uint64_t v106 = v8[7];
    *(void *)(v1 + 632) = v106;
    uint64_t v109 = v8[8];
    *(void *)(v1 + 640) = v109;
    uint64_t v110 = v8[9];
    *(void *)(v1 + 648) = v110;
    uint64_t v115 = (void *)v8[10];
    *(void *)(v1 + 656) = v115;
    uint64_t v19 = v8[11];
    *(void *)(v1 + 664) = v19;
    uint64_t v20 = *((unsigned __int8 *)v8 + 100);
    uint64_t v21 = *((unsigned int *)v8 + 24);
    *(unsigned char *)(v1 + 676) = v20;
    *(_DWORD *)(v1 + 672) = v21;
    if (v18)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = v17;
    }
    else
    {
      uint64_t v22 = 0;
    }
    uint64_t v23 = *(void *)(v1 + 448);
    *(void *)(v1 + 224) = v14;
    *(void *)(v1 + 232) = v16;
    *(void *)(v1 + 240) = v22;
    *(void *)(v1 + 248) = v18;
    *(_OWORD *)(v1 + 256) = 0u;
    *(_OWORD *)(v1 + 272) = 0u;
    *(unsigned char *)(v1 + 288) = 5;
    v24._countAndFlagsBits = *(void *)(v23 + 32);
    *(void *)(v1 + 680) = v24._countAndFlagsBits;
    v24._object = *(void **)(v23 + 40);
    *(void *)(v1 + 688) = v24._object;
    TTSSpeechEvent.emit(forJob:)(v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_bridgeObjectRelease();
    if (*(unsigned char *)(v1 + 376) == 1)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(*(void *)(v1 + 448) + 24))
                                                  + 0x150))(v25);
      *(void *)(v1 + 696) = result;
      if (v18)
      {
        *(void *)(v1 + 16) = v17;
        *(void *)(v1 + 24) = v18;
        *(void *)(v1 + 32) = v112;
        *(void *)(v1 + 40) = v108;
        *(void *)(v1 + 48) = v111;
        *(_WORD *)(v1 + 56) = v105;
        *(void *)(v1 + 64) = v107;
        *(unsigned char *)(v1 + 72) = v106;
        *(void *)(v1 + 80) = v109;
        *(void *)(v1 + 88) = v110;
        *(void *)(v1 + 96) = v115;
        *(_DWORD *)(v1 + 104) = v19;
        *(unsigned char *)(v1 + 108) = BYTE4(v19) & 1;
        *(_DWORD *)(v1 + 112) = v21;
        *(unsigned char *)(v1 + 116) = ((v21 | (unint64_t)(v20 << 32)) >> 32) & 1;
        uint64_t v113 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)result + 344)
                                                        + **(int **)(*(void *)result + 344));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v86 = v115;
        uint64_t v87 = (void *)swift_task_alloc();
        *(void *)(v1 + 704) = v87;
        *uint64_t v87 = v1;
        v87[1] = sub_1A6825424;
        return v113(v1 + 120, v1 + 16);
      }
      else
      {
        __break(1u);
      }
      return result;
    }
    v11(*(uint64_t **)(v1 + 512), *(void *)(v1 + 520), *(void *)(v1 + 496));
    uint64_t v27 = *(void *)(v1 + 504);
    uint64_t v26 = *(uint64_t **)(v1 + 512);
    uint64_t v116 = *(void *)(v1 + 496);
    uint64_t v28 = v26[1];
    uint64_t v29 = v26[2];
    uint64_t v30 = v26[4];
    uint64_t v32 = v26[8];
    uint64_t v31 = v26[9];
    long long v33 = (void *)v26[10];
    sub_1A673D140(*v26, v28, v29, v26[3], v30, v26[5], v26[6], v26[7], v32, v31, v33);
    id v34 = *(void (**)(uint64_t *, uint64_t))(v27 + 8);
    v34(v26, v116);
    if (v28)
    {
      *(void *)(v1 + 864) = v33;
      *(void *)(v1 + 856) = v31;
      *(void *)(v1 + 848) = v32;
      *(void *)(v1 + 840) = v30;
      *(void *)(v1 + 832) = v29;
      *(void *)(v1 + 824) = v28;
      *(unsigned char *)(v1 + 724) = 0;
      *(_DWORD *)(v1 + 720) = 0;
      *(_OWORD *)(v1 + 728) = 0u;
      *(_OWORD *)(v1 + 744) = 0u;
      *(_OWORD *)(v1 + 760) = 0u;
      *(_OWORD *)(v1 + 776) = 0u;
      *(_OWORD *)(v1 + 792) = 0u;
      *(_OWORD *)(v1 + 808) = 0u;
      *(void *)(v1 + 712) = v34;
      uint64_t v88 = *(void *)(v1 + 448);
      sub_1A675628C();
      id v89 = objc_allocWithZone(MEMORY[0x1E4F15458]);
      id v90 = v33;
      uint64_t v91 = (void *)sub_1A6891FD0();
      swift_bridgeObjectRelease();
      id v0 = objc_msgSend(v89, sel_initWithSSMLRepresentation_voice_, v91, v90);
      *(void *)(v1 + 872) = v0;

      uint64_t v92 = (void *)sub_1A6891FD0();
      objc_msgSend(v0, sel_setJobIdentifier_, v92);

      uint64_t v4 = *(void **)(v88 + 24);
      uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
      *(void *)(v1 + 408) = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x240))();
      char v93 = (void *)(*(uint64_t (**)(void))((*v2 & *v4) + 0x2B8))();
      if (v93)
      {
        uint64_t v5 = v93;
        MEMORY[0x1AD0BF380]();
        if (*(void *)((*(void *)(v1 + 408) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)(v1 + 408) & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
          goto LABEL_45;
        goto LABEL_54;
      }
      goto LABEL_46;
    }
    uint64_t v35 = *(uint64_t **)(v1 + 520);
    uint64_t v36 = *(void *)(v1 + 496);
    sub_1A683147C();
    char v37 = (void *)swift_allocError();
    void *v38 = 0;
    swift_willThrow();
    v34(v35, v36);
    sub_1A68310B4(*(void *)(v1 + 536), _s15UtteranceRunnerC14SynthesisStateVMa);
    char v39 = *(void **)(v1 + 400);
    id v40 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v39 = sub_1A682D764(0, v39[2] + 1, 1, v39);
    }
    unint64_t v42 = v39[2];
    unint64_t v41 = v39[3];
    if (v42 >= v41 >> 1) {
      char v39 = sub_1A682D764((void *)(v41 > 1), v42 + 1, 1, v39);
    }
    v39[2] = v42 + 1;
    v39[v42 + 4] = v37;
    *(void *)(v1 + 400) = v39;
    uint64_t v43 = *(void *)(v1 + 368);
    int v44 = *(unsigned __int8 *)(v1 + 376);
    if (*(unsigned char *)(v1 + 376))
    {
      if (v44 == 1)
      {
        BOOL v45 = v43 <= 2;
        if (v43 <= 2) {
          ++v43;
        }
        else {
          uint64_t v43 = 0;
        }
        if (v45) {
          LOBYTE(v44) = 1;
        }
        else {
          LOBYTE(v44) = 2;
        }
      }
    }
    else
    {
      LOBYTE(v44) = v43 > 0;
      if (v43 <= 0) {
        ++v43;
      }
      else {
        uint64_t v43 = 0;
      }
    }
    uint64_t v47 = *(void *)(v1 + 464);
    uint64_t v46 = *(void *)(v1 + 472);
    uint64_t v48 = *(void *)(v1 + 456);
    *(void *)(v1 + 368) = v43;
    *(unsigned char *)(v1 + 376) = v44;
    uint64_t v49 = sub_1A6748FEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v46, v49, v48);
    uint64_t v50 = sub_1A6891CC0();
    os_log_type_t v51 = sub_1A6892850();
    uint64_t v2 = (void *)v51;
    BOOL v52 = os_log_type_enabled(v50, v51);
    id v0 = *(id *)(v1 + 472);
    uint64_t v53 = *(void *)(v1 + 456);
    uint64_t v54 = (void (**)(id, uint64_t))(*(void *)(v1 + 464) + 8);
    if (v52)
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v118[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      char v57 = *(unsigned char *)(v1 + 376);
      *(void *)(v1 + 384) = *(void *)(v1 + 368);
      *(unsigned char *)(v1 + 392) = v57;
      uint64_t v58 = sub_1A6892090();
      *(void *)(v55 + 4) = sub_1A673F908(v58, v59, v118);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A66D3000, v50, (os_log_type_t)v2, "Utterance encountered error, next fallback state: %s", (uint8_t *)v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0C1C50](v56, -1, -1);
      MEMORY[0x1AD0C1C50](v55, -1, -1);
    }
    else
    {
    }
    (*v54)(v0, v53);
    if (*(unsigned __int8 *)(v1 + 376) >= 2u) {
      goto LABEL_30;
    }
  }
  *uint64_t v5 = 0;
  *(void *)(v1 + 920) = v4;
  uint64_t v82 = *(void *)(v1 + 536);
  uint64_t v83 = *(void *)(v82 + 8);
  *(void *)(v1 + 928) = v83;
  *(void *)(v82 + 8) = MEMORY[0x1E4FBC860];
  int v84 = (void *)swift_task_alloc();
  *(void *)(v1 + 936) = v84;
  *int v84 = v1;
  v84[1] = sub_1A6826A54;
  uint64_t v85 = *(void *)(v1 + 536);
  return sub_1A6828040(v83, (uint64_t)v4, v85);
}

uint64_t sub_1A6825424()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 656);
  long long v12 = *(_OWORD *)(*v0 + 640);
  uint64_t v14 = *(void *)(*v0 + 632);
  uint64_t v13 = *(void *)(*v0 + 624);
  uint64_t v3 = *(void *)(*v0 + 616);
  uint64_t v4 = *(void *)(*v0 + 608);
  uint64_t v5 = *(void *)(*v0 + 600);
  uint64_t v6 = *(void *)(*v0 + 592);
  uint64_t v7 = *(void *)(*v0 + 584);
  uint64_t v8 = *(void *)(*v0 + 576);
  swift_task_dealloc();
  swift_release();
  sub_1A673FF60(v8, v7, v6, v5, v4, v3, v13, v14, v12, *((uint64_t *)&v12 + 1), v2);
  uint64_t v9 = *(void *)(v1 + 552);
  uint64_t v10 = *(void *)(v1 + 544);
  return MEMORY[0x1F4188298](sub_1A68256AC, v10, v9);
}

uint64_t sub_1A68256AC()
{
  uint64_t v148 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v138 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v141 = *(void *)(v0 + 152);
  uint64_t v145 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 192);
  uint64_t v135 = *(void **)(v0 + 200);
  unint64_t v8 = *(unsigned int *)(v0 + 216) | ((unint64_t)*(unsigned __int8 *)(v0 + 220) << 32);
  uint64_t v122 = *(void *)(v0 + 208);
  (*(void (**)(void, void, void))(v0 + 560))(*(void *)(v0 + 512), *(void *)(v0 + 520), *(void *)(v0 + 496));
  uint64_t v131 = v6;
  uint64_t v133 = v1;
  uint64_t v126 = v5;
  uint64_t v128 = v4;
  unint64_t v123 = v8;
  uint64_t v124 = v3;
  if (v2)
  {
    uint64_t v119 = *(void *)(v0 + 512);
    uint64_t v9 = *(void *)(v0 + 496);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 504) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = v141;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v121 = v135;
    v10(v119, v9);
    long long v12 = v10;
    uint64_t v13 = v2;
    uint64_t v14 = v138;
    uint64_t v15 = v145;
    uint64_t v16 = v7;
    uint64_t v17 = v135;
LABEL_3:
    *(void *)(v0 + 864) = v121;
    *(void *)(v0 + 856) = v7;
    *(void *)(v0 + 848) = v15;
    *(void *)(v0 + 840) = v11;
    *(void *)(v0 + 832) = v14;
    *(void *)(v0 + 824) = v13;
    *(void *)(v0 + 816) = v133;
    *(void *)(v0 + 808) = v2;
    *(void *)(v0 + 800) = v138;
    *(void *)(v0 + 792) = v124;
    *(void *)(v0 + 784) = v141;
    *(void *)(v0 + 776) = v126;
    *(void *)(v0 + 768) = v128;
    *(void *)(v0 + 760) = v131;
    *(void *)(v0 + 752) = v145;
    *(void *)(v0 + 744) = v16;
    *(void *)(v0 + 736) = v17;
    *(void *)(v0 + 728) = v122;
    *(_DWORD *)(v0 + 720) = v123;
    *(unsigned char *)(v0 + 724) = BYTE4(v123);
    *(void *)(v0 + 712) = v12;
    uint64_t v18 = *(void *)(v0 + 448);
    sub_1A675628C();
    id v19 = objc_allocWithZone(MEMORY[0x1E4F15458]);
    id v20 = v121;
    uint64_t v21 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v19, sel_initWithSSMLRepresentation_voice_, v21, v20);
    *(void *)(v0 + 872) = v22;

    uint64_t v23 = (void *)sub_1A6891FD0();
    objc_msgSend(v22, sel_setJobIdentifier_, v23);

    Swift::String v24 = *(void **)(v18 + 24);
    uint64_t v25 = MEMORY[0x1E4FBC8C8];
    *(void *)(v0 + 408) = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v24) + 0x240))();
    uint64_t v26 = (void *)(*(uint64_t (**)(void))((*(void *)v25 & *v24) + 0x2B8))();
    if (v26)
    {
      uint64_t v27 = v26;
      MEMORY[0x1AD0BF380]();
      if (*(void *)((*(void *)(v0 + 408) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 408) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
LABEL_57:
        sub_1A6892320();
      sub_1A6892360();
      sub_1A6892300();
    }
    uint64_t v28 = *(void *)(v0 + 520);
    uint64_t v29 = *(void *)(v0 + 488);
    uint64_t v30 = *(void *)(v0 + 496);
    uint64_t v31 = (*(uint64_t (**)(void))((*(void *)v25 & *v24) + 0x210))();
    *(void *)(v0 + 880) = v31;
    sub_1A675B090(v28 + *(int *)(v30 + 20), v29, &qword_1E96C1CE8);
    uint64_t v32 = sub_1A6891B40();
    uint64_t v33 = *(void *)(v32 - 8);
    int v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v29, 1, v32);
    uint64_t v35 = *(void *)(v0 + 488);
    if (v34 == 1)
    {
      sub_1A6750210(*(void *)(v0 + 488), &qword_1E96C1CE8);
    }
    else
    {
      uint64_t v87 = sub_1A6891B10();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
      if (v87)
      {
LABEL_39:
        *(void *)(v0 + 888) = v87;
        uint64_t v88 = *(void *)(v0 + 408);
        *(void *)(v0 + 896) = v88;
        uint64_t v143 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(*(void *)v31 + 352)
                                                            + **(int **)(*(void *)v31 + 352));
        id v89 = (void *)swift_task_alloc();
        *(void *)(v0 + 904) = v89;
        *id v89 = v0;
        v89[1] = sub_1A68266F4;
        return v143(v22, v87, v88);
      }
    }
    uint64_t v87 = *(void *)(*(void *)(v0 + 448) + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  uint64_t v120 = v7;
  while (1)
  {
    uint64_t v36 = *(void *)(v0 + 504);
    char v37 = *(uint64_t **)(v0 + 512);
    uint64_t v38 = *(void *)(v0 + 496);
    uint64_t v13 = v37[1];
    uint64_t v14 = v37[2];
    uint64_t v11 = v37[4];
    uint64_t v15 = v37[8];
    uint64_t v7 = v37[9];
    id v121 = (id)v37[10];
    sub_1A673D140(*v37, v13, v14, v37[3], v11, v37[5], v37[6], v37[7], v15, v7, v121);
    id v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    Swift::String v24 = (void *)(v36 + 8);
    char v39 = v40;
    v40((uint64_t)v37, v38);
    if (v13)
    {
      uint64_t v2 = 0;
      uint64_t v17 = v135;
      uint64_t v16 = v120;
      long long v12 = v39;
      goto LABEL_3;
    }
    uint64_t v41 = *(void *)(v0 + 520);
    uint64_t v42 = *(void *)(v0 + 496);
    sub_1A683147C();
    uint64_t v43 = (void *)swift_allocError();
    *int v44 = 0;
    swift_willThrow();
    v39(v41, v42);
    sub_1A68310B4(*(void *)(v0 + 536), _s15UtteranceRunnerC14SynthesisStateVMa);
    BOOL v45 = *(void **)(v0 + 400);
    id v46 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v45 = sub_1A682D764(0, v45[2] + 1, 1, v45);
    }
    unint64_t v48 = v45[2];
    unint64_t v47 = v45[3];
    if (v48 >= v47 >> 1) {
      BOOL v45 = sub_1A682D764((void *)(v47 > 1), v48 + 1, 1, v45);
    }
    v45[2] = v48 + 1;
    v45[v48 + 4] = v43;
    *(void *)(v0 + 400) = v45;
    uint64_t v49 = *(void *)(v0 + 368);
    int v50 = *(unsigned __int8 *)(v0 + 376);
    if (*(unsigned char *)(v0 + 376))
    {
      if (v50 == 1)
      {
        BOOL v51 = v49 <= 2;
        if (v49 <= 2) {
          ++v49;
        }
        else {
          uint64_t v49 = 0;
        }
        if (v51) {
          LOBYTE(v50) = 1;
        }
        else {
          LOBYTE(v50) = 2;
        }
      }
    }
    else
    {
      LOBYTE(v50) = v49 > 0;
      if (v49 <= 0) {
        ++v49;
      }
      else {
        uint64_t v49 = 0;
      }
    }
    uint64_t v52 = *(void *)(v0 + 464);
    uint64_t v53 = *(void *)(v0 + 472);
    uint64_t v54 = *(void *)(v0 + 456);
    *(void *)(v0 + 368) = v49;
    *(unsigned char *)(v0 + 376) = v50;
    uint64_t v55 = sub_1A6748FEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v53, v55, v54);
    uint64_t v56 = sub_1A6891CC0();
    os_log_type_t v57 = sub_1A6892850();
    BOOL v58 = os_log_type_enabled(v56, v57);
    uint64_t v59 = *(void *)(v0 + 472);
    uint64_t v60 = *(void *)(v0 + 456);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 464) + 8);
    if (v58)
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      v147[0] = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      char v63 = *(unsigned char *)(v0 + 376);
      *(void *)(v0 + 384) = *(void *)(v0 + 368);
      *(unsigned char *)(v0 + 392) = v63;
      uint64_t v64 = sub_1A6892090();
      Swift::String v24 = (void *)v65;
      *(void *)(v61 + 4) = sub_1A673F908(v64, v65, v147);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A66D3000, v56, v57, "Utterance encountered error, next fallback state: %s", (uint8_t *)v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0C1C50](v62, -1, -1);
      MEMORY[0x1AD0C1C50](v61, -1, -1);
    }
    else
    {
    }
    (*v27)(v59, v60);
    if (*(unsigned __int8 *)(v0 + 376) >= 2u || *(unsigned char *)(*(void *)(v0 + 448) + 281) != 1) {
      break;
    }
    BOOL v66 = *(id **)(v0 + 536);
    sub_1A683104C(*(void *)(v0 + 440), (uint64_t)v66, _s15UtteranceRunnerC14SynthesisStateVMa);
    id v22 = *v66;
    uint64_t v67 = *(void **)(v0 + 536);
    if (*v66)
    {
      *uint64_t v67 = 0;
      *(void *)(v0 + 920) = v22;
      uint64_t v113 = *(void *)(v0 + 536);
      uint64_t v114 = *(void *)(v113 + 8);
      *(void *)(v0 + 928) = v114;
      *(void *)(v113 + 8) = MEMORY[0x1E4FBC860];
      uint64_t v115 = (void *)swift_task_alloc();
      *(void *)(v0 + 936) = v115;
      *uint64_t v115 = v0;
      v115[1] = sub_1A6826A54;
      uint64_t v116 = *(void *)(v0 + 536);
      return sub_1A6828040(v114, (uint64_t)v22, v116);
    }
    uint64_t v25 = *(void *)(v0 + 528);
    uint64_t v68 = (char *)v67 + *(int *)(v25 + 28);
    if (!*(void *)(*(void *)v68 + 16))
    {
      __break(1u);
      goto LABEL_57;
    }
    uint64_t v69 = *(uint64_t **)(v0 + 520);
    uint64_t v70 = *(void *)(v0 + 496);
    uint64_t v71 = *(void *)(v0 + 504);
    unint64_t v72 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v71 + 16);
    unint64_t v73 = *(void *)v68 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    *(void *)(v0 + 560) = v72;
    *(void *)(v0 + 568) = (v71 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v72(v69, v73, v70);
    sub_1A682F814(0, 1);
    uint64_t v74 = (uint64_t)v67 + *(int *)(v25 + 24);
    sub_1A6750210(v74, &qword_1E96C34B0);
    v72((uint64_t *)v74, (unint64_t)v69, v70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v74, 0, 1, v70);
    uint64_t v75 = sub_1A675628C();
    uint64_t v77 = v76;
    uint64_t v78 = *v69;
    *(void *)(v0 + 576) = *v69;
    uint64_t v79 = v69[1];
    *(void *)(v0 + 584) = v79;
    uint64_t v142 = v69[2];
    *(void *)(v0 + 592) = v142;
    uint64_t v132 = v69[3];
    *(void *)(v0 + 600) = v132;
    uint64_t v139 = v69[4];
    *(void *)(v0 + 608) = v139;
    uint64_t v125 = v69[5];
    *(void *)(v0 + 616) = v125;
    uint64_t v129 = v69[6];
    *(void *)(v0 + 624) = v129;
    uint64_t v127 = v69[7];
    *(void *)(v0 + 632) = v127;
    uint64_t v134 = v69[8];
    *(void *)(v0 + 640) = v134;
    uint64_t v136 = v69[9];
    *(void *)(v0 + 648) = v136;
    char v146 = (void *)v69[10];
    *(void *)(v0 + 656) = v146;
    uint64_t v80 = v69[11];
    *(void *)(v0 + 664) = v80;
    uint64_t v81 = *((unsigned __int8 *)v69 + 100);
    uint64_t v82 = *((unsigned int *)v69 + 24);
    *(unsigned char *)(v0 + 676) = v81;
    *(_DWORD *)(v0 + 672) = v82;
    if (v79)
    {
      swift_bridgeObjectRetain();
      uint64_t v83 = v78;
    }
    else
    {
      uint64_t v83 = 0;
    }
    uint64_t v84 = *(void *)(v0 + 448);
    *(void *)(v0 + 224) = v75;
    *(void *)(v0 + 232) = v77;
    *(void *)(v0 + 240) = v83;
    *(void *)(v0 + 248) = v79;
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
    *(unsigned char *)(v0 + 288) = 5;
    v85._countAndFlagsBits = *(void *)(v84 + 32);
    *(void *)(v0 + 680) = v85._countAndFlagsBits;
    v85._object = *(void **)(v84 + 40);
    *(void *)(v0 + 688) = v85._object;
    TTSSpeechEvent.emit(forJob:)(v85);
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_bridgeObjectRelease();
    if (*(unsigned char *)(v0 + 376) == 1)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(*(void *)(v0 + 448) + 24))
                                                  + 0x150))(v86);
      *(void *)(v0 + 696) = result;
      if (v79)
      {
        *(void *)(v0 + 16) = v78;
        *(void *)(v0 + 24) = v79;
        *(void *)(v0 + 32) = v142;
        *(void *)(v0 + 40) = v132;
        *(void *)(v0 + 48) = v139;
        *(_WORD *)(v0 + 56) = v125;
        *(void *)(v0 + 64) = v129;
        *(unsigned char *)(v0 + 72) = v127;
        *(void *)(v0 + 80) = v134;
        *(void *)(v0 + 88) = v136;
        *(void *)(v0 + 96) = v146;
        *(_DWORD *)(v0 + 104) = v80;
        *(unsigned char *)(v0 + 108) = BYTE4(v80) & 1;
        *(_DWORD *)(v0 + 112) = v82;
        *(unsigned char *)(v0 + 116) = ((v82 | (unint64_t)(v81 << 32)) >> 32) & 1;
        uint64_t v130 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)result + 344)
                                                        + **(int **)(*(void *)result + 344));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v117 = v146;
        uint64_t v118 = (void *)swift_task_alloc();
        *(void *)(v0 + 704) = v118;
        *uint64_t v118 = v0;
        v118[1] = sub_1A6825424;
        return v130(v0 + 120, v0 + 16);
      }
      else
      {
        __break(1u);
      }
      return result;
    }
    v72(*(uint64_t **)(v0 + 512), *(void *)(v0 + 520), *(void *)(v0 + 496));
    uint64_t v122 = 0;
    unint64_t v123 = 0;
    uint64_t v135 = 0;
    uint64_t v120 = 0;
    uint64_t v141 = 0;
    uint64_t v145 = 0;
    uint64_t v128 = 0;
    uint64_t v131 = 0;
    uint64_t v126 = 0;
    uint64_t v124 = 0;
    uint64_t v138 = 0;
    uint64_t v133 = 0;
  }
  uint64_t v91 = *(void *)(v0 + 480);
  uint64_t v92 = *(void *)(v0 + 456);
  uint64_t v93 = *(void *)(v0 + 464);
  uint64_t v94 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v91, v94, v92);
  swift_retain_n();
  uint64_t v95 = sub_1A6891CC0();
  os_log_type_t v96 = sub_1A6892850();
  BOOL v97 = os_log_type_enabled(v95, v96);
  uint64_t v98 = *(void *)(v0 + 480);
  uint64_t v99 = *(void *)(v0 + 456);
  uint64_t v100 = *(void *)(v0 + 464);
  if (v97)
  {
    uint64_t v144 = *(void *)(v0 + 480);
    uint64_t v101 = swift_slowAlloc();
    uint64_t v137 = swift_slowAlloc();
    v147[0] = v137;
    *(_DWORD *)uint64_t v101 = 136315394;
    uint64_t v140 = v99;
    sub_1A6798334();
    uint64_t v102 = sub_1A68930E0();
    *(void *)(v0 + 416) = sub_1A673F908(v102, v103, v147);
    sub_1A6892A50();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v101 + 12) = 2080;
    swift_beginAccess();
    uint64_t v104 = *(void *)(v0 + 400);
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_1A6741AD0(&qword_1E96C1520);
    uint64_t v106 = MEMORY[0x1AD0BF3B0](v104, v105);
    os_log_type_t v107 = v96;
    unint64_t v109 = v108;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 424) = sub_1A673F908(v106, v109, v147);
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A66D3000, v95, v107, "Utterance: %s failed with errors: %s", (uint8_t *)v101, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v137, -1, -1);
    MEMORY[0x1AD0C1C50](v101, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v144, v140);
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v98, v99);
  }
  swift_beginAccess();
  uint64_t v110 = *(void *)(v0 + 400);
  swift_allocError();
  *uint64_t v111 = v110;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v112 = *(uint64_t (**)(void))(v0 + 8);
  return v112();
}

uint64_t sub_1A68266F4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 912) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 552);
  uint64_t v4 = *(void *)(v2 + 544);
  return MEMORY[0x1F4188298](sub_1A6826880, v4, v3);
}

uint64_t sub_1A6826880()
{
  uint64_t v13 = *(void **)(v0 + 872);
  uint64_t v20 = *(void *)(v0 + 808);
  uint64_t v21 = *(void *)(v0 + 816);
  uint64_t v18 = *(void *)(v0 + 792);
  uint64_t v19 = *(void *)(v0 + 800);
  uint64_t v16 = *(void *)(v0 + 776);
  uint64_t v17 = *(void *)(v0 + 784);
  uint64_t v14 = *(void *)(v0 + 760);
  uint64_t v15 = *(void *)(v0 + 768);
  uint64_t v8 = *(void *)(v0 + 744);
  uint64_t v9 = *(void *)(v0 + 752);
  uint64_t v1 = *(void **)(v0 + 736);
  uint64_t v11 = *(void *)(v0 + 520);
  long long v12 = *(void (**)(uint64_t, uint64_t))(v0 + 712);
  uint64_t v10 = *(void *)(v0 + 496);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A673FF60(v21, v20, v19, v18, v17, v16, v15, v14, v9, v8, v1);
  v12(v11, v10);
  uint64_t v2 = *(void *)(v0 + 912);
  *(void *)(v0 + 920) = v2;
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(void *)(v3 + 8);
  *(void *)(v0 + 928) = v4;
  *(void *)(v3 + 8) = MEMORY[0x1E4FBC860];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 936) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A6826A54;
  uint64_t v6 = *(void *)(v0 + 536);
  return sub_1A6828040(v4, v2, v6);
}

uint64_t sub_1A6826A54(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 944) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = v4[69];
    uint64_t v6 = v4[68];
    uint64_t v7 = sub_1A6826D1C;
  }
  else
  {
    v4[119] = a1;
    uint64_t v5 = v4[69];
    uint64_t v6 = v4[68];
    uint64_t v7 = sub_1A6826BA0;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_1A6826BA0()
{
  uint64_t v8 = v0;
  if (*(unsigned char *)(v0[56] + 281) == 2)
  {
    uint64_t v1 = v0[118];
    uint64_t v7 = (void *)v0[119];
    swift_bridgeObjectRetain();
    sub_1A682DB2C(&v7);
    if (v1)
    {
      return swift_release();
    }
    uint64_t v3 = v0[115];
    uint64_t v4 = (void *)v0[67];
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
    swift_bridgeObjectRelease();
    v4[1] = v5;
    swift_release();
    *uint64_t v4 = v3;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_1A6831118(v0[67], v0[54], _s15UtteranceRunnerC14SynthesisStateVMa);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1A6826D1C()
{
  uint64_t v119 = v0;
  swift_release();
  uint64_t v2 = *(void **)(v0 + 944);
  while (1)
  {
    sub_1A68310B4(*(void *)(v0 + 536), _s15UtteranceRunnerC14SynthesisStateVMa);
    uint64_t v3 = *(void **)(v0 + 400);
    id v4 = v2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1A682D764(0, v3[2] + 1, 1, v3);
    }
    unint64_t v6 = v3[2];
    unint64_t v5 = v3[3];
    if (v6 >= v5 >> 1) {
      uint64_t v3 = sub_1A682D764((void *)(v5 > 1), v6 + 1, 1, v3);
    }
    v3[2] = v6 + 1;
    v3[v6 + 4] = v2;
    *(void *)(v0 + 400) = v3;
    uint64_t v7 = *(void *)(v0 + 368);
    int v8 = *(unsigned __int8 *)(v0 + 376);
    if (*(unsigned char *)(v0 + 376))
    {
      if (v8 == 1)
      {
        BOOL v9 = v7 <= 2;
        if (v7 <= 2) {
          ++v7;
        }
        else {
          uint64_t v7 = 0;
        }
        if (v9) {
          LOBYTE(v8) = 1;
        }
        else {
          LOBYTE(v8) = 2;
        }
      }
    }
    else
    {
      LOBYTE(v8) = v7 > 0;
      if (v7 <= 0) {
        ++v7;
      }
      else {
        uint64_t v7 = 0;
      }
    }
    uint64_t v11 = *(void *)(v0 + 464);
    uint64_t v10 = *(void *)(v0 + 472);
    uint64_t v12 = *(void *)(v0 + 456);
    *(void *)(v0 + 368) = v7;
    *(unsigned char *)(v0 + 376) = v8;
    uint64_t v13 = sub_1A6748FEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
    uint64_t v14 = sub_1A6891CC0();
    os_log_type_t v15 = sub_1A6892850();
    BOOL v16 = os_log_type_enabled(v14, v15);
    id v17 = *(id *)(v0 + 472);
    uint64_t v18 = *(void *)(v0 + 456);
    uint64_t v19 = (void (**)(id, uint64_t))(*(void *)(v0 + 464) + 8);
    if (v16)
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v1 = (void *)swift_slowAlloc();
      v118[0] = (uint64_t)v1;
      *(_DWORD *)uint64_t v20 = 136315138;
      char v21 = *(unsigned char *)(v0 + 376);
      *(void *)(v0 + 384) = *(void *)(v0 + 368);
      *(unsigned char *)(v0 + 392) = v21;
      uint64_t v22 = sub_1A6892090();
      *(void *)(v20 + 4) = sub_1A673F908(v22, v23, v118);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A66D3000, v14, v15, "Utterance encountered error, next fallback state: %s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0C1C50](v1, -1, -1);
      MEMORY[0x1AD0C1C50](v20, -1, -1);
    }
    else
    {
    }
    (*v19)(v17, v18);
    if (*(unsigned __int8 *)(v0 + 376) >= 2u || *(unsigned char *)(*(void *)(v0 + 448) + 281) != 1) {
      break;
    }
    Swift::String v24 = *(void ***)(v0 + 536);
    sub_1A683104C(*(void *)(v0 + 440), (uint64_t)v24, _s15UtteranceRunnerC14SynthesisStateVMa);
    uint64_t v25 = *v24;
    uint64_t v26 = *(void **)(v0 + 536);
    if (*v24)
    {
      *uint64_t v26 = 0;
      *(void *)(v0 + 920) = v25;
      uint64_t v80 = *(void *)(v0 + 536);
      uint64_t v81 = *(void *)(v80 + 8);
      *(void *)(v0 + 928) = v81;
      *(void *)(v80 + 8) = MEMORY[0x1E4FBC860];
      uint64_t v82 = (void *)swift_task_alloc();
      *(void *)(v0 + 936) = v82;
      void *v82 = v0;
      v82[1] = sub_1A6826A54;
      uint64_t v83 = *(void *)(v0 + 536);
      return sub_1A6828040(v81, (uint64_t)v25, v83);
    }
    uint64_t v27 = *(void *)(v0 + 528);
    uint64_t v28 = (char *)v26 + *(int *)(v27 + 28);
    if (!*(void *)(*(void *)v28 + 16))
    {
      __break(1u);
LABEL_54:
      sub_1A6892320();
LABEL_45:
      sub_1A6892360();
      sub_1A6892300();

LABEL_46:
      uint64_t v92 = *(void *)(v0 + 520);
      uint64_t v93 = *(void *)(v0 + 488);
      uint64_t v94 = *(void *)(v0 + 496);
      uint64_t v95 = (*(uint64_t (**)(void))((*v1 & *v25) + 0x210))();
      *(void *)(v0 + 880) = v95;
      sub_1A675B090(v92 + *(int *)(v94 + 20), v93, &qword_1E96C1CE8);
      uint64_t v96 = sub_1A6891B40();
      uint64_t v97 = *(void *)(v96 - 8);
      int v98 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v93, 1, v96);
      uint64_t v99 = *(void *)(v0 + 488);
      if (v98 == 1)
      {
        sub_1A6750210(*(void *)(v0 + 488), &qword_1E96C1CE8);
        goto LABEL_49;
      }
      uint64_t v100 = sub_1A6891B10();
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v99, v96);
      if (!v100)
      {
LABEL_49:
        uint64_t v100 = *(void *)(*(void *)(v0 + 448) + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(void *)(v0 + 888) = v100;
      uint64_t v101 = *(void *)(v0 + 408);
      *(void *)(v0 + 896) = v101;
      uint64_t v114 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(*(void *)v95 + 352)
                                                          + **(int **)(*(void *)v95 + 352));
      uint64_t v102 = (void *)swift_task_alloc();
      *(void *)(v0 + 904) = v102;
      void *v102 = v0;
      v102[1] = sub_1A68266F4;
      return v114(v17, v100, v101);
    }
    uint64_t v29 = *(uint64_t **)(v0 + 520);
    uint64_t v30 = *(void *)(v0 + 496);
    uint64_t v31 = *(void *)(v0 + 504);
    uint64_t v32 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v31 + 16);
    unint64_t v33 = *(void *)v28 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    *(void *)(v0 + 560) = v32;
    *(void *)(v0 + 568) = (v31 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v32(v29, v33, v30);
    sub_1A682F814(0, 1);
    uint64_t v34 = (uint64_t)v26 + *(int *)(v27 + 24);
    sub_1A6750210(v34, &qword_1E96C34B0);
    v32((uint64_t *)v34, (unint64_t)v29, v30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    uint64_t v35 = sub_1A675628C();
    uint64_t v37 = v36;
    uint64_t v38 = *v29;
    *(void *)(v0 + 576) = *v29;
    uint64_t v39 = v29[1];
    *(void *)(v0 + 584) = v39;
    uint64_t v110 = v29[2];
    *(void *)(v0 + 592) = v110;
    uint64_t v106 = v29[3];
    *(void *)(v0 + 600) = v106;
    uint64_t v109 = v29[4];
    *(void *)(v0 + 608) = v109;
    uint64_t v103 = v29[5];
    *(void *)(v0 + 616) = v103;
    uint64_t v105 = v29[6];
    *(void *)(v0 + 624) = v105;
    uint64_t v104 = v29[7];
    *(void *)(v0 + 632) = v104;
    uint64_t v107 = v29[8];
    *(void *)(v0 + 640) = v107;
    uint64_t v108 = v29[9];
    *(void *)(v0 + 648) = v108;
    uint64_t v115 = (void *)v29[10];
    *(void *)(v0 + 656) = v115;
    uint64_t v40 = v29[11];
    *(void *)(v0 + 664) = v40;
    uint64_t v41 = *((unsigned __int8 *)v29 + 100);
    uint64_t v42 = *((unsigned int *)v29 + 24);
    *(unsigned char *)(v0 + 676) = v41;
    *(_DWORD *)(v0 + 672) = v42;
    if (v39)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = v38;
    }
    else
    {
      uint64_t v43 = 0;
    }
    uint64_t v44 = *(void *)(v0 + 448);
    *(void *)(v0 + 224) = v35;
    *(void *)(v0 + 232) = v37;
    *(void *)(v0 + 240) = v43;
    *(void *)(v0 + 248) = v39;
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
    *(unsigned char *)(v0 + 288) = 5;
    v45._countAndFlagsBits = *(void *)(v44 + 32);
    *(void *)(v0 + 680) = v45._countAndFlagsBits;
    v45._object = *(void **)(v44 + 40);
    *(void *)(v0 + 688) = v45._object;
    TTSSpeechEvent.emit(forJob:)(v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = swift_bridgeObjectRelease();
    if (*(unsigned char *)(v0 + 376) == 1)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(*(void *)(v0 + 448) + 24))
                                                  + 0x150))(v46);
      *(void *)(v0 + 696) = result;
      if (v39)
      {
        *(void *)(v0 + 16) = v38;
        *(void *)(v0 + 24) = v39;
        *(void *)(v0 + 32) = v110;
        *(void *)(v0 + 40) = v106;
        *(void *)(v0 + 48) = v109;
        *(_WORD *)(v0 + 56) = v103;
        *(void *)(v0 + 64) = v105;
        *(unsigned char *)(v0 + 72) = v104;
        *(void *)(v0 + 80) = v107;
        *(void *)(v0 + 88) = v108;
        *(void *)(v0 + 96) = v115;
        *(_DWORD *)(v0 + 104) = v40;
        *(unsigned char *)(v0 + 108) = BYTE4(v40) & 1;
        *(_DWORD *)(v0 + 112) = v42;
        *(unsigned char *)(v0 + 116) = ((v42 | (unint64_t)(v41 << 32)) >> 32) & 1;
        uint64_t v111 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)result + 344)
                                                        + **(int **)(*(void *)result + 344));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v84 = v115;
        Swift::String v85 = (void *)swift_task_alloc();
        *(void *)(v0 + 704) = v85;
        void *v85 = v0;
        v85[1] = sub_1A6825424;
        return v111(v0 + 120, v0 + 16);
      }
      else
      {
        __break(1u);
      }
      return result;
    }
    v32(*(uint64_t **)(v0 + 512), *(void *)(v0 + 520), *(void *)(v0 + 496));
    uint64_t v48 = *(void *)(v0 + 504);
    unint64_t v47 = *(uint64_t **)(v0 + 512);
    uint64_t v116 = *(void *)(v0 + 496);
    uint64_t v49 = v47[1];
    uint64_t v50 = v47[2];
    uint64_t v51 = v47[4];
    uint64_t v53 = v47[8];
    uint64_t v52 = v47[9];
    uint64_t v1 = (void *)v47[10];
    sub_1A673D140(*v47, v49, v50, v47[3], v51, v47[5], v47[6], v47[7], v53, v52, v1);
    uint64_t v54 = *(void (**)(uint64_t *, uint64_t))(v48 + 8);
    v54(v47, v116);
    if (v49)
    {
      *(void *)(v0 + 864) = v1;
      *(void *)(v0 + 856) = v52;
      *(void *)(v0 + 848) = v53;
      *(void *)(v0 + 840) = v51;
      *(void *)(v0 + 832) = v50;
      *(void *)(v0 + 824) = v49;
      *(unsigned char *)(v0 + 724) = 0;
      *(_DWORD *)(v0 + 720) = 0;
      *(_OWORD *)(v0 + 728) = 0u;
      *(_OWORD *)(v0 + 744) = 0u;
      *(_OWORD *)(v0 + 760) = 0u;
      *(_OWORD *)(v0 + 776) = 0u;
      *(_OWORD *)(v0 + 792) = 0u;
      *(_OWORD *)(v0 + 808) = 0u;
      *(void *)(v0 + 712) = v54;
      uint64_t v86 = *(void *)(v0 + 448);
      sub_1A675628C();
      id v87 = objc_allocWithZone(MEMORY[0x1E4F15458]);
      uint64_t v88 = v1;
      id v89 = (void *)sub_1A6891FD0();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v87, sel_initWithSSMLRepresentation_voice_, v89, v88);
      *(void *)(v0 + 872) = v17;

      id v90 = (void *)sub_1A6891FD0();
      objc_msgSend(v17, sel_setJobIdentifier_, v90);

      uint64_t v25 = *(void **)(v86 + 24);
      uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
      *(void *)(v0 + 408) = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v25) + 0x240))();
      uint64_t v91 = (void *)(*(uint64_t (**)(void))((*v1 & *v25) + 0x2B8))();
      if (v91)
      {
        uint64_t v26 = v91;
        MEMORY[0x1AD0BF380]();
        if (*(void *)((*(void *)(v0 + 408) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)(v0 + 408) & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
          goto LABEL_45;
        goto LABEL_54;
      }
      goto LABEL_46;
    }
    uint64_t v55 = *(uint64_t **)(v0 + 520);
    uint64_t v56 = *(void *)(v0 + 496);
    sub_1A683147C();
    uint64_t v2 = (void *)swift_allocError();
    *os_log_type_t v57 = 0;
    swift_willThrow();
    v54(v55, v56);
  }
  uint64_t v58 = *(void *)(v0 + 480);
  uint64_t v59 = *(void *)(v0 + 456);
  uint64_t v60 = *(void *)(v0 + 464);
  uint64_t v61 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v58, v61, v59);
  swift_retain_n();
  uint64_t v62 = sub_1A6891CC0();
  os_log_type_t v63 = sub_1A6892850();
  BOOL v64 = os_log_type_enabled(v62, v63);
  uint64_t v65 = *(void *)(v0 + 480);
  uint64_t v66 = *(void *)(v0 + 464);
  uint64_t v117 = *(void *)(v0 + 456);
  if (v64)
  {
    uint64_t v113 = *(void *)(v0 + 480);
    uint64_t v67 = swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    v118[0] = v112;
    *(_DWORD *)uint64_t v67 = 136315394;
    sub_1A6798334();
    uint64_t v68 = sub_1A68930E0();
    *(void *)(v0 + 416) = sub_1A673F908(v68, v69, v118);
    sub_1A6892A50();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 12) = 2080;
    swift_beginAccess();
    uint64_t v70 = *(void *)(v0 + 400);
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1A6741AD0(&qword_1E96C1520);
    uint64_t v72 = MEMORY[0x1AD0BF3B0](v70, v71);
    os_log_type_t v73 = v63;
    unint64_t v75 = v74;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 424) = sub_1A673F908(v72, v75, v118);
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A66D3000, v62, v73, "Utterance: %s failed with errors: %s", (uint8_t *)v67, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v112, -1, -1);
    MEMORY[0x1AD0C1C50](v67, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v113, v117);
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v117);
  }
  swift_beginAccess();
  uint64_t v76 = *(void *)(v0 + 400);
  sub_1A683147C();
  swift_allocError();
  void *v77 = v76;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v78 = *(uint64_t (**)(void))(v0 + 8);
  return v78();
}

uint64_t sub_1A6827C1C()
{
  v1[15] = v0;
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v3 = sub_1A68923E0();
  v1[16] = v3;
  v1[17] = v2;
  return MEMORY[0x1F4188298](sub_1A6827CD4, v3, v2);
}

uint64_t sub_1A6827CD4()
{
  uint64_t v1 = v0[15];
  if ((*(unsigned char *)(v1 + 280) & 1) != 0
    || (uint64_t v2 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v1 + 24)) + 0x1B0),
        uint64_t v3 = (void *)v2(),
        id v4 = objc_msgSend(v3, sel_outputFormat),
        v3,
        id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B8]), sel_initWithPCMFormat_frameCapacity_, v4, 1),
        v0[18] = v5,
        v4,
        !v5))
  {
    int v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    unint64_t v6 = (void *)((uint64_t (*)(id))v2)(objc_msgSend(v5, sel_setFrameLength_, 1));
    v0[19] = v6;
    v0[2] = v0;
    v0[3] = sub_1A6827ECC;
    uint64_t v7 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1A6828038;
    v0[13] = &unk_1E5C69420;
    v0[14] = v7;
    objc_msgSend(v6, sel_scheduleBuffer_completionHandler_, v5, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
}

uint64_t sub_1A6827ECC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  uint64_t v2 = *(void *)(*(void *)v0 + 128);
  return MEMORY[0x1F4188298](sub_1A6827FD4, v2, v1);
}

uint64_t sub_1A6827FD4()
{
  uint64_t v1 = *(void **)(v0 + 152);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A6828038(uint64_t a1)
{
  return MEMORY[0x1F41881F8](*(void *)(a1 + 32));
}

uint64_t sub_1A6828040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  sub_1A6741AD0(&qword_1E96C34C0);
  v4[26] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TTSAURenderer.SpeechBuffer();
  v4[27] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[28] = v6;
  v4[29] = *(void *)(v6 + 64);
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  uint64_t v7 = *(void *)(_s15UtteranceRunnerC14SynthesisStateVMa(0) - 8);
  v4[33] = v7;
  v4[34] = *(void *)(v7 + 64);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  v4[37] = sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v9 = sub_1A68923E0();
  v4[38] = v9;
  v4[39] = v8;
  return MEMORY[0x1F4188298](sub_1A6828220, v9, v8);
}

uint64_t sub_1A6828220()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  sub_1A6741AD0(&qword_1E96C34C8);
  uint64_t v4 = sub_1A680204C();
  *(void *)(v0 + 320) = v4;
  sub_1A683104C(v2, v1, _s15UtteranceRunnerC14SynthesisStateVMa);
  uint64_t v5 = *(void *)(v3 + 16);
  *(void *)(v0 + 328) = v5;
  if (!v5) {
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 200);
  uint64_t v8 = *(void *)(v0 + 176);
  int v9 = *(_DWORD *)(v6 + 80);
  *(_DWORD *)(v0 + 84) = v9;
  *(void *)(v0 + 336) = *(void *)(v6 + 72);
  *(void *)(v0 + 344) = 0;
  uint64_t v10 = *(void *)(v0 + 256);
  uint64_t v11 = v8 + ((v9 + 32) & ~(unint64_t)v9);
  swift_bridgeObjectRetain();
  sub_1A683104C(v11, v10, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  int v12 = *(unsigned __int8 *)(v7 + 281);
  if (v12 == 2)
  {
    (*(void (**)(void))(**(void **)(v0 + 320) + 136))(*(void *)(v0 + 256));
    goto LABEL_7;
  }
  if (v12 != 1)
  {
LABEL_7:
    sub_1A68310B4(*(void *)(v0 + 256), (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v0 + 320);
LABEL_8:
    uint64_t v20 = *(void *)(v0 + 200);
    *(void *)(v0 + 376) = v4;
    *(void *)(v0 + 384) = v20;
    TTSAsyncThrowingChannel.makeAsyncIterator()((void *)(v0 + 152));
    *(void *)(v0 + 392) = OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_receivedFirstBuffer;
    uint64_t v21 = sub_1A6741AD0(&qword_1E96C34D0);
    uint64_t v22 = sub_1A6766A64(&qword_1E96C34D8, &qword_1E96C34D0);
    unint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v23;
    *unint64_t v23 = v0;
    v23[1] = sub_1A6828FC4;
    uint64_t v24 = *(void *)(v0 + 208);
    return MEMORY[0x1F4187C78](v24, v21, v22);
  }
  uint64_t v13 = *(void *)(v0 + 256);
  uint64_t v14 = *(int *)(*(void *)(v0 + 216) + 24);
  os_log_type_t v15 = *(void **)(v13 + v14);
  BOOL v16 = *(unsigned char **)(v0 + 200);
  *(void *)(v0 + 120) = v15;
  *(_OWORD *)(v0 + 128) = xmmword_1A68A5030;
  *(void *)(v0 + 144) = 0;
  id v17 = *(void (**)(uint64_t))(*(void *)v16 + 256);
  id v18 = v15;
  v17(v0 + 120);

  uint64_t v19 = *(void *)(v0 + 256);
  if (v16[280] == 1)
  {
    sub_1A682AE3C(*(void *)(v19 + *(int *)(*(void *)(v0 + 216) + 28)), *(void *)(v0 + 288));
LABEL_15:
    uint64_t v37 = *(void *)(v0 + 304);
    uint64_t v38 = *(void *)(v0 + 312);
    return MEMORY[0x1F4188298](sub_1A6828858, v37, v38);
  }
  uint64_t v25 = *(void *)(v0 + 200);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 320) + 136))(v19);
  if (*(unsigned char *)(v25 + 281) != 1) {
    goto LABEL_15;
  }
  uint64_t v43 = *(void *)(v0 + 280);
  uint64_t v44 = *(void *)(v0 + 288);
  uint64_t v45 = *(void *)(v0 + 264);
  uint64_t v40 = *(void *)(v0 + 248);
  uint64_t v41 = *(void *)(v0 + 256);
  uint64_t v27 = *(void ***)(v0 + 200);
  unint64_t v47 = (*(unsigned __int8 *)(v0 + 84) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 84);
  uint64_t v48 = *(void *)(v0 + 320);
  unint64_t v42 = *(void *)(v0 + 232) + v47;
  uint64_t v28 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v27[3]) + 0x1B0);
  uint64_t v29 = (void *)((uint64_t (*)(uint64_t))v28)(v26);
  uint64_t v30 = *(void **)(v13 + v14);
  id v31 = objc_msgSend(v30, sel_format);
  objc_msgSend(v29, sel_setOutputFormat_, v31);

  uint64_t v32 = (void *)v28();
  objc_msgSend(v32, sel_play);

  uint64_t v33 = ((uint64_t (*)(void))(*v27)[21])();
  *(void *)(v0 + 352) = v33;
  sub_1A683104C(v41, v40, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  sub_1A683104C(v44, v43, _s15UtteranceRunnerC14SynthesisStateVMa);
  unint64_t v34 = (v42 + *(unsigned __int8 *)(v45 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v35 = swift_allocObject();
  *(void *)(v0 + 360) = v35;
  *(void *)(v35 + 16) = v27;
  *(void *)(v35 + 24) = v48;
  sub_1A6831118(v40, v35 + v47, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  sub_1A6831118(v43, v35 + v34, _s15UtteranceRunnerC14SynthesisStateVMa);
  uint64_t v46 = (uint64_t (*)(void *, uint64_t (*)(), uint64_t))(*(void *)(*(void *)v33 + 192)
                                                                          + **(int **)(*(void *)v33 + 192));
  swift_retain();
  swift_retain();
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_1A6828E64;
  return v46(v30, sub_1A6831180, v35);
}

uint64_t sub_1A6828858()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 344) + 1;
  sub_1A68310B4(*(void *)(v0 + 256), (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  if (v2 == v1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(v0 + 200);
    *(void *)(v0 + 376) = *(void *)(v0 + 320);
    *(void *)(v0 + 384) = v7;
    TTSAsyncThrowingChannel.makeAsyncIterator()((void *)(v0 + 152));
    *(void *)(v0 + 392) = OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_receivedFirstBuffer;
    uint64_t v8 = sub_1A6741AD0(&qword_1E96C34D0);
    uint64_t v9 = sub_1A6766A64(&qword_1E96C34D8, &qword_1E96C34D0);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A6828FC4;
    uint64_t v11 = *(void *)(v0 + 208);
    return MEMORY[0x1F4187C78](v11, v8, v9);
  }
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344) + 1;
  *(void *)(v0 + 344) = v4;
  uint64_t v5 = *(void *)(v0 + 200);
  sub_1A683104C(*(void *)(v0 + 176)+ ((*(unsigned __int8 *)(v0 + 84) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 84))+ v3 * v4, *(void *)(v0 + 256), (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  int v6 = *(unsigned __int8 *)(v5 + 281);
  if (v6 != 1)
  {
    if (v6 == 2) {
      (*(void (**)(void))(**(void **)(v0 + 320) + 136))(*(void *)(v0 + 256));
    }
    sub_1A68310B4(*(void *)(v0 + 256), (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v13 = *(int *)(*(void *)(v0 + 216) + 24);
  uint64_t v14 = *(void **)(v12 + v13);
  os_log_type_t v15 = *(unsigned char **)(v0 + 200);
  *(void *)(v0 + 120) = v14;
  *(_OWORD *)(v0 + 128) = xmmword_1A68A5030;
  *(void *)(v0 + 144) = 0;
  BOOL v16 = *(void (**)(uint64_t))(*(void *)v15 + 256);
  id v17 = v14;
  v16(v0 + 120);

  uint64_t v18 = *(void *)(v0 + 256);
  if (v15[280] == 1)
  {
    sub_1A682AE3C(*(void *)(v18 + *(int *)(*(void *)(v0 + 216) + 28)), *(void *)(v0 + 288));
LABEL_15:
    uint64_t v31 = *(void *)(v0 + 304);
    uint64_t v32 = *(void *)(v0 + 312);
    return MEMORY[0x1F4188298](sub_1A6828858, v31, v32);
  }
  uint64_t v19 = *(void *)(v0 + 200);
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 320) + 136))(v18);
  if (*(unsigned char *)(v19 + 281) != 1) {
    goto LABEL_15;
  }
  uint64_t v37 = *(void *)(v0 + 280);
  uint64_t v38 = *(void *)(v0 + 288);
  uint64_t v39 = *(void *)(v0 + 264);
  uint64_t v34 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 256);
  uint64_t v21 = *(void ***)(v0 + 200);
  unint64_t v41 = (*(unsigned __int8 *)(v0 + 84) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 84);
  uint64_t v42 = *(void *)(v0 + 320);
  unint64_t v36 = *(void *)(v0 + 232) + v41;
  uint64_t v22 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v21[3]) + 0x1B0);
  unint64_t v23 = (void *)((uint64_t (*)(uint64_t))v22)(v20);
  uint64_t v24 = *(void **)(v12 + v13);
  id v25 = objc_msgSend(v24, sel_format);
  objc_msgSend(v23, sel_setOutputFormat_, v25);

  uint64_t v26 = (void *)v22();
  objc_msgSend(v26, sel_play);

  uint64_t v27 = ((uint64_t (*)(void))(*v21)[21])();
  *(void *)(v0 + 352) = v27;
  sub_1A683104C(v35, v34, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  sub_1A683104C(v38, v37, _s15UtteranceRunnerC14SynthesisStateVMa);
  unint64_t v28 = (v36 + *(unsigned __int8 *)(v39 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v0 + 360) = v29;
  *(void *)(v29 + 16) = v21;
  *(void *)(v29 + 24) = v42;
  sub_1A6831118(v34, v29 + v41, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  sub_1A6831118(v37, v29 + v28, _s15UtteranceRunnerC14SynthesisStateVMa);
  uint64_t v40 = (uint64_t (*)(void *, uint64_t (*)(), uint64_t))(*(void *)(*(void *)v27 + 192)
                                                                          + **(int **)(*(void *)v27 + 192));
  swift_retain();
  swift_retain();
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v30;
  void *v30 = v0;
  v30[1] = sub_1A6828E64;
  return v40(v24, sub_1A6831180, v29);
}

uint64_t sub_1A6828E64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return MEMORY[0x1F4188298](sub_1A6828858, v3, v2);
}

uint64_t sub_1A6828FC4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2[25])
    {
      swift_getObjectType();
      uint64_t v3 = sub_1A68923E0();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v7 = sub_1A68298C0;
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v6 = v2[38];
    uint64_t v5 = v2[39];
    uint64_t v7 = sub_1A6829118;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_1A6829118()
{
  uint64_t v1 = *(void *)(v0 + 208);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 48))(v1, 1, *(void *)(v0 + 216)) == 1)goto LABEL_10; {
  uint64_t v2 = *(void *)(v0 + 392);
  }
  uint64_t v3 = *(void *)(v0 + 200);
  sub_1A6831118(v1, *(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  if ((*(unsigned char *)(v3 + v2) & 1) == 0)
  {
    uint64_t v4 = *(void *)(v0 + 392);
    uint64_t v5 = *(Swift::String **)(v0 + 200);
    *(void *)(v0 + 16) = 4;
    *(_OWORD *)(v0 + 24) = 0u;
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    *(void *)(v0 + 72) = 0;
    *(unsigned char *)(v0 + 80) = 9;
    TTSSpeechEvent.emit(forJob:)(v5[2]);
    *((unsigned char *)&v5->_countAndFlagsBits + v4) = 1;
  }
  uint64_t v6 = *(unsigned char **)(v0 + 200);
  int v7 = v6[281];
  if (v7 == 2)
  {
    (*(void (**)(void))(**(void **)(v0 + 320) + 136))(*(void *)(v0 + 240));
    goto LABEL_9;
  }
  if (v7 != 1)
  {
LABEL_9:
    sub_1A68310B4(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
LABEL_10:
    uint64_t v13 = *(void *)(v0 + 288);
    swift_release();
    swift_release();
    sub_1A68310B4(v13, _s15UtteranceRunnerC14SynthesisStateVMa);
    int v14 = TTSSpeechUnitTestingMode();
    uint64_t v15 = *(void *)(v0 + 200);
    if (v14)
    {
      uint64_t v16 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v15 + 24)) + 0x210))();
      *(void *)(v0 + 440) = v16;
      unint64_t v17 = (*(void *)v16 + 208) & 0xFFFFFFFFFFFFLL | 0xFC00000000000000;
      *(void *)(v0 + 448) = *(void *)(*(void *)v16 + 208);
      *(void *)(v0 + 456) = v17;
      type metadata accessor for TTSAURenderer();
      sub_1A682ADF4(&qword_1E96C1E88, (void (*)(uint64_t))type metadata accessor for TTSAURenderer);
      uint64_t v18 = sub_1A68923E0();
      uint64_t v20 = v19;
      uint64_t v21 = sub_1A6829C98;
      uint64_t v22 = v18;
      uint64_t v23 = v20;
LABEL_24:
      return MEMORY[0x1F4188298](v21, v22, v23);
    }
    if (*(unsigned char *)(v15 + 281) == 1)
    {
      uint64_t v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 472) = v24;
      void *v24 = v0;
      v24[1] = sub_1A6829F50;
      return sub_1A6827C1C();
    }
    else
    {
      uint64_t v26 = (*(uint64_t (**)(void))(**(void **)(v0 + 320) + 168))();
      size_t v27 = sub_1A682DBD4(v26);
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v28 = *(uint64_t (**)(size_t))(v0 + 8);
      return v28(v27);
    }
  }
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v9 = *(int *)(*(void *)(v0 + 216) + 24);
  uint64_t v10 = *(void **)(v8 + v9);
  *(void *)(v0 + 88) = v10;
  *(_OWORD *)(v0 + 96) = xmmword_1A68A5030;
  *(void *)(v0 + 112) = 0;
  uint64_t v11 = *(void (**)(uint64_t))(*(void *)v6 + 256);
  id v12 = v10;
  v11(v0 + 88);

  if (v6[280] == 1)
  {
    sub_1A682AE3C(*(void *)(*(void *)(v0 + 240) + *(int *)(*(void *)(v0 + 216) + 28)), *(void *)(v0 + 288));
LABEL_23:
    uint64_t v22 = *(void *)(v0 + 304);
    uint64_t v23 = *(void *)(v0 + 312);
    uint64_t v21 = sub_1A6829A34;
    goto LABEL_24;
  }
  uint64_t v29 = *(void *)(v0 + 200);
  uint64_t v30 = (*(uint64_t (**)(void))(**(void **)(v0 + 320) + 136))(*(void *)(v0 + 240));
  if (*(unsigned char *)(v29 + 281) != 1) {
    goto LABEL_23;
  }
  uint64_t v45 = *(void *)(v0 + 280);
  uint64_t v46 = *(void *)(v0 + 288);
  uint64_t v50 = *(void *)(v0 + 320);
  uint64_t v31 = *(void *)(v0 + 248);
  uint64_t v43 = *(void *)(v0 + 240);
  uint64_t v47 = *(void *)(v0 + 232);
  uint64_t v48 = *(void *)(v0 + 264);
  uint64_t v44 = *(void *)(v0 + 224);
  uint64_t v32 = *(void ***)(v0 + 200);
  uint64_t v33 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v32[3]) + 0x1B0);
  uint64_t v34 = (void *)((uint64_t (*)(uint64_t))v33)(v30);
  uint64_t v35 = *(void **)(v8 + v9);
  id v36 = objc_msgSend(v35, sel_format);
  objc_msgSend(v34, sel_setOutputFormat_, v36);

  uint64_t v37 = (void *)v33();
  objc_msgSend(v37, sel_play);

  uint64_t v38 = ((uint64_t (*)(void))(*v32)[21])();
  *(void *)(v0 + 416) = v38;
  sub_1A683104C(v43, v31, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  sub_1A683104C(v46, v45, _s15UtteranceRunnerC14SynthesisStateVMa);
  unint64_t v39 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v40 = (v47 + *(unsigned __int8 *)(v48 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v41 = swift_allocObject();
  *(void *)(v0 + 424) = v41;
  *(void *)(v41 + 16) = v32;
  *(void *)(v41 + 24) = v50;
  sub_1A6831118(v31, v41 + v39, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  sub_1A6831118(v45, v41 + v40, _s15UtteranceRunnerC14SynthesisStateVMa);
  uint64_t v49 = (uint64_t (*)(void *, uint64_t (*)(), uint64_t))(*(void *)(*(void *)v38 + 192)
                                                                          + **(int **)(*(void *)v38 + 192));
  swift_retain();
  swift_retain();
  uint64_t v42 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_1A6829B38;
  return v49(v35, sub_1A6831180, v41);
}

uint64_t sub_1A68298C0()
{
  uint64_t v1 = v0[36];
  v0[21] = v0[51];
  sub_1A6741AD0(&qword_1E96C1520);
  swift_willThrowTypedImpl();
  sub_1A68310B4(v1, _s15UtteranceRunnerC14SynthesisStateVMa);
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[39];
  return MEMORY[0x1F4188298](sub_1A6829968, v2, v3);
}

uint64_t sub_1A6829968()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A6829A34()
{
  sub_1A68310B4(v0[30], (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
  uint64_t v1 = sub_1A6741AD0(&qword_1E96C34D0);
  uint64_t v2 = sub_1A6766A64(&qword_1E96C34D8, &qword_1E96C34D0);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[50] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A6828FC4;
  uint64_t v4 = v0[26];
  return MEMORY[0x1F4187C78](v4, v1, v2);
}

uint64_t sub_1A6829B38()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return MEMORY[0x1F4188298](sub_1A6829A34, v3, v2);
}

uint64_t sub_1A6829C98()
{
  *(void *)(v0 + 464) = (*(uint64_t (**)(void))(v0 + 448))();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  return MEMORY[0x1F4188298](sub_1A6829D0C, v1, v2);
}

uint64_t sub_1A6829D0C()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 464);
  if (v1)
  {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B8]), sel_initWithPCMFormat_frameCapacity_, v1, 1);
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void *)(v0 + 200);
      objc_msgSend(v2, sel_setFrameLength_, 1);
      id v12 = v3;
      long long v13 = xmmword_1A68A5030;
      uint64_t v14 = 0;
      uint64_t v5 = *(void (**)(void **))(*(void *)v4 + 256);
      id v6 = v3;
      v5(&v12);
    }
    else
    {
    }
  }
  if (*(unsigned char *)(*(void *)(v0 + 200) + 281) == 1)
  {
    int v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v7;
    *int v7 = v0;
    v7[1] = sub_1A6829F50;
    return sub_1A6827C1C();
  }
  else
  {
    uint64_t v9 = (*(uint64_t (**)(void))(**(void **)(v0 + 320) + 168))();
    size_t v10 = sub_1A682DBD4(v9);
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(size_t))(v0 + 8);
    return v11(v10);
  }
}

uint64_t sub_1A6829F50()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return MEMORY[0x1F4188298](sub_1A682A070, v3, v2);
}

uint64_t sub_1A682A070()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(*(void *)(v0 + 200) + 24)) + 0x210))();
  unint64_t v3 = (*(uint64_t (**)(void))(v2 + 376))();
  swift_release();
  sub_1A682AE3C(v3, v1);
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 320) + 168))(v4);
  size_t v6 = sub_1A682DBD4(v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v7 = *(uint64_t (**)(size_t))(v0 + 8);
  return v7(v6);
}

void sub_1A682A21C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_playedFirstBuffer;
  if ((*(unsigned char *)(a2 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_playedFirstBuffer) & 1) == 0)
  {
    TTSSpeechEvent.emit(forJob:)(*(Swift::String *)(a2 + 32));
    *(unsigned char *)(a2 + v10) = 1;
  }
  if (a1)
  {
    (*(void (**)(uint64_t))(*(void *)a3 + 152))(a4);
    if (*(unsigned char *)(a2 + 281) == 1)
    {
      uint64_t v11 = type metadata accessor for TTSAURenderer.SpeechBuffer();
      sub_1A682AE3C(*(void *)(a4 + *(int *)(v11 + 28)), a5);
    }
  }
}

uint64_t sub_1A682A308()
{
  v1[6] = v0;
  sub_1A6741AD0(qword_1E96C3440);
  v1[7] = swift_task_alloc();
  uint64_t v2 = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = sub_1A6891CE0();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v5 = sub_1A68923E0();
  v1[14] = v5;
  v1[15] = v4;
  return MEMORY[0x1F4188298](sub_1A682A4A8, v5, v4);
}

uint64_t sub_1A682A4A8()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = sub_1A6748FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  swift_retain();
  uint64_t v5 = sub_1A6891CC0();
  os_log_type_t v6 = sub_1A6892840();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v24 = v0[12];
    uint64_t v25 = v0[11];
    uint64_t v26 = v0[13];
    uint64_t v7 = v0[6];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)size_t v27 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = *(void *)(v7 + 32);
    unint64_t v11 = *(void *)(v7 + 40);
    swift_bridgeObjectRetain();
    v0[5] = sub_1A673F908(v10, v11, (uint64_t *)v27);
    sub_1A6892A50();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A66D3000, v5, v6, "Resuming utterance with id %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v9, -1, -1);
    MEMORY[0x1AD0C1C50](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    uint64_t v13 = v0[12];
    uint64_t v12 = v0[13];
    uint64_t v14 = v0[11];

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[8];
  uint64_t v16 = v0[9];
  unint64_t v17 = (Swift::String *)v0[6];
  uint64_t v18 = v0[7];
  *(_OWORD *)size_t v27 = xmmword_1A68A5040;
  *(_OWORD *)&v27[16] = xmmword_1A689F420;
  (*(void (**)(unsigned char *))(v17->_countAndFlagsBits + 256))(v27);
  *(void *)size_t v27 = 2;
  memset(&v27[8], 0, 56);
  char v28 = 9;
  TTSSpeechEvent.emit(forJob:)(v17[2]);
  uint64_t v19 = (uint64_t)v17 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_suspendedState;
  swift_beginAccess();
  sub_1A675B090(v19, v18, qword_1E96C3440);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15) == 1)
  {
    sub_1A6750210(v0[7], qword_1E96C3440);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  else
  {
    sub_1A6831118(v0[7], v0[10], _s15UtteranceRunnerC14SynthesisStateVMa);
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1A682A878;
    uint64_t v23 = v0[10];
    return sub_1A68238F0(v23);
  }
}

uint64_t sub_1A682A878()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return MEMORY[0x1F4188298](sub_1A682A998, v3, v2);
}

uint64_t sub_1A682A998()
{
  sub_1A68310B4(*(void *)(v0 + 80), _s15UtteranceRunnerC14SynthesisStateVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A682AA2C(uint64_t countAndFlagsBits)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C23B0);
  MEMORY[0x1F4188790](v4 - 8);
  os_log_type_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A6891CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A6748FEC();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  swift_retain();
  uint64_t v12 = sub_1A6891CC0();
  os_log_type_t v13 = sub_1A6892840();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v25 = countAndFlagsBits;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v7;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v28 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v23 = v15 + 4;
    uint64_t v26 = v6;
    countAndFlagsBits = v2[2]._countAndFlagsBits;
    unint64_t object = (unint64_t)v2[2]._object;
    swift_bridgeObjectRetain();
    uint64_t v18 = countAndFlagsBits;
    LOBYTE(countAndFlagsBits) = v25;
    uint64_t v27 = sub_1A673F908(v18, object, &v28);
    sub_1A6892A50();
    swift_release();
    os_log_type_t v6 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A66D3000, v12, v13, "Completed utterance with id %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v16, -1, -1);
    MEMORY[0x1AD0C1C50](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v19 = countAndFlagsBits & 1;
  uint64_t v28 = v19;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v32 = 0;
  char v33 = 6;
  TTSSpeechEvent.emit(forJob:)(v2[2]);
  uint64_t v28 = v19;
  long long v29 = xmmword_1A68A5050;
  *(void *)&long long v30 = 0;
  (*(void (**)(uint64_t *))(v2->_countAndFlagsBits + 256))(&v28);
  sub_1A675B090((uint64_t)v2 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, (uint64_t)v6, &qword_1E96C23B0);
  uint64_t v20 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1) {
    return sub_1A6750210((uint64_t)v6, &qword_1E96C23B0);
  }
  uint64_t v28 = 0;
  sub_1A6892660();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v20);
}

uint64_t sub_1A682ADF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A682AE3C(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C34B0);
  MEMORY[0x1F4188790](v4 - 8);
  os_log_type_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  sub_1A675B090(a2 + *(int *)(v11 + 24), (uint64_t)v6, &qword_1E96C34B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1A6750210((uint64_t)v6, &qword_1E96C34B0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v26 = v8;
  uint64_t v27 = v7;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A6892EB0();
    uint64_t v13 = result;
    if (result) {
      goto LABEL_5;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v13) {
    goto LABEL_26;
  }
LABEL_5:
  if (v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = *(int *)(v27 + 28);
    unint64_t v32 = a1 & 0xC000000000000001;
    uint64_t v33 = v15;
    uint64_t v29 = v28 + 176;
    uint64_t v30 = v13;
    unint64_t v31 = a1;
    while (1)
    {
      id v16 = v32 ? (id)MEMORY[0x1AD0BFD30](v14, a1) : *(id *)(a1 + 8 * v14 + 32);
      unint64_t v17 = v16;
      uint64_t v18 = *(void **)&v10[v33];
      id v19 = v18;
      swift_bridgeObjectRetain();
      sub_1A67F3A00(v18, (uint64_t *)&v36);

      swift_bridgeObjectRelease();
      unsigned int v20 = v37;
      if (v37 != 255) {
        break;
      }

LABEL_8:
      if (v13 == ++v14) {
        goto LABEL_26;
      }
    }
    uint64_t v21 = v36.n128_i64[1];
    uint64_t v22 = v36.n128_u64[0];
    unint64_t v23 = v38;
    if ((_BYTE)v37)
    {
      if (v37 == 1)
      {
        __n128 v34 = v36;
        char v24 = 1;
      }
      else
      {
        if (v37 != 2)
        {
LABEL_21:
          v36.n128_u64[0] = v22;
          v36.n128_u64[1] = v21;
          uint64_t v37 = v20 | 0x2000000000000000;
          unint64_t v38 = v23;
          SpeechSlicer.Slice.handle(event:)((uint64_t *)&v36);
          sub_1A673D228(v29, (uint64_t)&v36);
          if (v39 == 1)
          {
            sub_1A6799B1C(v22, v21, v20);

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1A673FFE4((uint64_t)&v36);
            v36.n128_u64[0] = v22;
            v36.n128_u64[1] = v21;
            uint64_t v37 = v20 | 0x2000000000000000;
            unint64_t v38 = v23;
            (*(void (**)(__n128 *))(*(void *)v28 + 256))(&v36);

            sub_1A6799B1C(v22, v21, v20);
          }
          uint64_t v13 = v30;
          a1 = v31;
          goto LABEL_8;
        }
        __n128 v34 = v36;
        char v24 = 2;
      }
      char v35 = v24;
    }
    else
    {
      __n128 v34 = v36;
      char v35 = 0;
    }
    sub_1A67F39E8(&v34, v38, &v36);
    uint64_t v21 = v36.n128_i64[1];
    uint64_t v22 = v36.n128_u64[0];
    unsigned int v20 = v37;
    unint64_t v23 = v38;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A682B1F8(uint64_t a1)
{
  v2[21] = v1;
  uint64_t v4 = type metadata accessor for SpeechSlicer(0);
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v5 = sub_1A6891A40();
  v2[25] = v5;
  v2[26] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v2[27] = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)a1 + 184) + **(int **)(*(void *)a1 + 184));
  uint64_t v7 = (void *)swift_task_alloc();
  v2[28] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A682B3C4;
  return v9(v6);
}

uint64_t sub_1A682B3C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v3 = sub_1A68923E0();
  *(void *)(v1 + 232) = v3;
  *(void *)(v1 + 240) = v2;
  return MEMORY[0x1F4188298](sub_1A682B530, v3, v2);
}

uint64_t sub_1A682B530()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  sub_1A673E788(v2 + 240, v0 + 120);
  SpeechSlicer.init(speechRoot:)((void *)(v0 + 120), v1);
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v4 = *(void *)(v2 + 64);
  *(void *)(v0 + 248) = v4;
  uint64_t v5 = *(void *)(v2 + 72);
  *(void *)(v0 + 256) = v5;
  uint64_t v6 = *(void *)(v2 + 80);
  *(void *)(v0 + 264) = v6;
  uint64_t v7 = *(void *)(v2 + 88);
  *(void *)(v0 + 272) = v7;
  uint64_t v8 = *(void *)(v2 + 96);
  *(void *)(v0 + 280) = v8;
  uint64_t v9 = *(void *)(v2 + 104);
  *(void *)(v0 + 288) = v9;
  uint64_t v10 = *(void *)(v2 + 112);
  *(void *)(v0 + 296) = v10;
  uint64_t v11 = *(void *)(v2 + 120);
  *(void *)(v0 + 304) = v11;
  uint64_t v12 = *(void *)(v2 + 128);
  *(void *)(v0 + 312) = v12;
  uint64_t v13 = *(void *)(v2 + 136);
  *(void *)(v0 + 320) = v13;
  uint64_t v14 = *(void **)(v2 + 144);
  *(void *)(v0 + 328) = v14;
  uint64_t v15 = *(void *)(v2 + 152);
  *(void *)(v0 + 336) = v15;
  char v16 = *(unsigned char *)(v2 + 164);
  int v17 = *(_DWORD *)(v2 + 160);
  *(_DWORD *)(v0 + 344) = v17;
  *(_DWORD *)(v0 + 112) = v17;
  *(unsigned char *)(v0 + 348) = v16;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v7;
  *(void *)(v0 + 48) = v8;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 64) = v10;
  *(void *)(v0 + 72) = v11;
  *(void *)(v0 + 80) = v12;
  *(void *)(v0 + 88) = v13;
  *(void *)(v0 + 96) = v14;
  *(void *)(v0 + 104) = v15;
  *(unsigned char *)(v0 + 116) = v16;
  sub_1A673D140(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1A682B6B4;
  return SpeechSlicer.slices(synthesizer:utteranceVoice:)(v3, v0 + 16);
}

uint64_t sub_1A682B6B4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 328);
  long long v13 = *(_OWORD *)(*v1 + 312);
  uint64_t v15 = *(void *)(*v1 + 304);
  uint64_t v14 = *(void *)(*v1 + 296);
  uint64_t v4 = *(void *)(*v1 + 288);
  uint64_t v5 = *(void *)(*v1 + 280);
  uint64_t v6 = *(void *)(*v1 + 272);
  uint64_t v7 = *(void *)(*v1 + 264);
  uint64_t v8 = *(void *)(*v1 + 256);
  uint64_t v9 = *(void *)(*v1 + 248);
  *(void *)(*v1 + 360) = a1;
  swift_task_dealloc();
  sub_1A673FF60(v9, v8, v7, v6, v5, v4, v14, v15, v13, *((uint64_t *)&v13 + 1), v3);
  uint64_t v10 = *(void *)(v2 + 240);
  uint64_t v11 = *(void *)(v2 + 232);
  return MEMORY[0x1F4188298](sub_1A682B924, v11, v10);
}

uint64_t sub_1A682B924()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[21];
  v0[20] = v0[45];
  uint64_t v3 = swift_task_alloc();
  v0[46] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[47] = v4;
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C3428);
  uint64_t v6 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v7 = sub_1A6766A64(&qword_1E96C3430, &qword_1E96C3428);
  *uint64_t v4 = v0;
  v4[1] = sub_1A682BA58;
  return sub_1A673ED60((uint64_t)&unk_1E96C3420, v3, v5, v6, v7);
}

uint64_t sub_1A682BA58(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 240);
  uint64_t v4 = *(void *)(v2 + 232);
  return MEMORY[0x1F4188298](sub_1A682BBBC, v4, v3);
}

uint64_t sub_1A682BBBC()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v5 = v0[48];
  return v4(v5);
}

uint64_t sub_1A682BC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t v6 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A682BD28, v6, v5);
}

uint64_t sub_1A682BD28()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = type metadata accessor for SpeechSlicer.Slice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v1, v2, v3);
  uint64_t v4 = sub_1A6891A40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = swift_task_alloc();
  sub_1A6741AD0(&qword_1EB67A238);
  uint64_t v7 = swift_task_alloc();
  if (*(void *)(v2 + 8))
  {
    CoreSynthesizer.Voice.primaryLocale.getter(v7);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  uint64_t v9 = v0[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v7, v8, 1, v4);
  uint64_t v10 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v10, v9, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v6, v10, v4);
    sub_1A6750210(v7, &qword_1EB67A238);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v6, v7, v4);
  }
  uint64_t v11 = *(void *)(v0[7] + 56);
  v0[2] = *(void *)sub_1A673E454();
  v0[3] = v11;
  sub_1A6740A38();
  if (sub_1A6892B10())
  {
    *(void *)(swift_task_alloc() + 16) = v6;
    SpeechSlicer.Slice.transform(block:)((uint64_t (*)(uint64_t, uint64_t))sub_1A6831778);
    swift_task_dealloc();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1A682C080(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1A6750954;
  return sub_1A682BC68(a1, a2, v7, v6);
}

uint64_t sub_1A682C134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a4)
  {
    uint64_t v7 = sub_1A6892000();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  swift_retain();
  v6(a2, a3, v7, v9);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A682C1C8(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_1A682C230(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1A682C230(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1A6891CE0();
  MEMORY[0x1F4188790](v10);
  type metadata accessor for TTSExecutor();
  *(void *)(v4 + 16) = TTSExecutor.__allocating_init()();
  *(unsigned char *)(v4 + 281) = 0;
  uint64_t v11 = v4 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_suspendedState;
  uint64_t v12 = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_receivedFirstBuffer) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_playedFirstBuffer) = 0;
  *(void *)(v5 + 24) = a1;
  sub_1A6798284(a2, v5 + 32);
  *(unsigned char *)(v5 + 280) = a3;
  sub_1A675B090(a4, v5 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, &qword_1E96C23B0);
  sub_1A673D228(a2 + 144, (uint64_t)v47);
  if (!v49)
  {
    uint64_t v29 = v47[0];
    uint64_t v43 = &type metadata for TTSMarkup.SpeechDocument;
    *(void *)&long long v44 = &protocol witness table for TTSMarkup.SpeechDocument;
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v30 + 16;
    *(void *)&long long v41 = v30;
    id v40 = a1;
    swift_bridgeObjectRetain();
    v39[6] = v29;
    TTSMarkup.SpeechDocument.init(ssml:)(v31);
    swift_bridgeObjectRelease();

    sub_1A67982E0(a2);
    sub_1A6750210(a4, &qword_1E96C23B0);
    uint64_t v32 = v5 + 240;
    uint64_t v33 = &v41;
LABEL_6:
    sub_1A673E770(v33, v32);
    return v5;
  }
  if (v49 != 1)
  {
    sub_1A67982E0(a2);
    sub_1A6750210(a4, &qword_1E96C23B0);
    uint64_t v32 = v5 + 240;
    uint64_t v33 = (long long *)v47;
    goto LABEL_6;
  }
  uint64_t v13 = v47[0];
  uint64_t v14 = v47[1];
  char v15 = MEMORY[0x1F4188790](v48);
  v39[-6] = v13;
  v39[-5] = v14;
  v39[-4] = a4;
  LODWORD(v39[-3]) = v16;
  BYTE4(v39[-3]) = v17;
  int v35 = v18;
  char v36 = v19;
  int v37 = v20;
  char v38 = v15;
  uint64_t v43 = &type metadata for TTSMarkup.SpeechDocument;
  *(void *)&long long v44 = &protocol witness table for TTSMarkup.SpeechDocument;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = (void *)(v21 + 16);
  *(void *)&long long v41 = v21;
  id v23 = a1;
  TTSMarkup.SpeechDocument.init(_:)((uint64_t (*)(void))sub_1A682DADC, v22);
  sub_1A673E770(&v41, v5 + 240);
  uint64_t v24 = *(void *)(v5 + 264);
  uint64_t v25 = *(void *)(v5 + 272);
  sub_1A673E63C((void *)(v5 + 240), v24);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
  *(void *)&long long v41 = v13;
  *((void *)&v41 + 1) = v14;
  uint64_t v42 = v26;
  uint64_t v43 = v27;
  long long v44 = 0u;
  long long v45 = 0u;
  char v46 = 1;
  v28._countAndFlagsBits = (*(uint64_t (**)(void))(*(void *)v5 + 184))();
  TTSSpeechEvent.emit(forJob:)(v28);
  swift_bridgeObjectRelease();

  sub_1A67982E0(a2);
  sub_1A67E9768(v41, *((uint64_t *)&v41 + 1), v42, (uint64_t)v43, v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46);
  sub_1A6750210(a4, &qword_1E96C23B0);
  return v5;
}

uint64_t sub_1A682C8C4()
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A682C904(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1AD0C1C50);
  }
  return result;
}

uint64_t sub_1A682C958()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A682C9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v30 = a6;
  unint64_t v29 = a5;
  uint64_t v31 = a7;
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C23B0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  TTSMarkup.SpeechText.init(_:)(a1, a2, &v37);
  long long v33 = v37;
  uint64_t v34 = v38;
  uint64_t v35 = v39;
  sub_1A675B090(a3, (uint64_t)v14, &qword_1E96C23B0);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1A683153C((uint64_t)v14, v16 + v15);
  TTSMarkup.SpeechText.word(_:)((uint64_t)sub_1A68315A4, v16, (uint64_t)&v41);
  swift_release();
  char v17 = (void *)v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  long long v33 = v41;
  uint64_t v34 = v42;
  uint64_t v35 = v43;
  sub_1A675B090(a3, (uint64_t)v14, &qword_1E96C23B0);
  uint64_t v18 = swift_allocObject();
  sub_1A683153C((uint64_t)v14, v18 + v15);
  TTSMarkup.SpeechText.sentence(_:)((uint64_t)sub_1A68315B0, v18, (uint64_t)&v37);
  swift_release();
  char v19 = (void *)v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  long long v33 = v37;
  uint64_t v34 = v38;
  uint64_t v35 = v39;
  sub_1A675B090(a3, (uint64_t)v14, &qword_1E96C23B0);
  uint64_t v20 = swift_allocObject();
  sub_1A683153C((uint64_t)v14, v20 + v15);
  TTSMarkup.SpeechText.paragraph(_:)((uint64_t)sub_1A68316E0, v20, (uint64_t)&v41);
  swift_release();
  uint64_t v21 = (void *)v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v22 = (void *)v41;
  long long v33 = v41;
  uint64_t v34 = v42;
  uint64_t v35 = v43;
  TTSMarkupSpeech.rate(_:)(a4 | ((HIDWORD(a4) & 1) << 32), (uint64_t)&type metadata for TTSMarkup.SpeechText, (uint64_t)&protocol witness table for TTSMarkup.SpeechText, (uint64_t *)&v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v23 = v39;
  uint64_t v24 = v40;
  sub_1A673E63C(&v37, v39);
  TTSMarkupSpeech.pitch(_:)(v29 | ((HIDWORD(v29) & 1) << 32), v23, v24, (uint64_t *)&v33);
  uint64_t v25 = v35;
  uint64_t v26 = v36;
  sub_1A673E63C(&v33, v35);
  TTSMarkupSpeech.volume(_:)(v30 | ((HIDWORD(v30) & 1) << 32), v25, v26, v32);
  static TTSMarkup.SpeechBuilder.buildExpression(_:)(&v41, v32);
  sub_1A6741A24((uint64_t)v32);
  sub_1A6741A24((uint64_t)&v33);
  sub_1A6741A24((uint64_t)&v37);
  static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)&v41, v31);
  return sub_1A6741A24((uint64_t)&v41);
}

uint64_t sub_1A682CD50(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C23B0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A6741AD0((uint64_t *)&unk_1E96C33D8);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A675B090(a4, (uint64_t)v12, &qword_1E96C23B0);
  uint64_t v16 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
  {
    sub_1A6750210((uint64_t)v12, &qword_1E96C23B0);
    uint64_t v18 = sub_1A6741AD0(&qword_1E96C23E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
  }
  else
  {
    v21.n128_u64[0] = a1;
    v21.n128_u64[1] = a2;
    LOBYTE(v22) = a5;
    sub_1A67F39E8(&v21, a3, &v24);
    __n128 v21 = v24;
    uint64_t v22 = v25 | 0x2000000000000000;
    uint64_t v23 = v26;
    sub_1A6892650();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
    uint64_t v19 = sub_1A6741AD0(&qword_1E96C23E8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 0, 1, v19);
  }
  return sub_1A6750210((uint64_t)v15, (uint64_t *)&unk_1E96C33D8);
}

uint64_t CoreSynthesizer.UtteranceRunner.__allocating_init(copy:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1A682FB08(a1);
  swift_release();
  return v2;
}

uint64_t CoreSynthesizer.UtteranceRunner.init(copy:)(uint64_t a1)
{
  uint64_t v1 = sub_1A682FB08(a1);
  swift_release();
  return v1;
}

uint64_t sub_1A682D01C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)a2 + 8)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = v2 == v3;
  }
  unsigned int v6 = v5;
  BOOL v8 = v4 == 1 && v2 == v3;
  BOOL v10 = v4 == 2 && v3 == 0;
  if (*((unsigned char *)a1 + 8) != 1) {
    BOOL v8 = v10;
  }
  if (*((unsigned char *)a1 + 8)) {
    return v8;
  }
  else {
    return v6;
  }
}

uint64_t CoreSynthesizer.UtteranceRunner.deinit()
{
  swift_release();

  sub_1A67982E0(v0 + 32);
  sub_1A6741A24(v0 + 240);
  sub_1A6750210(v0 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_suspendedState, qword_1E96C3440);
  sub_1A6750210(v0 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, &qword_1E96C23B0);
  return v0;
}

uint64_t CoreSynthesizer.UtteranceRunner.__deallocating_deinit()
{
  swift_release();

  sub_1A67982E0(v0 + 32);
  sub_1A6741A24(v0 + 240);
  sub_1A6750210(v0 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_suspendedState, qword_1E96C3440);
  sub_1A6750210(v0 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, &qword_1E96C23B0);

  return swift_deallocClassInstance();
}

uint64_t sub_1A682D170()
{
  uint64_t v0 = type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  uint64_t v1 = sub_1A682ADF4(&qword_1E96C3500, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);

  return TTSActor.unownedExecutor.getter(v0, v1);
}

uint64_t sub_1A682D1E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 184))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A682D230()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1A682D254()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1A682D278()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_1A682D29C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1A682D2C0()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 264) + **(int **)(*(void *)v0 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A6750954;
  return v4();
}

uint64_t sub_1A682D3BC(uint64_t a1, uint64_t a2)
{
  BOOL v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 272) + **(int **)(*(void *)v2 + 272));
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unsigned int v6 = v3;
  v6[1] = sub_1A677B9EC;
  return v8(a1, a2);
}

uint64_t sub_1A682D4D0(uint64_t a1, uint64_t a2)
{
  BOOL v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 280) + **(int **)(*(void *)v2 + 280));
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unsigned int v6 = v3;
  v6[1] = sub_1A677B9EC;
  return v8(a1, a2);
}

uint64_t sub_1A682D5E4(uint64_t a1)
{
  type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
  swift_allocObject();
  uint64_t v2 = sub_1A682FB08(a1);
  swift_release();
  return v2;
}

uint64_t sub_1A682D634()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t sub_1A682D678()
{
  return sub_1A682D6C8(MEMORY[0x1E4F47E88], 0.0, 100.0, -50.0);
}

uint64_t sub_1A682D6A4()
{
  return sub_1A682D6C8(MEMORY[0x1E4F47E78], 1.0, 4.0, 0.125);
}

uint64_t sub_1A682D6C8(uint64_t (*a1)(void), float a2, float a3, float a4)
{
  uint64_t v7 = a1();
  unint64_t v8 = v7;
  if ((v7 & 0x100000000) != 0)
  {
    float v9 = *(float *)&v7;
  }
  else
  {
    float v10 = 0.5;
    if (*(float *)&v7 >= 0.5)
    {
      float v11 = 1.0;
      float v12 = a2;
      float v13 = a3;
    }
    else
    {
      float v10 = 0.0;
      float v11 = 0.5;
      float v12 = a4;
      float v13 = a2;
    }
    float v9 = sub_1A680FC18(v10, v11, v12, v13, *(float *)&v7);
  }
  return LODWORD(v9) | ((HIDWORD(v8) & 1) << 32);
}

void *sub_1A682D764(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A6741AD0(&qword_1E96C34F0);
      float v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      float v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      float v10 = (void *)MEMORY[0x1E4FBC860];
      float v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A682F9FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A682D874(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    float v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C34F8);
  uint64_t v10 = *(void *)(type metadata accessor for SpeechSlicer.Slice(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  float v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1A6892E50();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SpeechSlicer.Slice(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A682F6BC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1A682DADC@<X0>(uint64_t a1@<X8>)
{
  return sub_1A682C9A0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned int *)(v1 + 40) | ((unint64_t)*(unsigned __int8 *)(v1 + 44) << 32), *(unsigned int *)(v1 + 48) | ((unint64_t)*(unsigned __int8 *)(v1 + 52) << 32), *(unsigned int *)(v1 + 56) | ((unint64_t)*(unsigned __int8 *)(v1 + 60) << 32), a1);
}

uint64_t sub_1A682DB2C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for TTSAURenderer.SpeechBuffer() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1A682F6A8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1A682DD28(v6);
  *a1 = v3;
  return result;
}

size_t sub_1A682DBD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1A6741AD0(&qword_1E96C34E0);
  uint64_t v3 = *(void *)(type metadata accessor for TTSAURenderer.SpeechBuffer() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1A682F384(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1A674CF48();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A682DD28(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v134 = type metadata accessor for TTSAURenderer.SpeechBuffer();
  uint64_t v4 = *(void *)(v134 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v134);
  uint64_t v124 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v135 = (uint64_t)&v119 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v131 = (uint64_t)&v119 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v132 = (uint64_t)&v119 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_1A68930D0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_138;
    }
    if (v12) {
      return sub_1A682E7DC(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_146;
  }
  uint64_t v120 = result;
  uint64_t v128 = v4;
  if (v12 < 2)
  {
    unint64_t v18 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v126 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v119 = MEMORY[0x1E4FBC860];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_104:
      uint64_t v112 = v18;
      if (v20 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_133;
          }
          if (!v113) {
            goto LABEL_145;
          }
          uint64_t v115 = *(void *)&v112[16 * v114 + 32];
          uint64_t v116 = *(void *)&v112[16 * v20 + 24];
          sub_1A682EAA0(v113 + *(void *)(v128 + 72) * v115, v113 + *(void *)(v128 + 72) * *(void *)&v112[16 * v20 + 16], v113 + *(void *)(v128 + 72) * v116, v126);
          if (v2) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v112 = sub_1A6779854((uint64_t)v112);
          }
          if (v114 >= *((void *)v112 + 2)) {
            goto LABEL_135;
          }
          uint64_t v117 = &v112[16 * v114 + 32];
          *(void *)uint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v112 + 2);
          if (v20 > v118) {
            goto LABEL_136;
          }
          memmove(&v112[16 * v20 + 16], &v112[16 * v20 + 32], 16 * (v118 - v20));
          *((void *)v112 + 2) = v118 - 1;
          unint64_t v20 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v119 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1A6892340();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v119 = v16;
    unint64_t v126 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  unint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v127 = a1;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v125 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v30 = v19 + 1;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v24 = *(void *)(v128 + 72);
      uint64_t v25 = *a1 + v24 * v22;
      uint64_t v137 = v24;
      sub_1A683104C(v25, v132, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      uint64_t v136 = v12;
      uint64_t v26 = v131;
      sub_1A683104C(v23 + v24 * v21, v131, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      uint64_t v27 = *(int *)(v134 + 20);
      uint64_t v28 = v132;
      LODWORD(v133) = *(_DWORD *)(v132 + v27);
      LODWORD(v130) = *(_DWORD *)(v26 + v27);
      uint64_t v29 = v26;
      uint64_t v12 = v136;
      sub_1A68310B4(v29, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      sub_1A68310B4(v28, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      uint64_t v30 = v21 + 2;
      uint64_t v129 = v23;
      if (v21 + 2 < v12)
      {
        id v121 = v18;
        uint64_t v122 = v2;
        uint64_t v31 = v137 * v22;
        uint64_t v32 = v23;
        uint64_t v33 = v137 * v30;
        while (1)
        {
          uint64_t v34 = v30;
          int v35 = v133 < v130;
          uint64_t v36 = v132;
          sub_1A683104C(v32 + v33, v132, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          uint64_t v37 = v131;
          sub_1A683104C(v32 + v31, v131, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          int v38 = *(_DWORD *)(v36 + *(int *)(v134 + 20)) >= *(_DWORD *)(v37 + *(int *)(v134 + 20));
          sub_1A68310B4(v37, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          sub_1A68310B4(v36, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          if (v35 == v38) {
            break;
          }
          ++v30;
          v32 += v137;
          if (v136 == v34 + 1)
          {
            uint64_t v12 = v136;
            uint64_t v30 = v136;
            a1 = v127;
            unint64_t v18 = v121;
            uint64_t v2 = v122;
            goto LABEL_23;
          }
        }
        a1 = v127;
        unint64_t v18 = v121;
        uint64_t v2 = v122;
        uint64_t v12 = v136;
LABEL_23:
        uint64_t v23 = v129;
      }
      uint64_t v21 = v125;
      if (v133 < v130)
      {
        if (v30 < v125) {
          goto LABEL_139;
        }
        if (v125 < v30)
        {
          id v121 = v18;
          uint64_t v122 = v2;
          uint64_t v39 = 0;
          uint64_t v40 = v137;
          uint64_t v41 = v137 * (v30 - 1);
          uint64_t v42 = v30 * v137;
          uint64_t v43 = v125;
          uint64_t v44 = v125 * v137;
          do
          {
            if (v43 != v30 + v39 - 1)
            {
              if (!v23) {
                goto LABEL_144;
              }
              sub_1A6831118(v23 + v44, v124, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
              if (v44 < v41 || v23 + v44 >= (unint64_t)(v23 + v42))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v44 != v41)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1A6831118(v124, v23 + v41, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
              uint64_t v23 = v129;
              uint64_t v40 = v137;
            }
            ++v43;
            --v39;
            v41 -= v40;
            v42 -= v40;
            v44 += v40;
          }
          while (v43 < v30 + v39);
          unint64_t v18 = v121;
          uint64_t v2 = v122;
          a1 = v127;
          uint64_t v21 = v125;
          uint64_t v12 = v136;
        }
      }
    }
    if (v30 < v12)
    {
      if (__OFSUB__(v30, v21)) {
        goto LABEL_137;
      }
      if (v30 - v21 < v120) {
        break;
      }
    }
LABEL_56:
    if (v30 < v21) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v133 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v18 = sub_1A6779758(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v62 = *((void *)v18 + 2);
    unint64_t v61 = *((void *)v18 + 3);
    unint64_t v20 = v62 + 1;
    if (v62 >= v61 >> 1) {
      unint64_t v18 = sub_1A6779758((char *)(v61 > 1), v62 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    os_log_type_t v63 = v18 + 32;
    BOOL v64 = &v18[16 * v62 + 32];
    uint64_t v65 = v133;
    *(void *)BOOL v64 = v21;
    *((void *)v64 + 1) = v65;
    if (v62)
    {
      while (1)
      {
        unint64_t v66 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v71 = &v63[16 * v20];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_121;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_122;
          }
          unint64_t v78 = v20 - 2;
          uint64_t v79 = &v63[16 * v20 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_124;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_127;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v63[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_131;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v95 = *((void *)v18 + 4);
            uint64_t v96 = *((void *)v18 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_87;
          }
          uint64_t v68 = *((void *)v18 + 4);
          uint64_t v67 = *((void *)v18 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_123;
        }
        unint64_t v78 = v20 - 2;
        id v84 = &v63[16 * v20 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_126;
        }
        id v90 = &v63[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_129;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_130;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_93:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v89) {
          goto LABEL_125;
        }
        uint64_t v97 = &v63[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_128;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v127) {
          goto LABEL_143;
        }
        uint64_t v106 = v18;
        uint64_t v107 = &v63[16 * v105];
        uint64_t v108 = *(void *)v107;
        uint64_t v109 = &v63[16 * v66];
        uint64_t v110 = *((void *)v109 + 1);
        sub_1A682EAA0(*v127 + *(void *)(v128 + 72) * *(void *)v107, *v127 + *(void *)(v128 + 72) * *(void *)v109, *v127 + *(void *)(v128 + 72) * v110, v126);
        if (v2) {
          goto LABEL_115;
        }
        if (v110 < v108) {
          goto LABEL_118;
        }
        if (v66 > *((void *)v106 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v107 = v108;
        *(void *)&v63[16 * v105 + 8] = v110;
        unint64_t v111 = *((void *)v106 + 2);
        if (v66 >= v111) {
          goto LABEL_120;
        }
        unint64_t v18 = v106;
        unint64_t v20 = v111 - 1;
        memmove(&v63[16 * v66], v109 + 16, 16 * (v111 - 1 - v66));
        *((void *)v106 + 2) = v111 - 1;
        if (v111 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    a1 = v127;
    uint64_t v12 = v127[1];
    uint64_t v19 = v133;
    if (v133 >= v12) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v21, v120)) {
    goto LABEL_140;
  }
  if (v21 + v120 >= v12) {
    uint64_t v45 = v12;
  }
  else {
    uint64_t v45 = v21 + v120;
  }
  if (v45 >= v21)
  {
    if (v30 != v45)
    {
      id v121 = v18;
      uint64_t v122 = v2;
      uint64_t v46 = *(void *)(v128 + 72);
      uint64_t v47 = v46 * (v30 - 1);
      uint64_t v129 = v46;
      uint64_t v48 = v30 * v46;
      uint64_t v123 = v45;
      do
      {
        uint64_t v50 = 0;
        uint64_t v133 = v30;
        uint64_t v130 = v48;
        while (1)
        {
          uint64_t v136 = v21;
          uint64_t v51 = *a1;
          uint64_t v52 = v48 + v50 + *a1;
          uint64_t v53 = v132;
          sub_1A683104C(v52, v132, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          uint64_t v54 = v47;
          uint64_t v55 = v47 + v50 + v51;
          uint64_t v56 = v131;
          sub_1A683104C(v55, v131, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          uint64_t v57 = *(int *)(v134 + 20);
          LODWORD(v137) = *(_DWORD *)(v53 + v57);
          LODWORD(v51) = *(_DWORD *)(v56 + v57);
          sub_1A68310B4(v56, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          sub_1A68310B4(v53, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          if (v137 >= v51) {
            break;
          }
          uint64_t v58 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          uint64_t v48 = v130;
          uint64_t v47 = v54;
          uint64_t v59 = v58 + v54 + v50;
          sub_1A6831118(v58 + v130 + v50, v135, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          swift_arrayInitWithTakeFrontToBack();
          sub_1A6831118(v135, v59, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          v50 -= v129;
          uint64_t v21 = v136 + 1;
          uint64_t v49 = v133;
          if (v133 == v136 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v49 = v133;
        uint64_t v47 = v54;
        uint64_t v48 = v130;
LABEL_49:
        uint64_t v30 = v49 + 1;
        v47 += v129;
        v48 += v129;
        uint64_t v21 = v125;
      }
      while (v30 != v123);
      uint64_t v30 = v123;
      unint64_t v18 = v121;
      uint64_t v2 = v122;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1A6892E50();
  __break(1u);
  return result;
}

uint64_t sub_1A682E7DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v34 = a1;
  uint64_t v41 = type metadata accessor for TTSAURenderer.SpeechBuffer();
  uint64_t v7 = MEMORY[0x1F4188790](v41);
  uint64_t v42 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v37 = (uint64_t)&v32 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v36 = (uint64_t)&v32 - v13;
  uint64_t v40 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v40 - 1);
    uint64_t v38 = v14;
    uint64_t v16 = v14 * v40;
    int v35 = a4;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v34;
    uint64_t v39 = v16;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v16 + v17 + *a4;
      uint64_t v21 = v36;
      sub_1A683104C(v20, v36, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      uint64_t v22 = v15 + v17 + v19;
      uint64_t v23 = v15;
      uint64_t v24 = v37;
      sub_1A683104C(v22, v37, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      uint64_t v25 = *(int *)(v41 + 20);
      unsigned int v43 = *(_DWORD *)(v21 + v25);
      unsigned int v26 = *(_DWORD *)(v24 + v25);
      uint64_t v27 = v24;
      uint64_t v15 = v23;
      sub_1A68310B4(v27, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      uint64_t v28 = v21;
      uint64_t v16 = v39;
      uint64_t result = sub_1A68310B4(v28, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      BOOL v29 = v43 >= v26;
      a4 = v35;
      if (v29)
      {
LABEL_4:
        uint64_t v15 = v23 + v38;
        v16 += v38;
        if (++v40 == v33) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v30 = *v35;
      if (!*v35) {
        break;
      }
      uint64_t v31 = v30 + v23 + v17;
      sub_1A6831118(v30 + v16 + v17, v42, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1A6831118(v42, v31, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
      v17 -= v38;
      if (v40 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A682EAA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTSAURenderer.SpeechBuffer();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v51 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v44 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v18;
      unint64_t v52 = a4 + v18;
      unint64_t v54 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v13;
        unint64_t v48 = a4;
        unint64_t v45 = a1;
        uint64_t v46 = v8;
        uint64_t v34 = (uint64_t)v50;
        do
        {
          unint64_t v49 = a3 + v33;
          sub_1A683104C(v31 + v33, v34, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          unint64_t v35 = a2 + v33;
          uint64_t v36 = v51;
          sub_1A683104C(a2 + v33, v51, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          uint64_t v37 = *(int *)(v8 + 20);
          unsigned int v38 = *(_DWORD *)(v34 + v37);
          unsigned int v39 = *(_DWORD *)(v36 + v37);
          sub_1A68310B4(v36, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          sub_1A68310B4(v34, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
          if (v38 >= v39)
          {
            unint64_t v42 = v52;
            v52 += v33;
            unint64_t v40 = v49;
            if (a3 < v42 || v49 >= v42)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v35 = a2;
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != v42) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v35 = a2;
            }
          }
          else
          {
            unint64_t v40 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v54 += v33;
          }
          unint64_t v31 = v52;
          if (v52 <= v41) {
            break;
          }
          a2 = v35;
          a3 = v40;
        }
        while (v35 > v45);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v49 = a4 + v17;
    unint64_t v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v47 = a3;
      uint64_t v20 = (uint64_t)v50;
      do
      {
        sub_1A683104C(a2, v20, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
        uint64_t v21 = v51;
        sub_1A683104C(a4, v51, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
        uint64_t v22 = *(int *)(v8 + 20);
        unsigned int v23 = *(_DWORD *)(v20 + v22);
        unsigned int v24 = *(_DWORD *)(v21 + v22);
        sub_1A68310B4(v21, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
        sub_1A68310B4(v20, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
        unint64_t v25 = v54;
        if (v23 >= v24)
        {
          unint64_t v29 = v53 + v13;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 != v53) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v53 = v29;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v13;
          if (v54 < a2 || v54 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 == a2) {
              unint64_t v25 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v54 = v25 + v13;
        a4 = v53;
        if (v53 >= v49) {
          break;
        }
        a2 = v26;
      }
      while (v26 < v28);
    }
LABEL_66:
    sub_1A682F004(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A682F004(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for TTSAURenderer.SpeechBuffer();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1A6892F00();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_1A682F144(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C34E0);
  uint64_t v10 = *(void *)(type metadata accessor for TTSAURenderer.SpeechBuffer() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for TTSAURenderer.SpeechBuffer() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A682F384(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTSAURenderer.SpeechBuffer();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8);
  unint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_1A683104C(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
    sub_1A6831118((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
    uint64_t result = sub_1A6831118((uint64_t)v15, a2, (uint64_t (*)(void))type metadata accessor for TTSAURenderer.SpeechBuffer);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A682F6A8(void *a1)
{
  return sub_1A682F144(0, a1[2], 0, a1);
}

uint64_t sub_1A682F6BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for SpeechSlicer.Slice(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A682F814(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1A682D874(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for SpeechSlicer.Slice(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A682F9FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1A6741AD0(&qword_1E96C1520);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A682FB08(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for TTSExecutor();
  *(void *)(v1 + 16) = TTSExecutor.__allocating_init()();
  *(unsigned char *)(v1 + 281) = 0;
  uint64_t v4 = v1 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_suspendedState;
  uint64_t v5 = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_receivedFirstBuffer) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_playedFirstBuffer) = 0;
  unint64_t v6 = *(void **)(a1 + 24);
  *(void *)(v2 + 24) = v6;
  sub_1A6798284(a1 + 32, v2 + 32);
  *(unsigned char *)(v2 + 280) = *(unsigned char *)(a1 + 280);
  sub_1A675B090(a1 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, v2 + OBJC_IVAR____TtCC12TextToSpeech15CoreSynthesizer15UtteranceRunner_eventContinuation, &qword_1E96C23B0);
  sub_1A673E788(a1 + 240, v2 + 240);
  id v7 = v6;
  return v2;
}

uint64_t sub_1A682FBFC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A682ADF4(&qword_1E96C3460, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  uint64_t result = sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A682FC80(uint64_t a1)
{
  uint64_t result = sub_1A682ADF4(&qword_1E96C33E8, (void (*)(uint64_t))type metadata accessor for CoreSynthesizer.UtteranceRunner);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for SpeechError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SpeechError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SpeechError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeechError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SpeechError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeechError()
{
  return &type metadata for SpeechError;
}

uint64_t sub_1A682FE2C()
{
  return type metadata accessor for CoreSynthesizer.UtteranceRunner(0);
}

void sub_1A682FE34()
{
  sub_1A6830FA0(319, &qword_1E96C34A0, (void (*)(uint64_t))_s15UtteranceRunnerC14SynthesisStateVMa);
  if (v0 <= 0x3F)
  {
    sub_1A6830364();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for CoreSynthesizer.UtteranceRunner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreSynthesizer.UtteranceRunner);
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.priority.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.behavior.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.isoPrioritizedBehavior.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.run()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 264) + **(int **)(*(void *)v0 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  return v4();
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.stop(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 272) + **(int **)(*(void *)v2 + 272));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1A677B9EC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.suspend(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 280) + **(int **)(*(void *)v2 + 280));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1A677B9EC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of CoreSynthesizer.UtteranceRunner.__allocating_init(copy:)()
{
  return (*(uint64_t (**)(void))(v0 + 424))();
}

void sub_1A6830364()
{
  if (!qword_1E96C34A8)
  {
    sub_1A6750AC4(&qword_1E96C23C0);
    unint64_t v0 = sub_1A6892A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E96C34A8);
    }
  }
}

unsigned char *_s15UtteranceRunnerC5StateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A683048CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15UtteranceRunnerC5StateOMa()
{
  return &_s15UtteranceRunnerC5StateON;
}

uint64_t *sub_1A68304C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = type metadata accessor for SpeechSlicer.Slice(0);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_1A6741AD0(&qword_1E96C34B0);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1A6830674(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1A683074C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_1A6741AD0(&qword_1E96C34B0);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A68308A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1A6741AD0(&qword_1E96C34B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1A6830A74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1A6741AD0(&qword_1E96C34B0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_1A6830BA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1A6741AD0(&qword_1E96C34B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A6830D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A6830D6C);
}

uint64_t sub_1A6830D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A6741AD0(&qword_1E96C34B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A6830E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A6830E34);
}

uint64_t sub_1A6830E34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A6741AD0(&qword_1E96C34B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A6830EE0()
{
  sub_1A6830FA0(319, &qword_1E96C34B8, (void (*)(uint64_t))type metadata accessor for SpeechSlicer.Slice);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A6830FA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A6892A00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1A6830FF8()
{
  unint64_t result = qword_1E96D10B0[0];
  if (!qword_1E96D10B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D10B0);
  }
  return result;
}

uint64_t sub_1A683104C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A68310B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A6831118(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A6831188()
{
  uint64_t v1 = (int *)(type metadata accessor for TTSAURenderer.SpeechBuffer() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = _s15UtteranceRunnerC14SynthesisStateVMa(0);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v9 = v0 + v3;
  uint64_t v10 = sub_1A6891800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v7 + *(int *)(v5 + 24);
  uint64_t v12 = type metadata accessor for SpeechSlicer.Slice(0);
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v7 + v8, v2 | v6 | 7);
}

void sub_1A68313A4(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTSAURenderer.SpeechBuffer() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(_s15UtteranceRunnerC14SynthesisStateVMa(0) - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_1A682A21C(a1, v7, v8, v1 + v4, v9);
}

unint64_t sub_1A683147C()
{
  unint64_t result = qword_1E96C34E8;
  if (!qword_1E96C34E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C34E8);
  }
  return result;
}

uint64_t sub_1A68314D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(qword_1E96C3440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A683153C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C23B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A68315A4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1A68316E8(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_1A68315B0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1A68316E8(a1, a2, a3, a4, a5, 1);
}

uint64_t sub_1A68315BC()
{
  uint64_t v1 = *(void *)(sub_1A6741AD0(&qword_1E96C23B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C23C0);
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1A68316E0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1A68316E8(a1, a2, a3, a4, a5, 2);
}

uint64_t sub_1A68316E8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v11 = *(void *)(sub_1A6741AD0(&qword_1E96C23B0) - 8);
  return sub_1A682CD50(a1, a2, a5, v6 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a6);
}

void *sub_1A6831778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_1A6891FD0();
  sub_1A6891860();
  uint64_t v7 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v4;
  v8[3] = a1;
  v8[4] = a2;
  v13[4] = sub_1A6831980;
  v13[5] = v8;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1A682C134;
  v13[3] = &unk_1EFB83140;
  uint64_t v9 = _Block_copy(v13);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v5, sel_enumerateEmojiCharactersInString_languageCode_withBlock_, v6, v7, v9);
  _Block_release(v9);

  swift_beginAccess();
  uint64_t v10 = *(void **)(v4 + 16);
  id v11 = v10;
  swift_release();
  return v10;
}

uint64_t sub_1A6831908()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A6831940()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1A6831980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v7 = (id *)(*(void *)(v4 + 16) + 16);
    swift_beginAccess();
    if (!*v7)
    {
      id v8 = objc_allocWithZone((Class)TTSSpeechString);
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1A6891FD0();
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v8, sel_initWithSSMLString_, v9);

      swift_beginAccess();
      id v11 = *v7;
      *uint64_t v7 = v10;
    }
    swift_beginAccess();
    if (*v7)
    {
      id v12 = *v7;
      uint64_t v13 = (void *)sub_1A6891FD0();
      objc_msgSend(v12, sel_transformRange_to_, a1, a2, v13);
    }
  }
}

uint64_t sub_1A6831AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A6831AD0()
{
  return swift_release();
}

uint64_t _s15UtteranceRunnerC10RetryStateOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s15UtteranceRunnerC10RetryStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A6831B64(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1A6831B7C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s15UtteranceRunnerC10RetryStateOMa()
{
  return &_s15UtteranceRunnerC10RetryStateON;
}

uint64_t sub_1A6831BA8()
{
  type metadata accessor for AttributeUtilities();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1A6831CC0(MEMORY[0x1E4FBC860]);
  sub_1A6741AD0(&qword_1E96C1678);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  *(void *)(v0 + 24) = result;
  qword_1E96D6240 = v0;
  return result;
}

uint64_t sub_1A6831C10()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1A6831CC0(MEMORY[0x1E4FBC860]);
  sub_1A6741AD0(&qword_1E96C1678);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t *sub_1A6831C74()
{
  if (qword_1E96D11C0 != -1) {
    swift_once();
  }
  return &qword_1E96D6240;
}

unint64_t sub_1A6831CC0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A6741AD0(&qword_1E96C3508);
  uint64_t v2 = (void *)sub_1A6892EF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1A673F7AC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 16 * result);
    *id v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A6831DDC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1A6831E00()
{
  sub_1A6892C40();
  swift_bridgeObjectRelease();
  sub_1A6741AD0(&qword_1E96C15A0);
  sub_1A67DF458();
  sub_1A6891F70();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  id v0 = sub_1A6832614(0xD00000000000001BLL, 0x80000001A68CFB50);
  swift_bridgeObjectRelease();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1A68921D0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_firstMatchInString_options_range_, v1, 0, 0, v2);

  if (!v3) {
    return 0;
  }
  int v4 = (void *)sub_1A6891FD0();
  objc_msgSend(v3, sel_rangeWithName_, v4);

  sub_1A6892810();
  if ((v5 & 1) != 0
    || (uint64_t v6 = (void *)sub_1A6891FD0(),
        objc_msgSend(v3, sel_rangeWithName_, v6),
        v6,
        sub_1A6892810(),
        (v7 & 1) != 0))
  {

    return 0;
  }
  uint64_t v8 = sub_1A6892240();
  uint64_t v9 = MEMORY[0x1AD0BF180](v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1A6892240();
  MEMORY[0x1AD0BF180](v12);
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  if ((v11 & 0x1000000000000000) != 0 || !(v11 & 0x2000000000000000 | v9 & 0x1000000000000000))
  {
    sub_1A6892C30();
LABEL_11:

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  MEMORY[0x1F4188790](v14);
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0)
    {
      uint64_t v15 = (v11 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v16 = v9 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v15 = sub_1A6892CD0();
    }
    char v20 = sub_1A676A450(v15, v16, (void (*)(uint64_t *__return_ptr))sub_1A6832E44) & 1;
    goto LABEL_11;
  }
  BOOL v19 = (v9 > 0x20u || ((0x100003E01uLL >> v9) & 1) == 0)
     && (uint64_t v18 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
     && *v18 == 0;
  char v20 = v19;

  swift_bridgeObjectRelease();
LABEL_21:
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 0;
}

uint64_t sub_1A68321F8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1A683221C()
{
  sub_1A6892C40();
  swift_bridgeObjectRelease();
  sub_1A6741AD0(&qword_1E96C15A0);
  sub_1A67DF458();
  sub_1A6891F70();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  sub_1A6892150();
  id v0 = sub_1A6832614(0xD000000000000021, 0x80000001A68CFB20);
  swift_bridgeObjectRelease();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1A68921D0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_firstMatchInString_options_range_, v1, 0, 0, v2);

  if (!v3) {
    return 0;
  }
  int v4 = (void *)sub_1A6891FD0();
  objc_msgSend(v3, sel_rangeWithName_, v4);

  sub_1A6892810();
  if ((v5 & 1) != 0
    || (uint64_t v6 = (void *)sub_1A6891FD0(),
        objc_msgSend(v3, sel_rangeWithName_, v6),
        v6,
        sub_1A6892810(),
        (v7 & 1) != 0))
  {

    return 0;
  }
  uint64_t v8 = sub_1A6892240();
  uint64_t v9 = MEMORY[0x1AD0BF180](v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1A6892240();
  MEMORY[0x1AD0BF180](v12);
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  if ((v11 & 0x1000000000000000) != 0 || !(v11 & 0x2000000000000000 | v9 & 0x1000000000000000))
  {
    sub_1A6892C30();
LABEL_11:

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  MEMORY[0x1F4188790](v14);
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0)
    {
      uint64_t v15 = (v11 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v16 = v9 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v15 = sub_1A6892CD0();
    }
    char v20 = sub_1A676A450(v15, v16, (void (*)(uint64_t *__return_ptr))sub_1A6832E44) & 1;
    goto LABEL_11;
  }
  BOOL v19 = (v9 > 0x20u || ((0x100003E01uLL >> v9) & 1) == 0)
     && (uint64_t v18 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
     && *v18 == 0;
  char v20 = v19;

  swift_bridgeObjectRelease();
LABEL_21:
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 0;
}

id sub_1A6832614(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(os_unfair_lock_s **)(v2 + 24);
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 16);
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1A673F7AC(a1, a2);
    if (v9)
    {
      id v10 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
      id v11 = v10;
    }
    else
    {
      id v10 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = 0;
  }
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  if (!v10)
  {
    id v12 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    swift_bridgeObjectRetain();
    id v10 = sub_1A67BACE4(a1, a2, 1);
    if (v10)
    {
      uint64_t v13 = *(os_unfair_lock_s **)(v3 + 24);
      swift_retain();
      os_unfair_lock_lock(v13 + 4);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      id v14 = v10;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *(void *)(v3 + 16);
      *(void *)(v3 + 16) = 0x8000000000000000;
      sub_1A6832B14((uint64_t)v14, a1, a2, isUniquelyReferenced_nonNull_native);
      *(void *)(v3 + 16) = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      os_unfair_lock_unlock(v13 + 4);
      swift_release();
    }
  }
  return v10;
}

uint64_t sub_1A68327E4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A6832824(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C3508);
  char v38 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v14);
    if (!v24)
    {
      int64_t v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v36;
        if ((v38 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v14 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v14 >= v11) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v37 + 8 * v14);
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    int64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    int64_t v29 = *(void **)(*(void *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v30 = v29;
    }
    sub_1A6893200();
    sub_1A68920F0();
    uint64_t result = sub_1A6893250();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v17 == v32;
        if (v17 == v32) {
          unint64_t v17 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v17);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    BOOL v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    void *v19 = v28;
    v19[1] = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1A6832B14(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A673F7AC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A6832C90();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      unint64_t v20 = *(void **)(v19 + 8 * v12);
      *(void *)(v19 + 8 * v12) = a1;

      return;
    }
    goto LABEL_13;
  }
  sub_1A6832824(v15, a4 & 1);
  unint64_t v21 = sub_1A673F7AC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    sub_1A6893150();
    __break(1u);
    return;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v26;

  swift_bridgeObjectRetain();
}

id sub_1A6832C90()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C3508);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    if (!v23) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

unsigned char *sub_1A6832E2C@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A676A4B0(a1, a2);
}

void *sub_1A6832E44@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A676A520(a1);
}

uint64_t type metadata accessor for AttributeUtilities()
{
  return self;
}

uint64_t destroy for AttributeUtilities.NumericAttributeParseResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12TextToSpeech18AttributeUtilitiesC27NumericAttributeParseResultVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AttributeUtilities.NumericAttributeParseResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AttributeUtilities.NumericAttributeParseResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributeUtilities.NumericAttributeParseResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributeUtilities.NumericAttributeParseResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributeUtilities.NumericAttributeParseResult()
{
  return &type metadata for AttributeUtilities.NumericAttributeParseResult;
}

unint64_t sub_1A6832FE4()
{
  unint64_t result = qword_1E96C15E0;
  if (!qword_1E96C15E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E96C15E0);
  }
  return result;
}

uint64_t TTSExecutor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1A6832FE4();
  uint64_t v1 = sub_1A6891E10();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1A6891E00();
  uint64_t v2 = sub_1A6892950();
  MEMORY[0x1F4188790](v2);
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1A68337FC(&qword_1E96C15D8, MEMORY[0x1F41AB1B0]);
  sub_1A6741AD0(&qword_1E96C15C8);
  sub_1A67EB220(&qword_1E96C15D0, &qword_1E96C15C8);
  sub_1A6892B90();
  uint64_t v3 = sub_1A68928A0();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC60]);
  *(void *)(v0 + 16) = sub_1A6892960();
  return v0;
}

uint64_t TTSExecutor.init()()
{
  sub_1A6832FE4();
  uint64_t v1 = sub_1A6891E10();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1A6891E00();
  uint64_t v2 = sub_1A6892950();
  MEMORY[0x1F4188790](v2);
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1A68337FC(&qword_1E96C15D8, MEMORY[0x1F41AB1B0]);
  sub_1A6741AD0(&qword_1E96C15C8);
  sub_1A67EB220(&qword_1E96C15D0, &qword_1E96C15C8);
  sub_1A6892B90();
  uint64_t v3 = sub_1A68928A0();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC60]);
  *(void *)(v0 + 16) = sub_1A6892960();
  return v0;
}

uint64_t TTSExecutor.enqueue(_:)()
{
  uint64_t v1 = sub_1A6892450();
  v13[0] = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  aBlock[4] = sub_1A683374C;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A677469C;
  aBlock[3] = &unk_1EFB80938;
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = sub_1A6891E10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1A6891DF0();
  uint64_t v8 = sub_1A6891DE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = MEMORY[0x1E4FBC860];
  sub_1A68337FC((unint64_t *)&qword_1E96C1600, MEMORY[0x1F41AAF20]);
  sub_1A6741AD0(&qword_1E96C1618);
  sub_1A67EB220((unint64_t *)&unk_1E96C1620, &qword_1E96C1618);
  sub_1A6892B90();
  MEMORY[0x1AD0BF980](0, v7, v11, v3);
  _Block_release(v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_1A6833714()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A683374C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = sub_1A6833F28((unint64_t *)&qword_1E96C16A0);

  return MEMORY[0x1F4188240](v1, v2, v3);
}

uint64_t TTSExecutor.asUnownedTaskExecutor()()
{
  sub_1A6833F28((unint64_t *)&qword_1E96C16A0);
  return v0;
}

uint64_t sub_1A68337E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A68337F4()
{
  return swift_release();
}

uint64_t sub_1A68337FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TTSExecutor()
{
  return self;
}

uint64_t TTSExecutor.asUnownedSerialExecutor()()
{
  return sub_1A6892980();
}

uint64_t TTSExecutor.deinit()
{
  return v0;
}

uint64_t TTSExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A68338E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A6833914(a1, a2, a3, MEMORY[0x1E4FBCF60]);
}

uint64_t sub_1A68338FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A6833914(a1, a2, a3, MEMORY[0x1E4FBCF70]);
}

uint64_t sub_1A6833914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1A6833F28(&qword_1E96C1698);

  return a4(a1, v6, v7);
}

uint64_t sub_1A68339B8()
{
  return v0;
}

uint64_t sub_1A68339C0()
{
  return sub_1A6892980();
}

uint64_t sub_1A68339E4(uint64_t a1)
{
  return MEMORY[0x1F4187E18](a1, *v1);
}

void sub_1A6833A10()
{
}

uint64_t sub_1A6833A3C(uint64_t a1)
{
  return MEMORY[0x1F4187C20](a1, *v1);
}

uint64_t sub_1A6833A68(uint64_t a1)
{
  return MEMORY[0x1F4187C30](a1, *v1);
}

uint64_t sub_1A6833A94()
{
  type metadata accessor for TTSExecutor();
  uint64_t v0 = swift_allocObject();
  sub_1A6832FE4();
  uint64_t v1 = sub_1A6891E10();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1A6891E00();
  uint64_t v2 = sub_1A6892950();
  MEMORY[0x1F4188790](v2);
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1A68337FC(&qword_1E96C15D8, MEMORY[0x1F41AB1B0]);
  sub_1A6741AD0(&qword_1E96C15C8);
  sub_1A67EB220(&qword_1E96C15D0, &qword_1E96C15C8);
  sub_1A6892B90();
  uint64_t v3 = sub_1A68928A0();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC60]);
  uint64_t result = sub_1A6892960();
  *(void *)(v0 + 16) = result;
  qword_1E96C4178 = v0;
  return result;
}

uint64_t *sub_1A6833CCC()
{
  if (qword_1E96C4180 != -1) {
    swift_once();
  }
  return &qword_1E96C4178;
}

uint64_t static TTSExecutor.shared.getter()
{
  if (qword_1E96C4180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static TTSExecutor.shared.setter(uint64_t a1)
{
  if (qword_1E96C4180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1E96C4178 = a1;
  return swift_release();
}

uint64_t (*static TTSExecutor.shared.modify())()
{
  if (qword_1E96C4180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t TTSActor.unownedExecutor.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 16))();
  uint64_t v2 = sub_1A6892980();
  swift_release();
  return v2;
}

uint64_t sub_1A6833EF4()
{
  return sub_1A6833F28(&qword_1E96C1698);
}

uint64_t sub_1A6833F28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TTSExecutor();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for TTSExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSExecutor);
}

uint64_t dispatch thunk of TTSExecutor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of TTSActor.executor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

double TTSMarkup.Group.init(_:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();

  double result = 0.0;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
  return result;
}

uint64_t static TTSMarkup.Group.tag.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E96C3510;
  return result;
}

uint64_t static TTSMarkup.Group.tag.setter(char *a1)
{
  char v1 = *a1;
  uint64_t result = swift_beginAccess();
  byte_1E96C3510 = v1;
  return result;
}

uint64_t (*static TTSMarkup.Group.tag.modify())()
{
  return j__swift_endAccess;
}

uint64_t TTSMarkup.Group.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.Group.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.Group.attributes.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Group._content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.Group._content.setter(long long *a1)
{
  uint64_t v3 = v1 + 8;
  sub_1A6741A24(v3);

  return sub_1A673E770(a1, v3);
}

uint64_t (*TTSMarkup.Group._content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Group.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 8, a1);
}

uint64_t TTSMarkup.Group.init(contentBlock:)@<X0>(uint64_t (*a1)(void)@<X0>, unint64_t *a2@<X8>)
{
  *a2 = sub_1A6742BA0(MEMORY[0x1E4FBC860]);
  return a1();
}

uint64_t TTSMarkup.Group.ssml.getter()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_1A673E63C(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t TTSMarkup.Group.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  sub_1A673E63C(v3 + 1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 80))(a1, a2, a3, v7, v8);
}

uint64_t sub_1A68342BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E96C3510;
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.Group()
{
  return &type metadata for TTSMarkup.Group;
}

id sub_1A6834320()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *((char *)v0 + 40);
  uint64_t v5 = *((char *)v0 + 41);
  uint64_t v22 = v5;
  uint64_t v23 = v2;
  uint64_t v6 = v0[6];
  int v7 = *((unsigned __int8 *)v0 + 56);
  uint64_t v20 = v0[10];
  int v8 = *((_DWORD *)v0 + 22);
  int v27 = *((unsigned __int8 *)v0 + 92);
  int v28 = v8;
  int v26 = *((_DWORD *)v0 + 24);
  LODWORD(v2) = *((unsigned __int8 *)v0 + 100);
  int v24 = v7;
  int v25 = v2;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F15478]), sel_init);
  objc_msgSend(v9, sel_setIsInstalled_, 1);
  objc_msgSend(v9, sel_setAssetSize_, 0);
  objc_msgSend(v9, sel_setGender_, qword_1A68A54B8[v5]);
  objc_msgSend(v9, sel_setSynthesisProviderVoice_, v20);
  objc_msgSend(v9, sel_setQuality_, qword_1A68A54D0[v4]);
  long long v18 = *(_OWORD *)(v0 + 1);
  long long v19 = *((_OWORD *)v0 + 4);
  uint64_t v10 = (void *)sub_1A6891FD0();
  objc_msgSend(v9, sel_setIdentifier_, v10);

  uint64_t v29 = *(void *)sub_1A67F8DE8();
  uint64_t v43 = v6;
  unint64_t v21 = sub_1A674CEE4();
  objc_msgSend(v9, sel_setIsDefault_, sub_1A6892B10() & 1);
  uint64_t v11 = sub_1A6891A40();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v1;
  long long v30 = v18;
  uint64_t v31 = v23;
  uint64_t v32 = v3;
  char v33 = v4;
  char v34 = v5;
  uint64_t v35 = v6;
  char v36 = v24;
  long long v37 = v19;
  uint64_t v38 = v20;
  int v39 = v28;
  char v40 = v27;
  int v41 = v26;
  char v42 = v25;
  CoreSynthesizer.Voice.primaryLocale.getter((uint64_t)v14);
  sub_1A6891860();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  unint64_t v15 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setLanguage_, v15);

  uint64_t v29 = *(void *)sub_1A67F8D88();
  uint64_t v43 = v6;
  objc_msgSend(v9, sel_setIsNoveltyVoice_, sub_1A6892B10() & 1);
  uint64_t v16 = (void *)sub_1A6891FD0();
  objc_msgSend(v9, sel_setNonLocalizedNameWithoutQuality_, v16);

  return v9;
}

uint64_t sub_1A6834660@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (result == 1) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_1A683467C@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v2 = 0x40302010000uLL >> (8 * result);
  if (result >= 6) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1A683469C()
{
  return qword_1A68A54F8[*v0];
}

uint64_t sub_1A68346B0()
{
  id v1 = objc_msgSend(v0, sel_name);
  if (v1)
  {
    unint64_t v2 = v1;
    sub_1A6892000();

    if (objc_msgSend(v0, sel_type) == (id)4)
    {
      id v3 = objc_msgSend(v0, sel_footprint);
      if (v3 == (id)4 || v3 == (id)2)
      {
        sub_1A6741AD0(&qword_1EB67A388);
        uint64_t v4 = swift_allocObject();
        *(_OWORD *)(v4 + 16) = xmmword_1A689DC40;
        sub_1A6892C40();
        swift_bridgeObjectRelease();
        sub_1A6892150();
        swift_bridgeObjectRelease();
        sub_1A6892150();
        *(void *)(v4 + 32) = 0xD000000000000014;
        *(void *)(v4 + 40) = 0x80000001A68CFBA0;
        return v4;
      }
    }
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t Float.dspGraphValue.getter()
{
  return 0;
}

uint64_t sub_1A68348C8()
{
  return 0;
}

uint64_t UInt32.dspGraphValue.getter(int a1)
{
  sub_1A6741AD0(&qword_1E96C1638);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC4C0];
  *(_OWORD *)(v2 + 16) = xmmword_1A689DC40;
  uint64_t v4 = MEMORY[0x1E4FBC530];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(_DWORD *)(v2 + 32) = a1;
  sub_1A6892040();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  return 30768;
}

uint64_t sub_1A68349A8(uint64_t a1)
{
  int v3 = *v1;
  sub_1A6741AD0(&qword_1E96C1638);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1A689DC40;
  uint64_t v5 = MEMORY[0x1E4FBC530];
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 64) = v5;
  *(_DWORD *)(v4 + 32) = v3;
  sub_1A6892040();
  sub_1A6892150();
  swift_bridgeObjectRelease();
  return 30768;
}

uint64_t sub_1A6834A44(uint64_t a1)
{
  unint64_t v2 = sub_1A683513C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6834A80(uint64_t a1)
{
  unint64_t v2 = sub_1A683513C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A6834ABC()
{
  uint64_t v1 = 0x7475706E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x74757074756FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7892834;
  }
}

uint64_t sub_1A6834B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A683DE20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6834B30(uint64_t a1)
{
  unint64_t v2 = sub_1A6835040();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6834B6C(uint64_t a1)
{
  unint64_t v2 = sub_1A6835040();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A6834BA8(uint64_t a1)
{
  unint64_t v2 = sub_1A68350E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6834BE4(uint64_t a1)
{
  unint64_t v2 = sub_1A68350E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A6834C20(uint64_t a1)
{
  unint64_t v2 = sub_1A6835094();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6834C5C(uint64_t a1)
{
  unint64_t v2 = sub_1A6835094();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A6834C98(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v27 = a2;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C3518);
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x1F4188790](v4);
  int v24 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C3520);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  MEMORY[0x1F4188790](v6);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C3528);
  uint64_t v21 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A6741AD0(&qword_1E96C3530);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A6835040();
  uint64_t v16 = v28;
  sub_1A68932B0();
  if (!v16)
  {
    char v30 = 1;
    sub_1A68350E8();
    sub_1A6893010();
    uint64_t v18 = v22;
    uint64_t v17 = v23;
    goto LABEL_5;
  }
  if (v16 == 1)
  {
    char v31 = 2;
    sub_1A6835094();
    int v8 = v24;
    sub_1A6893010();
    uint64_t v18 = v25;
    uint64_t v17 = v26;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  char v29 = 0;
  sub_1A683513C();
  sub_1A6893010();
  sub_1A6893040();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1A6835040()
{
  unint64_t result = qword_1E96D1250;
  if (!qword_1E96D1250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1250);
  }
  return result;
}

unint64_t sub_1A6835094()
{
  unint64_t result = qword_1E96D1258;
  if (!qword_1E96D1258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1258);
  }
  return result;
}

unint64_t sub_1A68350E8()
{
  unint64_t result = qword_1E96D1260;
  if (!qword_1E96D1260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1260);
  }
  return result;
}

unint64_t sub_1A683513C()
{
  unint64_t result = qword_1E96D1268;
  if (!qword_1E96D1268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1268);
  }
  return result;
}

void *sub_1A6835190@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1A683DF58(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1A68351BC(void *a1)
{
  return sub_1A6834C98(a1, *v1, v1[1]);
}

uint64_t sub_1A68351D8()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_1A6893200();
  sub_1A6893210();
  if (v1 > 1) {
    sub_1A68920F0();
  }
  return sub_1A6893250();
}

uint64_t sub_1A6835258()
{
  if (*(void *)(v0 + 8) <= 1uLL) {
    return sub_1A6893210();
  }
  sub_1A6893210();

  return sub_1A68920F0();
}

uint64_t sub_1A68352E0()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_1A6893200();
  sub_1A6893210();
  if (v1 > 1) {
    sub_1A68920F0();
  }
  return sub_1A6893250();
}

uint64_t sub_1A683535C(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (v3 == 1) {
    return v4 == 1;
  }
  if (v4 < 2) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_1A6893120();
  }
}

uint64_t sub_1A68353C0()
{
  return 1819308129;
}

uint64_t sub_1A68353D0()
{
  uint64_t v1 = 0x65707974627573;
  if (*v0 != 1) {
    uint64_t v1 = 0x74636166756E616DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1A683542C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A683EC38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6835454(uint64_t a1)
{
  unint64_t v2 = sub_1A683E730();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6835490(uint64_t a1)
{
  unint64_t v2 = sub_1A683E730();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A68354CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A6893120();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A683554C(uint64_t a1)
{
  unint64_t v2 = sub_1A683E6DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6835588(uint64_t a1)
{
  unint64_t v2 = sub_1A683E6DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A68355C4()
{
  if (*v0) {
    return 0x6E49746C697562;
  }
  else {
    return 0x696E556F69647561;
  }
}

uint64_t sub_1A6835604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A683ED98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683562C(uint64_t a1)
{
  unint64_t v2 = sub_1A683E668();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6835668(uint64_t a1)
{
  unint64_t v2 = sub_1A683E668();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A68356A4(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C3538);
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C3540);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A6741AD0(&qword_1E96C3548);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A683E668();
  sub_1A68932B0();
  sub_1A683E6BC(v2, (uint64_t)v27);
  if (v28)
  {
    char v29 = 1;
    sub_1A683E6DC();
    sub_1A6893010();
    uint64_t v15 = v23;
    sub_1A6893040();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v15);
  }
  else
  {
    uint64_t v16 = v27[4];
    uint64_t v22 = v27[3];
    uint64_t v23 = v27[2];
    uint64_t v17 = v27[5];
    char v29 = 0;
    sub_1A683E730();
    sub_1A6893010();
    char v29 = 0;
    uint64_t v18 = v24;
    uint64_t v19 = v26;
    sub_1A6893040();
    if (!v19)
    {
      v21[1] = v17;
      uint64_t v26 = v16;
      char v29 = 1;
      sub_1A6893040();
      char v29 = 2;
      sub_1A6893040();
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1A6835A0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A683EE98(a1, (uint64_t *)v5);
  if (!v2) {
    return sub_1A683E6BC(v5, a2);
  }
  return result;
}

uint64_t sub_1A6835A54(void *a1)
{
  sub_1A683E6BC(v1, (uint64_t)v4);
  return sub_1A68356A4(a1);
}

uint64_t sub_1A6835AA4(long long *a1, long long *a2)
{
  sub_1A683E6BC(a1, (uint64_t)v4);
  sub_1A683E6BC(a2, (uint64_t)v5);
  return sub_1A683E50C(v4, v5) & 1;
}

uint64_t _s12TextToSpeech14TTSAudioEffectO4SpecV8controlsSayAE7ControlOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A6835AF8()
{
  uint64_t v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 48))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1A674239C(v1, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 0);
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    return 40;
  }
  return v1;
}

uint64_t sub_1A6835C04(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v61 = result;
  uint64_t v62 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v63 = (unint64_t)(v3 + 63) >> 6;
  if (!v5) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v64 = (v5 - 1) & v5;
  int64_t v65 = v2;
  for (unint64_t i = __clz(__rbit64(v5)) | (v2 << 6); ; unint64_t i = __clz(__rbit64(v8)) + (v9 << 6))
  {
    uint64_t v11 = (uint64_t *)(*(void *)(result + 48) + 16 * i);
    uint64_t v77 = v11[1];
    uint64_t v79 = *v11;
    uint64_t v12 = *(void *)(result + 56) + 88 * i;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v16 = *(void *)(v12 + 16);
    uint64_t v15 = *(void *)(v12 + 24);
    uint64_t v18 = *(void *)(v12 + 32);
    uint64_t v17 = *(void *)(v12 + 40);
    char v19 = *(unsigned char *)(v12 + 48);
    uint64_t v20 = *(void *)(v12 + 56);
    uint64_t v21 = *(void *)(v12 + 64);
    uint64_t v22 = *(void *)(v12 + 80);
    uint64_t v82 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    uint64_t v71 = v14;
    uint64_t v72 = v13;
    uint64_t v67 = v18;
    uint64_t v68 = v17;
    char v74 = v19;
    sub_1A674239C(v13, v14, v16, v15, v18, v17, v19);
    uint64_t v76 = v20;
    swift_bridgeObjectRetain();
    uint64_t v73 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v81 = v22;
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1A673F7AC(v79, v77);
    LOBYTE(v21) = v24;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      uint64_t v59 = v71;
      uint64_t v58 = v13;
      uint64_t v60 = v16;
      uint64_t v54 = v15;
      goto LABEL_89;
    }
    uint64_t v25 = *(void *)(a2 + 56) + 88 * v23;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    uint64_t v29 = *(void *)(v25 + 16);
    uint64_t v28 = *(void *)(v25 + 24);
    uint64_t v78 = *(void *)(v25 + 32);
    uint64_t v80 = *(void *)(v25 + 40);
    uint64_t v30 = *(void *)(v25 + 64);
    uint64_t v70 = *(void *)(v25 + 56);
    uint64_t v31 = *(void *)(v25 + 72);
    uint64_t v32 = *(void *)(v25 + 80);
    char v69 = *(unsigned char *)(v25 + 48);
    uint64_t v75 = *(void *)v25;
    if (v69)
    {
      uint64_t v34 = v71;
      uint64_t v33 = v72;
      if ((v74 & 1) == 0)
      {
        uint64_t v58 = v72;
        uint64_t v59 = v71;
        uint64_t v60 = v16;
        goto LABEL_100;
      }
      if (v26 != v72 || v27 != v71)
      {
        char v36 = sub_1A6893120();
        uint64_t v26 = v75;
        if ((v36 & 1) == 0)
        {
          uint64_t v58 = v72;
          uint64_t v59 = v71;
          uint64_t v60 = v16;
LABEL_102:
          uint64_t v54 = v15;
          uint64_t v55 = v67;
          uint64_t v56 = v68;
          char v57 = 1;
          goto LABEL_90;
        }
      }
    }
    else
    {
      uint64_t v34 = v71;
      uint64_t v33 = v72;
      if (v74)
      {
        uint64_t v58 = v72;
        uint64_t v59 = v71;
        uint64_t v60 = v16;
        goto LABEL_102;
      }
      if (v26 != v72 || v27 != v71)
      {
        char v38 = sub_1A6893120();
        uint64_t v26 = v75;
        if ((v38 & 1) == 0) {
          goto LABEL_98;
        }
      }
      BOOL v39 = v29 == v16 && v28 == v15;
      if (!v39 && (v40 = sub_1A6893120(), uint64_t v26 = v75, (v40 & 1) == 0)
        || (v78 == v67 ? (v41 = v80 == v68) : (v41 = 0), !v41 && (v42 = sub_1A6893120(), uint64_t v26 = v75, (v42 & 1) == 0)))
      {
LABEL_98:
        uint64_t v58 = v72;
        uint64_t v59 = v71;
        uint64_t v60 = v16;
LABEL_100:
        uint64_t v54 = v15;
        uint64_t v55 = v67;
        uint64_t v56 = v68;
        char v57 = 0;
        goto LABEL_90;
      }
    }
    sub_1A674239C(v26, v27, v29, v28, v78, v80, v69);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1A68365D0(v70, v76) & 1) == 0)
    {
      sub_1A67D2CA4(v75, v27, v29, v28, v78, v80, v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A67D2CA4(v33, v34, v16, v15, v67, v68, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_91;
    }
    if ((sub_1A68368B4(v30, v73) & 1) == 0)
    {
      sub_1A67D2CA4(v75, v27, v29, v28, v78, v80, v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = v33;
      goto LABEL_97;
    }
    uint64_t v43 = *(void *)(v31 + 16);
    if (v43 != *(void *)(v82 + 16))
    {
      sub_1A67D2CA4(v75, v27, v29, v28, v78, v80, v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = v72;
LABEL_97:
      uint64_t v59 = v34;
LABEL_88:
      uint64_t v60 = v16;
      uint64_t v54 = v15;
LABEL_89:
      uint64_t v55 = v67;
      uint64_t v56 = v68;
      char v57 = v74;
LABEL_90:
      sub_1A67D2CA4(v58, v59, v60, v54, v55, v56, v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_91:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v43) {
      BOOL v44 = v31 == v82;
    }
    else {
      BOOL v44 = 1;
    }
    if (!v44)
    {
      uint64_t v50 = 0;
      do
      {
        uint64_t v51 = *(void *)(v31 + v50 + 40);
        unint64_t v52 = *(void *)(v82 + v50 + 40);
        if (v51)
        {
          if (v51 == 1)
          {
            if (v52 != 1) {
              goto LABEL_87;
            }
          }
          else
          {
            if (v52 < 2) {
              goto LABEL_87;
            }
            BOOL v53 = *(void *)(v31 + v50 + 32) == *(void *)(v82 + v50 + 32) && v51 == v52;
            if (!v53 && (sub_1A6893120() & 1) == 0) {
              goto LABEL_87;
            }
          }
        }
        else if (v52)
        {
          goto LABEL_87;
        }
        v50 += 16;
        --v43;
      }
      while (v43);
    }
    uint64_t v45 = *(void *)(v32 + 16);
    if (v45 != *(void *)(v81 + 16))
    {
LABEL_87:
      sub_1A67D2CA4(v75, v27, v29, v28, v78, v80, v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v59 = v71;
      uint64_t v58 = v72;
      goto LABEL_88;
    }
    if (v45 && v32 != v81)
    {
      uint64_t v46 = 0;
      do
      {
        uint64_t v47 = *(void *)(v32 + v46 + 40);
        unint64_t v48 = *(void *)(v81 + v46 + 40);
        if (v47)
        {
          if (v47 == 1)
          {
            if (v48 != 1) {
              goto LABEL_87;
            }
          }
          else
          {
            if (v48 < 2) {
              goto LABEL_87;
            }
            BOOL v49 = *(void *)(v32 + v46 + 32) == *(void *)(v81 + v46 + 32) && v47 == v48;
            if (!v49 && (sub_1A6893120() & 1) == 0) {
              goto LABEL_87;
            }
          }
        }
        else if (v48)
        {
          goto LABEL_87;
        }
        v46 += 16;
        --v45;
      }
      while (v45);
    }
    sub_1A67D2CA4(v75, v27, v29, v28, v78, v80, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A67D2CA4(v72, v71, v16, v15, v67, v68, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = v61;
    unint64_t v5 = v64;
    int64_t v2 = v65;
    if (v64) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_104;
    }
    if (v7 >= v63) {
      return 1;
    }
    unint64_t v8 = *(void *)(v62 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v7 + 1;
      if (v7 + 1 >= v63) {
        return 1;
      }
      unint64_t v8 = *(void *)(v62 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v7 + 2;
        if (v7 + 2 >= v63) {
          return 1;
        }
        unint64_t v8 = *(void *)(v62 + 8 * v9);
        if (!v8) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v64 = (v8 - 1) & v8;
    int64_t v65 = v9;
  }
  int64_t v10 = v7 + 3;
  if (v10 >= v63) {
    return 1;
  }
  unint64_t v8 = *(void *)(v62 + 8 * v10);
  if (v8)
  {
    int64_t v9 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v9 >= v63) {
      return 1;
    }
    unint64_t v8 = *(void *)(v62 + 8 * v9);
    ++v10;
    if (v8) {
      goto LABEL_20;
    }
  }
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_1A6836438(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int v18 = *(_DWORD *)(*(void *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1A673F7AC(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(_DWORD *)(*(void *)(a2 + 56) + 4 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A68365D0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v25 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v27 = result;
  while (1)
  {
    if (v6)
    {
      uint64_t v28 = (v6 - 1) & v6;
      int64_t v29 = v3;
      unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v8 >= v26) {
      return 1;
    }
    unint64_t v9 = *(void *)(v25 + 8 * v8);
    int64_t v10 = v3 + 1;
    if (!v9)
    {
      int64_t v10 = v8 + 1;
      if (v8 + 1 >= v26) {
        return 1;
      }
      unint64_t v9 = *(void *)(v25 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v8 + 2;
        if (v8 + 2 >= v26) {
          return 1;
        }
        unint64_t v9 = *(void *)(v25 + 8 * v10);
        if (!v9) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v28 = (v9 - 1) & v9;
    int64_t v29 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_22:
    unsigned int v12 = *(_DWORD *)(*(void *)(result + 48) + 4 * v7);
    uint64_t v13 = *(void *)(result + 56) + 40 * v7;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v17 = *(void *)(v13 + 24);
    unsigned __int8 v18 = *(unsigned char *)(v13 + 36);
    int v19 = *(_DWORD *)(v13 + 32);
    int v20 = *(unsigned __int8 *)(v13 + 37);
    uint64_t v21 = 0x10000000000;
    if (!v20) {
      uint64_t v21 = 0;
    }
    v30[0] = v14;
    v30[1] = v15;
    void v30[2] = v16;
    v30[3] = v17;
    int v31 = v19;
    __int16 v32 = (v21 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v18 << 32)) >> 32;
    sub_1A67B4290((uint64_t)v30, (uint64_t)v34, &qword_1E96C2A18);
    unint64_t v22 = sub_1A67420E8(v12);
    if ((v23 & 1) == 0)
    {
      sub_1A67423E8();
      sub_1A6845040((uint64_t)v34, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2C28);
      return 0;
    }
    sub_1A67B4290(*(void *)(a2 + 56) + 40 * v22, (uint64_t)v33, &qword_1E96C2A18);
    sub_1A67423E8();
    sub_1A6845040((uint64_t)v33, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
    BOOL v24 = sub_1A6837744((uint64_t)v33, (uint64_t)v34);
    sub_1A6845040((uint64_t)v33, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2C28);
    sub_1A6845040((uint64_t)v34, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2C28);
    uint64_t result = v27;
    unint64_t v6 = v28;
    int64_t v3 = v29;
    if (!v24) {
      return 0;
    }
  }
  int64_t v11 = v8 + 3;
  if (v11 >= v26) {
    return 1;
  }
  unint64_t v9 = *(void *)(v25 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v26) {
      return 1;
    }
    unint64_t v9 = *(void *)(v25 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A68368B4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v25 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v27 = result;
  while (1)
  {
    if (v6)
    {
      uint64_t v28 = (v6 - 1) & v6;
      int64_t v29 = v3;
      unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v8 >= v26) {
      return 1;
    }
    unint64_t v9 = *(void *)(v25 + 8 * v8);
    int64_t v10 = v3 + 1;
    if (!v9)
    {
      int64_t v10 = v8 + 1;
      if (v8 + 1 >= v26) {
        return 1;
      }
      unint64_t v9 = *(void *)(v25 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v8 + 2;
        if (v8 + 2 >= v26) {
          return 1;
        }
        unint64_t v9 = *(void *)(v25 + 8 * v10);
        if (!v9) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v28 = (v9 - 1) & v9;
    int64_t v29 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_22:
    unsigned int v12 = *(_DWORD *)(*(void *)(result + 48) + 4 * v7);
    uint64_t v13 = *(void *)(result + 56) + 40 * v7;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v17 = *(void *)(v13 + 24);
    unsigned __int8 v18 = *(unsigned char *)(v13 + 36);
    int v19 = *(_DWORD *)(v13 + 32);
    int v20 = *(unsigned __int8 *)(v13 + 37);
    uint64_t v21 = 0x10000000000;
    if (!v20) {
      uint64_t v21 = 0;
    }
    v30[0] = v14;
    v30[1] = v15;
    void v30[2] = v16;
    v30[3] = v17;
    int v31 = v19;
    __int16 v32 = (v21 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v18 << 32)) >> 32;
    sub_1A67B4290((uint64_t)v30, (uint64_t)v34, &qword_1E96C2A20);
    unint64_t v22 = sub_1A67420E8(v12);
    if ((v23 & 1) == 0)
    {
      sub_1A67423E8();
      sub_1A6845040((uint64_t)v34, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2DAC);
      return 0;
    }
    sub_1A67B4290(*(void *)(a2 + 56) + 40 * v22, (uint64_t)v33, &qword_1E96C2A20);
    sub_1A67423E8();
    sub_1A6845040((uint64_t)v33, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
    BOOL v24 = sub_1A68372B8((uint64_t)v33, (uint64_t)v34);
    sub_1A6845040((uint64_t)v33, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2DAC);
    sub_1A6845040((uint64_t)v34, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2DAC);
    uint64_t result = v27;
    unint64_t v6 = v28;
    int64_t v3 = v29;
    if (!v24) {
      return 0;
    }
  }
  int64_t v11 = v8 + 3;
  if (v11 >= v26) {
    return 1;
  }
  unint64_t v9 = *(void *)(v25 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v26) {
      return 1;
    }
    unint64_t v9 = *(void *)(v25 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A6836B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v9 = 1;
    }
    else
    {
      int64_t v3 = (unint64_t *)(a1 + 32);
      uint64_t v4 = (unint64_t *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        unint64_t v7 = *v3++;
        unint64_t v6 = v7;
        unint64_t v8 = *v4++;
        unint64_t v13 = v8;
        unint64_t v14 = v6;
        char v9 = _s12TextToSpeech14TTSAudioEffectO4SpecV7ControlO2eeoiySbAG_AGtFZ_0(&v14, &v13);
        BOOL v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1A6836C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    int64_t v3 = (uint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *v3;
      unint64_t v6 = *v4;
      if (*v3)
      {
        if (v5 == 1)
        {
          if (v6 != 1) {
            return 0;
          }
        }
        else
        {
          if (v6 < 2) {
            return 0;
          }
          BOOL v7 = *(v3 - 1) == *(v4 - 1) && v5 == v6;
          if (!v7 && (sub_1A6893120() & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v6)
      {
        return 0;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1A6836CDC()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574656D61726170;
      break;
    case 2:
      uint64_t result = 0x69747265706F7270;
      break;
    case 3:
      uint64_t result = 0x737475706E69;
      break;
    case 4:
      uint64_t result = 0x7374757074756FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A6836D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A683F6C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6836DB0(uint64_t a1)
{
  unint64_t v2 = sub_1A683F48C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A6836DEC(uint64_t a1)
{
  unint64_t v2 = sub_1A683F48C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A6836E28(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C3550);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A683F48C();
  sub_1A68932B0();
  sub_1A683E6BC((long long *)v3, (uint64_t)v13);
  sub_1A683E6BC(v13, (uint64_t)v12);
  char v11 = 0;
  sub_1A683F4E0();
  sub_1A6893080();
  if (!v2)
  {
    v12[0] = *(void *)(v3 + 56);
    char v11 = 1;
    sub_1A6741AD0(&qword_1E96C3560);
    sub_1A683F534();
    sub_1A6893080();
    v12[0] = *(void *)(v3 + 64);
    char v11 = 2;
    sub_1A6741AD0(&qword_1E96C3578);
    sub_1A683F5D4();
    sub_1A6893080();
    v12[0] = *(void *)(v3 + 72);
    char v11 = 3;
    sub_1A6741AD0(&qword_1E96C3590);
    sub_1A6844F80(&qword_1E96C3598, &qword_1E96C3590, (void (*)(void))sub_1A683F674);
    sub_1A6893080();
    v12[0] = *(void *)(v3 + 80);
    char v11 = 4;
    sub_1A6893080();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1A68370E0@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1A683E6BC(a1, (uint64_t)v15);
  char v11 = v16;
  double result = *(double *)v15;
  long long v13 = v15[1];
  long long v14 = v15[2];
  *(_OWORD *)a6 = v15[0];
  *(_OWORD *)(a6 + 16) = v13;
  *(_OWORD *)(a6 + 32) = v14;
  *(unsigned char *)(a6 + 48) = v11;
  *(void *)(a6 + 56) = a2;
  *(void *)(a6 + 64) = a3;
  *(void *)(a6 + 72) = a4;
  *(void *)(a6 + 80) = a5;
  return result;
}

double sub_1A6837150@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A683F8E0(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A68371AC(void *a1)
{
  return sub_1A6836E28(a1);
}

uint64_t sub_1A68371F8(uint64_t a1, uint64_t a2)
{
  sub_1A683E6BC((long long *)a1, (uint64_t)v14);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  sub_1A683E6BC((long long *)a2, (uint64_t)v15);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  if ((sub_1A683E50C(v14, v15) & 1) != 0
    && (sub_1A68365D0(v5, v9) & 1) != 0
    && (sub_1A68368B4(v4, v8) & 1) != 0
    && (sub_1A6836C28(v7, v11) & 1) != 0)
  {
    char v12 = sub_1A6836C28(v6, v10);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

BOOL sub_1A68372B8(uint64_t a1, uint64_t a2)
{
  sub_1A67B4290(a2, (uint64_t)v49, &qword_1E96C2A20);
  uint64_t v5 = v49[0];
  uint64_t v4 = v49[1];
  int v30 = v50;
  sub_1A67B4290(a1, (uint64_t)v47, &qword_1E96C2A20);
  uint64_t v7 = v47[0];
  uint64_t v6 = v47[1];
  int v28 = v48;
  sub_1A67B4290(a2, (uint64_t)&v39, &qword_1E96C2A20);
  sub_1A67B4290(a1, (uint64_t)v53, &qword_1E96C2A20);
  if (v53[37])
  {
    sub_1A67B4290(a1, (uint64_t)v32, &qword_1E96C2A20);
    uint64_t v9 = v32[0];
    uint64_t v8 = v32[1];
    sub_1A67B4290(a2, (uint64_t)v51, &qword_1E96C2A20);
    if (v52)
    {
      uint64_t v10 = v9;
      uint64_t v11 = v40;
      int v12 = v33;
      char v13 = v34;
      int v14 = v37;
      int v15 = v41;
      int v16 = v42;
      if (v8)
      {
        if (v40)
        {
          char v26 = v38;
          int v27 = v46;
          int v23 = v45;
          int v25 = v35;
          int v29 = v44;
          int v24 = v43;
          char v31 = v36;
          if (v10 == v39 && v8 == v40)
          {
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
            sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2DAC);
          }
          else
          {
            char v22 = sub_1A6893120();
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
            sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2DAC);
            if ((v22 & 1) == 0) {
              return 0;
            }
          }
          goto LABEL_23;
        }
        sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
        sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
      }
      else
      {
        char v31 = v36;
        int v24 = v43;
        int v29 = v44;
        int v25 = v35;
        char v26 = v38;
        int v23 = v45;
        int v27 = v46;
        sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
        sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
        if (!v11)
        {
LABEL_23:
          if (v13)
          {
            if (!v16) {
              return 0;
            }
          }
          else
          {
            if (v12 == v15) {
              char v19 = v16;
            }
            else {
              char v19 = 1;
            }
            if (v19) {
              return 0;
            }
          }
          if (v31)
          {
            if (!v29) {
              return 0;
            }
          }
          else
          {
            char v20 = v29;
            if (v25 != v24) {
              char v20 = 1;
            }
            if (v20) {
              return 0;
            }
          }
          char v21 = v27;
          if ((v26 & 1) == 0)
          {
            if (v14 != v23) {
              char v21 = 1;
            }
            return (v21 & 1) == 0;
          }
          return v27 != 0;
        }
      }
      swift_bridgeObjectRelease();
      return 0;
    }
    sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
    sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
    sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1A67D2C28();
    sub_1A67D2C28();
    return 0;
  }
  sub_1A67B4290(a2, (uint64_t)v51, &qword_1E96C2A20);
  if (v52)
  {
    sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
    sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423F0);
    goto LABEL_11;
  }
  if (v7 == v5 && v6 == v4) {
    return v28 == v30;
  }
  char v18 = sub_1A6893120();
  BOOL result = 0;
  if (v18) {
    return v28 == v30;
  }
  return result;
}

BOOL sub_1A6837744(uint64_t a1, uint64_t a2)
{
  sub_1A67B4290(a2, (uint64_t)v49, &qword_1E96C2A18);
  uint64_t v5 = v49[0];
  uint64_t v4 = v49[1];
  int v30 = v50;
  sub_1A67B4290(a1, (uint64_t)v47, &qword_1E96C2A18);
  uint64_t v7 = v47[0];
  uint64_t v6 = v47[1];
  int v28 = v48;
  sub_1A67B4290(a2, (uint64_t)&v39, &qword_1E96C2A18);
  sub_1A67B4290(a1, (uint64_t)v53, &qword_1E96C2A18);
  if (v53[37])
  {
    sub_1A67B4290(a1, (uint64_t)v32, &qword_1E96C2A18);
    uint64_t v9 = v32[0];
    uint64_t v8 = v32[1];
    sub_1A67B4290(a2, (uint64_t)v51, &qword_1E96C2A18);
    if (v52)
    {
      uint64_t v10 = v9;
      uint64_t v11 = v40;
      float v12 = v33;
      char v13 = v34;
      float v14 = v35;
      char v15 = v36;
      float v16 = v37;
      char v17 = v38;
      float v18 = v41;
      int v19 = v42;
      float v20 = v43;
      int v21 = v44;
      float v22 = v45;
      if (v8)
      {
        if (v40)
        {
          int v31 = v46;
          if (v10 == v39 && v8 == v40)
          {
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
            sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2C28);
          }
          else
          {
            char v29 = sub_1A6893120();
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
            sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67D2C28);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          goto LABEL_23;
        }
        sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
        sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
      }
      else
      {
        int v31 = v46;
        sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
        sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
        if (!v11)
        {
LABEL_23:
          if (v13)
          {
            if (!v19) {
              return 0;
            }
          }
          else
          {
            if (v12 == v18) {
              char v25 = v19;
            }
            else {
              char v25 = 1;
            }
            if (v25) {
              return 0;
            }
          }
          if (v15)
          {
            if (!v21) {
              return 0;
            }
          }
          else
          {
            if (v14 == v20) {
              char v26 = v21;
            }
            else {
              char v26 = 1;
            }
            if (v26) {
              return 0;
            }
          }
          char v27 = v31;
          if ((v17 & 1) == 0)
          {
            if (v16 != v22) {
              char v27 = 1;
            }
            return (v27 & 1) == 0;
          }
          return v31 != 0;
        }
      }
      swift_bridgeObjectRelease();
      return 0;
    }
    sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
    sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
    sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1A67D2C28();
    sub_1A67D2C28();
    return 0;
  }
  sub_1A67B4290(a2, (uint64_t)v51, &qword_1E96C2A18);
  if (v52)
  {
    sub_1A6845040(a1, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
    sub_1A6845040(a2, (void (*)(void, void, void, void, unint64_t, void))sub_1A67423E8);
    goto LABEL_11;
  }
  if (v7 == v5 && v6 == v4) {
    return v28 == v30;
  }
  char v24 = sub_1A6893120();
  BOOL result = 0;
  if (v24) {
    return v28 == v30;
  }
  return result;
}

BOOL static TTSAudioEffect.Spec.GenericWire.== infix(_:_:)(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v132 = a2;
  uint64_t v122 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v113 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6892A00();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v116 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  unint64_t v111 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v115 = (char *)&v108 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v118 = (char *)&v108 - v14;
  uint64_t v131 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v110 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v112 = (char *)&v108 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v117 = (char *)&v108 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v123 = (char *)&v108 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v127 = (char *)&v108 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v129 = (char *)&v108 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  unint64_t v126 = (char *)&v108 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v128 = (char *)&v108 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v130 = (char *)&v108 - v31;
  uint64_t v120 = a3;
  uint64_t v114 = a4;
  uint64_t v32 = type metadata accessor for TTSAudioEffect.Spec.GenericWire();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  char v36 = (uint64_t *)((char *)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v34);
  char v38 = (char *)&v108 - v37;
  uint64_t v39 = swift_getTupleTypeMetadata2();
  uint64_t v125 = *(void *)(v39 - 8);
  uint64_t v40 = MEMORY[0x1F4188790](v39);
  unsigned __int8 v42 = (char *)&v108 - v41;
  float v43 = (char *)&v108 + *(int *)(v40 + 48) - v41;
  uint64_t v124 = v33;
  unsigned __int8 v44 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v44((char *)&v108 - v41, a1, v32);
  v44(v43, (uint64_t)v132, v32);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v119 = v42;
    uint64_t v45 = ((uint64_t (*)(uint64_t *, char *, uint64_t))v44)(v36, v42, v32);
    uint64_t v109 = *v36;
    uint64_t v132 = (void (*)(char *, char *, uint64_t))v36[1];
    MEMORY[0x1F4188790](v45);
    strcpy((char *)&v108 - 32, "id  min max ");
    uint64_t v133 = sub_1A6750AC4(&qword_1E96C14F0);
    uint64_t v134 = v8;
    uint64_t v135 = v8;
    uint64_t v136 = v8;
    TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    uint64_t v47 = TupleTypeMetadata[12];
    uint64_t v48 = v32;
    BOOL v49 = (char *)v36 + v47;
    uint64_t v50 = TupleTypeMetadata[16];
    uint64_t v51 = (char *)v36 + v50;
    uint64_t v52 = TupleTypeMetadata[20];
    BOOL v53 = (char *)v36 + v52;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v125 = v48;
      uint64_t v54 = (void (*)(char *, char *, uint64_t))*((void *)v43 + 1);
      uint64_t v108 = *(void *)v43;
      uint64_t v55 = &v43[v47];
      uint64_t v56 = &v43[v50];
      char v57 = (void (*)(char *, char *, uint64_t))*((void *)v131 + 4);
      v57(v130, v49, v8);
      v57(v128, v51, v8);
      v57(v126, v53, v8);
      v57(v129, v55, v8);
      v57(v127, v56, v8);
      uint64_t v58 = v123;
      v57(v123, &v43[v52], v8);
      uint64_t v59 = v8;
      if (v132)
      {
        uint64_t v60 = v119;
        uint64_t v32 = v125;
        uint64_t v61 = v122;
        if (v54)
        {
          uint64_t v62 = v131;
          if (v109 == v108 && v132 == v54)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
          char v72 = sub_1A6893120();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v72)
          {
LABEL_23:
            uint64_t v73 = v118;
            char v74 = &v118[*(int *)(TupleTypeMetadata2 + 48)];
            uint64_t v76 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v62 + 16);
            uint64_t v75 = (void (*)(char *, char *, uint64_t))*((void *)v62 + 2);
            v75(v118, v130, v8);
            v75(v74, v129, v8);
            uint64_t v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
            uint64_t v78 = v120;
            int v79 = v77(v73, 1, v120);
            uint64_t v132 = v75;
            if (v79 == 1)
            {
              if (v77(v74, 1, v78) == 1)
              {
                uint64_t v80 = (void (*)(char *, uint64_t))*((void *)v62 + 1);
                v80(v73, v59);
                uint64_t v81 = v115;
                goto LABEL_35;
              }
            }
            else
            {
              v75(v117, v73, v59);
              if (v77(v74, 1, v78) != 1)
              {
                uint64_t v109 = v61 + 48;
                uint64_t v131 = v77;
                id v84 = v73;
                uint64_t v85 = v113;
                (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v113, v74, v78);
                uint64_t v86 = v117;
                BOOL v87 = v62;
                char v88 = sub_1A6891FC0();
                char v89 = *(void (**)(char *, uint64_t))(v61 + 8);
                v89(v85, v78);
                v89(v86, v78);
                uint64_t v80 = (void (*)(char *, uint64_t))*((void *)v87 + 1);
                v80(v84, v59);
                if (v88)
                {
                  uint64_t v81 = v115;
                  uint64_t v77 = v131;
LABEL_35:
                  id v90 = &v81[*(int *)(TupleTypeMetadata2 + 48)];
                  uint64_t v91 = v132;
                  v132(v81, v128, v59);
                  v91(v90, v127, v59);
                  if (v77(v81, 1, v78) == 1)
                  {
                    uint64_t v131 = v76;
                    if (v77(v90, 1, v78) == 1)
                    {
                      v80(v81, v59);
                      uint64_t v60 = v119;
LABEL_45:
                      uint64_t v96 = v111;
                      uint64_t v97 = &v111[*(int *)(TupleTypeMetadata2 + 48)];
                      uint64_t v98 = v132;
                      v132(v111, v126, v59);
                      unint64_t v118 = v97;
                      uint64_t v99 = v97;
                      uint64_t v100 = v123;
                      v98(v99, v123, v59);
                      uint64_t v101 = v120;
                      if (((unsigned int (*)(char *, uint64_t))v77)(v96, 1) == 1)
                      {
                        v80(v100, v59);
                        v80(v127, v59);
                        v80(v129, v59);
                        v80(v126, v59);
                        v80(v128, v59);
                        v80(v130, v59);
                        if (v77(v118, 1, v101) == 1)
                        {
                          v80(v111, v59);
                          BOOL v66 = 1;
                          goto LABEL_42;
                        }
                        goto LABEL_50;
                      }
                      v132(v110, v111, v59);
                      uint64_t v102 = v118;
                      if (v77(v118, 1, v101) == 1)
                      {
                        v80(v123, v59);
                        v80(v127, v59);
                        v80(v129, v59);
                        v80(v126, v59);
                        v80(v128, v59);
                        v80(v130, v59);
                        (*(void (**)(char *, uint64_t))(v122 + 8))(v110, v101);
LABEL_50:
                        (*(void (**)(char *, uint64_t))(v116 + 8))(v111, TupleTypeMetadata2);
                        uint64_t v32 = v125;
                        goto LABEL_30;
                      }
                      uint64_t v103 = v122;
                      uint64_t v104 = v113;
                      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v113, v102, v101);
                      unint64_t v105 = v110;
                      char v106 = sub_1A6891FC0();
                      uint64_t v107 = *(void (**)(char *, uint64_t))(v103 + 8);
                      v107(v104, v101);
                      v80(v123, v59);
                      v80(v127, v59);
                      v80(v129, v59);
                      v80(v126, v59);
                      v80(v128, v59);
                      v80(v130, v59);
                      v107(v105, v101);
                      v80(v111, v59);
                      uint64_t v60 = v119;
                      uint64_t v32 = v125;
                      if (v106)
                      {
                        BOOL v66 = 1;
                        goto LABEL_31;
                      }
LABEL_30:
                      BOOL v66 = 0;
LABEL_31:
                      uint64_t v67 = v124;
                      goto LABEL_32;
                    }
                  }
                  else
                  {
                    v91(v112, v81, v59);
                    if (v77(v90, 1, v78) != 1)
                    {
                      uint64_t v131 = v76;
                      uint64_t v92 = v122;
                      uint64_t v93 = v113;
                      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v113, v90, v78);
                      BOOL v94 = v112;
                      LODWORD(v118) = sub_1A6891FC0();
                      uint64_t v95 = *(void (**)(char *, uint64_t))(v92 + 8);
                      v95(v93, v120);
                      v95(v94, v120);
                      uint64_t v60 = v119;
                      v80(v115, v59);
                      if (v118) {
                        goto LABEL_45;
                      }
LABEL_41:
                      v80(v123, v59);
                      v80(v127, v59);
                      v80(v129, v59);
                      v80(v126, v59);
                      v80(v128, v59);
                      v80(v130, v59);
                      BOOL v66 = 0;
LABEL_42:
                      uint64_t v67 = v124;
                      uint64_t v32 = v125;
                      goto LABEL_32;
                    }
                    (*(void (**)(char *, uint64_t))(v122 + 8))(v112, v78);
                  }
                  (*(void (**)(char *, uint64_t))(v116 + 8))(v81, TupleTypeMetadata2);
                  uint64_t v60 = v119;
                  goto LABEL_41;
                }
LABEL_29:
                uint64_t v32 = v125;
                uint64_t v82 = v126;
                uint64_t v60 = v119;
                v80(v123, v59);
                v80(v127, v59);
                v80(v129, v59);
                v80(v82, v59);
                v80(v128, v59);
                v80(v130, v59);
                goto LABEL_30;
              }
              (*(void (**)(char *, uint64_t))(v61 + 8))(v117, v78);
            }
            (*(void (**)(char *, uint64_t))(v116 + 8))(v73, TupleTypeMetadata2);
            uint64_t v80 = (void (*)(char *, uint64_t))*((void *)v62 + 1);
            goto LABEL_29;
          }
LABEL_21:
          uint64_t v71 = (void (*)(char *, uint64_t))*((void *)v62 + 1);
          v71(v58, v8);
          v71(v127, v8);
          v71(v129, v8);
          v71(v126, v8);
          v71(v128, v8);
          v71(v130, v8);
          goto LABEL_30;
        }
        uint64_t v62 = v131;
      }
      else
      {
        uint64_t v60 = v119;
        uint64_t v32 = v125;
        uint64_t v62 = v131;
        uint64_t v61 = v122;
        if (!v54) {
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    uint64_t v68 = (void (*)(char *, uint64_t))*((void *)v131 + 1);
    v68(v53, v8);
    v68(v51, v8);
    v68(v49, v8);
    BOOL v66 = 0;
    uint64_t v67 = v125;
    uint64_t v32 = v39;
    uint64_t v60 = v119;
  }
  else
  {
    uint64_t v60 = v42;
    v44(v38, (uint64_t)v42, v32);
    uint64_t v64 = *(void *)v38;
    uint64_t v63 = *((void *)v38 + 1);
    int v65 = *((_DWORD *)v38 + 4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      BOOL v66 = 0;
      uint64_t v67 = v125;
      uint64_t v32 = v39;
    }
    else
    {
      int v69 = *((_DWORD *)v43 + 4);
      if (v64 == *(void *)v43 && v63 == *((void *)v43 + 1))
      {
        swift_bridgeObjectRelease_n();
        uint64_t v67 = v124;
      }
      else
      {
        char v70 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v67 = v124;
        if ((v70 & 1) == 0)
        {
          BOOL v66 = 0;
          goto LABEL_32;
        }
      }
      BOOL v66 = v65 == v69;
    }
  }
LABEL_32:
  (*(void (**)(char *, uint64_t))(v67 + 8))(v60, v32);
  return v66;
}

uint64_t sub_1A6838C8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D61726170 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A6838D68(char a1)
{
  if (a1) {
    return 0x6D61726170;
  }
  else {
    return 1701667182;
  }
}

BOOL sub_1A6838D94(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A6838DA4()
{
  return sub_1A6893210();
}

uint64_t sub_1A6838DCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7892834 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A6838EA8()
{
  return sub_1A6893250();
}

uint64_t sub_1A6838EF0(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 7892834;
  }
}

BOOL sub_1A6838F1C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A6838F2C()
{
  return sub_1A6893210();
}

uint64_t sub_1A6838F54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A68390C0()
{
  return sub_1A6893250();
}

uint64_t sub_1A6839108(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 12639;
      break;
    case 2:
      uint64_t result = 7235949;
      break;
    case 3:
      uint64_t result = 7889261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A6839170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A6839290(a1, a2, a3, (void (*)(unsigned char *, void))sub_1A6838DA4);
}

uint64_t sub_1A6839188()
{
  return sub_1A6838D68(*v0);
}

uint64_t sub_1A6839190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A6838C8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A68391B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A683920C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

BOOL sub_1A6839260(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A6838D94(*a1, *a2);
}

uint64_t sub_1A683926C()
{
  return sub_1A6838EA8();
}

uint64_t sub_1A6839288()
{
  return sub_1A6838DA4();
}

uint64_t sub_1A6839290(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void))
{
  sub_1A6893200();
  a4(v7, *v4);
  return sub_1A6893250();
}

uint64_t sub_1A68392D8()
{
  return sub_1A6838EF0(*v0);
}

uint64_t sub_1A68392E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A6838DCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6839308(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A683935C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

BOOL sub_1A68393B0(char *a1, char *a2)
{
  return sub_1A6838F1C(*a1, *a2);
}

uint64_t sub_1A68393BC()
{
  return sub_1A68390C0();
}

uint64_t sub_1A68393C4()
{
  return sub_1A6838F2C();
}

uint64_t sub_1A68393CC()
{
  return sub_1A6893250();
}

uint64_t sub_1A683940C()
{
  return sub_1A6839108(*v0);
}

uint64_t sub_1A6839414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A6838F54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683943C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A6839490(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t TTSAudioEffect.Spec.GenericWire.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = _s4SpecV11GenericWireO15ValueCodingKeysOMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v57 = v6;
  uint64_t v58 = sub_1A68930B0();
  uint64_t v47 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  int v69 = (char *)v46 - v7;
  uint64_t v8 = sub_1A6892A00();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v63 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v60 = (char *)v46 - v12;
  MEMORY[0x1F4188790](v11);
  BOOL v53 = (char *)v46 - v13;
  uint64_t v14 = _s4SpecV11GenericWireO13BoxCodingKeysOMa();
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = v14;
  uint64_t v52 = sub_1A68930B0();
  uint64_t v48 = *(void *)(v52 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)v46 - v16;
  uint64_t v17 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[2] = v4;
  v46[1] = v5;
  _s4SpecV11GenericWireO10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v64 = sub_1A68930B0();
  uint64_t v59 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v21 = (char *)v46 - v20;
  sub_1A673E63C(a1, a1[3]);
  sub_1A68932B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v62, a2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v62 = *((void *)v19 + 1);
    MEMORY[0x1F4188790](EnumCaseMultiPayload);
    strcpy((char *)&v46[-4], "id  min max ");
    uint64_t v23 = sub_1A6750AC4(&qword_1E96C14F0);
    uint64_t v24 = v55;
    uint64_t v65 = v23;
    uint64_t v66 = v55;
    uint64_t v67 = v55;
    uint64_t v68 = v55;
    TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    uint64_t v26 = &v19[TupleTypeMetadata[12]];
    uint64_t v27 = &v19[TupleTypeMetadata[16]];
    uint64_t v28 = &v19[TupleTypeMetadata[20]];
    uint64_t v30 = v53;
    uint64_t v29 = v54;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v31(v53, v26, v24);
    v31(v60, v27, v24);
    v31(v63, v28, v24);
    LOBYTE(v65) = 1;
    uint64_t v32 = v64;
    sub_1A6893010();
    LOBYTE(v65) = 0;
    uint64_t v33 = v61;
    uint64_t v34 = v58;
    sub_1A6893020();
    if (v33)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v69, v34);
      uint64_t v35 = *(void (**)(char *, uint64_t))(v29 + 8);
      v35(v63, v24);
      v35(v60, v24);
      v35(v30, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v21, v32);
    }
    else
    {
      uint64_t v61 = v21;
      unsigned __int8 v42 = v60;
      swift_bridgeObjectRelease();
      LOBYTE(v65) = 1;
      sub_1A6893030();
      LOBYTE(v65) = 2;
      float v43 = v42;
      uint64_t v44 = v58;
      sub_1A6893030();
      LOBYTE(v65) = 3;
      sub_1A6893030();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v69, v44);
      uint64_t v45 = *(void (**)(char *, uint64_t))(v29 + 8);
      v45(v63, v24);
      v45(v43, v24);
      v45(v30, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v61, v64);
    }
  }
  else
  {
    uint64_t v37 = v48;
    LOBYTE(v65) = 0;
    char v38 = v51;
    uint64_t v39 = v64;
    sub_1A6893010();
    LOBYTE(v65) = 0;
    uint64_t v40 = v52;
    uint64_t v41 = v61;
    sub_1A6893040();
    swift_bridgeObjectRelease();
    if (!v41)
    {
      LOBYTE(v65) = 1;
      sub_1A68930A0();
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v21, v39);
  }
}

uint64_t TTSAudioEffect.Spec.GenericWire.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v7 = _s4SpecV11GenericWireO15ValueCodingKeysOMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v76 = v7;
  uint64_t v72 = sub_1A6893000();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v78 = (char *)&v62 - v8;
  uint64_t v9 = _s4SpecV11GenericWireO13BoxCodingKeysOMa();
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v74 = v9;
  uint64_t v71 = sub_1A6893000();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v77 = (char *)&v62 - v10;
  _s4SpecV11GenericWireO10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v11 = sub_1A6893000();
  uint64_t v79 = *(void *)(v11 - 8);
  uint64_t v80 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v62 - v12;
  uint64_t v68 = a2;
  uint64_t v67 = a3;
  uint64_t v14 = type metadata accessor for TTSAudioEffect.Spec.GenericWire();
  uint64_t v65 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v62 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = a1[3];
  uint64_t v82 = a1;
  sub_1A673E63C(a1, v23);
  uint64_t v81 = v13;
  uint64_t v24 = v83;
  sub_1A68932A0();
  if (!v24)
  {
    uint64_t v63 = (uint64_t *)v20;
    uint64_t v64 = v17;
    uint64_t v83 = v22;
    uint64_t v25 = v81;
    uint64_t v26 = v80;
    *(void *)&long long v84 = sub_1A6892FF0();
    sub_1A68923C0();
    swift_getWitnessTable();
    *(void *)&long long v86 = sub_1A6892B00();
    *((void *)&v86 + 1) = v27;
    *(void *)&long long v87 = v28;
    *((void *)&v87 + 1) = v29;
    sub_1A6892AF0();
    swift_getWitnessTable();
    sub_1A68927C0();
    char v30 = v84;
    if (v84 == 2 || (long long v62 = v86, v84 = v86, v85 = v87, (sub_1A68927E0() & 1) == 0))
    {
      uint64_t v34 = sub_1A6892CA0();
      swift_allocError();
      char v36 = v35;
      sub_1A6741AD0(&qword_1E96C26F0);
      *char v36 = v14;
      sub_1A6892F50();
      sub_1A6892C90();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x1E4FBBA70], v34);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v25, v26);
    }
    else
    {
      if (v30)
      {
        LOBYTE(v84) = 1;
        uint64_t v38 = v26;
        sub_1A6892F40();
        char v88 = 0;
        uint64_t v48 = v72;
        uint64_t v49 = sub_1A6892F60();
        uint64_t v51 = v50;
        MEMORY[0x1F4188790](v49);
        strcpy((char *)&v62 - 32, "id  min max ");
        *(void *)&long long v84 = sub_1A6750AC4(&qword_1E96C14F0);
        *((void *)&v84 + 1) = sub_1A6892A00();
        *(void *)&long long v85 = *((void *)&v84 + 1);
        *((void *)&v85 + 1) = *((void *)&v84 + 1);
        uint64_t v52 = v48;
        uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
        uint64_t v54 = v64;
        uint64_t v55 = (char *)v64 + *(int *)(TupleTypeMetadata + 48);
        *uint64_t v64 = v49;
        v54[1] = v51;
        LOBYTE(v84) = 1;
        sub_1A6892F70();
        uint64_t v77 = v55;
        uint64_t v60 = (char *)v64 + *(int *)(TupleTypeMetadata + 64);
        LOBYTE(v84) = 2;
        uint64_t v76 = (uint64_t)v60;
        sub_1A6892F70();
        uint64_t v61 = v79;
        LOBYTE(v84) = 3;
        sub_1A6892F70();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v78, v52);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v81, v38);
        uint64_t v57 = v64;
      }
      else
      {
        LOBYTE(v84) = 0;
        uint64_t v31 = v77;
        uint64_t v32 = v25;
        uint64_t v33 = v26;
        sub_1A6892F40();
        uint64_t v39 = v32;
        LOBYTE(v84) = 0;
        uint64_t v40 = v71;
        uint64_t v41 = v31;
        uint64_t v42 = sub_1A6892F80();
        uint64_t v43 = v79;
        uint64_t v44 = v42;
        uint64_t v46 = v45;
        LOBYTE(v84) = 1;
        int v47 = sub_1A6892FE0();
        uint64_t v56 = *(void (**)(char *, uint64_t))(v69 + 8);
        LODWORD(v78) = v47;
        v56(v41, v40);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v33);
        uint64_t v57 = v63;
        *uint64_t v63 = v44;
        v57[1] = v46;
        *((_DWORD *)v57 + 4) = v78;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = *(void (**)(char *, uint64_t *, uint64_t))(v65 + 32);
      uint64_t v59 = v83;
      v58(v83, v57, v14);
      v58(v66, (uint64_t *)v59, v14);
    }
  }
  return sub_1A6741A24((uint64_t)v82);
}

uint64_t sub_1A683A7E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return TTSAudioEffect.Spec.GenericWire.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1A683A808(void *a1, uint64_t a2)
{
  return TTSAudioEffect.Spec.GenericWire.encode(to:)(a1, a2);
}

BOOL sub_1A683A820(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3)
{
  return static TTSAudioEffect.Spec.GenericWire.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t TTSAudioEffect.Spec.Control.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 62)
  {
    case 1uLL:
      uint64_t v6 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      sub_1A6893210();
      sub_1A68920F0();
      uint64_t v7 = *(void *)(v6 + 16);
      uint64_t result = sub_1A6893210();
      if (v7)
      {
        uint64_t v9 = v6 + 32;
        do
        {
          v9 += 8;
          uint64_t result = TTSAudioEffect.Spec.Control.hash(into:)(a1);
          --v7;
        }
        while (v7);
      }
      break;
    case 2uLL:
      sub_1A6893210();
      sub_1A68920F0();
      uint64_t result = sub_1A68920F0();
      break;
    case 3uLL:
      uint64_t v10 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x48);
      sub_1A6893210();
      sub_1A68920F0();
      sub_1A68920F0();
      sub_1A6893230();
      sub_1A6893230();
      sub_1A6893230();
      if (v10)
      {
        sub_1A6893220();
        swift_bridgeObjectRetain();
        sub_1A68920F0();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t result = sub_1A6893220();
      }
      break;
    default:
      uint64_t v4 = *(void *)(v2 + 24);
      uint64_t v5 = *(void *)(v2 + 32);
      sub_1A6893210();
      sub_1A6893220();
      if (v4)
      {
        swift_bridgeObjectRetain();
        sub_1A68920F0();
        swift_bridgeObjectRelease();
      }
      uint64_t v11 = *(void *)(v5 + 16);
      uint64_t result = sub_1A6893210();
      if (v11)
      {
        uint64_t v12 = v5 + 32;
        do
        {
          v12 += 8;
          uint64_t result = TTSAudioEffect.Spec.Control.hash(into:)(a1);
          --v11;
        }
        while (v11);
      }
      break;
  }
  return result;
}

uint64_t sub_1A683AAD0()
{
  uint64_t result = 0x70756F7267;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1802398060;
      break;
    case 2:
      uint64_t result = 0x656C67676F74;
      break;
    case 3:
      uint64_t result = 0x726564696C73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A683AB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A6844440(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683AB74(uint64_t a1)
{
  unint64_t v2 = sub_1A683FF98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A683ABB0(uint64_t a1)
{
  unint64_t v2 = sub_1A683FF98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A683ABEC()
{
  if (*v0) {
    return 0x6E6572646C696863;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1A683AC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A68445D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683AC4C(uint64_t a1)
{
  unint64_t v2 = sub_1A684013C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A683AC88(uint64_t a1)
{
  unint64_t v2 = sub_1A684013C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A683ACC4()
{
  if (*v0) {
    return 28532;
  }
  else {
    return 0x6C6562616CLL;
  }
}

uint64_t sub_1A683ACF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A68446C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683AD18(uint64_t a1)
{
  unint64_t v2 = sub_1A6840094();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A683AD54(uint64_t a1)
{
  unint64_t v2 = sub_1A6840094();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A683AD90()
{
  uint64_t result = 0x6574656D61726170;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      uint64_t result = 7235949;
      break;
    case 3:
      uint64_t result = 7889261;
      break;
    case 4:
      uint64_t result = 1885697139;
      break;
    case 5:
      uint64_t result = 1953066613;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A683AE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A6844794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683AE64(uint64_t a1)
{
  unint64_t v2 = sub_1A683FFEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A683AEA0(uint64_t a1)
{
  unint64_t v2 = sub_1A683FFEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A683AEDC()
{
  if (*v0) {
    return 0x6C6562616CLL;
  }
  else {
    return 0x6574656D61726170;
  }
}

uint64_t sub_1A683AF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A68449E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683AF44(uint64_t a1)
{
  unint64_t v2 = sub_1A6840040();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A683AF80(uint64_t a1)
{
  unint64_t v2 = sub_1A6840040();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TTSAudioEffect.Spec.Control.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v44 = sub_1A6741AD0(&qword_1E96C35A8);
  uint64_t v37 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1A6741AD0(&qword_1E96C35B0);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1A6741AD0(&qword_1E96C35B8);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6741AD0(&qword_1E96C35C0);
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1A6741AD0(&qword_1E96C35C8);
  uint64_t v45 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *v2;
  sub_1A673E63C(a1, a1[3]);
  sub_1A683FF98();
  int v47 = v13;
  sub_1A68932B0();
  switch(v14 >> 62)
  {
    case 1uLL:
      uint64_t v20 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      LOBYTE(v50) = 1;
      sub_1A6840094();
      uint64_t v22 = v47;
      uint64_t v21 = v48;
      sub_1A6893010();
      LOBYTE(v50) = 0;
      uint64_t v23 = v41;
      uint64_t v24 = v46;
      sub_1A6893040();
      if (!v24)
      {
        uint64_t v50 = v20;
        char v49 = 1;
        sub_1A6741AD0(&qword_1E96C35D0);
        sub_1A6844F80(&qword_1E96C35D8, &qword_1E96C35D0, (void (*)(void))sub_1A68400E8);
        sub_1A6893080();
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v23);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v22, v21);
      break;
    case 2uLL:
      LOBYTE(v50) = 2;
      sub_1A6840040();
      uint64_t v26 = v47;
      uint64_t v25 = v48;
      sub_1A6893010();
      LOBYTE(v50) = 0;
      uint64_t v27 = v42;
      uint64_t v28 = v46;
      sub_1A6893040();
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v27);
        uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v45 + 8);
        char v30 = v26;
      }
      else
      {
        LOBYTE(v50) = 1;
        sub_1A6893040();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v27);
        uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v45 + 8);
        char v30 = v47;
      }
      uint64_t result = v29(v30, v25);
      break;
    case 3uLL:
      uint64_t v42 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v31 = *(void *)((v14 & 0x3FFFFFFFFFFFFFFFLL) + 0x48);
      LOBYTE(v50) = 3;
      sub_1A683FFEC();
      uint64_t v32 = v43;
      uint64_t v34 = v47;
      uint64_t v33 = v48;
      sub_1A6893010();
      LOBYTE(v50) = 0;
      uint64_t v35 = v44;
      uint64_t v36 = v46;
      sub_1A6893040();
      if (!v36)
      {
        uint64_t v46 = v31;
        LOBYTE(v50) = 1;
        sub_1A6893040();
        LOBYTE(v50) = 2;
        sub_1A6893060();
        uint64_t v33 = v48;
        LOBYTE(v50) = 3;
        sub_1A6893060();
        LOBYTE(v50) = 4;
        sub_1A6893060();
        LOBYTE(v50) = 5;
        sub_1A6893020();
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v35);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v34, v33);
      break;
    default:
      uint64_t v15 = *(void *)(v14 + 32);
      LOBYTE(v50) = 0;
      sub_1A684013C();
      uint64_t v17 = v47;
      uint64_t v16 = v48;
      sub_1A6893010();
      LOBYTE(v50) = 0;
      uint64_t v18 = v46;
      sub_1A6893020();
      if (!v18)
      {
        uint64_t v50 = v15;
        char v49 = 1;
        sub_1A6741AD0(&qword_1E96C35D0);
        sub_1A6844F80(&qword_1E96C35D8, &qword_1E96C35D0, (void (*)(void))sub_1A68400E8);
        sub_1A6893080();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v16);
      break;
  }
  return result;
}

uint64_t TTSAudioEffect.Spec.Control.hashValue.getter()
{
  v2[9] = *v0;
  sub_1A6893200();
  TTSAudioEffect.Spec.Control.hash(into:)((uint64_t)v2);
  return sub_1A6893250();
}

uint64_t TTSAudioEffect.Spec.Control.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v72 = sub_1A6741AD0(&qword_1E96C35E8);
  uint64_t v69 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v76 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1A6741AD0(&qword_1E96C35F0);
  uint64_t v70 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v75 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1A6741AD0(&qword_1E96C35F8);
  uint64_t v68 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C3600);
  uint64_t v67 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C3608);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v77 = a1;
  sub_1A673E63C(a1, v14);
  sub_1A683FF98();
  uint64_t v15 = v78;
  sub_1A68932A0();
  if (v15) {
    goto LABEL_9;
  }
  uint64_t v66 = v7;
  uint64_t v16 = v6;
  uint64_t v18 = v75;
  uint64_t v17 = v76;
  uint64_t v78 = v11;
  uint64_t v19 = sub_1A6892FF0();
  uint64_t v20 = v10;
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v28 = sub_1A6892CA0();
    swift_allocError();
    char v30 = v29;
    sub_1A6741AD0(&qword_1E96C26F0);
    void *v30 = &type metadata for TTSAudioEffect.Spec.Control;
    sub_1A6892F50();
    sub_1A6892C90();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v13, v10);
LABEL_9:
    uint64_t v54 = (uint64_t)v77;
    return sub_1A6741A24(v54);
  }
  uint64_t v21 = *(unsigned __int8 *)(v19 + 32);
  uint64_t v65 = v19;
  uint64_t v22 = (unint64_t *)v74;
  switch(v21)
  {
    case 1:
      char v79 = 1;
      sub_1A6840094();
      sub_1A6892F40();
      uint64_t v31 = swift_allocObject();
      char v79 = 0;
      uint64_t v32 = v71;
      *(void *)(v31 + 16) = sub_1A6892F80();
      *(void *)(v31 + 24) = v44;
      sub_1A6741AD0(&qword_1E96C35D0);
      char v79 = 1;
      sub_1A6844F80(&qword_1E96C3610, &qword_1E96C35D0, (void (*)(void))sub_1A684021C);
      sub_1A6892FC0();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v16, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v13, v20);
      uint64_t v24 = v31 | 0x4000000000000000;
      goto LABEL_11;
    case 2:
      char v79 = 2;
      sub_1A6840040();
      uint64_t v33 = v18;
      sub_1A6892F40();
      uint64_t v34 = v20;
      uint64_t v35 = swift_allocObject();
      char v79 = 0;
      uint64_t v36 = v73;
      uint64_t v37 = sub_1A6892F80();
      uint64_t v38 = v78;
      *(void *)(v35 + 16) = v37;
      *(void *)(v35 + 24) = v45;
      char v79 = 1;
      uint64_t v46 = sub_1A6892F80();
      int v47 = v33;
      uint64_t v53 = v52;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v47, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v34);
      *(void *)(v35 + 32) = v46;
      *(void *)(v35 + 40) = v53;
      uint64_t v54 = (uint64_t)v77;
      *uint64_t v22 = v35 | 0x8000000000000000;
      break;
    case 3:
      char v79 = 3;
      sub_1A683FFEC();
      sub_1A6892F40();
      uint64_t v75 = (char *)swift_allocObject();
      char v79 = 0;
      uint64_t v40 = v72;
      uint64_t v41 = sub_1A6892F80();
      uint64_t v42 = v78;
      uint64_t v48 = v75;
      *((void *)v75 + 2) = v41;
      *((void *)v48 + 3) = v49;
      char v79 = 1;
      uint64_t v50 = sub_1A6892F80();
      uint64_t v51 = v69;
      uint64_t v55 = v75;
      *((void *)v75 + 4) = v50;
      *((void *)v55 + 5) = v56;
      char v79 = 2;
      sub_1A6892FA0();
      *((_DWORD *)v75 + 12) = v57;
      char v79 = 3;
      sub_1A6892FA0();
      *((_DWORD *)v75 + 13) = v58;
      char v79 = 4;
      sub_1A6892FA0();
      uint64_t v59 = v17;
      uint64_t v73 = v20;
      *((_DWORD *)v75 + 14) = v60;
      char v79 = 5;
      uint64_t v61 = sub_1A6892F60();
      uint64_t v63 = v62;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v59, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v73);
      unint64_t v64 = (unint64_t)v75;
      *((void *)v75 + 8) = v61;
      *(void *)(v64 + 72) = v63;
      uint64_t v54 = (uint64_t)v77;
      *uint64_t v22 = v64 | 0xC000000000000000;
      break;
    default:
      char v79 = 0;
      sub_1A684013C();
      sub_1A6892F40();
      uint64_t v73 = v20;
      uint64_t v23 = v13;
      uint64_t v24 = swift_allocObject();
      char v79 = 0;
      uint64_t v25 = v66;
      uint64_t v26 = sub_1A6892F60();
      uint64_t v27 = v78;
      *(void *)(v24 + 16) = v26;
      *(void *)(v24 + 24) = v43;
      sub_1A6741AD0(&qword_1E96C35D0);
      char v79 = 1;
      sub_1A6844F80(&qword_1E96C3610, &qword_1E96C35D0, (void (*)(void))sub_1A684021C);
      sub_1A6892FC0();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v25);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v73);
LABEL_11:
      uint64_t v54 = (uint64_t)v77;
      *uint64_t v74 = v24;
      break;
  }
  return sub_1A6741A24(v54);
}

uint64_t sub_1A683C4E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TTSAudioEffect.Spec.Control.init(from:)(a1, a2);
}

uint64_t sub_1A683C4FC(void *a1)
{
  return TTSAudioEffect.Spec.Control.encode(to:)(a1);
}

uint64_t sub_1A683C518()
{
  v2[9] = *v0;
  sub_1A6893200();
  TTSAudioEffect.Spec.Control.hash(into:)((uint64_t)v2);
  return sub_1A6893250();
}

uint64_t sub_1A683C568()
{
  v2[9] = *v0;
  sub_1A6893200();
  TTSAudioEffect.Spec.Control.hash(into:)((uint64_t)v2);
  return sub_1A6893250();
}

uint64_t TTSAudioEffect.Spec.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSAudioEffect.Spec.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTSAudioEffect.Spec.name.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSAudioEffect.Spec.localizedEffectDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSAudioEffect.Spec.localizedEffectDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TTSAudioEffect.Spec.localizedEffectDescription.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSAudioEffect.Spec.icon.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTSAudioEffect.Spec.icon.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*TTSAudioEffect.Spec.icon.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSAudioEffect.Spec.bypassWhenUncustomized.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t TTSAudioEffect.Spec.bypassWhenUncustomized.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*TTSAudioEffect.Spec.bypassWhenUncustomized.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSAudioEffect.Spec.controls.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*TTSAudioEffect.Spec.controls.modify())(void, void)
{
  return nullsub_19;
}

uint64_t sub_1A683C7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v13 = a3;
  uint64_t v89 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & *(void *)(a3 + 64);
  int64_t v90 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  uint64_t v87 = a2;
  swift_bridgeObjectRetain();
  uint64_t v88 = a8;
  swift_bridgeObjectRetain();
  uint64_t v86 = a6;
  swift_bridgeObjectRetain();
  uint64_t v85 = a4;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v93 = v13;
  BOOL v94 = (void *)MEMORY[0x1E4FBC868];
  while (2)
  {
    if (!v17)
    {
      int64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_109;
      }
      if (v21 >= v90) {
        goto LABEL_100;
      }
      unint64_t v22 = *(void *)(v89 + 8 * v21);
      int64_t v23 = v18 + 1;
      if (!v22)
      {
        int64_t v23 = v18 + 2;
        if (v18 + 2 >= v90) {
          goto LABEL_100;
        }
        unint64_t v22 = *(void *)(v89 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v18 + 3;
          if (v18 + 3 >= v90) {
            goto LABEL_100;
          }
          unint64_t v22 = *(void *)(v89 + 8 * v23);
          if (!v22)
          {
            int64_t v23 = v18 + 4;
            if (v18 + 4 >= v90) {
              goto LABEL_100;
            }
            unint64_t v22 = *(void *)(v89 + 8 * v23);
            if (!v22)
            {
              uint64_t v24 = v18 + 5;
              if (v18 + 5 < v90)
              {
                unint64_t v22 = *(void *)(v89 + 8 * v24);
                if (v22)
                {
                  int64_t v23 = v18 + 5;
                  goto LABEL_23;
                }
                while (1)
                {
                  int64_t v23 = v24 + 1;
                  if (__OFADD__(v24, 1)) {
                    goto LABEL_112;
                  }
                  if (v23 >= v90) {
                    break;
                  }
                  unint64_t v22 = *(void *)(v89 + 8 * v23);
                  ++v24;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
LABEL_100:
              swift_release();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)a9 = a1;
              *(void *)(a9 + 8) = v87;
              *(void *)(a9 + 16) = a7;
              *(void *)(a9 + 24) = v88;
              *(void *)(a9 + 32) = a5;
              *(void *)(a9 + 40) = v86;
              *(unsigned char *)(a9 + 48) = a10 & 1;
              *(void *)(a9 + 56) = v13;
              *(void *)(a9 + 64) = v85;
              *(void *)(a9 + 72) = v94;
              *(void *)(a9 + 80) = v19;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
          }
        }
      }
LABEL_23:
      uint64_t v97 = (v22 - 1) & v22;
      int64_t v98 = v23;
      unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
      goto LABEL_24;
    }
    uint64_t v97 = (v17 - 1) & v17;
    int64_t v98 = v18;
    unint64_t v20 = __clz(__rbit64(v17)) | (v18 << 6);
LABEL_24:
    uint64_t v25 = *(void *)(v13 + 56) + 88 * v20;
    uint64_t v27 = *(void *)(v25 + 56);
    uint64_t v26 = *(void *)(v25 + 64);
    uint64_t v109 = v27 + 64;
    uint64_t v28 = 1 << *(unsigned char *)(v27 + 32);
    if (v28 < 64) {
      uint64_t v29 = ~(-1 << v28);
    }
    else {
      uint64_t v29 = -1;
    }
    unint64_t v30 = v29 & *(void *)(v27 + 64);
    uint64_t v104 = *(void *)(v25 + 8);
    uint64_t v105 = *(void *)v25;
    uint64_t v102 = *(void *)(v25 + 24);
    uint64_t v103 = *(void *)(v25 + 16);
    uint64_t v101 = *(void *)(v25 + 32);
    uint64_t v100 = *(void *)(v25 + 40);
    char v99 = *(unsigned char *)(v25 + 48);
    sub_1A674239C(*(void *)v25, v104, v103, v102, v101, v100, v99);
    int64_t v31 = (unint64_t)(v28 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    uint64_t v108 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v32 = 0;
    while (v30)
    {
      unint64_t v33 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      unint64_t v34 = v33 | (v32 << 6);
LABEL_46:
      uint64_t v38 = *(void *)(v27 + 56) + 40 * v34;
      if (*(unsigned char *)(v38 + 37) == 1)
      {
        uint64_t v39 = *(void *)v38;
        uint64_t v40 = *(void *)(v38 + 8);
        uint64_t v41 = *(void *)(v38 + 16);
        if (!v40) {
          goto LABEL_53;
        }
        if ((v41 & 0x100000000) == 0)
        {
          sub_1A67423E8();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v112 = v94;
          unint64_t v43 = sub_1A673F7AC(v39, v40);
          uint64_t v44 = v94[2];
          BOOL v45 = (v42 & 1) == 0;
          uint64_t v46 = v44 + v45;
          if (__OFADD__(v44, v45)) {
            goto LABEL_107;
          }
          if (v94[3] >= v46)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unint64_t v92 = v43;
              char v96 = v42;
              sub_1A67D0790();
              char v42 = v96;
              unint64_t v43 = v92;
            }
          }
          else
          {
            char v95 = v42;
            sub_1A67CFD38(v46, isUniquelyReferenced_nonNull_native);
            unint64_t v47 = sub_1A673F7AC(v39, v40);
            int v49 = v48 & 1;
            char v42 = v95;
            if ((v95 & 1) != v49) {
              goto LABEL_113;
            }
            unint64_t v43 = v47;
          }
          BOOL v94 = v112;
          if (v42)
          {
            *(_DWORD *)(v112[7] + 4 * v43) = v41;
          }
          else
          {
            v112[(v43 >> 6) + 8] |= 1 << v43;
            uint64_t v50 = (uint64_t *)(v112[6] + 16 * v43);
            *uint64_t v50 = v39;
            v50[1] = v40;
            *(_DWORD *)(v112[7] + 4 * v43) = v41;
            uint64_t v51 = v112[2];
            BOOL v52 = __OFADD__(v51, 1);
            uint64_t v53 = v51 + 1;
            if (v52) {
              goto LABEL_110;
            }
            v112[2] = v53;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          sub_1A67D2C28();
LABEL_53:
          sub_1A67D2C28();
        }
      }
    }
    int64_t v35 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    if (v35 >= v31) {
      goto LABEL_61;
    }
    unint64_t v36 = *(void *)(v109 + 8 * v35);
    ++v32;
    if (v36) {
      goto LABEL_45;
    }
    int64_t v32 = v35 + 1;
    if (v35 + 1 >= v31) {
      goto LABEL_61;
    }
    unint64_t v36 = *(void *)(v109 + 8 * v32);
    if (v36) {
      goto LABEL_45;
    }
    int64_t v32 = v35 + 2;
    if (v35 + 2 >= v31) {
      goto LABEL_61;
    }
    unint64_t v36 = *(void *)(v109 + 8 * v32);
    if (v36) {
      goto LABEL_45;
    }
    int64_t v32 = v35 + 3;
    if (v35 + 3 >= v31) {
      goto LABEL_61;
    }
    unint64_t v36 = *(void *)(v109 + 8 * v32);
    if (v36)
    {
LABEL_45:
      unint64_t v30 = (v36 - 1) & v36;
      unint64_t v34 = __clz(__rbit64(v36)) + (v32 << 6);
      goto LABEL_46;
    }
    int64_t v37 = v35 + 4;
    if (v37 < v31)
    {
      unint64_t v36 = *(void *)(v109 + 8 * v37);
      if (!v36)
      {
        while (1)
        {
          int64_t v32 = v37 + 1;
          if (__OFADD__(v37, 1)) {
            break;
          }
          if (v32 >= v31) {
            goto LABEL_61;
          }
          unint64_t v36 = *(void *)(v109 + 8 * v32);
          ++v37;
          if (v36) {
            goto LABEL_45;
          }
        }
LABEL_105:
        __break(1u);
        goto LABEL_106;
      }
      int64_t v32 = v37;
      goto LABEL_45;
    }
LABEL_61:
    swift_release();
    swift_bridgeObjectRetain();
    sub_1A67D2CA4(v105, v104, v103, v102, v101, v100, v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v26;
    int64_t v55 = 0;
    uint64_t v56 = v26 + 64;
    uint64_t v57 = 1 << *(unsigned char *)(v26 + 32);
    if (v57 < 64) {
      uint64_t v58 = ~(-1 << v57);
    }
    else {
      uint64_t v58 = -1;
    }
    unint64_t v59 = v58 & *(void *)(v26 + 64);
    int64_t v60 = (unint64_t)(v57 + 63) >> 6;
LABEL_67:
    if (v59)
    {
      unint64_t v64 = __clz(__rbit64(v59));
      v59 &= v59 - 1;
      unint64_t v65 = v64 | (v55 << 6);
      goto LABEL_86;
    }
    int64_t v66 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      goto LABEL_104;
    }
    if (v66 >= v60)
    {
LABEL_5:
      swift_release();
      uint64_t v13 = v93;
      unint64_t v17 = v97;
      int64_t v18 = v98;
      continue;
    }
    break;
  }
  unint64_t v67 = *(void *)(v56 + 8 * v66);
  ++v55;
  if (v67) {
    goto LABEL_85;
  }
  int64_t v55 = v66 + 1;
  if (v66 + 1 >= v60) {
    goto LABEL_5;
  }
  unint64_t v67 = *(void *)(v56 + 8 * v55);
  if (v67) {
    goto LABEL_85;
  }
  int64_t v55 = v66 + 2;
  if (v66 + 2 >= v60) {
    goto LABEL_5;
  }
  unint64_t v67 = *(void *)(v56 + 8 * v55);
  if (v67) {
    goto LABEL_85;
  }
  int64_t v55 = v66 + 3;
  if (v66 + 3 >= v60) {
    goto LABEL_5;
  }
  unint64_t v67 = *(void *)(v56 + 8 * v55);
  if (v67)
  {
LABEL_85:
    unint64_t v59 = (v67 - 1) & v67;
    unint64_t v65 = __clz(__rbit64(v67)) + (v55 << 6);
LABEL_86:
    uint64_t v69 = *(void *)(v54 + 56) + 40 * v65;
    if (*(unsigned char *)(v69 + 37) != 1) {
      goto LABEL_67;
    }
    uint64_t v61 = *(void *)v69;
    uint64_t v62 = *(void *)(v69 + 8);
    uint64_t v63 = *(void *)(v69 + 16);
    if (!v62)
    {
LABEL_81:
      sub_1A67D2C28();
      uint64_t v54 = v108;
      goto LABEL_67;
    }
    if ((v63 & 0x100000000) != 0) {
      goto LABEL_67;
    }
    sub_1A67423E8();
    swift_bridgeObjectRetain();
    char v110 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v71 = sub_1A673F7AC(v61, v62);
    uint64_t v72 = v19[2];
    BOOL v73 = (v70 & 1) == 0;
    uint64_t v74 = v72 + v73;
    if (__OFADD__(v72, v73)) {
      goto LABEL_108;
    }
    if (v19[3] < v74)
    {
      char v106 = v70;
      sub_1A67CF77C(v74, v110);
      unint64_t v75 = sub_1A673F7AC(v61, v62);
      if ((v106 & 1) != (v76 & 1)) {
        goto LABEL_113;
      }
      unint64_t v71 = v75;
      if ((v106 & 1) == 0) {
        goto LABEL_97;
      }
LABEL_95:
      *(_DWORD *)(v19[7] + 4 * v71) = v63;
LABEL_99:
      swift_bridgeObjectRelease();
      sub_1A67D2C28();
      goto LABEL_81;
    }
    if (v110)
    {
      if (v70) {
        goto LABEL_95;
      }
    }
    else
    {
      unint64_t v111 = v71;
      char v107 = v70;
      sub_1A67D0450();
      unint64_t v71 = v111;
      if (v107) {
        goto LABEL_95;
      }
    }
LABEL_97:
    v19[(v71 >> 6) + 8] |= 1 << v71;
    uint64_t v77 = (uint64_t *)(v19[6] + 16 * v71);
    uint64_t *v77 = v61;
    v77[1] = v62;
    *(_DWORD *)(v19[7] + 4 * v71) = v63;
    uint64_t v78 = v19[2];
    BOOL v52 = __OFADD__(v78, 1);
    uint64_t v79 = v78 + 1;
    if (v52) {
      goto LABEL_111;
    }
    v19[2] = v79;
    swift_bridgeObjectRetain();
    goto LABEL_99;
  }
  int64_t v68 = v66 + 4;
  if (v68 >= v60) {
    goto LABEL_5;
  }
  unint64_t v67 = *(void *)(v56 + 8 * v68);
  if (v67)
  {
    int64_t v55 = v68;
    goto LABEL_85;
  }
  while (1)
  {
    int64_t v55 = v68 + 1;
    if (__OFADD__(v68, 1)) {
      break;
    }
    if (v55 >= v60) {
      goto LABEL_5;
    }
    unint64_t v67 = *(void *)(v56 + 8 * v55);
    ++v68;
    if (v67) {
      goto LABEL_85;
    }
  }
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  uint64_t result = sub_1A6893150();
  __break(1u);
  return result;
}

uint64_t TTSAudioEffect.Spec.defaultParameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSAudioEffect.Spec.defaultParameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*TTSAudioEffect.Spec.defaultParameters.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSAudioEffect.Spec.defaultProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSAudioEffect.Spec.defaultProperties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*TTSAudioEffect.Spec.defaultProperties.modify())(void, void)
{
  return nullsub_19;
}

unint64_t sub_1A683D1A4(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 1852793705;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x7365786F62;
      break;
    case 5:
      unint64_t result = 0x736C6F72746E6F63;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A683D290()
{
  return sub_1A683D1A4(*v0);
}

uint64_t sub_1A683D298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A6844AEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A683D2C0(uint64_t a1)
{
  unint64_t v2 = sub_1A6840274();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A683D2FC(uint64_t a1)
{
  unint64_t v2 = sub_1A6840274();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TTSAudioEffect.Spec.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C3620);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v23 = *(void *)(v1 + 24);
  uint64_t v24 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v21 = *(void *)(v1 + 40);
  uint64_t v22 = v8;
  int v20 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v18 = *(void *)(v1 + 64);
  uint64_t v19 = v9;
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v16 = *(void *)(v1 + 80);
  uint64_t v17 = v10;
  sub_1A673E63C(a1, a1[3]);
  sub_1A6840274();
  sub_1A68932B0();
  LOBYTE(v27) = 0;
  uint64_t v11 = v25;
  sub_1A6893040();
  if (!v11)
  {
    uint64_t v13 = v18;
    uint64_t v12 = v19;
    LOBYTE(v27) = 1;
    sub_1A6893020();
    LOBYTE(v27) = 2;
    sub_1A6893020();
    LOBYTE(v27) = 3;
    sub_1A6893050();
    uint64_t v27 = v12;
    char v26 = 4;
    sub_1A6741AD0(&qword_1E96C3628);
    sub_1A68402C8(&qword_1E96C3630, (void (*)(void))sub_1A6840344);
    sub_1A6893080();
    uint64_t v27 = v13;
    char v26 = 5;
    sub_1A6741AD0(&qword_1E96C35D0);
    sub_1A6844F80(&qword_1E96C35D8, &qword_1E96C35D0, (void (*)(void))sub_1A68400E8);
    sub_1A6893080();
    uint64_t v27 = v17;
    char v26 = 6;
    sub_1A6741AD0(&qword_1E96C3640);
    sub_1A6840398(&qword_1E96C3648, &qword_1E96C3640);
    sub_1A6893080();
    uint64_t v27 = v16;
    char v26 = 7;
    sub_1A6741AD0(&qword_1E96C2A10);
    sub_1A6840398(&qword_1E96C3650, &qword_1E96C2A10);
    sub_1A6893080();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TTSAudioEffect.Spec.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C3658);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A6840274();
  sub_1A68932A0();
  if (v2)
  {
    sub_1A6741A24((uint64_t)a1);
  }
  else
  {
    LOBYTE(v36) = 0;
    uint64_t v9 = sub_1A6892F80();
    uint64_t v12 = v11;
    uint64_t v32 = v9;
    LOBYTE(v36) = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1A6892F60();
    uint64_t v15 = v14;
    uint64_t v30 = v13;
    uint64_t v31 = v12;
    LOBYTE(v36) = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1A6892F60();
    uint64_t v18 = v17;
    uint64_t v29 = v16;
    LOBYTE(v36) = 3;
    swift_bridgeObjectRetain();
    int v28 = sub_1A6892F90();
    sub_1A6741AD0(&qword_1E96C3628);
    char v35 = 4;
    sub_1A68402C8(&qword_1E96C3660, (void (*)(void))sub_1A6840404);
    sub_1A6892FC0();
    uint64_t v19 = v36;
    uint64_t v34 = sub_1A6741AD0(&qword_1E96C35D0);
    char v35 = 5;
    sub_1A6844F80(&qword_1E96C3610, &qword_1E96C35D0, (void (*)(void))sub_1A684021C);
    uint64_t v27 = v19;
    swift_bridgeObjectRetain();
    sub_1A6892FC0();
    uint64_t v20 = v36;
    uint64_t v33 = sub_1A6741AD0(&qword_1E96C3640);
    char v35 = 6;
    sub_1A6840458(&qword_1E96C3670, &qword_1E96C3640);
    uint64_t v34 = v20;
    swift_bridgeObjectRetain();
    sub_1A6892FC0();
    uint64_t v21 = v36;
    uint64_t v26 = sub_1A6741AD0(&qword_1E96C2A10);
    char v35 = 7;
    sub_1A6840458(&qword_1E96C3678, &qword_1E96C2A10);
    uint64_t v33 = v21;
    swift_bridgeObjectRetain();
    sub_1A6892FC0();
    v28 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v22 = v36;
    uint64_t v23 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = v27;
    swift_bridgeObjectRetain();
    uint64_t v25 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)a2 = v32;
    *(void *)(a2 + 8) = v23;
    *(void *)(a2 + 16) = v30;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v29;
    *(void *)(a2 + 40) = v18;
    *(unsigned char *)(a2 + 48) = v28;
    *(void *)(a2 + 56) = v24;
    *(void *)(a2 + 64) = v25;
    *(void *)(a2 + 72) = v33;
    *(void *)(a2 + 80) = v22;
    sub_1A6741A24((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A683DDEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TTSAudioEffect.Spec.init(from:)(a1, a2);
}

uint64_t sub_1A683DE04(void *a1)
{
  return TTSAudioEffect.Spec.encode(to:)(a1);
}

uint64_t sub_1A683DE20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7892834 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475706E69 && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74757074756FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1A683DF58(void *a1)
{
  uint64_t v27 = sub_1A6741AD0(&qword_1E96C36E8);
  uint64_t v23 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  int v28 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1A6741AD0(&qword_1E96C36F0);
  uint64_t v26 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C36F8);
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C3700);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v29 = a1;
  uint64_t v13 = sub_1A673E63C(a1, v12);
  sub_1A6835040();
  uint64_t v14 = v30;
  sub_1A68932A0();
  if (!v14)
  {
    uint64_t v15 = v28;
    uint64_t v30 = v9;
    uint64_t v16 = sub_1A6892FF0();
    if (*(void *)(v16 + 16) == 1)
    {
      if (*(unsigned char *)(v16 + 32))
      {
        if (*(unsigned char *)(v16 + 32) == 1)
        {
          char v32 = 1;
          sub_1A68350E8();
          sub_1A6892F40();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v24);
        }
        else
        {
          char v33 = 2;
          sub_1A6835094();
          sub_1A6892F40();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v27);
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
        uint64_t v13 = 0;
      }
      else
      {
        char v31 = 0;
        sub_1A683513C();
        sub_1A6892F40();
        uint64_t v20 = sub_1A6892F80();
        uint64_t v21 = v30;
        uint64_t v13 = (void *)v20;
        (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
      }
    }
    else
    {
      uint64_t v17 = sub_1A6892CA0();
      swift_allocError();
      uint64_t v19 = v18;
      sub_1A6741AD0(&qword_1E96C26F0);
      void *v19 = &_s4SpecV8EndPointON;
      uint64_t v13 = v11;
      sub_1A6892F50();
      sub_1A6892C90();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA70], v17);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    }
  }
  sub_1A6741A24((uint64_t)v29);
  return v13;
}

uint64_t sub_1A683E50C(long long *a1, long long *a2)
{
  sub_1A683E6BC(a1, (uint64_t)&v26);
  uint64_t v3 = v26;
  if (v32)
  {
    uint64_t v4 = v27;
    sub_1A683E6BC(a2, (uint64_t)&v19);
    if (v25 == 1)
    {
      if (v3 != v19 || v4 != v20) {
        goto LABEL_19;
      }
LABEL_18:
      char v11 = 1;
      return v11 & 1;
    }
    goto LABEL_9;
  }
  uint64_t v7 = v27;
  uint64_t v6 = v28;
  uint64_t v9 = v29;
  uint64_t v8 = v30;
  uint64_t v10 = v31;
  sub_1A683E6BC(a2, (uint64_t)&v19);
  if (v25)
  {
LABEL_9:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  if (v3 == v19 && v7 == v20 || (v16 = sub_1A6893120(), char v11 = 0, (v16 & 1) != 0))
  {
    if (v6 == v12 && v9 == v13 || (v17 = sub_1A6893120(), char v11 = 0, (v17 & 1) != 0))
    {
      if (v8 != v14 || v10 != v15)
      {
LABEL_19:
        char v11 = sub_1A6893120();
        return v11 & 1;
      }
      goto LABEL_18;
    }
  }
  return v11 & 1;
}

unint64_t sub_1A683E668()
{
  unint64_t result = qword_1E96D1270;
  if (!qword_1E96D1270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1270);
  }
  return result;
}

uint64_t sub_1A683E6BC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_1A683E6DC()
{
  unint64_t result = qword_1E96D1278;
  if (!qword_1E96D1278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1278);
  }
  return result;
}

unint64_t sub_1A683E730()
{
  unint64_t result = qword_1E96D1280;
  if (!qword_1E96D1280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1280);
  }
  return result;
}

uint64_t _s12TextToSpeech14TTSAudioEffectO4SpecV7ControlO2eeoiySbAG_AGtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        return 0;
      }
      uint64_t v11 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v13 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v14 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v15 = v14[4];
      BOOL v16 = v11 == v14[2] && v12 == v14[3];
      if (v16 || (v17 = sub_1A6893120(), uint64_t result = 0, (v17 & 1) != 0))
      {
        swift_retain();
        swift_retain();
        char v18 = sub_1A6836B98(v13, v15);
        swift_release();
        swift_release();
        return v18 & 1;
      }
      return result;
    case 2uLL:
      if (v3 >> 62 != 2) {
        return 0;
      }
      uint64_t v19 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v22 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v23 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v24 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v26 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v27 = *(void *)(v23 + 40);
      BOOL v28 = v19 == v24 && v20 == v25;
      if (v28 || (v29 = sub_1A6893120(), uint64_t result = 0, (v29 & 1) != 0))
      {
        if (v21 == v26 && v22 == v27) {
          return 1;
        }
        return sub_1A6893120();
      }
      return result;
    case 3uLL:
      if (v3 >> 62 != 3) {
        return 0;
      }
      uint64_t v31 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v32 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      float v34 = *(float *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      float v33 = *(float *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x34);
      float v35 = *(float *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v36 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v37 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x48);
      uint64_t v38 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v39 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      float v41 = *(float *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      float v40 = *(float *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x34);
      float v42 = *(float *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
      BOOL v43 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
         && *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v45 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v44 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x48);
      if (!v43)
      {
        char v46 = sub_1A6893120();
        uint64_t result = 0;
        if ((v46 & 1) == 0) {
          return result;
        }
      }
      if (v31 == v38 && v32 == v39)
      {
        if (v34 != v41 || v33 != v40 || v35 != v42) {
          return 0;
        }
      }
      else
      {
        char v48 = sub_1A6893120();
        uint64_t result = 0;
        if ((v48 & 1) == 0) {
          return result;
        }
        BOOL v49 = v34 == v41 && v33 == v40;
        if (!v49 || v35 != v42) {
          return result;
        }
      }
      if (v37)
      {
        if (!v44) {
          return 0;
        }
        BOOL v54 = v36 == v45 && v37 == v44;
        if (!v54 && (sub_1A6893120() & 1) == 0) {
          return 0;
        }
      }
      else if (v44)
      {
        return 0;
      }
      return 1;
    default:
      if (v3 >> 62) {
        return 0;
      }
      uint64_t v4 = *(void *)(v2 + 24);
      uint64_t v5 = *(void *)(v2 + 32);
      uint64_t v6 = *(void *)(v3 + 24);
      uint64_t v7 = *(void *)(v3 + 32);
      if (!v4)
      {
        if (!v6)
        {
LABEL_51:
          swift_retain();
          swift_retain();
          char v51 = sub_1A6836B98(v5, v7);
          swift_release();
          swift_release();
          return v51 & 1;
        }
        return 0;
      }
      if (!v6) {
        return 0;
      }
      if (*(void *)(v2 + 16) == *(void *)(v3 + 16) && v4 == v6) {
        goto LABEL_51;
      }
      char v9 = sub_1A6893120();
      uint64_t result = 0;
      if (v9) {
        goto LABEL_51;
      }
      return result;
  }
}

uint64_t _s12TextToSpeech14TTSAudioEffectO4SpecV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v17 = *(void *)(a2 + 64);
  uint64_t v15 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  if ((*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) && (sub_1A6893120() & 1) == 0) {
    return 0;
  }
  if (v3)
  {
    if (!v7 || (v2 != v8 || v3 != v7) && (sub_1A6893120() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (!v5)
  {
    if (v9) {
      return 0;
    }
LABEL_20:
    if (((v6 ^ v11) & 1) == 0) {
      goto LABEL_21;
    }
    return 0;
  }
  if (!v9) {
    return 0;
  }
  if (v4 != v10 || v5 != v9)
  {
    if ((sub_1A6893120() & 1) == 0) {
      return 0;
    }
    goto LABEL_20;
  }
  if (v6 != v11) {
    return 0;
  }
LABEL_21:
  if ((sub_1A6835C04(v20, v19) & 1) == 0 || (sub_1A6836B98(v18, v17) & 1) == 0 || (sub_1A673F5F8(v16, v15) & 1) == 0) {
    return 0;
  }

  return sub_1A6836438(v14, v13);
}

uint64_t sub_1A683EC38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65707974627573 && a2 == 0xE700000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74636166756E616DLL && a2 == 0xEC00000072657275)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A683ED98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696E556F69647561 && a2 == 0xE900000000000074;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E49746C697562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A683EE98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  float v42 = a2;
  uint64_t v45 = sub_1A6741AD0(&qword_1E96C36D0);
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C36D8);
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C36E0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v46 = a1;
  sub_1A673E63C(a1, v12);
  sub_1A683E668();
  uint64_t v13 = v47;
  sub_1A68932A0();
  if (v13) {
    return sub_1A6741A24((uint64_t)v46);
  }
  uint64_t v14 = v45;
  uint64_t v47 = v9;
  uint64_t v15 = sub_1A6892FF0();
  uint64_t v16 = v15;
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_1A6892CA0();
    swift_allocError();
    uint64_t v19 = v18;
    sub_1A6741AD0(&qword_1E96C26F0);
    void *v19 = &_s4SpecV3BoxV7BoxTypeON;
    sub_1A6892F50();
    sub_1A6892C90();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA70], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v8);
    return sub_1A6741A24((uint64_t)v46);
  }
  int v41 = *(unsigned __int8 *)(v15 + 32);
  if (v41)
  {
    char v52 = 1;
    sub_1A683E6DC();
    sub_1A6892F40();
    uint64_t v39 = sub_1A6892F80();
    uint64_t v40 = v22;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v8);
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
  }
  else
  {
    char v51 = 0;
    sub_1A683E730();
    sub_1A6892F40();
    char v50 = 0;
    uint64_t v21 = v7;
    uint64_t v29 = sub_1A6892F80();
    uint64_t v31 = v30;
    uint64_t v45 = v16;
    char v49 = 1;
    uint64_t v23 = sub_1A6892F80();
    uint64_t v24 = v32;
    uint64_t v39 = v29;
    uint64_t v40 = v31;
    char v48 = 2;
    uint64_t v43 = v5;
    uint64_t v33 = sub_1A6892F80();
    uint64_t v34 = v47;
    uint64_t v36 = v35;
    uint64_t v37 = *(void (**)(char *, uint64_t))(v44 + 8);
    uint64_t v44 = v33;
    v37(v21, v43);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
    uint64_t v25 = v44;
    uint64_t v26 = v36;
  }
  uint64_t result = sub_1A6741A24((uint64_t)v46);
  uint64_t v27 = v42;
  uint64_t v28 = v40;
  *float v42 = v39;
  v27[1] = v28;
  void v27[2] = v23;
  v27[3] = v24;
  v27[4] = v25;
  v27[5] = v26;
  *((unsigned char *)v27 + 48) = v41;
  return result;
}

unint64_t sub_1A683F48C()
{
  unint64_t result = qword_1E96D1288;
  if (!qword_1E96D1288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1288);
  }
  return result;
}

unint64_t sub_1A683F4E0()
{
  unint64_t result = qword_1E96C3558;
  if (!qword_1E96C3558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3558);
  }
  return result;
}

unint64_t sub_1A683F534()
{
  unint64_t result = qword_1E96C3568;
  if (!qword_1E96C3568)
  {
    sub_1A6750AC4(&qword_1E96C3560);
    sub_1A6766A64(&qword_1E96C3570, &qword_1E96C2A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3568);
  }
  return result;
}

unint64_t sub_1A683F5D4()
{
  unint64_t result = qword_1E96C3580;
  if (!qword_1E96C3580)
  {
    sub_1A6750AC4(&qword_1E96C3578);
    sub_1A6766A64(&qword_1E96C3588, &qword_1E96C2A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3580);
  }
  return result;
}

unint64_t sub_1A683F674()
{
  unint64_t result = qword_1E96C35A0;
  if (!qword_1E96C35A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C35A0);
  }
  return result;
}

uint64_t sub_1A683F6C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737475706E69 && a2 == 0xE600000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7374757074756FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A683F8E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C3690);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A673E63C(a1, a1[3]);
  sub_1A683F48C();
  sub_1A68932A0();
  if (v2) {
    return sub_1A6741A24((uint64_t)a1);
  }
  char v55 = 0;
  sub_1A6844DEC();
  sub_1A6892FC0();
  uint64_t v40 = a2;
  uint64_t v41 = v6;
  uint64_t v9 = v47;
  uint64_t v10 = v49;
  uint64_t v11 = v50;
  uint64_t v12 = v52;
  uint64_t v44 = v48;
  uint64_t v45 = v51;
  int v54 = v53;
  sub_1A6741AD0(&qword_1E96C3560);
  char v55 = 1;
  uint64_t v42 = v10;
  uint64_t v43 = v9;
  uint64_t v13 = v9;
  uint64_t v14 = v44;
  uint64_t v46 = v12;
  sub_1A674239C(v13, v44, v10, v11, v45, v12, v54);
  sub_1A6844E40();
  sub_1A6892FC0();
  uint64_t v36 = v11;
  uint64_t v15 = v14;
  uint64_t v16 = v43;
  uint64_t v17 = v47;
  sub_1A6741AD0(&qword_1E96C3578);
  char v55 = 2;
  sub_1A6844EE0();
  swift_bridgeObjectRetain();
  v35[2] = 0;
  sub_1A6892FC0();
  uint64_t v37 = v17;
  uint64_t v18 = v47;
  sub_1A6741AD0(&qword_1E96C3590);
  char v55 = 3;
  uint64_t v19 = sub_1A6844F80(&qword_1E96C36C0, &qword_1E96C3590, (void (*)(void))sub_1A6844FEC);
  swift_bridgeObjectRetain();
  v35[1] = v19;
  sub_1A6892FC0();
  uint64_t v39 = v18;
  char v55 = 4;
  uint64_t v38 = v47;
  swift_bridgeObjectRetain();
  sub_1A6892FC0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v5);
  uint64_t v41 = v47;
  uint64_t v20 = v16;
  uint64_t v21 = v42;
  uint64_t v22 = v36;
  uint64_t v23 = v45;
  char v24 = v54;
  sub_1A674239C(v20, v15, v42, v36, v45, v46, v54);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v43;
  uint64_t v26 = v46;
  sub_1A67D2CA4(v43, v15, v21, v22, v23, v46, v24);
  sub_1A6741A24((uint64_t)a1);
  sub_1A67D2CA4(v25, v15, v21, v22, v23, v26, v24);
  uint64_t v27 = v41;
  swift_bridgeObjectRelease();
  uint64_t v28 = v38;
  swift_bridgeObjectRelease();
  uint64_t v29 = v39;
  swift_bridgeObjectRelease();
  uint64_t v30 = v37;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v32 = v40;
  uint64_t v33 = v44;
  *uint64_t v40 = v25;
  v32[1] = v33;
  void v32[2] = v21;
  v32[3] = v22;
  uint64_t v34 = v46;
  v32[4] = v45;
  v32[5] = v34;
  *((unsigned char *)v32 + 48) = v24;
  v32[7] = v30;
  v32[8] = v29;
  v32[9] = v28;
  v32[10] = v27;
  return result;
}

uint64_t type metadata accessor for TTSAudioEffect.Spec.GenericWire()
{
  return sub_1A674B1C8();
}

uint64_t _s4SpecV11GenericWireO15ValueCodingKeysOMa()
{
  return sub_1A674B1C8();
}

uint64_t _s4SpecV11GenericWireO13BoxCodingKeysOMa()
{
  return sub_1A674B1C8();
}

uint64_t _s4SpecV11GenericWireO10CodingKeysOMa()
{
  return sub_1A674B1C8();
}

unint64_t sub_1A683FF98()
{
  unint64_t result = qword_1E96D1290;
  if (!qword_1E96D1290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1290);
  }
  return result;
}

unint64_t sub_1A683FFEC()
{
  unint64_t result = qword_1E96D1298;
  if (!qword_1E96D1298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D1298);
  }
  return result;
}

unint64_t sub_1A6840040()
{
  unint64_t result = qword_1E96D12A0;
  if (!qword_1E96D12A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D12A0);
  }
  return result;
}

unint64_t sub_1A6840094()
{
  unint64_t result = qword_1E96D12A8;
  if (!qword_1E96D12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D12A8);
  }
  return result;
}

unint64_t sub_1A68400E8()
{
  unint64_t result = qword_1E96C35E0;
  if (!qword_1E96C35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C35E0);
  }
  return result;
}

unint64_t sub_1A684013C()
{
  unint64_t result = qword_1E96D12B0;
  if (!qword_1E96D12B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D12B0);
  }
  return result;
}

uint64_t sub_1A6840190()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A68401D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_1A684021C()
{
  unint64_t result = qword_1E96C3618;
  if (!qword_1E96C3618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3618);
  }
  return result;
}

unint64_t sub_1A6840274()
{
  unint64_t result = qword_1E96D12B8[0];
  if (!qword_1E96D12B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D12B8);
  }
  return result;
}

uint64_t sub_1A68402C8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6750AC4(&qword_1E96C3628);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A6840344()
{
  unint64_t result = qword_1E96C3638;
  if (!qword_1E96C3638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3638);
  }
  return result;
}

uint64_t sub_1A6840398(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6750AC4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A6840404()
{
  unint64_t result = qword_1E96C3668;
  if (!qword_1E96C3668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3668);
  }
  return result;
}

uint64_t sub_1A6840458(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6750AC4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A68404C8()
{
  unint64_t result = qword_1E96C3680;
  if (!qword_1E96C3680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3680);
  }
  return result;
}

unint64_t sub_1A6840520()
{
  unint64_t result = qword_1E96C3688;
  if (!qword_1E96C3688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3688);
  }
  return result;
}

uint64_t dispatch thunk of DSPGraphPrintable.dspGraphValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t _s4SpecVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s4SpecVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4SpecVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s4SpecV3BoxVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s4SpecVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4SpecVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4SpecVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSAudioEffect.Spec()
{
  return &type metadata for TTSAudioEffect.Spec;
}

unint64_t _s4SpecV8EndPointOwxx(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s4SpecV8EndPointOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *_s4SpecV8EndPointOwca(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4SpecV8EndPointOwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4SpecV8EndPointOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s4SpecV8EndPointOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A6840B04(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1A6840B1C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *_s4SpecV8EndPointOMa()
{
  return &_s4SpecV8EndPointON;
}

uint64_t _s4SpecV3BoxVwxx(uint64_t a1)
{
  sub_1A67D2CA4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s4SpecV3BoxVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 48);
  sub_1A674239C(*(void *)a2, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4SpecV3BoxVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 48);
  sub_1A674239C(*(void *)a2, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  char v17 = *(unsigned char *)(a1 + 48);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  sub_1A67D2CA4(v11, v12, v13, v14, v15, v16, v17);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4SpecV3BoxVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  char v11 = *(unsigned char *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v4;
  sub_1A67D2CA4(v5, v6, v7, v8, v9, v10, v11);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4SpecV3BoxVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4SpecV3BoxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s4SpecV3BoxVMa()
{
  return &_s4SpecV3BoxVN;
}

uint64_t _s4SpecV3BoxV7BoxTypeOwxx(uint64_t a1)
{
  return sub_1A67D2CA4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t _s4SpecV3BoxV7BoxTypeOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1A674239C(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s4SpecV3BoxV7BoxTypeOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1A674239C(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  char v16 = *(unsigned char *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  sub_1A67D2CA4(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s4SpecV3BoxV7BoxTypeOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1A67D2CA4(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t _s4SpecV3BoxV7BoxTypeOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s4SpecV3BoxV7BoxTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A68410AC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1A68410B4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2 & 1;
  return result;
}

ValueMetadata *_s4SpecV3BoxV7BoxTypeOMa()
{
  return &_s4SpecV3BoxV7BoxTypeON;
}

uint64_t sub_1A68410D0()
{
  unsigned int v3 = &unk_1A68A58F8;
  uint64_t result = sub_1A6892A00();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    int v4 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A6841194(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  int v9 = v7 + 16;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v11 = *(void *)(v5 + 64);
  }
  else {
    size_t v11 = *(void *)(v5 + 64) + 1;
  }
  size_t v12 = v11 + v7;
  unint64_t v10 = (v7 + 16) & ~(unint64_t)v7;
  if (((v12 + ((v12 + v10) & ~(unint64_t)v7)) & ~(unint64_t)v7) + v11 <= 0x14) {
    uint64_t v13 = 20;
  }
  else {
    uint64_t v13 = ((v11 + v7 + ((v11 + v7 + v10) & ~(unint64_t)v7)) & ~(unint64_t)v7)
  }
        + v11;
  int v14 = v7 & 0x100000;
  if (v8 > 7 || v14 != 0 || (unint64_t)(v13 + 1) > 0x18)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v8 & 0xF8 ^ 0x1F8) & v9);
    swift_retain();
  }
  else
  {
    unsigned int v18 = a2[v13];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v20 = v13;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_25;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_25;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_25;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_25:
          int v22 = (v21 | (v19 << (8 * v13))) + 2;
          unsigned int v18 = v21 + 2;
          if (v13 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v23 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v23;
    if (v18 == 1)
    {
      uint64_t v24 = ~v8;
      __dst = (void *)((a1 + v8 + 16) & ~v8);
      uint64_t v25 = (const void *)((unint64_t)&a2[v8 + 16] & ~v8);
      uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
      swift_bridgeObjectRetain();
      uint64_t v34 = v26;
      if (v26(v25, 1, v4))
      {
        uint64_t v27 = __dst;
        memcpy(__dst, v25, v11);
      }
      else
      {
        uint64_t v27 = __dst;
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(__dst, v25, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v4);
      }
      uint64_t v28 = (void *)(((unint64_t)v27 + v12) & v24);
      uint64_t v29 = (const void *)(((unint64_t)v25 + v12) & v24);
      if (v34(v29, 1, v4))
      {
        memcpy(v28, v29, v11);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v28, v29, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v28, 0, 1, v4);
      }
      uint64_t v30 = (void *)(((unint64_t)v28 + v12) & v24);
      uint64_t v31 = (const void *)(((unint64_t)v29 + v12) & v24);
      if (v34(v31, 1, v4))
      {
        memcpy(v30, v31, v11);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v30, v31, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v30, 0, 1, v4);
      }
      *(unsigned char *)(a1 + v13) = 1;
    }
    else
    {
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      *(unsigned char *)(a1 + v13) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1A684150C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v21 = v4;
  uint64_t v6 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v6;
  }
  uint64_t v7 = v6 + v5;
  unint64_t v8 = ((v6 + v5 + ((v6 + v5 + ((v5 + 16) & ~v5)) & ~v5)) & ~v5) + v6;
  if (v8 <= 0x14) {
    unint64_t v8 = 20;
  }
  unsigned int v9 = a1[v8];
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_14:
        int v12 = (v11 | ((v9 - 2) << (8 * v8))) + 2;
        unsigned int v13 = v11 + 2;
        if (v8 >= 4) {
          unsigned int v9 = v13;
        }
        else {
          unsigned int v9 = v12;
        }
        break;
      default:
        break;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v9 == 1)
  {
    uint64_t v15 = ~v5;
    uint64_t v16 = (unint64_t)&a1[v5 + 16] & ~v5;
    uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
    if (!v17(v16, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v16, v3);
    }
    uint64_t v18 = (v7 + v16) & v15;
    if (!v17(v18, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v3);
    }
    uint64_t v19 = (v7 + v18) & v15;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v19, 1, v3);
    if (!result)
    {
      uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
      return v20(v19, v3);
    }
  }
  return result;
}

uint64_t sub_1A684175C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v8 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v9 = v8 + v7;
  if (((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & (unint64_t)~v7) + v8 <= 0x14) {
    uint64_t v10 = 20;
  }
  else {
    uint64_t v10 = ((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & ~v7) + v8;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_16;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_16:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v16;
  if (v11 == 1)
  {
    size_t __n = v8;
    uint64_t v17 = ~v7;
    uint64_t v18 = (void *)((a1 + v7 + 16) & ~v7);
    uint64_t v19 = (const void *)((unint64_t)&a2[v7 + 16] & ~v7);
    uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    uint64_t v28 = v20;
    if (v20(v19, 1, v4))
    {
      size_t v21 = __n;
      memcpy(v18, v19, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v4);
      size_t v21 = __n;
    }
    int v22 = (void *)(((unint64_t)v18 + v9) & v17);
    uint64_t v23 = (const void *)(((unint64_t)v19 + v9) & v17);
    if (v28(v23, 1, v4))
    {
      memcpy(v22, v23, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v22, v23, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v22, 0, 1, v4);
    }
    uint64_t v24 = (void *)(((unint64_t)v22 + v9) & v17);
    uint64_t v25 = (const void *)(((unint64_t)v23 + v9) & v17);
    if (v28(v25, 1, v4))
    {
      memcpy(v24, v25, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v24, v25, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v24, 0, 1, v4);
    }
    *(unsigned char *)(a1 + v10) = 1;
  }
  else
  {
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + v10) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

unsigned __int8 *sub_1A6841A9C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    size_t v8 = *(void *)(v6 + 64);
    if (!*(_DWORD *)(v6 + 84)) {
      ++v8;
    }
    size_t v9 = v8 + v7;
    size_t __n = v8;
    if (((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & ~v7) + v8 <= 0x14) {
      uint64_t v10 = 20;
    }
    else {
      uint64_t v10 = ((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & ~v7) + v8;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_16;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_16:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v7;
    swift_bridgeObjectRelease();
    if (v11 == 1)
    {
      uint64_t v17 = (unint64_t)&a1[v7 + 16] & v16;
      uint64_t v36 = v6;
      uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (!v18(v17, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v17, v5);
      }
      uint64_t v19 = (v9 + v17) & v16;
      if (!v18(v19, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v19, v5);
      }
      uint64_t v20 = (v9 + v19) & v16;
      unsigned int v21 = v18(v20, 1, v5);
      uint64_t v6 = v36;
      if (!v21) {
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v20, v5);
      }
    }
    unsigned int v22 = a2[v10];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v24 = v10;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_35;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_35;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_35;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_35:
          int v26 = (v25 | (v23 << (8 * v10))) + 2;
          unsigned int v22 = v25 + 2;
          if (v10 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    if (v22 == 1)
    {
      uint64_t v27 = &a2[v7];
      uint64_t v28 = (void *)((unint64_t)&a1[v7 + 16] & v16);
      uint64_t v29 = (const void *)((unint64_t)(v27 + 16) & v16);
      uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
      swift_bridgeObjectRetain();
      if (v30(v29, 1, v5))
      {
        memcpy(v28, v29, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v28, v29, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v28, 0, 1, v5);
      }
      uint64_t v31 = (void *)(((unint64_t)v28 + v9) & v16);
      uint64_t v32 = (const void *)(((unint64_t)v29 + v9) & v16);
      if (v30(v32, 1, v5))
      {
        memcpy(v31, v32, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v31, v32, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
      }
      uint64_t v33 = (void *)(((unint64_t)v31 + v9) & v16);
      uint64_t v34 = (const void *)(((unint64_t)v32 + v9) & v16);
      if (v30(v34, 1, v5))
      {
        memcpy(v33, v34, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v33, v34, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v33, 0, 1, v5);
      }
      a1[v10] = 1;
    }
    else
    {
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
      a1[v10] = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1A6841F4C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v8 = *(void *)(v5 + 64);
  }
  else {
    size_t v8 = *(void *)(v5 + 64) + 1;
  }
  size_t v9 = v8 + v7;
  if (((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & ~v7) + v8 <= 0x14) {
    uint64_t v10 = 20;
  }
  else {
    uint64_t v10 = ((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & ~v7) + v8;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_16;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_16:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    uint64_t v16 = ~v7;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v17 = (void *)((a1 + v7 + 16) & ~v7);
    uint64_t v18 = (const void *)((unint64_t)&a2[v7 + 16] & ~v7);
    int v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    if (v25(v18, 1, v4))
    {
      memcpy(v17, v18, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v17, v18, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v4);
    }
    uint64_t v20 = (void *)(((unint64_t)v17 + v9) & v16);
    unsigned int v21 = (const void *)(((unint64_t)v18 + v9) & v16);
    if (v25(v21, 1, v4))
    {
      memcpy(v20, v21, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v20, v21, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v4);
    }
    unsigned int v22 = (void *)(((unint64_t)v20 + v9) & v16);
    unsigned int v23 = (const void *)(((unint64_t)v21 + v9) & v16);
    if (v25(v23, 1, v4))
    {
      memcpy(v22, v23, v8);
      char v19 = 1;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v22, v23, v4);
      char v19 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v22, 0, 1, v4);
    }
  }
  else
  {
    char v19 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  }
  *(unsigned char *)(a1 + v10) = v19;
  return a1;
}

unsigned __int8 *sub_1A6842284(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    size_t v8 = *(void *)(v6 + 64);
    if (!*(_DWORD *)(v6 + 84)) {
      ++v8;
    }
    size_t v9 = v8 + v7;
    size_t __n = v8;
    if (((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & ~v7) + v8 <= 0x14) {
      uint64_t v10 = 20;
    }
    else {
      uint64_t v10 = ((v8 + v7 + ((v8 + v7 + ((v7 + 16) & ~v7)) & ~v7)) & ~v7) + v8;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_16;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_16:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v7;
    swift_bridgeObjectRelease();
    if (v11 == 1)
    {
      uint64_t v17 = (unint64_t)&a1[v7 + 16] & v16;
      uint64_t v37 = v6;
      uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (!v18(v17, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v17, v5);
      }
      uint64_t v19 = (v9 + v17) & v16;
      if (!v18(v19, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v19, v5);
      }
      uint64_t v20 = (v9 + v19) & v16;
      unsigned int v21 = v18(v20, 1, v5);
      uint64_t v6 = v37;
      if (!v21) {
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v20, v5);
      }
    }
    unsigned int v22 = a2[v10];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v24 = v10;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_35;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_35;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_35;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_35:
          int v26 = (v25 | (v23 << (8 * v10))) + 2;
          unsigned int v22 = v25 + 2;
          if (v10 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v27 = &a2[v7];
      uint64_t v28 = (void *)((unint64_t)&a1[v7 + 16] & v16);
      uint64_t v29 = (const void *)((unint64_t)(v27 + 16) & v16);
      uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
      if (v30(v29, 1, v5))
      {
        memcpy(v28, v29, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v28, v29, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v28, 0, 1, v5);
      }
      uint64_t v32 = (void *)(((unint64_t)v28 + v9) & v16);
      uint64_t v33 = (const void *)(((unint64_t)v29 + v9) & v16);
      if (v30(v33, 1, v5))
      {
        memcpy(v32, v33, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v32, v33, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v32, 0, 1, v5);
      }
      uint64_t v34 = (void *)(((unint64_t)v32 + v9) & v16);
      uint64_t v35 = (const void *)(((unint64_t)v33 + v9) & v16);
      if (v30(v35, 1, v5))
      {
        memcpy(v34, v35, __n);
        char v31 = 1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v34, v35, v5);
        char v31 = 1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v34, 0, 1, v5);
      }
    }
    else
    {
      char v31 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
    }
    a1[v10] = v31;
  }
  return a1;
}

uint64_t sub_1A6842730(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    uint64_t v5 = *(void *)(v3 + 64);
  }
  else {
    uint64_t v5 = *(void *)(v3 + 64) + 1;
  }
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = ((v5 + v4 + ((v5 + v4 + ((v4 + 16) & ~v4)) & ~v4)) & ~v4) + v5;
  uint64_t v7 = 20;
  if (v6 > 0x14) {
    uint64_t v7 = v6;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_25;
  }
  uint64_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    unsigned int v12 = ((a2 + ~(-1 << v9) - 254) >> v9) + 1;
    if (HIWORD(v12))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v12 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v12 < 2)
    {
LABEL_25:
      unsigned int v14 = *((unsigned __int8 *)a1 + v7);
      if (v14 >= 2) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_25;
  }
LABEL_17:
  int v13 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v13 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v8 | v13) + 255;
}

void sub_1A68428C0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v7 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v7 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v8 = ((v7 + v6 + ((v7 + v6 + ((v6 + 16) & ~v6)) & ~v6)) & ~v6) + v7;
  if (v8 <= 0x14) {
    unint64_t v8 = 20;
  }
  size_t v9 = v8 + 1;
  if (a3 < 0xFF)
  {
    int v10 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << (8 * v9)) - 254) >> (8 * v9)) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v11 = a2 - 255;
    if (v9 < 4)
    {
      int v12 = (v11 >> (8 * v9)) + 1;
      if (v8 != -1)
      {
        int v14 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v9] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v9] = v12;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x1A6842AE4);
      case 4:
        *(_DWORD *)&a1[v9] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v9] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v8] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A6842B0C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84)) {
    uint64_t v4 = *(void *)(v2 + 64);
  }
  else {
    uint64_t v4 = *(void *)(v2 + 64) + 1;
  }
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = ((v4 + v3 + ((v4 + v3 + ((v3 + 16) & ~v3)) & ~v3)) & ~v3) + v4;
  uint64_t v6 = 20;
  if (v5 > 0x14) {
    uint64_t v6 = v5;
  }
  uint64_t v7 = a1[v6];
  int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v11 = (v10 | (v8 << (8 * v6))) + 2;
        LODWORD(v7) = v10 + 2;
        if (v6 >= 4) {
          uint64_t v7 = v7;
        }
        else {
          uint64_t v7 = v11;
        }
        break;
      default:
        return v7;
    }
  }
  return v7;
}

void sub_1A6842C20(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v6 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  size_t v7 = ((v6 + v5 + ((v6 + v5 + ((v5 + 16) & ~v5)) & ~v5)) & ~v5) + v6;
  if (v7 <= 0x14) {
    size_t v7 = 20;
  }
  if (a2 > 1)
  {
    if (v7 <= 3) {
      char v8 = ((a2 - 2) >> (8 * v7)) + 2;
    }
    else {
      char v8 = 2;
    }
    if (v7 <= 3) {
      int v9 = (a2 - 2) & ~(-1 << (8 * v7));
    }
    else {
      int v9 = a2 - 2;
    }
    a1[v7] = v8;
    if (v7 >= 4) {
      int v10 = 4;
    }
    else {
      int v10 = v7;
    }
    bzero(a1, v7);
    switch(v10)
    {
      case 2:
        *(_WORD *)a1 = v9;
        break;
      case 3:
        *(_WORD *)a1 = v9;
        a1[2] = BYTE2(v9);
        break;
      case 4:
        *(_DWORD *)a1 = v9;
        break;
      default:
        *a1 = v9;
        break;
    }
  }
  else
  {
    a1[v7] = a2;
  }
}

ValueMetadata *type metadata accessor for TTSAudioEffect.Spec.Control()
{
  return &type metadata for TTSAudioEffect.Spec.Control;
}

uint64_t _s4SpecV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s4SpecV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A6842EE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4SpecV10CodingKeysOMa()
{
  return &_s4SpecV10CodingKeysON;
}

ValueMetadata *_s4SpecV7ControlO10CodingKeysOMa()
{
  return &_s4SpecV7ControlO10CodingKeysON;
}

ValueMetadata *_s4SpecV7ControlO15GroupCodingKeysOMa()
{
  return &_s4SpecV7ControlO15GroupCodingKeysON;
}

ValueMetadata *_s4SpecV7ControlO14LinkCodingKeysOMa()
{
  return &_s4SpecV7ControlO14LinkCodingKeysON;
}

ValueMetadata *_s4SpecV7ControlO16ToggleCodingKeysOMa()
{
  return &_s4SpecV7ControlO16ToggleCodingKeysON;
}

unsigned char *_s4SpecV7ControlO16SliderCodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A6843030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4SpecV7ControlO16SliderCodingKeysOMa()
{
  return &_s4SpecV7ControlO16SliderCodingKeysON;
}

unsigned char *_s4SpecV7ControlO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A6843134);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *_s4SpecV3BoxV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A6843228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4SpecV3BoxV10CodingKeysOMa()
{
  return &_s4SpecV3BoxV10CodingKeysON;
}

unsigned char *_s4SpecV7ControlO15GroupCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A684332CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4SpecV3BoxV7BoxTypeO10CodingKeysOMa()
{
  return &_s4SpecV3BoxV7BoxTypeO10CodingKeysON;
}

ValueMetadata *_s4SpecV3BoxV7BoxTypeO19AudioUnitCodingKeysOMa()
{
  return &_s4SpecV3BoxV7BoxTypeO19AudioUnitCodingKeysON;
}

ValueMetadata *_s4SpecV3BoxV7BoxTypeO17BuiltInCodingKeysOMa()
{
  return &_s4SpecV3BoxV7BoxTypeO17BuiltInCodingKeysON;
}

unsigned char *_s4SpecV3BoxV7BoxTypeO19AudioUnitCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A6843458);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4SpecV8EndPointO10CodingKeysOMa()
{
  return &_s4SpecV8EndPointO10CodingKeysON;
}

unsigned char *_s4SpecV3BoxV7BoxTypeO17BuiltInCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A684352CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s4SpecV8EndPointO13BoxCodingKeysOMa()
{
  return &_s4SpecV8EndPointO13BoxCodingKeysON;
}

ValueMetadata *_s4SpecV8EndPointO15InputCodingKeysOMa()
{
  return &_s4SpecV8EndPointO15InputCodingKeysON;
}

ValueMetadata *_s4SpecV8EndPointO16OutputCodingKeysOMa()
{
  return &_s4SpecV8EndPointO16OutputCodingKeysON;
}

unint64_t sub_1A6843588()
{
  unint64_t result = qword_1E96D21C0[0];
  if (!qword_1E96D21C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D21C0);
  }
  return result;
}

unint64_t sub_1A68435E0()
{
  unint64_t result = qword_1E96D23D0[0];
  if (!qword_1E96D23D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D23D0);
  }
  return result;
}

unint64_t sub_1A6843638()
{
  unint64_t result = qword_1E96D25E0[0];
  if (!qword_1E96D25E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D25E0);
  }
  return result;
}

unint64_t sub_1A6843690()
{
  unint64_t result = qword_1E96D27F0[0];
  if (!qword_1E96D27F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D27F0);
  }
  return result;
}

unint64_t sub_1A68436E8()
{
  unint64_t result = qword_1E96D2A00[0];
  if (!qword_1E96D2A00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D2A00);
  }
  return result;
}

unint64_t sub_1A6843740()
{
  unint64_t result = qword_1E96D2C10[0];
  if (!qword_1E96D2C10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D2C10);
  }
  return result;
}

uint64_t sub_1A6843794()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A68437B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A68437CC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1A68437EC()
{
  unint64_t result = qword_1E96D3420[0];
  if (!qword_1E96D3420[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D3420);
  }
  return result;
}

unint64_t sub_1A6843844()
{
  unint64_t result = qword_1E96D3630[0];
  if (!qword_1E96D3630[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D3630);
  }
  return result;
}

unint64_t sub_1A684389C()
{
  unint64_t result = qword_1E96D3840[0];
  if (!qword_1E96D3840[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D3840);
  }
  return result;
}

unint64_t sub_1A68438F4()
{
  unint64_t result = qword_1E96D3A50[0];
  if (!qword_1E96D3A50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D3A50);
  }
  return result;
}

unint64_t sub_1A684394C()
{
  unint64_t result = qword_1E96D3C60[0];
  if (!qword_1E96D3C60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D3C60);
  }
  return result;
}

unint64_t sub_1A68439A4()
{
  unint64_t result = qword_1E96D3E70[0];
  if (!qword_1E96D3E70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D3E70);
  }
  return result;
}

unint64_t sub_1A68439FC()
{
  unint64_t result = qword_1E96D3F80;
  if (!qword_1E96D3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D3F80);
  }
  return result;
}

unint64_t sub_1A6843A54()
{
  unint64_t result = qword_1E96D3F88[0];
  if (!qword_1E96D3F88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D3F88);
  }
  return result;
}

unint64_t sub_1A6843AAC()
{
  unint64_t result = qword_1E96D4010;
  if (!qword_1E96D4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4010);
  }
  return result;
}

unint64_t sub_1A6843B04()
{
  unint64_t result = qword_1E96D4018[0];
  if (!qword_1E96D4018[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4018);
  }
  return result;
}

unint64_t sub_1A6843B5C()
{
  unint64_t result = qword_1E96D40A0;
  if (!qword_1E96D40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D40A0);
  }
  return result;
}

unint64_t sub_1A6843BB4()
{
  unint64_t result = qword_1E96D40A8[0];
  if (!qword_1E96D40A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D40A8);
  }
  return result;
}

unint64_t sub_1A6843C0C()
{
  unint64_t result = qword_1E96D4130;
  if (!qword_1E96D4130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4130);
  }
  return result;
}

unint64_t sub_1A6843C64()
{
  unint64_t result = qword_1E96D4138[0];
  if (!qword_1E96D4138[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4138);
  }
  return result;
}

unint64_t sub_1A6843CBC()
{
  unint64_t result = qword_1E96D41C0;
  if (!qword_1E96D41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D41C0);
  }
  return result;
}

unint64_t sub_1A6843D14()
{
  unint64_t result = qword_1E96D41C8[0];
  if (!qword_1E96D41C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D41C8);
  }
  return result;
}

unint64_t sub_1A6843D6C()
{
  unint64_t result = qword_1E96D4250;
  if (!qword_1E96D4250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4250);
  }
  return result;
}

unint64_t sub_1A6843DC4()
{
  unint64_t result = qword_1E96D4258[0];
  if (!qword_1E96D4258[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4258);
  }
  return result;
}

uint64_t sub_1A6843E18()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A6843E34()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A6843E50()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A6843E6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A6843E88()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A6843EA4()
{
  return swift_getWitnessTable();
}

unint64_t sub_1A6843EC4()
{
  unint64_t result = qword_1E96D4460;
  if (!qword_1E96D4460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4460);
  }
  return result;
}

unint64_t sub_1A6843F1C()
{
  unint64_t result = qword_1E96D4468[0];
  if (!qword_1E96D4468[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4468);
  }
  return result;
}

unint64_t sub_1A6843F74()
{
  unint64_t result = qword_1E96D44F0;
  if (!qword_1E96D44F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D44F0);
  }
  return result;
}

unint64_t sub_1A6843FCC()
{
  unint64_t result = qword_1E96D44F8[0];
  if (!qword_1E96D44F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D44F8);
  }
  return result;
}

unint64_t sub_1A6844024()
{
  unint64_t result = qword_1E96D4580;
  if (!qword_1E96D4580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4580);
  }
  return result;
}

unint64_t sub_1A684407C()
{
  unint64_t result = qword_1E96D4588[0];
  if (!qword_1E96D4588[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4588);
  }
  return result;
}

unint64_t sub_1A68440D4()
{
  unint64_t result = qword_1E96D4610;
  if (!qword_1E96D4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4610);
  }
  return result;
}

unint64_t sub_1A684412C()
{
  unint64_t result = qword_1E96D4618[0];
  if (!qword_1E96D4618[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4618);
  }
  return result;
}

unint64_t sub_1A6844184()
{
  unint64_t result = qword_1E96D46A0;
  if (!qword_1E96D46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D46A0);
  }
  return result;
}

unint64_t sub_1A68441DC()
{
  unint64_t result = qword_1E96D46A8[0];
  if (!qword_1E96D46A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D46A8);
  }
  return result;
}

unint64_t sub_1A6844234()
{
  unint64_t result = qword_1E96D4730;
  if (!qword_1E96D4730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4730);
  }
  return result;
}

unint64_t sub_1A684428C()
{
  unint64_t result = qword_1E96D4738[0];
  if (!qword_1E96D4738[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4738);
  }
  return result;
}

unint64_t sub_1A68442E4()
{
  unint64_t result = qword_1E96D47C0;
  if (!qword_1E96D47C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D47C0);
  }
  return result;
}

unint64_t sub_1A684433C()
{
  unint64_t result = qword_1E96D47C8[0];
  if (!qword_1E96D47C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D47C8);
  }
  return result;
}

unint64_t sub_1A6844394()
{
  unint64_t result = qword_1E96D4850;
  if (!qword_1E96D4850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96D4850);
  }
  return result;
}

unint64_t sub_1A68443EC()
{
  unint64_t result = qword_1E96D4858[0];
  if (!qword_1E96D4858[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96D4858);
  }
  return result;
}

uint64_t sub_1A6844440(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70756F7267 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802398060 && a2 == 0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C67676F74 && a2 == 0xE600000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726564696C73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A68445D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A68446C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28532 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A6844794(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885697139 && a2 == 0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A68449E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A6844AEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A68CFBC0 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A68CFBE0 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7365786F62 && a2 == 0xE500000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736C6F72746E6F63 && a2 == 0xE800000000000000 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A68CFC00 || (sub_1A6893120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A68CFC20)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A6893120();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_1A6844DEC()
{
  unint64_t result = qword_1E96C3698;
  if (!qword_1E96C3698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3698);
  }
  return result;
}

unint64_t sub_1A6844E40()
{
  unint64_t result = qword_1E96C36A0;
  if (!qword_1E96C36A0)
  {
    sub_1A6750AC4(&qword_1E96C3560);
    sub_1A6766A64(&qword_1E96C36A8, &qword_1E96C2A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C36A0);
  }
  return result;
}

unint64_t sub_1A6844EE0()
{
  unint64_t result = qword_1E96C36B0;
  if (!qword_1E96C36B0)
  {
    sub_1A6750AC4(&qword_1E96C3578);
    sub_1A6766A64(&qword_1E96C36B8, &qword_1E96C2A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C36B0);
  }
  return result;
}

uint64_t sub_1A6844F80(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A6750AC4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A6844FEC()
{
  unint64_t result = qword_1E96C36C8;
  if (!qword_1E96C36C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C36C8);
  }
  return result;
}

uint64_t sub_1A6845040(uint64_t a1, void (*a2)(void, void, void, void, unint64_t, void))
{
  return a1;
}

uint64_t TTSAXResource.hasNeuralAXCounterPart.getter()
{
  return sub_1A68450B4();
}

uint64_t TTSAXResource.hasNeuralCounterPart.getter()
{
  return sub_1A68450B4();
}

uint64_t sub_1A68450B4()
{
  if (objc_msgSend(v0, sel_type) != (id)3) {
    return 0;
  }
  if (objc_msgSend(v0, sel_subtype) != (id)4) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_speechVoice);
  id v2 = objc_msgSend(v1, sel_identifier);

  uint64_t v3 = sub_1A6892000();
  uint64_t v5 = v4;

  uint64_t v16 = sub_1A6892000();
  uint64_t v17 = v6;
  uint64_t v14 = sub_1A6892000();
  uint64_t v15 = v7;
  unint64_t v13 = sub_1A6748030();
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  sub_1A6892AA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_sharedInstance, v12, v13, v13, v13, v14, v15, v16, v17, v3, v5);
  int v9 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_resourceWithVoiceId_, v9);

  if (!v10) {
    return 0;
  }

  return 1;
}

uint64_t TTSAXResource.hasSiriPremiumCounterpart.getter()
{
  id v1 = v0;
  if (objc_msgSend(v0, sel_type) == (id)10)
  {
    uint64_t result = (uint64_t)objc_msgSend(v0, sel_name, 95, 0xE100000000000000);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v3 = (void *)result;
    sub_1A6892000();

    sub_1A68920A0();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    id v4 = objc_msgSend(v1, sel_primaryLanguage);
    sub_1A6892000();

    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6892150();
    uint64_t v9 = sub_1A6892000();
    uint64_t v10 = v5;
    sub_1A6892150();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(self, sel_sharedInstance, v9, v10);
    uint64_t v7 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_resourceWithVoiceId_, v7);

    if (v8)
    {

      return 1;
    }
  }
  return 0;
}

id TTSAXResource.isDownloading.getter()
{
  id v1 = objc_msgSend(v0, sel_axAsset);
  if (!v1)
  {
    id v1 = objc_msgSend(v0, sel_voiceAsset);
    if (!v1) {
      return 0;
    }
  }
  id v2 = objc_msgSend(v1, sel_isDownloading);

  return v2;
}

id TTSAXResource.canonicId.getter()
{
  id v1 = objc_msgSend(v0, sel_footprint);
  id result = objc_msgSend(v0, sel_voiceId);
  uint64_t v3 = result;
  if (v1 == (id)2)
  {
    if (result)
    {
      sub_1A6892000();

      sub_1A6892000();
      sub_1A6892000();
      sub_1A6748030();
      uint64_t v4 = sub_1A6892AA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)v4;
    }
    __break(1u);
    goto LABEL_8;
  }
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v5 = sub_1A6892000();

  return (id)v5;
}

id TTSAXResource.superCompactId.getter()
{
  if (objc_msgSend(v0, sel_footprint) != (id)3 || objc_msgSend(v0, sel_type) != (id)4) {
    return 0;
  }
  id result = objc_msgSend(v0, sel_voiceId);
  if (result)
  {
    id v2 = result;
    sub_1A6892000();

    sub_1A6892000();
    sub_1A6892000();
    sub_1A6748030();
    uint64_t v3 = sub_1A6892AA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v3;
  }
  __break(1u);
  return result;
}

BOOL TTSAXResource.isSiriVoice.getter()
{
  return objc_msgSend(v0, sel_type) == (id)3;
}

id TTSAXResource.normalizedSiriDisplayName.getter()
{
  id result = objc_msgSend(v0, sel_name);
  if (result)
  {
    id v2 = result;
    sub_1A6892000();

    sub_1A68920A0();
    swift_bridgeObjectRelease();
    sub_1A6748030();
    uint64_t v3 = sub_1A6892AA0();
    swift_bridgeObjectRelease();
    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id TTSAXResource.siriLocalizedDisplayName.getter()
{
  id v1 = v0;
  v39[2] = *MEMORY[0x1E4F143B8];
  if (objc_msgSend(v0, sel_type) != (id)3 && objc_msgSend(v0, sel_type) != (id)10) {
    return 0;
  }
  id v2 = objc_msgSend(v0, sel_speechVoice);
  id v3 = objc_msgSend(v2, sel_identifier);

  if (!v3)
  {
    sub_1A6892000();
    id v3 = (id)sub_1A6891FD0();
    swift_bridgeObjectRelease();
  }
  v39[0] = 0;
  TTSGetComponentsInNamedSiriVoiceIdentifier(v3, v39, 0, 0);

  uint64_t v4 = (void *)v39[0];
  uint64_t v5 = self;
  id v6 = v4;
  id result = objc_msgSend(v5, sel_sharedInstance);
  if (!result)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v8 = result;
  id v9 = objc_msgSend(v1, sel_primaryLanguage);
  sub_1A6892000();

  if (sub_1A68921F0()) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  id result = objc_msgSend(v1, sel_name);
  if (!result) {
    goto LABEL_27;
  }
  unsigned int v11 = result;
  sub_1A6892000();

  uint64_t v12 = sub_1A68920A0();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  v39[0] = v12;
  v39[1] = v14;
  unint64_t v15 = sub_1A6748030();
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  unint64_t v37 = v15;
  unint64_t v38 = v15;
  uint64_t v35 = MEMORY[0x1E4FBB1A0];
  unint64_t v36 = v15;
  sub_1A6892AA0();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v8, sel_outputVoiceDescriptorForOutputLanguageCode_voiceName_, v10, v17, v35, v36, v37, v38);

  if (v18)
  {
    id v19 = objc_msgSend(v18, sel_localizedDisplay);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_1A6892000();
      uint64_t v23 = v22;

      if (objc_msgSend(v1, sel_footprint) == (id)3)
      {
        uint64_t v24 = self;
        int v25 = (void *)sub_1A6891FD0();
        id v26 = objc_msgSend(v24, sel_localizedStringForKey_, v25);

        sub_1A6892000();
        sub_1A6741AD0(&qword_1E96C1638);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1A689DC40;
        *(void *)(v27 + 56) = v16;
        *(void *)(v27 + 64) = sub_1A6764000();
        *(void *)(v27 + 32) = v21;
        *(void *)(v27 + 40) = v23;
        uint64_t v21 = sub_1A6892040();

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      return (id)v21;
    }

    return 0;
  }
  if (!v6) {
    return 0;
  }
  id v28 = v6;
  id result = objc_msgSend(v5, sel_sharedInstance);
  if (result)
  {
    uint64_t v29 = result;
    id v30 = objc_msgSend(v1, sel_primaryLanguage);
    sub_1A6892000();

    if (sub_1A68921F0()) {
      swift_bridgeObjectRelease();
    }
    char v31 = (void *)sub_1A6891FD0();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v29, sel_outputVoiceDescriptorForOutputLanguageCode_voiceName_, v31, v28);

    if (v32)
    {
      id v33 = objc_msgSend(v32, sel_localizedDisplay);
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v21 = sub_1A6892000();

        return (id)v21;
      }
    }
    return 0;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t TTSAXResource.siriLanguageCode.getter()
{
  id v1 = objc_msgSend(v0, sel_primaryLanguage);
  uint64_t v2 = sub_1A6892000();

  if (sub_1A68921F0())
  {
    swift_bridgeObjectRelease();
    return 0x41532D7261;
  }
  return v2;
}

void SpeechStringIntervalTree.init()(void *a1@<X8>)
{
}

uint64_t SpeechStringIntervalTree.insert(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C3708);

  return IntervalTree.insert(_:)(a1, v2);
}

uint64_t SpeechStringIntervalTree.intersections(with:)(uint64_t a1)
{
  swift_retain();
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C3708);
  unint64_t v3 = IntervalTree.intersections(with:)(a1, v2);
  swift_release();
  uint64_t v4 = sub_1A6845ED8(v3);
  swift_bridgeObjectRelease();
  if (v4) {
    return v4;
  }
  else {
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t sub_1A6845ED8(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1A6892D10();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1AD0BFD30](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for SpeechStringIntervalNode();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1A6892CE0();
        sub_1A6892D20();
        sub_1A6892D30();
        sub_1A6892CF0();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        type metadata accessor for SpeechStringIntervalNode();
        uint64_t v7 = swift_dynamicCastClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_retain();
        sub_1A6892CE0();
        sub_1A6892D20();
        sub_1A6892D30();
        sub_1A6892CF0();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1A6892EB0();
    swift_bridgeObjectRelease();
    sub_1A6892D10();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A6892EB0();
    swift_bridgeObjectRelease();
  }
  return v9;
}

Swift::Void __swiftcall SpeechStringIntervalTree.printTree()()
{
}

ValueMetadata *type metadata accessor for SpeechStringIntervalTree()
{
  return &type metadata for SpeechStringIntervalTree;
}

uint64_t TTSMarkup.Audio.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8))();
  if (!*(void *)(v5 + 16) || (unint64_t v6 = sub_1A673F7AC(6517363, 0xE300000000000000), (v7 & 1) == 0))
  {

    swift_bridgeObjectRelease();
    uint64_t result = sub_1A6761FF4((uint64_t)v32);
    *(void *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  id v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRelease();
  v31[0] = v9;
  v31[1] = v10;
  uint64_t v12 = *(uint64_t (**)(uint64_t))((*v4 & *a1) + 0x100);
  unint64_t v13 = v12(v11);
  if (v13 >> 62) {
    uint64_t v14 = sub_1A6892EB0();
  }
  else {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = swift_bridgeObjectRelease();
  if (!v14)
  {

LABEL_28:
    sub_1A6846C34(v31, a2);
    return sub_1A6846C44((uint64_t)v31);
  }
  unint64_t v16 = v12(v15);
  unint64_t v17 = v16;
  if (!(v16 >> 62))
  {
    uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_8;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1A6741AD0(&qword_1E96C1D60);
    id v30 = &protocol witness table for <A> [A];

    *(void *)&long long v28 = v21;
    sub_1A67F711C((uint64_t)&v28, (uint64_t)v32);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A6892EB0();
  uint64_t v18 = result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_8:
  if (v18 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v17 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1AD0BFD30](v20, v17);
      }
      else {
        id v22 = *(id *)(v17 + 8 * v20 + 32);
      }
      uint64_t v23 = v22;
      sub_1A677BA04((uint64_t)&v26);

      if (v27)
      {
        sub_1A673E770(&v26, (uint64_t)&v28);
        sub_1A673E770(&v28, (uint64_t)&v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1A676207C(0, v21[2] + 1, 1, v21);
        }
        unint64_t v25 = v21[2];
        unint64_t v24 = v21[3];
        if (v25 >= v24 >> 1) {
          uint64_t v21 = sub_1A676207C((void *)(v24 > 1), v25 + 1, 1, v21);
        }
        void v21[2] = v25 + 1;
        sub_1A673E770(&v26, (uint64_t)&v21[5 * v25 + 4]);
      }
      else
      {
        sub_1A6761FF4((uint64_t)&v26);
      }
      ++v20;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t static TTSMarkup.Audio.tag.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E96C3710;
  return result;
}

uint64_t static TTSMarkup.Audio.tag.setter(char *a1)
{
  char v1 = *a1;
  uint64_t result = swift_beginAccess();
  byte_1E96C3710 = v1;
  return result;
}

uint64_t (*static TTSMarkup.Audio.tag.modify())()
{
  return j__swift_endAccess;
}

unint64_t TTSMarkup.Audio.attributes.getter()
{
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 6517363;
  *(void *)(inited + 40) = 0xE300000000000000;
  uint64_t v2 = v0[1];
  *(void *)(inited + 48) = *v0;
  *(void *)(inited + 56) = v2;
  swift_bridgeObjectRetain();
  return sub_1A6742BA0(inited);
}

uint64_t TTSMarkup.Audio.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A67F7408(v1 + 16, a1);
}

uint64_t TTSMarkup.Audio.content.setter(uint64_t a1)
{
  return sub_1A67F711C(a1, v1 + 16);
}

uint64_t (*TTSMarkup.Audio.content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Audio.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(a3 + 40))(v3);
}

uint64_t sub_1A6846618@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1E96C3710;
  return result;
}

unint64_t sub_1A6846664()
{
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 6517363;
  *(void *)(inited + 40) = 0xE300000000000000;
  uint64_t v2 = v0[1];
  *(void *)(inited + 48) = *v0;
  *(void *)(inited + 56) = v2;
  swift_bridgeObjectRetain();
  return sub_1A6742BA0(inited);
}

uint64_t sub_1A68466D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A67F7408(v1 + 16, a1);
}

void (*sub_1A68466DC(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTSMarkupSpeech.eventTaps.modify(v2);
  return sub_1A684674C;
}

uint64_t TTSMarkup.Desc.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = 0;
  long long v32 = 0u;
  memset(v31, 0, sizeof(v31));
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8))();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1A673F7AC(0x676E616C3A6C6D78, 0xE800000000000000), (v7 & 1) != 0))
  {
    id v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
    uint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRelease();
    *((void *)&v32 + 1) = v10;
    uint64_t v33 = v9;
  }
  else
  {
    uint64_t v11 = swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t))((*v4 & *a1) + 0x100);
  unint64_t v13 = v12(v11);
  if (v13 >> 62) {
    uint64_t v14 = sub_1A6892EB0();
  }
  else {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = swift_bridgeObjectRelease();
  if (!v14)
  {

LABEL_29:
    sub_1A6846C6C((uint64_t)v31, a2);
    return sub_1A6846C7C((uint64_t)v31);
  }
  unint64_t v16 = v12(v15);
  unint64_t v17 = v16;
  if (!(v16 >> 62))
  {
    uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_10;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1A6741AD0(&qword_1E96C1D60);
    id v30 = &protocol witness table for <A> [A];

    *(void *)&long long v28 = v21;
    sub_1A67F711C((uint64_t)&v28, (uint64_t)v31);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A6892EB0();
  uint64_t v18 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_10:
  if (v18 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v17 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1AD0BFD30](v20, v17);
      }
      else {
        id v22 = *(id *)(v17 + 8 * v20 + 32);
      }
      uint64_t v23 = v22;
      sub_1A677BA04((uint64_t)&v26);

      if (v27)
      {
        sub_1A673E770(&v26, (uint64_t)&v28);
        sub_1A673E770(&v28, (uint64_t)&v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1A676207C(0, v21[2] + 1, 1, v21);
        }
        unint64_t v25 = v21[2];
        unint64_t v24 = v21[3];
        if (v25 >= v24 >> 1) {
          uint64_t v21 = sub_1A676207C((void *)(v24 > 1), v25 + 1, 1, v21);
        }
        void v21[2] = v25 + 1;
        sub_1A673E770(&v26, (uint64_t)&v21[5 * v25 + 4]);
      }
      else
      {
        sub_1A6761FF4((uint64_t)&v26);
      }
      ++v20;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

void static TTSMarkup.Desc.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

unint64_t TTSMarkup.Desc.attributes.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 40);
    sub_1A6741AD0(&qword_1E96C1588);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
    *(void *)(inited + 32) = 0x676E616C3A6C6D78;
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = v2;
    *(void *)(inited + 56) = v1;
    swift_bridgeObjectRetain();
    return sub_1A6742BA0(inited);
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    return sub_1A6742BA0(v5);
  }
}

uint64_t TTSMarkup.Desc.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A67F7408(v1, a1);
}

uint64_t TTSMarkup.Desc.content.setter(uint64_t a1)
{
  return sub_1A67F711C(a1, v1);
}

uint64_t (*TTSMarkup.Desc.content.modify())(void, void)
{
  return nullsub_19;
}

void sub_1A6846B64(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

unint64_t sub_1A6846B70()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 40);
    sub_1A6741AD0(&qword_1E96C1588);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
    *(void *)(inited + 32) = 0x676E616C3A6C6D78;
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = v2;
    *(void *)(inited + 56) = v1;
    swift_bridgeObjectRetain();
    return sub_1A6742BA0(inited);
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    return sub_1A6742BA0(v5);
  }
}

uint64_t sub_1A6846C24@<X0>(uint64_t a1@<X8>)
{
  return sub_1A67F7408(v1, a1);
}

uint64_t sub_1A6846C34(void *a1, uint64_t a2)
{
  return _s5AudioVwcp(a2, a1);
}

uint64_t sub_1A6846C44(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A6846C6C(uint64_t a1, uint64_t a2)
{
  return _s4DescVwcp(a2, a1);
}

uint64_t sub_1A6846C7C(uint64_t a1)
{
  return a1;
}

uint64_t _s5AudioVwxx(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return sub_1A6741A24(a1 + 16);
  }
  return result;
}

uint64_t _s5AudioVwcp(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t _s5AudioVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    return a1;
  }
  if (!v4)
  {
    sub_1A6741A24(a1 + 16);
    goto LABEL_7;
  }
  sub_1A67588AC((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t _s5AudioVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    sub_1A6741A24(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for TTSMarkup.Audio()
{
  return &type metadata for TTSMarkup.Audio;
}

uint64_t _s4DescVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    sub_1A6741A24(a1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s4DescVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4DescVwca(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_1A6741A24(a1);
    goto LABEL_7;
  }
  sub_1A67588AC((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4DescVwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_1A6741A24(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4DescVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s4DescVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.Desc()
{
  return &type metadata for TTSMarkup.Desc;
}

uint64_t TTSSpeechQueue.executor.getter()
{
  return swift_retain();
}

BOOL static TTSSpeechQueue.Event.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TTSSpeechQueue.Event.hash(into:)()
{
  return sub_1A6893210();
}

void *sub_1A68471DC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(**(void **)a1 + 152))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1A6847238(char *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  char v4 = *a1;
  return (*(uint64_t (**)(char *))(*(void *)v2 + 160))(&v4);
}

uint64_t sub_1A6847290()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A6891CE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A6748F64();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain_n();
  uint64_t v7 = sub_1A6891CC0();
  os_log_type_t v8 = sub_1A6892840();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v16[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v14 = v9 + 4;
    swift_beginAccess();
    LOBYTE(v15) = *(unsigned char *)(v1 + 32);
    uint64_t v11 = sub_1A6892090();
    uint64_t v15 = sub_1A673F908(v11, v12, v16);
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1A66D3000, v7, v8, "State => %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v10, -1, -1);
    MEMORY[0x1AD0C1C50](v9, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  LOBYTE(v15) = *(unsigned char *)(v1 + 32);
  return sub_1A6891D30();
}

uint64_t sub_1A68474F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 32);
  return result;
}

uint64_t sub_1A684753C(char *a1)
{
  char v2 = *a1;
  swift_beginAccess();
  *(unsigned char *)(v1 + 32) = v2;
  return sub_1A6847290();
}

uint64_t (*sub_1A6847580(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1A68475D8;
}

uint64_t sub_1A68475D8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1A6847290();
  }
  return result;
}

uint64_t sub_1A684760C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  os_log_type_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A6891CE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A6748F64();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_retain_n();
  uint64_t v14 = sub_1A6891CC0();
  int v15 = sub_1A6892840();
  BOOL v16 = os_log_type_enabled(v14, (os_log_type_t)v15);
  uint64_t v58 = v4;
  uint64_t v59 = v1;
  if (v16)
  {
    int v53 = v15;
    os_log_t v55 = v14;
    uint64_t v56 = v9;
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    v62[0] = v52;
    int v54 = v17;
    *(_DWORD *)unint64_t v17 = 136315138;
    swift_beginAccess();
    uint64_t v18 = *(void *)(v1 + 40);
    int64_t v19 = *(void *)(v18 + 16);
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v57 = v6;
    if (v19)
    {
      uint64_t v61 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1A6797988(0, v19, 0);
      uint64_t v21 = v18 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v22 = *(void *)(v6 + 72);
      uint64_t v20 = v61;
      do
      {
        sub_1A6852CAC(v21, (uint64_t)v8);
        long long v60 = *(_OWORD *)v8;
        swift_unknownObjectRetain();
        sub_1A6852D10((uint64_t)v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A6797988(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v61;
        }
        unint64_t v24 = *(void *)(v20 + 16);
        unint64_t v23 = *(void *)(v20 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1A6797988(v23 > 1, v24 + 1, 1);
          uint64_t v20 = v61;
        }
        *(void *)(v20 + 16) = v24 + 1;
        *(_OWORD *)(v20 + 16 * v24 + 32) = v60;
        v21 += v22;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      uint64_t v4 = v58;
      uint64_t v1 = v59;
    }
    unint64_t v25 = v54;
    uint64_t v26 = sub_1A6741AD0(&qword_1E96C2418);
    uint64_t v27 = MEMORY[0x1AD0BF3B0](v20, v26);
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_1A673F908(v27, v29, v62);
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    swift_release_n();
    os_log_t v30 = v55;
    _os_log_impl(&dword_1A66D3000, v55, (os_log_type_t)v53, "WorkItems => %s", v25, 0xCu);
    uint64_t v31 = v52;
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v31, -1, -1);
    MEMORY[0x1AD0C1C50](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v56);
    uint64_t v6 = v57;
  }
  else
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  swift_beginAccess();
  uint64_t v32 = *(void *)(v1 + 40);
  int64_t v33 = *(void *)(v32 + 16);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (v33)
  {
    uint64_t v61 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1A6797988(0, v33, 0);
    uint64_t v35 = *(unsigned __int8 *)(v6 + 80);
    *(void *)&long long v60 = v32;
    uint64_t v36 = v32 + ((v35 + 32) & ~v35);
    uint64_t v37 = *(void *)(v6 + 72);
    uint64_t v34 = v61;
    do
    {
      sub_1A6852CAC(v36, (uint64_t)v8);
      uint64_t v38 = *((void *)v8 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 80);
      uint64_t v41 = swift_unknownObjectRetain();
      uint64_t v42 = v40(v41, ObjectType, v38);
      sub_1A6852D10((uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A6797988(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v61;
      }
      unint64_t v44 = *(void *)(v34 + 16);
      unint64_t v43 = *(void *)(v34 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_1A6797988(v43 > 1, v44 + 1, 1);
        uint64_t v34 = v61;
      }
      *(void *)(v34 + 16) = v44 + 1;
      unint64_t v45 = v34 + 16 * v44;
      *(void *)(v45 + 32) = v42;
      *(void *)(v45 + 40) = v38;
      v36 += v37;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    uint64_t v4 = v58;
    uint64_t v1 = v59;
  }
  uint64_t v46 = v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v47 = sub_1A68924A0();
  uint64_t v48 = *(void *)(v47 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v4, v46, v47);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v4, 0, 1, v47);
  uint64_t v49 = sub_1A6857B14(&qword_1E96C3728);
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = v1;
  v50[3] = v49;
  v50[4] = v1;
  v50[5] = v34;
  swift_retain_n();
  sub_1A6787038((uint64_t)v4, (uint64_t)&unk_1E96C3880, (uint64_t)v50);
  return swift_release();
}

uint64_t sub_1A6847C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v7 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A6847D30, v7, v6);
}

uint64_t sub_1A6847D30()
{
  sub_1A6892470();
  *(void *)(v0 + 32) = sub_1A6892460();
  uint64_t v2 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A6847DC4, v2, v1);
}

uint64_t sub_1A6847DC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)v1 + 280);
  uint64_t v3 = swift_bridgeObjectRetain();
  v2(v3);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t type metadata accessor for TTSSpeechQueue.QueueableWrapper(uint64_t a1)
{
  return sub_1A675A684(a1, qword_1E96C3AE0);
}

uint64_t TTSSpeechQueue.taskPriority.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v4 = sub_1A68924A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1A6847EF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 272))();
  *a2 = result;
  return result;
}

uint64_t sub_1A6847F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 280);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1A6847FA8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1A6891D90();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1A684801C()
{
  return sub_1A6891DA0();
}

void (*sub_1A684808C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1A6891D80();
  return sub_1A6848118;
}

void sub_1A6848118(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_1A6848180(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 296))();
}

uint64_t sub_1A68481CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1E96C3718);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 304))(v6);
}

uint64_t sub_1A68482D0()
{
  return swift_endAccess();
}

uint64_t sub_1A6848334(uint64_t a1)
{
  uint64_t v2 = sub_1A6741AD0((uint64_t *)&unk_1E96C3718);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  sub_1A6741AD0(&qword_1E96C14E0);
  sub_1A6891D70();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1A6848460(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1E96C3718);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue__uiActions;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_1A6741AD0(&qword_1E96C14E0);
  sub_1A6891D60();
  swift_endAccess();
  return sub_1A6848570;
}

void sub_1A6848570(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1A6891D70();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_1A6891D70();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_1A68486E0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 25) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v2;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  *(void *)(v3 + 56) = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v5 = sub_1A68923E0();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = v4;
  return MEMORY[0x1F4188298](sub_1A68487B8, v5, v4);
}

uint64_t sub_1A68487B8()
{
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v4 = sub_1A6848EC0(v3, (unint64_t *)(v0 + 32));
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v6 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v6;
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v7 + v6);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8)
  {
    *(void *)(v0 + 96) = v8;
    *(void *)(v0 + 104) = v8;
    swift_retain();
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v9;
    uint64_t v10 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v9 = v0;
    v9[1] = sub_1A6848A64;
    uint64_t v11 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v12 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 16, v8, v11, v10, v12);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v14 = v7 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
    uint64_t v15 = sub_1A68924A0();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    unint64_t v17 = (void *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = &unk_1E96C3738;
    v17[5] = v5;
    swift_retain();
    *(void *)(v7 + v6) = sub_1A67724DC(v13, (uint64_t)&unk_1E96C3748, (uint64_t)v17);
    swift_release();
    swift_release();
    uint64_t v18 = *(void *)(v0 + 32);
    swift_task_dealloc();
    int64_t v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v19(v18);
  }
}

uint64_t sub_1A6848A64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return MEMORY[0x1F4188298](sub_1A6848BA8, v3, v2);
}

uint64_t sub_1A6848BA8()
{
  sub_1A6771D48(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v2 + v1);
  if (*(void *)(v0 + 96))
  {
    if (v3)
    {
      swift_retain();
      swift_retain();
      sub_1A6741AD0(&qword_1E96C1520);
      char v4 = sub_1A6892580();
      swift_release();
      swift_release();
      uint64_t v1 = *(void *)(v0 + 88);
      uint64_t v2 = *(void *)(v0 + 48);
      if (v4) {
        goto LABEL_12;
      }
      uint64_t v3 = *(void *)(v2 + v1);
    }
  }
  else if (!v3)
  {
    goto LABEL_12;
  }
  swift_retain();
  swift_release();
  if (v3)
  {
LABEL_9:
    *(void *)(v0 + 96) = v3;
    *(void *)(v0 + 104) = v3;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v5;
    uint64_t v6 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v5 = v0;
    v5[1] = sub_1A6848A64;
    uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v8 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 16, v3, v7, v6, v8);
  }
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v2 + v1);
  if (v3)
  {
    swift_retain();
    goto LABEL_9;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v12 = sub_1A68924A0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  long long v14[3] = 0;
  v14[4] = &unk_1E96C3738;
  v14[5] = v9;
  swift_retain();
  *(void *)(v2 + v1) = sub_1A67724DC(v10, (uint64_t)&unk_1E96C3748, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = *(void *)(v0 + 32);
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v16(v15);
}

uint64_t type metadata accessor for TTSSpeechQueue(uint64_t a1)
{
  return sub_1A675A684(a1, qword_1E96C3B00);
}

unint64_t sub_1A6848EC0(uint64_t a1, unint64_t *a2)
{
  uint64_t v58 = a2;
  uint64_t v57 = sub_1A6741AD0(&qword_1E96C3910);
  uint64_t v4 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1A6741AD0(&qword_1E96C2260);
  uint64_t v6 = *(void *)(v64 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v64);
  uint64_t v62 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v61 = (char *)&v41 - v9;
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C37B8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v60 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v55 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v43 = (uint64_t)&v41 - v19;
  uint64_t v54 = *(void *)(a1 + 16);
  if (!v54) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = v2;
  uint64_t v42 = v18;
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v49 = (void (**)(char *, void, uint64_t))(v4 + 104);
  unsigned int v48 = *MEMORY[0x1E4FBD120];
  uint64_t v46 = v6 + 32;
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v51 = v18 + 56;
  uint64_t v52 = v6;
  uint64_t v45 = v6 + 8;
  unint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  unint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v53 = a1;
  do
  {
    unint64_t v59 = v21;
    uint64_t v22 = v14;
    long long v63 = *(_OWORD *)(a1 + 16 * v20 + 32);
    uint64_t v23 = v60;
    uint64_t v24 = v15;
    uint64_t v25 = v50(v60, 1, 1, v15);
    MEMORY[0x1F4188790](v25);
    *(&v41 - 4) = v23;
    *(_OWORD *)(&v41 - 3) = v63;
    (*v49)(v56, v48, v57);
    swift_unknownObjectRetain();
    uint64_t v26 = v61;
    sub_1A68926B0();
    (*v47)(v62, v26, v64);
    uint64_t v27 = v58;
    unint64_t v28 = *v58;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v27 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v28 = sub_1A6853214(0, *(void *)(v28 + 16) + 1, 1, v28);
      unint64_t *v58 = v28;
    }
    unint64_t v31 = *(void *)(v28 + 16);
    unint64_t v30 = *(void *)(v28 + 24);
    uint64_t v14 = v22;
    if (v31 >= v30 >> 1)
    {
      unint64_t v28 = sub_1A6853214(v30 > 1, v31 + 1, 1, v28);
      unint64_t *v58 = v28;
    }
    *(void *)(v28 + 16) = v31 + 1;
    uint64_t v32 = v52;
    uint64_t v33 = v64;
    (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v28+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v31, v62, v64);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v61, v33);
    uint64_t v34 = v60;
    sub_1A68534EC(v60, (uint64_t)v14);
    sub_1A6750210(v34, &qword_1E96C37B8);
    swift_unknownObjectRelease();
    uint64_t v15 = v24;
    if ((*v44)(v14, 1, v24) == 1)
    {
      sub_1A6750210((uint64_t)v14, &qword_1E96C37B8);
      a1 = v53;
      unint64_t v21 = v59;
    }
    else
    {
      uint64_t v35 = v43;
      sub_1A6852E74((uint64_t)v14, v43);
      sub_1A6852E74(v35, v55);
      unint64_t v21 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_1A6852FAC(0, *(void *)(v21 + 16) + 1, 1, v21);
      }
      unint64_t v37 = *(void *)(v21 + 16);
      unint64_t v36 = *(void *)(v21 + 24);
      uint64_t v38 = v42;
      if (v37 >= v36 >> 1)
      {
        uint64_t v39 = sub_1A6852FAC(v36 > 1, v37 + 1, 1, v21);
        uint64_t v38 = v42;
        unint64_t v21 = v39;
      }
      *(void *)(v21 + 16) = v37 + 1;
      sub_1A6852E74(v55, v21+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v37);
      a1 = v53;
    }
    ++v20;
  }
  while (v54 != v20);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1A68494EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 201) = a4;
  *(void *)(v4 + 72) = a2;
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 64) = a1;
  uint64_t v5 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  *(void *)(v4 + 88) = v5;
  *(void *)(v4 + 96) = *(void *)(v5 - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  sub_1A6741AD0(&qword_1E96C38E8);
  *(void *)(v4 + 112) = swift_task_alloc();
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C3848);
  *(void *)(v4 + 120) = v6;
  *(void *)(v4 + 128) = *(void *)(v6 - 8);
  *(void *)(v4 + 136) = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v8 = sub_1A68923E0();
  *(void *)(v4 + 144) = v8;
  *(void *)(v4 + 152) = v7;
  return MEMORY[0x1F4188298](sub_1A6849688, v8, v7);
}

uint64_t sub_1A6849688()
{
  void (*v6)(char *__return_ptr, uint64_t, void);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  long long *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *__return_ptr, uint64_t, void);
  char v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t result;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t (*v68)(void);
  unint64_t v69;
  void (**v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  long long v81;
  long long v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;

  uint64_t v87 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v78 = v2;
  if (v2)
  {
    uint64_t v3 = (long long *)(v1 + 32);
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v81 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(char *__return_ptr, uint64_t, void))(*((void *)&v81 + 1) + 40);
      swift_unknownObjectRetain();
      v6(&v85, ObjectType, *((void *)&v81 + 1));
      if (v85)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v86 = v4;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A6797988(0, v4[2] + 1, 1);
          uint64_t v4 = v86;
        }
        uint64_t v9 = v4[2];
        uint64_t v8 = v4[3];
        if (v9 >= v8 >> 1)
        {
          sub_1A6797988(v8 > 1, v9 + 1, 1);
          uint64_t v4 = v86;
        }
        v4[2] = v9 + 1;
        *(_OWORD *)&v4[2 * v9 + 4] = v81;
      }
      ++v3;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = v4[2];
  uint64_t v80 = v0;
  if (v10)
  {
    uint64_t v11 = v4[4];
    uint64_t v77 = v4[5];
    uint64_t v12 = v10 - 1;
    if (v10 == 1)
    {
      swift_unknownObjectRetain();
    }
    else
    {
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v13 = v4 + 7;
      uint64_t v14 = v77;
      do
      {
        uint64_t v16 = *(v13 - 1);
        uint64_t v15 = *v13;
        uint64_t v17 = swift_getObjectType();
        uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 24);
        swift_unknownObjectRetain();
        uint64_t v19 = v18(v17, v15);
        uint64_t v20 = swift_getObjectType();
        if (v19 < (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v20, v14))
        {
          uint64_t v11 = v16;
          uint64_t v14 = v15;
        }
        swift_unknownObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      uint64_t v77 = v14;
      swift_release();
      uint64_t v0 = v80;
    }
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v11 = 0;
    uint64_t v77 = 0;
  }
  *(void *)(v0 + 160) = v11;
  unint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  if (v78)
  {
    uint64_t v22 = v0;
    uint64_t v23 = (long long *)(*(void *)(v0 + 64) + 32);
    swift_bridgeObjectRetain();
    uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v25 = v78;
    do
    {
      uint64_t v82 = *v23;
      uint64_t v26 = swift_getObjectType();
      uint64_t v27 = *(void (**)(char *__return_ptr, uint64_t, void))(*((void *)&v82 + 1) + 48);
      swift_unknownObjectRetain();
      v27(&v85, v26, *((void *)&v82 + 1));
      if (v85)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        unint64_t v28 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v86 = v24;
        if ((v28 & 1) == 0)
        {
          sub_1A6797988(0, v24[2] + 1, 1);
          uint64_t v24 = v86;
        }
        unint64_t v30 = v24[2];
        unint64_t v29 = v24[3];
        if (v30 >= v29 >> 1)
        {
          sub_1A6797988(v29 > 1, v30 + 1, 1);
          uint64_t v24 = v86;
        }
        v24[2] = v30 + 1;
        *(_OWORD *)&v24[2 * v30 + 4] = v82;
      }
      ++v23;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    unint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v31 = v24[2];
    if (v31) {
      goto LABEL_34;
    }
LABEL_40:
    swift_release();
    uint64_t v32 = MEMORY[0x1E4FBC860];
    uint64_t v40 = v22;
    goto LABEL_41;
  }
  uint64_t v22 = v0;
  uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v31) {
    goto LABEL_40;
  }
LABEL_34:
  uint64_t v83 = v11;
  uint64_t v86 = v21;
  sub_1A6853648(0, v31, 0);
  uint64_t v32 = (uint64_t)v86;
  uint64_t v33 = v24 + 5;
  do
  {
    uint64_t v34 = *v33;
    uint64_t v35 = swift_getObjectType();
    unint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 24);
    swift_unknownObjectRetain();
    unint64_t v37 = v36(v35, v34);
    swift_unknownObjectRelease();
    uint64_t v86 = (void *)v32;
    uint64_t v39 = *(void *)(v32 + 16);
    uint64_t v38 = *(void *)(v32 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_1A6853648(v38 > 1, v39 + 1, 1);
      uint64_t v32 = (uint64_t)v86;
    }
    *(void *)(v32 + 16) = v39 + 1;
    *(void *)(v32 + 8 * v39 + 32) = v37;
    v33 += 2;
    --v31;
  }
  while (v31);
  swift_release();
  uint64_t v40 = v80;
  uint64_t v11 = v83;
LABEL_41:
  *(void *)(v40 + 168) = sub_1A6854AB0(v32);
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_unknownObjectRetain();
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v40 + 176) = v41;
    *uint64_t v41 = v40;
    v41[1] = sub_1A6849F78;
    uint64_t v42 = *(void *)(v40 + 72);
    return sub_1A6854B24(v42, v11, v77);
  }
  else if (*(void *)(*(void *)(v40 + 168) + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v44 = (void *)swift_task_alloc();
    *(void *)(v40 + 184) = v44;
    *unint64_t v44 = v40;
    v44[1] = sub_1A684A500;
    uint64_t v45 = *(void *)(v40 + 168);
    uint64_t v46 = *(void *)(v40 + 72);
    return sub_1A6855E5C(v46, v45);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void *)(v40 + 80);
    uint64_t v72 = *(void *)(v47 + 16);
    if (v72)
    {
      unsigned int v48 = *(void *)(v40 + 128);
      uint64_t v49 = *(void *)(v40 + 96);
      unint64_t v75 = *(void *)(v40 + 104);
      uint64_t v69 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      unint64_t v71 = v47 + v69;
      uint64_t v50 = *(void *)(v40 + 72) + 40;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v51 = 0;
      uint64_t v79 = *(void *)(v49 + 72);
      char v70 = (void (**)(uint64_t, uint64_t))(v48 + 8);
      while (1)
      {
        uint64_t v52 = v71 + v51 * v79;
        long long v84 = *(void *)(*(void *)v50 + 16);
        uint64_t v74 = v51;
        if (v84) {
          break;
        }
        uint64_t v54 = 0;
LABEL_60:
        long long v63 = *(void *)(v40 + 136);
        uint64_t v64 = *(void *)(v40 + 120);
        *(unsigned char *)(v40 + 200) = 0;
        sub_1A6741AD0(&qword_1E96C3830);
        sub_1A6892650();
        (*v70)(v63, v64);
        uint64_t result = swift_beginAccess();
        if (*(void *)(*(void *)v50 + 16) < v54) {
          goto LABEL_71;
        }
        unint64_t v65 = *(void *)(v40 + 112);
        uint64_t v51 = v74 + 1;
        sub_1A6852CAC(v52, v65);
        sub_1A68542A8(v54, v54, v65);
        swift_endAccess();
        sub_1A684760C();
        if (v74 + 1 == v72)
        {
          swift_bridgeObjectRelease();
          goto LABEL_63;
        }
      }
      uint64_t v53 = *(void *)(v52 + 8);
      BOOL v73 = v71 + v51 * v79;
      uint64_t result = swift_getObjectType();
      char v76 = result;
      uint64_t v54 = 0;
      uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 24);
      uint64_t v56 = v69;
      while (v54 < *(void *)(*(void *)v50 + 16))
      {
        uint64_t v57 = v50;
        uint64_t v58 = *(void *)(v80 + 104);
        sub_1A6852CAC(*(void *)v50 + v56, v58);
        unint64_t v59 = v55(v76, v53);
        uint64_t v60 = *(void *)(v75 + 8);
        uint64_t v61 = swift_getObjectType();
        uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 24))(v61, v60);
        uint64_t result = sub_1A6852D10(v58);
        if (v62 < v59)
        {
          uint64_t v40 = v80;
          uint64_t v50 = v57;
          goto LABEL_59;
        }
        ++v54;
        v56 += v79;
        uint64_t v50 = v57;
        if (v84 == v54)
        {
          uint64_t v40 = v80;
          uint64_t v54 = v84;
LABEL_59:
          uint64_t v52 = v73;
          goto LABEL_60;
        }
      }
      __break(1u);
LABEL_71:
      __break(1u);
    }
    else
    {
LABEL_63:
      if (*(unsigned char *)(v40 + 201))
      {
        int64_t v66 = *(void *)(v40 + 72);
        LOBYTE(v86) = 3;
        (*(void (**)(void **))(*(void *)v66 + 160))(&v86);
        unint64_t v67 = (void *)swift_task_alloc();
        *(void *)(v40 + 192) = v67;
        *unint64_t v67 = v40;
        v67[1] = sub_1A684A9F4;
        return sub_1A684F4C4();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        int64_t v68 = *(uint64_t (**)(void))(v40 + 8);
        return v68();
      }
    }
  }
  return result;
}

uint64_t sub_1A6849F78()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x1F4188298](sub_1A684A0BC, v3, v2);
}

uint64_t sub_1A684A0BC()
{
  uint64_t v42 = v0;
  uint64_t v1 = v0;
  if (*(void *)(v0[21] + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[23] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1A684A500;
    uint64_t v3 = v0[21];
    uint64_t v4 = v0[9];
    return sub_1A6855E5C(v4, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v0[10];
    uint64_t v34 = *(void *)(v6 + 16);
    if (v34)
    {
      uint64_t v7 = v0[16];
      uint64_t v8 = v1[12];
      uint64_t v37 = v1[13];
      unint64_t v31 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v33 = v6 + v31;
      uint64_t v9 = v1[9] + 40;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v10 = 0;
      uint64_t v39 = *(void *)(v8 + 72);
      uint64_t v32 = (void (**)(uint64_t, uint64_t))(v7 + 8);
      uint64_t v11 = v9;
      while (1)
      {
        uint64_t v12 = v33 + v10 * v39;
        unint64_t v40 = *(void *)(*(void *)v11 + 16);
        if (v40) {
          break;
        }
        unint64_t v14 = 0;
LABEL_16:
        uint64_t v25 = v1[17];
        uint64_t v26 = v1[15];
        *((unsigned char *)v1 + 200) = 0;
        sub_1A6741AD0(&qword_1E96C3830);
        sub_1A6892650();
        (*v32)(v25, v26);
        uint64_t result = swift_beginAccess();
        if (*(void *)(*(void *)v11 + 16) < v14) {
          goto LABEL_27;
        }
        uint64_t v27 = v1[14];
        ++v10;
        sub_1A6852CAC(v12, v27);
        sub_1A68542A8(v14, v14, v27);
        swift_endAccess();
        sub_1A684760C();
        if (v10 == v34)
        {
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      uint64_t v35 = v33 + v10 * v39;
      uint64_t v36 = v10;
      uint64_t v13 = *(void *)(v12 + 8);
      uint64_t result = swift_getObjectType();
      uint64_t v38 = result;
      unint64_t v14 = 0;
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
      unint64_t v16 = v31;
      while (1)
      {
        uint64_t v17 = *(void *)v11;
        if (v14 >= *(void *)(*(void *)v11 + 16)) {
          break;
        }
        uint64_t v18 = v11;
        uint64_t v19 = v1;
        uint64_t v20 = v1[13];
        sub_1A6852CAC(v17 + v16, v20);
        uint64_t v21 = v15(v38, v13);
        uint64_t v22 = *(void *)(v37 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(ObjectType, v22);
        uint64_t result = sub_1A6852D10(v20);
        if (v24 < v21)
        {
          uint64_t v1 = v19;
          uint64_t v11 = v18;
          goto LABEL_15;
        }
        ++v14;
        v16 += v39;
        uint64_t v1 = v19;
        uint64_t v11 = v18;
        if (v40 == v14)
        {
          unint64_t v14 = v40;
LABEL_15:
          uint64_t v12 = v35;
          uint64_t v10 = v36;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_27:
      __break(1u);
    }
    else
    {
LABEL_19:
      if (*((unsigned char *)v1 + 201))
      {
        uint64_t v28 = v1[9];
        char v41 = 3;
        (*(void (**)(char *))(*(void *)v28 + 160))(&v41);
        unint64_t v29 = (void *)swift_task_alloc();
        v1[24] = v29;
        *unint64_t v29 = v1;
        v29[1] = sub_1A684A9F4;
        return sub_1A684F4C4();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        unint64_t v30 = (uint64_t (*)(void))v1[1];
        return v30();
      }
    }
  }
  return result;
}

uint64_t sub_1A684A500()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x1F4188298](sub_1A684A648, v3, v2);
}

uint64_t sub_1A684A648()
{
  uint64_t v39 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v31 = *(void *)(v2 + 16);
  if (v31)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v1 + 96);
    uint64_t v34 = *(void *)(v1 + 104);
    unint64_t v28 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v30 = v2 + v28;
    uint64_t v5 = *(void *)(v1 + 72) + 40;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v6 = 0;
    uint64_t v36 = *(void *)(v4 + 72);
    unint64_t v29 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v7 = v5;
    while (1)
    {
      uint64_t v8 = v30 + v6 * v36;
      unint64_t v37 = *(void *)(*(void *)v7 + 16);
      if (v37) {
        break;
      }
      unint64_t v11 = 0;
LABEL_12:
      uint64_t v22 = *(void *)(v1 + 136);
      uint64_t v23 = *(void *)(v1 + 120);
      *(unsigned char *)(v1 + 200) = 0;
      sub_1A6741AD0(&qword_1E96C3830);
      sub_1A6892650();
      (*v29)(v22, v23);
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v7 + 16) < v11) {
        goto LABEL_23;
      }
      uint64_t v24 = *(void *)(v1 + 112);
      ++v6;
      sub_1A6852CAC(v8, v24);
      sub_1A68542A8(v11, v11, v24);
      swift_endAccess();
      sub_1A684760C();
      if (v6 == v31)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    uint64_t v32 = v30 + v6 * v36;
    uint64_t v33 = v6;
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t result = swift_getObjectType();
    uint64_t v35 = result;
    unint64_t v11 = 0;
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
    unint64_t v13 = v28;
    while (1)
    {
      uint64_t v14 = *(void *)v7;
      if (v11 >= *(void *)(*(void *)v7 + 16)) {
        break;
      }
      uint64_t v15 = v7;
      uint64_t v16 = v1;
      uint64_t v17 = *(void *)(v1 + 104);
      sub_1A6852CAC(v14 + v13, v17);
      uint64_t v18 = v12(v35, v9);
      uint64_t v19 = *(void *)(v34 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(ObjectType, v19);
      uint64_t result = sub_1A6852D10(v17);
      if (v21 < v18)
      {
        uint64_t v1 = v16;
        uint64_t v7 = v15;
        goto LABEL_11;
      }
      ++v11;
      v13 += v36;
      uint64_t v1 = v16;
      uint64_t v7 = v15;
      if (v37 == v11)
      {
        unint64_t v11 = v37;
LABEL_11:
        uint64_t v8 = v32;
        uint64_t v6 = v33;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (*(unsigned char *)(v1 + 201))
    {
      uint64_t v25 = *(void *)(v1 + 72);
      char v38 = 3;
      (*(void (**)(char *))(*(void *)v25 + 160))(&v38);
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v1 + 192) = v26;
      *uint64_t v26 = v1;
      v26[1] = sub_1A684A9F4;
      return sub_1A684F4C4();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v27 = *(uint64_t (**)(void))(v1 + 8);
      return v27();
    }
  }
  return result;
}

uint64_t sub_1A684A9F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x1F4188298](sub_1A684AB14, v3, v2);
}

uint64_t sub_1A684AB14()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A684AB9C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1A684ABE4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1A677B9EC;
  return sub_1A68494EC(v2, v3, v4, v5);
}

BOOL static TTSSpeechQueue.QueuingBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A684ACAC(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v3[7] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v5 = sub_1A68923E0();
  v3[8] = v5;
  v3[9] = v4;
  return MEMORY[0x1F4188298](sub_1A684AD84, v5, v4);
}

uint64_t sub_1A684AD84()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  long long v4[3] = v3;
  v4[4] = v2;
  uint64_t v5 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  v0[10] = v4;
  v0[11] = v5;
  uint64_t v6 = *(void *)(v1 + v5);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v0[12] = v6;
    v0[13] = v6;
    swift_retain();
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[14] = v7;
    uint64_t v8 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v7 = v0;
    v7[1] = sub_1A684AFFC;
    uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v10 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 2, v6, v9, v8, v10);
  }
  else
  {
    uint64_t v11 = v0[7];
    uint64_t v12 = v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
    uint64_t v13 = sub_1A68924A0();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = 0;
    long long v15[3] = 0;
    v15[4] = &unk_1E96C3760;
    v15[5] = v4;
    swift_retain();
    *(void *)(v1 + v5) = sub_1A67724DC(v11, (uint64_t)&unk_1E96C3768, (uint64_t)v15);
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_1A684AFFC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return MEMORY[0x1F4188298](sub_1A684B140, v3, v2);
}

uint64_t sub_1A684B140()
{
  sub_1A6771D48(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v2 + v1);
  if (*(void *)(v0 + 96))
  {
    if (v3)
    {
      swift_retain();
      swift_retain();
      sub_1A6741AD0(&qword_1E96C1520);
      char v4 = sub_1A6892580();
      swift_release();
      swift_release();
      uint64_t v1 = *(void *)(v0 + 88);
      uint64_t v2 = *(void *)(v0 + 48);
      if (v4) {
        goto LABEL_12;
      }
      uint64_t v3 = *(void *)(v2 + v1);
    }
  }
  else if (!v3)
  {
    goto LABEL_12;
  }
  swift_retain();
  swift_release();
  if (v3)
  {
LABEL_9:
    *(void *)(v0 + 96) = v3;
    *(void *)(v0 + 104) = v3;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v5;
    uint64_t v6 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v5 = v0;
    v5[1] = sub_1A684AFFC;
    uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v8 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 16, v3, v7, v6, v8);
  }
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v2 + v1);
  if (v3)
  {
    swift_retain();
    goto LABEL_9;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v12 = sub_1A68924A0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  long long v14[3] = 0;
  v14[4] = &unk_1E96C3760;
  v14[5] = v9;
  swift_retain();
  *(void *)(v2 + v1) = sub_1A67724DC(v10, (uint64_t)&unk_1E96C3768, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1A684B430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v5 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A684B4DC, v5, v4);
}

uint64_t sub_1A684B4DC()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A684B580;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_1A685685C(v4, v2, v3);
}

uint64_t sub_1A684B580()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A684B690()
{
  v1[2] = v0;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v1[3] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  v1[4] = sub_1A6857B14(&qword_1E96C3728);
  uint64_t v3 = sub_1A68923E0();
  return MEMORY[0x1F4188298](sub_1A684B768, v3, v2);
}

uint64_t sub_1A684B768()
{
  void *(*v2)(uint64_t *__return_ptr);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  void *v15;
  uint64_t v16;

  uint64_t v15 = v0;
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *(**)(uint64_t *__return_ptr))(*(void *)v1 + 152);
  uint64_t v3 = v2(&v14);
  if (v14 != 3)
  {
    ((void (*)(uint64_t *__return_ptr, void *))v2)((uint64_t *)((char *)&v14 + 1), v3);
    if (BYTE1(v14) != 2)
    {
      uint64_t v4 = v0[2];
      BYTE2(v14) = 3;
      (*(void (**)(char *))(*(void *)v4 + 160))((char *)&v14 + 2);
    }
  }
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  uint64_t v8 = v7 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v9 = sub_1A68924A0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v5, v8, v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v1;
  v11[3] = v6;
  v11[4] = v7;
  swift_retain_n();
  sub_1A6787038(v5, (uint64_t)&unk_1E96C3780, (uint64_t)v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1A684B94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v4[5] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v6 = sub_1A68923E0();
  v4[6] = v6;
  v4[7] = v5;
  return MEMORY[0x1F4188298](sub_1A684BA24, v6, v5);
}

uint64_t sub_1A684BA24()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  v0[8] = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  uint64_t v3 = *(void *)(v1 + v2);
  swift_retain();
  if (v3)
  {
    v0[9] = v3;
    v0[10] = v3;
    swift_retain();
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    uint64_t v5 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v4 = v0;
    v4[1] = sub_1A684BC64;
    uint64_t v6 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v7 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 2, v3, v6, v5, v7);
  }
  else
  {
    uint64_t v8 = v0[5];
    uint64_t v9 = v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
    uint64_t v10 = sub_1A68924A0();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = &unk_1E96C38D0;
    v12[5] = v1;
    swift_retain();
    *(void *)(v1 + v2) = sub_1A67724DC(v8, (uint64_t)&unk_1E96C38D8, (uint64_t)v12);
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1A684BC64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1A684BDA8, v3, v2);
}

uint64_t sub_1A684BDA8()
{
  sub_1A6771D48(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + v1);
  if (*(void *)(v0 + 72))
  {
    if (v3)
    {
      swift_retain();
      swift_retain();
      sub_1A6741AD0(&qword_1E96C1520);
      char v4 = sub_1A6892580();
      swift_release();
      swift_release();
      uint64_t v1 = *(void *)(v0 + 64);
      uint64_t v2 = *(void *)(v0 + 32);
      if (v4) {
        goto LABEL_12;
      }
      uint64_t v3 = *(void *)(v2 + v1);
    }
  }
  else if (!v3)
  {
    goto LABEL_12;
  }
  swift_retain();
  swift_release();
  if (v3)
  {
LABEL_9:
    *(void *)(v0 + 72) = v3;
    *(void *)(v0 + 80) = v3;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v5;
    uint64_t v6 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v5 = v0;
    v5[1] = sub_1A684BC64;
    uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v8 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 16, v3, v7, v6, v8);
  }
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + v1);
  if (v3)
  {
    swift_retain();
    goto LABEL_9;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v11 = sub_1A68924A0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = 0;
  long long v13[3] = 0;
  v13[4] = &unk_1E96C38D0;
  v13[5] = v2;
  swift_retain();
  *(void *)(v2 + v1) = sub_1A67724DC(v9, (uint64_t)&unk_1E96C38D8, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A684C094()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A677B9EC;
  return sub_1A684F4C4();
}

uint64_t sub_1A684C124()
{
  v1[2] = v0;
  type metadata accessor for TTSSpeechQueue(0);
  v1[3] = sub_1A6857B14(&qword_1E96C3728);
  uint64_t v3 = sub_1A68923E0();
  v1[4] = v3;
  v1[5] = v2;
  return MEMORY[0x1F4188298](sub_1A684C1CC, v3, v2);
}

uint64_t sub_1A684C1CC()
{
  void *(*v1)(uint64_t *__return_ptr);
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  uint64_t v9 = v0;
  uint64_t v1 = *(void *(**)(uint64_t *__return_ptr))(**(void **)(v0 + 16) + 152);
  uint64_t v2 = v1(&v8);
  if (v8 == 3
    || (((void (*)(uint64_t *__return_ptr, void *))v1)((uint64_t *)((char *)&v8 + 1), v2), BYTE1(v8) == 2))
  {
    uint64_t v3 = *(void *)(v0 + 16);
    BYTE2(v8) = 1;
    (*(void (**)(char *))(*(void *)v3 + 160))((char *)&v8 + 2);
    swift_retain();
    char v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v4;
    v4[2] = v3;
    long long v4[3] = &unk_1E96C3798;
    v4[4] = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1A684C3A8;
    return MEMORY[0x1F41880D8]();
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_1A684C3A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return MEMORY[0x1F4188298](sub_1A684C4EC, v3, v2);
}

uint64_t sub_1A684C4EC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A684C54C(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C3848);
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  sub_1A6741AD0(&qword_1E96C37B8);
  v1[14] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v5 = sub_1A68923E0();
  v1[15] = v5;
  v1[16] = v4;
  return MEMORY[0x1F4188298](sub_1A684C6E0, v5, v4);
}

uint64_t sub_1A684C6E0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runTask);
  v0[17] = v2;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  if (v2)
  {
    swift_retain_n();
    sub_1A6741AD0(&qword_1E96C1520);
    sub_1A6892590();
    swift_release();
    uint64_t v1 = v0[7];
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v7 = v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runningItem;
  swift_beginAccess();
  sub_1A68534EC(v7, v4);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  uint64_t v9 = v0[14];
  if (v8)
  {
    sub_1A6750210(v0[14], &qword_1E96C37B8);
    uint64_t v10 = v0[17];
    if (v10)
    {
      swift_retain();
      uint64_t v11 = (void *)swift_task_alloc();
      v0[20] = v11;
      uint64_t v12 = sub_1A6741AD0(&qword_1E96C1520);
      *uint64_t v11 = v0;
      v11[1] = sub_1A684CD64;
      uint64_t v13 = MEMORY[0x1E4FBC0F0];
      return MEMORY[0x1F4187DA0](v0 + 5, v10, v3 + 8, v12, v13);
    }
    else
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v18 = (uint64_t (*)(void))v0[1];
      return v18();
    }
  }
  else
  {
    uint64_t v14 = v0[13];
    sub_1A6852CAC(v0[14], v14);
    sub_1A6750210(v9, &qword_1E96C37B8);
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v15 + 72) + **(int **)(v15 + 72));
    uint64_t v17 = (void *)swift_task_alloc();
    v0[18] = v17;
    void *v17 = v0;
    v17[1] = sub_1A684C9E8;
    return v20(0, 0, ObjectType, v15);
  }
}

uint64_t sub_1A684C9E8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A684CCF4;
  }
  else {
    uint64_t v2 = sub_1A684CAFC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A684CAFC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  *(unsigned char *)(v0 + 49) = 3;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_1A6852D10(v1);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 128);
  return MEMORY[0x1F4188298](sub_1A684CBC4, v5, v6);
}

uint64_t sub_1A684CBC4()
{
  uint64_t v1 = v0[17];
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[20] = v2;
    uint64_t v3 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v2 = v0;
    v2[1] = sub_1A684CD64;
    uint64_t v4 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v5 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 5, v1, v4, v3, v5);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1A684CCF4()
{
  uint64_t v1 = *(void *)(v0 + 104);

  sub_1A6852D10(v1);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  return MEMORY[0x1F4188298](sub_1A68580EC, v2, v3);
}

uint64_t sub_1A684CD64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x1F4188298](sub_1A684CEA8, v3, v2);
}

uint64_t sub_1A684CEA8()
{
  swift_release();
  sub_1A6771D48(*(id *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A684CF30()
{
  v1[2] = v0;
  type metadata accessor for TTSSpeechQueue(0);
  v1[3] = sub_1A6857B14(&qword_1E96C3728);
  uint64_t v3 = sub_1A68923E0();
  v1[4] = v3;
  v1[5] = v2;
  return MEMORY[0x1F4188298](sub_1A684CFD8, v3, v2);
}

uint64_t sub_1A684CFD8()
{
  uint64_t v6 = v0;
  uint64_t v1 = v0[2];
  char v5 = 0;
  (*(void (**)(char *))(*(void *)v1 + 160))(&v5);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  v2[2] = v1;
  v2[3] = &unk_1E96C37B0;
  v2[4] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A684C3A8;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_1A684D114(uint64_t a1)
{
  v1[6] = a1;
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C3848);
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v5 = sub_1A68923E0();
  v1[13] = v5;
  v1[14] = v4;
  return MEMORY[0x1F4188298](sub_1A684D278, v5, v4);
}

uint64_t sub_1A684D278()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(void *)(v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runTask))
  {
    swift_retain();
    sub_1A6741AD0(&qword_1E96C1520);
    sub_1A6892590();
    swift_release();
    uint64_t v1 = *(void *)(v0 + 48);
  }
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)(v0 + 120) = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 128) = v3;
  uint64_t v4 = *(void *)(v0 + 96);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 88);
    int v6 = *(_DWORD *)(v5 + 80);
    *(_DWORD *)(v0 + 168) = v6;
    *(void *)(v0 + 136) = *(void *)(v5 + 72);
    *(void *)(v0 + 144) = 0;
    uint64_t v7 = v2 + ((v6 + 32) & ~(unint64_t)v6);
    swift_bridgeObjectRetain();
    sub_1A6852CAC(v7, v4);
    uint64_t v8 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v8 + 64) + **(int **)(v8 + 64));
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A684D494;
    return v13(0, 0, ObjectType, v8);
  }
  else
  {
    *(void *)(*(void *)(v0 + 48) + 40) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    sub_1A684760C();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_1A684D494()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A684D850;
  }
  else {
    uint64_t v2 = sub_1A684D5A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A684D5A8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 172) = 4;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(void *)(v0 + 40) = 0;
  sub_1A6892660();
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1A684D67C, v4, v5);
}

uint64_t sub_1A684D67C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 144) + 1;
  sub_1A6852D10(*(void *)(v0 + 96));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    *(void *)(*(void *)(v0 + 48) + 40) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    sub_1A684760C();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 144) + 1;
    *(void *)(v0 + 144) = v6;
    uint64_t v7 = *(void *)(v0 + 96);
    sub_1A6852CAC(*(void *)(v0 + 120)+ ((*(unsigned __int8 *)(v0 + 168) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 168))+ v5 * v6, v7);
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v8 + 64) + **(int **)(v8 + 64));
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A684D494;
    return v11(0, 0, ObjectType, v8);
  }
}

uint64_t sub_1A684D850()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1A6858104, v1, v2);
}

uint64_t TTSSpeechQueue.__allocating_init(priority:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  TTSSpeechQueue.init(priority:)(a1);
  return v2;
}

uint64_t TTSSpeechQueue.init(priority:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C14E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTSExecutor();
  *(void *)(v1 + 16) = TTSExecutor.__allocating_init()();
  char v16 = 0;
  sub_1A6741AD0(&qword_1E96C14D8);
  swift_allocObject();
  *(void *)(v1 + 24) = sub_1A6891D40();
  *(unsigned char *)(v1 + 32) = 0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = MEMORY[0x1E4FBC860];
  uint64_t v9 = v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runningItem;
  uint64_t v10 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)(v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runTask) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask) = 0;
  uint64_t v11 = v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue__uiActions;
  uint64_t v15 = v8;
  sub_1A6741AD0(&qword_1E96C14F8);
  sub_1A6891D50();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11, v7, v4);
  uint64_t v12 = v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v13 = sub_1A68924A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a1, v13);
  return v2;
}

uint64_t sub_1A684DB00(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A6777774;
  return v7();
}

uint64_t sub_1A684DBD0()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1A6777774;
  return v6();
}

uint64_t sub_1A684DCE8()
{
  return sub_1A6857850(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A684DD14()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  return sub_1A684B430(v2, v3, v4);
}

uint64_t sub_1A684DDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C3898);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A68924A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v16 = sub_1A6857B14(&qword_1E96C3728);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a2;
  *((void *)v18 + 3) = v16;
  *((void *)v18 + 4) = a2;
  *((void *)v18 + 5) = a3;
  *((void *)v18 + 6) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v11, v8);
  swift_retain_n();
  swift_retain();
  sub_1A6787038((uint64_t)v14, (uint64_t)&unk_1E96C38A8, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1A684DFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  _OWORD v7[5] = a5;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  unsigned char v7[8] = swift_task_alloc();
  uint64_t v8 = sub_1A6741AD0(&qword_1E96C3898);
  v7[9] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[10] = v9;
  v7[11] = *(void *)(v9 + 64);
  v7[12] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v11 = sub_1A68923E0();
  v7[13] = v11;
  v7[14] = v10;
  return MEMORY[0x1F4188298](sub_1A684E120, v11, v10);
}

uint64_t sub_1A684E120()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[7], v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v0[15] = v7;
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v4;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v1, v2);
  uint64_t v8 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  v0[16] = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  uint64_t v9 = v0[4];
  uint64_t v10 = *(void *)(v9 + v8);
  swift_retain();
  if (v10)
  {
    v0[17] = v10;
    v0[18] = v10;
    swift_retain();
    swift_retain();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    uint64_t v12 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v11 = v0;
    v11[1] = sub_1A684E3EC;
    uint64_t v13 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v14 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 2, v10, v13, v12, v14);
  }
  else
  {
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[8];
    uint64_t v17 = v9 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
    uint64_t v18 = sub_1A68924A0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = &unk_1E96C38B8;
    v20[5] = v15;
    swift_retain();
    *(void *)(v9 + v8) = sub_1A67724DC(v16, (uint64_t)&unk_1E96C38C0, (uint64_t)v20);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_1A684E3EC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x1F4188298](sub_1A684E530, v3, v2);
}

uint64_t sub_1A684E530()
{
  sub_1A6771D48(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + v1);
  if (*(void *)(v0 + 136))
  {
    if (v3)
    {
      swift_retain();
      swift_retain();
      sub_1A6741AD0(&qword_1E96C1520);
      char v4 = sub_1A6892580();
      swift_release();
      swift_release();
      uint64_t v1 = *(void *)(v0 + 128);
      uint64_t v2 = *(void *)(v0 + 32);
      if (v4) {
        goto LABEL_12;
      }
      uint64_t v3 = *(void *)(v2 + v1);
    }
  }
  else if (!v3)
  {
    goto LABEL_12;
  }
  swift_retain();
  swift_release();
  if (v3)
  {
LABEL_9:
    *(void *)(v0 + 136) = v3;
    *(void *)(v0 + 144) = v3;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v5;
    uint64_t v6 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v5 = v0;
    v5[1] = sub_1A684E3EC;
    uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v8 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 16, v3, v7, v6, v8);
  }
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + v1);
  if (v3)
  {
    swift_retain();
    goto LABEL_9;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v11 = v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v12 = sub_1A68924A0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  long long v14[3] = 0;
  v14[4] = &unk_1E96C38B8;
  v14[5] = v9;
  swift_retain();
  *(void *)(v2 + v1) = sub_1A67724DC(v10, (uint64_t)&unk_1E96C38C0, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1A684E838(int *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  uint64_t v6 = (uint64_t (*)(void))((char *)a1 + *a1);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v4;
  *char v4 = v3;
  v4[1] = sub_1A684E908;
  return v6();
}

uint64_t sub_1A684E908()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A684EA04, 0, 0);
}

uint64_t sub_1A684EA04()
{
  sub_1A6741AD0(&qword_1E96C3898);
  sub_1A68923F0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A684EA74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C3848);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v20[0] = 2;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v19 = a1;
  swift_beginAccess();
  uint64_t result = sub_1A68544B4((uint64_t (*)(unint64_t))sub_1A6853554);
  int64_t v12 = *(void *)(v1[5] + 16);
  if (v12 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1A685763C(result, v12);
    swift_endAccess();
    sub_1A684760C();
    if (*(void *)(v1[5] + 16))
    {
      uint64_t v13 = (char *)v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
      uint64_t v14 = sub_1A68924A0();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(unsigned char *, char *, uint64_t))(v15 + 16))(v6, v13, v14);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
      uint64_t v16 = sub_1A6857B14(&qword_1E96C3728);
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v2;
      v17[3] = v16;
      v17[4] = v2;
      swift_retain_n();
      sub_1A6787038((uint64_t)v6, (uint64_t)&unk_1E96C3858, (uint64_t)v17);
      return swift_release();
    }
    else
    {
      v20[0] = 2;
      return (*(uint64_t (**)(char *))(*v1 + 160))(v20);
    }
  }
  return result;
}

uint64_t sub_1A684ED7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v4[5] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v6 = sub_1A68923E0();
  v4[6] = v6;
  v4[7] = v5;
  return MEMORY[0x1F4188298](sub_1A684EE54, v6, v5);
}

uint64_t sub_1A684EE54()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  v0[8] = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_schedulingTask;
  uint64_t v3 = *(void *)(v1 + v2);
  swift_retain();
  if (v3)
  {
    v0[9] = v3;
    v0[10] = v3;
    swift_retain();
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    uint64_t v5 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v4 = v0;
    v4[1] = sub_1A684F094;
    uint64_t v6 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v7 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 2, v3, v6, v5, v7);
  }
  else
  {
    uint64_t v8 = v0[5];
    uint64_t v9 = v1 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
    uint64_t v10 = sub_1A68924A0();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    int64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = &unk_1E96C3868;
    v12[5] = v1;
    swift_retain();
    *(void *)(v1 + v2) = sub_1A67724DC(v8, (uint64_t)&unk_1E96C3870, (uint64_t)v12);
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1A684F094()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1A684F1D8, v3, v2);
}

uint64_t sub_1A684F1D8()
{
  sub_1A6771D48(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + v1);
  if (*(void *)(v0 + 72))
  {
    if (v3)
    {
      swift_retain();
      swift_retain();
      sub_1A6741AD0(&qword_1E96C1520);
      char v4 = sub_1A6892580();
      swift_release();
      swift_release();
      uint64_t v1 = *(void *)(v0 + 64);
      uint64_t v2 = *(void *)(v0 + 32);
      if (v4) {
        goto LABEL_12;
      }
      uint64_t v3 = *(void *)(v2 + v1);
    }
  }
  else if (!v3)
  {
    goto LABEL_12;
  }
  swift_retain();
  swift_release();
  if (v3)
  {
LABEL_9:
    *(void *)(v0 + 72) = v3;
    *(void *)(v0 + 80) = v3;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v5;
    uint64_t v6 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v5 = v0;
    v5[1] = sub_1A684F094;
    uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v8 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 16, v3, v7, v6, v8);
  }
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + v1);
  if (v3)
  {
    swift_retain();
    goto LABEL_9;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = v2 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v11 = sub_1A68924A0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = 0;
  long long v13[3] = 0;
  v13[4] = &unk_1E96C3868;
  v13[5] = v2;
  swift_retain();
  *(void *)(v2 + v1) = sub_1A67724DC(v9, (uint64_t)&unk_1E96C3870, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A684F4C4()
{
  v1[8] = v0;
  uint64_t v2 = sub_1A6741AD0(&qword_1E96C3848);
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  sub_1A6741AD0(&qword_1E96C37B8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v5 = sub_1A68923E0();
  v1[19] = v5;
  v1[20] = v4;
  return MEMORY[0x1F4188298](sub_1A684F680, v5, v4);
}

uint64_t sub_1A684F680()
{
  void *(*v1)(uint64_t *__return_ptr);
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t (*v31)(void);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  uint64_t v42 = v0;
  uint64_t v1 = *(void *(**)(uint64_t *__return_ptr))(**(void **)(v0 + 64) + 152);
  uint64_t v2 = v1(&v41);
  if (v41 != 3)
  {
    ((void (*)(uint64_t *__return_ptr, void *))v1)((uint64_t *)((char *)&v41 + 1), v2);
    if (BYTE1(v41) != 2)
    {
LABEL_24:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
      return v31();
    }
  }
  uint64_t v3 = *(void *)(v0 + 64);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  if (!*(void *)(v4 + 16))
  {
    uint64_t v13 = *(void *)(v0 + 64);
    BYTE2(v41) = 2;
    (*(void (**)(char *))(*(void *)v13 + 160))((char *)&v41 + 2);
    goto LABEL_24;
  }
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 64);
  sub_1A6852CAC(v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), *(void *)(v0 + 144));
  uint64_t v9 = v8 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runningItem;
  swift_beginAccess();
  sub_1A68534EC(v9, v7);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v10(v7, 1, v5))
  {
    sub_1A6750210(*(void *)(v0 + 104), &qword_1E96C37B8);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 104);
    sub_1A6852CAC(v15, v14);
    sub_1A6750210(v15, &qword_1E96C37B8);
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(ObjectType, v16);
    uint64_t v12 = v18;
    sub_1A6852D10(v14);
  }
  uint64_t v19 = *(void *)(v0 + 144);
  uint64_t v20 = *(void *)(v19 + 8);
  uint64_t v21 = swift_getObjectType();
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v21, v20);
  if (v12)
  {
    if (v11 == v22 && v12 == v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      sub_1A6852D10(*(void *)(v0 + 144));
      goto LABEL_24;
    }
    uint64_t v25 = sub_1A6893120();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_23;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runTask))
  {
    swift_retain();
    sub_1A6741AD0(&qword_1E96C1520);
    sub_1A6892590();
    swift_release();
  }
  uint64_t v26 = *(void *)(v0 + 112);
  uint64_t v27 = *(void *)(v0 + 96);
  sub_1A68534EC(v9, v27);
  if (v10(v27, 1, v26))
  {
    sub_1A6750210(*(void *)(v0 + 96), &qword_1E96C37B8);
    unint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v28;
    void *v28 = v0;
    v28[1] = sub_1A684FEDC;
    unint64_t v29 = *(void *)(v0 + 144);
    return sub_1A68500A8(v29);
  }
  else
  {
    uint64_t v32 = *(uint64_t **)(v0 + 144);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v34 = *(void *)(v0 + 96);
    sub_1A6852CAC(v34, v33);
    sub_1A6750210(v34, &qword_1E96C37B8);
    uint64_t v35 = *v32;
    *(void *)(v0 + 168) = *v32;
    uint64_t v36 = *(void *)(v19 + 8);
    unint64_t v37 = *(void *)(v33 + 8);
    swift_unknownObjectRetain();
    char v38 = swift_getObjectType();
    uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 72) + **(int **)(v37 + 72));
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v39;
    *uint64_t v39 = v0;
    v39[1] = sub_1A684FB98;
    return v40(v35, v36, v38, v37);
  }
}

uint64_t sub_1A684FB98()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A684FDC8;
  }
  else {
    uint64_t v2 = sub_1A684FCAC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A684FCAC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  *(unsigned char *)(v0 + 200) = 3;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1A6852D10(v1);
  swift_unknownObjectRelease();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A684FEDC;
  uint64_t v6 = *(void *)(v0 + 144);
  return sub_1A68500A8(v6);
}

uint64_t sub_1A684FDC8()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[16];
  swift_unknownObjectRelease();

  sub_1A6852D10(v2);
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  return MEMORY[0x1F4188298](sub_1A684FE44, v3, v4);
}

uint64_t sub_1A684FE44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A684FEDC;
  uint64_t v2 = *(void *)(v0 + 144);
  return sub_1A68500A8(v2);
}

uint64_t sub_1A684FEDC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x1F4188298](sub_1A684FFFC, v3, v2);
}

uint64_t sub_1A684FFFC()
{
  sub_1A6852D10(*(void *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A68500A8(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  sub_1A6741AD0((uint64_t *)&unk_1EB67A2C0);
  v2[9] = swift_task_alloc();
  uint64_t v3 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  void v2[10] = v3;
  v2[11] = *(void *)(v3 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = sub_1A6891CE0();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  v2[17] = sub_1A6857B14(&qword_1E96C3728);
  uint64_t v6 = sub_1A68923E0();
  v2[18] = v6;
  v2[19] = v5;
  return MEMORY[0x1F4188298](sub_1A685024C, v6, v5);
}

uint64_t sub_1A685024C()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runTask;
  *(void *)(v0 + 160) = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runTask;
  uint64_t v3 = *(void *)(v1 + v2);
  *(void *)(v0 + 168) = v3;
  if (v3)
  {
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v4;
    uint64_t v5 = sub_1A6741AD0(&qword_1E96C1520);
    *uint64_t v4 = v0;
    v4[1] = sub_1A6850690;
    uint64_t v6 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v7 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v0 + 32, v3, v6, v5, v7);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v12 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v13 = sub_1A6748F64();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v13, v11);
    sub_1A6852CAC(v8, v12);
    uint64_t v14 = sub_1A6891CC0();
    os_log_type_t v15 = sub_1A6892840();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v20 = *(_OWORD **)(v0 + 104);
    uint64_t v19 = *(void *)(v0 + 112);
    if (v16)
    {
      uint64_t v39 = *(void *)(v0 + 128);
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v40 = v22;
      *(_OWORD *)(v0 + 16) = *v20;
      swift_unknownObjectRetain();
      sub_1A6741AD0(&qword_1E96C2418);
      uint64_t v23 = sub_1A6892090();
      *(void *)(v0 + 48) = sub_1A673F908(v23, v24, &v40);
      sub_1A6892A50();
      swift_bridgeObjectRelease();
      sub_1A6852D10((uint64_t)v20);
      _os_log_impl(&dword_1A66D3000, v14, v15, "Run Item => %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0C1C50](v22, -1, -1);
      MEMORY[0x1AD0C1C50](v21, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v39, v19);
    }
    else
    {
      sub_1A6852D10(*(void *)(v0 + 104));

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    }
    uint64_t v37 = *(void *)(v0 + 136);
    uint64_t v38 = *(void *)(v0 + 160);
    uint64_t v25 = *(void *)(v0 + 96);
    uint64_t v26 = *(void *)(v0 + 80);
    uint64_t v28 = *(void *)(v0 + 64);
    uint64_t v27 = *(void *)(v0 + 72);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v30 = v28 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
    uint64_t v31 = sub_1A68924A0();
    uint64_t v32 = *(void *)(v31 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v27, v30, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
    sub_1A6852CAC(v29, v25);
    unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v28;
    v34[3] = v37;
    v34[4] = v28;
    sub_1A6852E74(v25, (uint64_t)v34 + v33);
    swift_retain_n();
    *(void *)(v28 + v38) = sub_1A67724DC(v27, (uint64_t)&unk_1E96C3840, (uint64_t)v34);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
    return v35();
  }
}

uint64_t sub_1A6850690()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x1F4188298](sub_1A68507D4, v3, v2);
}

uint64_t sub_1A68507D4()
{
  uint64_t v35 = v0;
  sub_1A6771D48(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v6 = sub_1A6748F64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  sub_1A6852CAC(v1, v5);
  uint64_t v7 = sub_1A6891CC0();
  os_log_type_t v8 = sub_1A6892840();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v9 = *(_OWORD **)(v0 + 104);
    uint64_t v32 = *(void *)(v0 + 112);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v34 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    *(_OWORD *)(v0 + 16) = *v9;
    swift_unknownObjectRetain();
    sub_1A6741AD0(&qword_1E96C2418);
    uint64_t v12 = sub_1A6892090();
    *(void *)(v0 + 48) = sub_1A673F908(v12, v13, &v34);
    sub_1A6892A50();
    swift_bridgeObjectRelease();
    sub_1A6852D10((uint64_t)v9);
    _os_log_impl(&dword_1A66D3000, v7, v8, "Run Item => %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0C1C50](v11, -1, -1);
    MEMORY[0x1AD0C1C50](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v32);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 112);
    sub_1A6852D10(*(void *)(v0 + 104));

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v29 = *(void *)(v0 + 136);
  uint64_t v31 = *(void *)(v0 + 160);
  uint64_t v17 = *(void *)(v0 + 96);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 56);
  uint64_t v22 = v20 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v23 = sub_1A68924A0();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v19, v22, v23);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v23);
  sub_1A6852CAC(v21, v17);
  unint64_t v25 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = v20;
  v26[3] = v29;
  v26[4] = v20;
  sub_1A6852E74(v17, (uint64_t)v26 + v25);
  swift_retain_n();
  *(void *)(v20 + v31) = sub_1A67724DC(v19, (uint64_t)&unk_1E96C3840, (uint64_t)v26);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1A6850B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C3848);
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  sub_1A6741AD0(&qword_1E96C37B8);
  v5[13] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  uint64_t v8 = sub_1A68923E0();
  v5[14] = v8;
  v5[15] = v7;
  return MEMORY[0x1F4188298](sub_1A6850C98, v8, v7);
}

uint64_t sub_1A6850C98()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[8];
  sub_1A6852CAC(v0[9], v1);
  uint64_t v3 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v0[16] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56);
  v0[17] = v5;
  v0[18] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v5(v1, 0, 1, v3);
  uint64_t v6 = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runningItem;
  v0[19] = OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runningItem;
  uint64_t v7 = v2 + v6;
  swift_beginAccess();
  sub_1A6853484(v1, v7);
  swift_endAccess();
  char v9 = 3;
  (*(void (**)(char *))(*(void *)v2 + 160))(&v9);
  return MEMORY[0x1F4188298](sub_1A6850DD4, 0, 0);
}

uint64_t sub_1A6850DD4()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  *(unsigned char *)(v0 + 176) = 1;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  char v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 56) + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1A6850F34;
  return v9(ObjectType, v5);
}

uint64_t sub_1A6850F34()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 112);
    uint64_t v7 = *(void *)(v2 + 120);
    return MEMORY[0x1F4188298](sub_1A6851088, v6, v7);
  }
}

uint64_t sub_1A6851088()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 64) + *(void *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 136))(v2, 1, 1, *(void *)(v0 + 128));
  swift_beginAccess();
  sub_1A6853484(v2, v3);
  swift_endAccess();
  sub_1A68925C0();
  if (!v1) {
    sub_1A684EA74(*(void *)(v0 + 72));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t TTSSpeechQueue.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A6750210(v0 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_runningItem, &qword_1E96C37B8);
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue_taskPriority;
  uint64_t v2 = sub_1A68924A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC12TextToSpeech14TTSSpeechQueue__uiActions;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C14E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t TTSSpeechQueue.__deallocating_deinit()
{
  TTSSpeechQueue.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1A68512E0()
{
  uint64_t v0 = type metadata accessor for TTSSpeechQueue(0);
  uint64_t v1 = sub_1A6857B14(&qword_1E96C3890);

  return TTSActor.unownedExecutor.getter(v0, v1);
}

uint64_t sub_1A6851340@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TTSSpeechQueue(0);
  uint64_t result = sub_1A6891D10();
  *a1 = result;
  return result;
}

uint64_t sub_1A6851380()
{
  return sub_1A6857850(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A68513AC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A677B9EC;
  return sub_1A684B94C((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A6851440()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  return sub_1A684C54C(v0);
}

uint64_t sub_1A68514D0(uint64_t a1)
{
  return sub_1A684DDC0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A68514DC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  return sub_1A684D114(v0);
}

uint64_t TTSSpeechQueue.QueuingBehavior.hash(into:)()
{
  return sub_1A6893210();
}

unint64_t sub_1A68515A8()
{
  unint64_t result = qword_1E96C37C0;
  if (!qword_1E96C37C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C37C0);
  }
  return result;
}

uint64_t sub_1A68515FC()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1A6851608(uint64_t a1)
{
  uint64_t result = sub_1A6857B14(&qword_1E96C3728);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A6851650()
{
  unint64_t result = qword_1E96C37C8;
  if (!qword_1E96C37C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C37C8);
  }
  return result;
}

unint64_t sub_1A68516A8()
{
  unint64_t result = qword_1E96C37D0;
  if (!qword_1E96C37D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C37D0);
  }
  return result;
}

unint64_t sub_1A6851700()
{
  unint64_t result = qword_1E96C37D8;
  if (!qword_1E96C37D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C37D8);
  }
  return result;
}

uint64_t sub_1A6851754()
{
  return type metadata accessor for TTSSpeechQueue(0);
}

void sub_1A685175C()
{
  sub_1A6851F50();
  if (v0 <= 0x3F)
  {
    sub_1A68924A0();
    if (v1 <= 0x3F)
    {
      sub_1A6851FA8();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for TTSSpeechQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSSpeechQueue);
}

uint64_t dispatch thunk of TTSSpeechQueue.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of TTSSpeechQueue.state.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of TTSSpeechQueue.state.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of TTSSpeechQueue.uiActions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of TTSSpeechQueue.uiActions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of TTSSpeechQueue.uiActions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of TTSSpeechQueue.$uiActions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of TTSSpeechQueue.$uiActions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of TTSSpeechQueue.$uiActions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of TTSSpeechQueue.enqueue(work:run:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 328) + **(int **)(*(void *)v2 + 328));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A677A564;
  return v8(a1, a2);
}

uint64_t dispatch thunk of TTSSpeechQueue.cancel(withId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 336) + **(int **)(*(void *)v2 + 336));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A677B9EC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of TTSSpeechQueue.run()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 344) + **(int **)(*(void *)v0 + 344));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  return v4();
}

uint64_t dispatch thunk of TTSSpeechQueue.pause()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 352) + **(int **)(*(void *)v0 + 352));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  return v4();
}

uint64_t dispatch thunk of TTSSpeechQueue.stop()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 360) + **(int **)(*(void *)v0 + 360));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A677B9EC;
  return v4();
}

uint64_t dispatch thunk of TTSSpeechQueue.__allocating_init(priority:)()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

void sub_1A6851F50()
{
  if (!qword_1E96C14C0)
  {
    type metadata accessor for TTSSpeechQueue.QueueableWrapper(255);
    unint64_t v0 = sub_1A6892A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E96C14C0);
    }
  }
}

void sub_1A6851FA8()
{
  if (!qword_1E96C14E8)
  {
    sub_1A6750AC4(&qword_1E96C14F8);
    unint64_t v0 = sub_1A6891DB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E96C14E8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TTSSpeechQueue.Event(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A68520D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechQueue.Event()
{
  return &type metadata for TTSSpeechQueue.Event;
}

unsigned char *storeEnumTagSinglePayload for TTSSpeechQueue.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A68521D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechQueue.State()
{
  return &type metadata for TTSSpeechQueue.State;
}

ValueMetadata *type metadata accessor for TTSSpeechQueue.QueuingBehavior()
{
  return &type metadata for TTSSpeechQueue.QueuingBehavior;
}

unsigned char *_s12TextToSpeech14TTSSpeechQueueC15QueuingBehaviorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A68522ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSSpeechQueue.IsoPrioritizedBehavior()
{
  return &type metadata for TTSSpeechQueue.IsoPrioritizedBehavior;
}

uint64_t dispatch thunk of TTSQueueable.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TTSQueueable.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TTSQueueable.behavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TTSQueueable.isoPrioritizedBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TTSQueueable.run()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 56) + **(int **)(a2 + 56));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A6750954;
  return v7(a1, a2);
}

uint64_t dispatch thunk of TTSQueueable.stop(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 64) + **(int **)(a4 + 64));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A677B9EC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of TTSQueueable.suspend(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 72) + **(int **)(a4 + 72));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A677B9EC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of TTSQueueable.init(copy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

void *sub_1A6852690(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    swift_unknownObjectRetain();
    uint64_t v10 = sub_1A6741AD0(&qword_1E96C3830);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1A6852764(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A6741AD0(&qword_1E96C3830);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

_OWORD *sub_1A68527E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  swift_unknownObjectRetain();
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C3830);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1A6852868(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C3830);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_1A685290C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C3830);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1A685298C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A6741AD0(&qword_1E96C3830);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A6852A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A6852A34);
}

uint64_t sub_1A6852A34(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A6741AD0(&qword_1E96C3830);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A6852AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A6852AFC);
}

void *sub_1A6852AFC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A6741AD0(&qword_1E96C3830);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A6852BA8()
{
  sub_1A6852C40();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A6852C40()
{
  if (!qword_1E96C1508)
  {
    sub_1A6750AC4(&qword_1E96C1520);
    unint64_t v0 = sub_1A6892670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E96C1508);
    }
  }
}

uint64_t sub_1A6852CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6852D10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A6852D6C()
{
  uint64_t v1 = (int *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_1A6741AD0(&qword_1E96C3830);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1A6852E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6852ED8()
{
  uint64_t v2 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  return sub_1A6850B60((uint64_t)v5, v6, v7, v3, v4);
}

uint64_t sub_1A6852FAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C3888);
  uint64_t v10 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1A6892E50();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  long long v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A6854958(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1A6853214(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C3918);
  uint64_t v10 = *(void *)(sub_1A6741AD0(&qword_1E96C2260) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1A6892E50();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  long long v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1A6741AD0(&qword_1E96C2260) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A68547FC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1A6853484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C37B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A68534EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C37B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6853554(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v2 + 8);
  uint64_t v9 = swift_getObjectType();
  if (v5 == (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v9, v8) && v7 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1A6893120();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1A6853628(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A6853668(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A6853648(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A68538A8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A6853668(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A6741AD0(&qword_1E96C3888);
  uint64_t v10 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  long long v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A68538A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A6741AD0(&qword_1E96C3908);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A6853A08(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1A68931F0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A6853D88(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A6853B04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C3900);
  uint64_t result = sub_1A6892C00();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1A68931F0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A6853D88(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1A6853B04();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A6853EAC();
      goto LABEL_14;
    }
    sub_1A6854044();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1A68931F0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1A6893140();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_1A6853EAC()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C3900);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892BF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A6854044()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C3900);
  uint64_t result = sub_1A6892C00();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1A68931F0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A68542A8(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1A6852FAC(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_1A6892F00();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_1A6852CAC(a3, v17);
  }
  return sub_1A6750210(a3, &qword_1E96C38E8);
}

uint64_t sub_1A68544B4(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    uint64_t v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      char v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_1A6852CAC(v12 + v20, v35);
      char v24 = a1(v23);
      uint64_t result = sub_1A6852D10(v23);
      if (v24)
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_1A6852CAC(v26 + v31 + v16 * v32, v33);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_1A6852CAC(v26 + v36, v34);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v30;
          unint64_t *v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1A68547E8(v26);
            unint64_t v26 = result;
            *uint64_t v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1A6857AB0(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1A6857AB0(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A68547E8(unint64_t a1)
{
  return sub_1A6852FAC(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1A68547FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_1A6741AD0(&qword_1E96C2260) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A6854958(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A6854AB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1A6892700();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1A6853A08(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A6854B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C3848);
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  swift_unknownObjectRetain_n();
  uint64_t v7 = sub_1A68923E0();
  v3[19] = v7;
  v3[20] = v6;
  return MEMORY[0x1F4188298](sub_1A6854CDC, v7, v6);
}

uint64_t sub_1A6854CDC()
{
  uint64_t v1 = v0[6];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v62 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v2 + 16);
  swift_unknownObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v56 = v4;
  uint64_t v58 = v0;
  if (v4)
  {
    unint64_t v6 = 0;
    uint64_t v50 = v0[13];
    uint64_t v52 = v0[18];
    unsigned int v48 = (uint64_t (**)(uint64_t, uint64_t))(v0[8] + 24);
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v54 = v2;
    while (v6 < *(void *)(v2 + 16))
    {
      uint64_t v8 = v0[8];
      unint64_t v9 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      uint64_t v60 = *(void *)(v50 + 72);
      sub_1A6852CAC(v2 + v9 + v60 * v6, v0[18]);
      uint64_t v10 = *(void *)(v52 + 8);
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
      swift_unknownObjectRetain();
      uint64_t v13 = v12(ObjectType, v10);
      uint64_t v0 = v58;
      uint64_t v14 = v13;
      uint64_t v15 = swift_getObjectType();
      uint64_t v16 = (*v48)(v15, v8);
      swift_unknownObjectRelease();
      uint64_t v17 = v58[18];
      if (v14 >= v16)
      {
        uint64_t result = sub_1A6852D10(v17);
        uint64_t v2 = v54;
      }
      else
      {
        sub_1A6852E74(v17, v58[17]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A6853628(0, *(void *)(v7 + 16) + 1, 1);
          uint64_t v7 = v62;
        }
        unint64_t v19 = *(void *)(v7 + 16);
        unint64_t v18 = *(void *)(v7 + 24);
        uint64_t v2 = v54;
        if (v19 >= v18 >> 1)
        {
          sub_1A6853628(v18 > 1, v19 + 1, 1);
          uint64_t v7 = v62;
        }
        uint64_t v20 = v58[17];
        *(void *)(v7 + 16) = v19 + 1;
        uint64_t result = sub_1A6852E74(v20, v7 + v9 + v19 * v60);
      }
      if (v56 == ++v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v7 = v3;
LABEL_13:
  v0[21] = v7;
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v7 + 16);
  v0[22] = v21;
  if (v21)
  {
    uint64_t v22 = v0[13];
    uint64_t v23 = v0[14];
    int v24 = *(_DWORD *)(v22 + 80);
    *((_DWORD *)v0 + 54) = v24;
    v0[23] = *(void *)(v22 + 72);
    v0[24] = 0;
    sub_1A6852CAC(v0[21] + ((v24 + 32) & ~(unint64_t)v24), v23);
    uint64_t v25 = *(void *)(v23 + 8);
    uint64_t v26 = swift_getObjectType();
    unint64_t v59 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v25 + 64) + **(int **)(v25 + 64));
    unint64_t v27 = (void *)swift_task_alloc();
    v0[25] = v27;
    *unint64_t v27 = v0;
    v27[1] = sub_1A6855294;
    return v59(0, 0, v26, v25);
  }
  else
  {
    swift_release();
    uint64_t v28 = v0[6];
    uint64_t v29 = *(void *)(v28 + 40);
    uint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v63 = MEMORY[0x1E4FBC860];
    uint64_t v31 = *(void *)(v29 + 16);
    swift_unknownObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v55 = v31;
    uint64_t v61 = v29;
    if (v31)
    {
      unint64_t v32 = 0;
      uint64_t v51 = v0[13];
      uint64_t v53 = v0[16];
      uint64_t v49 = (uint64_t (**)(uint64_t, uint64_t))(v0[8] + 24);
      uint64_t v57 = MEMORY[0x1E4FBC860];
      while (v32 < *(void *)(v29 + 16))
      {
        uint64_t v33 = v0[8];
        unint64_t v34 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        uint64_t v35 = *(void *)(v51 + 72);
        sub_1A6852CAC(v29 + v34 + v35 * v32, v0[16]);
        uint64_t v36 = *(void *)(v53 + 8);
        uint64_t v37 = swift_getObjectType();
        uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 24);
        swift_unknownObjectRetain();
        uint64_t v0 = v58;
        uint64_t v39 = v38(v37, v36);
        uint64_t v40 = swift_getObjectType();
        uint64_t v41 = (*v49)(v40, v33);
        swift_unknownObjectRelease();
        uint64_t v42 = v58[16];
        if (v39 < v41)
        {
          uint64_t result = sub_1A6852D10(v42);
          uint64_t v29 = v61;
        }
        else
        {
          sub_1A6852E74(v42, v58[15]);
          uint64_t v43 = v57;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1A6853628(0, *(void *)(v57 + 16) + 1, 1);
            uint64_t v43 = v63;
          }
          unint64_t v45 = *(void *)(v43 + 16);
          unint64_t v44 = *(void *)(v43 + 24);
          uint64_t v29 = v61;
          if (v45 >= v44 >> 1)
          {
            sub_1A6853628(v44 > 1, v45 + 1, 1);
            uint64_t v43 = v63;
          }
          uint64_t v46 = v58[15];
          *(void *)(v43 + 16) = v45 + 1;
          uint64_t v57 = v43;
          uint64_t result = sub_1A6852E74(v46, v43 + v34 + v45 * v35);
        }
        if (v55 == ++v32)
        {
          uint64_t v28 = v58[6];
          goto LABEL_30;
        }
      }
LABEL_34:
      __break(1u);
      return result;
    }
    uint64_t v57 = v30;
LABEL_30:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v28 + 40) = v57;
    swift_bridgeObjectRelease();
    sub_1A684760C();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v47 = (uint64_t (*)(void))v0[1];
    return v47();
  }
}

uint64_t sub_1A6855294()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A6855850;
  }
  else {
    uint64_t v2 = sub_1A68553A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A68553A8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  *(unsigned char *)(v0 + 220) = 4;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(void *)(v0 + 40) = 0;
  sub_1A6892660();
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  return MEMORY[0x1F4188298](sub_1A685547C, v4, v5);
}

uint64_t sub_1A685547C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 192) + 1;
  sub_1A6852D10(*(void *)(v0 + 112));
  if (v2 == v1)
  {
    swift_release();
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v6 = *(void *)(v4 + 16);
    swift_unknownObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v31 = v6;
    uint64_t v32 = v4;
    if (v6)
    {
      unint64_t v8 = 0;
      uint64_t v29 = *(void *)(v0 + 104);
      uint64_t v30 = *(void *)(v0 + 128);
      uint64_t v28 = (uint64_t (**)(uint64_t, uint64_t))(*(void *)(v0 + 64) + 24);
      while (v8 < *(void *)(v4 + 16))
      {
        uint64_t v9 = v5;
        uint64_t v10 = *(void *)(v0 + 64);
        uint64_t v33 = *(void *)(v29 + 72);
        unint64_t v35 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
        sub_1A6852CAC(v4 + v35 + v33 * v8, *(void *)(v0 + 128));
        uint64_t v11 = *(void *)(v30 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
        swift_unknownObjectRetain();
        uint64_t v14 = v13(ObjectType, v11);
        uint64_t v15 = swift_getObjectType();
        uint64_t v16 = (*v28)(v15, v10);
        swift_unknownObjectRelease();
        uint64_t v17 = *(void *)(v0 + 128);
        if (v14 < v16)
        {
          uint64_t result = sub_1A6852D10(v17);
          uint64_t v4 = v32;
          uint64_t v5 = v9;
        }
        else
        {
          sub_1A6852E74(v17, *(void *)(v0 + 120));
          uint64_t v5 = v9;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1A6853628(0, *(void *)(v9 + 16) + 1, 1);
            uint64_t v5 = v36;
          }
          unint64_t v19 = *(void *)(v5 + 16);
          unint64_t v18 = *(void *)(v5 + 24);
          uint64_t v4 = v32;
          if (v19 >= v18 >> 1)
          {
            sub_1A6853628(v18 > 1, v19 + 1, 1);
            uint64_t v5 = v36;
          }
          uint64_t v20 = *(void *)(v0 + 120);
          *(void *)(v5 + 16) = v19 + 1;
          uint64_t result = sub_1A6852E74(v20, v5 + v35 + v19 * v33);
        }
        if (v31 == ++v8)
        {
          uint64_t v3 = *(void *)(v0 + 48);
          goto LABEL_17;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_17:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v3 + 40) = v5;
      swift_bridgeObjectRelease();
      sub_1A684760C();
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
      return v27();
    }
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 184);
    uint64_t v22 = *(void *)(v0 + 192) + 1;
    *(void *)(v0 + 192) = v22;
    uint64_t v23 = *(void *)(v0 + 112);
    sub_1A6852CAC(*(void *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ v21 * v22, v23);
    uint64_t v24 = *(void *)(v23 + 8);
    uint64_t v25 = swift_getObjectType();
    unint64_t v34 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v24 + 64) + **(int **)(v24 + 64));
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1A6855294;
    return v34(0, 0, v25, v24);
  }
  return result;
}

uint64_t sub_1A6855850()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  return MEMORY[0x1F4188298](sub_1A6858100, v1, v2);
}

uint64_t sub_1A68558B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v31 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v33 = v12;
  if (!v12)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  v30[1] = v3;
  unint64_t v14 = 0;
  uint64_t v15 = a2 + 56;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v32 = a1;
  while (v14 < *(void *)(a1 + 16))
  {
    unint64_t v17 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v35 = *(void *)(v34 + 72);
    unint64_t v36 = v17;
    sub_1A6852CAC(a1 + v17 + v35 * v14, (uint64_t)v10);
    uint64_t v18 = *((void *)v10 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 24);
    swift_bridgeObjectRetain();
    uint64_t v21 = v20(ObjectType, v18);
    if (*(void *)(a2 + 16))
    {
      uint64_t v22 = v21;
      uint64_t v23 = sub_1A68931F0();
      uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v25 = v23 & ~v24;
      if ((*(void *)(v15 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
      {
        uint64_t v26 = *(void *)(a2 + 48);
        if (*(void *)(v26 + 8 * v25) == v22)
        {
LABEL_12:
          swift_bridgeObjectRelease();
          sub_1A6852E74((uint64_t)v10, v31);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1A6853628(0, *(void *)(v16 + 16) + 1, 1);
          }
          uint64_t v16 = v37;
          unint64_t v29 = *(void *)(v37 + 16);
          unint64_t v28 = *(void *)(v37 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_1A6853628(v28 > 1, v29 + 1, 1);
            uint64_t v16 = v37;
          }
          *(void *)(v16 + 16) = v29 + 1;
          uint64_t result = sub_1A6852E74(v31, v16 + v36 + v29 * v35);
          goto LABEL_4;
        }
        uint64_t v27 = ~v24;
        while (1)
        {
          unint64_t v25 = (v25 + 1) & v27;
          if (((*(void *)(v15 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            break;
          }
          if (*(void *)(v26 + 8 * v25) == v22) {
            goto LABEL_12;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A6852D10((uint64_t)v10);
LABEL_4:
    ++v14;
    a1 = v32;
    if (v14 == v33)
    {
      uint64_t v11 = v37;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A6855B80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v35 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v33 = v12;
  if (!v12)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  v30[1] = v3;
  unint64_t v14 = 0;
  uint64_t v31 = a2 + 56;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v32 = a1;
  while (v14 < *(void *)(a1 + 16))
  {
    uint64_t v16 = *(void *)(v34 + 72);
    unint64_t v36 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    sub_1A6852CAC(a1 + v36 + v16 * v14, (uint64_t)v10);
    uint64_t v17 = *((void *)v10 + 1);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 24);
    swift_bridgeObjectRetain();
    uint64_t v20 = v19(ObjectType, v17);
    uint64_t v21 = v31;
    if (!*(void *)(a2 + 16)) {
      goto LABEL_13;
    }
    uint64_t v22 = v20;
    uint64_t v23 = sub_1A68931F0();
    uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v25 = v23 & ~v24;
    if (((*(void *)(v21 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_13;
    }
    uint64_t v26 = *(void *)(a2 + 48);
    if (*(void *)(v26 + 8 * v25) != v22)
    {
      uint64_t v27 = ~v24;
      while (1)
      {
        unint64_t v25 = (v25 + 1) & v27;
        if (((*(void *)(v21 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
          break;
        }
        if (*(void *)(v26 + 8 * v25) == v22) {
          goto LABEL_3;
        }
      }
LABEL_13:
      swift_bridgeObjectRelease();
      sub_1A6852E74((uint64_t)v10, v35);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1A6853628(0, *(void *)(v15 + 16) + 1, 1);
      }
      uint64_t v15 = v37;
      unint64_t v29 = *(void *)(v37 + 16);
      unint64_t v28 = *(void *)(v37 + 24);
      a1 = v32;
      if (v29 >= v28 >> 1)
      {
        sub_1A6853628(v28 > 1, v29 + 1, 1);
        uint64_t v15 = v37;
      }
      *(void *)(v15 + 16) = v29 + 1;
      uint64_t result = sub_1A6852E74(v35, v15 + v36 + v29 * v16);
      goto LABEL_4;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A6852D10((uint64_t)v10);
    a1 = v32;
LABEL_4:
    if (++v14 == v33)
    {
      uint64_t v11 = v37;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A6855E5C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1A6741AD0(&qword_1E96C3848);
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  void v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1A68923E0();
  v2[14] = v6;
  v2[15] = v5;
  return MEMORY[0x1F4188298](sub_1A6855FDC, v6, v5);
}

uint64_t sub_1A6855FDC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1A68558B4(v2, v1);
  *(void *)(v0 + 128) = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v0 + 136) = v4;
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 104);
    int v7 = *(_DWORD *)(v5 + 80);
    *(_DWORD *)(v0 + 176) = v7;
    *(void *)(v0 + 144) = *(void *)(v5 + 72);
    *(void *)(v0 + 152) = 0;
    sub_1A6852CAC(*(void *)(v0 + 128) + ((v7 + 32) & ~(unint64_t)v7), v6);
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v8 + 64) + **(int **)(v8 + 64));
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1A685620C;
    return v17(0, 0, ObjectType, v8);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v13 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1A6855B80(v14, v13);
    swift_bridgeObjectRelease();
    *(void *)(v12 + 40) = v15;
    swift_bridgeObjectRelease();
    sub_1A684760C();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_1A685620C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A68565FC;
  }
  else {
    uint64_t v2 = sub_1A6856320;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A6856320()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  *(unsigned char *)(v0 + 180) = 4;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(void *)(v0 + 40) = 0;
  sub_1A6892660();
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  return MEMORY[0x1F4188298](sub_1A68563F4, v4, v5);
}

uint64_t sub_1A68563F4()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 152) + 1;
  sub_1A6852D10(*(void *)(v0 + 104));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A6855B80(v5, v4);
    swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = v6;
    swift_bridgeObjectRelease();
    sub_1A684760C();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 152) + 1;
    *(void *)(v0 + 152) = v10;
    uint64_t v11 = *(void *)(v0 + 104);
    sub_1A6852CAC(*(void *)(v0 + 128)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ v9 * v10, v11);
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v12 + 64) + **(int **)(v12 + 64));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1A685620C;
    return v15(0, 0, ObjectType, v12);
  }
}

uint64_t sub_1A68565FC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return MEMORY[0x1F4188298](sub_1A6856660, v1, v2);
}

uint64_t sub_1A6856660()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 152) + 1;
  sub_1A6852D10(*(void *)(v0 + 104));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A6855B80(v5, v4);
    swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = v6;
    swift_bridgeObjectRelease();
    sub_1A684760C();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 152) + 1;
    *(void *)(v0 + 152) = v10;
    uint64_t v11 = *(void *)(v0 + 104);
    sub_1A6852CAC(*(void *)(v0 + 128)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ v9 * v10, v11);
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v12 + 64) + **(int **)(v12 + 64));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1A685620C;
    return v15(0, 0, ObjectType, v12);
  }
}

uint64_t sub_1A685685C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = sub_1A6741AD0(&qword_1E96C3848);
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  type metadata accessor for TTSSpeechQueue(0);
  sub_1A6857B14(&qword_1E96C3728);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1A68923E0();
  v3[19] = v7;
  v3[20] = v6;
  return MEMORY[0x1F4188298](sub_1A6856A14, v7, v6);
}

uint64_t sub_1A6856A14()
{
  uint64_t v1 = v0[6];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v58 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v50 = v4;
  uint64_t v52 = v0;
  if (!v4)
  {
LABEL_18:
    v0[21] = v3;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v3 + 16);
    v0[22] = v18;
    if (v18)
    {
      uint64_t v19 = v0[13];
      uint64_t v20 = v0[14];
      int v21 = *(_DWORD *)(v19 + 80);
      *((_DWORD *)v0 + 54) = v21;
      v0[23] = *(void *)(v19 + 72);
      v0[24] = 0;
      sub_1A6852CAC(v0[21] + ((v21 + 32) & ~(unint64_t)v21), v20);
      uint64_t v22 = *(void *)(v20 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v54 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v22 + 64) + **(int **)(v22 + 64));
      uint64_t v24 = (void *)swift_task_alloc();
      v0[25] = v24;
      void *v24 = v0;
      v24[1] = sub_1A6856FEC;
      return v54(0, 0, ObjectType, v22);
    }
    swift_release();
    uint64_t v25 = v0[6];
    uint64_t v26 = *(void *)(v25 + 40);
    uint64_t v27 = MEMORY[0x1E4FBC860];
    uint64_t v59 = MEMORY[0x1E4FBC860];
    uint64_t v28 = *(void *)(v26 + 16);
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v51 = v28;
    if (!v28)
    {
      uint64_t v45 = v27;
LABEL_41:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(void *)(v25 + 40) = v45;
      swift_bridgeObjectRelease();
      sub_1A684760C();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v43 = (uint64_t (*)(void))v0[1];
      return v43();
    }
    unint64_t v29 = 0;
    uint64_t v47 = v0[13];
    uint64_t v49 = v0[16];
    uint64_t v45 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v29 >= *(void *)(v26 + 16)) {
        goto LABEL_45;
      }
      uint64_t v31 = v0[7];
      uint64_t v30 = v0[8];
      uint64_t v32 = v26;
      uint64_t v55 = *(void *)(v47 + 72);
      unint64_t v57 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      sub_1A6852CAC(v26 + v57 + v55 * v29, v0[16]);
      uint64_t v33 = *(void *)(v49 + 8);
      uint64_t v34 = swift_getObjectType();
      uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 32);
      swift_bridgeObjectRetain();
      uint64_t v0 = v52;
      if (v35(v34, v33) == v31 && v36 == v30)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v38 = sub_1A6893120();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0)
        {
          sub_1A6852E74(v52[16], v52[15]);
          uint64_t v26 = v32;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v39 = v45;
          }
          else
          {
            sub_1A6853628(0, *(void *)(v45 + 16) + 1, 1);
            uint64_t v39 = v59;
          }
          unint64_t v41 = *(void *)(v39 + 16);
          unint64_t v40 = *(void *)(v39 + 24);
          if (v41 >= v40 >> 1)
          {
            sub_1A6853628(v40 > 1, v41 + 1, 1);
            uint64_t v39 = v59;
          }
          uint64_t v42 = v52[15];
          *(void *)(v39 + 16) = v41 + 1;
          uint64_t v45 = v39;
          uint64_t result = sub_1A6852E74(v42, v39 + v57 + v41 * v55);
          goto LABEL_26;
        }
      }
      uint64_t result = sub_1A6852D10(v52[16]);
      uint64_t v26 = v32;
LABEL_26:
      if (v51 == ++v29)
      {
        uint64_t v25 = v52[6];
        goto LABEL_41;
      }
    }
  }
  unint64_t v6 = 0;
  uint64_t v46 = v0[13];
  uint64_t v48 = v0[18];
  uint64_t v44 = v2;
  while (v6 < *(void *)(v2 + 16))
  {
    uint64_t v7 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v53 = *(void *)(v46 + 72);
    unint64_t v56 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    sub_1A6852CAC(v2 + v56 + v53 * v6, v0[18]);
    uint64_t v9 = *(void *)(v48 + 8);
    uint64_t v10 = swift_getObjectType();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 32);
    swift_bridgeObjectRetain();
    uint64_t v0 = v52;
    if (v11(v10, v9) == v7 && v12 == v8)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v2 = v44;
LABEL_13:
      sub_1A6852E74(v52[18], v52[17]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A6853628(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v58;
      }
      unint64_t v16 = *(void *)(v3 + 16);
      unint64_t v15 = *(void *)(v3 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1A6853628(v15 > 1, v16 + 1, 1);
        uint64_t v3 = v58;
      }
      uint64_t v17 = v52[17];
      *(void *)(v3 + 16) = v16 + 1;
      uint64_t result = sub_1A6852E74(v17, v3 + v56 + v16 * v53);
      goto LABEL_4;
    }
    char v14 = sub_1A6893120();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v44;
    if (v14) {
      goto LABEL_13;
    }
    uint64_t result = sub_1A6852D10(v52[18]);
LABEL_4:
    if (v50 == ++v6) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1A6856FEC()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A68575D8;
  }
  else {
    uint64_t v2 = sub_1A6857100;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A6857100()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  *(unsigned char *)(v0 + 220) = 4;
  sub_1A6741AD0(&qword_1E96C3830);
  sub_1A6892650();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(void *)(v0 + 40) = 0;
  sub_1A6892660();
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  return MEMORY[0x1F4188298](sub_1A68571D4, v4, v5);
}

uint64_t sub_1A68571D4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 192) + 1;
  sub_1A6852D10(*(void *)(v0 + 112));
  if (v2 == v1)
  {
    swift_release();
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v6 = *(void *)(v4 + 16);
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v32 = v6;
    if (v6)
    {
      unint64_t v8 = 0;
      uint64_t v30 = *(void *)(v0 + 104);
      uint64_t v31 = *(void *)(v0 + 128);
      uint64_t v29 = MEMORY[0x1E4FBC860];
      while (1)
      {
        if (v8 >= *(void *)(v4 + 16))
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = *(void *)(v0 + 56);
        uint64_t v10 = *(void *)(v0 + 64);
        uint64_t v11 = v4;
        uint64_t v33 = *(void *)(v30 + 72);
        unint64_t v35 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        sub_1A6852CAC(v4 + v35 + v33 * v8, *(void *)(v0 + 128));
        uint64_t v12 = *(void *)(v31 + 8);
        uint64_t ObjectType = swift_getObjectType();
        char v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 32);
        swift_bridgeObjectRetain();
        if (v14(ObjectType, v12) == v9 && v15 == v10)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v17 = sub_1A6893120();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            sub_1A6852E74(*(void *)(v0 + 128), *(void *)(v0 + 120));
            uint64_t v4 = v11;
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              uint64_t v18 = v29;
            }
            else
            {
              sub_1A6853628(0, *(void *)(v29 + 16) + 1, 1);
              uint64_t v18 = v36;
            }
            unint64_t v20 = *(void *)(v18 + 16);
            unint64_t v19 = *(void *)(v18 + 24);
            if (v20 >= v19 >> 1)
            {
              sub_1A6853628(v19 > 1, v20 + 1, 1);
              uint64_t v18 = v36;
            }
            uint64_t v21 = *(void *)(v0 + 120);
            *(void *)(v18 + 16) = v20 + 1;
            uint64_t v29 = v18;
            uint64_t result = sub_1A6852E74(v21, v18 + v35 + v20 * v33);
            goto LABEL_6;
          }
        }
        uint64_t result = sub_1A6852D10(*(void *)(v0 + 128));
        uint64_t v4 = v11;
LABEL_6:
        if (v32 == ++v8)
        {
          uint64_t v3 = *(void *)(v0 + 48);
          goto LABEL_24;
        }
      }
    }
    uint64_t v29 = v5;
LABEL_24:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = v29;
    swift_bridgeObjectRelease();
    sub_1A684760C();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 192) + 1;
    *(void *)(v0 + 192) = v23;
    uint64_t v24 = *(void *)(v0 + 112);
    sub_1A6852CAC(*(void *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ v22 * v23, v24);
    uint64_t v25 = *(void *)(v24 + 8);
    uint64_t v26 = swift_getObjectType();
    uint64_t v34 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(v25 + 64) + **(int **)(v25 + 64));
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_1A6856FEC;
    return v34(0, 0, v26, v25);
  }
}

uint64_t sub_1A68575D8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  return MEMORY[0x1F4188298](sub_1A68580FC, v1, v2);
}

uint64_t sub_1A685763C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1A6852FAC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for TTSSpeechQueue.QueueableWrapper(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1A6892F00();
  __break(1u);
  return result;
}

uint64_t sub_1A6857824()
{
  return sub_1A6857850(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A6857850(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));

  return MEMORY[0x1F4186498](v2, 40, 7);
}

uint64_t sub_1A68578A8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A6750954;
  return sub_1A684ED7C((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1A685793C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A677B9EC;
  return sub_1A684C094();
}

uint64_t sub_1A68579D0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A6857A18()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A677B9EC;
  return sub_1A6847C88((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_1A6857AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6857B14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TTSSpeechQueue(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A6857B58()
{
  uint64_t v1 = sub_1A6741AD0(&qword_1E96C3898);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A6857C38()
{
  uint64_t v2 = *(void *)(sub_1A6741AD0(&qword_1E96C3898) - 8);
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1A677B9EC;
  return sub_1A684DFDC((uint64_t)v7, v8, v9, v3, v4, v5, v6);
}

uint64_t sub_1A6857D24()
{
  uint64_t v1 = sub_1A6741AD0(&qword_1E96C3898);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A6857DF4()
{
  uint64_t v2 = *(void *)(sub_1A6741AD0(&qword_1E96C3898) - 8);
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A677B9EC;
  v5[2] = v4;
  uint64_t v8 = (uint64_t (*)(void))((char *)v3 + *v3);
  uint64_t v6 = (void *)swift_task_alloc();
  long long v5[3] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1A684E908;
  return v8();
}

uint64_t sub_1A6857F58()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A677B9EC;
  return sub_1A684C094();
}

uint64_t sub_1A6857FEC(uint64_t a1)
{
  uint64_t v3 = *(_OWORD **)(v1 + 16);
  long long v8 = *(_OWORD *)(v1 + 24);
  sub_1A6750210((uint64_t)v3, &qword_1E96C37B8);
  uint64_t v4 = type metadata accessor for TTSSpeechQueue.QueueableWrapper(0);
  uint64_t v5 = (char *)v3 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1A6741AD0(&qword_1E96C3830);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, a1, v6);
  *uint64_t v3 = v8;
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);

  return swift_unknownObjectRetain();
}

uint64_t TTSMarkup.SayAs.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(a3 + 72))(v3);
}

void TTSMarkup.SayAs.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v24 = MEMORY[0x1E4FBC860];
  WORD4(v24) = 2574;
  unint64_t v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0x100))();
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A6892EB0();
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    long long v8 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_17;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 0;
  long long v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x1AD0BFD30](v7, v5);
    }
    else {
      id v9 = *(id *)(v5 + 8 * v7 + 32);
    }
    uint64_t v10 = v9;
    sub_1A677BA04((uint64_t)&v19);

    if (v20)
    {
      sub_1A673E770(&v19, (uint64_t)&v21);
      sub_1A673E770(&v21, (uint64_t)&v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v8 = sub_1A676207C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1) {
        long long v8 = sub_1A676207C((void *)(v11 > 1), v12 + 1, 1, v8);
      }
      v8[2] = v12 + 1;
      sub_1A673E770(&v19, (uint64_t)&v8[5 * v12 + 4]);
    }
    else
    {
      sub_1A6761FF4((uint64_t)&v19);
    }
    ++v7;
  }
  while (v6 != v7);
LABEL_18:
  swift_bridgeObjectRelease_n();
  uint64_t v22 = sub_1A6741AD0(&qword_1E96C1D60);
  uint64_t v23 = &protocol witness table for <A> [A];
  *(void *)&long long v21 = v8;
  uint64_t v13 = sub_1A673E770(&v21, (uint64_t)v25);
  uint64_t v14 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8);
  if (*(void *)(v14(v13) + 16) && (sub_1A673F7AC(0x6572707265746E69, 0xEC00000073612D74), (v15 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = TTSMarkup.SayAs.Interpretation.init(rawValue:)((char *)&v21);
    if (v21 != 14) {
      BYTE8(v24) = v21;
    }
  }
  else
  {
    uint64_t v16 = swift_bridgeObjectRelease();
  }
  if (*(void *)(v14(v16) + 16) && (sub_1A673F7AC(0x74616D726F66, 0xE600000000000000), (v17 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    TTSMarkup.SayAs.Format.init(rawValue:)((char *)&v21);

    if (v21 != 10) {
      BYTE9(v24) = v21;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  long long v18 = v25[0];
  *(_OWORD *)a2 = v24;
  *(_OWORD *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = v25[1];
  *(void *)(a2 + 48) = v26;
}

uint64_t TTSMarkup.SayAs.Interpretation.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A6892F30();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 14;
  if (v2 < 0xE) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t TTSMarkup.SayAs.Format.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A6892F30();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 10;
  if (v2 < 0xA) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void static TTSMarkup.SayAs.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t TTSMarkup.SayAs.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.SayAs.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.SayAs.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.SayAs.Interpretation.description.getter()
{
  uint64_t result = 0x6574636172616863;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x756F2D6C6C657073;
      break;
    case 2:
      uint64_t result = 0x6C616E6964726163;
      break;
    case 3:
      uint64_t result = 0x7265626D756ELL;
      break;
    case 4:
      uint64_t result = 0x6C616E6964726FLL;
      break;
    case 5:
      uint64_t result = 0x737469676964;
      break;
    case 6:
      uint64_t result = 0x6E6F697463617266;
      break;
    case 7:
      uint64_t result = 1953066613;
      break;
    case 8:
      uint64_t result = 1702125924;
      break;
    case 9:
      uint64_t result = 1701669236;
      break;
    case 0xA:
      uint64_t result = 0x6E6F6870656C6574;
      break;
    case 0xB:
      uint64_t result = 0x73736572646461;
      break;
    case 0xC:
      uint64_t result = 0x63656A7265746E69;
      break;
    case 0xD:
      uint64_t result = 0x766974656C707865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t TTSMarkup.SayAs.Interpretation.rawValue.getter()
{
  uint64_t result = 0x6574636172616863;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x756F2D6C6C657073;
      break;
    case 2:
      uint64_t result = 0x6C616E6964726163;
      break;
    case 3:
      uint64_t result = 0x7265626D756ELL;
      break;
    case 4:
      uint64_t result = 0x6C616E6964726FLL;
      break;
    case 5:
      uint64_t result = 0x737469676964;
      break;
    case 6:
      uint64_t result = 0x6E6F697463617266;
      break;
    case 7:
      uint64_t result = 1953066613;
      break;
    case 8:
      uint64_t result = 1702125924;
      break;
    case 9:
      uint64_t result = 1701669236;
      break;
    case 0xA:
      uint64_t result = 0x6E6F6870656C6574;
      break;
    case 0xB:
      uint64_t result = 0x73736572646461;
      break;
    case 0xC:
      uint64_t result = 0x63656A7265746E69;
      break;
    case 0xD:
      uint64_t result = 0x766974656C707865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A6858904()
{
  return sub_1A6858B2C();
}

uint64_t sub_1A6858910(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7955565;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7955565;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 7957860;
      break;
    case 2:
      uint64_t v5 = 6581625;
      break;
    case 3:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 25709;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 28004;
      break;
    case 5:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 28025;
      break;
    case 6:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 31085;
      break;
    case 7:
      unint64_t v3 = 0xE100000000000000;
      uint64_t v5 = 100;
      break;
    case 8:
      unint64_t v3 = 0xE100000000000000;
      uint64_t v5 = 109;
      break;
    case 9:
      unint64_t v3 = 0xE100000000000000;
      uint64_t v5 = 121;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 7957860) {
        goto LABEL_28;
      }
      goto LABEL_31;
    case 2:
      if (v5 != 6581625) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 3:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 25709) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 4:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 28004) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 5:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 28025) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 6:
      unint64_t v6 = 0xE200000000000000;
      if (v5 != 31085) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 7:
      unint64_t v6 = 0xE100000000000000;
      if (v5 != 100) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 8:
      unint64_t v6 = 0xE100000000000000;
      uint64_t v2 = 109;
      goto LABEL_27;
    case 9:
      unint64_t v6 = 0xE100000000000000;
      if (v5 != 121) {
        goto LABEL_31;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v2) {
        goto LABEL_31;
      }
LABEL_28:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_31:
      }
        char v7 = sub_1A6893120();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1A6858B2C()
{
  uint64_t v0 = TTSMarkup.SayAs.Interpretation.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == TTSMarkup.SayAs.Interpretation.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A6893120();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A6858BC4()
{
  return sub_1A6893250();
}

uint64_t sub_1A6858C2C()
{
  TTSMarkup.SayAs.Interpretation.rawValue.getter();
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A6858C90()
{
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A6858D88()
{
  return sub_1A6893250();
}

uint64_t sub_1A6858DEC@<X0>(char *a1@<X8>)
{
  return TTSMarkup.SayAs.Interpretation.init(rawValue:)(a1);
}

uint64_t sub_1A6858DF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TTSMarkup.SayAs.Interpretation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t TTSMarkup.SayAs.Format.description.getter()
{
  uint64_t result = 7955565;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7957860;
      break;
    case 2:
      uint64_t result = 6581625;
      break;
    case 3:
      uint64_t result = 25709;
      break;
    case 4:
      uint64_t result = 28004;
      break;
    case 5:
      uint64_t result = 28025;
      break;
    case 6:
      uint64_t result = 31085;
      break;
    case 7:
      uint64_t result = 100;
      break;
    case 8:
      uint64_t result = 109;
      break;
    case 9:
      uint64_t result = 121;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t TTSMarkup.SayAs.Format.rawValue.getter()
{
  uint64_t result = 7955565;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7957860;
      break;
    case 2:
      uint64_t result = 6581625;
      break;
    case 3:
      uint64_t result = 25709;
      break;
    case 4:
      uint64_t result = 28004;
      break;
    case 5:
      uint64_t result = 28025;
      break;
    case 6:
      uint64_t result = 31085;
      break;
    case 7:
      uint64_t result = 100;
      break;
    case 8:
      uint64_t result = 109;
      break;
    case 9:
      uint64_t result = 121;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A6858FA4(unsigned __int8 *a1, char *a2)
{
  return sub_1A6858910(*a1, *a2);
}

uint64_t sub_1A6858FB0()
{
  return sub_1A6893250();
}

uint64_t sub_1A6858FF8()
{
  return sub_1A6858C90();
}

uint64_t sub_1A6859000()
{
  return sub_1A6893250();
}

uint64_t sub_1A6859044@<X0>(char *a1@<X8>)
{
  return TTSMarkup.SayAs.Format.init(rawValue:)(a1);
}

uint64_t sub_1A6859050@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TTSMarkup.SayAs.Format.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t TTSMarkup.SayAs._content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 16, a1);
}

uint64_t TTSMarkup.SayAs._content.setter(long long *a1)
{
  uint64_t v3 = v1 + 16;
  sub_1A6741A24(v3);

  return sub_1A673E770(a1, v3);
}

uint64_t (*TTSMarkup.SayAs._content.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.SayAs.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A673E788(v1 + 16, a1);
}

uint64_t TTSMarkup.SayAs.init(interpretation:_:speech:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a1;
  char v5 = *a2;
  *(void *)a4 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a4 + 8) = v4;
  *(unsigned char *)(a4 + 9) = v5;
  return a3();
}

uint64_t TTSMarkup.SayAs.init(format:speech:)@<X0>(char *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a1;
  *(void *)a3 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a3 + 8) = 14;
  *(unsigned char *)(a3 + 9) = v3;
  return a2();
}

uint64_t TTSMarkup.SayAs.init(interpretation:speech:)@<X0>(char *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a1;
  *(void *)a3 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a3 + 9) = 10;
  *(unsigned char *)(a3 + 8) = v3;
  return a2();
}

uint64_t TTSMarkup.SayAs.attributes.getter()
{
  uint64_t v1 = MEMORY[0x1E4FBC868];
  if (*(unsigned char *)(v0 + 8) != 14)
  {
    uint64_t v2 = TTSMarkup.SayAs.Interpretation.rawValue.getter();
    uint64_t v4 = v3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A6747404(v2, v4, 0x6572707265746E69, 0xEC00000073612D74, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = 7955565;
  uint64_t v7 = 0xE300000000000000;
  switch(*(unsigned char *)(v0 + 9))
  {
    case 1:
      uint64_t v6 = 7957860;
      goto LABEL_13;
    case 2:
      uint64_t v6 = 6581625;
      goto LABEL_13;
    case 3:
      uint64_t v7 = 0xE200000000000000;
      uint64_t v6 = 25709;
      goto LABEL_13;
    case 4:
      uint64_t v7 = 0xE200000000000000;
      uint64_t v6 = 28004;
      goto LABEL_13;
    case 5:
      uint64_t v7 = 0xE200000000000000;
      uint64_t v6 = 28025;
      goto LABEL_13;
    case 6:
      uint64_t v7 = 0xE200000000000000;
      uint64_t v6 = 31085;
      goto LABEL_13;
    case 7:
      uint64_t v7 = 0xE100000000000000;
      uint64_t v6 = 100;
      goto LABEL_13;
    case 8:
      uint64_t v7 = 0xE100000000000000;
      uint64_t v6 = 109;
      goto LABEL_13;
    case 9:
      uint64_t v7 = 0xE100000000000000;
      uint64_t v6 = 121;
      goto LABEL_13;
    case 0xA:
      return v1;
    default:
LABEL_13:
      char v8 = swift_isUniquelyReferenced_nonNull_native();
      sub_1A6747404(v6, v7, 0x74616D726F66, 0xE600000000000000, v8);
      swift_bridgeObjectRelease();
      return v1;
  }
}

unint64_t sub_1A685938C()
{
  unint64_t result = qword_1E96C3920;
  if (!qword_1E96C3920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C3920);
  }
  return result;
}

uint64_t _s5SayAsVwxx(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_bridgeObjectRelease();

  return sub_1A6741A24(v1);
}

uint64_t _s5SayAsVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = a2 + 16;
  long long v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 16, v3, v5);
  return a1;
}

uint64_t _s5SayAsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  sub_1A67588AC((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t _s5SayAsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  sub_1A6741A24(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t _s5SayAsVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5SayAsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.SayAs()
{
  return &type metadata for TTSMarkup.SayAs;
}

uint64_t _s5SayAsV14InterpretationOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s5SayAsV14InterpretationOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A6859768);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.SayAs.Interpretation()
{
  return &type metadata for TTSMarkup.SayAs.Interpretation;
}

uint64_t _s5SayAsV6FormatOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s5SayAsV6FormatOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A68598FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.SayAs.Format()
{
  return &type metadata for TTSMarkup.SayAs.Format;
}

uint64_t TTSMarkup.Pause.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *((_DWORD *)v3 + 2);
  char v5 = *((unsigned char *)v3 + 12);
  char v6 = *((unsigned char *)v3 + 13);
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v10 = *v3;
  int v11 = v4;
  char v12 = v5;
  char v13 = v6;
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  return (*(uint64_t (**)(uint64_t *))(a3 + 24))(&v10);
}

void TTSMarkup.Pause.init(_:)(void *a1@<X0>, void *a2@<X8>)
{
  int v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8);
  uint64_t v5 = v4();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1A673F7AC(1701669236, 0xE400000000000000), (v7 & 1) != 0))
  {
    uint64_t v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    unint64_t v11 = sub_1A6859B6C();
    swift_bridgeObjectRelease();

    uint64_t v12 = v11 & 0x100000000;
    if ((v11 & 0x100000000) != 0) {
      unint64_t v11 = 0;
    }
    else {
      unint64_t v11 = v11;
    }
    unint64_t v13 = 0x60000000000;
  }
  else
  {
    uint64_t v14 = swift_bridgeObjectRelease();
    uint64_t v15 = ((uint64_t (*)(uint64_t))v4)(v14);
    if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1A673F7AC(0x6874676E65727473, 0xE800000000000000), (v17 & 1) != 0))
    {
      long long v18 = (uint64_t *)(*(void *)(v15 + 56) + 16 * v16);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      TTSMarkup.Pause.Strength.init(rawValue:)(v19, v20, (char *)&v21);

      uint64_t v12 = 0x100000000;
      unint64_t v13 = 0x60000000000;
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      if (v21 != 6) {
        unint64_t v13 = (unint64_t)v21 << 40;
      }
      unint64_t v11 = 0;
      if (v21 != 6) {
        uint64_t v12 = 0x100000000;
      }
    }
    else
    {
      unint64_t v11 = 1051092582;

      swift_bridgeObjectRelease();
      uint64_t v9 = 0;
      unint64_t v13 = 0;
      uint64_t v12 = 0;
      unint64_t v10 = 0xE000000000000000;
    }
  }
  *a2 = MEMORY[0x1E4FBC860];
  a2[1] = v11 | v13 | v12;
  a2[2] = v9;
  a2[3] = v10;
}

unint64_t sub_1A6859B6C()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id v1 = sub_1A67BACE4(0xD000000000000031, 0x80000001A68CFE10, 1);
  if (!v1) {
    goto LABEL_10;
  }
  id v2 = v1;
  int v3 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1A68921D0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_firstMatchInString_options_range_, v3, 0, 0, v4);

  if (!v5) {
    goto LABEL_9;
  }
  unint64_t v6 = (void *)sub_1A6891FD0();
  objc_msgSend(v5, sel_rangeWithName_, v6);

  sub_1A6892810();
  if ((v7 & 1) != 0
    || (uint64_t v8 = (void *)sub_1A6891FD0(),
        objc_msgSend(v5, sel_rangeWithName_, v8),
        v8,
        sub_1A6892810(),
        (v9 & 1) != 0))
  {

LABEL_9:
    goto LABEL_10;
  }
  uint64_t v10 = sub_1A6892240();
  uint64_t v11 = MEMORY[0x1AD0BF180](v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1A6892240();
  uint64_t v15 = MEMORY[0x1AD0BF180](v14);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if ((v15 != 115 || v17 != 0xE100000000000000) && (sub_1A6893120() & 1) == 0)
  {
    if (v15 == 29549 && v17 == 0xE200000000000000)
    {
      uint64_t v27 = swift_bridgeObjectRelease();
LABEL_33:
      uint64_t v29 = MEMORY[0x1F4188790](v27);
      if ((v13 & 0x1000000000000000) != 0 || !(v13 & 0x2000000000000000 | v11 & 0x1000000000000000))
      {
        sub_1A6892C30();
      }
      else
      {
        MEMORY[0x1F4188790](v29);
        if ((v13 & 0x2000000000000000) != 0)
        {
          BOOL v33 = (v11 > 0x20u || ((0x100003E01uLL >> v11) & 1) == 0)
             && (uint64_t v32 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
             && *v32 == 0;
          char v34 = v33;

          swift_bridgeObjectRelease();
LABEL_47:
          if (v34)
          {
            unsigned __int8 v19 = 0;
            float v18 = 0.0 / 1000.0;
            return LODWORD(v18) | ((unint64_t)v19 << 32);
          }
          goto LABEL_10;
        }
        if ((v11 & 0x1000000000000000) != 0)
        {
          uint64_t v30 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v31 = v11 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v30 = sub_1A6892CD0();
        }
        char v34 = sub_1A676A450(v30, v31, (void (*)(uint64_t *__return_ptr))sub_1A6832E44) & 1;
      }

      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    char v28 = sub_1A6893120();
    uint64_t v27 = swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_33;
    }

    swift_bridgeObjectRelease();
LABEL_10:
    float v18 = 0.0;
    unsigned __int8 v19 = 1;
    return LODWORD(v18) | ((unint64_t)v19 << 32);
  }
  uint64_t v21 = swift_bridgeObjectRelease();
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  if ((v13 & 0x1000000000000000) != 0 || !(v13 & 0x2000000000000000 | v11 & 0x1000000000000000))
  {
    sub_1A6892C30();
  }
  else
  {
    MEMORY[0x1F4188790](v22);
    if ((v13 & 0x2000000000000000) != 0)
    {
      BOOL v26 = (v11 > 0x20u || ((0x100003E01uLL >> v11) & 1) == 0)
         && (uint64_t v25 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
         && *v25 == 0;
      char v34 = v26;

      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    if ((v11 & 0x1000000000000000) != 0)
    {
      uint64_t v23 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v24 = v11 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v23 = sub_1A6892CD0();
    }
    char v34 = sub_1A676A450(v23, v24, (void (*)(uint64_t *__return_ptr))sub_1A6832E44) & 1;
  }

  swift_bridgeObjectRelease();
LABEL_29:
  float v18 = 0.0;
  if (!v34) {
    float v18 = 0.0;
  }
  unsigned __int8 v19 = v34 ^ 1;
  return LODWORD(v18) | ((unint64_t)v19 << 32);
}

uint64_t TTSMarkup.Pause.Strength.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v4 || (sub_1A6893120() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
  }
  else if (a1 == 0x6B6165772D78 && a2 == 0xE600000000000000 || (sub_1A6893120() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 1;
  }
  else if (a1 == 1801545079 && a2 == 0xE400000000000000 || (sub_1A6893120() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 2;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_1A6893120() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 3;
  }
  else if (a1 == 0x676E6F727473 && a2 == 0xE600000000000000 || (sub_1A6893120() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 4;
  }
  else if (a1 == 0x676E6F7274732D78 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 5;
  }
  else
  {
    char v9 = sub_1A6893120();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      char v8 = 5;
    }
    else {
      char v8 = 6;
    }
  }
  *a3 = v8;
  return result;
}

void static TTSMarkup.Pause.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t TTSMarkup.Pause.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.Pause.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.Pause.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

uint64_t TTSMarkup.Pause.Strength.description.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B6165772D78;
      break;
    case 2:
      uint64_t result = 1801545079;
      break;
    case 3:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 4:
      uint64_t result = 0x676E6F727473;
      break;
    case 5:
      uint64_t result = 0x676E6F7274732D78;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t TTSMarkup.Pause.Strength.rawValue.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B6165772D78;
      break;
    case 2:
      uint64_t result = 1801545079;
      break;
    case 3:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 4:
      uint64_t result = 0x676E6F727473;
      break;
    case 5:
      uint64_t result = 0x676E6F7274732D78;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A685A554(unsigned __int8 *a1, char *a2)
{
  return sub_1A685A560(*a1, *a2);
}

uint64_t sub_1A685A560(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701736302;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701736302;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6B6165772D78;
      break;
    case 2:
      uint64_t v5 = 1801545079;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x676E6F727473;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x676E6F7274732D78;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x6B6165772D78) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      if (v5 != 1801545079) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x676E6F727473;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x676E6F7274732D78) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1A6893120();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1A685A72C()
{
  return sub_1A685A734();
}

uint64_t sub_1A685A734()
{
  return sub_1A6893250();
}

uint64_t sub_1A685A828()
{
  sub_1A68920F0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A685A904()
{
  return sub_1A685A90C();
}

uint64_t sub_1A685A90C()
{
  return sub_1A6893250();
}

uint64_t sub_1A685A9FC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return TTSMarkup.Pause.Strength.init(rawValue:)(*a1, a1[1], a2);
}

void sub_1A685AA08(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6B6165772D78;
      goto LABEL_3;
    case 2:
      *a1 = 1801545079;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x676E6F727473;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x676E6F7274732D78;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A685AAC4()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6B6165772D78;
      break;
    case 2:
      uint64_t result = 1801545079;
      break;
    case 3:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 4:
      uint64_t result = 0x676E6F727473;
      break;
    case 5:
      uint64_t result = 0x676E6F7274732D78;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t TTSMarkup.Pause.attributes.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    sub_1A6741AD0(&qword_1E96C1588);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
    *(void *)(inited + 32) = 1701669236;
    *(void *)(inited + 40) = 0xE400000000000000;
    *(void *)(inited + 48) = v2;
    *(void *)(inited + 56) = v1;
    swift_bridgeObjectRetain();
    uint64_t v5 = inited;
  }
  else if (*(unsigned char *)(v0 + 12))
  {
    int v6 = *(unsigned __int8 *)(v0 + 13);
    if (v6 == 6)
    {
      sub_1A6892E60();
      __break(1u);
      JUMPOUT(0x1A685ADE4);
    }
    sub_1A6741AD0(&qword_1E96C1588);
    uint64_t v5 = swift_initStackObject();
    *(_OWORD *)(v5 + 16) = xmmword_1A689DC40;
    unint64_t v7 = 0xE800000000000000;
    *(void *)(v5 + 32) = 0x6874676E65727473;
    *(void *)(v5 + 40) = 0xE800000000000000;
    uint64_t v8 = 0x676E6F7274732D78;
    switch(v6)
    {
      case 1:
        unint64_t v7 = 0xE600000000000000;
        uint64_t v8 = 0x6B6165772D78;
        break;
      case 2:
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1801545079;
        break;
      case 3:
        unint64_t v7 = 0xE600000000000000;
        uint64_t v8 = 0x6D756964656DLL;
        break;
      case 4:
        unint64_t v7 = 0xE600000000000000;
        uint64_t v8 = 0x676E6F727473;
        break;
      case 5:
        break;
      default:
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1701736302;
        break;
    }
    *(void *)(v5 + 48) = v8;
    *(void *)(v5 + 56) = v7;
  }
  else
  {
    sub_1A68926D0();
    sub_1A6892150();
    swift_bridgeObjectRelease();
    sub_1A6741AD0(&qword_1E96C1588);
    uint64_t v5 = swift_initStackObject();
    *(_OWORD *)(v5 + 16) = xmmword_1A689DC40;
    *(void *)(v5 + 32) = 1701669236;
    *(void *)(v5 + 40) = 0xE400000000000000;
    *(void *)(v5 + 48) = 0;
    *(void *)(v5 + 56) = 0xE000000000000000;
  }
  return sub_1A6742BA0(v5);
}

void TTSMarkup.Pause.init(seconds:)(uint64_t a1@<X8>, float a2@<S0>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(float *)(a1 + 8) = a2;
  *(_WORD *)(a1 + 12) = 1536;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
}

char *TTSMarkup.Pause.init(strength:)@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *result;
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 12) = 1;
  *(unsigned char *)(a2 + 13) = v2;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  return result;
}

double sub_1A685AE4C()
{
  if (*(unsigned char *)(v0 + 12)) {
    return dbl_1A68A7278[*(char *)(v0 + 13)];
  }
  else {
    return *(float *)(v0 + 8);
  }
}

void sub_1A685AE74(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

unint64_t sub_1A685AE94()
{
  unint64_t result = qword_1E96C3928;
  if (!qword_1E96C3928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E96C3928);
  }
  return result;
}

uint64_t _s5PauseVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s5PauseVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5PauseVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5PauseVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTSMarkup.Pause()
{
  return &type metadata for TTSMarkup.Pause;
}

unsigned char *_s5PauseV8StrengthOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A685B128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.Pause.Strength()
{
  return &type metadata for TTSMarkup.Pause.Strength;
}

uint64_t Dictionary<>.authoritative.getter(uint64_t a1)
{
  unint64_t v222 = MEMORY[0x1E4FBC868];
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v6 = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v167 = v6;
  int64_t v175 = v5;
  uint64_t v177 = v1;
  while (v4)
  {
    unint64_t v11 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v12 = v11 | (v7 << 6);
LABEL_23:
    uint64_t v16 = *(void *)(v6 + 56) + 104 * v12;
    uint64_t v17 = *(unsigned __int8 *)(v16 + 56);
    if ((v17 - 7) >= 4 && v17 != 4)
    {
      unsigned int v198 = *(unsigned __int8 *)(v16 + 40);
      uint64_t v180 = *(void *)(v16 + 48);
      unsigned __int8 v19 = *(void **)(v16 + 80);
      sub_1A68920A0();
      if (v17 == 5)
      {
        uint64_t v205 = 0x65636E657265635FLL;
        unint64_t v20 = 0xE90000000000005FLL;
      }
      else
      {
        uint64_t v205 = 0x5F697269735FLL;
        unint64_t v20 = 0xE600000000000000;
      }
      uint64_t v206 = v20;
      sub_1A6892150();
      uint64_t v21 = v205;
      uint64_t v22 = v206;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = v19;
      swift_bridgeObjectRelease();
      uint64_t v24 = (void *)v222;
      unint64_t v182 = v23;
      if (*(void *)(v222 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_1A673F7AC(v205, v206);
        if (v26)
        {
          uint64_t v27 = (uint64_t *)(v24[7] + 48 * v25);
          uint64_t v187 = v27[1];
          uint64_t v189 = *v27;
          uint64_t v28 = v27[2];
          uint64_t v193 = v27[3];
          uint64_t v30 = v27[4];
          uint64_t v29 = v27[5];
          swift_bridgeObjectRetain();
          uint64_t v185 = v28;
          swift_bridgeObjectRetain();
          uint64_t v191 = v30;
          swift_bridgeObjectRetain();
          uint64_t v195 = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v31 = MEMORY[0x1E4FBC860];
      unsigned __int8 v223 = (void *)MEMORY[0x1E4FBC860];
      sub_1A674CEE4();
      swift_bridgeObjectRetain();
      sub_1A6741AD0(&qword_1EB67A298);
      sub_1A685CFA0();
      sub_1A6892B90();
      uint64_t v193 = v205;
      uint64_t v195 = MEMORY[0x1E4FBC868];
      uint64_t v189 = v205;
      uint64_t v191 = MEMORY[0x1E4FBC868];
      uint64_t v185 = v31;
      uint64_t v187 = v206;
LABEL_35:
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v205 = (uint64_t)v24;
      unint64_t v222 = 0x8000000000000000;
      unint64_t v34 = sub_1A673F7AC(v21, v206);
      uint64_t v35 = v24[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_177;
      }
      char v38 = v33;
      if (v24[3] >= v37)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v33) {
            goto LABEL_43;
          }
        }
        else
        {
          sub_1A685EB18();
          uint64_t v24 = (void *)v205;
          if (v38) {
            goto LABEL_43;
          }
        }
      }
      else
      {
        sub_1A685DF68(v37, isUniquelyReferenced_nonNull_native);
        uint64_t v24 = (void *)v205;
        unint64_t v39 = sub_1A673F7AC(v21, v206);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_184;
        }
        unint64_t v34 = v39;
        if (v38)
        {
LABEL_43:
          uint64_t v46 = (uint64_t *)(v24[7] + 48 * v34);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *uint64_t v46 = v189;
          v46[1] = v187;
          v46[2] = v185;
          void v46[3] = v193;
          v46[4] = v191;
          v46[5] = v195;
          goto LABEL_44;
        }
      }
      v24[(v34 >> 6) + 8] |= 1 << v34;
      unint64_t v41 = (uint64_t *)(v24[6] + 16 * v34);
      *unint64_t v41 = v21;
      v41[1] = v22;
      uint64_t v42 = (uint64_t *)(v24[7] + 48 * v34);
      *uint64_t v42 = v189;
      v42[1] = v187;
      _OWORD v42[2] = v185;
      v42[3] = v193;
      v42[4] = v191;
      v42[5] = v195;
      uint64_t v43 = v24[2];
      BOOL v44 = __OFADD__(v43, 1);
      uint64_t v45 = v43 + 1;
      if (v44) {
        goto LABEL_181;
      }
      v24[2] = v45;
      swift_bridgeObjectRetain();
LABEL_44:
      unint64_t v222 = (unint64_t)v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = sub_1A685CB6C(v221, v21, v22);
      if (v47[1])
      {
        uint64_t v49 = v47;
        uint64_t v50 = sub_1A68920A0();
        uint64_t v52 = v51;
        uint64_t v53 = (char *)v49[2];
        v196 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_1A6757B94(0, *((void *)v53 + 2) + 1, 1, v53);
        }
        unint64_t v55 = *((void *)v53 + 2);
        unint64_t v54 = *((void *)v53 + 3);
        if (v55 >= v54 >> 1) {
          uint64_t v53 = sub_1A6757B94((char *)(v54 > 1), v55 + 1, 1, v53);
        }
        *((void *)v53 + 2) = v55 + 1;
        unint64_t v56 = &v53[16 * v55];
        *((void *)v56 + 4) = v50;
        *((void *)v56 + 5) = v52;
        void v49[2] = v53;
        uint64_t v205 = v180;
        sub_1A67B83BC();
        sub_1A6892290();
        sub_1A6892290();
        unsigned __int8 v223 = (void *)(v224 | v225);
        sub_1A67B8410();
        sub_1A68932E0();
        sub_1A6741AD0(&qword_1EB67A388);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
        *(void *)(inited + 32) = sub_1A68920A0();
        *(void *)(inited + 40) = v58;
        if (*(void *)(v49[4] + 16))
        {
          sub_1A685CF34(v198);
          uint64_t v59 = MEMORY[0x1E4FBC870];
          if (v60) {
            uint64_t v59 = swift_bridgeObjectRetain();
          }
        }
        else
        {
          uint64_t v59 = MEMORY[0x1E4FBC870];
        }
        unsigned __int8 v223 = (void *)inited;
        sub_1A68600D4(v59);
        uint64_t v61 = sub_1A67610CC((uint64_t)v223);
        swift_bridgeObjectRelease();
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        unsigned __int8 v223 = (void *)v49[4];
        v49[4] = 0x8000000000000000;
        sub_1A685F294(v61, v198, v62);
        v49[4] = v223;
        swift_bridgeObjectRelease();
        uint64_t v63 = swift_initStackObject();
        *(_OWORD *)(v63 + 16) = xmmword_1A689DC40;
        *(void *)(v63 + 32) = sub_1A68920A0();
        *(void *)(v63 + 40) = v64;
        if (*(void *)(v49[5] + 16))
        {
          sub_1A685CEC8(v17);
          uint64_t v8 = MEMORY[0x1E4FBC870];
          int64_t v5 = v175;
          uint64_t v1 = v177;
          if (v65) {
            uint64_t v8 = swift_bridgeObjectRetain();
          }
        }
        else
        {
          uint64_t v8 = MEMORY[0x1E4FBC870];
          int64_t v5 = v175;
          uint64_t v1 = v177;
        }
        uint64_t v225 = v63;
        sub_1A68600D4(v8);
        uint64_t v9 = sub_1A67610CC(v225);
        swift_bridgeObjectRelease();
        char v10 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v225 = v49[5];
        v49[5] = 0x8000000000000000;
        sub_1A685F15C(v9, v17, v10);
        v49[5] = v225;
        swift_bridgeObjectRelease();
        ((void (*)(void *, void))v196)(v221, 0);
        swift_bridgeObjectRelease();
      }
      else
      {
        ((void (*)(void *, void))v48)(v221, 0);

        swift_bridgeObjectRelease();
        int64_t v5 = v175;
        uint64_t v1 = v177;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v167;
    }
  }
  int64_t v13 = v7 + 1;
  if (__OFADD__(v7, 1)) {
    goto LABEL_176;
  }
  if (v13 >= v5) {
    goto LABEL_59;
  }
  unint64_t v14 = *(void *)(v1 + 8 * v13);
  ++v7;
  if (v14) {
    goto LABEL_22;
  }
  int64_t v7 = v13 + 1;
  if (v13 + 1 >= v5) {
    goto LABEL_59;
  }
  unint64_t v14 = *(void *)(v1 + 8 * v7);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v7 = v13 + 2;
  if (v13 + 2 >= v5) {
    goto LABEL_59;
  }
  unint64_t v14 = *(void *)(v1 + 8 * v7);
  if (v14)
  {
LABEL_22:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_23;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v5) {
    goto LABEL_59;
  }
  unint64_t v14 = *(void *)(v1 + 8 * v15);
  if (v14)
  {
    int64_t v7 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_182;
    }
    if (v7 >= v5) {
      break;
    }
    unint64_t v14 = *(void *)(v1 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_59:
  uint64_t v66 = v6;
  swift_release();
  unsigned __int8 v223 = (void *)v66;
  unint64_t v164 = v222 + 64;
  unint64_t v166 = v222;
  uint64_t v67 = 1 << *(unsigned char *)(v222 + 32);
  if (v67 < 64) {
    uint64_t v68 = ~(-1 << v67);
  }
  else {
    uint64_t v68 = -1;
  }
  unint64_t v69 = v68 & *(void *)(v222 + 64);
  int64_t v165 = (unint64_t)(v67 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v70 = 0;
  while (2)
  {
    if (v69)
    {
      unint64_t v71 = __clz(__rbit64(v69));
      v69 &= v69 - 1;
      unint64_t v72 = v71 | (v70 << 6);
      goto LABEL_81;
    }
    int64_t v73 = v70 + 1;
    if (__OFADD__(v70, 1)) {
      goto LABEL_178;
    }
    if (v73 >= v165) {
      goto LABEL_172;
    }
    unint64_t v74 = *(void *)(v164 + 8 * v73);
    ++v70;
    if (v74) {
      goto LABEL_80;
    }
    int64_t v70 = v73 + 1;
    if (v73 + 1 >= v165) {
      goto LABEL_172;
    }
    unint64_t v74 = *(void *)(v164 + 8 * v70);
    if (v74) {
      goto LABEL_80;
    }
    int64_t v70 = v73 + 2;
    if (v73 + 2 >= v165) {
      goto LABEL_172;
    }
    unint64_t v74 = *(void *)(v164 + 8 * v70);
    if (v74)
    {
LABEL_80:
      unint64_t v69 = (v74 - 1) & v74;
      unint64_t v72 = __clz(__rbit64(v74)) + (v70 << 6);
LABEL_81:
      char v76 = (void *)(*(void *)(v166 + 56) + 48 * v72);
      uint64_t v77 = v76[2];
      uint64_t v78 = v76[4];
      uint64_t v170 = v76[3];
      uint64_t v79 = v76[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v80 = sub_1A685C9F4(v79);
      uint64_t v81 = v80;
      uint64_t v203 = *(void *)(v77 + 16);
      if (!v203)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_64:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        continue;
      }
      uint64_t v172 = v78;
      unint64_t v168 = v69;
      int64_t v169 = v70;
      uint64_t v188 = v77 + 32;
      uint64_t v204 = v80 + 56;
      swift_bridgeObjectRetain();
      unint64_t v82 = 0;
      uint64_t v171 = v77;
      uint64_t v201 = v81;
      while (1)
      {
        if (v82 >= *(void *)(v77 + 16))
        {
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          sub_1A6893150();
          __break(1u);
          JUMPOUT(0x1A685C9D8);
        }
        uint64_t v83 = (uint64_t)v223;
        if (v223[2])
        {
          long long v84 = (uint64_t *)(v188 + 16 * v82);
          uint64_t v85 = *v84;
          uint64_t v86 = v84[1];
          swift_bridgeObjectRetain_n();
          unint64_t v87 = sub_1A673F7AC(v85, v86);
          if (v88)
          {
            uint64_t v89 = *(void *)(v83 + 56) + 104 * v87;
            uint64_t v90 = *(void *)(v89 + 16);
            uint64_t v173 = *(void *)v89;
            uint64_t v174 = *(void *)(v89 + 24);
            uint64_t v91 = *(void *)(v89 + 32);
            char v202 = *(unsigned char *)(v89 + 40);
            char v176 = *(unsigned char *)(v89 + 41);
            uint64_t v178 = *(void *)(v89 + 48);
            int v92 = *(unsigned __int8 *)(v89 + 56);
            uint64_t v93 = *(void *)(v89 + 64);
            uint64_t v94 = *(void *)(v89 + 72);
            char v95 = *(void **)(v89 + 80);
            int v179 = *(_DWORD *)(v89 + 88);
            char v181 = *(unsigned char *)(v89 + 92);
            int v183 = *(_DWORD *)(v89 + 96);
            char v184 = *(unsigned char *)(v89 + 100);
            uint64_t v199 = *(void *)(v89 + 8);
            swift_bridgeObjectRetain();
            uint64_t v197 = v90;
            swift_bridgeObjectRetain();
            uint64_t v194 = v91;
            swift_bridgeObjectRetain();
            uint64_t v192 = v93;
            swift_bridgeObjectRetain();
            uint64_t v190 = v94;
            swift_bridgeObjectRetain();
            id v186 = v95;
            swift_bridgeObjectRelease();
            uint64_t v205 = MEMORY[0x1E4FBC860];
            sub_1A674CEE4();
            sub_1A6741AD0(&qword_1EB67A298);
            sub_1A685CFA0();
            sub_1A6892B90();
            char v200 = v92;
            switch(v92)
            {
              case 0:
                LOBYTE(v205) = 1;
                if (*(void *)(v201 + 16))
                {
                  sub_1A685F108();
                  uint64_t v96 = sub_1A6891F10();
                  uint64_t v97 = -1 << *(unsigned char *)(v201 + 32);
                  unint64_t v98 = v96 & ~v97;
                  if ((*(void *)(v204 + ((v98 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v98))
                  {
                    uint64_t v99 = ~v97;
                    sub_1A67F9784();
                    while (1)
                    {
                      LOBYTE(v225) = *(unsigned char *)(*(void *)(v201 + 48) + v98);
                      if (sub_1A6891FC0()) {
                        break;
                      }
                      unint64_t v98 = (v98 + 1) & v99;
                      if (((*(void *)(v204 + ((v98 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v98) & 1) == 0) {
                        goto LABEL_94;
                      }
                    }
                    uint64_t v115 = *(void *)sub_1A67F8E60();
                    uint64_t v205 = v115;
                    unint64_t v224 = v221[0];
                    sub_1A6892B20();
                    sub_1A6784078();
                    if ((sub_1A6891FC0() & 1) == 0)
                    {
                      unint64_t v224 = v115;
                      sub_1A6892B60();
                    }
                  }
LABEL_94:
                  uint64_t v100 = *(void *)(v201 + 16);
                  LOBYTE(v205) = 2;
                  if (v100)
                  {
                    uint64_t v101 = sub_1A6891F10();
                    uint64_t v102 = -1 << *(unsigned char *)(v201 + 32);
                    unint64_t v103 = v101 & ~v102;
                    if ((*(void *)(v204 + ((v103 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v103))
                    {
                      uint64_t v104 = ~v102;
                      sub_1A67F9784();
                      do
                      {
                        LOBYTE(v225) = *(unsigned char *)(*(void *)(v201 + 48) + v103);
                        if (sub_1A6891FC0())
                        {
                          uint64_t v109 = *(void *)sub_1A67F8E78();
                          uint64_t v205 = v109;
                          unint64_t v224 = v221[0];
                          goto LABEL_119;
                        }
                        unint64_t v103 = (v103 + 1) & v104;
                      }
                      while (((*(void *)(v204 + ((v103 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v103) & 1) != 0);
                    }
                  }
                }
                break;
              case 2:
                LOBYTE(v205) = 3;
                if (*(void *)(v201 + 16))
                {
                  sub_1A685F108();
                  uint64_t v110 = sub_1A6891F10();
                  uint64_t v111 = -1 << *(unsigned char *)(v201 + 32);
                  unint64_t v112 = v110 & ~v111;
                  if ((*(void *)(v204 + ((v112 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v112))
                  {
                    uint64_t v113 = ~v111;
                    sub_1A67F9784();
                    while (1)
                    {
                      LOBYTE(v225) = *(unsigned char *)(*(void *)(v201 + 48) + v112);
                      if (sub_1A6891FC0()) {
                        break;
                      }
                      unint64_t v112 = (v112 + 1) & v113;
                      if (((*(void *)(v204 + ((v112 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v112) & 1) == 0) {
                        goto LABEL_124;
                      }
                    }
                    swift_bridgeObjectRetain();
                    sub_1A685D184(v85, v86, (uint64_t)&v205);
                    swift_bridgeObjectRelease();
                    sub_1A673FF60(v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, v215);
                  }
                }
                break;
              case 5:
                LOBYTE(v224) = v202;
                LOBYTE(v222) = 2;
                sub_1A67AF214();
                sub_1A6892290();
                sub_1A6892290();
                if (v205 == v225)
                {
                  if (*(void *)(v172 + 16))
                  {
                    sub_1A685CF34(1);
                    if (v105)
                    {
                      uint64_t v106 = *(void *)sub_1A67F8E9C();
                      uint64_t v205 = v106;
                      unint64_t v224 = v221[0];
                      sub_1A6892B20();
                      sub_1A6784078();
                      if ((sub_1A6891FC0() & 1) == 0)
                      {
                        unint64_t v224 = v106;
                        sub_1A6892B60();
                      }
                    }
                  }
                }
                char v107 = (uint64_t *)sub_1A67F8DD0();
                uint64_t v205 = *v107;
                uint64_t v225 = v170;
                if (sub_1A6892B10())
                {
                  uint64_t v108 = *(void *)sub_1A67F8E48();
                  uint64_t v205 = v108;
                  unint64_t v224 = v221[0];
                  sub_1A6892B20();
                  sub_1A6784078();
                  if ((sub_1A6891FC0() & 1) == 0)
                  {
                    unint64_t v224 = v108;
                    sub_1A6892B60();
                  }
                  LOBYTE(v224) = v202;
                  LOBYTE(v222) = 2;
                  sub_1A6892290();
                  sub_1A6892290();
                  if (v205 == v225)
                  {
                    uint64_t v109 = *v107;
                    uint64_t v205 = *v107;
                    unint64_t v224 = v221[0];
                    sub_1A6892B20();
                    if ((sub_1A6891FC0() & 1) == 0) {
                      goto LABEL_120;
                    }
                  }
                }
                break;
              case 6:
                swift_bridgeObjectRetain();
                uint64_t v114 = *(void *)(sub_1A685CFFC((uint64_t)&unk_1EFB83438, v201) + 16);
                swift_release();
                if (v114)
                {
                  uint64_t v109 = *(void *)sub_1A67F7FE8();
                  uint64_t v205 = v109;
                  unint64_t v224 = v221[0];
LABEL_119:
                  sub_1A6892B20();
                  sub_1A6784078();
                  if ((sub_1A6891FC0() & 1) == 0)
                  {
LABEL_120:
                    unint64_t v224 = v109;
                    sub_1A6892B60();
                  }
                }
                break;
              default:
                break;
            }
LABEL_124:
            uint64_t v116 = sub_1A685CBF0(&v205, v85, v86);
            if (*(void *)(v117 + 8))
            {
              uint64_t v225 = v221[0];
              sub_1A67B83BC();
              sub_1A6892290();
              sub_1A6892290();
              unint64_t v224 = v220 | v222;
              sub_1A67B8410();
              sub_1A68932E0();
            }
            ((void (*)(uint64_t *, void))v116)(&v205, 0);
            swift_bridgeObjectRelease();
            LOBYTE(v224) = v202;
            LOBYTE(v222) = 1;
            sub_1A67AF214();
            sub_1A6892290();
            sub_1A6892290();
            if (v205 == v225)
            {
              if (!*(void *)(v172 + 16)) {
                goto LABEL_150;
              }
              unint64_t v118 = sub_1A685CF34(2);
              if ((v119 & 1) == 0) {
                goto LABEL_150;
              }
              uint64_t v120 = *(void *)(*(void *)(v172 + 56) + 8 * v118);
              char v121 = *(unsigned char *)(v120 + 32);
              uint64_t v122 = 1 << v121;
              unint64_t v123 = *(void *)(v120 + 56);
              if (!v123)
              {
                unsigned int v136 = v121 & 0x3F;
                if (v136 >= 7)
                {
                  unint64_t v123 = *(void *)(v120 + 64);
                  if (v123)
                  {
                    uint64_t v124 = 1;
                    goto LABEL_131;
                  }
                  if (v136 >= 8)
                  {
                    unint64_t v123 = *(void *)(v120 + 72);
                    if (v123)
                    {
                      uint64_t v124 = 2;
                    }
                    else
                    {
                      unint64_t v123 = *(void *)(v120 + 80);
                      if (v123)
                      {
                        uint64_t v124 = 3;
                      }
                      else
                      {
                        uint64_t v159 = 0;
                        unint64_t v160 = (unint64_t)(v122 + 63) >> 6;
                        if (v160 <= 4) {
                          unint64_t v160 = 4;
                        }
                        unint64_t v161 = v160 - 4;
                        do
                        {
                          if (v161 == v159) {
                            goto LABEL_150;
                          }
                          unint64_t v123 = *(void *)(v120 + 88 + 8 * v159++);
                        }
                        while (!v123);
                        uint64_t v124 = v159 + 3;
                      }
                    }
                    goto LABEL_131;
                  }
                }
                goto LABEL_150;
              }
              uint64_t v124 = 0;
LABEL_131:
              unint64_t v125 = __clz(__rbit64(v123));
              uint64_t v126 = v125 + (v124 << 6);
              if (v126 == v122) {
                goto LABEL_150;
              }
              if (v126 < 0 || v126 >= v122) {
                goto LABEL_179;
              }
              if (((*(void *)(v120 + 56 + (((unint64_t)v126 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v125) & 1) == 0) {
                goto LABEL_180;
              }
              if (!*(void *)(v167 + 16)) {
                goto LABEL_150;
              }
              uint64_t v127 = (uint64_t *)(*(void *)(v120 + 48) + 16 * v126);
              uint64_t v129 = *v127;
              uint64_t v128 = v127[1];
              swift_bridgeObjectRetain();
              unint64_t v130 = sub_1A673F7AC(v129, v128);
              if (v131)
              {
                uint64_t v132 = *(void *)(v167 + 56) + 104 * v130;
                uint64_t v163 = *(void *)(v132 + 48);
                uint64_t v133 = *(void **)(v132 + 80);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v134 = v133;
                swift_bridgeObjectRelease();
                uint64_t v205 = *(void *)sub_1A67F8E18();
                uint64_t v225 = v163;
                if (sub_1A6892B10())
                {
                  char v135 = TTSSpeechUnitTestingMode();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v135 & 1) == 0) {
                    goto LABEL_139;
                  }
LABEL_150:
                  uint64_t v205 = v173;
                  uint64_t v206 = v199;
                  uint64_t v207 = v197;
                  uint64_t v208 = v174;
                  uint64_t v209 = v194;
                  LOBYTE(v210) = v202;
                  BYTE1(v210) = v176;
                  uint64_t v211 = v178;
                  LOBYTE(v212) = v92;
                  uint64_t v213 = v192;
                  uint64_t v214 = v94;
                  uint64_t v215 = v186;
                  int v216 = v179;
                  char v217 = v181;
                  int v218 = v183;
                  char v219 = v184;
                  CoreSynthesizer.Voice.cannonicId.getter();
                  uint64_t v137 = sub_1A68920A0();
                  uint64_t v139 = v138;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v140 = v139;
                  id v141 = v186;
                  uint64_t v142 = (uint64_t)v223;
                  char v143 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v205 = v142;
                  unsigned __int8 v223 = (void *)0x8000000000000000;
                  unint64_t v145 = sub_1A673F7AC(v137, v140);
                  uint64_t v146 = *(void *)(v142 + 16);
                  BOOL v147 = (v144 & 1) == 0;
                  uint64_t v148 = v146 + v147;
                  if (__OFADD__(v146, v147)) {
                    goto LABEL_174;
                  }
                  char v149 = v144;
                  if (*(void *)(v142 + 24) >= v148)
                  {
                    if (v143)
                    {
                      uint64_t v152 = (void *)v205;
                      if ((v144 & 1) == 0) {
                        goto LABEL_154;
                      }
                    }
                    else
                    {
                      sub_1A6782AFC();
                      uint64_t v152 = (void *)v205;
                      if ((v149 & 1) == 0) {
                        goto LABEL_154;
                      }
                    }
                  }
                  else
                  {
                    sub_1A678252C(v148, v143);
                    unint64_t v150 = sub_1A673F7AC(v137, v140);
                    if ((v149 & 1) != (v151 & 1)) {
                      goto LABEL_184;
                    }
                    unint64_t v145 = v150;
                    uint64_t v152 = (void *)v205;
                    if ((v149 & 1) == 0)
                    {
LABEL_154:
                      v152[(v145 >> 6) + 8] |= 1 << v145;
                      v153 = (uint64_t *)(v152[6] + 16 * v145);
                      uint64_t *v153 = v137;
                      v153[1] = v140;
                      uint64_t v154 = v152[7] + 104 * v145;
                      *(void *)uint64_t v154 = v173;
                      *(void *)(v154 + 8) = v199;
                      *(void *)(v154 + 16) = v197;
                      *(void *)(v154 + 24) = v174;
                      *(void *)(v154 + 32) = v194;
                      *(unsigned char *)(v154 + 40) = v202;
                      *(unsigned char *)(v154 + 41) = v176;
                      *(void *)(v154 + 48) = v178;
                      *(unsigned char *)(v154 + 56) = v200;
                      *(void *)(v154 + 64) = v192;
                      *(void *)(v154 + 72) = v190;
                      *(void *)(v154 + 80) = v141;
                      *(_DWORD *)(v154 + 88) = v179;
                      *(unsigned char *)(v154 + 92) = v181;
                      *(_DWORD *)(v154 + 96) = v183;
                      *(unsigned char *)(v154 + 100) = v184;
                      uint64_t v155 = v152[2];
                      BOOL v44 = __OFADD__(v155, 1);
                      uint64_t v156 = v155 + 1;
                      if (v44) {
                        goto LABEL_175;
                      }
                      v152[2] = v156;
                      swift_bridgeObjectRetain();
LABEL_159:
                      unsigned __int8 v223 = v152;

                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
LABEL_160:
                      uint64_t v77 = v171;
                      goto LABEL_84;
                    }
                  }
                  id v157 = v141;
                  uint64_t v158 = v152[7] + 104 * v145;

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  *(void *)uint64_t v158 = v173;
                  *(void *)(v158 + 8) = v199;
                  *(void *)(v158 + 16) = v197;
                  *(void *)(v158 + 24) = v174;
                  *(void *)(v158 + 32) = v194;
                  *(unsigned char *)(v158 + 40) = v202;
                  *(unsigned char *)(v158 + 41) = v176;
                  *(void *)(v158 + 48) = v178;
                  *(unsigned char *)(v158 + 56) = v200;
                  *(void *)(v158 + 64) = v192;
                  *(void *)(v158 + 72) = v190;
                  *(void *)(v158 + 80) = v157;
                  *(_DWORD *)(v158 + 88) = v179;
                  *(unsigned char *)(v158 + 92) = v181;
                  *(_DWORD *)(v158 + 96) = v183;
                  *(unsigned char *)(v158 + 100) = v184;
                  id v141 = v157;
                  goto LABEL_159;
                }

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              goto LABEL_150;
            }
LABEL_139:

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_160;
          }
          swift_bridgeObjectRelease_n();
        }
LABEL_84:
        if (++v82 == v203)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v69 = v168;
          int64_t v70 = v169;
          goto LABEL_64;
        }
      }
    }
    break;
  }
  int64_t v75 = v73 + 3;
  if (v75 >= v165) {
    goto LABEL_172;
  }
  unint64_t v74 = *(void *)(v164 + 8 * v75);
  if (v74)
  {
    int64_t v70 = v75;
    goto LABEL_80;
  }
  while (1)
  {
    int64_t v70 = v75 + 1;
    if (__OFADD__(v75, 1)) {
      goto LABEL_183;
    }
    if (v70 >= v165) {
      break;
    }
    unint64_t v74 = *(void *)(v164 + 8 * v70);
    ++v75;
    if (v74) {
      goto LABEL_80;
    }
  }
LABEL_172:
  swift_release();
  return (uint64_t)v223;
}

uint64_t sub_1A685C9F4(uint64_t a1)
{
  sub_1A685F108();
  uint64_t result = sub_1A6892700();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_1A685CD68(&v14, *(unsigned char *)(*(void *)(a1 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t (*sub_1A685CB6C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  void v6[5] = sub_1A685D2F0(v6, a2, a3);
  return sub_1A685CBEC;
}

uint64_t (*sub_1A685CBF0(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  void v6[5] = sub_1A685D3A0(v6, a2, a3);
  return sub_1A685CBEC;
}

void sub_1A685CC70(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t CoreSynthesizer.Voice.talentGroupKey.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  if ((v1 - 7) < 4 || v1 == 4) {
    return 0;
  }
  if (v1 == 5)
  {
    sub_1A68920A0();
    uint64_t v4 = 0x65636E657265635FLL;
  }
  else
  {
    sub_1A68920A0();
    uint64_t v4 = 0x5F697269735FLL;
  }
  uint64_t v5 = v4;
  sub_1A6892150();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A685CD68(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t v4 = *v2;
  sub_1A685F108();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A6891F10();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    sub_1A67F9784();
    while ((sub_1A6891FC0() & 1) == 0)
    {
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    unsigned __int8 v10 = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int8 v10 = a2;
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1A685FB2C(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v10;
  return result;
}

unint64_t sub_1A685CEC8(uint64_t a1)
{
  sub_1A685F108();
  uint64_t v2 = sub_1A6891F10();
  return sub_1A685E640(a1, v2);
}

unint64_t sub_1A685CF34(uint64_t a1)
{
  sub_1A685FAD8();
  uint64_t v2 = sub_1A6891F10();
  return sub_1A685E708(a1, v2);
}

unint64_t sub_1A685CFA0()
{
  unint64_t result = qword_1EB67A2A0;
  if (!qword_1EB67A2A0)
  {
    sub_1A6750AC4(&qword_1EB67A298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB67A2A0);
  }
  return result;
}

uint64_t sub_1A685CFFC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1A685F6A4((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1A685F6A4((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1AD0C1C50](v8, -1, -1);
  }
  return v7;
}

double sub_1A685D184@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1A673F7AC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v24 = *v4;
    *char v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A6782AFC();
      uint64_t v11 = v24;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 104 * v8;
    uint64_t v13 = *(void *)(v12 + 24);
    uint64_t v14 = *(void *)(v12 + 32);
    __int16 v15 = *(_WORD *)(v12 + 40);
    uint64_t v16 = *(void *)(v12 + 48);
    char v17 = *(unsigned char *)(v12 + 56);
    uint64_t v18 = *(void *)(v12 + 80);
    int v19 = *(_DWORD *)(v12 + 88);
    char v20 = *(unsigned char *)(v12 + 92);
    int v21 = *(_DWORD *)(v12 + 96);
    char v22 = *(unsigned char *)(v12 + 100);
    *(void *)a3 = *(void *)v12;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(v12 + 8);
    *(void *)(a3 + 24) = v13;
    *(void *)(a3 + 32) = v14;
    *(_WORD *)(a3 + 40) = v15;
    *(void *)(a3 + 48) = v16;
    *(unsigned char *)(a3 + 56) = v17;
    *(_OWORD *)(a3 + 64) = *(_OWORD *)(v12 + 64);
    *(void *)(a3 + 80) = v18;
    *(_DWORD *)(a3 + 88) = v19;
    *(unsigned char *)(a3 + 92) = v20;
    *(_DWORD *)(a3 + 96) = v21;
    *(unsigned char *)(a3 + 100) = v22;
    sub_1A685EF14(v8, v11);
    *char v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 93) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t (*sub_1A685D2F0(void *a1, uint64_t a2, uint64_t a3))()
{
  size_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1A685D8EC(v6);
  v6[10] = sub_1A685D4C0(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1A685D39C;
}

uint64_t (*sub_1A685D3A0(void *a1, uint64_t a2, uint64_t a3))()
{
  size_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1A685D91C(v6);
  v6[10] = sub_1A685D68C(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1A685D39C;
}

void sub_1A685D44C(uint64_t a1)
{
  int v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_1A685D4C0(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  unint64_t v5 = v4;
  unsigned __int8 v10 = (char *)malloc(0x58uLL);
  *a1 = v10;
  *((void *)v10 + 7) = a3;
  *((void *)v10 + 8) = v4;
  *((void *)v10 + 6) = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1A673F7AC(a2, a3);
  v10[80] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 9) = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + 48 * v13;
        uint64_t v20 = *(void *)v19;
        long long v21 = *(_OWORD *)(v19 + 8);
        uint64_t v22 = *(void *)(v19 + 24);
        long long v23 = *(_OWORD *)(v19 + 32);
LABEL_12:
        *(void *)unsigned __int8 v10 = v20;
        *(_OWORD *)(v10 + 8) = v21;
        *((void *)v10 + 3) = v22;
        *((_OWORD *)v10 + 2) = v23;
        return sub_1A685D634;
      }
LABEL_11:
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      long long v21 = 0uLL;
      long long v23 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1A685EB18();
      goto LABEL_7;
    }
    sub_1A685DF68(v16, a4 & 1);
    unint64_t v24 = sub_1A673F7AC(a2, a3);
    if ((v17 & 1) == (v25 & 1))
    {
      unint64_t v13 = v24;
      *((void *)v10 + 9) = v24;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  double result = (void (*)(uint64_t **))sub_1A6893150();
  __break(1u);
  return result;
}

void sub_1A685D634(uint64_t **a1)
{
  int v1 = *a1;
  sub_1A685E2DC(*a1, *((unsigned char *)*a1 + 80), (uint64_t *)(*a1)[8], (*a1)[9], (*a1)[6], (*a1)[7]);
  sub_1A68604A0(*v1, v1[1]);

  free(v1);
}

void (*sub_1A685D68C(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t *a1)
{
  unint64_t v5 = v4;
  unsigned __int8 v10 = (char *)malloc(0x88uLL);
  *a1 = v10;
  *((void *)v10 + 14) = a3;
  *((void *)v10 + 15) = v4;
  *((void *)v10 + 13) = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1A673F7AC(a2, a3);
  v10[101] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 16) = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + 104 * v13;
        uint64_t v21 = *(void *)(v19 + 24);
        uint64_t v20 = *(void *)(v19 + 32);
        uint64_t v22 = *(void *)(v19 + 48);
        uint64_t v23 = *(unsigned __int8 *)(v19 + 56);
        long long v24 = *(_OWORD *)(v19 + 64);
        uint64_t v25 = *(void *)(v19 + 80);
        uint64_t v26 = *(unsigned __int16 *)(v19 + 40);
        uint64_t v27 = 0x100000000;
        if (*(unsigned char *)(v19 + 92)) {
          uint64_t v28 = 0x100000000;
        }
        else {
          uint64_t v28 = 0;
        }
        uint64_t v29 = v28 | *(unsigned int *)(v19 + 88);
        if (!*(unsigned char *)(v19 + 100)) {
          uint64_t v27 = 0;
        }
        uint64_t v30 = v27 | *(unsigned int *)(v19 + 96);
        long long v31 = *(_OWORD *)(v19 + 8);
        *(void *)unsigned __int8 v10 = *(void *)v19;
        *(_OWORD *)(v10 + 8) = v31;
        *((void *)v10 + 3) = v21;
        goto LABEL_17;
      }
LABEL_16:
      uint64_t v20 = 0;
      uint64_t v26 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v25 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      long long v24 = 0uLL;
      *(_OWORD *)unsigned __int8 v10 = 0u;
      *((_OWORD *)v10 + 1) = 0u;
LABEL_17:
      *((void *)v10 + 4) = v20;
      *((void *)v10 + 5) = v26;
      *((void *)v10 + 6) = v22;
      *((void *)v10 + 7) = v23;
      *((_OWORD *)v10 + 4) = v24;
      *((void *)v10 + 10) = v25;
      *((void *)v10 + 11) = v29;
      *((_DWORD *)v10 + 24) = v30;
      v10[100] = BYTE4(v30);
      return sub_1A685D868;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1A6782AFC();
      goto LABEL_7;
    }
    sub_1A678252C(v16, a4 & 1);
    unint64_t v32 = sub_1A673F7AC(a2, a3);
    if ((v17 & 1) == (v33 & 1))
    {
      unint64_t v13 = v32;
      *((void *)v10 + 16) = v32;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
  }
  double result = (void (*)(uint64_t *))sub_1A6893150();
  __break(1u);
  return result;
}

void sub_1A685D868(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_1A685E400(*a1, *(unsigned char *)(*a1 + 101), *(uint64_t **)(*a1 + 120), *(void *)(*a1 + 128), *(void *)(*a1 + 104), *(void *)(*a1 + 112));
  sub_1A673FF60(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80));

  free((void *)v1);
}

uint64_t (*sub_1A685D8EC(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1A68607C8;
}

uint64_t (*sub_1A685D91C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1A685D94C;
}

uint64_t sub_1A685D94C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1A685D958(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C1710);
  char v33 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v31) {
      break;
    }
    uint64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v32 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v31)
        {
LABEL_33:
          swift_release();
          if ((v33 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v32 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v31) {
              goto LABEL_33;
            }
            unint64_t v22 = *(void *)(v32 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((v33 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A685F108();
    uint64_t result = sub_1A6891F10();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v21 = (void *)(v5 + 64);
  if ((v33 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v21 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A685DC60(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C1718);
  char v33 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v31) {
      break;
    }
    uint64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v32 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v31)
        {
LABEL_33:
          swift_release();
          if ((v33 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v32 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v31) {
              goto LABEL_33;
            }
            unint64_t v22 = *(void *)(v32 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((v33 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A685FAD8();
    uint64_t result = sub_1A6891F10();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v21 = (void *)(v5 + 64);
  if ((v33 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v21 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A685DF68(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A6741AD0(&qword_1E96C1720);
  char v40 = a2;
  uint64_t v6 = sub_1A6892ED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v39 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v38) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v39 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 48 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 24);
    long long v41 = *(_OWORD *)(v33 + 32);
    long long v42 = *(_OWORD *)(v33 + 8);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A6893200();
    sub_1A68920F0();
    uint64_t result = sub_1A6893250();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
    *(void *)uint64_t v19 = v34;
    *(_OWORD *)(v19 + 8) = v42;
    *(void *)(v19 + 24) = v35;
    *(_OWORD *)(v19 + 32) = v41;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  int64_t v23 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t *sub_1A685E2DC(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *result;
  uint64_t v8 = result[1];
  uint64_t v10 = result[2];
  uint64_t v11 = result[3];
  uint64_t v12 = result[4];
  uint64_t v13 = result[5];
  if (v8)
  {
    uint64_t v14 = (void *)*a3;
    if (a2)
    {
      unint64_t v15 = (uint64_t *)(v14[7] + 48 * a4);
      *unint64_t v15 = v9;
      v15[1] = v8;
      v15[2] = v10;
      long long v15[3] = v11;
      v15[4] = v12;
      v15[5] = v13;
    }
    else
    {
      v14[(a4 >> 6) + 8] |= 1 << a4;
      unint64_t v16 = (void *)(v14[6] + 16 * a4);
      *unint64_t v16 = a5;
      v16[1] = a6;
      unint64_t v17 = (uint64_t *)(v14[7] + 48 * a4);
      uint64_t *v17 = v9;
      v17[1] = v8;
      v17[2] = v10;
      v17[3] = v11;
      v17[4] = v12;
      v17[5] = v13;
      uint64_t v18 = v14[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        return result;
      }
      v14[2] = v20;
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1A685ED28(a4, *a3);
  }

  return (uint64_t *)sub_1A6860504(v9, v8);
}

void sub_1A685E400(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  unint64_t v18 = *(unsigned int *)(a1 + 96) | ((unint64_t)*(unsigned __int8 *)(a1 + 100) << 32);
  BOOL v19 = *(void **)(a1 + 80);
  uint64_t v20 = *(void *)(a1 + 88);
  if (!v9)
  {
    if (a2)
    {
      uint64_t v40 = *(void *)(a1 + 16);
      uint64_t v42 = *(void *)a1;
      uint64_t v38 = *(void *)(a1 + 72);
      uint64_t v39 = *(void *)(a1 + 24);
      uint64_t v37 = *(void **)(a1 + 80);
      swift_arrayDestroy();
      sub_1A685EF14(a4, *a3);
      BOOL v19 = v37;
      uint64_t v16 = v38;
      uint64_t v11 = v39;
      uint64_t v10 = v40;
      uint64_t v8 = v42;
    }
    goto LABEL_8;
  }
  char v45 = BYTE4(v20) & 1;
  char v44 = BYTE4(v18) & 1;
  unint64_t v21 = (void *)*a3;
  if (a2)
  {
    uint64_t v22 = v21[7] + 104 * a4;
    *(void *)uint64_t v22 = v8;
    *(void *)(v22 + 8) = v9;
    *(void *)(v22 + 16) = v10;
    *(void *)(v22 + 24) = v11;
    *(void *)(v22 + 32) = v13;
    *(_WORD *)(v22 + 40) = v12;
    *(void *)(v22 + 48) = v15;
    *(unsigned char *)(v22 + 56) = v14;
    *(void *)(v22 + 64) = v17;
    *(void *)(v22 + 72) = v16;
    *(void *)(v22 + 80) = v19;
    *(_DWORD *)(v22 + 88) = v20;
    *(unsigned char *)(v22 + 92) = v45;
    *(_DWORD *)(v22 + 96) = v18;
    *(unsigned char *)(v22 + 100) = v44;
LABEL_8:
    sub_1A673D140(v8, v9, v10, v11, v13, v12, v15, v14, v17, v16, v19);
    return;
  }
  v21[(a4 >> 6) + 8] |= 1 << a4;
  int64_t v23 = (void *)(v21[6] + 16 * a4);
  *int64_t v23 = a5;
  v23[1] = a6;
  uint64_t v24 = v21[7] + 104 * a4;
  *(void *)uint64_t v24 = v8;
  *(void *)(v24 + 8) = v9;
  *(void *)(v24 + 16) = v10;
  *(void *)(v24 + 24) = v11;
  *(void *)(v24 + 32) = v13;
  *(_WORD *)(v24 + 40) = v12;
  *(void *)(v24 + 48) = v15;
  *(unsigned char *)(v24 + 56) = v14;
  *(void *)(v24 + 64) = v17;
  *(void *)(v24 + 72) = v16;
  *(void *)(v24 + 80) = v19;
  *(_DWORD *)(v24 + 88) = v20;
  *(unsigned char *)(v24 + 92) = v45;
  *(_DWORD *)(v24 + 96) = v18;
  *(unsigned char *)(v24 + 100) = v44;
  uint64_t v25 = v21[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    void v21[2] = v27;
    uint64_t v28 = v8;
    uint64_t v29 = v10;
    uint64_t v41 = v17;
    uint64_t v43 = v12;
    uint64_t v30 = v15;
    uint64_t v31 = v14;
    uint64_t v32 = v13;
    uint64_t v33 = v11;
    uint64_t v34 = v16;
    uint64_t v35 = v9;
    uint64_t v36 = v19;
    swift_bridgeObjectRetain();
    BOOL v19 = v36;
    uint64_t v9 = v35;
    uint64_t v16 = v34;
    uint64_t v11 = v33;
    uint64_t v13 = v32;
    uint64_t v14 = v31;
    uint64_t v15 = v30;
    uint64_t v17 = v41;
    uint64_t v12 = v43;
    uint64_t v10 = v29;
    uint64_t v8 = v28;
    goto LABEL_8;
  }
  __break(1u);
}

unint64_t sub_1A685E640(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_1A67F9784();
    do
    {
      if (sub_1A6891FC0()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1A685E708(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_1A67840CC();
    do
    {
      if (sub_1A6891FC0()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void *sub_1A685E7D0()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C1710);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A685E974()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C1718);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A685EB18()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C1720);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892EC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 24);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 8);
    long long v30 = *(_OWORD *)(v21 + 32);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(void *)(v26 + 24) = v23;
    *(_OWORD *)(v26 + 32) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1A685ED28(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A6892BA0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A6893200();
        swift_bridgeObjectRetain();
        sub_1A68920F0();
        uint64_t v11 = sub_1A6893250();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          unint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          int64_t v17 = (long long *)(v16 + 48 * v3);
          uint64_t v18 = (long long *)(v16 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 3))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            long long *v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A685EF14(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A6892BA0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A6893200();
        swift_bridgeObjectRetain();
        sub_1A68920F0();
        uint64_t v9 = sub_1A6893250();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 104 * v3;
          unint64_t v15 = (const void *)(v14 + 104 * v6);
          if (104 * v3 < (uint64_t)(104 * v6)
            || result >= (unint64_t)v15 + 104
            || (v16 = v3 == v6, int64_t v3 = v6, !v16))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x68uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A685F108()
{
  unint64_t result = qword_1E96C16B8;
  if (!qword_1E96C16B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C16B8);
  }
  return result;
}

uint64_t sub_1A685F15C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1A685CEC8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A685E7D0();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A685D958(result, a3 & 1);
  uint64_t result = sub_1A685CEC8(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1A6893150();
  __break(1u);
  return result;
}

uint64_t sub_1A685F294(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1A685CF34(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A685E974();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1A685DC60(result, a3 & 1);
  uint64_t result = sub_1A685CF34(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1A6893150();
  __break(1u);
  return result;
}

uint64_t sub_1A685F3CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C1708);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v27 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_1A685F108();
      uint64_t result = sub_1A6891F10();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A685F6A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v20 = *(void *)(a3 + 16);
  if (v20)
  {
    uint64_t v6 = a4 + 56;
    sub_1A685F108();
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    uint64_t v7 = 0;
    while (1)
    {
      uint64_t v10 = sub_1A6891F10();
      uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v12 = v10 & ~v11;
      if ((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
      {
        uint64_t v13 = ~v11;
        sub_1A67F9784();
        while ((sub_1A6891FC0() & 1) == 0)
        {
          unint64_t v12 = (v12 + 1) & v13;
          if (((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
            goto LABEL_4;
          }
        }
        uint64_t v8 = (v12 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v9 = *(unint64_t *)((char *)a1 + v8);
        *(unint64_t *)((char *)a1 + v8) = v9 | (1 << v12);
        if ((v9 & (1 << v12)) == 0 && __OFADD__(v18++, 1)) {
          break;
        }
      }
LABEL_4:
      if (++v7 == v20) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v5 = a2;
    uint64_t v15 = v18;
  }
  else
  {
    uint64_t v15 = 0;
  }
  swift_retain();
  return sub_1A685F858(a1, v5, v15, a4);
}

uint64_t sub_1A685F858(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1A6741AD0(&qword_1E96C1708);
  uint64_t result = sub_1A6892C10();
  uint64_t v6 = result;
  unint64_t v28 = a1;
  uint64_t v29 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v29)
      {
LABEL_37:
        swift_release();
        return v6;
      }
      unint64_t v16 = v28[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v29) {
          goto LABEL_37;
        }
        unint64_t v16 = v28[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v29) {
            goto LABEL_37;
          }
          unint64_t v16 = v28[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v29) {
              goto LABEL_37;
            }
            unint64_t v16 = v28[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v29) {
                  goto LABEL_37;
                }
                unint64_t v16 = v28[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    char v18 = *(unsigned char *)(*(void *)(a4 + 48) + v14);
    sub_1A685F108();
    uint64_t result = sub_1A6891F10();
    uint64_t v19 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v6 + 48) + v22) = v18;
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1A685FAD8()
{
  unint64_t result = qword_1E96C16C8;
  if (!qword_1E96C16C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96C16C8);
  }
  return result;
}

uint64_t sub_1A685FB2C(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A685F3CC();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1A685FCA0();
      goto LABEL_12;
    }
    sub_1A685FE34();
  }
  uint64_t v8 = *v3;
  sub_1A685F108();
  unint64_t result = sub_1A6891F10();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_1A67F9784();
    do
    {
      unint64_t result = sub_1A6891FC0();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v11 + 48) + a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  unint64_t result = sub_1A6893140();
  __break(1u);
  return result;
}

void *sub_1A685FCA0()
{
  uint64_t v1 = v0;
  sub_1A6741AD0(&qword_1E96C1708);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A6892BF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A685FE34()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A6741AD0(&qword_1E96C1708);
  uint64_t v3 = sub_1A6892C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1A685F108();
    uint64_t result = sub_1A6891F10();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A68600D4(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *v1;
  int64_t v5 = *((void *)*v1 + 2);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = *((void *)v4 + 3) >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_1A6757B94(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = *((void *)v4 + 3) >> 1;
  }
  uint64_t v11 = *((void *)v4 + 2);
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_1A67DBF70((uint64_t)v38, &v4[16 * v11 + 32], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = *((void *)v4 + 2);
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    *((void *)v4 + 2) = v16;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_1A674CF48();
    *uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = *((void *)v4 + 2);
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  uint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = *((void *)v4 + 3);
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    *((void *)v4 + 2) = v2;
  }
  uint64_t result = (uint64_t)sub_1A6757B94((char *)(v22 > 1), v2 + 1, 1, v4);
  uint64_t v4 = (char *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    BOOL v24 = &v4[16 * v2 + 32];
    *(void *)BOOL v24 = v21;
    *((void *)v24 + 1) = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              *((void *)v4 + 2) = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    uint64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1A68604A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A6860504(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A6860568()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1A68605B4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A6860614(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A68606B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A686071C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A6860764(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s11TalentGroupVMa()
{
  return sub_1A674B1C8();
}

id SSMLParserWrapper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SSMLParserWrapper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SSMLParserWrapper();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SSMLParserWrapper()
{
  return self;
}

id SSMLParserWrapper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SSMLParserWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void __swiftcall SSMLParserWrapper.generateSSML(fromString:)(SSMLParseResult *__return_ptr retstr, Swift::String fromString)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)SSMLParseResult), sel_init);
  TTSMarkup.SpeechDocument.init(_:)((uint64_t (*)(void))sub_1A6860A28, v4);
  TTSMarkup.SpeechDocument.asSSML()();
  sub_1A673E7EC((uint64_t)v4);
  uint64_t v3 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSsmlResult_, v3);
}

uint64_t sub_1A686098C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v7[3] = &type metadata for TTSMarkup.SpeechText;
  v7[4] = &protocol witness table for TTSMarkup.SpeechText;
  v7[0] = swift_allocObject();
  String.asSpeech.getter(a1, a2, v7[0] + 16);
  static TTSMarkup.SpeechBuilder.buildExpression(_:)(v8, v7);
  sub_1A6741A24((uint64_t)v7);
  static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)v8, a3);
  return sub_1A6741A24((uint64_t)v8);
}

uint64_t sub_1A6860A28@<X0>(uint64_t a1@<X8>)
{
  return sub_1A686098C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void __swiftcall SSMLParserWrapper.generateSSML(fromAVSpeechUtterance:)(SSMLParseResult *__return_ptr retstr, AVSpeechUtterance fromAVSpeechUtterance)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)SSMLParseResult), sel_init);
  AVSpeechUtterance.asSpeech.getter(v4);
  TTSMarkup.SpeechDocument.asSSML()();
  sub_1A673E7EC((uint64_t)v4);
  uint64_t v3 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSsmlResult_, v3);
}

id sub_1A6860D04(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_1A6892000();
  uint64_t v8 = v7;
  id v9 = a1;
  int64_t v10 = (void *)a4(v6, v8);

  swift_bridgeObjectRelease();

  return v10;
}

id _s12TextToSpeech17SSMLParserWrapperC016parseSSMLToPlainA0ySo15SSMLParseResultCSSF_0()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)SSMLParseResult), sel_init);
  swift_bridgeObjectRetain();
  TTSMarkup.SpeechDocument.init(ssml:)((uint64_t)v3);
  TTSMarkupSpeech.asPlainText()();
  uint64_t v1 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPlainTextResult_, v1);

  sub_1A673E7EC((uint64_t)v3);
  return v0;
}

id _s12TextToSpeech17SSMLParserWrapperC12generateSSML19fromPlainTalkStringSo15SSMLParseResultCSS_tF_0(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)SSMLParseResult), sel_init);
  type metadata accessor for PTParser();
  swift_bridgeObjectRetain();
  v5.n128_f64[0] = PTParser.__allocating_init(_:)(a1, a2);
  (*(void (**)(__n128))(*(void *)v6 + 464))(v5);
  TTSMarkup.SpeechDocument.init(_:)((uint64_t (*)(void))sub_1A68611A0, v9);
  TTSMarkup.SpeechDocument.asSSML()();
  sub_1A673E7EC((uint64_t)v9);
  uint64_t v7 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSsmlResult_, v7);
  swift_release();

  return v4;
}

id _s12TextToSpeech17SSMLParserWrapperC20parseSSMLToPlainTalkySo15SSMLParseResultCSSF_0()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)SSMLParseResult), sel_init);
  swift_bridgeObjectRetain();
  TTSMarkup.SpeechDocument.init(ssml:)((uint64_t)v7);
  float v1 = sub_1A67EE308();
  float v2 = sub_1A67EE314();
  float v3 = sub_1A67EE320();
  float v4 = sub_1A67EE32C();
  TTSMarkup.SpeechDocument.asPlainTalk(normalSpeakingRate:minSpeakingRate:maxSpeakingRate:defaultVoiceMidiPitch:)(v1, v2, v3, v4);
  __n128 v5 = (void *)sub_1A6891FD0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPlainTalkResult_, v5);

  sub_1A673E7EC((uint64_t)v7);
  return v0;
}

uint64_t sub_1A68611A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)v1 + 312))();
  long long v5[3] = sub_1A6741AD0(&qword_1E96C1D60);
  v5[4] = &protocol witness table for <A> [A];
  v5[0] = v3;
  static TTSMarkup.SpeechBuilder.buildExpression(_:)(v6, v5);
  sub_1A6741A24((uint64_t)v5);
  static TTSMarkup.SpeechBuilder.buildBlock(_:)((uint64_t)v6, a1);
  return sub_1A6741A24((uint64_t)v6);
}

uint64_t sub_1A686123C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A6861288()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1A686231C();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t sub_1A68612E8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_1A6861320(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1A6861344, 0, 0);
}

uint64_t sub_1A6861344()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  __n128 v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  *__n128 v5 = v0;
  v5[1] = sub_1A6861408;
  uint64_t v7 = v0[2];
  uint64_t v8 = MEMORY[0x1E4FBC248];
  uint64_t v9 = MEMORY[0x1E4FBC278];
  return sub_1A68636B0(v7, v4, v3, v6, v8, v9);
}

uint64_t sub_1A6861408()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A686153C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A686153C()
{
  return swift_unexpectedError();
}

uint64_t sub_1A6861558(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_1A6777774;
  void v6[2] = a1;
  return MEMORY[0x1F4188298](sub_1A6861344, 0, 0);
}

uint64_t sub_1A6861610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1A68616DC;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6);
}

uint64_t sub_1A68616DC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A68617D8()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A6861820()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_1A686182C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A6861848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A68612E8();
  uint64_t v4 = v3;
  uint64_t result = swift_release();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A686188C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncChannel()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A68618EC()
{
  swift_release();

  return swift_release();
}

void *sub_1A6861928(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1A6861960(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1A68619C0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AsyncChannel.Iterator()
{
  return sub_1A674B1C8();
}

uint64_t TTSAsyncThrowingChannel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1A686231C();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t TTSAsyncThrowingChannel.init()()
{
  *(void *)(v0 + 16) = sub_1A686231C();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t TTSAsyncThrowingChannel.send(_:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x1F4188298](sub_1A6861B3C, 0, 0);
}

uint64_t sub_1A6861B3C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  uint64_t v6 = v2[10];
  uint64_t v7 = v2[11];
  uint64_t v8 = v2[12];
  *uint64_t v5 = v0;
  v5[1] = sub_1A680BAE8;
  uint64_t v9 = v0[2];
  return sub_1A68623B8(v9, v4, v3, v6, v7, v8);
}

void TTSAsyncThrowingChannel.fail<>(_:)(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = a1;
  id v6 = a1;
  sub_1A6862E10((uint64_t)&v7, v4, v5, *(void *)(v3 + 80), *(void *)(v3 + 88), MEMORY[0x1E4FBC0F0]);
}

Swift::Void __swiftcall TTSAsyncThrowingChannel.finish()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = sub_1A6892A00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v9 - v5;
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))((char *)&v9 - v5, 1, 1, v2);
  sub_1A6862E10((uint64_t)v6, v7, v8, *(void *)(v1 + 80), v2, *(void *)(v1 + 96));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TTSAsyncThrowingChannel.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_retain();

  return swift_retain();
}

uint64_t TTSAsyncThrowingChannel.Iterator.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1A6861E3C, 0, 0);
}

uint64_t sub_1A6861E3C()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  *uint64_t v5 = v0;
  v5[1] = sub_1A680BAE8;
  uint64_t v9 = v0[2];
  return sub_1A68636B0(v9, v4, v3, v6, v7, v8);
}

uint64_t sub_1A6861EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_1A6750954;
  void v6[2] = a1;
  return MEMORY[0x1F4188298](sub_1A6861E3C, 0, 0);
}

uint64_t sub_1A6861FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1A686208C;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6);
}

uint64_t sub_1A686208C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t TTSAsyncThrowingChannel.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t TTSAsyncThrowingChannel.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A6862214()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_1A6862220()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A686223C@<X0>(void *a1@<X8>)
{
  TTSAsyncThrowingChannel.makeAsyncIterator()(a1);

  return swift_release();
}

uint64_t sub_1A6862274()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TTSAsyncThrowingChannel()
{
  return sub_1A674B1C8();
}

uint64_t method lookup function for TTSAsyncThrowingChannel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TTSAsyncThrowingChannel);
}

uint64_t dispatch thunk of TTSAsyncThrowingChannel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1A68622FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t type metadata accessor for TTSAsyncThrowingChannel.Iterator()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A686231C()
{
  v2[0] = 0;
  sub_1A67F12E4((uint64_t)v2, MEMORY[0x1E4FBC538]);
  sub_1A6866C5C(v2);
  uint64_t v0 = type metadata accessor for ChannelStateMachine();
  return sub_1A67F12E4((uint64_t)v2, v0);
}

uint64_t *sub_1A68623A4@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *result;
  *a2 = *result;
  *uint64_t result = v2 + 1;
  return result;
}

uint64_t sub_1A68623B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  void v6[5] = a2;
  uint64_t v7 = sub_1A6892A00();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A686245C, 0, 0);
}

uint64_t sub_1A686245C()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v3;
  long long v5[3] = v2;
  v5[4] = v1;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.SendAction();
  sub_1A67F1434((void (*)(uint64_t))sub_1A6862920, (uint64_t)v5, v4);
  swift_task_dealloc();
  uint64_t v6 = v0[3];
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v8 = v0[8];
      uint64_t v7 = v0[9];
      uint64_t v9 = v0[6];
      uint64_t v10 = v0[7];
      uint64_t v12 = v0[4];
      uint64_t v11 = v0[5];
      sub_1A67F1434((void (*)(uint64_t))sub_1A68623A4, 0, v9);
      uint64_t v13 = v0[2];
      uint64_t v14 = (void *)swift_task_alloc();
      v0[13] = v14;
      v14[2] = v10;
      long long v14[3] = v8;
      v14[4] = v7;
      v14[5] = v11;
      v14[6] = v9;
      v14[7] = v12;
      v14[8] = v13;
      BOOL v15 = (void *)swift_task_alloc();
      v0[14] = v15;
      v15[2] = v10;
      long long v15[3] = v8;
      v15[4] = v7;
      v15[5] = v11;
      v15[6] = v9;
      v15[7] = v13;
      uint64_t v16 = (void *)swift_task_alloc();
      v0[15] = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_1A686278C;
      return MEMORY[0x1F4188148]();
    }
    uint64_t v18 = v0[11];
    uint64_t v17 = v0[12];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[7];
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, void, uint64_t))(v21 + 16))(v17, v0[4], v20);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    (*(void (**)(void, uint64_t, uint64_t))(v18 + 32))(*(void *)(*(void *)(v6 + 64) + 40), v17, v19);
    swift_continuation_throwingResume();
  }
  swift_task_dealloc();
  unint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1A686278C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A68628C0, 0, 0);
}

uint64_t sub_1A68628C0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A6862920@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ChannelStateMachine();
  uint64_t result = sub_1A6864F4C();
  *a1 = result;
  return result;
}

uint64_t sub_1A6862970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[11] = a3;
  v8[12] = a4;
  v8[10] = a2;
  return MEMORY[0x1F4188298](sub_1A686299C, 0, 0);
}

uint64_t sub_1A686299C()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[10];
  v0[2] = v0;
  v0[3] = sub_1A677EE48;
  uint64_t v7 = swift_continuation_init();
  sub_1A6862B38(v7, v6, v5, v4, v3, v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A6862A6C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_1A677B9EC;
  *(void *)(v5 + 128) = v2;
  *(_OWORD *)(v5 + 112) = v7;
  *(void *)(v5 + 96) = v3;
  *(void *)(v5 + 104) = v4;
  *(_OWORD *)(v5 + 80) = v6;
  return MEMORY[0x1F4188298](sub_1A686299C, 0, 0);
}

void sub_1A6862B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1A6892A00();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v20[-v16];
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.SendSuspendedAction();
  sub_1A6892A00();
  sub_1A67F1434((void (*)(uint64_t))sub_1A6864BD8, (uint64_t)v20, a2);
  uint64_t v18 = v27;
  if (v27 != 2)
  {
    if (v27 != 1)
    {
      swift_continuation_throwingResume();
      if (!v18) {
        return;
      }
      uint64_t v19 = *(void *)(a5 - 8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v17, a3, a5);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, a5);
      (*(void (**)(void, unsigned char *, uint64_t))(v15 + 32))(*(void *)(*(void *)(v18 + 64) + 40), v17, v14);
    }
    swift_continuation_throwingResume();
  }
}

uint64_t sub_1A6862D5C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[7];
  void v6[2] = v0[2];
  v6[3] = v1;
  v6[4] = v2;
  void v6[5] = v4;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.SendCancelledAction();
  sub_1A67F1434((void (*)(uint64_t))sub_1A6864B44, (uint64_t)v6, v3);
  uint64_t result = v7;
  if (v7 >= 2) {
    return swift_continuation_throwingResume();
  }
  return result;
}

void sub_1A6862E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1A6892A00();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v15 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v26 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a1;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.FinishAction();
  sub_1A67F1434((void (*)(uint64_t))sub_1A6863288, (uint64_t)v28, a2);
  uint64_t v17 = v34;
  if (v34)
  {
    uint64_t v18 = *(void *)(v34 + 16);
    v25[0] = v35;
    v25[1] = 0;
    if (v18)
    {
      uint64_t v19 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (*(void *)(v17 + 8 * i + 32)) {
          swift_continuation_throwingResume();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = v19;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v21 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v14, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
    {
      uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v11);
      uint64_t v33 = v25[0];
      MEMORY[0x1F4188790](v22);
      v25[-4] = a4;
      v25[-3] = a5;
      v25[-2] = a6;
      sub_1A6892A00();
      sub_1A6750AC4(&qword_1E96C1520);
      sub_1A68925D0();
      sub_1A6892A00();
      sub_1A68923C0();
      swift_getWitnessTable();
      sub_1A6892280();
      sub_1A6863640(v17);
    }
    else
    {
      uint64_t v23 = v26;
      uint64_t v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v26, v14, a5);
      uint64_t v33 = v25[0];
      MEMORY[0x1F4188790](v24);
      v25[-4] = a4;
      v25[-3] = a5;
      v25[-2] = a6;
      v25[-1] = v23;
      sub_1A6892A00();
      sub_1A6750AC4(&qword_1E96C1520);
      sub_1A68925D0();
      sub_1A6892A00();
      sub_1A68923C0();
      swift_getWitnessTable();
      sub_1A6892280();
      sub_1A6863640(v17);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, a5);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A6863288@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = type metadata accessor for ChannelStateMachine();
  uint64_t result = sub_1A68659D0(v3, v4);
  *a1 = result;
  a1[1] = v6;
  return result;
}

uint64_t *sub_1A68632E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  uint64_t result = (uint64_t *)MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *result;
  if (*result)
  {
    (*(void (**)(char *))(v5 + 16))(v8);
    uint64_t v10 = sub_1A6893100();
    if (v10)
    {
      uint64_t v11 = v10;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a4);
    }
    else
    {
      uint64_t v11 = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12, v8, a4);
    }
    uint64_t v16 = v11;
    uint64_t v13 = sub_1A6892A00();
    uint64_t v14 = sub_1A6741AD0(&qword_1E96C1520);
    return (uint64_t *)sub_1A686345C((uint64_t)&v16, v9, v13, v14);
  }
  return result;
}

uint64_t sub_1A686345C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v6, a1, a4);

  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1A68634F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_1A6892A00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - v7;
  uint64_t v9 = *a1;
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v8, 1, 1, a2);
    (*(void (**)(void, char *, uint64_t))(v5 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v8, v4);
    return swift_continuation_throwingResume();
  }
  return result;
}

uint64_t sub_1A6863614(uint64_t *a1)
{
  return sub_1A68634F0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A6863640(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_1A6863680(uint64_t a1)
{
  return sub_1A68632E0(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_1A68636B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[7] = a5;
  v6[8] = a6;
  void v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = sub_1A6892A00();
  sub_1A6750AC4(&qword_1E96C1520);
  uint64_t v7 = sub_1A6893290();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  uint64_t Action = type metadata accessor for ChannelStateMachine.NextAction();
  v6[13] = Action;
  v6[14] = *(void *)(Action - 8);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A6863834, 0, 0);
}

uint64_t sub_1A6863834()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  uint64_t v9 = (void *)swift_task_alloc();
  void v9[2] = v7;
  v9[3] = v6;
  v9[4] = v5;
  type metadata accessor for ChannelStateMachine();
  sub_1A67F1434((void (*)(uint64_t))sub_1A6863E2C, (uint64_t)v9, v8);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_1A6750AC4(&qword_1E96C3988);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v1, 1, TupleTypeMetadata2) == 1)
  {
    uint64_t v12 = v0[7];
    uint64_t v11 = v0[8];
    uint64_t v13 = v0[5];
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[4];
    sub_1A67F1434((void (*)(uint64_t))sub_1A68623A4, 0, v13);
    uint64_t v16 = v0[2];
    uint64_t v17 = (void *)swift_task_alloc();
    v0[17] = v17;
    v17[2] = v14;
    v17[3] = v12;
    v17[4] = v11;
    v17[5] = v15;
    v17[6] = v13;
    v17[7] = v16;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    v18[2] = v14;
    v18[3] = v12;
    void v18[4] = v11;
    v18[5] = v15;
    v18[6] = v13;
    v18[7] = v16;
    uint64_t v19 = (void *)swift_task_alloc();
    v0[19] = v19;
    void *v19 = v0;
    v19[1] = sub_1A6863BB4;
    uint64_t v20 = v0[9];
    uint64_t v21 = v0[3];
    return MEMORY[0x1F4188148](v21, &unk_1E96C3998, v17, sub_1A6864A78, v18, 0, 0, v20);
  }
  else
  {
    uint64_t v22 = (char *)v0[15];
    uint64_t v23 = *(void *)v22;
    (*(void (**)(void, char *, void))(v0[11] + 32))(v0[12], &v22[*(int *)(TupleTypeMetadata2 + 48)], v0[10]);
    if (v23) {
      swift_continuation_throwingResume();
    }
    uint64_t v24 = v0[10];
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1A677FAB0(v24, WitnessTable);
    uint64_t v26 = v0[16];
    uint64_t v27 = v0[13];
    uint64_t v28 = v0[14];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
}

uint64_t sub_1A6863BB4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A6863D94;
  }
  else {
    uint64_t v2 = sub_1A6863D04;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A6863D04()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[16], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A6863D94()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[16], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A6863E2C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ChannelStateMachine();
  return sub_1A6866000(v2, a1);
}

uint64_t sub_1A6863E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  unsigned char v7[8] = a7;
  void v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1A6863EA8, 0, 0);
}

uint64_t sub_1A6863EA8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v3 + 32) = v1;
  *(_OWORD *)(v3 + 40) = v4;
  *(void *)(v3 + 56) = v2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E96C39A0 + dword_1E96C39A0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  sub_1A6892A00();
  *uint64_t v5 = v0;
  v5[1] = sub_1A6863FC0;
  uint64_t v6 = *(void *)(v0 + 16);
  return v8(v6, 0, 0, (uint64_t)sub_1A6864ACC, v3);
}

uint64_t sub_1A6863FC0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A68640FC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A68640FC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A6864160(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 40);
  long long v8 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_1A6750954;
  *(void *)(v6 + 64) = v4;
  *(_OWORD *)(v6 + 48) = v8;
  *(void *)(v6 + 40) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1A6863EA8, 0, 0);
}

uint64_t sub_1A6864234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a2;
  uint64_t v45 = sub_1A6892A00();
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v45);
  unint64_t v41 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int64_t v40 = (char *)&v39 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v42 = (char *)&v39 - v15;
  Suspendeduint64_t Action = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
  uint64_t v17 = sub_1A6892A00();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (uint64_t *)((char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v51 = a1;
  uint64_t v44 = a1;
  uint64_t v52 = a3;
  type metadata accessor for ChannelStateMachine();
  sub_1A67F1434((void (*)(uint64_t))sub_1A6864ADC, (uint64_t)v47, v46);
  (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(SuspendedAction - 8) + 48))(v21, 1, SuspendedAction) != 1)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v53 = *v21;
        uint64_t v25 = sub_1A6741AD0(&qword_1E96C1520);
        sub_1A686345C((uint64_t)&v53, v44, v45, v25);
      }
      else
      {
        uint64_t v31 = *v21;
        sub_1A6750AC4(&qword_1E96C3988);
        uint64_t v32 = v45;
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v34 = v43;
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
        int64_t v36 = v41;
        v35(v41, (char *)v21 + *(int *)(TupleTypeMetadata2 + 48), v32);
        if (v31) {
          swift_continuation_throwingResume();
        }
        uint64_t v37 = v42;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v42, v36, v32);
        v35(*(char **)(*(void *)(v44 + 64) + 40), v37, v32);
        swift_continuation_throwingResume();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v32);
      }
    }
    else
    {
      uint64_t v27 = v42;
      uint64_t v26 = v43;
      uint64_t v28 = *(void (**)(char *, uint64_t *, uint64_t))(v43 + 32);
      uint64_t v29 = v45;
      v28(v42, v21, v45);
      uint64_t v30 = v40;
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v40, v27, v29);
      v28(*(char **)(*(void *)(v44 + 64) + 40), (uint64_t *)v30, v29);
      swift_continuation_throwingResume();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v17);
}

uint64_t sub_1A686468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_1A68923E0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x1F4188298](sub_1A6864720, v6, v8);
}

uint64_t sub_1A6864720()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_1A68647C8;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A68647C8()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

void sub_1A68648D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1A6892A00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v15[-v12];
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a2;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.NextCancelledAction();
  sub_1A67F1434((void (*)(uint64_t))sub_1A6864AA0, (uint64_t)v15, a1);
  unint64_t v14 = v20;
  if (v20 >= 2)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(v13, 1, 1, a3);
    (*(void (**)(void, unsigned char *, uint64_t))(v11 + 32))(*(void *)(*(void *)(v14 + 64) + 40), v13, v10);
    swift_continuation_throwingResume();
  }
}

void sub_1A6864A78()
{
  sub_1A68648D0(v0[5], v0[7], v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for ChannelStorage()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A6864AA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A6864B70((uint64_t (*)(uint64_t, uint64_t))sub_1A6866AB8, a1);
}

uint64_t sub_1A6864ACC(uint64_t a1)
{
  return sub_1A6864234(a1, v1[5], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t sub_1A6864ADC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = (void *)type metadata accessor for ChannelStateMachine();
  return sub_1A6866514(v3, v4, v5, a1);
}

uint64_t sub_1A6864B44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A6864B70(sub_1A68655D4, a1);
}

uint64_t sub_1A6864B70@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = type metadata accessor for ChannelStateMachine();
  uint64_t result = a1(v5, v6);
  *a2 = result;
  return result;
}

uint64_t sub_1A6864BD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v6 = (void *)type metadata accessor for ChannelStateMachine();
  uint64_t result = sub_1A68650DC(v3, v5, v4, v6);
  *a1 = result;
  return result;
}

uint64_t sub_1A6864C44()
{
  return sub_1A6893240();
}

uint64_t sub_1A6864C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1A6892A00();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))((char *)&v10 - v7, 1, 1, a2);
  return sub_1A6864D4C(a1, 0, (uint64_t)v8, a3);
}

uint64_t sub_1A6864D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for ChannelStateMachine.SuspendedProducer() + 48);
  uint64_t v6 = sub_1A6892A00();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a3, v6);
}

uint64_t sub_1A6864DE8()
{
  return sub_1A6893250();
}

uint64_t sub_1A6864E34()
{
  return sub_1A6893250();
}

uint64_t sub_1A6864E74()
{
  return sub_1A6893240();
}

BOOL sub_1A6864E9C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1A6864EA8()
{
  return sub_1A6893250();
}

uint64_t sub_1A6864EF0()
{
  return sub_1A6864EA8();
}

uint64_t sub_1A6864EF8()
{
  return sub_1A6864E74();
}

uint64_t sub_1A6864F00()
{
  return sub_1A6893250();
}

BOOL sub_1A6864F40(uint64_t *a1, uint64_t *a2)
{
  return sub_1A6864E9C(*a1, *a2);
}

uint64_t sub_1A6864F4C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (v1 < 0) {
    return 0;
  }
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 40);
  type metadata accessor for ChannelStateMachine.SuspendedConsumer();
  sub_1A6892D60();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  if (sub_1A68927E0())
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    swift_getWitnessTable();
    sub_1A6891C90();
    sub_1A6891C50();
    sub_1A68671E8(v2, v3, v4, v5, v1);
    uint64_t result = v8;
    *(void *)uint64_t v0 = v2;
    *(void *)(v0 + 8) = v3;
    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 24) = v5;
    *(void *)(v0 + 32) = v1;
    *(void *)(v0 + 40) = v6;
  }
  return result;
}

uint64_t sub_1A68650DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v7 = a4[2];
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  uint64_t v10 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  uint64_t v11 = sub_1A6892A00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v57 = (char *)&v48 - v13;
  uint64_t v14 = sub_1A6892A00();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v48 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = *(void *)(v5 + 32);
  if (v20 < 0) {
    return 1;
  }
  uint64_t v48 = v12;
  uint64_t v49 = v11;
  uint64_t v58 = *(void *)(v5 + 40);
  uint64_t v50 = a3;
  uint64_t v21 = *(void *)(v5 + 24);
  uint64_t v52 = *(void *)(v5 + 16);
  uint64_t v53 = v19;
  id v22 = *(id *)v5;
  uint64_t v51 = *(void *)(v5 + 8);
  id v64 = v22;
  uint64_t v65 = v51;
  uint64_t v62 = v20;
  uint64_t v63 = v52;
  uint64_t v61 = v21;
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v9;
  uint64_t v54 = v8;
  uint64_t v25 = v10;
  uint64_t v26 = (uint64_t *)((char *)&v48 - v18);
  uint64_t v27 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v17, v55, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v7);
  uint64_t v55 = v24;
  sub_1A6864D4C(v50, v56, (uint64_t)v17, v26);
  uint64_t v28 = v53;
  sub_1A6867290(v22, v51, v52, v21, v20);
  uint64_t v56 = v21;
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  sub_1A6892760();
  uint64_t v29 = v57;
  sub_1A6892720();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v29, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v49);
    uint64_t v59 = v20;
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    sub_1A6892D60();
    swift_getWitnessTable();
    char v30 = sub_1A68927E0();
    swift_release();
    swift_release();
    if (v30)
    {
      sub_1A6891C90();
      sub_1A6891C80();
      (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v25);
      id v31 = v64;
      uint64_t v32 = v65;
      uint64_t v34 = v62;
      uint64_t v33 = v63;
      uint64_t v35 = v61;
      sub_1A68671E8(*(id *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
      *(void *)uint64_t v5 = v31;
      *(void *)(v5 + 8) = v32;
      *(void *)(v5 + 16) = v33;
      *(void *)(v5 + 24) = v35;
      uint64_t v36 = 2;
      *(void *)(v5 + 32) = v34;
    }
    else
    {
      swift_getWitnessTable();
      sub_1A6891C90();
      sub_1A6891C50();
      (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v25);
      uint64_t v36 = v60;
      uint64_t v42 = v61;
      id v43 = v64;
      uint64_t v44 = v65;
      uint64_t v46 = v62;
      uint64_t v45 = v63;
      sub_1A68671E8(*(id *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
      *(void *)uint64_t v5 = v43;
      *(void *)(v5 + 8) = v44;
      *(void *)(v5 + 16) = v45;
      *(void *)(v5 + 24) = v42;
      *(void *)(v5 + 32) = v46;
    }
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v25);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v49);
    id v37 = v64;
    uint64_t v38 = v65;
    uint64_t v40 = v62;
    uint64_t v39 = v63;
    uint64_t v41 = v61;
    sub_1A68671E8(*(id *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
    *(void *)uint64_t v5 = v37;
    *(void *)(v5 + 8) = v38;
    *(void *)(v5 + 16) = v39;
    *(void *)(v5 + 24) = v41;
    uint64_t v36 = 1;
    *(void *)(v5 + 32) = v40;
  }
  *(void *)(v5 + 40) = v58;
  return v36;
}

uint64_t sub_1A68655D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  uint64_t v7 = sub_1A6892A00();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v21 = (char *)&v46 - v17;
  if ((*(void *)(v3 + 32) & 0x8000000000000000) != 0) {
    return 1;
  }
  uint64_t v22 = *(void *)(v3 + 32);
  uint64_t v47 = v16;
  uint64_t v48 = v15;
  uint64_t v49 = v20;
  uint64_t v50 = v18;
  uint64_t v51 = v14;
  uint64_t v52 = v19;
  uint64_t v53 = *(void *)(v3 + 40);
  uint64_t v23 = v5;
  uint64_t v24 = *(void *)(v3 + 16);
  uint64_t v25 = *(void *)(v3 + 24);
  uint64_t v26 = *(void *)(v3 + 8);
  id v56 = *(id *)v3;
  uint64_t v57 = v26;
  uint64_t v55 = v24;
  sub_1A6864C70(a1, v23, (uint64_t *)((char *)&v46 - v17));
  uint64_t v54 = v25;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1A6891C90();
  sub_1A6891C70();
  uint64_t v27 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v28 = v51;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v50 + 8);
    v29(v11, v51);
    char v30 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 16);
    uint64_t v50 = v22;
    v30(v47, v21, v6);
    sub_1A6892760();
    id v31 = v49;
    sub_1A6892730();
    v29(v31, v28);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v6);
    id v32 = v56;
    uint64_t v33 = v57;
    uint64_t v34 = v55;
    sub_1A68671E8(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
    *(void *)uint64_t v3 = v32;
    *(void *)(v3 + 8) = v33;
    uint64_t v35 = v54;
    *(void *)(v3 + 16) = v34;
    *(void *)(v3 + 24) = v35;
    uint64_t v36 = 1;
    uint64_t v37 = v53;
    *(void *)(v3 + 32) = v50;
    *(void *)(v3 + 40) = v37;
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, uint64_t))(v27 + 8);
    v38(v21, v6);
    uint64_t v39 = v48;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v48, v11, v6);
    id v40 = v56;
    uint64_t v41 = v57;
    uint64_t v42 = v55;
    sub_1A68671E8(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
    *(void *)uint64_t v3 = v40;
    *(void *)(v3 + 8) = v41;
    uint64_t v43 = v54;
    *(void *)(v3 + 16) = v42;
    *(void *)(v3 + 24) = v43;
    uint64_t v44 = v53;
    *(void *)(v3 + 32) = v22;
    *(void *)(v3 + 40) = v44;
    uint64_t v36 = *(void *)(v39 + 8);
    v38((char *)v39, v6);
  }
  return v36;
}

uint64_t sub_1A68659D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = sub_1A6892A00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = *(void *)(v3 + 32);
  if ((v16 & 0x8000000000000000) != 0) {
    return 0;
  }
  uint64_t v46 = (char *)&v42 - v13;
  uint64_t v47 = a2;
  uint64_t v45 = v15;
  id v17 = *(id *)v3;
  unint64_t v18 = *(void *)(v3 + 24);
  uint64_t v50 = v14;
  unint64_t v19 = *(void *)(v3 + 8);
  unint64_t v48 = v18;
  swift_retain();
  swift_retain();
  unint64_t v52 = (unint64_t)v17;
  swift_retain();
  unint64_t v51 = v19;
  uint64_t v20 = v50;
  swift_retain();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  int v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20[6])(v11, 1, v6);
  unint64_t v49 = v16;
  if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    sub_1A68671E8(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
    *(_OWORD *)uint64_t v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    *(_OWORD *)(v3 + 32) = xmmword_1A689F420;
    uint64_t v23 = *(void *)(v47 + 16);
    uint64_t v24 = *(void *)(v47 + 32);
  }
  else
  {
    uint64_t v26 = v46;
    uint64_t v43 = (void (*)(void, void, void))v20[4];
    uint64_t v44 = (void *)(v3 + 8);
    v43(v46, v11, v6);
    unint64_t v53 = v16;
    uint64_t v23 = *(void *)(v47 + 16);
    uint64_t v24 = *(void *)(v47 + 32);
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    sub_1A6892D60();
    swift_getWitnessTable();
    if (sub_1A68927E0())
    {
      uint64_t v27 = v45;
      ((void (*)(void))v50[2])();
      uint64_t v28 = sub_1A6893100();
      if (v28)
      {
        uint64_t v29 = v28;
        char v30 = (void (*)(void, void))v50[1];
        v30(v27, v6);
      }
      else
      {
        uint64_t v29 = swift_allocError();
        v43(v31, v27, v6);
        char v30 = (void (*)(void, void))v50[1];
      }
      id v32 = v44;
      v30(v46, v6);
      sub_1A68671E8(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
      *(void *)uint64_t v3 = v29;
      v32[1] = 0;
      _OWORD v32[2] = 0;
      *id v32 = 0;
    }
    else
    {
      ((void (*)(char *, uint64_t))v50[1])(v26, v6);
      sub_1A68671E8(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
      *(_OWORD *)uint64_t v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
    }
    *(_OWORD *)(v3 + 32) = xmmword_1A689F420;
  }
  unint64_t v53 = v52;
  unint64_t v54 = v51;
  MEMORY[0x1F4188790](v22);
  *(&v42 - 4) = v23;
  *(&v42 - 3) = v6;
  *(&v42 - 2) = v24;
  type metadata accessor for ChannelStateMachine.SuspendedProducer();
  swift_getWitnessTable();
  uint64_t v33 = sub_1A6891C90();
  uint64_t v34 = sub_1A6741AD0(&qword_1E96C3988);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = sub_1A67F67D4((void (*)(char *, char *))sub_1A67D3FAC, (uint64_t)(&v42 - 6), v33, v34, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v36);
  uint64_t v50 = &v42;
  unint64_t v53 = v48;
  unint64_t v54 = v49;
  MEMORY[0x1F4188790](v25);
  *(&v42 - 4) = v23;
  *(&v42 - 3) = v6;
  *(&v42 - 2) = v24;
  type metadata accessor for ChannelStateMachine.SuspendedConsumer();
  swift_getWitnessTable();
  uint64_t v37 = sub_1A6891C90();
  sub_1A6892A00();
  sub_1A6750AC4(&qword_1E96C1520);
  sub_1A68925D0();
  uint64_t v38 = sub_1A6892A00();
  uint64_t v39 = swift_getWitnessTable();
  sub_1A67F67D4((void (*)(char *, char *))sub_1A67D3FAC, (uint64_t)(&v42 - 6), v37, v38, MEMORY[0x1E4FBC248], v39, MEMORY[0x1E4FBC278], v40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v25;
}

uint64_t sub_1A6866000@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = (void *)*v2;
  uint64_t v10 = v2[4];
  if (v10 < 0)
  {
    if (v9)
    {
      *(_OWORD *)uint64_t v2 = 0u;
      *((_OWORD *)v2 + 1) = 0u;
      *((_OWORD *)v2 + 2) = xmmword_1A689F420;
      sub_1A6750AC4(&qword_1E96C3988);
      sub_1A6892A00();
      sub_1A6750AC4(&qword_1E96C1520);
      sub_1A6893290();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      unint64_t v18 = (void *)((char *)a2 + *(int *)(TupleTypeMetadata2 + 48));
      *a2 = 0;
      *unint64_t v18 = v9;
    }
    else
    {
      sub_1A6750AC4(&qword_1E96C3988);
      sub_1A6892A00();
      sub_1A6750AC4(&qword_1E96C1520);
      sub_1A6893290();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v26 = (char *)a2 + *(int *)(TupleTypeMetadata2 + 48);
      *a2 = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v26, 1, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
    return v27(a2, 0, 1, TupleTypeMetadata2);
  }
  else
  {
    uint64_t v30 = v5;
    uint64_t v31 = a2;
    uint64_t v11 = v2[1];
    uint64_t v12 = v2[2];
    uint64_t v13 = v2[3];
    uint64_t v14 = v2[5];
    uint64_t v32 = v11;
    sub_1A6892D60();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v29 = v14;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    if (sub_1A68927E0())
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1A6750AC4(&qword_1E96C3988);
      sub_1A6892A00();
      sub_1A6750AC4(&qword_1E96C1520);
      sub_1A6893290();
      uint64_t v15 = swift_getTupleTypeMetadata2();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v31, 1, 1, v15);
    }
    else
    {
      uint64_t v32 = (uint64_t)v9;
      uint64_t v33 = v11;
      swift_getWitnessTable();
      sub_1A6891C90();
      sub_1A6891C50();
      uint64_t v19 = v11;
      uint64_t v20 = v29;
      sub_1A68671E8(v9, v19, v12, v13, v10);
      uint64_t v21 = v33;
      *uint64_t v3 = v32;
      v3[1] = v21;
      v3[2] = v12;
      v3[3] = v13;
      v3[4] = v10;
      v3[5] = v20;
      sub_1A6750AC4(&qword_1E96C3988);
      uint64_t v22 = sub_1A6892A00();
      sub_1A6750AC4(&qword_1E96C1520);
      sub_1A6893290();
      uint64_t v23 = swift_getTupleTypeMetadata2();
      uint64_t v24 = v31;
      uint64_t v25 = (char *)v31 + *(int *)(v23 + 48);
      *uint64_t v31 = *((void *)v8 + 1);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v25, &v8[*(int *)(v6 + 48)], v22);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v24, 0, 1, v23);
    }
  }
}

uint64_t sub_1A6866514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = a3[2];
  uint64_t v9 = a3[3];
  uint64_t v11 = a3[4];
  uint64_t v57 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  MEMORY[0x1F4188790](v57);
  uint64_t v13 = (char *)v47 - v12;
  uint64_t v14 = *(void **)v5;
  uint64_t v15 = *(void *)(v5 + 32);
  if (v15 < 0)
  {
    if (v14)
    {
      *(_OWORD *)uint64_t v5 = 0u;
      *(_OWORD *)(v5 + 16) = 0u;
      *(_OWORD *)(v5 + 32) = xmmword_1A689F420;
      *a4 = v14;
    }
    else
    {
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a4, 1, 1, v10);
    }
    Suspendeduint64_t Action = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(SuspendedAction - 8) + 56);
    return v46(a4, 0, 1, SuspendedAction);
  }
  else
  {
    unint64_t v52 = v13;
    uint64_t v55 = a4;
    uint64_t v16 = a1;
    uint64_t v18 = *(void *)(v5 + 8);
    uint64_t v17 = *(void *)(v5 + 16);
    uint64_t v19 = a2;
    uint64_t v20 = *(void *)(v5 + 24);
    uint64_t v21 = *(void *)(v5 + 40);
    uint64_t v65 = v14;
    uint64_t v66 = v18;
    uint64_t v63 = v20;
    uint64_t v64 = v15;
    uint64_t v62 = v21;
    uint64_t v50 = v19;
    uint64_t v51 = v16;
    uint64_t v58 = v19;
    uint64_t v59 = v16;
    swift_retain();
    uint64_t v56 = v17;
    sub_1A6867290(v14, v18, v17, v20, v15);
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    uint64_t v53 = v9;
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1A6892760();
    uint64_t v54 = v11;
    sub_1A6892720();
    if (v61 == 1)
    {
      v47[0] = WitnessTable;
      v47[1] = v21;
      uint64_t v48 = v20;
      uint64_t v49 = v10;
      uint64_t v23 = v56;
      uint64_t v24 = v57;
      uint64_t v60 = v18;
      sub_1A6892D60();
      swift_getWitnessTable();
      char v25 = sub_1A68927E0();
      swift_release();
      swift_release();
      if (v25)
      {
        uint64_t v60 = v50;
        uint64_t v61 = v51;
        sub_1A6891C90();
        sub_1A6891C80();
        sub_1A68671E8(v14, v18, v23, v48, v15);
        uint64_t v26 = v63;
        uint64_t v27 = v64;
        uint64_t v28 = v62;
        *(void *)uint64_t v5 = v14;
        *(void *)(v5 + 8) = v18;
        *(void *)(v5 + 16) = v23;
        *(void *)(v5 + 24) = v26;
        *(void *)(v5 + 32) = v27;
        *(void *)(v5 + 40) = v28;
        uint64_t v29 = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
        return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v55, 1, 1, v29);
      }
      swift_getWitnessTable();
      sub_1A6891C90();
      uint64_t v38 = v52;
      sub_1A6891C50();
      uint64_t v39 = v48;
      sub_1A68671E8(v14, v18, v23, v48, v15);
      uint64_t v40 = v66;
      uint64_t v41 = v62;
      *(void *)uint64_t v5 = v65;
      *(void *)(v5 + 8) = v40;
      *(void *)(v5 + 16) = v23;
      *(void *)(v5 + 24) = v39;
      *(void *)(v5 + 32) = v15;
      *(void *)(v5 + 40) = v41;
      sub_1A6750AC4(&qword_1E96C3988);
      uint64_t v42 = sub_1A6892A00();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v44 = v55;
      uint64_t v45 = (char *)v55 + *(int *)(TupleTypeMetadata2 + 48);
      *uint64_t v55 = *((void *)v38 + 1);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v45, &v38[*(int *)(v24 + 48)], v42);
      uint64_t v35 = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
      uint64_t v37 = v44;
    }
    else
    {
      swift_release();
      swift_release();
      uint64_t v32 = v56;
      sub_1A68671E8(v14, v18, v56, v20, v15);
      uint64_t v33 = v62;
      *(void *)uint64_t v5 = v14;
      *(void *)(v5 + 8) = v18;
      *(void *)(v5 + 16) = v32;
      *(void *)(v5 + 24) = v20;
      *(void *)(v5 + 32) = v15;
      *(void *)(v5 + 40) = v33;
      uint64_t v34 = v55;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v55, 1, 1, v10);
      uint64_t v35 = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
      uint64_t v37 = v34;
    }
    return v36(v37, 0, 1, v35);
  }
}

uint64_t sub_1A6866AB8()
{
  uint64_t v1 = v0[4];
  if ((v1 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = v0;
    uint64_t v4 = (void *)*v0;
    uint64_t v3 = v0[1];
    uint64_t v5 = v0[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = v2[5];
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    swift_retain();
    uint64_t v10 = v5;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_getWitnessTable();
    sub_1A6891C90();
    sub_1A6891C70();
    uint64_t v8 = v11;
    if (v11 != 1)
    {
      sub_1A68671E8(v4, v3, v10, v6, v1);
      *uint64_t v2 = v4;
      v2[1] = v3;
      v2[2] = v10;
      v2[3] = v6;
      v2[4] = v1;
      v2[5] = v7;
      return v8;
    }
    sub_1A6892760();
    sub_1A6892730();
    sub_1A68671E8(v4, v3, v10, v6, v1);
    *uint64_t v2 = v4;
    v2[1] = v3;
    v2[2] = v10;
    v2[3] = v6;
    v2[4] = v1;
    v2[5] = v7;
  }
  return 1;
}

uint64_t sub_1A6866C5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  sub_1A6892330();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = sub_1A6891C60();
  uint64_t v6 = v5;
  uint64_t v7 = sub_1A6892330();
  if (MEMORY[0x1AD0BF460](v7, v2)) {
    uint64_t v8 = sub_1A6866E14(v7, v2, WitnessTable);
  }
  else {
    uint64_t v8 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for ChannelStateMachine.SuspendedConsumer();
  sub_1A6892330();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = sub_1A6891C60();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1A6892330();
  if (MEMORY[0x1AD0BF460](v14, v9)) {
    uint64_t v15 = sub_1A6866E14(v14, v9, v10);
  }
  else {
    uint64_t v15 = MEMORY[0x1E4FBC870];
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v11;
  a1[4] = v13;
  a1[5] = v15;
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.SuspendedProducer()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A6866E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v39 - v11;
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x1AD0BF430](v13))
  {
    sub_1A6892C20();
    uint64_t v16 = sub_1A6892C10();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v44 = MEMORY[0x1AD0BF460](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  uint64_t v43 = v15;
  while (1)
  {
    char v18 = sub_1A6892350();
    sub_1A6892310();
    if (v18)
    {
      uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1A6892C60();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      uint64_t v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_1A6891F10();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_1A6891FC0();
        uint64_t v33 = *v48;
        (*v48)(v9, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.SuspendedConsumer()
{
  return sub_1A674B1C8();
}

void sub_1A68671E8(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
}

id sub_1A6867290(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    return a1;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t type metadata accessor for ChannelStateMachine.NextSuspendedAction()
{
  return sub_1A674B1C8();
}

uint64_t type metadata accessor for ChannelStateMachine()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A6867388(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1A68673AC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2) {
LABEL_5:
  }
    *uint64_t result = a2;
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.SendAction()
{
  return sub_1A674B1C8();
}

uint64_t type metadata accessor for ChannelStateMachine.SendSuspendedAction()
{
  return sub_1A674B1C8();
}

uint64_t type metadata accessor for ChannelStateMachine.SendCancelledAction()
{
  return sub_1A674B1C8();
}

unint64_t sub_1A6867420(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A6867474(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *sub_1A68674C8(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1A6867584(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A68675FC(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A686764C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void *sub_1A68676A0(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.FinishAction()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A68676D8()
{
  sub_1A6892A00();
  sub_1A6750AC4(&qword_1E96C1520);
  uint64_t result = sub_1A6893290();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1A6867798(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ~v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  size_t v11 = v10 + (((v6 & 0xF8) + 15) & ~v7) + 1;
  if ((v6 & 0x1000F8) != 0 || v11 > 0x18)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    LODWORD(v14) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF) {
      uint64_t v14 = *a2;
    }
    if ((v14 + 1) > 1)
    {
      memcpy(__dst, a2, v11);
    }
    else
    {
      void *__dst = *a2;
      uint64_t v15 = (void *)(((unint64_t)__dst + 15) & v8);
      uint64_t v16 = (unsigned __int8 *)(((unint64_t)a2 + 15) & v8);
      unsigned int v17 = v16[v10];
      unsigned int v18 = v17 - 2;
      if (v17 >= 2)
      {
        if (v10 <= 3) {
          uint64_t v19 = v10;
        }
        else {
          uint64_t v19 = 4;
        }
        switch(v19)
        {
          case 1:
            int v20 = *v16;
            goto LABEL_26;
          case 2:
            int v20 = *(unsigned __int16 *)v16;
            goto LABEL_26;
          case 3:
            int v20 = *(unsigned __int16 *)v16 | (v16[2] << 16);
            goto LABEL_26;
          case 4:
            int v20 = *(_DWORD *)v16;
LABEL_26:
            int v21 = (v20 | (v18 << (8 * v10))) + 2;
            unsigned int v17 = v20 + 2;
            if (v10 < 4) {
              unsigned int v17 = v21;
            }
            break;
          default:
            break;
        }
      }
      if (v17 == 1)
      {
        uint64_t v22 = *(void *)v16;
        id v23 = *(id *)v16;
        *uint64_t v15 = v22;
        *((unsigned char *)v15 + v10) = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4))
        {
          memcpy(v15, v16, v9);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v15, v16, v4);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
        }
        *((unsigned char *)v15 + v10) = 0;
      }
    }
  }
  return v3;
}

void sub_1A68679E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  if ((v4 + 1) <= 1)
  {
    uint64_t v5 = *(_DWORD *)(v3 + 80) & 0xF8 | 7;
    int v6 = (unsigned __int8 *)(((unint64_t)a1 + v5 + 8) & ~v5);
    if (*(_DWORD *)(v3 + 84)) {
      unint64_t v7 = *(void *)(v3 + 64);
    }
    else {
      unint64_t v7 = *(void *)(v3 + 64) + 1;
    }
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    unsigned int v8 = v6[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *v6;
          goto LABEL_18;
        case 2:
          int v11 = *(unsigned __int16 *)v6;
          goto LABEL_18;
        case 3:
          int v11 = *(unsigned __int16 *)v6 | (v6[2] << 16);
          goto LABEL_18;
        case 4:
          int v11 = *(_DWORD *)v6;
LABEL_18:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      uint64_t v13 = *(void **)v6;
    }
    else
    {
      uint64_t v15 = *(void *)(*(void *)(a2 + 16) - 8);
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v2))
      {
        uint64_t v14 = *(void (**)(unsigned __int8 *, uint64_t))(v15 + 8);
        v14(v6, v2);
      }
    }
  }
}

uint64_t *sub_1A6867BA0(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v9 = ~v8;
  LODWORD(v10) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v10 = *a2;
  }
  if ((v10 + 1) > 1)
  {
    uint64_t v19 = (v8 + 8) & v9;
    if (!v7) {
      ++v6;
    }
    if (v6 <= 8) {
      unint64_t v6 = 8;
    }
    memcpy(__dst, a2, v6 + v19 + 1);
  }
  else
  {
    void *__dst = *a2;
    int v11 = (void *)(((unint64_t)__dst + v8 + 8) & v9);
    int v12 = (unsigned __int8 *)(((unint64_t)a2 + v8 + 8) & v9);
    if (v7) {
      size_t v13 = v6;
    }
    else {
      size_t v13 = v6 + 1;
    }
    if (v13 <= 8) {
      uint64_t v14 = 8;
    }
    else {
      uint64_t v14 = v13;
    }
    unsigned int v15 = v12[v14];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *v12;
          goto LABEL_24;
        case 2:
          int v18 = *(unsigned __int16 *)v12;
          goto LABEL_24;
        case 3:
          int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_24;
        case 4:
          int v18 = *(_DWORD *)v12;
LABEL_24:
          int v20 = (v18 | (v16 << (8 * v14))) + 2;
          unsigned int v15 = v18 + 2;
          if (v14 < 4) {
            unsigned int v15 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      uint64_t v21 = *(void *)v12;
      id v22 = *(id *)v12;
      *int v11 = v21;
      *((unsigned char *)v11 + v14) = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4))
      {
        memcpy(v11, v12, v13);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v11, v12, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
      }
      *((unsigned char *)v11 + v14) = 0;
    }
  }
  return __dst;
}

char *sub_1A6867DDC(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  uint64_t v11 = ~(v9 | 7);
  uint64_t v12 = (v9 + 15) & v11;
  uint64_t v13 = *(void *)__dst;
  LODWORD(v14) = -1;
  if (*(void *)__dst >= 0xFFFFFFFFuLL) {
    LODWORD(v13) = -1;
  }
  unsigned int v15 = v13 + 1;
  uint64_t v16 = *(void *)__src;
  if (*(void *)__src < 0xFFFFFFFFuLL) {
    uint64_t v14 = *(void *)__src;
  }
  unsigned int v17 = v14 + 1;
  if (v15 > 1)
  {
    if (v17 <= 1)
    {
      *(void *)__dst = v16;
      uint64_t v19 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
      uint64_t v21 = (unsigned __int8 *)((unint64_t)&__src[v10 + 8] & v11);
      if (v8) {
        size_t v22 = v7;
      }
      else {
        size_t v22 = v7 + 1;
      }
      if (v22 <= 8) {
        uint64_t v23 = 8;
      }
      else {
        uint64_t v23 = v22;
      }
      unsigned int v28 = v21[v23];
      unsigned int v29 = v28 - 2;
      if (v28 >= 2)
      {
        if (v23 <= 3) {
          uint64_t v30 = v23;
        }
        else {
          uint64_t v30 = 4;
        }
        switch(v30)
        {
          case 1:
            int v31 = *v21;
            goto LABEL_52;
          case 2:
            int v31 = *(unsigned __int16 *)v21;
            goto LABEL_52;
          case 3:
            int v31 = *(unsigned __int16 *)((unint64_t)&__src[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__src[v10 + 8] & v11) + 2) << 16);
            goto LABEL_52;
          case 4:
            int v31 = *(_DWORD *)v21;
LABEL_52:
            int v39 = (v31 | (v29 << (8 * v23))) + 2;
            unsigned int v28 = v31 + 2;
            if (v23 < 4) {
              unsigned int v28 = v39;
            }
            break;
          default:
            break;
        }
      }
      if (v28 != 1) {
        goto LABEL_88;
      }
LABEL_55:
      uint64_t v40 = *(void **)v21;
      id v41 = *(id *)v21;
      id *v19 = v40;
      *((unsigned char *)v19 + v23) = 1;
      return __dst;
    }
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    uint64_t v38 = v7 + v12;
LABEL_66:
    memcpy(__dst, __src, v38 + 1);
    return __dst;
  }
  if (v17 > 1)
  {
    char v32 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      uint64_t v33 = 8;
    }
    else {
      uint64_t v33 = v7;
    }
    unsigned int v34 = *((unsigned __int8 *)v32 + v33);
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v33 <= 3) {
        uint64_t v36 = v33;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *(unsigned __int8 *)v32;
          goto LABEL_59;
        case 2:
          int v37 = *(unsigned __int16 *)v32;
          goto LABEL_59;
        case 3:
          int v37 = *(unsigned __int16 *)((unint64_t)&__dst[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__dst[v10 + 8] & v11) + 2) << 16);
          goto LABEL_59;
        case 4:
          int v37 = *(_DWORD *)v32;
LABEL_59:
          int v42 = (v37 | (v35 << (8 * v33))) + 2;
          unsigned int v34 = v37 + 2;
          if (v33 < 4) {
            unsigned int v34 = v42;
          }
          break;
        default:
          break;
      }
    }
    if (v34 == 1)
    {
    }
    else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v32, 1, v5))
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(v32, v5);
    }
    uint64_t v38 = v33 + v12;
    goto LABEL_66;
  }
  *(void *)__dst = v16;
  unint64_t v18 = (unint64_t)&__dst[v10 + 8];
  uint64_t v19 = (id *)(v18 & v11);
  unint64_t v20 = (unint64_t)&__src[v10 + 8];
  uint64_t v21 = (unsigned __int8 *)(v20 & v11);
  if ((v18 & v11) == (v20 & v11)) {
    return __dst;
  }
  if (v8) {
    size_t v22 = v7;
  }
  else {
    size_t v22 = v7 + 1;
  }
  if (v22 <= 8) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = v22;
  }
  unsigned int v24 = *((unsigned __int8 *)v19 + v23);
  unsigned int v25 = v24 - 2;
  if (v24 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v26 = v23;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)v19;
        goto LABEL_70;
      case 2:
        int v27 = *(unsigned __int16 *)v19;
        goto LABEL_70;
      case 3:
        int v27 = *(unsigned __int16 *)(v18 & v11) | (*(unsigned __int8 *)((v18 & v11) + 2) << 16);
        goto LABEL_70;
      case 4:
        int v27 = *(_DWORD *)v19;
LABEL_70:
        int v43 = (v27 | (v25 << (8 * v23))) + 2;
        unsigned int v24 = v27 + 2;
        if (v23 < 4) {
          unsigned int v24 = v43;
        }
        break;
      default:
        break;
    }
  }
  if (v24 == 1)
  {
  }
  else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5))
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(v19, v5);
  }
  unsigned int v44 = v21[v23];
  unsigned int v45 = v44 - 2;
  if (v44 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v46 = v23;
    }
    else {
      uint64_t v46 = 4;
    }
    switch(v46)
    {
      case 1:
        int v47 = *v21;
        goto LABEL_85;
      case 2:
        int v47 = *(unsigned __int16 *)v21;
        goto LABEL_85;
      case 3:
        int v47 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        goto LABEL_85;
      case 4:
        int v47 = *(_DWORD *)v21;
LABEL_85:
        int v48 = (v47 | (v45 << (8 * v23))) + 2;
        unsigned int v44 = v47 + 2;
        if (v23 < 4) {
          unsigned int v44 = v48;
        }
        break;
      default:
        break;
    }
  }
  if (v44 == 1) {
    goto LABEL_55;
  }
LABEL_88:
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5))
  {
    memcpy(v19, v21, v22);
  }
  else
  {
    (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 16))(v19, v21, v5);
    (*(void (**)(id *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  *((unsigned char *)v19 + v23) = 0;
  return __dst;
}

uint64_t *sub_1A68682F4(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v9 = ~v8;
  LODWORD(v10) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v10 = *a2;
  }
  if ((v10 + 1) > 1)
  {
    uint64_t v19 = (v8 + 8) & v9;
    if (!v7) {
      ++v6;
    }
    if (v6 <= 8) {
      unint64_t v6 = 8;
    }
    memcpy(__dst, a2, v6 + v19 + 1);
  }
  else
  {
    void *__dst = *a2;
    uint64_t v11 = (void *)(((unint64_t)__dst + v8 + 8) & v9);
    uint64_t v12 = (unsigned __int8 *)(((unint64_t)a2 + v8 + 8) & v9);
    if (v7) {
      size_t v13 = v6;
    }
    else {
      size_t v13 = v6 + 1;
    }
    if (v13 <= 8) {
      uint64_t v14 = 8;
    }
    else {
      uint64_t v14 = v13;
    }
    unsigned int v15 = v12[v14];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *v12;
          goto LABEL_24;
        case 2:
          int v18 = *(unsigned __int16 *)v12;
          goto LABEL_24;
        case 3:
          int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_24;
        case 4:
          int v18 = *(_DWORD *)v12;
LABEL_24:
          int v20 = (v18 | (v16 << (8 * v14))) + 2;
          unsigned int v15 = v18 + 2;
          if (v14 < 4) {
            unsigned int v15 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      *uint64_t v11 = *(void *)v12;
      *((unsigned char *)v11 + v14) = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4))
      {
        memcpy(v11, v12, v13);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(v11, v12, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
      }
      *((unsigned char *)v11 + v14) = 0;
    }
  }
  return __dst;
}

char *sub_1A6868528(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  uint64_t v11 = ~(v9 | 7);
  uint64_t v12 = (v9 + 15) & v11;
  uint64_t v13 = *(void *)__dst;
  LODWORD(v14) = -1;
  if (*(void *)__dst >= 0xFFFFFFFFuLL) {
    LODWORD(v13) = -1;
  }
  unsigned int v15 = v13 + 1;
  uint64_t v16 = *(void *)__src;
  if (*(void *)__src < 0xFFFFFFFFuLL) {
    uint64_t v14 = *(void *)__src;
  }
  unsigned int v17 = v14 + 1;
  if (v15 > 1)
  {
    if (v17 <= 1)
    {
      *(void *)__dst = v16;
      uint64_t v19 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
      uint64_t v21 = (unsigned __int8 *)((unint64_t)&__src[v10 + 8] & v11);
      if (v8) {
        size_t v22 = v7;
      }
      else {
        size_t v22 = v7 + 1;
      }
      if (v22 <= 8) {
        uint64_t v23 = 8;
      }
      else {
        uint64_t v23 = v22;
      }
      unsigned int v28 = v21[v23];
      unsigned int v29 = v28 - 2;
      if (v28 >= 2)
      {
        if (v23 <= 3) {
          uint64_t v30 = v23;
        }
        else {
          uint64_t v30 = 4;
        }
        switch(v30)
        {
          case 1:
            int v31 = *v21;
            goto LABEL_52;
          case 2:
            int v31 = *(unsigned __int16 *)v21;
            goto LABEL_52;
          case 3:
            int v31 = *(unsigned __int16 *)((unint64_t)&__src[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__src[v10 + 8] & v11) + 2) << 16);
            goto LABEL_52;
          case 4:
            int v31 = *(_DWORD *)v21;
LABEL_52:
            int v39 = (v31 | (v29 << (8 * v23))) + 2;
            unsigned int v28 = v31 + 2;
            if (v23 < 4) {
              unsigned int v28 = v39;
            }
            break;
          default:
            break;
        }
      }
      if (v28 != 1) {
        goto LABEL_88;
      }
LABEL_55:
      id *v19 = *(id *)v21;
      *((unsigned char *)v19 + v23) = 1;
      return __dst;
    }
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    uint64_t v38 = v7 + v12;
LABEL_66:
    memcpy(__dst, __src, v38 + 1);
    return __dst;
  }
  if (v17 > 1)
  {
    char v32 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      uint64_t v33 = 8;
    }
    else {
      uint64_t v33 = v7;
    }
    unsigned int v34 = *((unsigned __int8 *)v32 + v33);
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v33 <= 3) {
        uint64_t v36 = v33;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *(unsigned __int8 *)v32;
          goto LABEL_59;
        case 2:
          int v37 = *(unsigned __int16 *)v32;
          goto LABEL_59;
        case 3:
          int v37 = *(unsigned __int16 *)((unint64_t)&__dst[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__dst[v10 + 8] & v11) + 2) << 16);
          goto LABEL_59;
        case 4:
          int v37 = *(_DWORD *)v32;
LABEL_59:
          int v40 = (v37 | (v35 << (8 * v33))) + 2;
          unsigned int v34 = v37 + 2;
          if (v33 < 4) {
            unsigned int v34 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v34 == 1)
    {
    }
    else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v32, 1, v5))
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(v32, v5);
    }
    uint64_t v38 = v33 + v12;
    goto LABEL_66;
  }
  *(void *)__dst = v16;
  unint64_t v18 = (unint64_t)&__dst[v10 + 8];
  uint64_t v19 = (id *)(v18 & v11);
  unint64_t v20 = (unint64_t)&__src[v10 + 8];
  uint64_t v21 = (unsigned __int8 *)(v20 & v11);
  if ((v18 & v11) == (v20 & v11)) {
    return __dst;
  }
  if (v8) {
    size_t v22 = v7;
  }
  else {
    size_t v22 = v7 + 1;
  }
  if (v22 <= 8) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = v22;
  }
  unsigned int v24 = *((unsigned __int8 *)v19 + v23);
  unsigned int v25 = v24 - 2;
  if (v24 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v26 = v23;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)v19;
        goto LABEL_70;
      case 2:
        int v27 = *(unsigned __int16 *)v19;
        goto LABEL_70;
      case 3:
        int v27 = *(unsigned __int16 *)(v18 & v11) | (*(unsigned __int8 *)((v18 & v11) + 2) << 16);
        goto LABEL_70;
      case 4:
        int v27 = *(_DWORD *)v19;
LABEL_70:
        int v41 = (v27 | (v25 << (8 * v23))) + 2;
        unsigned int v24 = v27 + 2;
        if (v23 < 4) {
          unsigned int v24 = v41;
        }
        break;
      default:
        break;
    }
  }
  if (v24 == 1)
  {
  }
  else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5))
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(v19, v5);
  }
  unsigned int v42 = v21[v23];
  unsigned int v43 = v42 - 2;
  if (v42 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v44 = v23;
    }
    else {
      uint64_t v44 = 4;
    }
    switch(v44)
    {
      case 1:
        int v45 = *v21;
        goto LABEL_85;
      case 2:
        int v45 = *(unsigned __int16 *)v21;
        goto LABEL_85;
      case 3:
        int v45 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        goto LABEL_85;
      case 4:
        int v45 = *(_DWORD *)v21;
LABEL_85:
        int v46 = (v45 | (v43 << (8 * v23))) + 2;
        unsigned int v42 = v45 + 2;
        if (v23 < 4) {
          unsigned int v42 = v46;
        }
        break;
      default:
        break;
    }
  }
  if (v42 == 1) {
    goto LABEL_55;
  }
LABEL_88:
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5))
  {
    memcpy(v19, v21, v22);
  }
  else
  {
    (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(v19, v21, v5);
    (*(void (**)(id *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  *((unsigned char *)v19 + v23) = 0;
  return __dst;
}

uint64_t sub_1A6868A38(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    unint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7FFFFFFE) {
    goto LABEL_25;
  }
  uint64_t v5 = v4
     + ((unsigned __int16)((*(_WORD *)(v3 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v3 + 80) & 0xF8) & 0x1F8)
     + 1;
  char v6 = 8 * v5;
  if (v5 > 3) {
    goto LABEL_9;
  }
  unsigned int v9 = (a2 - 2147483645 + ~(-1 << v6)) >> v6;
  if (v9 > 0xFFFE)
  {
    int v7 = *(_DWORD *)((char *)a1 + v5);
    if (v7) {
      goto LABEL_17;
    }
LABEL_25:
    uint64_t v11 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v11) = -1;
    }
    if ((v11 + 1) < 2) {
      LODWORD(v11) = 0;
    }
    if (v11 >= 2) {
      return (v11 - 1);
    }
    else {
      return 0;
    }
  }
  if (v9 > 0xFE)
  {
    int v7 = *(unsigned __int16 *)((char *)a1 + v5);
    if (*(unsigned __int16 *)((char *)a1 + v5)) {
      goto LABEL_17;
    }
    goto LABEL_25;
  }
  if (!v9) {
    goto LABEL_25;
  }
LABEL_9:
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_25;
  }
LABEL_17:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 2147483646;
}

void sub_1A6868BDC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = (unsigned __int16)((*(_WORD *)(v5 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v5 + 80) & 0xF8) & 0x1F8;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v6;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v8 = v6 + v7 + 1;
  if (a3 <= 0x7FFFFFFD)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = (a3 - 2147483645 + ~(-1 << (8 * v8))) >> (8 * v8);
    if (v12 > 0xFFFE)
    {
      int v9 = 4;
    }
    else if (v12 >= 0xFF)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 != 0;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0x7FFFFFFD)
  {
    unsigned int v10 = a2 - 2147483646;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x1A6868E04);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          *(void *)a1 = a2 + 1;
        break;
    }
  }
}

void sub_1A6868E2C(_WORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v4 + 84)) {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64) + 1;
  }
  if (v5 <= 8) {
    LODWORD(v5) = 8;
  }
  if (a2 > 0x7FFFFFFE)
  {
    __int16 v6 = *(_DWORD *)(v4 + 80) & 0xF8;
    size_t v7 = v5 + ((unsigned __int16)(v6 + 15) & (unsigned __int16)~v6 & 0x1F8) + 1;
    if (v7 <= 3) {
      int v8 = ~(-1 << (8 * v7));
    }
    else {
      int v8 = -1;
    }
    if (v7)
    {
      int v9 = v8 & (a2 - 0x7FFFFFFF);
      if (v7 <= 3) {
        int v10 = v7;
      }
      else {
        int v10 = 4;
      }
      bzero(a1, v7);
      switch(v10)
      {
        case 2:
          *a1 = v9;
          break;
        case 3:
          *a1 = v9;
          *((unsigned char *)a1 + 2) = BYTE2(v9);
          break;
        case 4:
          *(_DWORD *)a1 = v9;
          break;
        default:
          *(unsigned char *)a1 = v9;
          break;
      }
    }
  }
  else if (a2)
  {
    *(void *)a1 = a2;
  }
}

uint64_t type metadata accessor for ChannelStateMachine.NextAction()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A6868F94()
{
  uint64_t result = sub_1A6892A00();
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = "\b";
    swift_getTupleTypeLayout2();
    unint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1A6869040(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ((v9 + 8) & ~v9) + v7;
  if (v7 > v10) {
    unint64_t v10 = v7;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  int v12 = v8 & 0x100000;
  if (v9 > 7 || v12 != 0 || (unint64_t)(v11 + 1) > 0x18)
  {
    unsigned int v15 = *(char **)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = &v15[(v9 & 0xF8 ^ 0x1F8) & (v9 + 16)];
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v11];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v18 = v11;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_27;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_27:
          int v20 = (v19 | (v17 << (8 * v11))) + 3;
          unsigned int v16 = v19 + 3;
          if (v11 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v23 = (void *)((unint64_t)&a1[v9 + 8] & ~v9);
      unsigned int v24 = (const void *)((unint64_t)&a2[v9 + 8] & ~v9);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v24, 1, v5))
      {
        memcpy(v23, v24, v7);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v23, v24, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
      }
      v4[v11] = 2;
    }
    else if (v16 == 1)
    {
      uint64_t v21 = *(void *)a2;
      id v22 = *(id *)a2;
      *(void *)uint64_t v4 = v21;
      v4[v11] = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(v4, a2, v7);
      }
      else
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 16))(v4, a2, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      }
      v4[v11] = 0;
    }
  }
  return v4;
}

void sub_1A6869314(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t)a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= ((v6 + 8) & ~v6) + v5) {
    v5 += (v6 + 8) & ~v6;
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  unsigned int v7 = a1[v5];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_16;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_16:
        int v11 = (v10 | (v8 << (8 * v5))) + 3;
        unsigned int v7 = v10 + 3;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    uint64_t v2 = (unint64_t)&a1[v6 + 8] & ~v6;
  }
  else if (v7 == 1)
  {
    int v12 = *(void **)a1;

    return;
  }
  uint64_t v14 = *(void *)(*(void *)(a2 + 16) - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    int v13 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v13(v2, v3);
  }
}

void *sub_1A68694E4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = ((v8 + 8) & ~v8) + v7;
  if (v7 > v9) {
    unint64_t v9 = v7;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_18;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_18:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    *a1 = *(void *)a2;
    int v19 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    int v20 = (const void *)((unint64_t)&a2[v8 + 8] & ~v8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5))
    {
      memcpy(v19, v20, v7);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
    }
    char v18 = 2;
  }
  else if (v11 == 1)
  {
    uint64_t v16 = *(void *)a2;
    id v17 = *(id *)a2;
    *a1 = v16;
    char v18 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    char v18 = 0;
  }
  *((unsigned char *)a1 + v10) = v18;
  return a1;
}

unsigned __int8 *sub_1A6869774(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    unint64_t v9 = ((v8 + 8) & ~v8) + v7;
    if (v7 > v9) {
      unint64_t v9 = v7;
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_20;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 4:
          int v14 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_20:
          }
            unsigned int v11 = (v14 | (v12 << (8 * v10))) + 3;
          else {
LABEL_22:
          }
            unsigned int v11 = v14 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v15 = ~v8;
    if (v11 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((unint64_t)&a1[v8 + 8] & v15, 1, v5))(*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v8 + 8] & v15, v5); {
    }
      }
    else if (v11 == 1)
    {
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v16 = a2[v10];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v18 = v10;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_40;
          }
          goto LABEL_49;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_40:
            unsigned int v16 = (v19 | (v17 << (8 * v10))) + 3;
            break;
          }
LABEL_49:
          unsigned int v16 = v19 + 3;
          if (v16 == 2) {
            goto LABEL_50;
          }
          goto LABEL_42;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
LABEL_50:
      *(void *)a1 = *(void *)a2;
      uint64_t v23 = (const void *)((unint64_t)&a2[v8 + 8] & v15);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v23, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v8 + 8] & v15), v23, v7);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 16))((unint64_t)&a1[v8 + 8] & v15, v23, v5);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))((unint64_t)&a1[v8 + 8] & v15, 0, 1, v5);
      }
      char v22 = 2;
    }
    else
    {
LABEL_42:
      if (v16 == 1)
      {
        uint64_t v20 = *(void *)a2;
        id v21 = *(id *)a2;
        *(void *)a1 = v20;
        char v22 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
        {
          memcpy(a1, a2, v7);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        }
        char v22 = 0;
      }
    }
    a1[v10] = v22;
  }
  return a1;
}

void *sub_1A6869B74(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = ((v8 + 8) & ~v8) + v7;
  if (v7 > v9) {
    unint64_t v9 = v7;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_18;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_18:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    *a1 = *(void *)a2;
    unsigned int v17 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    uint64_t v18 = (const void *)((unint64_t)&a2[v8 + 8] & ~v8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v18, 1, v5))
    {
      memcpy(v17, v18, v7);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v17, v18, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
    }
    char v16 = 2;
  }
  else if (v11 == 1)
  {
    *a1 = *(void *)a2;
    char v16 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    char v16 = 0;
  }
  *((unsigned char *)a1 + v10) = v16;
  return a1;
}

unsigned __int8 *sub_1A6869DFC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    unint64_t v9 = ((v8 + 8) & ~v8) + v7;
    if (v7 > v9) {
      unint64_t v9 = v7;
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_20;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 4:
          int v14 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_20:
          }
            unsigned int v11 = (v14 | (v12 << (8 * v10))) + 3;
          else {
LABEL_22:
          }
            unsigned int v11 = v14 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v15 = ~v8;
    if (v11 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((unint64_t)&a1[v8 + 8] & v15, 1, v5))(*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v8 + 8] & v15, v5); {
    }
      }
    else if (v11 == 1)
    {
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v16 = a2[v10];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v18 = v10;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_40;
          }
          goto LABEL_49;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_40:
            unsigned int v16 = (v19 | (v17 << (8 * v10))) + 3;
            break;
          }
LABEL_49:
          unsigned int v16 = v19 + 3;
          if (v16 == 2) {
            goto LABEL_50;
          }
          goto LABEL_42;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
LABEL_50:
      *(void *)a1 = *(void *)a2;
      id v21 = (const void *)((unint64_t)&a2[v8 + 8] & v15);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v8 + 8] & v15), v21, v7);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 32))((unint64_t)&a1[v8 + 8] & v15, v21, v5);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))((unint64_t)&a1[v8 + 8] & v15, 0, 1, v5);
      }
      char v20 = 2;
    }
    else
    {
LABEL_42:
      if (v16 == 1)
      {
        *(void *)a1 = *(void *)a2;
        char v20 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
        {
          memcpy(a1, a2, v7);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        }
        char v20 = 0;
      }
    }
    a1[v10] = v20;
  }
  return a1;
}

uint64_t sub_1A686A1F4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    unint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  unint64_t v5 = ((*(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v4 > v5) {
    unint64_t v5 = v4;
  }
  uint64_t v6 = 8;
  if (v5 > 8) {
    uint64_t v6 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_27;
  }
  uint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v11 < 2)
    {
LABEL_27:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 3) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_27;
  }
LABEL_19:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 254;
}

void sub_1A686A378(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v6 > v7) {
    unint64_t v7 = v6;
  }
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  size_t v8 = v7 + 1;
  if (a3 < 0xFE)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << (8 * v8)) - 253) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v10 = a2 - 254;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v7 != -1)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_39:
        __break(1u);
        JUMPOUT(0x1A686A590);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          a1[v7] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A686A5B8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84)) {
    unint64_t v3 = *(void *)(v2 + 64);
  }
  else {
    unint64_t v3 = *(void *)(v2 + 64) + 1;
  }
  unint64_t v4 = ((*(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v3 <= v4) {
    unint64_t v3 = v4;
  }
  uint64_t v5 = 8;
  if (v3 > 8) {
    uint64_t v5 = v3;
  }
  uint64_t v6 = a1[v5];
  int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_17;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_17:
        unsigned int v10 = (v9 | (v7 << (8 * v5))) + 3;
        LODWORD(v6) = v9 + 3;
        if (v5 >= 4) {
          uint64_t v6 = v6;
        }
        else {
          uint64_t v6 = v10;
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

void sub_1A686A6C0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v4 + 84)) {
    size_t v5 = *(void *)(v4 + 64);
  }
  else {
    size_t v5 = *(void *)(v4 + 64) + 1;
  }
  size_t v6 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (v5 <= v6) {
    size_t v5 = v6;
  }
  if (v5 <= 8) {
    size_t v5 = 8;
  }
  if (a2 > 2)
  {
    if (v5 <= 3) {
      char v7 = ((a2 - 3) >> (8 * v5)) + 3;
    }
    else {
      char v7 = 3;
    }
    if (v5 <= 3) {
      int v8 = (a2 - 3) & ~(-1 << (8 * v5));
    }
    else {
      int v8 = a2 - 3;
    }
    a1[v5] = v7;
    if (v5 >= 4) {
      int v9 = 4;
    }
    else {
      int v9 = v5;
    }
    bzero(a1, v5);
    switch(v9)
    {
      case 2:
        *(_WORD *)a1 = v8;
        break;
      case 3:
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
        break;
      case 4:
        *(_DWORD *)a1 = v8;
        break;
      default:
        *a1 = v8;
        break;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_1A686A80C(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for ChannelStateMachine.NextCancelledAction()
{
  return sub_1A674B1C8();
}

void sub_1A686A880(uint64_t a1)
{
}

void *sub_1A686A894(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  sub_1A6867290(*(id *)a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return a1;
}

uint64_t sub_1A686A904(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  sub_1A6867290(*(id *)a2, v4, v5, v6, v7);
  int v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  sub_1A68671E8(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t sub_1A686A984(uint64_t a1, _OWORD *a2)
{
  id v3 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  long long v8 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = a2[2];
  sub_1A68671E8(v3, v5, v4, v6, v7);
  return a1;
}

uint64_t sub_1A686A9D0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 32) >> 50) >> 13) | (2
                                                            * ((*(void *)(a1 + 32) >> 50) & 0x1C00 | ((*(void *)(a1 + 32) & 7) << 7) | (*(void *)(a1 + 8) >> 57) & 0x78 | *(void *)(a1 + 8) & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1A686AA4C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 40) = 0;
    }
  }
  return result;
}

uint64_t sub_1A686AAD0(uint64_t a1)
{
  return *(void *)(a1 + 32) >> 63;
}

uint64_t sub_1A686AADC(uint64_t result)
{
  *(void *)(result + 32) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1A686AAEC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *(void *)(result + 8) &= 0xFFFFFFFFFFFFFF8uLL;
  *(void *)(result + 32) = v2;
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.State()
{
  return sub_1A674B1C8();
}

uint64_t sub_1A686AB24(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1A686AB80(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1A686ABD0()
{
  uint64_t result = sub_1A6892A00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A686AC78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  int v9 = v7 + 16;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v10 = *(void *)(v5 + 64);
  }
  else {
    size_t v10 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v11 = ((v7 + 16) & ~(unint64_t)v7) + v10;
  int v12 = v7 & 0x100000;
  if (v8 > 7 || v12 != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v15 + ((v8 & 0xF8 ^ 0x1F8) & v9));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    unsigned int v16 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v17 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v16 = *v17;
    uint64_t v18 = (void *)(((unint64_t)v16 + v8 + 8) & ~v8);
    int v19 = (const void *)(((unint64_t)v17 + v8 + 8) & ~v8);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)v17 + v8 + 8) & ~v8, 1, v4))
    {
      memcpy(v18, v19, v10);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_1A686ADF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v2 - 8);
  unint64_t v3 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v2);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
    return v5(v3, v2);
  }
  return result;
}

void *sub_1A686AED0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

void *sub_1A686B000(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  size_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      return a1;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      return a1;
    }
    unsigned int v17 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v16 = v7 + 8;
    v17(v9, v6);
    int v14 = *(_DWORD *)(v16 + 76);
    size_t v15 = *(void *)(v16 + 56);
  }
  if (v14) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v15 + 1;
  }
  memcpy(v9, v10, v18);
  return a1;
}

void *sub_1A686B1A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

void *sub_1A686B2D0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  size_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      return a1;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(v9, v10, v6);
      return a1;
    }
    unsigned int v17 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v16 = v7 + 8;
    v17(v9, v6);
    int v14 = *(_DWORD *)(v16 + 76);
    size_t v15 = *(void *)(v16 + 56);
  }
  if (v14) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v15 + 1;
  }
  memcpy(v9, v10, v18);
  return a1;
}

uint64_t sub_1A686B470(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v9;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v11 = v9 + ((v8 + 16) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      unsigned int v17 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v6 > 0x7FFFFFFE)
      {
        unsigned int v19 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v17 + v8 + 8) & ~v8);
        if (v19 >= 2) {
          return v19 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v18 = *v17;
        if (v18 >= 0xFFFFFFFF) {
          LODWORD(v18) = -1;
        }
        if ((v18 + 1) >= 2) {
          return v18;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_1A686B664(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 16) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1A686B990);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        char v20 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if (v9 > 0x7FFFFFFE)
        {
          id v21 = (unsigned char *)(((unint64_t)v20 + v11 + 8) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v25 = a2 + 1;
            uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            v26(((unint64_t)v20 + v11 + 8) & ~v11, v25);
          }
          else
          {
            if (v12 <= 3) {
              int v22 = ~(-1 << (8 * v12));
            }
            else {
              int v22 = -1;
            }
            if (v12)
            {
              int v23 = v22 & (~v9 + a2);
              if (v12 <= 3) {
                int v24 = v12;
              }
              else {
                int v24 = 4;
              }
              bzero(v21, v12);
              switch(v24)
              {
                case 2:
                  *(_WORD *)id v21 = v23;
                  break;
                case 3:
                  *(_WORD *)id v21 = v23;
                  void v21[2] = BYTE2(v23);
                  break;
                case 4:
                  *(_DWORD *)id v21 = v23;
                  break;
                default:
                  *id v21 = v23;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *char v20 = 0;
          *(_DWORD *)char v20 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *char v20 = a2;
        }
      }
      return;
  }
}

uint64_t sub_1A686B9C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A686B9E4()
{
  return swift_getWitnessTable();
}

void *sub_1A686BA00(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void sub_1A686BA34(id *a1)
{
}

void **sub_1A686BA3C(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  int v5 = *a1;
  *a1 = v3;

  return a1;
}

void **sub_1A686BA78(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t type metadata accessor for ChannelStateMachine.Termination()
{
  return sub_1A674B1C8();
}

void sub_1A686BAD8(void *a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 1;
}

uint64_t static TTSMarkup.SpeechBuilder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A673E788(a1, a2);
}

uint64_t static TTSMarkup.SpeechBuilder.buildIf(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A67F7408(a1, (uint64_t)&v4);
  if (v5) {
    return sub_1A673E770(&v4, a2);
  }
  *(void *)(a2 + 24) = &type metadata for EmptySpeech;
  *(void *)(a2 + 32) = &off_1EFB76D20;
  return sub_1A6761FF4((uint64_t)&v4);
}

uint64_t _s12TextToSpeech9TTSMarkupO0C7BuilderV10buildArrayyAA0dC0_pSayAaG_pGFZ_0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  a2[3] = sub_1A6741AD0(&qword_1E96C1D60);
  a2[4] = &protocol witness table for <A> [A];
  *a2 = a1;

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for EmptySpeech()
{
  return &type metadata for EmptySpeech;
}

ValueMetadata *type metadata accessor for TTSMarkup.SpeechBuilder()
{
  return &type metadata for TTSMarkup.SpeechBuilder;
}

uint64_t TTSMarkupVisitor.visit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[3] = &type metadata for TTSMarkup.SpeechDocument;
  v7[4] = &protocol witness table for TTSMarkup.SpeechDocument;
  v7[0] = swift_allocObject();
  sub_1A686BC98(a1, v7[0] + 16);
  (*(void (**)(void *, uint64_t, uint64_t))(a3 + 104))(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(void *, uint64_t, uint64_t);
  id v11;
  void v13[5];

  int v6 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  int v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v13[3] = &type metadata for TTSMarkup.SpeechText;
  v13[4] = &protocol witness table for TTSMarkup.SpeechText;
  unsigned int v9 = (void *)swift_allocObject();
  v13[0] = v9;
  void v9[2] = v6;
  v9[3] = v5;
  v9[4] = v8;
  uint64_t v9[5] = v7;
  unsigned int v10 = *(void (**)(void *, uint64_t, uint64_t))(a3 + 104);
  uint64_t v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v13, a2, a3);
  return sub_1A6741A24((uint64_t)v13);
}

{
  return sub_1A686C1C8(a1, a2, a3, (uint64_t)&type metadata for TTSMarkup.Audio, (uint64_t)&protocol witness table for TTSMarkup.Audio, (uint64_t)&unk_1EFB83510, (void (*)(uint64_t, uint64_t))sub_1A6846C34);
}

{
  void v7[5];

  v7[3] = &type metadata for TTSMarkup.Prosody;
  v7[4] = &protocol witness table for TTSMarkup.Prosody;
  v7[0] = swift_allocObject();
  sub_1A6810690(a1, v7[0] + 16);
  (*(void (**)(void *, uint64_t, uint64_t))(a3 + 104))(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

{
  return sub_1A686C1C8(a1, a2, a3, (uint64_t)&type metadata for TTSMarkup.SayAs, (uint64_t)&protocol witness table for TTSMarkup.SayAs, (uint64_t)&unk_1EFB83588, (void (*)(uint64_t, uint64_t))sub_1A6763F50);
}

{
  void v7[5];

  v7[3] = &type metadata for TTSMarkup.Voice;
  v7[4] = &protocol witness table for TTSMarkup.Voice;
  v7[0] = swift_allocObject();
  sub_1A6758188(a1, v7[0] + 16);
  (*(void (**)(void *, uint64_t, uint64_t))(a3 + 104))(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

{
  void v7[5];

  v7[3] = &type metadata for TTSMarkup.Language;
  v7[4] = &protocol witness table for TTSMarkup.Language;
  v7[0] = swift_allocObject();
  sub_1A67580D4(a1, v7[0] + 16);
  (*(void (**)(void *, uint64_t, uint64_t))(a3 + 104))(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

uint64_t sub_1A686BC90()
{
  return sub_1A6767528(64);
}

uint64_t sub_1A686BC98(uint64_t a1, uint64_t a2)
{
  return a2;
}

Swift::Void __swiftcall TTSMarkupVisitor.visit(_:)(Swift::OpaquePointer a1)
{
  uint64_t v4 = *((void *)a1._rawValue + 2);
  if (v4)
  {
    uint64_t v5 = v2;
    uint64_t v6 = v1;
    uint64_t v7 = (char *)a1._rawValue + 32;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v8 = v7[3];
      uint64_t v9 = v7[4];
      sub_1A673E63C(v7, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 80))(v3, v6, v5, v8, v9);
      v7 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t TTSMarkupVisitor.visit(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  int v6 = *((_DWORD *)a1 + 2);
  char v7 = *((unsigned char *)a1 + 12);
  char v8 = *((unsigned char *)a1 + 13);
  uint64_t v10 = a1[2];
  uint64_t v9 = a1[3];
  long long v14[3] = &type metadata for TTSMarkup.Pause;
  v14[4] = &protocol witness table for TTSMarkup.Pause;
  uint64_t v11 = swift_allocObject();
  v14[0] = v11;
  *(void *)(v11 + 16) = v5;
  *(_DWORD *)(v11 + 24) = v6;
  *(unsigned char *)(v11 + 28) = v7;
  *(unsigned char *)(v11 + 29) = v8;
  *(void *)(v11 + 32) = v10;
  *(void *)(v11 + 40) = v9;
  size_t v12 = *(void (**)(void *, uint64_t, uint64_t))(a3 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, a2, a3);
  return sub_1A6741A24((uint64_t)v14);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t, uint64_t);
  void v10[5];

  uint64_t v5 = *a1;
  int v6 = a1[1];
  char v7 = a1[2];
  v10[4] = &protocol witness table for TTSMarkup.Mark;
  v10[0] = v5;
  v10[1] = v6;
  void v10[2] = v7;
  v10[3] = &type metadata for TTSMarkup.Mark;
  char v8 = *(void (**)(void *, uint64_t, uint64_t))(a3 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v10, a2, a3);
  return sub_1A6741A24((uint64_t)v10);
}

{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t, uint64_t);
  void v14[5];

  uint64_t v5 = *a1;
  int v6 = *((unsigned char *)a1 + 8);
  char v8 = a1[2];
  char v7 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v9 = a1[5];
  long long v14[3] = &type metadata for TTSMarkup.Phoneme;
  v14[4] = &protocol witness table for TTSMarkup.Phoneme;
  uint64_t v11 = swift_allocObject();
  v14[0] = v11;
  *(void *)(v11 + 16) = v5;
  *(unsigned char *)(v11 + 24) = v6;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v7;
  *(void *)(v11 + 48) = v10;
  *(void *)(v11 + 56) = v9;
  size_t v12 = *(void (**)(void *, uint64_t, uint64_t))(a3 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, a2, a3);
  return sub_1A6741A24((uint64_t)v14);
}

uint64_t sub_1A686C1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  v12[3] = a4;
  v12[4] = a5;
  v12[0] = swift_allocObject();
  a7(a1, v12[0] + 16);
  (*(void (**)(void *, uint64_t, uint64_t))(a3 + 104))(v12, a2, a3);
  return sub_1A6741A24((uint64_t)v12);
}

uint64_t TTSMarkupVisitor.visit(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  v7[3] = &type metadata for TTSMarkup.GenericSpeechElement;
  v7[4] = &protocol witness table for TTSMarkup.GenericSpeechElement;
  v7[0] = swift_allocObject();
  sub_1A67F7184(a1, v7[0] + 16);
  (*(void (**)(void *, uint64_t, uint64_t))(a3 + 104))(v7, a2, a3);
  return sub_1A6741A24((uint64_t)v7);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  int v6 = a1[3];
  char v7 = a1[4];
  sub_1A673E63C(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 80))(v3, a2, a3, v6, v7);
}

uint64_t TTSMarkupVisitor.visitChildren(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1A673E63C(a1, v6);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 24))(&v11, v6, v7);
  if (!v12) {
    return sub_1A6761FF4((uint64_t)&v11);
  }
  sub_1A673E770(&v11, (uint64_t)v13);
  uint64_t v8 = v14;
  uint64_t v9 = v15;
  sub_1A673E63C(v13, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 80))(v3, a2, a3, v8, v9);
  return sub_1A6741A24((uint64_t)v13);
}

uint64_t sub_1A686C56C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A686C5AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A686C5F4()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    sub_1A6741A24(v0 + 32);
  }

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A686C63C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A686C684()
{
  return sub_1A6767528(85);
}

uint64_t sub_1A686C68C()
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A686C6CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 56);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1A686C724()
{
  swift_bridgeObjectRelease();
  sub_1A6741A24(v0 + 24);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A686C76C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    sub_1A6741A24(v0 + 48);
  }

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t dispatch thunk of TTSMarkupVisitor.visit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of TTSMarkupVisitor.visitAnyElement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t TTSMarkup.Mark.init(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xE8))();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1A673F7AC(1701667182, 0xE400000000000000), (v6 & 1) != 0))
  {
    uint64_t v7 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v5);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    swift_bridgeObjectRetain();

    uint64_t result = swift_bridgeObjectRelease();
    *a2 = MEMORY[0x1E4FBC860];
    a2[1] = v9;
    a2[2] = v8;
  }
  else
  {

    uint64_t result = swift_bridgeObjectRelease();
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  return result;
}

void static TTSMarkup.Mark.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t TTSMarkup.Mark.eventTaps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TTSMarkup.Mark.eventTaps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*TTSMarkup.Mark.eventTaps.modify())(void, void)
{
  return nullsub_19;
}

unint64_t TTSMarkup.Mark.attributes.getter()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  return sub_1A6742BA0(inited);
}

uint64_t TTSMarkup.Mark.init(named:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = MEMORY[0x1E4FBC860];
  a3[1] = result;
  a3[2] = a2;
  return result;
}

double TTSMarkup.Mark.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A67E69AC(5);
  uint64_t v8 = v7;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v6;
  v9[3] = v8;
  v9[4] = a1;
  uint64_t v9[5] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  TTSMarkupSpeech.marker(_:)((uint64_t)sub_1A686CCA0, (uint64_t)v9, (uint64_t)&type metadata for TTSMarkup.Mark, (uint64_t)&protocol witness table for TTSMarkup.Mark, (uint64_t)&v12);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double result = *(double *)&v12;
  uint64_t v11 = v13;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v11;
  return result;
}

uint64_t TTSMarkup.Mark.accept<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *((void *)v3 + 2);
  long long v6 = *v3;
  uint64_t v7 = v4;
  return (*(uint64_t (**)(long long *))(a3 + 48))(&v6);
}

void sub_1A686CBD4(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

unint64_t sub_1A686CBE0()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1A6741AD0(&qword_1E96C1588);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A689DC40;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  return sub_1A6742BA0(inited);
}

uint64_t sub_1A686CC60()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A686CCA0(uint64_t result)
{
  if (*(unsigned char *)(result + 16) == 3)
  {
    uint64_t v2 = (uint64_t (*)(void))v1[4];
    if (*(void *)result == v1[2] && *(void *)(result + 8) == v1[3]) {
      return v2();
    }
    double result = sub_1A6893120();
    if (result) {
      return v2();
    }
  }
  return result;
}

uint64_t _s4MarkVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s4MarkVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s4MarkVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s4MarkVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4MarkVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4MarkVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSMarkup.Mark()
{
  return &type metadata for TTSMarkup.Mark;
}

uint64_t _pcre2_script_run_8(unsigned __int8 *a1, unint64_t a2, int a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  if ((unint64_t)a1 < a2)
  {
    uint64_t v4 = a1 + 1;
    unsigned int v3 = *a1;
    if (a3 && v3 >= 0xC0)
    {
      if ((v3 & 0x20) != 0)
      {
        int v5 = *v4 & 0x3F;
        if ((v3 & 0x10) != 0)
        {
          if ((v3 & 8) != 0)
          {
            int v6 = a1[2] & 0x3F;
            int v7 = a1[3] & 0x3F;
            int v8 = a1[4] & 0x3F;
            if ((v3 & 4) != 0)
            {
              unsigned int v3 = ((v3 & 1) << 30) | (v5 << 24) | (v6 << 18) | (v7 << 12) | (v8 << 6) | a1[5] & 0x3F;
              uint64_t v4 = a1 + 6;
            }
            else
            {
              unsigned int v3 = ((v3 & 3) << 24) | (v5 << 18) | (v6 << 12) | (v7 << 6) | v8;
              uint64_t v4 = a1 + 5;
            }
          }
          else
          {
            unsigned int v3 = ((v3 & 7) << 18) | (v5 << 12) | ((a1[2] & 0x3F) << 6) | a1[3] & 0x3F;
            uint64_t v4 = a1 + 4;
          }
        }
        else
        {
          unsigned int v3 = ((v3 & 0xF) << 12) | (v5 << 6) | a1[2] & 0x3F;
          uint64_t v4 = a1 + 3;
        }
      }
      else
      {
        uint64_t v4 = a1 + 2;
        unsigned int v3 = a1[1] & 0x3F | ((v3 & 0x1F) << 6);
      }
    }
    if ((unint64_t)v4 < a2)
    {
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      uint64_t v9 = _pcre2_ucd_stage2_8[v3 & 0x7F | (_pcre2_ucd_stage1_8[v3 >> 7] << 7)];
      int v10 = *((unsigned __int8 *)&_pcre2_ucd_records_8 + 12 * v9);
      if (v10 == 68) {
        return 0;
      }
      int v12 = 0;
      int v13 = 0;
      while (1)
      {
        if ((*((_WORD *)&_pcre2_ucd_records_8 + 6 * v9 + 4) & 0x3FF) != 0
          || v10 != 69 && v10 != 84)
        {
          uint64_t v14 = (char *)&_pcre2_ucd_script_sets_8 + 4 * (*((_WORD *)&_pcre2_ucd_records_8 + 6 * v9 + 4) & 0x3FF);
          *(void *)int v27 = *(void *)v14;
          *(_DWORD *)&v27[8] = *((_DWORD *)v14 + 2);
          *(void *)&v27[12] = 0;
          *(_DWORD *)&v27[20] = 0;
          if (v10 != 69 && v10 != 84) {
            *(_DWORD *)&v27[4 * (v10 >> 5)] |= 1 << v10;
          }
          switch(v13)
          {
            case 0:
              char v15 = v10 - 18;
              if v10 - 18 < 6 && ((0x3Du >> v15)) {
                goto LABEL_48;
              }
              long long v28 = *(_OWORD *)v27;
              uint64_t v29 = *(void *)&v27[16];
              goto LABEL_47;
            case 1:
              uint64_t v16 = 0;
              while ((*(_DWORD *)&v27[v16] & *(_DWORD *)((unsigned char *)&v28 + v16)) == 0)
              {
                v16 += 4;
                if (v16 == 24) {
                  return 0;
                }
              }
              char v15 = v10 - 18;
              if v10 - 18 < 6 && ((0x3Du >> v15))
              {
LABEL_48:
                int v13 = dword_1A68A7904[v15];
              }
              else
              {
                for (uint64_t i = 0; i != 24; i += 4)
                  *(_DWORD *)((char *)&v28 + i) &= *(_DWORD *)&v27[i];
LABEL_47:
                int v13 = 1;
              }
              break;
            case 2:
              if (v10 == 23) {
                goto LABEL_36;
              }
              uint64_t result = (*(_DWORD *)v27 >> 19) & 6 | (*(_DWORD *)v27 >> 22) & 1 | (*(_DWORD *)v27 >> 15) & 8u;
              switch(result)
              {
                case 1:
LABEL_40:
                  int v13 = 4;
                  break;
                case 6:
LABEL_38:
                  int v13 = 3;
                  break;
                case 0:
                  return result;
                default:
LABEL_36:
                  int v13 = 2;
                  break;
              }
              break;
            case 3:
              if ((v27[2] & 0xB0) == 0) {
                return 0;
              }
              goto LABEL_38;
            case 4:
              if ((v27[2] & 0xC0) == 0) {
                return 0;
              }
              goto LABEL_40;
            case 5:
              if ((v27[2] & 0x84) == 0) {
                return 0;
              }
              int v13 = 5;
              break;
            default:
              break;
          }
        }
        if (*((unsigned char *)&_pcre2_ucd_records_8 + 12 * v9 + 1) == 13)
        {
          if (v3 <= 0x39)
          {
            int v18 = 1;
            if (v12) {
              goto LABEL_59;
            }
          }
          else
          {
            int v18 = 66;
            int v19 = 1;
            do
            {
              int v20 = v18 + v19;
              if (v18 + v19 < 0 != __OFADD__(v18, v19)) {
                ++v20;
              }
              int v21 = v20 >> 1;
              if (v3 <= _pcre2_ucd_digit_sets_8[v21]) {
                int v18 = v21;
              }
              else {
                int v19 = v21;
              }
            }
            while (v18 > v19 + 1);
            if (v12)
            {
LABEL_59:
              if (v18 != v12) {
                return 0;
              }
              goto LABEL_63;
            }
          }
          int v12 = v18;
        }
LABEL_63:
        if ((unint64_t)v4 >= a2) {
          return 1;
        }
        int v22 = v4 + 1;
        unsigned int v3 = *v4;
        if (a3 && v3 >= 0xC0)
        {
          if ((v3 & 0x20) != 0)
          {
            int v23 = *v22 & 0x3F;
            if ((v3 & 0x10) != 0)
            {
              if ((v3 & 8) != 0)
              {
                int v24 = v4[2] & 0x3F;
                int v25 = v4[3] & 0x3F;
                int v26 = v4[4] & 0x3F;
                if ((v3 & 4) != 0)
                {
                  unsigned int v3 = ((v3 & 1) << 30) | (v23 << 24) | (v24 << 18) | (v25 << 12) | (v26 << 6) | v4[5] & 0x3F;
                  int v22 = v4 + 6;
                }
                else
                {
                  unsigned int v3 = ((v3 & 3) << 24) | (v23 << 18) | (v24 << 12) | (v25 << 6) | v26;
                  int v22 = v4 + 5;
                }
              }
              else
              {
                unsigned int v3 = ((v3 & 7) << 18) | (v23 << 12) | ((v4[2] & 0x3F) << 6) | v4[3] & 0x3F;
                int v22 = v4 + 4;
              }
            }
            else
            {
              unsigned int v3 = ((v3 & 0xF) << 12) | (v23 << 6) | v4[2] & 0x3F;
              int v22 = v4 + 3;
            }
          }
          else
          {
            int v22 = v4 + 2;
            unsigned int v3 = v4[1] & 0x3F | ((v3 & 0x1F) << 6);
          }
        }
        uint64_t result = 0;
        uint64_t v9 = _pcre2_ucd_stage2_8[v3 & 0x7F | (_pcre2_ucd_stage1_8[v3 >> 7] << 7)];
        int v10 = *((unsigned __int8 *)&_pcre2_ucd_records_8 + 12 * v9);
        uint64_t v4 = v22;
        if (v10 == 68) {
          return result;
        }
      }
    }
  }
  return 1;
}

void *pcre2_code_copy_8(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = (void *)(*(uint64_t (**)(void, void))a1)(*(void *)(a1 + 72), *(void *)(a1 + 16));
  unsigned int v3 = v2;
  if (v2)
  {
    memcpy(v2, (const void *)a1, *(void *)(a1 + 72));
    v3[4] = 0;
    if ((*(unsigned char *)(a1 + 98) & 4) != 0) {
      ++*(void *)(*(void *)(a1 + 24) + 1088);
    }
  }
  return v3;
}

void *pcre2_code_copy_with_tables_8(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = (void *)(*(uint64_t (**)(void, void))a1)(*(void *)(a1 + 72), *(void *)(a1 + 16));
  unsigned int v3 = v2;
  if (v2)
  {
    memcpy(v2, (const void *)a1, *(void *)(a1 + 72));
    v3[4] = 0;
    uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, void))a1)(1096, *(void *)(a1 + 16));
    if (v4)
    {
      int v5 = v4;
      memcpy(v4, *(const void **)(a1 + 24), 0x440uLL);
      v5[136] = 1;
      v3[3] = v5;
      *((_DWORD *)v3 + 24) |= 0x40000u;
      return v3;
    }
    (*(void (**)(void *, void))(a1 + 8))(v3, *(void *)(a1 + 16));
    return 0;
  }
  return v3;
}

uint64_t pcre2_code_free_8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 32);
    if (v2) {
      _pcre2_jit_free_8(v2, v1);
    }
    if ((*(unsigned char *)(v1 + 98) & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      uint64_t v4 = *(void *)(v3 + 1088);
      if (v4)
      {
        uint64_t v5 = v4 - 1;
        *(void *)(v3 + 1088) = v5;
        if (!v5) {
          (*(void (**)(void))(v1 + 8))();
        }
      }
    }
    int v7 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    uint64_t v6 = *(void *)(v1 + 16);
    return v7(v1, v6);
  }
  return result;
}

uint64_t _pcre2_check_escape_8(unsigned __int8 **a1, unint64_t a2, int *a3, int *a4, unsigned int a5, char a6, int a7, uint64_t a8)
{
  uint64_t v9 = *a1;
  if ((unint64_t)*a1 >= a2)
  {
    uint64_t result = 0;
    int v16 = 101;
    goto LABEL_7;
  }
  uint64_t v14 = v9 + 1;
  int v13 = *v9;
  int64_t v70 = v9 + 1;
  if ((a5 & 0x80000) != 0 && v13 >= 0xC0)
  {
    if ((v13 & 0x20) != 0)
    {
      int v17 = *v14 & 0x3F;
      if ((v13 & 0x10) != 0)
      {
        if ((v13 & 8) != 0)
        {
          int v18 = v9[2] & 0x3F;
          int v19 = v9[3] & 0x3F;
          int v20 = v9[4] & 0x3F;
          if ((v13 & 4) != 0)
          {
            int v13 = ((v13 & 1) << 30) | (v17 << 24) | (v18 << 18) | (v19 << 12) | (v20 << 6) | v9[5] & 0x3F;
            uint64_t v14 = v9 + 6;
          }
          else
          {
            int v13 = ((v13 & 3) << 24) | (v17 << 18) | (v18 << 12) | (v19 << 6) | v20;
            uint64_t v14 = v9 + 5;
          }
        }
        else
        {
          int v13 = ((v13 & 7) << 18) | (v17 << 12) | ((v9[2] & 0x3F) << 6) | v9[3] & 0x3F;
          uint64_t v14 = v9 + 4;
        }
      }
      else
      {
        int v13 = ((v13 & 0xF) << 12) | (v17 << 6) | v9[2] & 0x3F;
        uint64_t v14 = v9 + 3;
      }
      int64_t v70 = v14;
    }
    else
    {
      uint64_t v14 = v9 + 2;
      int64_t v70 = v9 + 2;
      int v13 = v9[1] & 0x3F | ((v13 & 0x1F) << 6);
    }
  }
  *a4 = 0;
  if ((v13 - 123) < 0xFFFFFFB5) {
    goto LABEL_17;
  }
  int v21 = word_1A68A7948[v13 - 48];
  if (word_1A68A7948[v13 - 48])
  {
    if (v21 >= 1)
    {
      if (v13 == 114)
      {
        uint64_t result = 0;
        if ((a6 & 0x10) != 0) {
          int v13 = 10;
        }
        else {
          int v13 = 13;
        }
      }
      else
      {
        uint64_t result = 0;
        int v13 = word_1A68A7948[v13 - 48];
      }
      goto LABEL_18;
    }
    uint64_t result = -v21;
    if (a8)
    {
      if (v13 > 87)
      {
        if (v13 != 112 && v13 != 88) {
          goto LABEL_18;
        }
LABEL_66:
        *(_DWORD *)(a8 + 208) |= 0x100000u;
        goto LABEL_18;
      }
      if (v13 != 78)
      {
        if (v13 != 80) {
          goto LABEL_18;
        }
        goto LABEL_66;
      }
    }
    else if (v13 != 78)
    {
      goto LABEL_18;
    }
    if ((unint64_t)v14 >= a2 || *v14 != 123)
    {
LABEL_104:
      uint64_t result = 12;
      int v13 = 78;
      goto LABEL_18;
    }
    unint64_t v69 = v14 + 1;
    if ((uint64_t)(a2 - (void)(v14 + 1)) < 2 || v14[1] != 85 || (int v30 = v14[2], v14 += 2, v30 != 43))
    {
      if (sub_1A686E08C((unint64_t *)&v69, a2, 0, 0, a4) || *a4) {
        goto LABEL_104;
      }
      int v31 = 137;
      goto LABEL_103;
    }
    if ((a5 & 0x80000) == 0)
    {
      int v31 = 193;
LABEL_103:
      *a4 = v31;
      goto LABEL_104;
    }
LABEL_135:
    int v47 = v14 + 1;
    int64_t v70 = v14 + 1;
    if ((unint64_t)(v14 + 1) >= a2 || *v47 == 125)
    {
      uint64_t result = 0;
      int v32 = 178;
      goto LABEL_122;
    }
    int v13 = 0;
    unint64_t v58 = a2 - (void)v47;
    do
    {
      uint64_t v59 = *v47;
      int v60 = byte_1A68A79DE[v59];
      if (v60 == 255) {
        goto LABEL_190;
      }
      if (v13 || v59 != 48)
      {
        int v13 = v60 | (16 * v13);
        BOOL v62 = (a5 & 0x80000) == 0 && v13 > 0xFF;
        if (((v13 > 0x10FFFF) & (a5 >> 19)) != 0 || v62)
        {
          uint64_t v67 = v47 + 1;
          int64_t v70 = v67;
          if ((unint64_t)v67 < a2)
          {
            while (byte_1A68A79DE[*v67] != 255)
            {
              if ((unint64_t)++v67 >= a2) {
                goto LABEL_232;
              }
            }
          }
          goto LABEL_233;
        }
      }
      else
      {
        int v13 = 0;
      }
      ++v47;
      --v58;
    }
    while (v58);
    int v47 = (unsigned __int8 *)a2;
LABEL_190:
    if ((unint64_t)v47 >= a2)
    {
      uint64_t v63 = v47;
    }
    else
    {
      uint64_t v63 = v47 + 1;
      int64_t v70 = v47 + 1;
      if (*v47 == 125)
      {
        uint64_t result = 0;
        if ((a6 & 1) == 0 && (a5 & 0x80000) != 0 && v13 >> 11 >= 0x1B && v13 >> 13 <= 6)
        {
          uint64_t result = 0;
          int64_t v70 = v47;
          goto LABEL_197;
        }
        goto LABEL_18;
      }
    }
    uint64_t result = 0;
    int64_t v70 = v63 - 1;
    int v32 = 167;
    goto LABEL_122;
  }
  int v68 = 0;
  BOOL v22 = (a6 & 0x20 | a5 & 2) != 0;
  if (!a8)
  {
    if ((v13 - 99) <= 0x15 && ((1 << (v13 - 99)) & 0x201001) != 0)
    {
      BOOL v22 = 0;
      goto LABEL_31;
    }
    uint64_t result = 0;
    int v16 = 103;
LABEL_7:
    *a4 = v16;
    return result;
  }
LABEL_31:
  if (v13 <= 84)
  {
    switch(v13)
    {
      case '0':
        goto LABEL_113;
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
        if (a7) {
          goto LABEL_112;
        }
        int v24 = v14 - 1;
        int64_t v70 = v14 - 1;
        *a4 = 0;
        if ((unint64_t)(v14 - 1) >= a2) {
          goto LABEL_111;
        }
        unsigned int v25 = *v24;
        if (v25 - 48 > 9) {
          goto LABEL_111;
        }
        unsigned int v26 = 0;
        break;
      case 'F':
      case 'L':
        goto LABEL_72;
      default:
        goto LABEL_105;
    }
    while ((unint64_t)v24 < a2)
    {
      int v27 = *v24;
      if ((v27 - 48) > 9) {
        break;
      }
      ++v24;
      unsigned int v26 = v27 + 10 * v26 - 48;
      if (v26 > 0xCCCCCCB) {
        goto LABEL_111;
      }
    }
    int64_t v70 = v24;
    if (v26 >= 0xA)
    {
      if (v25 <= 0x37 && (signed int)v26 > *(_DWORD *)(a8 + 212))
      {
LABEL_111:
        int64_t v70 = v14;
LABEL_112:
        if (v13 <= 0x37)
        {
LABEL_113:
          uint64_t v42 = 0;
          v13 -= 48;
          unsigned int v43 = v14;
          while ((unint64_t)&v14[v42] < a2)
          {
            int v44 = v14[v42];
            if ((v44 & 0xF8) != 0x30)
            {
              unsigned int v43 = &v14[v42];
              break;
            }
            ++v43;
            int v13 = v44 + 8 * v13 - 48;
            if (++v42 == 2)
            {
              unsigned int v43 = v14 + 2;
              break;
            }
          }
          uint64_t result = 0;
          int64_t v70 = v43;
          if ((a5 & 0x80000) == 0 && v13 >= 0x100)
          {
            uint64_t result = 0;
            int v32 = 151;
            goto LABEL_122;
          }
          goto LABEL_18;
        }
        goto LABEL_17;
      }
      if (v26 >= 0x10000)
      {
        uint64_t result = 0;
        int v32 = 161;
        goto LABEL_122;
      }
    }
    uint64_t result = -v26;
    goto LABEL_18;
  }
  if (v13 <= 107)
  {
    if (v13 == 85)
    {
      uint64_t result = 0;
      if (!v22) {
        *a4 = 137;
      }
      int v13 = 85;
      goto LABEL_18;
    }
    if (v13 == 99)
    {
      if ((unint64_t)v14 >= a2)
      {
        uint64_t result = 0;
        *a4 = 102;
        int v13 = 99;
        goto LABEL_18;
      }
      int v36 = *v14;
      if ((v36 - 97) >= 0x1A) {
        int v13 = *v14;
      }
      else {
        int v13 = v36 - 32;
      }
      if ((v13 - 127) <= 0xFFFFFFA0)
      {
        uint64_t result = 0;
        int v32 = 168;
        goto LABEL_122;
      }
      uint64_t result = 0;
      v13 ^= 0x40u;
      unsigned int v35 = v14 + 1;
      goto LABEL_140;
    }
    if (v13 != 103)
    {
LABEL_105:
      uint64_t result = 0;
      *a4 = 103;
      *a1 = v14 - 1;
      return result;
    }
    if (a7) {
      goto LABEL_71;
    }
    if ((unint64_t)v14 < a2)
    {
      int v45 = *v14;
      uint64_t result = 27;
      int v13 = 103;
      if (v45 == 39 || v45 == 60) {
        goto LABEL_18;
      }
      if (v45 == 123)
      {
        unint64_t v69 = v14 + 1;
        if (!sub_1A686E208(&v69, a2, *(_DWORD *)(a8 + 212), 0xFFFFu, 161, &v68, a4))
        {
          if (*a4) {
            uint64_t result = 0;
          }
          else {
            uint64_t result = 28;
          }
          goto LABEL_218;
        }
        if ((unint64_t)v69 < a2 && *v69 == 125)
        {
          int64_t v70 = v69 + 1;
LABEL_173:
          if (v68 > 0)
          {
            uint64_t result = -v68;
            goto LABEL_218;
          }
          uint64_t result = 0;
          int v66 = 115;
LABEL_217:
          *a4 = v66;
          goto LABEL_218;
        }
      }
      else
      {
        if (sub_1A686E208(&v70, a2, *(_DWORD *)(a8 + 212), 0xFFFFu, 161, &v68, a4)) {
          goto LABEL_173;
        }
        if (*a4)
        {
LABEL_71:
          uint64_t result = 0;
LABEL_218:
          int v13 = 103;
          goto LABEL_18;
        }
      }
    }
    uint64_t result = 0;
    int v66 = 157;
    goto LABEL_217;
  }
  if (v13 > 116)
  {
    if (v13 != 117)
    {
      if (v13 == 120)
      {
        if (!v22)
        {
          if ((unint64_t)v14 >= a2) {
            goto LABEL_154;
          }
          uint64_t v46 = *v14;
          if (v46 == 123) {
            goto LABEL_135;
          }
          int v13 = byte_1A68A79DE[v46];
          if (v13 == 255)
          {
LABEL_154:
            int v13 = 0;
          }
          else
          {
            int64_t v70 = v14 + 1;
            if ((unint64_t)(v14 + 1) < a2)
            {
              int v53 = byte_1A68A79DE[v14[1]];
              if (v53 != 255)
              {
                uint64_t result = 0;
                int64_t v70 = v14 + 2;
                int v13 = v53 | (16 * v13);
                goto LABEL_18;
              }
            }
          }
LABEL_17:
          uint64_t result = 0;
          goto LABEL_18;
        }
        if ((uint64_t)(a2 - (void)v14) < 2
          || (int v33 = byte_1A68A79DE[*v14], v33 == 255)
          || (int v34 = byte_1A68A79DE[v14[1]], v34 == 255))
        {
          uint64_t result = 0;
          int v13 = 120;
          goto LABEL_18;
        }
        uint64_t result = 0;
        int v13 = v34 | (16 * v33);
        unsigned int v35 = v14 + 2;
LABEL_140:
        int64_t v70 = v35;
        goto LABEL_18;
      }
      goto LABEL_105;
    }
    if (v22)
    {
      if ((unint64_t)v14 < a2)
      {
        uint64_t v37 = *v14;
        if ((a6 & 0x20) != 0 && v37 == 123)
        {
          if ((unint64_t)(v14 + 1) < a2)
          {
            uint64_t v38 = 0;
            unsigned int v39 = 0;
            while (1)
            {
              int v40 = &v14[v38];
              int v41 = byte_1A68A79DE[v14[v38 + 1]];
              if (v41 == 255) {
                break;
              }
              if (v39 >> 28)
              {
                *a4 = 177;
                uint64_t v64 = &v14[v38 + 1];
                int64_t v70 = v64;
                goto LABEL_200;
              }
              uint64_t result = 0;
              unsigned int v39 = v41 | (16 * v39);
              ++v38;
              int v13 = 117;
              if (~(unint64_t)v14 + a2 == v38) {
                goto LABEL_18;
              }
            }
            uint64_t v64 = v14;
LABEL_200:
            if (v40 != v64 && v40[1] == 125)
            {
              uint64_t v52 = &v14[v38 + 2];
LABEL_203:
              int64_t v70 = v52;
              if ((a5 & 0x80000) != 0)
              {
                if (v39 < 0x110000)
                {
                  uint64_t result = 0;
                  if ((a6 & 1) != 0 || (v39 & 0xFFFFF800) != 0xD800) {
                    goto LABEL_235;
                  }
                  uint64_t result = 0;
                  int v65 = 173;
                  goto LABEL_223;
                }
              }
              else if (v39 < 0x100)
              {
                uint64_t result = 0;
                goto LABEL_235;
              }
              uint64_t result = 0;
              int v65 = 177;
LABEL_223:
              *a4 = v65;
LABEL_235:
              int v13 = v39;
              goto LABEL_18;
            }
          }
        }
        else if ((uint64_t)(a2 - (void)v14) >= 4)
        {
          int v48 = byte_1A68A79DE[v37];
          if (v48 != 255)
          {
            int v49 = byte_1A68A79DE[v14[1]];
            if (v49 != 255)
            {
              int v50 = byte_1A68A79DE[v14[2]];
              if (v50 != 255)
              {
                int v51 = byte_1A68A79DE[v14[3]];
                if (v51 != 255)
                {
                  unsigned int v39 = v51 | (16 * ((16 * v49) | (v48 << 8) | v50));
                  uint64_t v52 = v14 + 4;
                  goto LABEL_203;
                }
              }
            }
          }
        }
      }
      uint64_t result = 0;
    }
    else
    {
      uint64_t result = 0;
      *a4 = 137;
    }
    int v13 = 117;
    goto LABEL_18;
  }
  if (v13 == 108)
  {
LABEL_72:
    uint64_t result = 0;
    int v32 = 137;
    goto LABEL_122;
  }
  if (v13 != 111) {
    goto LABEL_105;
  }
  if ((unint64_t)v14 >= a2 || (v28 = *v14, ++v14, int64_t v70 = v14, v28 != 123))
  {
    uint64_t result = 0;
    int64_t v70 = v14 - 1;
    int v29 = 155;
    goto LABEL_107;
  }
  if ((unint64_t)v14 >= a2 || *v14 == 125)
  {
    uint64_t result = 0;
    int v29 = 178;
LABEL_107:
    *a4 = v29;
    int v13 = 111;
    goto LABEL_18;
  }
  int v13 = 0;
  if ((a5 & 0x80000) != 0) {
    unsigned int v54 = 1114111;
  }
  else {
    unsigned int v54 = 255;
  }
  unint64_t v55 = a2 - (void)v14;
  while (1)
  {
    int v56 = *v14;
    if ((v56 & 0xF8) != 0x30) {
      goto LABEL_166;
    }
    if (v13 || v56 != 48) {
      break;
    }
    int v13 = 0;
LABEL_164:
    ++v14;
    if (!--v55)
    {
      uint64_t v14 = (unsigned __int8 *)a2;
LABEL_166:
      if ((unint64_t)v14 >= a2)
      {
        uint64_t v57 = v14;
      }
      else
      {
        uint64_t v57 = v14 + 1;
        int64_t v70 = v14 + 1;
        if (*v14 == 125)
        {
          uint64_t result = 0;
          if ((a5 & 0x80000) != 0 && (a6 & 1) == 0 && (v13 & 0xFFFFF800) == 0xD800)
          {
            uint64_t result = 0;
            int64_t v70 = v14;
LABEL_197:
            int v32 = 173;
            goto LABEL_122;
          }
          goto LABEL_18;
        }
      }
      uint64_t result = 0;
      int64_t v70 = v57 - 1;
      int v32 = 164;
      goto LABEL_122;
    }
  }
  int v13 = v56 + 8 * v13 - 48;
  if (v13 <= v54) {
    goto LABEL_164;
  }
  uint64_t v67 = v14 + 1;
  int64_t v70 = v14 + 1;
  if ((unint64_t)(v14 + 1) >= a2) {
    goto LABEL_233;
  }
  do
  {
    if ((*v67 & 0xF8) != 0x30) {
      goto LABEL_233;
    }
    ++v67;
  }
  while ((unint64_t)v67 < a2);
LABEL_232:
  uint64_t v67 = (unsigned __int8 *)a2;
LABEL_233:
  uint64_t result = 0;
  int64_t v70 = v67;
  int v32 = 134;
LABEL_122:
  *a4 = v32;
LABEL_18:
  *a1 = v70;
  *a3 = v13;
  return result;
}

uint64_t sub_1A686E08C(unint64_t *a1, unint64_t a2, unsigned int *a3, unsigned int *a4, int *a5)
{
  uint64_t v5 = 0;
  *a5 = 0;
  uint64_t v6 = (unsigned __int8 *)*a1;
  if (*a1 >= a2) {
    return v5;
  }
  uint64_t v7 = 0;
  int v8 = 0;
  while (1)
  {
    int v9 = v6[v7];
    if ((v9 - 48) >= 0xA) {
      break;
    }
LABEL_7:
    if (a2 - (void)v6 == ++v7) {
      return 0;
    }
  }
  if (v9 == 44)
  {
    if (v8) {
      return 0;
    }
    int v8 = 1;
    goto LABEL_7;
  }
  if (v9 != 125) {
    return 0;
  }
  if (*v6 - 48 > 9)
  {
    uint64_t v5 = 0;
  }
  else
  {
    unsigned int v10 = 0;
    ++v6;
    while (1)
    {
      int v11 = *(v6 - 1);
      if ((unint64_t)(v6 - 1) >= a2 || (v11 - 48) > 9) {
        break;
      }
      unsigned int v10 = v11 + 10 * v10 - 48;
      ++v6;
      if (v10 >= 0x10000)
      {
        uint64_t v5 = 0;
        *a5 = 105;
        --v6;
        goto LABEL_29;
      }
    }
    if (v11 == 125)
    {
      --v6;
      unsigned int v13 = v10;
      goto LABEL_24;
    }
    int v14 = *v6;
    if (v14 == 125)
    {
      unsigned int v13 = 0x10000;
LABEL_24:
      ++v6;
      if (a3) {
        *a3 = v10;
      }
      if (a4) {
        *a4 = v13;
      }
      uint64_t v5 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      if ((unint64_t)v6 < a2 && (v14 - 48) <= 9)
      {
        unsigned int v13 = 0;
        while ((unint64_t)v6 < a2)
        {
          int v16 = *v6;
          if ((v16 - 48) > 9) {
            break;
          }
          ++v6;
          unsigned int v13 = v16 + 10 * v13 - 48;
          if (v13 >= 0x10000)
          {
            uint64_t v5 = 0;
            int v17 = 105;
            goto LABEL_40;
          }
        }
        if (v13 >= v10) {
          goto LABEL_24;
        }
        uint64_t v5 = 0;
        int v17 = 104;
LABEL_40:
        *a5 = v17;
      }
    }
  }
LABEL_29:
  *a1 = (unint64_t)v6;
  return v5;
}

uint64_t sub_1A686E208(unsigned __int8 **a1, unint64_t a2, int a3, unsigned int a4, int a5, int *a6, int *a7)
{
  BOOL v7 = 0;
  int v8 = *a1;
  *a7 = 0;
  if (a3 < 0 || (unint64_t)v8 >= a2)
  {
    BOOL v14 = 0;
  }
  else
  {
    int v9 = *v8;
    unsigned int v10 = a4 - a3;
    if (v9 != 43) {
      unsigned int v10 = a4;
    }
    BOOL v11 = v9 == 43;
    if (v9 == 43) {
      int v12 = v8 + 1;
    }
    else {
      int v12 = v8;
    }
    BOOL v13 = v9 == 45;
    if (v9 == 45)
    {
      BOOL v7 = 1;
    }
    else
    {
      a4 = v10;
      BOOL v7 = v9 == 43;
    }
    BOOL v14 = !v13 && v11;
    if (v13) {
      ++v8;
    }
    else {
      int v8 = v12;
    }
  }
  if ((unint64_t)v8 < a2 && *v8 - 48 <= 9)
  {
    int v15 = 0;
    while ((unint64_t)v8 < a2)
    {
      int v16 = *v8;
      if ((v16 - 48) > 9) {
        break;
      }
      ++v8;
      int v15 = v16 + 10 * v15 - 48;
      if (v15 > a4)
      {
        uint64_t v17 = 0;
        *a7 = a5;
        goto LABEL_38;
      }
    }
    char v18 = !v7;
    if (a3 < 0) {
      char v18 = 1;
    }
    if (v18) {
      goto LABEL_37;
    }
    if (v15)
    {
      if (v14)
      {
        v15 += a3;
LABEL_37:
        uint64_t v17 = 1;
        goto LABEL_38;
      }
      if (v15 <= a3)
      {
        int v15 = a3 - v15 + 1;
        goto LABEL_37;
      }
      uint64_t v17 = 0;
      int v19 = 115;
    }
    else
    {
      uint64_t v17 = 0;
      int v19 = 126;
    }
    *a7 = v19;
LABEL_38:
    *a6 = v15;
    *a1 = v8;
    return v17;
  }
  return 0;
}

uint64_t pcre2_compile_8(uint64_t a1)
{
  uint64_t v1 = (unsigned __int8 *)MEMORY[0x1F4188790](a1);
  uint64_t v7 = 0;
  v137[128] = *MEMORY[0x1E4F143B8];
  unint64_t v116 = 1;
  uint64_t v117 = 0;
  int v132 = 0;
  unint64_t v118 = 0;
  uint64_t v114 = 0;
  uint64_t v115 = 0;
  if (!v4) {
    return v7;
  }
  int v8 = v5;
  if (!v5) {
    return v7;
  }
  int v9 = v4;
  unsigned int v10 = v1;
  *uint64_t v4 = 100;
  *uint64_t v5 = 0;
  if (!v1)
  {
    uint64_t v7 = 0;
    int v15 = 116;
    goto LABEL_14;
  }
  unsigned int v11 = v3;
  if (v6) {
    int v12 = v6;
  }
  else {
    int v12 = &_pcre2_default_compile_context_8;
  }
  if ((v3 & 0x18000000) != 0 || (unsigned int v13 = *((_DWORD *)v12 + 16), v13 >= 0x80))
  {
    uint64_t v7 = 0;
    int v15 = 117;
    goto LABEL_14;
  }
  unint64_t v14 = v2;
  if ((v3 & 0x2000000) != 0 && v13 & 0xFFFFFFF3 | v3 & 0x1976FEF3)
  {
    uint64_t v7 = 0;
    int v15 = 192;
LABEL_14:
    *int v9 = v15;
    return v7;
  }
  if (v2 == -1) {
    unint64_t v14 = _pcre2_strlen_8(v1);
  }
  if (v14 > *((void *)v12 + 6))
  {
    uint64_t v7 = 0;
    int v15 = 188;
    goto LABEL_14;
  }
  memset(v131, 0, sizeof(v131));
  int v17 = (v11 >> 7) & 0x80000 | v11;
  long long v129 = 0u;
  long long v130 = 0u;
  long long v127 = 0u;
  long long v128 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  long long v123 = 0u;
  memset(v124, 0, sizeof(v124));
  long long v121 = 0u;
  long long v122 = 0u;
  long long v119 = 0u;
  long long v120 = 0u;
  if (*((void *)v12 + 5)) {
    char v18 = (char *)*((void *)v12 + 5);
  }
  else {
    char v18 = (char *)&_pcre2_default_tables_8;
  }
  *(void *)&long long v120 = v18 + 256;
  *((void *)&v120 + 1) = v18 + 512;
  uint64_t v101 = v18;
  *(void *)&long long v119 = v12;
  *((void *)&v119 + 1) = v18;
  *(void *)&long long v129 = v137;
  *(void *)&v131[5] = 0;
  *(void *)&long long v126 = &v135;
  HIDWORD(v126) = (v11 >> 7) & 0x80000 | v11;
  DWORD2(v126) = 20;
  *(void *)&long long v128 = v136;
  v124[11] = 0;
  *(void *)&long long v127 = 0;
  DWORD2(v127) = 0;
  long long v123 = (unint64_t)&v10[v14];
  long long v125 = 0uLL;
  *(void *)&v131[1] = 0;
  *(void *)&long long v122 = v134;
  *((void *)&v122 + 1) = v10;
  *(void *)&long long v121 = v18 + 832;
  *((void *)&v121 + 1) = v134;
  v124[0] = 6000;
  *((void *)&v129 + 1) = 0;
  *(void *)&long long v19 = -1;
  *((void *)&v19 + 1) = -1;
  *(_OWORD *)&v124[1] = v19;
  *(_OWORD *)&v124[3] = v19;
  *(_OWORD *)&v124[5] = v19;
  *(_OWORD *)&v124[7] = v19;
  *(_OWORD *)&v124[9] = v19;
  unint64_t v112 = v12;
  if ((v11 & 0x2000000) != 0 || (unint64_t v20 = v14 - 2, v14 < 2))
  {
    int v25 = 0;
    LODWORD(v40) = 0;
    int v23 = 0;
    int v22 = 0;
    int v102 = -1;
    int v103 = -1;
    int v104 = -1;
LABEL_63:
    int v41 = &v10[v40];
    unsigned int v42 = HIDWORD(v126);
    if ((HIDWORD(v126) & 0x80000) != 0)
    {
      if ((v11 & 0x1000) != 0)
      {
        uint64_t v7 = 0;
        LODWORD(v44) = 174;
        goto LABEL_78;
      }
      unsigned int v43 = HIDWORD(v126);
      if ((v11 & 0x40000000) == 0)
      {
        int v98 = v25;
        int v106 = v22;
        int v109 = v23;
        LODWORD(v44) = _pcre2_valid_utf_8(v10, v14, v8);
        int v113 = (int)v44;
        if (v44)
        {
          uint64_t v7 = 0;
          int v45 = v112;
          goto LABEL_102;
        }
        unsigned int v43 = HIDWORD(v126);
        unsigned int v42 = HIDWORD(v126);
        int v25 = v98;
        int v22 = v106;
        int v23 = v109;
      }
    }
    else
    {
      unsigned int v43 = HIDWORD(v126);
    }
    if ((~v43 & 0x20800) == 0)
    {
      uint64_t v7 = 0;
      LODWORD(v44) = 175;
LABEL_78:
      int v113 = (int)v44;
      goto LABEL_79;
    }
    if (!v22) {
      LOWORD(v22) = *((_WORD *)v112 + 28);
    }
    if (!v23) {
      int v23 = *((unsigned __int16 *)v112 + 29);
    }
    LODWORD(v130) = 0;
    uint64_t v46 = v40;
    int v100 = v17;
    unsigned int v96 = v42;
    switch(v23)
    {
      case 1:
        DWORD1(v130) = 1;
        char v47 = 13;
        goto LABEL_82;
      case 2:
        DWORD1(v130) = 1;
        char v47 = 10;
LABEL_82:
        LOBYTE(v131[0]) = v47;
        break;
      case 3:
        DWORD1(v130) = 2;
        LOWORD(v131[0]) = 2573;
        break;
      case 4:
        int v48 = 1;
        goto LABEL_86;
      case 5:
        int v48 = 2;
LABEL_86:
        LODWORD(v130) = v48;
        break;
      case 6:
        DWORD1(v130) = 1;
        LOBYTE(v131[0]) = 0;
        break;
      default:
        uint64_t v7 = 0;
        LODWORD(v44) = 156;
        goto LABEL_78;
    }
    int v49 = v25;
    __int16 v107 = v22;
    __int16 v110 = v23;
    unint64_t v50 = v14 - v46;
    if ((v112[4] & 0xC) != 0) {
      v50 += 4;
    }
    if ((v11 & 4) != 0) {
      unint64_t v51 = 5 * v50 + 5;
    }
    else {
      unint64_t v51 = v50;
    }
    unsigned int v99 = v43;
    if (v51 <= 0x3FF)
    {
      uint64_t v52 = v128;
      unsigned int v53 = v43;
    }
    else
    {
      uint64_t v52 = (*(uint64_t (**)(unint64_t, void))v112)(4 * v51 + 4, *((void *)v112 + 2));
      if (!v52)
      {
        uint64_t v7 = 0;
        *int v9 = 121;
        int v45 = v112;
        goto LABEL_103;
      }
      *(void *)&long long v128 = v52;
      unsigned int v53 = HIDWORD(v126);
    }
    *((void *)&v128 + 1) = v52 + 4 * v51 + 4;
    LODWORD(v44) = sub_1A686F100(v41, v53, &v132, &v119);
    int v113 = (int)v44;
    if (v44) {
      goto LABEL_98;
    }
    int v54 = DWORD1(v127);
    if (DWORD1(v127) <= 0xFF)
    {
      unint64_t v55 = (void *)v129;
    }
    else
    {
      unint64_t v55 = (void *)(*(uint64_t (**)(uint64_t, void))v112)(4 * (DWORD1(v127) + 1), *((void *)v112 + 2));
      *(void *)&long long v129 = v55;
      if (!v55)
      {
        uint64_t v7 = 0;
        LODWORD(v44) = 121;
        int v113 = 121;
        v124[11] = 0;
        goto LABEL_99;
      }
      int v54 = DWORD1(v127);
    }
    bzero(v55, 4 * (v54 + 1));
    if (v132)
    {
      v133[0] = 0;
      LODWORD(v44) = sub_1A687272C((unsigned int *)v128, 0, 0, (uint64_t)&v119, v133);
      int v113 = (int)v44;
      if (v44) {
        goto LABEL_98;
      }
    }
    v124[11] = v14;
    uint64_t v117 = (unsigned int *)v128;
    unint64_t v118 = v134;
    v134[0] = -122;
    sub_1A687299C(HIDWORD(v126), &v118, &v117, &v113, 0, (_DWORD *)&v114 + 1, (unsigned int *)&v115 + 1, &v114, (int *)&v115, 0, (uint64_t)&v119, &v116);
    LODWORD(v44) = v113;
    if (v113)
    {
LABEL_98:
      uint64_t v7 = 0;
LABEL_99:
      int v45 = v112;
LABEL_100:
      int v41 = &v10[v124[11]];
      goto LABEL_101;
    }
    if (v116 > 0x10000)
    {
      uint64_t v7 = 0;
      LODWORD(v44) = 120;
      int v113 = 120;
      goto LABEL_99;
    }
    unint64_t v56 = v116 + WORD1(v125) * (unint64_t)(unsigned __int16)v125 + 136;
    uint64_t v57 = (*(uint64_t (**)(unint64_t, void))v112)(v56, *((void *)v112 + 2));
    uint64_t v7 = v57;
    if (!v57)
    {
      LODWORD(v44) = 121;
      int v113 = 121;
      int v45 = v112;
      goto LABEL_100;
    }
    *(void *)(v57 + 128) = 0;
    uint64_t v58 = *((void *)v112 + 2);
    *(_OWORD *)uint64_t v57 = *v112;
    *(void *)(v57 + 16) = v58;
    *(void *)(v57 + 24) = v101;
    *(void *)(v57 + 32) = 0;
    *(_OWORD *)(v57 + 40) = 0u;
    *(_OWORD *)(v57 + 56) = 0u;
    *(void *)(v57 + 72) = v56;
    *(_DWORD *)(v57 + 80) = 1346589253;
    *(_DWORD *)(v57 + 84) = v100;
    unsigned int v59 = HIDWORD(v126);
    *(_DWORD *)(v7 + 88) = HIDWORD(v126);
    *(_DWORD *)(v7 + 92) = *((_DWORD *)v112 + 16);
    *(_DWORD *)(v7 + 96) = v49 | v127 | 1;
    *(_DWORD *)(v7 + 100) = v103;
    *(_DWORD *)(v7 + 104) = v102;
    *(_DWORD *)(v7 + 108) = v104;
    *(void *)(v7 + 112) = 0;
    *(_WORD *)(v7 + 120) = v107;
    *(_WORD *)(v7 + 122) = v110;
    *(void *)(v7 + 124) = 0;
    unsigned int v60 = WORD1(v125);
    *(_WORD *)(v7 + 132) = WORD1(v125);
    uint64_t v61 = (unsigned __int16)v125;
    *(_WORD *)(v7 + 134) = v125;
    DWORD1(v125) = 0;
    DWORD2(v127) = 0;
    *((void *)&v123 + 1) = v7 + 136;
    uint64_t v111 = (unsigned __int8 *)(v7 + 136 + v61 * (unint64_t)v60);
    *(void *)&long long v122 = v111;
    v131[1] = 0;
    *(void *)&v131[3] = 0;
    *((void *)&v125 + 1) = 0;
    if (v61)
    {
      unsigned int v62 = 0;
      uint64_t v63 = v126;
      do
      {
        sub_1A6875A50((uint64_t)&v119, *(void **)v63, *(unsigned __int16 *)(v63 + 12), *(_DWORD *)(v63 + 8), v62++);
        v63 += 16;
      }
      while (v62 < (unsigned __int16)v125);
      unsigned int v59 = *(_DWORD *)(v7 + 88);
    }
    uint64_t v117 = (unsigned int *)v128;
    unint64_t v118 = v111;
    *uint64_t v111 = -122;
    if ((sub_1A687299C(v59, &v118, &v117, &v113, 0, (_DWORD *)&v114 + 1, (unsigned int *)&v115 + 1, &v114, (int *)&v115, 0, (uint64_t)&v119, 0) & 0x80000000) != 0)*(_DWORD *)(v7 + 96) |= 0x2000u; {
    *(_WORD *)(v7 + 128) = WORD2(v127);
    }
    *(_WORD *)(v7 + 130) = WORD4(v129);
    *(_WORD *)(v7 + 124) = v131[2];
    if (v131[3])
    {
      LODWORD(v114) = 0;
      LODWORD(v115) = -2;
      *(_DWORD *)(v7 + 96) |= 0x800000u;
    }
    int v66 = v118;
    *unint64_t v118 = 0;
    unint64_t v118 = v66 + 1;
    unint64_t v67 = v66 + 1 - v111;
    BOOL v68 = v67 > v116;
    unint64_t v69 = v67 - v116;
    if (v68)
    {
      LODWORD(v44) = 123;
LABEL_135:
      int v113 = (int)v44;
LABEL_162:
      int v45 = v112;
      goto LABEL_100;
    }
    *(void *)(v7 + 72) += v69;
    LODWORD(v44) = v113;
    if (!v113)
    {
      if (v131[5])
      {
        int v70 = (v96 >> 19) & 1;
        int v44 = sub_1A6875B34(v111, v70);
        if (v44)
        {
          unint64_t v71 = v44;
          unsigned int v72 = 0;
          int v73 = 8;
          while (1)
          {
            int v74 = __rev16(*(unsigned __int16 *)(v71 + 1));
            if (v74)
            {
              int64_t v75 = v111;
              if (!v72) {
                goto LABEL_151;
              }
              unsigned int v76 = v72;
              int64_t v75 = v111;
              int v77 = v73;
              while (1)
              {
                uint64_t v78 = &v133[4 * v77];
                int v79 = *((_DWORD *)v78 + 2);
                if (v74 == v79) {
                  break;
                }
                if (v74 > v79) {
                  int64_t v75 = *(unsigned __int8 **)v78;
                }
                int v77 = ((_BYTE)v77 + 1) & 7;
                if (!--v76) {
                  goto LABEL_151;
                }
              }
              uint64_t v80 = *(void *)v78;
              if (!*(void *)v78)
              {
LABEL_151:
                bracket_8 = _pcre2_find_bracket_8(v75, v70, v74);
                if (!bracket_8)
                {
                  LODWORD(v44) = 153;
                  int v113 = 153;
                  break;
                }
                LODWORD(v80) = bracket_8;
                if (v73 >= 1) {
                  --v73;
                }
                else {
                  int v73 = 7;
                }
                unint64_t v82 = &v133[4 * v73];
                *((_DWORD *)v82 + 2) = v74;
                *(void *)unint64_t v82 = bracket_8;
                if (v72 < 8) {
                  ++v72;
                }
              }
            }
            else
            {
              LODWORD(v80) = v111;
            }
            *(_WORD *)(v71 + 1) = bswap32(v80 - v111) >> 16;
            unint64_t v71 = sub_1A6875B34(v71 + 3, v70);
            if (!v71)
            {
              LODWORD(v44) = v113;
              break;
            }
          }
        }
      }
    }
    if (v44) {
      goto LABEL_162;
    }
    int v83 = *(_DWORD *)(v7 + 88);
    if ((v83 & 0x4000) == 0)
    {
      if (_pcre2_auto_possessify_8(v111, (uint64_t)&v119))
      {
        LODWORD(v44) = 180;
        goto LABEL_135;
      }
      int v83 = *(_DWORD *)(v7 + 88);
    }
    if ((v83 & 0x80000000) == 0 && sub_1A6875CAC(v111, 0, (uint64_t)&v119, 0, 0))
    {
      v83 |= 0x80000000;
      *(_DWORD *)(v7 + 88) = v83;
    }
    if ((v83 & 0x10000) != 0)
    {
LABEL_207:
      int v45 = v112;
      goto LABEL_103;
    }
    int v84 = v96 & 0x80000;
    int v85 = v99 & 0x20000;
    unsigned int v86 = HIDWORD(v115);
    if (HIDWORD(v115) <= 0xFFFFFFFD)
    {
      unsigned int v87 = HIDWORD(v114);
    }
    else
    {
      unsigned int v87 = sub_1A6875EB0(v111, (unsigned int *)&v115 + 1, 0);
      HIDWORD(v114) = v87;
      unsigned int v86 = HIDWORD(v115);
      if (HIDWORD(v115) > 0xFFFFFFFD)
      {
        if ((*(_DWORD *)(v7 + 88) & 0x80000000) == 0
          && sub_1A6876098(v111, 0, (uint64_t)&v119, 0, 0))
        {
          int v88 = 0;
          int v89 = *(_DWORD *)(v7 + 96) | 0x200;
LABEL_185:
          *(_DWORD *)(v7 + 96) = v89;
          goto LABEL_186;
        }
        int v88 = 0;
        goto LABEL_186;
      }
    }
    *(_DWORD *)(v7 + 112) = v87;
    int v90 = *(_DWORD *)(v7 + 96);
    *(_DWORD *)(v7 + 96) = v90 | 0x10;
    if (v86)
    {
      if (v87 >= 0x80 && (v85 | v84 || v87 > 0xFE))
      {
        int v88 = 1;
        if (v84
          || !v85
          || !*(_DWORD *)&_pcre2_ucd_records_8[12
                                             * _pcre2_ucd_stage2_8[v87
                                                                 - (v64 & 0xFFFFFF80)
                                                                 + (_pcre2_ucd_stage1_8[(int)v87 / 128] << 7)]
                                             + 4])
        {
          goto LABEL_186;
        }
        int v89 = v90 | 0x30;
        goto LABEL_185;
      }
      if (v87 != *(unsigned __int8 *)(v120 + v87))
      {
        int v89 = v90 | 0x30;
        int v88 = 1;
        goto LABEL_185;
      }
    }
    int v88 = 1;
LABEL_186:
    LOBYTE(v65) = v115;
    if (v115 > 0xFFFFFFFD) {
      goto LABEL_200;
    }
    int v91 = *(_DWORD *)(v7 + 88);
    if (v86 > 0xFFFFFFFD || (v91 & 0x80000) == 0 || (v87 & 0x80) == 0 || (v114 & 0x80) == 0) {
      ++v88;
    }
    if ((v115 & 2) == 0 && v91 < 0) {
      goto LABEL_200;
    }
    uint64_t v92 = v114;
    *(_DWORD *)(v7 + 116) = v114;
    int v93 = *(_DWORD *)(v7 + 96);
    *(_DWORD *)(v7 + 96) = v93 | 0x80;
    if ((v65 & 1) == 0) {
      goto LABEL_200;
    }
    if (v92 >= 0x80 && (v85 | v84 || v92 > 0xFE))
    {
      if (v84
        || !v85
        || !*(_DWORD *)&_pcre2_ucd_records_8[12
                                           * _pcre2_ucd_stage2_8[(int)(v92
                                                                     - (v65 & 0xFFFFFF80)
                                                                     + (_pcre2_ucd_stage1_8[(int)v92 / 128] << 7))]
                                           + 4])
      {
        goto LABEL_200;
      }
    }
    else if (v92 == *(unsigned __int8 *)(v120 + v92))
    {
LABEL_200:
      if (_pcre2_study_8(v7))
      {
        LODWORD(v44) = 131;
        goto LABEL_135;
      }
      if (((v88 == 0) & (*(unsigned __int8 *)(v7 + 96) >> 6)) != 0) {
        unsigned int v94 = 1;
      }
      else {
        unsigned int v94 = v88;
      }
      if (v94 > *(unsigned __int16 *)(v7 + 126)) {
        *(_WORD *)(v7 + 126) = v94;
      }
      goto LABEL_207;
    }
    *(_DWORD *)(v7 + 96) = v93 | 0x180;
    goto LABEL_200;
  }
  uint64_t v21 = 0;
  int v22 = 0;
  int v23 = 0;
  unsigned int v24 = 0;
  int v25 = 0;
  unsigned int v26 = v10 + 2;
  int v103 = -1;
  int v104 = -1;
  int v102 = -1;
  while (2)
  {
    if (v10[v21] != 40 || v10[v24 + 1] != 42)
    {
      LODWORD(v40) = v24;
      goto LABEL_63;
    }
    unsigned int v95 = v24;
    int v97 = v25;
    int v105 = v22;
    int v108 = v23;
    uint64_t v27 = 0;
    unint64_t v28 = v20 - v24;
    int v29 = &v26[v24];
    while (1)
    {
      unint64_t v30 = LOWORD((&off_1E5C6B210)[v27 + 1]);
      if (v28 >= v30
        && !_pcre2_strncmp_c8_8(v29, (unsigned __int8 *)(&off_1E5C6B210)[v27], LOWORD((&off_1E5C6B210)[v27 + 1])))
      {
        break;
      }
      v27 += 2;
      if (v27 == 42)
      {
        LODWORD(v40) = v95;
        int v25 = v97;
        int v17 = (v11 >> 7) & 0x80000 | v11;
        int v22 = v105;
        int v23 = v108;
        goto LABEL_63;
      }
    }
    uint64_t v40 = v95 + v30 + 2;
    int v31 = *((unsigned __int16 *)&off_1E5C6B210 + 4 * v27 + 5);
    int v22 = v105;
    int v23 = v108;
    int v25 = v97;
    switch(*((_WORD *)&off_1E5C6B210 + 4 * v27 + 5))
    {
      case 0:
        HIDWORD(v126) |= *((_DWORD *)&off_1E5C6B210 + 2 * v27 + 3);
        goto LABEL_58;
      case 1:
        int v25 = *((_DWORD *)&off_1E5C6B210 + 2 * v27 + 3) | v97;
        goto LABEL_58;
      case 2:
        int v23 = *((_DWORD *)&off_1E5C6B210 + 2 * v27 + 3);
        int v25 = v97 | 0x8000;
        goto LABEL_58;
      case 3:
        int v22 = *((_DWORD *)&off_1E5C6B210 + 2 * v27 + 3);
        int v25 = v97 | 0x4000;
LABEL_58:
        int v17 = (v11 >> 7) & 0x80000 | v11;
        goto LABEL_59;
      case 4:
      case 5:
      case 6:
        unsigned int v32 = v10[v40];
        unsigned int v26 = v10 + 2;
        if (v32 - 48 > 9)
        {
          uint64_t v7 = 0;
          int v41 = &v10[v40];
          LODWORD(v44) = 160;
          goto LABEL_78;
        }
        unsigned int v33 = 0;
        LODWORD(v40) = v95 + v30 + 3;
        int v17 = (v11 >> 7) & 0x80000 | v11;
        unint64_t v20 = v14 - 2;
        do
        {
          if (v32 > 0x39 || v33 > 0x19999998) {
            goto LABEL_121;
          }
          unsigned int v33 = v32 + 10 * v33 - 48;
          unsigned int v32 = v10[v40];
          LODWORD(v40) = v40 + 1;
        }
        while (v32 > 0x2F);
        if (v32 == 41)
        {
          int v35 = v103;
          int v34 = v104;
          if (v31 == 4) {
            unsigned int v36 = v33;
          }
          else {
            unsigned int v36 = v103;
          }
          if (v31 == 4) {
            unsigned int v37 = v104;
          }
          else {
            unsigned int v37 = v33;
          }
          BOOL v38 = v31 == 5;
          if (v31 != 5) {
            int v35 = v36;
          }
          int v39 = v102;
          if (v38) {
            int v39 = v33;
          }
          int v102 = v39;
          int v103 = v35;
          if (!v38) {
            int v34 = v37;
          }
          int v104 = v34;
LABEL_60:
          uint64_t v21 = v40;
          unsigned int v24 = v40;
          if (v14 - v40 <= 1) {
            goto LABEL_63;
          }
          continue;
        }
LABEL_121:
        uint64_t v7 = 0;
        LODWORD(v44) = 160;
        int v113 = 160;
        int v41 = &v10[v40];
LABEL_79:
        int v45 = v112;
LABEL_101:
        *int v8 = v41 - v10;
LABEL_102:
        *int v9 = (int)v44;
        pcre2_code_free_8(v7);
        uint64_t v7 = 0;
LABEL_103:
        if ((unsigned char *)v128 != v136) {
          (*((void (**)(void, void))v45 + 1))(v128, *((void *)v45 + 2));
        }
        if (DWORD2(v126) >= 0x15) {
          (*((void (**)(void, void))v45 + 1))(v126, *((void *)v45 + 2));
        }
        if ((void *)v129 != v137) {
          (*((void (**)(void, void))v45 + 1))(v129, *((void *)v45 + 2));
        }
        return v7;
      default:
        int v25 = v97;
        int v17 = (v11 >> 7) & 0x80000 | v11;
        int v22 = v105;
        int v23 = v108;
LABEL_59:
        unint64_t v20 = v14 - 2;
        unsigned int v26 = v10 + 2;
        goto LABEL_60;
    }
  }
}

uint64_t sub_1A686F100(unsigned __int8 *a1, unsigned int a2, _DWORD *a3, void *a4)
{
  uint64_t v4 = (uint64_t)a4;
  uint64_t v5 = a1;
  v366[0] = a1;
  unsigned int v364 = 0;
  uint64_t v362 = 0;
  v363 = 0;
  uint64_t v6 = (int *)a4[28];
  unint64_t v354 = a4[29];
  int v7 = *(_DWORD *)(*a4 + 64);
  int v352 = (a2 >> 2) & 1;
  int v353 = a2 & 0x80000;
  v361 = 0;
  int v8 = (unsigned __int8 *)a4[8];
  int v9 = -2146893824;
  if ((v7 & 8) == 0)
  {
    if ((v7 & 4) == 0) {
      goto LABEL_5;
    }
    int v9 = -2145910779;
  }
  *uint64_t v6 = v9;
  v6[1] = -2145779712;
  v6 += 2;
LABEL_5:
  int v365 = 0;
  if ((a2 & 0x2000000) != 0)
  {
    if (v8 <= a1) {
      goto LABEL_801;
    }
    int v307 = a2 & 4;
    while (1)
    {
      if ((unint64_t)v6 >= v354) {
        goto LABEL_810;
      }
      v308 = v5 + 1;
      v366[0] = v5 + 1;
      unsigned int v309 = *v5;
      int v365 = v309;
      if (!v353 || v309 < 0xC0) {
        goto LABEL_788;
      }
      if ((v309 & 0x20) == 0) {
        break;
      }
      int v310 = *v308 & 0x3F;
      if ((v309 & 0x10) != 0)
      {
        if ((v309 & 8) != 0)
        {
          int v311 = v5[2] & 0x3F;
          int v312 = v5[3] & 0x3F;
          int v313 = v5[4] & 0x3F;
          if ((v309 & 4) != 0)
          {
            unsigned int v309 = ((v309 & 1) << 30) | (v310 << 24) | (v311 << 18) | (v312 << 12) | (v313 << 6) | v5[5] & 0x3F;
            int v365 = v309;
            v308 = v5 + 6;
          }
          else
          {
            v308 = v5 + 5;
            unsigned int v309 = ((v309 & 3) << 24) | (v310 << 18) | (v311 << 12) | (v312 << 6) | v313;
            int v365 = v309;
          }
        }
        else
        {
          unsigned int v309 = ((v309 & 7) << 18) | (v310 << 12) | ((v5[2] & 0x3F) << 6) | v5[3] & 0x3F;
          int v365 = v309;
          v308 = v5 + 4;
        }
      }
      else
      {
        unsigned int v309 = ((v309 & 0xF) << 12) | (v310 << 6) | v5[2] & 0x3F;
        int v365 = v309;
        v308 = v5 + 3;
      }
      v366[0] = v308;
      if (v307)
      {
LABEL_798:
        uint64_t v6 = sub_1A6876300((int)v5, &v363, v352, v6, v4);
        unsigned int v309 = v365;
        uint64_t v5 = v366[0];
        goto LABEL_799;
      }
LABEL_789:
      uint64_t v5 = v308;
LABEL_799:
      *v6++ = v309;
      if (v5 >= v8)
      {
        LOWORD(v15) = 0;
        goto LABEL_802;
      }
    }
    v308 = v5 + 2;
    v366[0] = v5 + 2;
    int v365 = v5[1] & 0x3F | ((v309 & 0x1F) << 6);
    unsigned int v309 = v365;
LABEL_788:
    if (v307) {
      goto LABEL_798;
    }
    goto LABEL_789;
  }
  if (v8 <= a1)
  {
LABEL_801:
    LOWORD(v15) = 0;
    goto LABEL_802;
  }
  char v348 = v7;
  v347 = 0;
  v349 = 0;
  v350 = 0;
  BOOL v10 = 0;
  uint64_t v11 = 0;
  int v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v351 = 0;
  uint64_t v16 = 0;
  v343 = 0;
  int v344 = (a2 >> 19) & 1;
  unint64_t v341 = *(void *)(v4 + 40) + 12 * (*(void *)(v4 + 80) / 0xCuLL);
  uint64_t v17 = (a2 >> 17) & 0x80 | a2;
  v345 = v8 - 1;
  v346 = (int *)(v4 + 260);
  while (2)
  {
    uint64_t v359 = 0;
    uint64_t v360 = 0;
    v358 = 0;
    v357 = 0;
    if ((unint64_t)v6 >= v354) {
      goto LABEL_810;
    }
    uint64_t v18 = *(void *)v4;
    if (*(_DWORD *)(*(void *)v4 + 60) < (unsigned __int16)v15)
    {
      int v320 = 119;
      goto LABEL_811;
    }
    long long v19 = v5 + 1;
    v366[0] = v5 + 1;
    unsigned int v20 = *v5;
    int v365 = v20;
    if (!v353 || v20 < 0xC0) {
      goto LABEL_14;
    }
    if ((v20 & 0x20) == 0)
    {
      long long v19 = v5 + 2;
      v366[0] = v5 + 2;
      int v365 = v5[1] & 0x3F | ((v20 & 0x1F) << 6);
      unsigned int v20 = v365;
LABEL_14:
      if (v12) {
        goto LABEL_15;
      }
      goto LABEL_38;
    }
    int v22 = *v19 & 0x3F;
    if ((v20 & 0x10) != 0)
    {
      if ((v20 & 8) != 0)
      {
        int v29 = v5[2] & 0x3F;
        int v30 = v5[3] & 0x3F;
        int v31 = v5[4] & 0x3F;
        if ((v20 & 4) != 0)
        {
          unsigned int v20 = ((v20 & 1) << 30) | (v22 << 24) | (v29 << 18) | (v30 << 12) | (v31 << 6) | v5[5] & 0x3F;
          int v365 = v20;
          long long v19 = v5 + 6;
        }
        else
        {
          long long v19 = v5 + 5;
          unsigned int v20 = ((v20 & 3) << 24) | (v22 << 18) | (v29 << 12) | (v30 << 6) | v31;
          int v365 = v20;
        }
      }
      else
      {
        unsigned int v20 = ((v20 & 7) << 18) | (v22 << 12) | ((v5[2] & 0x3F) << 6) | v5[3] & 0x3F;
        int v365 = v20;
        long long v19 = v5 + 4;
      }
    }
    else
    {
      unsigned int v20 = ((v20 & 0xF) << 12) | (v22 << 6) | v5[2] & 0x3F;
      int v365 = v20;
      long long v19 = v5 + 3;
    }
    v366[0] = v19;
    if (v12)
    {
LABEL_15:
      if (v20 != 92 || v19 >= v8 || *v19 != 69)
      {
        if ((int)v13 < 1)
        {
          if (v11)
          {
            *uint64_t v6 = v20;
          }
          else
          {
            if ((int)v14 <= 0)
            {
              int v23 = (int)v5;
              uint64_t v24 = v11;
              uint64_t v25 = v15;
              uint64_t v26 = v17;
              int v27 = v14;
              uint64_t v14 = v13;
              unint64_t v28 = sub_1A6876300(v23, &v363, v352, v6, v4);
              uint64_t v13 = v14;
              LODWORD(v14) = v27;
              uint64_t v17 = v26;
              uint64_t v15 = v25;
              uint64_t v11 = v24;
              uint64_t v6 = v28;
              unsigned int v20 = v365;
            }
            uint64_t v14 = (v14 - 1);
            *uint64_t v6 = v20;
            BOOL v10 = 1;
          }
          uint64_t v16 = 0;
          ++v6;
          int v12 = 1;
          goto LABEL_30;
        }
        v318 = v19 - 1;
        goto LABEL_819;
      }
      int v12 = 0;
      goto LABEL_19;
    }
LABEL_38:
    if (!v11)
    {
LABEL_51:
      if (v20 != 92) {
        goto LABEL_57;
      }
      if (v19 >= v8 || (int v32 = *v19, v32 != 81) && v32 != 69)
      {
        unsigned int v20 = 92;
        goto LABEL_57;
      }
      int v12 = v32 == 81;
LABEL_19:
      uint64_t v21 = v19 + 1;
      goto LABEL_20;
    }
    if ((~v17 & 0x400080) != 0) {
      goto LABEL_47;
    }
    if (v20 < 0x100)
    {
      if (v20 == 35) {
        goto LABEL_57;
      }
      if (v20 != 133 && (*(unsigned char *)(*(void *)(v4 + 32) + v20) & 1) == 0)
      {
LABEL_47:
        if (v20 == 41)
        {
          if ((uint64_t)&v19[~(unint64_t)v350] >= 256)
          {
            v366[0] = v19 - 1;
            int v320 = 176;
            goto LABEL_811;
          }
          *(_DWORD *)v349 = ((unint64_t)((char *)v6 - v349) >> 2) - 1;
          if (v351)
          {
            int v12 = 0;
            uint64_t v11 = 0;
            *v6++ = v351;
            int v351 = 0;
          }
          else
          {
            int v351 = 0;
            int v12 = 0;
            uint64_t v11 = 0;
          }
        }
        else
        {
          if (v20 != 92) {
            goto LABEL_102;
          }
          if ((v17 & 0x400000) == 0)
          {
            unsigned int v20 = 92;
LABEL_102:
            int v12 = 0;
            *v6++ = v20;
            uint64_t v11 = 1;
            goto LABEL_30;
          }
          uint64_t v55 = v16;
          BOOL v56 = v10;
          uint64_t v57 = v14;
          uint64_t v58 = v13;
          uint64_t v59 = v15;
          uint64_t v60 = v17;
          int v61 = _pcre2_check_escape_8(v366, (unint64_t)v8, &v365, (int *)&v362 + 1, v17, *(_DWORD *)(v18 + 64), 0, v4);
          if (HIDWORD(v362)) {
            goto LABEL_812;
          }
          uint64_t v15 = v59;
          if (v61 == 26)
          {
            int v12 = 1;
            uint64_t v11 = 1;
            uint64_t v17 = v60;
            uint64_t v13 = v58;
            uint64_t v14 = v57;
            BOOL v10 = v56;
            uint64_t v16 = v55;
          }
          else
          {
            uint64_t v17 = v60;
            uint64_t v13 = v58;
            BOOL v10 = v56;
            uint64_t v16 = v55;
            if (v61 != 25)
            {
              if (v61)
              {
                int v320 = 140;
                goto LABEL_811;
              }
              unsigned int v20 = v365;
              uint64_t v14 = v57;
              goto LABEL_102;
            }
            int v12 = 0;
            uint64_t v11 = 1;
            uint64_t v14 = v57;
          }
        }
        goto LABEL_30;
      }
      goto LABEL_51;
    }
    if ((v20 | 1) != 0x200F && (v20 | 1) != 0x2029) {
      goto LABEL_47;
    }
LABEL_57:
    if ((v17 & 0x80) == 0)
    {
      if ((int)v20 <= 62)
      {
        if (v20 - 42 < 2) {
          goto LABEL_81;
        }
        goto LABEL_60;
      }
LABEL_75:
      if (v20 == 63) {
        goto LABEL_81;
      }
      if (v20 == 123)
      {
        v358 = v19;
        unsigned int v328 = v14;
        unsigned int v332 = v11;
        uint64_t v34 = v15;
        unint64_t v35 = (unint64_t)v8;
        BOOL v36 = v10;
        uint64_t v37 = v17;
        uint64_t v38 = v4;
        int v39 = v8;
        int v40 = v13;
        int v41 = v16;
        int v42 = sub_1A686E08C((unint64_t *)&v358, v35, 0, 0, (int *)&v362 + 1);
        LODWORD(v16) = v41;
        LODWORD(v10) = v36;
        LODWORD(v13) = v40;
        int v8 = v39;
        uint64_t v4 = v38;
        uint64_t v17 = v37;
        uint64_t v15 = v34;
        uint64_t v14 = v328;
        uint64_t v11 = v332;
        if (v42) {
          goto LABEL_81;
        }
      }
      goto LABEL_78;
    }
    if (v20 <= 0xFF)
    {
      int v12 = 0;
      if (v20 == 133 || (*(unsigned char *)(*(void *)(v4 + 32) + v20) & 1) != 0) {
        goto LABEL_30;
      }
    }
    int v12 = 0;
    if ((v20 | 1) == 0x200F || (v20 | 1) == 0x2029) {
      goto LABEL_30;
    }
    if ((int)v20 > 41)
    {
      if (v20 - 42 < 2) {
        goto LABEL_81;
      }
      goto LABEL_75;
    }
    if (v20 == 35)
    {
      if (v19 >= v8) {
        goto LABEL_407;
      }
      while (1)
      {
        int v73 = *(_DWORD *)(v4 + 256);
        unint64_t v74 = *(void *)(v4 + 64);
        if (v73)
        {
          if ((unint64_t)v19 < v74)
          {
            uint64_t v75 = v16;
            BOOL v76 = v10;
            uint64_t v77 = v14;
            uint64_t v78 = v13;
            uint64_t v79 = v11;
            uint64_t v80 = v17;
            uint64_t v81 = v15;
            int is_newline_8 = _pcre2_is_newline_8(v19, v73, v74, v346, v344);
            long long v19 = v366[0];
            if (is_newline_8)
            {
              uint64_t v83 = *v346;
              uint64_t v15 = v81;
              uint64_t v17 = v80;
              uint64_t v11 = v79;
              uint64_t v13 = v78;
              uint64_t v14 = v77;
              BOOL v10 = v76;
              uint64_t v16 = v75;
              goto LABEL_539;
            }
            uint64_t v15 = v81;
            uint64_t v17 = v80;
            uint64_t v11 = v79;
            uint64_t v13 = v78;
            uint64_t v14 = v77;
            BOOL v10 = v76;
            uint64_t v16 = v75;
          }
        }
        else
        {
          uint64_t v83 = *v346;
          if ((unint64_t)v19 <= v74 - v83 && *v19 == *(unsigned __int8 *)(v4 + 272))
          {
            if (v83 == 1)
            {
              uint64_t v83 = 1;
LABEL_539:
              int v12 = 0;
              uint64_t v21 = &v19[v83];
LABEL_20:
              v366[0] = v21;
              goto LABEL_30;
            }
            if (v19[1] == *(unsigned __int8 *)(v4 + 273)) {
              goto LABEL_539;
            }
          }
        }
        int v84 = v19 + 1;
        v366[0] = v19 + 1;
        if (v353 && v84 < v8)
        {
          int64_t v85 = v345 - v19;
          do
          {
            if ((*v84 & 0xC0) != 0x80) {
              goto LABEL_158;
            }
            v366[0] = ++v84;
            --v85;
          }
          while (v85);
          int v84 = v8;
        }
LABEL_158:
        long long v19 = v84;
        if (v84 >= v8) {
          goto LABEL_407;
        }
      }
    }
LABEL_60:
    if (v20 == 40 && v8 - v19 >= 2 && *v19 == 63 && v19[1] == 35)
    {
      uint64_t v21 = v19 + 1;
      while (1)
      {
        v366[0] = v21;
        if (v21 >= v8) {
          break;
        }
        int v33 = *v21++;
        if (v33 == 41)
        {
          int v12 = 0;
          goto LABEL_20;
        }
      }
      int v320 = 118;
      goto LABEL_811;
    }
LABEL_78:
    uint64_t v43 = (v14 - 1);
    if ((int)v14 <= 0)
    {
      int v44 = (int)v5;
      v333 = v8;
      BOOL v45 = v10;
      uint64_t v46 = v11;
      uint64_t v47 = v15;
      uint64_t v48 = v17;
      int v49 = v13;
      int v50 = v16;
      unint64_t v51 = sub_1A6876300(v44, &v363, v352, v6, v4);
      LODWORD(v16) = v50;
      LODWORD(v10) = v45;
      int v8 = v333;
      LODWORD(v13) = v49;
      uint64_t v17 = v48;
      uint64_t v15 = v47;
      uint64_t v11 = v46;
      uint64_t v6 = v51;
    }
    uint64_t v14 = v43;
LABEL_81:
    if ((int)v13 >= 1)
    {
      if (v365 == 40 && v8 - v366[0] >= 3)
      {
        int v52 = *v366[0];
        if (v52 == 63)
        {
          unsigned int v53 = v366[0][1];
          if (v53 > 0x3C)
          {
            if (v53 != 61 && (v53 != 67 || v13 != 2)) {
              goto LABEL_818;
            }
          }
          else if (v53 != 33)
          {
            if (v53 != 60) {
              goto LABEL_818;
            }
            int v54 = v366[0][2];
            if (v54 != 33 && v54 != 61) {
              goto LABEL_818;
            }
          }
        }
        else if (v52 != 42 || (*(unsigned char *)(*(void *)(v4 + 32) + v366[0][1]) & 4) == 0)
        {
          goto LABEL_818;
        }
        goto LABEL_106;
      }
LABEL_818:
      v318 = v366[0] - 1;
LABEL_819:
      v366[0] = v318;
      int v320 = 128;
      goto LABEL_811;
    }
LABEL_106:
    int v62 = v365;
    if (v16)
    {
      if (v365 <= 62)
      {
        uint64_t v63 = 2150891520;
        switch(v365)
        {
          case '$':
            goto LABEL_111;
          case '(':
            goto LABEL_160;
          case ')':
            goto LABEL_170;
          case '*':
            goto LABEL_239;
          case '+':
            goto LABEL_114;
          case '.':
            goto LABEL_180;
          default:
            goto LABEL_229;
        }
      }
      if (v365 <= 93)
      {
        if (v365 == 63)
        {
LABEL_114:
          uint64_t v13 = 0;
          int v12 = 0;
          BOOL v10 = 0;
          if (v365 == 63) {
            int v65 = 0x20000;
          }
          else {
            int v65 = 0x10000;
          }
          int v66 = v65 + v16;
          uint64_t v67 = 0x3FFFFFFFFFFFFFFFLL;
          if (v16 == -2143485952) {
            uint64_t v67 = 0x3FFFFFFFFFFFFFFDLL;
          }
          v6[v67] = v66;
          uint64_t v16 = 0;
          goto LABEL_30;
        }
        goto LABEL_122;
      }
      goto LABEL_131;
    }
    if (v365 > 62)
    {
      if (v365 <= 93)
      {
        if (v365 != 63)
        {
LABEL_122:
          if (v365 != 91)
          {
            if (v365 != 92) {
              goto LABEL_229;
            }
            unsigned int v323 = v15;
            BOOL v68 = v366[0];
            v358 = v366[0];
            unsigned int v335 = v17;
            unsigned int v69 = _pcre2_check_escape_8(v366, (unint64_t)v8, &v365, (int *)&v362 + 1, v17, *(_DWORD *)(*(void *)v4 + 64), 0, v4);
            if (!HIDWORD(v362))
            {
              unsigned int v70 = v69;
              uint64_t v15 = v323;
              uint64_t v17 = v335;
              goto LABEL_440;
            }
            while (1)
            {
              uint64_t v15 = v323;
              if ((v348 & 2) == 0) {
                goto LABEL_812;
              }
              v366[0] = v68;
              if (v68 >= v8)
              {
                unsigned int v70 = 0;
                int v365 = 92;
                uint64_t v17 = v335;
              }
              else
              {
                unsigned int v70 = 0;
                v366[0] = v68 + 1;
                unsigned int v71 = *v68;
                int v365 = v71;
                uint64_t v17 = v335;
                if (v353 && v71 >= 0xC0)
                {
                  if ((v71 & 0x20) == 0)
                  {
                    unsigned int v70 = 0;
                    v366[0] = v68 + 2;
                    int v365 = v68[1] & 0x3F | ((v71 & 0x1F) << 6);
                    goto LABEL_440;
                  }
                  int v182 = v68[1] & 0x3F;
                  if ((v71 & 0x10) != 0)
                  {
                    if ((v71 & 8) != 0)
                    {
                      int v201 = v68[2] & 0x3F;
                      int v202 = v68[3] & 0x3F;
                      int v203 = v68[4] & 0x3F;
                      unsigned int v70 = 0;
                      if ((v71 & 4) == 0)
                      {
                        int v365 = ((v71 & 3) << 24) | (v182 << 18) | (v201 << 12) | (v202 << 6) | v203;
                        v366[0] = v68 + 5;
                        goto LABEL_440;
                      }
                      int v365 = ((v71 & 1) << 30) | (v182 << 24) | (v201 << 18) | (v202 << 12) | (v203 << 6) | v68[5] & 0x3F;
                      int v183 = v68 + 6;
                    }
                    else
                    {
                      unsigned int v70 = 0;
                      int v365 = ((v71 & 7) << 18) | (v182 << 12) | ((v68[2] & 0x3F) << 6) | v68[3] & 0x3F;
                      int v183 = v68 + 4;
                    }
                  }
                  else
                  {
                    unsigned int v70 = 0;
                    int v365 = ((v71 & 0xF) << 12) | (v182 << 6) | v68[2] & 0x3F;
                    int v183 = v68 + 3;
                  }
                  v366[0] = v183;
                }
              }
LABEL_440:
              if (!v70)
              {
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                int v204 = v365;
LABEL_446:
                *v6++ = v204;
                BOOL v10 = 1;
                goto LABEL_30;
              }
              if ((v70 & 0x80000000) != 0)
              {
                uint64_t v205 = &v366[0][~*(void *)(v4 + 56)];
                *uint64_t v6 = -v70 | 0x80030000;
                if (v70 >= 0xFFFFFFF7)
                {
                  uint64_t v206 = v4 + 8 * -v70;
                  uint64_t v208 = *(void *)(v206 + 88);
                  uint64_t v207 = (unsigned __int8 **)(v206 + 88);
                  uint64_t v16 = 0;
                  uint64_t v13 = 0;
                  int v12 = 0;
                  if (v208 == -1) {
                    *uint64_t v207 = v205;
                  }
                  BOOL v10 = 1;
                  ++v6;
                  goto LABEL_30;
                }
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                *(void *)(v6 + 1) = __ROR8__(v205, 32);
                goto LABEL_451;
              }
              switch(v70)
              {
                case 6u:
                case 7u:
                case 8u:
                case 9u:
                case 0xAu:
                case 0xBu:
                  if ((v17 & 0x20000) == 0) {
                    goto LABEL_444;
                  }
                  if (v70 - 7 > 4) {
                    int v209 = -2145910769;
                  }
                  else {
                    int v209 = dword_1A68A7F34[v70 - 7];
                  }
                  uint64_t v16 = 0;
                  *uint64_t v6 = v209;
                  BOOL v10 = 1;
                  if (v70 > 0xB) {
                    goto LABEL_579;
                  }
                  int v217 = 1 << v70;
                  if (((1 << v70) & 0xC0) != 0)
                  {
                    uint64_t v16 = 0;
                    uint64_t v13 = 0;
                    int v12 = 0;
                    int v218 = 196621;
                  }
                  else if ((v217 & 0x300) != 0)
                  {
                    uint64_t v16 = 0;
                    uint64_t v13 = 0;
                    int v12 = 0;
                    int v218 = 458752;
                  }
                  else
                  {
                    if ((v217 & 0xC00) == 0)
                    {
LABEL_579:
                      ++v6;
                      uint64_t v13 = 0;
                      int v12 = 0;
                      goto LABEL_30;
                    }
                    uint64_t v16 = 0;
                    uint64_t v13 = 0;
                    int v12 = 0;
                    int v218 = 589824;
                  }
                  v6[1] = v218;
                  v6 += 2;
                  goto LABEL_30;
                case 0xCu:
                case 0x11u:
                case 0x12u:
                case 0x13u:
                case 0x14u:
                case 0x15u:
                case 0x16u:
LABEL_444:
                  uint64_t v16 = 0;
                  uint64_t v13 = 0;
                  int v12 = 0;
                  int v62 = v70 - 2145910784;
                  goto LABEL_230;
                case 0xEu:
                  if ((v17 & 0x100000) == 0)
                  {
                    uint64_t v16 = 0;
                    uint64_t v13 = 0;
                    int v12 = 0;
                    int v204 = -2145910770;
                    goto LABEL_446;
                  }
                  int v219 = 183;
                  goto LABEL_668;
                case 0xFu:
                case 0x10u:
                  LODWORD(v355) = 0;
                  int v356 = 0;
                  if (!sub_1A6876384((unint64_t *)v366, &v355, (_WORD *)&v356 + 1, &v356, (_DWORD *)&v362 + 1, v4))continue; {
                  uint64_t v16 = 0;
                  }
                  uint64_t v13 = 0;
                  int v12 = 0;
                  if (v70 == 15) {
                    int v210 = 16;
                  }
                  else {
                    int v210 = 15;
                  }
                  if (v355) {
                    unsigned int v211 = v210;
                  }
                  else {
                    unsigned int v211 = v70;
                  }
                  int v212 = (unsigned __int16)v356 | (HIWORD(v356) << 16);
                  *uint64_t v6 = v211 - 2145910784;
                  v6[1] = v212;
                  v6 += 2;
                  goto LABEL_464;
                case 0x1Bu:
                case 0x1Cu:
                  if (v366[0] >= v8 || (int v213 = *v366[0], v213 != 39) && v213 != 60 && v213 != 123)
                  {
                    if (v70 == 27) {
                      int v219 = 157;
                    }
                    else {
                      int v219 = 169;
                    }
                    goto LABEL_668;
                  }
                  if (v213 == 39) {
                    int v214 = 39;
                  }
                  else {
                    int v214 = 125;
                  }
                  if (v213 == 60) {
                    int v215 = 62;
                  }
                  else {
                    int v215 = v214;
                  }
                  BOOL v216 = v213 == 39 || v213 == 60;
                  if (v70 != 27 || !v216) {
                    goto LABEL_682;
                  }
                  v355 = v366[0] + 1;
                  if (sub_1A686E208(&v355, (unint64_t)v8, *(_DWORD *)(v4 + 212), 0xFFFFu, 161, (int *)&v362, (int *)&v362 + 1))
                  {
                    unsigned int v95 = v355;
                    if (v355 < v8 && v215 == *v355)
                    {
                      int v94 = v362;
                      uint64_t v15 = v323;
                      uint64_t v17 = v335;
                      goto LABEL_169;
                    }
                    int v219 = 157;
LABEL_668:
                    HIDWORD(v362) = v219;
                  }
                  else if (!HIDWORD(v362))
                  {
LABEL_682:
                    if (sub_1A6876704(v366, (unint64_t)v8, v344, v215, &v357, &v361, &v364, (int *)&v362 + 1, v4))
                    {
                      uint64_t v16 = 0;
                      uint64_t v13 = 0;
                      int v12 = 0;
                      if (v215 == 125 || v70 == 28) {
                        int v282 = -2147221504;
                      }
                      else {
                        int v282 = -2145320960;
                      }
                      *uint64_t v6 = v282;
                      v6[1] = v364;
                      *((void *)v6 + 1) = __ROR8__(v357, 32);
                      v6 += 4;
LABEL_464:
                      BOOL v10 = 1;
                      uint64_t v15 = v323;
                      uint64_t v17 = v335;
                      goto LABEL_30;
                    }
                  }
                  break;
                default:
                  uint64_t v16 = 0;
                  uint64_t v13 = 0;
                  int v12 = 0;
                  BOOL v10 = 0;
                  int v64 = v70 - 2145910784;
                  goto LABEL_226;
              }
            }
          }
          uint64_t v101 = v366[0];
          if (v8 - v366[0] >= 6)
          {
            uint64_t v102 = v14;
            uint64_t v103 = v17;
            uint64_t v104 = v15;
            if (!_pcre2_strncmp_c8_8(v366[0], "[:<:]]", 6)
              || !_pcre2_strncmp_c8_8(v366[0], "[:>:]]", 6))
            {
              *uint64_t v6 = -2145910779;
              uint64_t v178 = v6 + 2;
              int v179 = v366[0];
              if (v366[0][2] == 60)
              {
                v6[1] = -2145189888;
              }
              else
              {
                v6[1] = -2145058816;
                *a3 = 1;
                uint64_t v178 = v6 + 4;
                *((void *)v6 + 1) = 0;
              }
              uint64_t v15 = v104;
              uint64_t v17 = v103;
              uint64_t v14 = v102;
              if ((v17 & 0x20000) != 0)
              {
                uint64_t v180 = v178 + 2;
                v178[1] = 589824;
                int v181 = -2145910768;
              }
              else
              {
                uint64_t v180 = v178 + 1;
                int v181 = -2145910773;
              }
              uint64_t v16 = 0;
              uint64_t v13 = 0;
              int v12 = 0;
              *uint64_t v178 = v181;
              *uint64_t v180 = -2145845248;
              uint64_t v6 = v180 + 1;
              v366[0] = v179 + 6;
              goto LABEL_231;
            }
            uint64_t v101 = v366[0];
            uint64_t v15 = v104;
            uint64_t v17 = v103;
            uint64_t v14 = v102;
          }
          if (v101 < v8)
          {
            unsigned int v105 = *v101;
            if (v105 <= 0x3D && ((1 << v105) & 0x2400400000000000) != 0)
            {
              uint64_t v106 = v11;
              uint64_t v107 = v17;
              uint64_t v108 = v15;
              int v109 = sub_1A6876A18(v101, (uint64_t)v8, &v358);
              uint64_t v101 = v366[0];
              if (v109)
              {
                --v366[0];
                if (*v101 == 58) {
                  int v320 = 112;
                }
                else {
                  int v320 = 113;
                }
LABEL_811:
                HIDWORD(v362) = v320;
LABEL_812:
                *(void *)(v4 + 168) = &v366[0][-*(void *)(v4 + 56)];
                return HIDWORD(v362);
              }
              uint64_t v15 = v108;
              uint64_t v17 = v107;
              uint64_t v11 = v106;
            }
          }
          if (v101 < v8)
          {
            int v110 = 0;
            while (1)
            {
              v366[0] = v101 + 1;
              unsigned int v111 = *v101;
              if (v353 && v111 >= 0xC0)
              {
                if ((v111 & 0x20) != 0)
                {
                  int v113 = v101[1] & 0x3F;
                  if ((v111 & 0x10) != 0)
                  {
                    if ((v111 & 8) != 0)
                    {
                      int v114 = v101[2] & 0x3F;
                      int v115 = v101[3] & 0x3F;
                      int v116 = v101[4] & 0x3F;
                      if ((v111 & 4) != 0)
                      {
                        unsigned int v111 = ((v111 & 1) << 30) | (v113 << 24) | (v114 << 18) | (v115 << 12) | (v116 << 6) | v101[5] & 0x3F;
                        v101 += 6;
                      }
                      else
                      {
                        unsigned int v111 = ((v111 & 3) << 24) | (v113 << 18) | (v114 << 12) | (v115 << 6) | v116;
                        v101 += 5;
                      }
                    }
                    else
                    {
                      unsigned int v111 = ((v111 & 7) << 18) | (v113 << 12) | ((v101[2] & 0x3F) << 6) | v101[3] & 0x3F;
                      v101 += 4;
                    }
                  }
                  else
                  {
                    unsigned int v111 = ((v111 & 0xF) << 12) | (v113 << 6) | v101[2] & 0x3F;
                    v101 += 3;
                  }
                  v366[0] = v101;
                }
                else
                {
                  v366[0] = v101 + 2;
                  int v112 = v101[1] & 0x3F | ((v111 & 0x1F) << 6);
                  v101 += 2;
                  unsigned int v111 = v112;
                }
              }
              else
              {
                ++v101;
              }
              if (v111 == 92)
              {
                int v365 = 92;
                if (v101 < v8 && *v101 == 69)
                {
                  v366[0] = ++v101;
                  unsigned int v111 = 92;
                }
                else
                {
                  if (v8 - v101 < 3) {
                    goto LABEL_255;
                  }
                  uint64_t v118 = v14;
                  uint64_t v119 = v17;
                  uint64_t v120 = v15;
                  if (_pcre2_strncmp_c8_8(v101, "Q\\E", 3))
                  {
                    unsigned int v111 = v365;
                    uint64_t v15 = v120;
                    uint64_t v17 = v119;
                    uint64_t v14 = v118;
                    goto LABEL_253;
                  }
                  uint64_t v101 = v366[0] + 3;
                  v366[0] += 3;
                  unsigned int v111 = 92;
                  uint64_t v15 = v120;
                  uint64_t v17 = v119;
                  uint64_t v14 = v118;
                }
              }
              else if ((v17 & 0x1000000) == 0 || (v111 != 32 ? (BOOL v117 = v111 == 9) : (BOOL v117 = 1), !v117))
              {
                int v365 = v111;
                if (v110 || v111 != 94) {
                  goto LABEL_253;
                }
                int v110 = 1;
              }
              if (v101 >= v8) {
                goto LABEL_252;
              }
            }
          }
          int v110 = 0;
          unsigned int v111 = 91;
LABEL_252:
          int v365 = v111;
LABEL_253:
          if (v111 != 93 || (*(unsigned char *)(v4 + 204) & 1) == 0)
          {
LABEL_255:
            unsigned int v125 = 0;
            int v126 = 0;
            if (v110) {
              int v127 = -2146566144;
            }
            else {
              int v127 = -2146828288;
            }
            *uint64_t v6 = v127;
            long long v128 = v6 + 1;
            unsigned int v337 = v17;
            while (!v126)
            {
              if ((v17 & 0x1000000) != 0 && (v365 == 9 || v365 == 32))
              {
                int v126 = 0;
                goto LABEL_333;
              }
              if (v365 == 91)
              {
                if (v8 - v366[0] >= 3)
                {
                  uint64_t v129 = v14;
                  unsigned int v130 = *v366[0];
                  BOOL v299 = v130 > 0x3D;
                  uint64_t v131 = (1 << v130) & 0x2400400000000000;
                  if (!v299 && v131 != 0)
                  {
                    uint64_t v133 = v15;
                    if (sub_1A6876A18(v366[0], (uint64_t)v8, &v358))
                    {
                      if (v125 == 1) {
                        goto LABEL_829;
                      }
                      id v134 = v366[0];
                      if (*v366[0] != 58)
                      {
                        int v319 = 113;
                        goto LABEL_826;
                      }
                      uint64_t v135 = ++v366[0];
                      int v136 = v134[1];
                      if (v136 == 94)
                      {
                        uint64_t v135 = v134 + 2;
                        v366[0] = v134 + 2;
                      }
                      uint64_t v137 = v358;
                      int v138 = sub_1A6876AB4(v135, (int)v358 - (int)v135);
                      if (v138 < 0)
                      {
                        int v320 = 130;
                        goto LABEL_811;
                      }
                      v366[0] = v137 + 2;
                      if (v137 + 2 < v345 && v137[2] == 45 && v137[3] != 93)
                      {
LABEL_829:
                        int v320 = 150;
                        goto LABEL_811;
                      }
                      uint64_t v15 = v133;
                      uint64_t v17 = v337;
                      uint64_t v14 = v129;
                      if ((v337 & 0x20000) == 0) {
                        goto LABEL_320;
                      }
                      if ((0xBFFFAFFuLL >> (2 * v138)))
                      {
                        unsigned int v125 = 0;
                        int v126 = 0;
                        int v151 = dword_1A68A7AE0[(2 * v138) | 1];
                        int v152 = dword_1A68A7AE0[2 * v138];
                        if (v136 == 94) {
                          int v153 = -2145910769;
                        }
                        else {
                          int v153 = -2145910768;
                        }
                        *long long v128 = v153;
                        v128[1] = v151 | (v152 << 16);
                      }
                      else
                      {
                        if (((0xAAA2280uLL >> ((2 * v138) | 1u)) & 1) == 0)
                        {
                          unsigned int v125 = 0;
                          int v126 = 0;
                          if (v136 == 94) {
                            int v139 = -2145910766;
                          }
                          else {
                            int v139 = -2145910765;
                          }
                          *v128++ = v139;
                          goto LABEL_333;
                        }
LABEL_320:
                        unsigned int v125 = 0;
                        int v126 = 0;
                        if (v136 == 94) {
                          int v149 = -2145583104;
                        }
                        else {
                          int v149 = -2145648640;
                        }
                        *long long v128 = v149;
                        v128[1] = v138;
                      }
                      v128 += 2;
                      goto LABEL_333;
                    }
                    int v140 = 0;
                    int v141 = 3;
                    uint64_t v15 = v133;
                    uint64_t v17 = v337;
                    goto LABEL_291;
                  }
                  goto LABEL_290;
                }
LABEL_289:
                uint64_t v129 = v14;
LABEL_290:
                int v140 = 0;
                int v141 = 3;
                goto LABEL_291;
              }
              if (v365 == 45 && v125 >= 2)
              {
                int v126 = 0;
                if (v125 == 3) {
                  int v148 = -2145452032;
                }
                else {
                  int v148 = -2145517568;
                }
                *v128++ = v148;
                unsigned int v125 = 1;
                goto LABEL_333;
              }
              uint64_t v129 = v14;
              if (v365 != 92) {
                goto LABEL_290;
              }
              unsigned int v324 = v15;
              unint64_t v145 = v366[0];
              v358 = v366[0];
              int v146 = _pcre2_check_escape_8(v366, (unint64_t)v8, &v365, (int *)&v362 + 1, v17, *(_DWORD *)(*(void *)v4 + 64), 1, v4);
              if (!HIDWORD(v362))
              {
                int v150 = v146;
                if (v146 > 16)
                {
                  uint64_t v15 = v324;
                  uint64_t v17 = v337;
                  uint64_t v14 = v129;
                  int v126 = 0;
                  switch(v146)
                  {
                    case 17:
                    case 22:
                      goto LABEL_839;
                    case 25:
                      goto LABEL_333;
                    case 26:
                      int v126 = 1;
                      goto LABEL_333;
                    default:
                      goto LABEL_355;
                  }
                }
                uint64_t v15 = v324;
                uint64_t v17 = v337;
                if (v146)
                {
                  if (v146 != 5)
                  {
                    uint64_t v14 = v129;
                    if (v146 == 4)
                    {
LABEL_839:
                      int v319 = 107;
                      goto LABEL_826;
                    }
LABEL_355:
                    if (v125 == 1) {
                      goto LABEL_829;
                    }
                    switch(v146)
                    {
                      case 6:
                      case 7:
                      case 8:
                      case 9:
                      case 10:
                      case 11:
                        if ((v17 & 0x20000) == 0) {
                          goto LABEL_358;
                        }
                        if ((v146 - 7) > 4) {
                          int v167 = -2145910769;
                        }
                        else {
                          int v167 = dword_1A68A7F34[v146 - 7];
                        }
                        *long long v128 = v167;
                        uint64_t v163 = v128 + 1;
                        if (v146 > 0xB) {
                          goto LABEL_385;
                        }
                        int v172 = 1 << v146;
                        if (((1 << v146) & 0xC0) != 0)
                        {
                          uint64_t v163 = v128 + 2;
                          int v173 = 196621;
                        }
                        else
                        {
                          if ((v172 & 0x300) == 0)
                          {
                            uint64_t v15 = v324;
                            uint64_t v17 = v337;
                            uint64_t v14 = v129;
                            if ((v172 & 0xC00) != 0)
                            {
                              uint64_t v163 = v128 + 2;
                              v128[1] = 589824;
                            }
                            goto LABEL_386;
                          }
                          uint64_t v163 = v128 + 2;
                          int v173 = 458752;
                        }
                        v128[1] = v173;
LABEL_385:
                        uint64_t v15 = v324;
                        uint64_t v17 = v337;
                        uint64_t v14 = v129;
LABEL_386:
                        if (v366[0] < v345 && *v366[0] == 45 && v366[0][1] != 93) {
                          goto LABEL_829;
                        }
                        unsigned int v125 = 0;
                        int v126 = 0;
                        long long v128 = v163;
                        break;
                      case 12:
                        int v320 = 171;
                        goto LABEL_811;
                      case 15:
                      case 16:
                        LODWORD(v355) = 0;
                        int v356 = 0;
                        if (!sub_1A6876384((unint64_t *)v366, &v355, (_WORD *)&v356 + 1, &v356, (_DWORD *)&v362 + 1, v4))goto LABEL_812; {
                        if (v150 == 15)
                        }
                          int v168 = 16;
                        else {
                          int v168 = 15;
                        }
                        if (v355) {
                          int v169 = v168;
                        }
                        else {
                          int v169 = v150;
                        }
                        int v170 = v169 - 2145910784;
                        int v171 = (unsigned __int16)v356 | (HIWORD(v356) << 16);
                        uint64_t v163 = v128 + 2;
                        *long long v128 = v170;
                        v128[1] = v171;
                        uint64_t v15 = v324;
                        uint64_t v17 = v337;
                        uint64_t v14 = v129;
                        goto LABEL_386;
                      case 18:
                      case 19:
                      case 20:
                      case 21:
LABEL_358:
                        *long long v128 = v146 - 2145910784;
                        uint64_t v163 = v128 + 1;
                        goto LABEL_386;
                      default:
                        goto LABEL_839;
                    }
                    goto LABEL_333;
                  }
                  int v365 = 8;
                }
                goto LABEL_375;
              }
              if ((v348 & 2) == 0) {
                goto LABEL_812;
              }
              v366[0] = v145;
              uint64_t v15 = v324;
              uint64_t v17 = v337;
              if (v145 >= v8)
              {
                int v365 = 92;
                int v140 = 1;
                int v141 = 2;
              }
              else
              {
                v366[0] = v145 + 1;
                unsigned int v147 = *v145;
                int v365 = v147;
                int v140 = 1;
                int v141 = 2;
                if (!v353 || v147 < 0xC0) {
                  goto LABEL_291;
                }
                if ((v147 & 0x20) != 0)
                {
                  int v161 = v145[1] & 0x3F;
                  if ((v147 & 0x10) == 0)
                  {
                    int v365 = ((v147 & 0xF) << 12) | (v161 << 6) | v145[2] & 0x3F;
                    v162 = v145 + 3;
                    goto LABEL_374;
                  }
                  if ((v147 & 8) == 0)
                  {
                    int v365 = ((v147 & 7) << 18) | (v161 << 12) | ((v145[2] & 0x3F) << 6) | v145[3] & 0x3F;
                    v162 = v145 + 4;
                    goto LABEL_374;
                  }
                  int v164 = v145[2] & 0x3F;
                  int v165 = v145[3] & 0x3F;
                  int v166 = v145[4] & 0x3F;
                  if ((v147 & 4) != 0)
                  {
                    int v365 = ((v147 & 1) << 30) | (v161 << 24) | (v164 << 18) | (v165 << 12) | (v166 << 6) | v145[5] & 0x3F;
                    v162 = v145 + 6;
LABEL_374:
                    v366[0] = v162;
                  }
                  else
                  {
                    int v365 = ((v147 & 3) << 24) | (v161 << 18) | (v164 << 12) | (v165 << 6) | v166;
                    v366[0] = v145 + 5;
                  }
LABEL_375:
                  int v140 = 1;
                  int v141 = 2;
                  goto LABEL_291;
                }
                v366[0] = v145 + 2;
                int v365 = v145[1] & 0x3F | ((v147 & 0x1F) << 6);
                int v140 = 1;
              }
LABEL_291:
              int v142 = v365;
              if (v125 != 1)
              {
                *v128++ = v365;
                unsigned int v125 = v141;
                goto LABEL_295;
              }
              unsigned int v143 = *(v128 - 2);
              if (v365 == v143)
              {
                unsigned int v125 = 0;
                --v128;
LABEL_295:
                uint64_t v14 = v129;
                goto LABEL_333;
              }
              if (v143 > v365)
              {
                int v319 = 108;
                goto LABEL_826;
              }
              if (v140)
              {
                uint64_t v14 = v129;
                if (*(v128 - 1) == -2145452032)
                {
                  *(v128 - 1) = -2145517568;
                  int v142 = v365;
                }
              }
              else
              {
                uint64_t v14 = v129;
              }
              unsigned int v125 = 0;
              *v128++ = v142;
LABEL_333:
              uint64_t v154 = v366[0];
              if (v366[0] >= v8)
              {
                int v320 = 106;
                goto LABEL_811;
              }
              ++v366[0];
              unsigned int v155 = *v154;
              int v365 = v155;
              if (v353 && v155 >= 0xC0)
              {
                if ((v155 & 0x20) != 0)
                {
                  int v156 = v154[1] & 0x3F;
                  if ((v155 & 0x10) != 0)
                  {
                    if ((v155 & 8) != 0)
                    {
                      int v158 = v154[2] & 0x3F;
                      int v159 = v154[3] & 0x3F;
                      int v160 = v154[4] & 0x3F;
                      if ((v155 & 4) != 0)
                      {
                        unsigned int v155 = ((v155 & 1) << 30) | (v156 << 24) | (v158 << 18) | (v159 << 12) | (v160 << 6) | v154[5] & 0x3F;
                        int v365 = v155;
                        id v157 = v154 + 6;
                      }
                      else
                      {
                        id v157 = v154 + 5;
                        unsigned int v155 = ((v155 & 3) << 24) | (v156 << 18) | (v158 << 12) | (v159 << 6) | v160;
                        int v365 = v155;
                      }
                    }
                    else
                    {
                      unsigned int v155 = ((v155 & 7) << 18) | (v156 << 12) | ((v154[2] & 0x3F) << 6) | v154[3] & 0x3F;
                      int v365 = v155;
                      id v157 = v154 + 4;
                    }
                  }
                  else
                  {
                    unsigned int v155 = ((v155 & 0xF) << 12) | (v156 << 6) | v154[2] & 0x3F;
                    int v365 = v155;
                    id v157 = v154 + 3;
                  }
                  v366[0] = v157;
                }
                else
                {
                  v366[0] = v154 + 2;
                  int v365 = v154[1] & 0x3F | ((v155 & 0x1F) << 6);
                  unsigned int v155 = v365;
                }
              }
              if (!v126 && v155 == 93)
              {
                if (v125 == 1) {
                  *(v128 - 1) = 45;
                }
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                *long long v128 = -2146631680;
                uint64_t v6 = v128 + 1;
                BOOL v10 = 1;
                goto LABEL_30;
              }
            }
            if (v365 == 92 && v366[0] < v8 && *v366[0] == 69)
            {
              int v126 = 0;
              ++v366[0];
              goto LABEL_333;
            }
            goto LABEL_289;
          }
          uint64_t v16 = 0;
          uint64_t v13 = 0;
          int v12 = 0;
          if (v110) {
            int v62 = -2146697216;
          }
          else {
            int v62 = -2146762752;
          }
LABEL_230:
          *v6++ = v62;
LABEL_231:
          BOOL v10 = 1;
          goto LABEL_30;
        }
        uint64_t v63 = 2151284736;
        goto LABEL_239;
      }
LABEL_131:
      if (v365 == 94)
      {
        uint64_t v16 = 0;
        uint64_t v13 = 0;
        int v12 = 0;
        BOOL v10 = 0;
        int v64 = -2146893824;
        goto LABEL_226;
      }
      if (v365 != 123)
      {
        if (v365 != 124)
        {
LABEL_229:
          uint64_t v16 = 0;
          uint64_t v13 = 0;
          int v12 = 0;
          goto LABEL_230;
        }
        if (v347 && *v347 == (unsigned __int16)v15 && (v347[3] & 1) != 0)
        {
          unsigned int v72 = *(_DWORD *)(v4 + 212);
          if (v72 > v347[2]) {
            v347[2] = v72;
          }
          *(_DWORD *)(v4 + 212) = v347[1];
        }
        uint64_t v16 = 0;
        uint64_t v13 = 0;
        int v12 = 0;
        BOOL v10 = 0;
        int v64 = -2147418112;
LABEL_226:
        *v6++ = v64;
        goto LABEL_30;
      }
      BOOL v121 = v10;
      unsigned int v336 = v17;
      uint64_t v122 = v15;
      if (!sub_1A686E08C((unint64_t *)v366, (unint64_t)v8, (unsigned int *)&v360 + 1, (unsigned int *)&v360, (int *)&v362 + 1))
      {
        int v12 = HIDWORD(v362);
        if (HIDWORD(v362)) {
          goto LABEL_812;
        }
        uint64_t v15 = v122;
        uint64_t v16 = 0;
        uint64_t v13 = 0;
        *v6++ = 123;
        BOOL v10 = 1;
        uint64_t v17 = v336;
        goto LABEL_30;
      }
      uint64_t v63 = 2151481344;
      uint64_t v15 = v122;
      uint64_t v17 = v336;
      LODWORD(v10) = v121;
LABEL_239:
      if (v10)
      {
        long long v123 = v6 - 1;
        if (*(v6 - 1) == -2144731136)
        {
          while (v123 >= v343)
          {
            v123[1] = *v123;
            --v123;
          }
          int *v343 = -2145779712;
          v6[1] = -2145845248;
          v6 += 2;
        }
        *uint64_t v6 = v63;
        uint64_t v13 = 0;
        int v12 = 0;
        BOOL v10 = 0;
        if (v365 == 123)
        {
          int v124 = v360;
          v6[1] = HIDWORD(v360);
          void v6[2] = v124;
          v6 += 3;
        }
        else
        {
          ++v6;
        }
        uint64_t v16 = v63;
        goto LABEL_30;
      }
      int v319 = 109;
LABEL_826:
      HIDWORD(v362) = v319;
      --v366[0];
      goto LABEL_812;
    }
    uint64_t v63 = 2150891520;
    switch(v365)
    {
      case '$':
LABEL_111:
        uint64_t v16 = 0;
        uint64_t v13 = 0;
        int v12 = 0;
        BOOL v10 = 0;
        int v64 = -2146041856;
        goto LABEL_226;
      case '(':
LABEL_160:
        unsigned int v86 = v366[0];
        if (v366[0] >= v8) {
          goto LABEL_809;
        }
        int v87 = *v366[0];
        if (v87 == 42)
        {
          if (v8 - v366[0] < 2) {
            goto LABEL_392;
          }
          uint64_t v174 = v366[0][1];
          int v365 = v174;
          if (v174 == 41) {
            goto LABEL_392;
          }
          int v329 = v13;
          unsigned int v334 = v11;
          unsigned int v338 = v17;
          unsigned int v325 = v15;
          char v184 = *(unsigned char *)(*(void *)(v4 + 32) + v174);
          int v185 = sub_1A6876704(v366, (unint64_t)v8, v344, 0, &v357, &v361, &v364, (int *)&v362 + 1, v4);
          if ((v184 & 4) == 0)
          {
            uint64_t v11 = v334;
            if (!v185) {
              goto LABEL_812;
            }
            unsigned int v330 = v14;
            if (v366[0] >= v8) {
              goto LABEL_816;
            }
            int v186 = *v366[0];
            if (v186 != 41 && v186 != 58) {
              goto LABEL_816;
            }
            uint64_t v187 = v364;
            uint64_t v188 = v361;
            unint64_t v189 = -2;
            uint64_t v190 = &dword_1A68A7CDC;
            uint64_t v191 = (unsigned __int8 *)&unk_1A68A7CAC;
            while (1)
            {
              int v192 = *(v190 - 1);
              if (v187 == v192)
              {
                int v193 = _pcre2_strncmp_c8_8(v188, v191, v187);
                uint64_t v17 = v338;
                uint64_t v15 = v325;
                if (!v193) {
                  break;
                }
              }
              v190 += 3;
              v191 += (v192 + 1);
              if (++v189 == 7) {
                goto LABEL_816;
              }
            }
            unsigned int v229 = v189 + 2;
            LODWORD(v362) = v189 + 2;
            uint64_t v230 = v366[0];
            uint64_t v231 = v366[0] + 1;
            BOOL v232 = *v366[0] != 58 || v231 >= v8;
            if (!v232 && *v231 == 41)
            {
              ++v366[0];
              ++v230;
            }
            if (v229 <= 1 && *v230 != 58)
            {
              int v320 = 166;
              goto LABEL_811;
            }
            BOOL v10 = v189 == 0;
            v366[0] = v230 + 1;
            if (*v230 == 58)
            {
              int v233 = *v190 + ((v229 > 1) << 16);
              if (v189 < 3) {
                int v233 = -2144796672;
              }
              int v234 = v351;
              if (v189 < 3) {
                int v234 = *v190;
              }
              int v351 = v234;
              v349 = (char *)(v6 + 1);
              v350 = v230 + 1;
              v343 = v6;
              *uint64_t v6 = v233;
              v6 += 2;
              uint64_t v11 = 1;
            }
            else
            {
              v343 = v6;
              *v6++ = *v190;
            }
            uint64_t v14 = v330;
LABEL_406:
            uint64_t v16 = 0;
            uint64_t v13 = 0;
LABEL_407:
            int v12 = 0;
            goto LABEL_30;
          }
          if (!v185) {
            goto LABEL_812;
          }
          if (v366[0] >= v8 || *v366[0] != 58)
          {
LABEL_828:
            int v320 = 195;
            goto LABEL_811;
          }
          uint64_t v194 = 0;
          uint64_t v195 = v364;
          v196 = v361;
          uint64_t v197 = &dword_1A68A7C28;
          unsigned int v198 = (unsigned __int8 *)&unk_1A68A7B50;
          while (1)
          {
            int v199 = *(v197 - 1);
            if (v195 == v199)
            {
              int v200 = _pcre2_strncmp_c8_8(v196, v198, v195);
              LODWORD(v15) = v325;
              if (!v200) {
                break;
              }
            }
            v198 += (v199 + 1);
            ++v194;
            v197 += 2;
            if (v194 == 17) {
              goto LABEL_828;
            }
          }
          LODWORD(v362) = v194;
          int v235 = *v197;
          if (v329 >= 1 && (((0xB000uLL >> v194) | (0x1430CuLL >> v194)) & 1) != 0)
          {
            if ((vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vceqq_s32(vdupq_n_s32(v194), (int32x4_t)xmmword_1A68A7920), (int8x16_t)xmmword_1A68A7930)) & 0xF) != 0)int v320 = 198; {
            else
            }
              int v320 = 128;
            goto LABEL_811;
          }
          if (v235 <= -2145058817)
          {
            if (v235 <= -2145189889)
            {
              if (v235 == -2147352576)
              {
                int v88 = v366[0];
                LODWORD(v15) = v325;
                uint64_t v17 = v338;
                uint64_t v11 = v334;
LABEL_715:
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                BOOL v10 = 0;
                *v6++ = -2147352576;
                uint64_t v15 = (v15 + 1);
                uint64_t v21 = v88 + 1;
                goto LABEL_20;
              }
              LODWORD(v15) = v325;
              if (v235 != -2145255424) {
                goto LABEL_864;
              }
LABEL_645:
              *uint64_t v6 = -2145255424;
              uint64_t v15 = (v15 + 1);
              ++v366[0];
              if (v194 == 16 || v194 == 14)
              {
                v6[1] = -2147352576;
                if (v347)
                {
                  v347 += 6;
                  if ((unint64_t)v347 >= v341) {
                    goto LABEL_842;
                  }
                }
                else
                {
                  v347 = *(unsigned __int16 **)(v4 + 40);
                }
                BOOL v10 = 0;
                v6 += 2;
                unsigned __int16 *v347 = v15;
                v347[3] = 4;
                uint64_t v17 = v338;
                *((_DWORD *)v347 + 2) = v338 & 0x10424E8;
              }
              else
              {
                BOOL v10 = 0;
                ++v6;
                uint64_t v17 = v338;
              }
              uint64_t v11 = v334;
              goto LABEL_406;
            }
            if (v235 == -2145189888)
            {
              int v88 = v366[0];
              LODWORD(v15) = v325;
              LODWORD(v13) = v329;
              uint64_t v17 = v338;
              uint64_t v11 = v334;
LABEL_717:
              int v285 = -2145189888;
            }
            else
            {
              LODWORD(v15) = v325;
              if (v235 != -2145124352) {
                goto LABEL_864;
              }
              int v88 = v366[0];
              uint64_t v17 = v338;
              LODWORD(v13) = v329;
              uint64_t v11 = v334;
LABEL_697:
              int v285 = -2145124352;
            }
          }
          else
          {
            if (v235 <= -2144927745)
            {
              if (v235 != -2145058816 && v235 != -2144993280)
              {
LABEL_864:
                int v320 = 189;
                goto LABEL_811;
              }
LABEL_692:
              *uint64_t v6 = v235;
              int v88 = v366[0] - 1;
              uint64_t v17 = v338;
              LODWORD(v13) = v329;
              uint64_t v11 = v334;
LABEL_693:
              *a3 = 1;
              uint64_t v283 = (uint64_t)&v88[-*(void *)(v4 + 56) - 2];
              v357 = (unsigned __int8 *)v283;
              v6[1] = HIDWORD(v283);
              void v6[2] = v283;
              v6 += 3;
              v284 = v88 + 2;
              goto LABEL_719;
            }
            if (v235 != -2144927744)
            {
              if (v235 != -2144862208)
              {
                if (v235 != -1879113728) {
                  goto LABEL_864;
                }
                goto LABEL_645;
              }
              goto LABEL_692;
            }
            int v88 = v366[0];
            uint64_t v17 = v338;
            LODWORD(v13) = v329;
            uint64_t v11 = v334;
LABEL_713:
            int v285 = -2144927744;
          }
          *v6++ = v285;
          v284 = v88 + 1;
LABEL_719:
          v366[0] = v284;
          uint64_t v15 = (v15 + 1);
          if ((int)v13 < 1) {
            goto LABEL_392;
          }
          if (v347)
          {
            v291 = v347 + 6;
            if ((unint64_t)(v347 + 6) >= v341)
            {
LABEL_842:
              int v320 = 184;
              goto LABEL_811;
            }
          }
          else
          {
            v291 = *(unsigned __int16 **)(v4 + 40);
          }
          uint64_t v16 = 0;
          uint64_t v13 = 0;
          int v12 = 0;
          BOOL v10 = 0;
          unsigned __int16 *v291 = v15;
          v291[3] = 2;
          v347 = v291;
          *((_DWORD *)v291 + 2) = v17 & 0x10424E8;
          goto LABEL_30;
        }
        if (v87 != 63)
        {
          uint64_t v15 = (v15 + 1);
          if ((v17 & 0x2000) != 0)
          {
            BOOL v10 = 0;
            unsigned int v177 = -2145779712;
          }
          else
          {
            unsigned int v175 = *(_DWORD *)(v4 + 212);
            if (v175 >= 0xFFFF) {
              goto LABEL_835;
            }
            BOOL v10 = 0;
            unsigned int v176 = v175 + 1;
            *(_DWORD *)(v4 + 212) = v176;
            unsigned int v177 = v176 | 0x80080000;
          }
          *v6++ = v177;
          goto LABEL_406;
        }
        int v88 = ++v366[0];
        if (v86 + 1 >= v8) {
          goto LABEL_809;
        }
        unsigned __int8 v89 = *v88;
        int v90 = -1;
        switch(*v88)
        {
          case '!':
            goto LABEL_697;
          case '&':
            goto LABEL_533;
          case '\'':
            goto LABEL_562;
          case '(':
            v366[0] = v86 + 2;
            if (v86 + 2 >= v8) {
              goto LABEL_809;
            }
            uint64_t v15 = (v15 + 1);
            int v220 = v86[2];
            if (v220 == 63 || v220 == 42)
            {
              uint64_t v16 = 0;
              int v12 = 0;
              BOOL v10 = 0;
              *v6++ = -2146500608;
              v366[0] = v86 + 1;
              uint64_t v13 = 2;
              goto LABEL_30;
            }
            unsigned int v340 = v17;
            unsigned int v327 = v15;
            if (sub_1A686E208(v366, (unint64_t)v8, *(_DWORD *)(v4 + 212), 0xFFFFu, 161, (int *)&v362, (int *)&v362 + 1))
            {
              if ((int)v362 <= 0)
              {
                int v322 = 115;
                goto LABEL_862;
              }
              *uint64_t v6 = -2146304000;
              v270 = v366[0];
              v271 = &v366[0][-*(void *)(v4 + 56) - 2];
              v357 = v271;
              v6[1] = HIDWORD(v271);
              void v6[2] = (int)v271;
              v6[3] = v362;
              goto LABEL_757;
            }
            if (HIDWORD(v362)) {
              goto LABEL_812;
            }
            v286 = v366[0];
            if (v8 - v366[0] >= 10)
            {
              int v287 = _pcre2_strncmp_c8_8(v366[0], "VERSION", 7);
              v286 = v366[0];
              if (!v287 && v366[0][7] != 41)
              {
                v366[0] += 7;
                int v296 = v286[7];
                if (v296 == 62)
                {
                  int v296 = v286[8];
                  v366[0] = v286 + 8;
                  int v297 = 1;
                  uint64_t v298 = 8;
                }
                else
                {
                  int v297 = 0;
                  uint64_t v298 = 7;
                }
                if (v296 != 61) {
                  goto LABEL_861;
                }
                v301 = &v286[v298 + 1];
                v366[0] = v301;
                if (*v301 - 48 > 9) {
                  goto LABEL_861;
                }
                HIDWORD(v362) = 0;
                if (v301 >= v8) {
                  goto LABEL_812;
                }
                unsigned int v302 = 0;
                v303 = &v286[v298 + 2];
                while (1)
                {
                  v270 = v303 - 1;
                  if (v303 - 1 >= v8)
                  {
                    v366[0] = v303 - 1;
LABEL_861:
                    int v322 = 179;
                    goto LABEL_862;
                  }
                  int v304 = *v270;
                  if ((v304 - 48) > 9) {
                    break;
                  }
                  unsigned int v302 = v304 + 10 * v302 - 48;
                  ++v303;
                  if (v302 >= 0x3E9)
                  {
                    HIDWORD(v362) = 179;
                    v366[0] = v303 - 1;
                    goto LABEL_812;
                  }
                }
                v366[0] = v303 - 1;
                if (*(v303 - 1) == 46)
                {
                  v366[0] = v303;
                  if (v303 >= v8) {
                    goto LABEL_861;
                  }
                  if (*v303 - 48 > 9) {
                    goto LABEL_861;
                  }
                  v270 = v303 + 1;
                  v366[0] = v303 + 1;
                  if (v303 + 1 >= v8) {
                    goto LABEL_861;
                  }
                  int v305 = 10 * *v303;
                  if (*v270 - 48 > 9)
                  {
                    int v306 = v305 - 480;
                  }
                  else
                  {
                    v270 = v303 + 2;
                    v366[0] = v303 + 2;
                    int v306 = v305 + v303[1] - 528;
                  }
                  if (v270 >= v8 || *v270 != 41) {
                    goto LABEL_861;
                  }
                }
                else
                {
                  int v306 = 0;
                }
                *uint64_t v6 = -2146107392;
                v6[1] = v297;
                void v6[2] = v302;
                v6[3] = v306;
LABEL_757:
                v6 += 4;
LABEL_758:
                if (v270 < v8 && *v270 == 41)
                {
                  uint64_t v16 = 0;
                  uint64_t v13 = 0;
                  int v12 = 0;
                  BOOL v10 = 0;
                  v366[0] = v270 + 1;
                  uint64_t v15 = v327;
                  uint64_t v17 = v340;
                  uint64_t v11 = v11;
                  goto LABEL_30;
                }
                int v322 = 124;
LABEL_862:
                HIDWORD(v362) = v322;
                goto LABEL_812;
              }
            }
            int v288 = *v286;
            if (v288 == 82 && v8 - v286 >= 2)
            {
              if (v286[1] == 38)
              {
                v366[0] = v286 + 1;
                if (!sub_1A6876704(v366, (unint64_t)v8, v344, 0x29u, &v357, &v361, &v364, (int *)&v362 + 1, v4))goto LABEL_812; {
                int v289 = -2146238464;
                }
                goto LABEL_755;
              }
LABEL_733:
              v366[0] = v286 - 1;
              if (!sub_1A6876704(v366, (unint64_t)v8, v344, 0x29u, &v357, &v361, &v364, (int *)&v362 + 1, v4))goto LABEL_812; {
              uint64_t v293 = v364;
              }
              v294 = v361;
              if (v364 == 6)
              {
                if (!_pcre2_strncmp_c8_8(v361, "DEFINE", 6))
                {
                  *uint64_t v6 = -2146435072;
                  v270 = --v366[0];
                  *(void *)(v6 + 1) = __ROR8__(v357, 32);
                  v6 += 3;
                  goto LABEL_758;
                }
              }
              else if ((int)v364 < 2)
              {
                LODWORD(v295) = 1;
LABEL_748:
                LODWORD(v362) = v295;
                BOOL v299 = *v294 != 82 || (int)v295 < (int)v293;
                if (v299) {
                  int v300 = -458752;
                }
                else {
                  int v300 = -262144;
                }
                int v289 = v300 - 2145910784;
LABEL_755:
                *uint64_t v6 = v289;
                v270 = --v366[0];
LABEL_756:
                v6[1] = v364;
                *((void *)v6 + 1) = __ROR8__(v357, 32);
                goto LABEL_757;
              }
              uint64_t v295 = 1;
              do
              {
                if (v294[v295] - 48 > 9) {
                  goto LABEL_748;
                }
                ++v295;
              }
              while (v293 != v295);
              LODWORD(v295) = v293;
              goto LABEL_748;
            }
            if (v288 == 60)
            {
              unsigned __int8 v292 = 62;
            }
            else
            {
              if (v288 != 39) {
                goto LABEL_733;
              }
              unsigned __int8 v292 = 39;
            }
            if (!sub_1A6876704(v366, (unint64_t)v8, v344, v292, &v357, &v361, &v364, (int *)&v362 + 1, v4))goto LABEL_812; {
            *uint64_t v6 = -2146369536;
            }
            v270 = v366[0];
            goto LABEL_756;
          case '*':
            goto LABEL_713;
          case '+':
            if (v8 - v88 >= 2 && v86[2] - 48 < 0xA) {
              goto LABEL_508;
            }
            int v320 = 129;
            goto LABEL_811;
          case '-':
            if (v8 - v88 < 2 || v86[2] - 48 >= 0xA) {
              goto LABEL_509;
            }
LABEL_508:
            int v90 = *(_DWORD *)(v4 + 212);
LABEL_165:
            uint64_t v91 = v17;
            uint64_t v92 = v11;
            uint64_t v93 = v15;
            if (!sub_1A686E208(v366, (unint64_t)v8, v90, 0xFFFFu, 161, (int *)&v362, (int *)&v362 + 1))goto LABEL_812; {
            int v94 = v362;
            }
            if ((v362 & 0x80000000) != 0)
            {
              int v319 = 115;
              goto LABEL_826;
            }
            uint64_t v15 = v93;
            uint64_t v11 = v92;
            unsigned int v95 = v366[0];
            uint64_t v17 = v91;
            if (v366[0] >= v8 || *v366[0] != 41) {
              goto LABEL_809;
            }
LABEL_169:
            uint64_t v16 = 0;
            uint64_t v13 = 0;
            int v12 = 0;
            *uint64_t v6 = v94 | 0x80200000;
            v357 = &v95[-*(void *)(v4 + 56)];
            int v96 = (int)v357;
            v366[0] = v95 + 1;
            v6[1] = HIDWORD(v357);
            void v6[2] = v96;
LABEL_451:
            v6 += 3;
            goto LABEL_231;
          case '0':
          case '1':
          case '2':
          case '3':
          case '4':
          case '5':
          case '6':
          case '7':
          case '8':
          case '9':
            goto LABEL_165;
          case '<':
            if (v8 - v88 < 2) {
              goto LABEL_561;
            }
            unsigned int v222 = v86[2];
            unsigned __int8 v89 = 62;
            if (v222 > 0x3D || ((1 << v222) & 0x2000040200000000) == 0) {
              goto LABEL_562;
            }
            if (v222 == 33) {
              int v223 = -2144993280;
            }
            else {
              int v223 = -2144862208;
            }
            if (v222 == 61) {
              int v224 = -2145058816;
            }
            else {
              int v224 = v223;
            }
            *uint64_t v6 = v224;
            goto LABEL_693;
          case '=':
            goto LABEL_717;
          case '>':
            goto LABEL_715;
          case 'C':
            int v88 = v86 + 2;
            v366[0] = v86 + 2;
            if (v86 + 2 >= v8) {
              goto LABEL_809;
            }
            if (v363 && (v17 & 4) != 0 && v363 == v6 - 4)
            {
              if (*(v6 - 1) == 255) {
                uint64_t v225 = v363;
              }
              else {
                uint64_t v225 = v6;
              }
            }
            else
            {
              uint64_t v225 = v6;
            }
            v363 = v225;
            int v254 = *v88;
            if (v254 == 41 || (v254 - 48) < 0xA)
            {
              int v258 = 0;
              *uint64_t v225 = -2147090432;
              while (v88 < v8 && *v88 - 48 <= 9)
              {
                v366[0] = v88 + 1;
                int v259 = *v88 + 10 * v258;
                int v258 = v259 - 48;
                ++v88;
                if (v259 > 303)
                {
                  int v320 = 138;
                  goto LABEL_811;
                }
              }
              uint64_t v6 = v225 + 4;
              v225[3] = v258;
              goto LABEL_709;
            }
            int v255 = 96;
            uint64_t v256 = 0;
            while (v255 != v254)
            {
              v257 = &_pcre2_callout_start_delims_8[v256++];
              int v255 = v257[1];
              if (!v255) {
                goto LABEL_838;
              }
            }
            LODWORD(v362) = v256;
            int v278 = _pcre2_callout_end_delims_8[v256];
            if (!v278)
            {
LABEL_838:
              int v320 = 182;
              goto LABEL_811;
            }
            *uint64_t v225 = -2147024896;
            v279 = v86 + 3;
            v366[0] = v86 + 3;
            v280 = v86 + 2;
            while (2)
            {
              if (v279 < v8)
              {
                if (v278 != *v279 || (v279 = v280 + 2, v366[0] = v280 + 2, v280 + 2 < v8) && v278 == *v279)
                {
                  v280 = v279++;
                  v366[0] = v279;
                  continue;
                }
                if ((unint64_t)(v279 - v88) >> 32)
                {
                  int v320 = 172;
                  goto LABEL_811;
                }
                v225[3] = v279 - v88;
                v290 = &v88[-*(void *)(v4 + 56)];
                v357 = v290;
                uint64_t v6 = v225 + 6;
                v225[4] = HIDWORD(v290);
                v225[5] = (int)v290;
                int v88 = v280 + 2;
LABEL_709:
                if (v88 >= v8 || *v88 != 41)
                {
                  int v320 = 139;
                  goto LABEL_811;
                }
                uint64_t v16 = 0;
                int v12 = 0;
                BOOL v10 = 0;
                v366[0] = v88 + 1;
                *(void *)(v225 + 1) = (v88 + 1 - *(_DWORD *)(v4 + 56));
                uint64_t v14 = 1;
                uint64_t v13 = (v13 - 1);
                goto LABEL_30;
              }
              break;
            }
            int v321 = 181;
            goto LABEL_848;
          case 'P':
            v366[0] = v86 + 2;
            if (v86 + 2 >= v8) {
              goto LABEL_809;
            }
            int v226 = v86[2];
            if (v226 != 60)
            {
              if (v226 == 61)
              {
                uint64_t v272 = v17;
                uint64_t v273 = v15;
                if (!sub_1A6876704(v366, (unint64_t)v8, v344, 0x29u, &v357, &v361, &v364, (int *)&v362 + 1, v4))goto LABEL_812; {
                uint64_t v15 = v273;
                }
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                *uint64_t v6 = -2147221504;
                v6[1] = v364;
                *((void *)v6 + 1) = __ROR8__(v357, 32);
                v6 += 4;
                BOOL v10 = 1;
                uint64_t v17 = v272;
              }
              else
              {
                if (v226 != 62)
                {
                  int v320 = 141;
                  goto LABEL_811;
                }
LABEL_533:
                uint64_t v227 = v17;
                uint64_t v228 = v15;
                if (!sub_1A6876704(v366, (unint64_t)v8, v344, 0x29u, &v357, &v361, &v364, (int *)&v362 + 1, v4))goto LABEL_812; {
                uint64_t v15 = v228;
                }
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                *uint64_t v6 = -2145320960;
                v6[1] = v364;
                *((void *)v6 + 1) = __ROR8__(v357, 32);
                v6 += 4;
                BOOL v10 = 1;
                uint64_t v17 = v227;
              }
              goto LABEL_30;
            }
LABEL_561:
            unsigned __int8 v89 = 62;
LABEL_562:
            unsigned int v339 = v17;
            int v326 = v15;
            int v236 = sub_1A6876704(v366, (unint64_t)v8, v344, v89, &v357, &v361, &v364, (int *)&v362 + 1, v4);
            int v237 = v326;
            if (!v236) {
              goto LABEL_812;
            }
            unsigned int v238 = *(_DWORD *)(v4 + 212);
            if (v238 >= 0xFFFF)
            {
LABEL_835:
              int v320 = 197;
              goto LABEL_811;
            }
            unsigned int v239 = v238 + 1;
            *(_DWORD *)(v4 + 212) = v239;
            *v6++ = v239 | 0x80080000;
            unsigned int v240 = *(unsigned __int16 *)(v4 + 176);
            uint64_t v17 = v339;
            if (v240 >> 4 >= 0x271)
            {
              int v320 = 149;
              goto LABEL_811;
            }
            uint64_t v241 = v364;
            if (v364 + 3 > *(unsigned __int16 *)(v4 + 178)) {
              *(_WORD *)(v4 + 178) = v364 + 3;
            }
            if (!v240)
            {
              unsigned int v248 = 0;
              unsigned int v243 = 0;
              __int16 v242 = 0;
LABEL_581:
              uint64_t v15 = (v237 + 1);
              LODWORD(v362) = v243;
              if ((int)v243 >= (int)v248)
              {
                uint64_t v252 = *(unsigned int *)(v4 + 200);
                if (v252 <= v248)
                {
                  uint64_t v274 = v14;
                  uint64_t v275 = v15;
                  v276 = (void *)(**(uint64_t (***)(uint64_t, void))v4)(32 * v252, *(void *)(*(void *)v4 + 16));
                  if (!v276)
                  {
                    int v320 = 121;
                    goto LABEL_811;
                  }
                  v253 = v276;
                  memcpy(v276, *(const void **)(v4 + 192), 16 * *(unsigned int *)(v4 + 200));
                  if (*(_DWORD *)(v4 + 200) >= 0x15u) {
                    (*(void (**)(void, void))(*(void *)v4 + 8))(*(void *)(v4 + 192), *(void *)(*(void *)v4 + 16));
                  }
                  *(void *)(v4 + 192) = v253;
                  *(_DWORD *)(v4 + 200) = 2 * v252;
                  unsigned int v248 = *(unsigned __int16 *)(v4 + 176);
                  uint64_t v15 = v275;
                  uint64_t v17 = v339;
                  uint64_t v14 = v274;
                }
                else
                {
                  v253 = *(void **)(v4 + 192);
                }
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                BOOL v10 = 0;
                uint64_t v277 = (uint64_t)v253 + 16 * v248;
                *(void *)uint64_t v277 = v361;
                *(_WORD *)(v277 + 12) = v241;
                *(_DWORD *)(v277 + 8) = *(_DWORD *)(v4 + 212);
                *(_WORD *)(v277 + 14) = v242;
                *(_WORD *)(v4 + 176) = v248 + 1;
              }
              else
              {
                uint64_t v16 = 0;
                uint64_t v13 = 0;
                int v12 = 0;
                BOOL v10 = 0;
              }
              goto LABEL_30;
            }
            unsigned int v331 = v14;
            __int16 v242 = 0;
            unsigned int v243 = 0;
            v244 = v361;
            uint64_t v245 = *(void *)(v4 + 192) + 8;
            while (v241 == *(unsigned __int16 *)(v245 + 4))
            {
              int v246 = _pcre2_strncmp_8(v244, *(unsigned __int8 **)(v245 - 8), v241);
              uint64_t v17 = v339;
              int v237 = v326;
              int v247 = *(_DWORD *)(v4 + 212);
              if (v246) {
                goto LABEL_575;
              }
              if (*(_DWORD *)v245 == v247)
              {
                unsigned int v248 = *(unsigned __int16 *)(v4 + 176);
LABEL_577:
                uint64_t v14 = v331;
                goto LABEL_581;
              }
              if ((v339 & 0x40) == 0)
              {
                int v320 = 143;
                goto LABEL_811;
              }
              __int16 v242 = 1;
              *(_WORD *)(v245 + 6) = 1;
              *(_DWORD *)(v4 + 296) = 1;
LABEL_576:
              v245 += 16;
              ++v243;
              unsigned int v248 = *(unsigned __int16 *)(v4 + 176);
              if (v243 >= v248) {
                goto LABEL_577;
              }
            }
            int v247 = *(_DWORD *)(v4 + 212);
LABEL_575:
            if (*(_DWORD *)v245 == v247)
            {
              int v320 = 165;
              goto LABEL_811;
            }
            goto LABEL_576;
          case 'R':
            LODWORD(v362) = 0;
            unsigned int v95 = v86 + 2;
            v366[0] = v86 + 2;
            if (v86 + 2 >= v8 || *v95 != 41)
            {
              int v320 = 158;
              goto LABEL_811;
            }
            int v94 = 0;
            goto LABEL_169;
          default:
LABEL_509:
            if (v347)
            {
              uint64_t v221 = v347 + 6;
              if ((unint64_t)(v347 + 6) >= v341) {
                goto LABEL_842;
              }
            }
            else
            {
              uint64_t v221 = *(unsigned __int16 **)(v4 + 40);
            }
            *uint64_t v221 = v15 + 1;
            v221[3] = 0;
            *((_DWORD *)v221 + 2) = v17 & 0x10424E8;
            if (*v88 == 124)
            {
              uint64_t v16 = 0;
              uint64_t v13 = 0;
              int v12 = 0;
              BOOL v10 = 0;
              unsigned __int16 v249 = *(_WORD *)(v4 + 212);
              v221[1] = v249;
              v221[2] = v249;
              v347 = v221;
              v221[3] = 1;
              *(_DWORD *)(v4 + 208) |= 0x200000u;
              *v6++ = -2145779712;
              v366[0] = v86 + 2;
              uint64_t v15 = (v15 + 1);
              goto LABEL_30;
            }
            *(_DWORD *)(v221 + 1) = 0;
            uint64_t v359 = 0;
            if (*v88 == 94)
            {
              int v250 = 0;
              int v251 = v17 & 0xFEFFDB57;
              int v88 = v86 + 2;
              v366[0] = v86 + 2;
            }
            else
            {
              int v250 = 1;
              int v251 = v17;
            }
            if (v88 >= v8) {
              goto LABEL_809;
            }
            v260 = (int *)&v359 + 1;
            break;
        }
        do
        {
          int v261 = *v88;
          char v262 = 1;
          if (v261 == 41 || v261 == 58) {
            goto LABEL_636;
          }
          v263 = v88 + 1;
          v366[0] = v88 + 1;
          unsigned int v264 = *v88;
          if (v264 <= 0x6C)
          {
            if (*v88 <= 0x54u)
            {
              if (v264 != 45)
              {
                if (v264 != 74) {
                  goto LABEL_846;
                }
                *v260 |= 0x40u;
                *(_DWORD *)(v4 + 208) |= 0x400u;
                goto LABEL_633;
              }
              if (!v250)
              {
                int v321 = 194;
                goto LABEL_848;
              }
              int v250 = 0;
              v260 = (int *)&v359;
              goto LABEL_633;
            }
            if (v264 == 85)
            {
              int v265 = *v260 | 0x40000;
            }
            else
            {
              if (v264 != 105) {
                goto LABEL_846;
              }
              int v265 = *v260 | 8;
            }
LABEL_632:
            int *v260 = v265;
            goto LABEL_633;
          }
          if (*v88 <= 0x72u)
          {
            if (v264 == 109)
            {
              int v265 = *v260 | 0x400;
            }
            else
            {
              if (v264 != 110) {
                goto LABEL_846;
              }
              int v265 = *v260 | 0x2000;
            }
            goto LABEL_632;
          }
          if (v264 == 115)
          {
            int v265 = *v260 | 0x20;
            goto LABEL_632;
          }
          if (v264 != 120)
          {
LABEL_846:
            int v321 = 111;
LABEL_848:
            HIDWORD(v362) = v321;
            v366[0] = v88;
            goto LABEL_812;
          }
          int v266 = *v260;
          *v260 |= 0x80u;
          if (v263 < v8 && *v263 == 120)
          {
            int *v260 = v266 | 0x1000080;
            v88 += 2;
            v366[0] = v88;
            continue;
          }
LABEL_633:
          int v88 = v263;
        }
        while (v88 < v8);
        char v262 = 0;
LABEL_636:
        int v267 = v359;
        if ((HIDWORD(v359) & 0x1000080) != 0x80 && (v359 & 0x80) == 0)
        {
          if ((v262 & 1) == 0) {
            goto LABEL_809;
          }
        }
        else
        {
          int v267 = v359 | 0x1000000;
          LODWORD(v359) = v359 | 0x1000000;
          if ((v262 & 1) == 0) {
            goto LABEL_809;
          }
        }
        uint64_t v269 = (HIDWORD(v359) | v251) & ~v267;
        v366[0] = v88 + 1;
        if (*v88 == 41)
        {
          if ((unint64_t)v221 > *(void *)(v4 + 40) && *(v221 - 6) == (unsigned __int16)v15) {
            v221 -= 6;
          }
          else {
            *uint64_t v221 = v15;
          }
        }
        else
        {
          *v6++ = -2145779712;
          uint64_t v15 = (v15 + 1);
        }
        v347 = v221;
        if (v269 == v17)
        {
LABEL_392:
          uint64_t v16 = 0;
          uint64_t v13 = 0;
          int v12 = 0;
          BOOL v10 = 0;
          goto LABEL_30;
        }
        uint64_t v16 = 0;
        uint64_t v13 = 0;
        int v12 = 0;
        BOOL v10 = 0;
        *uint64_t v6 = -2145714176;
        v6[1] = v269;
        v6 += 2;
        uint64_t v17 = v269;
LABEL_30:
        uint64_t v5 = v366[0];
        if (v366[0] < v8) {
          continue;
        }
        LOBYTE(v7) = v348;
        if (v11)
        {
LABEL_816:
          int v320 = 160;
          goto LABEL_811;
        }
LABEL_802:
        __int16 v314 = v15;
        v315 = sub_1A6876300((int)v5, &v363, v352, v6, v4);
        if ((v7 & 8) != 0)
        {
          int v316 = -2146041856;
LABEL_806:
          _DWORD *v315 = -2145845248;
          v315[1] = v316;
          v315 += 2;
        }
        else if ((v7 & 4) != 0)
        {
          int v316 = -2145910779;
          goto LABEL_806;
        }
        if ((unint64_t)v315 >= v354)
        {
LABEL_810:
          int v320 = 163;
          goto LABEL_811;
        }
        _DWORD *v315 = 0x80000000;
        if (v314)
        {
LABEL_809:
          int v320 = 114;
          goto LABEL_811;
        }
        return 0;
      case ')':
LABEL_170:
        int v97 = v347;
        if (v347 && *v347 == (unsigned __int16)v15)
        {
          int v98 = *((_DWORD *)v347 + 2);
          unsigned __int16 v99 = v347[3];
          if (v99)
          {
            unsigned int v100 = v347[2];
            if (*(_DWORD *)(v4 + 212) < v100) {
              *(_DWORD *)(v4 + 212) = v100;
            }
          }
          BOOL v10 = (v99 & 2) == 0;
          if ((v99 & 4) != 0) {
            *v6++ = -2145845248;
          }
          uint64_t v17 = v98 | v17 & 0xFEFBDB17;
          if (v347 == *(unsigned __int16 **)(v4 + 40)) {
            int v97 = 0;
          }
          else {
            int v97 = v347 - 6;
          }
        }
        else
        {
          BOOL v10 = 1;
        }
        if ((_WORD)v15)
        {
          v347 = v97;
          uint64_t v16 = 0;
          uint64_t v13 = 0;
          int v12 = 0;
          uint64_t v15 = (v15 - 1);
          *v6++ = -2145845248;
          goto LABEL_30;
        }
        int v319 = 122;
        goto LABEL_826;
      case '*':
        goto LABEL_239;
      case '+':
        uint64_t v63 = 2151088128;
        goto LABEL_239;
      case '.':
LABEL_180:
        uint64_t v16 = 0;
        uint64_t v13 = 0;
        int v12 = 0;
        int v62 = -2145976320;
        goto LABEL_230;
      default:
        goto LABEL_229;
    }
  }
}

uint64_t sub_1A687272C(unsigned int *a1, unsigned int **a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  uint64_t v5 = 0;
  uint64_t v16 = a1;
  unsigned int v15 = 0;
  *(void *)(a4 + 168) = -1;
  unsigned int v6 = *a1;
  if (*a1 == 0x80000000) {
    return v5;
  }
  int v11 = 0;
  while ((v6 & 0x80000000) == 0)
  {
LABEL_19:
    unsigned int v13 = a1[1];
    ++a1;
    unsigned int v6 = v13;
    uint64_t v16 = a1;
    if (v13 == 0x80000000) {
      return 0;
    }
  }
  switch(((v6 & 0xFFFF0000) + 2147418112) >> 16)
  {
    case 0u:
    case 2u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0x15u:
    case 0x16u:
    case 0x1Du:
    case 0x1Eu:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Du:
    case 0x2Fu:
    case 0x31u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x36u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
    case 0x3Bu:
      goto LABEL_19;
    case 1u:
    case 7u:
    case 0xEu:
    case 0x19u:
    case 0x21u:
    case 0x22u:
    case 0x23u:
    case 0x26u:
      goto LABEL_6;
    case 3u:
    case 5u:
    case 0x20u:
      a1 += 3;
      goto LABEL_19;
    case 4u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
      ++a1;
      goto LABEL_19;
    case 6u:
      a1 += 5;
      goto LABEL_19;
    case 0xFu:
      a1 += 2;
      goto LABEL_6;
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
      a1 += 3;
LABEL_6:
      ++v11;
      goto LABEL_19;
    case 0x17u:
      unsigned int v12 = v6 + 2145910769 < 2;
      goto LABEL_8;
    case 0x18u:
      if (v11 > 0)
      {
        --v11;
        goto LABEL_19;
      }
      if (!a2) {
        return 0;
      }
      uint64_t v5 = 0;
      *a2 = a1;
      return v5;
    case 0x1Fu:
    case 0x3Cu:
    case 0x3Du:
    case 0x3Eu:
      a1 += 2;
      goto LABEL_19;
    case 0x24u:
    case 0x25u:
    case 0x27u:
      if (!sub_1A6876B44(&v16, (int *)&v15, a5, a3, a4)) {
        return v15;
      }
      a1 = v16;
      goto LABEL_19;
    case 0x28u:
    case 0x2Cu:
    case 0x2Eu:
    case 0x30u:
    case 0x32u:
      unsigned int v12 = a1[1] + 1;
LABEL_8:
      a1 += v12;
      goto LABEL_19;
    default:
      return 170;
  }
}

uint64_t sub_1A687299C(unsigned int a1, unsigned __int8 **a2, unsigned int **a3, int *a4, unsigned int a5, _DWORD *a6, unsigned int *a7, _DWORD *a8, int *a9, uint64_t a10, uint64_t a11, void *a12)
{
  unsigned int v13 = (void *)a11;
  uint64_t v419 = *MEMORY[0x1E4F143B8];
  uint64_t v362 = *a2;
  uint64_t v14 = *a3;
  unsigned int v15 = *(unsigned int (**)(void, void))(*(void *)a11 + 24);
  if (v15 && v15(*(unsigned __int16 *)(a11 + 180), *(void *)(*(void *)a11 + 32)))
  {
    uint64_t result = 0;
    int v17 = 133;
LABEL_4:
    *a4 = v17;
    return result;
  }
  uint64_t v18 = a12;
  uint64_t v406 = 0;
  uint64_t v407 = 0;
  uint64_t v404 = a10;
  v405 = (char *)v362;
  unint64_t v19 = a5 + 6;
  int v20 = *v362;
  if ((v20 - 128) < 2) {
    goto LABEL_8;
  }
  if (v20 == 136)
  {
    unsigned int v21 = 0;
    int v359 = 0;
    int v341 = __rev16(*(unsigned __int16 *)(v362 + 3));
    LOWORD(v407) = v341;
    uint64_t v406 = *(void *)(a11 + 184);
    WORD1(v407) = *(_WORD *)(a11 + 182);
    *(void *)(a11 + 184) = &v406;
  }
  else
  {
    if (v20 == 131)
    {
LABEL_8:
      int v341 = 0;
      unsigned int v21 = *((unsigned __int16 *)v14 - 2);
      v14 += 2;
      int v359 = 1;
      goto LABEL_11;
    }
    unsigned int v21 = 0;
    int v359 = 0;
    int v341 = 0;
  }
LABEL_11:
  int v342 = 0;
  int v343 = 0;
  *(_WORD *)(v362 + 1) = 0;
  int v22 = &v362[a5 + 3];
  int v23 = &v413;
  if (!a12) {
    int v23 = 0;
  }
  v366 = v23;
  unsigned int v344 = -1;
  LODWORD(result) = 1;
  int v24 = -1;
  uint64_t v345 = a5;
  v346 = (char *)v362;
  while (2)
  {
    int v25 = v359;
    if (!v21) {
      int v25 = 0;
    }
    unsigned int v348 = result;
    if (v25 == 1)
    {
      *int v22 = 125;
      v22[1] = BYTE1(v21);
      void v22[2] = v21;
      v22 += 3;
      v19 += 3;
    }
    unint64_t v392 = 0;
    unint64_t v371 = 0;
    unint64_t v365 = 0;
    uint64_t v26 = 0;
    BOOL v363 = 0;
    int v378 = 0;
    int v27 = 0;
    int v367 = 0;
    uint64_t v413 = 0;
    v414 = v14;
    v411 = 0;
    v412 = 0;
    uint64_t v28 = v13[3];
    unsigned int v351 = a1;
    int v352 = (a1 >> 18) & 1;
    BOOL v361 = (a1 & 0x40000) == 0;
    int v360 = (a1 >> 3) & 1;
    int v358 = a1 & 0xA0000;
    uint64_t v350 = v28 + 160;
    uint64_t v364 = v28;
    uint64_t v349 = v28 + 64;
    unsigned int v379 = -1;
    unsigned int v377 = a1;
    unsigned int v29 = -1;
    int v370 = -1;
    int v375 = -1;
    i8 = (char *)v22;
    __dst = v22;
    v380 = (char *)v22;
    int v31 = -1;
    unsigned int v347 = v24;
LABEL_19:
    unint64_t v409 = 0;
    uint64_t v410 = 0;
    LODWORD(v32) = *v14;
    unsigned int v33 = *v14 & 0xFFFF0000;
    if (v18)
    {
      unint64_t v34 = v13[5] + v13[10];
      if ((unint64_t)i8 > v34 - 100)
      {
        if ((unint64_t)i8 >= v34) {
          int v332 = 152;
        }
        else {
          int v332 = 186;
        }
        goto LABEL_825;
      }
      if (i8 < v380) {
        i8 = v380;
      }
      unsigned int v35 = v33 + 2143354879;
      if (v33 + 2143354879 > 0xFFF4FFFE)
      {
        v380 = i8;
      }
      else
      {
        if (2147483627 - v19 < i8 - (char *)__dst) {
          goto LABEL_821;
        }
        v19 += i8 - (char *)__dst;
        i8 = (char *)__dst;
        v380 = (char *)__dst;
        if (v19 > 0x10000) {
          goto LABEL_821;
        }
      }
    }
    else
    {
      unsigned int v35 = v33 + 2143354879;
    }
    unsigned int v381 = *v14 & 0xFFFF0000;
    unsigned int v386 = v29;
    unint64_t v403 = v19;
    if (v378) {
      BOOL v36 = 1;
    }
    else {
      BOOL v36 = v27 == 0;
    }
    if (v36) {
      int v37 = v31;
    }
    else {
      int v37 = 1;
    }
    if (v35 < 0xFFF4FFFF) {
      uint64_t v26 = i8;
    }
    __src = v26;
    if (v35 < 0xFFF4FFFF) {
      int v31 = v37;
    }
    int v391 = v31;
    uint64_t v38 = 0;
    int v39 = 0;
    int v40 = 0;
    unsigned int v41 = 0;
    uint64_t v42 = (unsigned __int16)*v14;
    int v43 = 0x10000;
    unsigned int v44 = 138;
    int v45 = 1;
    char v46 = 1;
    switch(WORD1(v32) ^ 0x8000)
    {
      case 0:
      case 1:
      case 0x19:
        if (v31 < 0) {
          uint64_t result = 0xFFFFFFFFLL;
        }
        else {
          uint64_t result = v348;
        }
        uint64_t v18 = a12;
        unint64_t v19 = v403;
        if (a12)
        {
          unsigned int v21 = *v14;
          unsigned int v13 = (void *)a11;
          __int16 v322 = (__int16)v362;
          int v24 = v347;
          if ((*v14 & 0xFFFF0000) == 0x80010000)
          {
            int v22 = &(*a2)[v345 + 3];
            unint64_t v19 = v403 + 3;
LABEL_820:
            unsigned int v21 = (unsigned __int16)v21;
            ++v14;
            a1 = v351;
            continue;
          }
        }
        else
        {
          unsigned int v13 = (void *)a11;
          __int16 v322 = (__int16)v362;
          unsigned int v323 = v347;
          if (*v346 == 120)
          {
            unsigned int v324 = v344;
            if (v344 != v379 || v342 != HIDWORD(v392))
            {
              int v325 = v343;
              if (v344 < 0xFFFFFFFE && v347 > 0xFFFFFFFD) {
                int v325 = v342;
              }
              int v343 = v325;
              if (v344 < 0xFFFFFFFE && v347 > 0xFFFFFFFD) {
                unsigned int v323 = v344;
              }
              unsigned int v324 = -2;
            }
            unsigned int v344 = v324;
            BOOL v327 = v324 > 0xFFFFFFFD && v379 < 0xFFFFFFFE;
            BOOL v328 = v327 && v386 > 0xFFFFFFFD;
            if (v328) {
              unsigned int v329 = v379;
            }
            else {
              unsigned int v329 = v386;
            }
            if (((v329 ^ v323) & 0xFFFFFFFD) != 0)
            {
              int v24 = -2;
            }
            else
            {
              BOOL v36 = !v328;
              int v330 = HIDWORD(v392);
              if (v36) {
                int v330 = v392;
              }
              int v331 = v329 | v323;
              if (v343 == v330) {
                int v24 = v331;
              }
              else {
                int v24 = -2;
              }
            }
          }
          else
          {
            int v342 = HIDWORD(v392);
            int v343 = v392;
            unsigned int v344 = v379;
            int v24 = v386;
          }
          if (*((unsigned __int16 *)v14 + 1) << 16 == -2147418112)
          {
            char *i8 = 120;
            i8[1] = (unsigned __int16)((_WORD)i8 - (_WORD)v346) >> 8;
            i8[2] = (_BYTE)i8 - (_BYTE)v346;
            v405 = i8;
            int v22 = (unsigned __int8 *)(i8 + 3);
            LOWORD(v21) = *(_WORD *)v14;
            v346 = i8;
            goto LABEL_820;
          }
          v333 = v346;
          unsigned int v334 = i8 - v346;
          do
          {
            uint64_t v335 = __rev16(*(unsigned __int16 *)(v333 + 1));
            *(_WORD *)(v333 + 1) = bswap32(v334) >> 16;
            v333 -= v335;
            unsigned int v334 = v335;
          }
          while (v335);
        }
        char *i8 = 121;
        i8[1] = (unsigned __int16)((_WORD)i8 - v322) >> 8;
        i8[2] = (_BYTE)i8 - v322;
        if (v341 >= 1) {
          v13[23] = *(void *)v13[23];
        }
        *a2 = (unsigned __int8 *)(i8 + 3);
        *a3 = v14;
        *a6 = v342;
        *a7 = v344;
        *a8 = v343;
        *a9 = v24;
        if (!a12) {
          return result;
        }
        if (2147483627 - *a12 >= v403)
        {
          *a12 += v403;
          return result;
        }
        uint64_t result = 0;
        int v17 = 120;
        goto LABEL_4;
      case 2:
        uint64_t v38 = 0;
        int v40 = 0;
        char v46 = 0;
        unsigned int v44 = 132;
        goto LABEL_202;
      case 3:
        if (v42 > 9)
        {
          unsigned int v216 = v14[2];
          int v215 = v14 + 2;
          unint64_t v112 = v216 | ((unint64_t)*(v215 - 1) << 32);
          v414 = v215;
          uint64_t v82 = a11;
        }
        else
        {
          uint64_t v82 = a11;
          unint64_t v112 = *(void *)(a11 + 8 * v42 + 88);
        }
        unsigned int v204 = HIDWORD(v392);
        if (v42 > *(_DWORD *)(v82 + 212)) {
          goto LABEL_832;
        }
        unint64_t v365 = v112;
        uint64_t v18 = a12;
        unint64_t v19 = v403;
        goto LABEL_420;
      case 4:
      case 0x21:
        unsigned int v81 = v14[3];
        uint64_t v80 = v14 + 3;
        uint64_t v82 = a11;
        uint64_t v83 = *(void *)(a11 + 192);
        uint64_t v84 = *(v80 - 2);
        unint64_t v85 = v81 | ((unint64_t)*(v80 - 1) << 32);
        v414 = v80;
        if (!*(_WORD *)(a11 + 176)) {
          goto LABEL_830;
        }
        unsigned int v86 = 0;
        int v87 = 0;
        LODWORD(v42) = 0;
        unint64_t v365 = v85;
        int v88 = (unsigned __int8 *)(*(void *)(a11 + 56) + v85);
        unsigned __int8 v89 = (unsigned __int16 *)(v83 + 14);
        do
        {
          if (v84 == *(v89 - 1) && !_pcre2_strncmp_8(v88, *(unsigned __int8 **)(v89 - 7), v84))
          {
            LODWORD(v42) = *(_DWORD *)(v89 - 3);
            if (v381 == -2145320960) {
              goto LABEL_197;
            }
            int v87 = *v89;
            int v90 = 1 << v42;
            if (v42 >= 0x20) {
              int v90 = 1;
            }
            unsigned int v91 = *(_DWORD *)(a11 + 248);
            *(_DWORD *)(a11 + 252) |= v90;
            if (v42 > v91) {
              *(_DWORD *)(a11 + 248) = v42;
            }
          }
          v89 += 8;
          ++v86;
        }
        while (v86 < *(unsigned __int16 *)(a11 + 176));
        unint64_t v85 = v365;
        if (!v42)
        {
LABEL_830:
          *a4 = 115;
          *(void *)(a11 + 168) = v85;
          return 0;
        }
        if (!v87)
        {
          uint64_t v18 = a12;
          unint64_t v19 = v403;
          unsigned int v204 = HIDWORD(v392);
LABEL_420:
          if (v379 >= 0xFFFFFFFE) {
            int v217 = -2;
          }
          else {
            int v217 = v379;
          }
          int v218 = v375;
          if (v379 == -1) {
            int v218 = -2;
          }
          int v375 = v218;
          if ((v377 & 8) != 0) {
            char v219 = 114;
          }
          else {
            char v219 = 113;
          }
          char *i8 = v219;
          i8[1] = BYTE1(v42);
          i8[2] = v42;
          int v220 = 1 << v42;
          if (v42 >= 0x20) {
            int v220 = 1;
          }
          unsigned int v221 = *(_DWORD *)(v82 + 248);
          i8 += 3;
          *(_DWORD *)(v82 + 252) |= v220;
          uint64_t v26 = __src;
          int v27 = 0;
          if (v42 > v221) {
            *(_DWORD *)(v82 + 248) = v42;
          }
          unsigned int v62 = v204;
          unsigned int v63 = v392;
          unsigned int v379 = v217;
          goto LABEL_519;
        }
        LODWORD(v415[0]) = 0;
        unsigned int v408 = 0;
        uint64_t v18 = a12;
        unint64_t v19 = v403;
        uint64_t v26 = __src;
        if (!a12 && !sub_1A687768C(v88, v84, &v408, (int *)v415, a4, a11)) {
          return 0;
        }
        int v27 = 0;
        int v92 = v379;
        if (v379 >= 0xFFFFFFFE) {
          int v92 = -2;
        }
        unsigned int v379 = v92;
        if ((v377 & 8) != 0) {
          char v93 = 116;
        }
        else {
          char v93 = 115;
        }
        char *i8 = v93;
        i8[1] = BYTE1(v408);
        i8[2] = v408;
        i8[3] = BYTE1(v415[0]);
        i8[4] = v415[0];
        i8 += 5;
        unsigned int v62 = HIDWORD(v392);
        goto LABEL_518;
      case 5:
        LODWORD(v32) = v14[1];
        v414 = v14 + 1;
        uint64_t v97 = a11;
        unsigned int v98 = a1;
        goto LABEL_160;
      case 6:
        int v27 = 0;
        char *i8 = 118;
        i8[1] = BYTE1(v414[1]);
        i8[2] = v414[1];
        i8[3] = BYTE1(v414[2]);
        i8[4] = v414[2];
        i8[5] = v414[3];
        v414 += 3;
        i8 += 6;
        goto LABEL_221;
      case 7:
        unsigned int v113 = v14[3];
        uint64_t v18 = a12;
        if (!a12)
        {
          char *i8 = 119;
          i8[1] = BYTE1(v414[1]);
          i8[2] = v414[1];
          i8[3] = BYTE1(v414[2]);
          i8[4] = v414[2];
          uint64_t v231 = v414[5];
          unint64_t v232 = v231 | ((unint64_t)v414[4] << 32);
          v414 += 5;
          unint64_t v19 = v403;
          unint64_t v365 = v232;
          int v233 = (unsigned __int8 *)(*(void *)(a11 + 56) + v232);
          int v234 = *v233;
          int v235 = i8 + 10;
          i8[9] = v234;
          if (v234 == 123) {
            int v234 = 125;
          }
          __int16 v236 = v231 + 1;
          i8[7] = HIBYTE(v236);
          i8[8] = v236;
          unsigned int v237 = v113 - 1;
          if (v113 - 1 < 2)
          {
            uint64_t v26 = __src;
            unsigned int v62 = HIDWORD(v392);
          }
          else
          {
            unsigned int v238 = v233 + 1;
            uint64_t v26 = __src;
            unsigned int v62 = HIDWORD(v392);
            do
            {
              int v239 = *v238;
              if (v239 == v234 && v238[1] == v234)
              {
                *int v235 = v234;
                v238 += 2;
                unsigned int v237 = v113 - 2;
              }
              else
              {
                ++v238;
                *int v235 = v239;
              }
              unsigned int v113 = v237;
              ++v235;
              --v237;
            }
            while (v237 > 1);
          }
          int v27 = 0;
          *int v235 = 0;
          int v287 = v235 + 1;
          i8[5] = (unsigned __int16)((_WORD)v287 - (_WORD)i8) >> 8;
          i8[6] = (_BYTE)v287 - (_BYTE)i8;
          unsigned int v63 = v392;
          unsigned int v29 = v386;
          i8 = v287;
          goto LABEL_591;
        }
        int v27 = 0;
        unint64_t v19 = v403 + v113 + 9;
        v414 = v14 + 5;
LABEL_237:
        unsigned int v62 = HIDWORD(v392);
        unsigned int v63 = v392;
        goto LABEL_238;
      case 8:
        int v40 = 0;
        char v46 = 0;
        *(_WORD *)(i8 + 3) = bswap32(v32) >> 16;
        *(_DWORD *)(a11 + 216) = v42;
        unsigned int v44 = 136;
        uint64_t v38 = 2;
        goto LABEL_202;
      case 9:
        if ((v377 & 0x400) != 0)
        {
          int v27 = 0;
          if (v379 >= 0xFFFFFFFE) {
            int v222 = -2;
          }
          else {
            int v222 = v379;
          }
          int v223 = v375;
          if (v379 == -1) {
            int v223 = -2;
          }
          int v375 = v223;
          *i8++ = 28;
          unsigned int v62 = HIDWORD(v392);
          unsigned int v63 = v392;
          unsigned int v379 = v222;
          goto LABEL_222;
        }
        int v27 = 0;
        LOBYTE(v101) = 27;
LABEL_220:
        *i8++ = v101;
        goto LABEL_221;
      case 0xA:
      case 0xE:
        unsigned int v94 = *v14 & 0xFFFF0000;
        int v95 = v381 == -2146566144;
        int v96 = v14 + 1;
        unint64_t v32 = v14[1];
        uint64_t v97 = a11;
        if ((v32 & 0x80000000) != 0) {
          goto LABEL_279;
        }
        unsigned int v35 = v14[2];
        if (v35 == -2146631680)
        {
          v414 = v14 + 2;
          unsigned int v98 = a1;
          if (v381 == -2146828288)
          {
LABEL_160:
            unsigned int v62 = HIDWORD(v392);
LABEL_240:
            int v140 = 0;
            if (v358)
            {
              unint64_t v19 = v403;
              if ((v377 & 8) != 0)
              {
                int v141 = _pcre2_ucd_records_8[12
                                          * _pcre2_ucd_stage2_8[(int)(v32
                                                                    - (v35 & 0xFFFFFF80)
                                                                    + (_pcre2_ucd_stage1_8[(int)v32 / 128] << 7))]
                                          + 3];
                uint64_t v18 = a12;
                if (v141)
                {
                  *(_WORD *)i8 = 2576;
                  i8[2] = v141;
                  i8 += 3;
                  if (v379 >= 0xFFFFFFFE) {
                    int v142 = -2;
                  }
                  else {
                    int v142 = v379;
                  }
                  int v143 = v375;
                  if (v379 == -1) {
                    int v143 = -2;
                  }
                  int v375 = v143;
                  int v27 = 1;
                  unsigned int v63 = v392;
                  unsigned int v379 = v142;
LABEL_238:
                  unsigned int v29 = v386;
                  goto LABEL_590;
                }
                int v140 = 0;
                if ((v98 & 0x80000) != 0)
                {
LABEL_391:
                  unsigned int v205 = _pcre2_ord2utf_8(v32, (uint64_t)v416);
                  goto LABEL_394;
                }
              }
              else
              {
                uint64_t v18 = a12;
                if ((v98 & 0x80000) != 0) {
                  goto LABEL_391;
                }
              }
            }
            else
            {
              uint64_t v18 = a12;
              unint64_t v19 = v403;
              if ((v98 & 0x80000) != 0) {
                goto LABEL_391;
              }
            }
LABEL_393:
            v416[0] = v32;
            unsigned int v205 = 1;
LABEL_394:
            if ((v377 & 8) != 0) {
              char v206 = 30;
            }
            else {
              char v206 = 29;
            }
            char *i8 = v206;
            uint64_t v207 = i8 + 1;
            memcpy(v207, v416, v205);
            unsigned int v208 = v416[0];
            if (v416[0] == 13 || v416[0] == 10) {
              *(_DWORD *)(v97 + 208) |= 0x800u;
            }
            i8 = &v207[v205];
            int v209 = v360;
            BOOL v211 = v205 == 1 || v360 == 0;
            if (v379 == -1)
            {
              if (v211)
              {
                if (v205 == 1)
                {
                  int v375 = -2;
                  unsigned int v62 = v208;
                  int v213 = v392;
                  unsigned int v63 = v392;
                  unsigned int v379 = v360;
                  unsigned int v212 = v386;
                  unsigned int v29 = v386;
                }
                else
                {
                  unsigned int v63 = *(i8 - 1);
                  unsigned int v29 = *(_DWORD *)(v97 + 276);
                  int v375 = -2;
                  unsigned int v62 = v208;
                  unsigned int v379 = v360;
LABEL_409:
                  unsigned int v212 = v386;
                  int v213 = v392;
                }
              }
              else
              {
                unsigned int v379 = -2;
                int v213 = v392;
                unsigned int v63 = v392;
                unsigned int v29 = -2;
                int v375 = -2;
                unsigned int v212 = v386;
              }
            }
            else
            {
              if (v211)
              {
                unsigned int v63 = *(i8 - 1);
                unsigned int v29 = *(_DWORD *)(v97 + 276) | v360;
                HIDWORD(v371) = v62;
                int v375 = v379;
                goto LABEL_409;
              }
              int v213 = v392;
              unsigned int v63 = v392;
              HIDWORD(v371) = v62;
              unsigned int v212 = v386;
              unsigned int v29 = v386;
              int v375 = v379;
            }
            unsigned int v257 = v377;
            if (v140) {
              unsigned int v257 = v377 & 0xFFFFFFF7;
            }
            unsigned int v377 = v257;
            if (v140) {
              int v209 = 0;
            }
            int v360 = v209;
            int v27 = 1;
            LODWORD(v371) = v213;
            int v370 = v212;
          }
          else
          {
            int v244 = v379;
            if (v379 >= 0xFFFFFFFE) {
              int v244 = -2;
            }
            unsigned int v379 = v244;
            if (!v358
              || (v377 & 8) == 0
              || (unsigned __int8 v245 = _pcre2_ucd_records_8[12
                                            * _pcre2_ucd_stage2_8[v32 & 0x7F | (*(unsigned __int16 *)((char *)_pcre2_ucd_stage1_8 + ((v32 >> 6) & 0x3FFFFFE)) << 7)]
                                            + 3]) == 0)
            {
              if ((v377 & 8) != 0) {
                char v265 = 32;
              }
              else {
                char v265 = 31;
              }
              char *i8 = v265;
              int v266 = i8 + 1;
              unint64_t v19 = v403;
              uint64_t v26 = __src;
              if ((a1 & 0x80000) != 0 && v32 >= 0x80)
              {
                unsigned int v267 = _pcre2_ord2utf_8(v32, (uint64_t)v266);
              }
              else
              {
                *int v266 = v32;
                unsigned int v267 = 1;
              }
              uint64_t v18 = a12;
              int v27 = 1;
              unsigned int v62 = HIDWORD(v392);
              unsigned int v63 = v392;
              unint64_t v371 = v392;
              unsigned int v29 = v386;
              int v370 = v386;
              int v375 = v379;
              i8 = &v266[v267];
              goto LABEL_591;
            }
            *(_WORD *)i8 = 2575;
            i8[2] = v245;
            i8 += 3;
            int v27 = 1;
            unsigned int v62 = HIDWORD(v392);
            unsigned int v63 = v392;
            unint64_t v371 = v392;
            unsigned int v29 = v386;
            int v370 = v386;
            int v375 = v244;
LABEL_223:
            uint64_t v18 = a12;
            unint64_t v19 = v403;
          }
LABEL_590:
          uint64_t v26 = __src;
          goto LABEL_591;
        }
        if (v381 == -2146828288
          && (v35 & 0x80000000) == 0
          && v14[3] == -2146631680
          && !_pcre2_ucd_records_8[12
                                 * _pcre2_ucd_stage2_8[v14[1] & 0x7F | (*(unsigned __int16 *)((char *)_pcre2_ucd_stage1_8
                                                                                            + (((unint64_t)v14[1] >> 6) & 0x3FFFFFE)) << 7)]
                                 + 3])
        {
          int v304 = v358 && v32 >= 0x80
               ? *(_DWORD *)&_pcre2_ucd_records_8[12
                                                * _pcre2_ucd_stage2_8[v14[1] & 0x7F | (*(unsigned __int16 *)((char *)_pcre2_ucd_stage1_8 + (((unint64_t)v14[1] >> 6) & 0x3FFFFFE)) << 7)]
                                                + 4]
               + v14[1]
               : *(unsigned __int8 *)(*(void *)(a11 + 16) + v32);
          if (v32 != v304 && v35 == v304)
          {
            v414 = v14 + 3;
            int v305 = v360;
            if ((v377 & 8) == 0) {
              int v305 = 1;
            }
            int v360 = v305;
            int v140 = ((v377 & 8) >> 3) ^ 1;
            v377 |= 8u;
            uint64_t v18 = a12;
            unint64_t v19 = v403;
            unsigned int v62 = HIDWORD(v392);
            if ((a1 & 0x80000) != 0) {
              goto LABEL_391;
            }
            goto LABEL_393;
          }
        }
LABEL_279:
        int v149 = (int8x16_t *)(i8 + 4);
        v411 = (int8x16_t *)(i8 + 4);
        int8x16_t v417 = 0u;
        int8x16_t v418 = 0u;
        unsigned int v150 = *v96;
        if (*v96 == -2146631680)
        {
          int v151 = 0;
          v414 = v14 + 1;
          int v152 = v379;
          if (v379 >= 0xFFFFFFFE) {
            int v152 = -2;
          }
          unsigned int v379 = v152;
          uint64_t v18 = a12;
          unint64_t v19 = v403;
          uint64_t v26 = __src;
          unsigned int v153 = HIDWORD(v392);
LABEL_613:
          if (v151 == v95) {
            char v263 = 110;
          }
          else {
            char v263 = 111;
          }
          char *i8 = v263;
          if (!v18)
          {
            if (v94 == -2146566144)
            {
              int8x16_t v417 = vmvnq_s8(v417);
              int8x16_t v418 = vmvnq_s8(v418);
            }
            int8x16_t v264 = v418;
            *(int8x16_t *)(i8 + 1) = v417;
            *(int8x16_t *)(i8 + 17) = v264;
          }
          i8 += 33;
          goto LABEL_621;
        }
        uint64_t v154 = 0;
        int v376 = 0;
        int v151 = 0;
        int v155 = 0;
        int v156 = 0;
        unsigned int v372 = v377 & 0xFFFFFFF7;
        id v157 = i8 + 4;
        uint64_t v18 = a12;
        do
        {
          int v158 = v14;
          uint64_t v159 = v154;
          uint64_t v14 = v96;
          if (v150 == -2147155968)
          {
            unsigned int v150 = v158[2];
            uint64_t v14 = v158 + 2;
            int v167 = (_DWORD *)a11;
LABEL_303:
            if (v150 == 13 || v150 == 10) {
              v167[52] |= 0x800u;
            }
            int v169 = v14[1] | 0x10000;
            if (v169 == -2145452032)
            {
              int v169 = v14 + 8;
              unsigned int v170 = v14[2];
              if (v170 == -2147155968)
              {
                unsigned int v171 = v14[3];
                v14 += 3;
                unsigned int v170 = v171;
              }
              else
              {
                v14 += 2;
              }
              if (v170 == 13 || v170 == 10)
              {
                int v169 = v167[52] | 0x800;
                v167[52] = v169;
              }
              v167[66] = v150;
              v167[67] = v170;
              int v172 = v377;
            }
            else
            {
              v167[66] = v150;
              v167[67] = v150;
              int v172 = v377;
              unsigned int v170 = v150;
            }
            uint64_t v154 = sub_1A68777E4((uint64_t)&v417, (unsigned char **)&v411, v172, (uint64_t)v167, v150, v170, v169)
                 + v154;
            goto LABEL_351;
          }
          if (v150 == -2145583104 || v150 == -2145648640)
          {
            int v151 = v150 == -2145583104;
            int v162 = v158[2];
            int v160 = v158 + 2;
            int v161 = v162;
            if (((v162 < 3) & (v377 >> 3)) != 0) {
              int v161 = 0;
            }
            if ((v377 & 0x20000) != 0)
            {
              if ((v161 - 8) <= 2)
              {
                if (v150 == -2145583104) {
                  char v163 = 4;
                }
                else {
                  char v163 = 3;
                }
                v411 = (int8x16_t *)(v157 + 1);
                *id v157 = v163;
                if (v161 == 9) {
                  char v164 = 15;
                }
                else {
                  char v164 = 16;
                }
                if (v161 == 8) {
                  char v164 = 14;
                }
                int v165 = (char *)v411;
                v411 = (int8x16_t *)((char *)v411 + 1);
                *int v165 = v164;
                int v166 = v411;
                v411 = (int8x16_t *)((char *)v411 + 1);
                v166->i8[0] = 0;
LABEL_300:
                int v155 = 1;
                goto LABEL_350;
              }
              BOOL v173 = (a1 & 0x80000) != 0 && v150 == -2145583104;
              v376 |= v173;
            }
            uint64_t v174 = 3 * v161;
            unsigned int v175 = (_OWORD *)(v364 + dword_1A68A7DD8[v174]);
            long long v176 = v175[1];
            v415[0] = *v175;
            v415[1] = v176;
            uint64_t v177 = (int)v174 + 1;
            uint64_t v178 = (int)v174 + 2;
            if ((0x2DB6DB6FB6BuLL >> v177))
            {
              uint64_t v179 = dword_1A68A7DD8[v177];
              if ((0x2DB6DB6FB6BuLL >> v178))
              {
                uint64_t v188 = 0;
                uint64_t v189 = v364 + v179;
                do
                {
                  v415[v188] = vorrq_s8((int8x16_t)v415[v188], *(int8x16_t *)(v189 + v188 * 16));
                  ++v188;
                }
                while (v188 != 2);
              }
              else
              {
                uint64_t v180 = 0;
                uint64_t v181 = v364 + v179;
                do
                {
                  v415[v180] = vbicq_s8((int8x16_t)v415[v180], *(int8x16_t *)(v181 + v180 * 16));
                  ++v180;
                }
                while (v180 != 2);
              }
            }
            int v190 = dword_1A68A7DD8[v178];
            if ((0x12492490494uLL >> v178)) {
              int v190 = -v190;
            }
            if (v190 == 1)
            {
              char v191 = -61;
              int v192 = (char *)v415 + 1;
LABEL_342:
              *v192 &= v191;
            }
            else if (v190 == 2)
            {
              char v191 = 127;
              int v192 = (char *)v415 + 11;
              goto LABEL_342;
            }
            if (v150 == -2145583104)
            {
              for (uint64_t i = 0; i != 2; ++i)
                *(int8x16_t *)((char *)&v417 + i * 16) = vornq_s8(*(int8x16_t *)((char *)&v417 + i * 16), (int8x16_t)v415[i]);
            }
            else
            {
              for (uint64_t j = 0; j != 2; ++j)
                *(int8x16_t *)((char *)&v417 + j * 16) = vorrq_s8(*(int8x16_t *)((char *)&v417 + j * 16), (int8x16_t)v415[j]);
            }
            uint64_t v159 = 1;
LABEL_350:
            uint64_t v14 = v160;
            uint64_t v154 = v159;
            goto LABEL_351;
          }
          int v167 = (_DWORD *)a11;
          if ((v150 & 0x80000000) == 0) {
            goto LABEL_303;
          }
          if ((v150 & 0xFFFF0000) != 0x80180000)
          {
LABEL_831:
            int v332 = 189;
            goto LABEL_825;
          }
          uint64_t v154 = (v154 + 1);
          switch((__int16)v150)
          {
            case 6:
              for (uint64_t k = 0; k != 32; ++k)
              {
                v417.i8[k] |= ~*(unsigned char *)(v349 + k);
                int v151 = 1;
              }
              break;
            case 7:
              for (uint64_t m = 0; m != 32; ++m)
                v417.i8[m] |= *(unsigned char *)(v349 + m);
              break;
            case 8:
              for (uint64_t n = 0; n != 32; ++n)
              {
                v417.i8[n] |= ~*(unsigned char *)(v364 + n);
                int v151 = 1;
              }
              break;
            case 9:
              for (iuint64_t i = 0; ii != 32; ++ii)
                v417.i8[ii] |= *(unsigned char *)(v364 + ii);
              break;
            case 10:
              for (juint64_t j = 0; jj != 32; ++jj)
              {
                v417.i8[jj] |= ~*(unsigned char *)(v350 + jj);
                int v151 = 1;
              }
              break;
            case 11:
              for (kuint64_t k = 0; kk != 32; ++kk)
                v417.i8[kk] |= *(unsigned char *)(v350 + kk);
              break;
            case 15:
            case 16:
              unsigned int v183 = v158[2];
              int v160 = v158 + 2;
              __int8 v182 = v183;
              unsigned int v184 = HIWORD(v183);
              if ((unsigned __int16)v150 == 16) {
                char v185 = 3;
              }
              else {
                char v185 = 4;
              }
              v411 = (int8x16_t *)(v157 + 1);
              *id v157 = v185;
              int v186 = v411;
              v411 = (int8x16_t *)((char *)v411 + 1);
              v186->i8[0] = v184;
              uint64_t v187 = v411;
              v411 = (int8x16_t *)((char *)v411 + 1);
              v187->i8[0] = v182;
              goto LABEL_300;
            case 18:
              int v201 = (int *)&_pcre2_hspace_list_8;
              goto LABEL_379;
            case 19:
              int v202 = (unsigned int *)&_pcre2_hspace_list_8;
              goto LABEL_381;
            case 20:
              int v201 = (int *)&_pcre2_vspace_list_8;
LABEL_379:
              sub_1A68775B4((uint64_t)&v417, (unsigned char **)&v411, v372, a11, v201);
              break;
            case 21:
              int v202 = (unsigned int *)&_pcre2_vspace_list_8;
LABEL_381:
              sub_1A687750C((uint64_t)&v417, (unsigned char **)&v411, v372, a11, v202);
              break;
            default:
              break;
          }
LABEL_351:
          id v157 = (char *)v411;
          if (v411 > v149) {
            int v156 = 1;
          }
          if (a12 && v411 > v149)
          {
            v403 += (char *)v411 - (char *)v149;
            v411 = (int8x16_t *)(i8 + 4);
            int v156 = 1;
            id v157 = i8 + 4;
          }
          int v96 = v14 + 1;
          unsigned int v150 = v14[1];
        }
        while (v150 != -2146631680);
        v414 = v14 + 1;
        int v203 = v379;
        if (v379 >= 0xFFFFFFFE) {
          int v203 = -2;
        }
        unsigned int v379 = v203;
        if (!v156)
        {
          unint64_t v19 = v403;
          uint64_t v26 = __src;
          unsigned int v153 = HIDWORD(v392);
          unsigned int v94 = v381;
LABEL_612:
          int v95 = v381 == -2146566144;
          goto LABEL_613;
        }
        int v373 = v155;
        uint64_t v26 = __src;
        unsigned int v153 = HIDWORD(v392);
        unsigned int v94 = v381;
        if ((v377 & 0x20000) == 0 && !v373 && v151)
        {
          unint64_t v19 = v403;
          goto LABEL_612;
        }
        unint64_t v19 = v403;
        if (v376)
        {
          v411 = (int8x16_t *)(v157 + 1);
          *id v157 = 2;
          if ((a1 & 0x80000) == 0)
          {
            id v157 = (char *)v411;
            goto LABEL_720;
          }
LABEL_719:
          unsigned int v300 = _pcre2_ord2utf_8(0x100u, (uint64_t)v411);
          v411 = (int8x16_t *)((char *)v411 + v300);
          int v301 = _pcre2_ord2utf_8(0x10FFFFu, (uint64_t)v411);
          id v157 = &v411->i8[v301];
        }
        else if ((v377 & 0x20000) == 0 && (a1 & 0x80000) != 0 && v151 && v381 != -2146566144)
        {
          v411 = (int8x16_t *)(v157 + 1);
          *id v157 = 2;
          goto LABEL_719;
        }
LABEL_720:
        char v302 = v381 == -2146566144;
        v411 = (int8x16_t *)(v157 + 1);
        *id v157 = 0;
        char *i8 = 112;
        if (v373) {
          char v302 = (v381 == -2146566144) | 4;
        }
        i8[3] = v302;
        if ((int)v154 < 1)
        {
          i8 = (char *)v411;
        }
        else
        {
          i8[3] = v302 | 2;
          memmove(i8 + 36, i8 + 4, (char *)v411 - (char *)v149);
          if (v381 == -2146566144 && !v373)
          {
            int8x16_t v417 = vmvnq_s8(v417);
            int8x16_t v418 = vmvnq_s8(v418);
          }
          int8x16_t v303 = v418;
          int8x16_t *v149 = v417;
          *(int8x16_t *)(i8 + 20) = v303;
          i8 = v411[2].i8;
        }
        *(_WORD *)(__src + 1) = bswap32(i8 - __src) >> 16;
LABEL_621:
        int v27 = 1;
        unsigned int v62 = v153;
        unsigned int v63 = v392;
        unint64_t v371 = __PAIR64__(v153, v392);
LABEL_622:
        unsigned int v29 = v386;
        int v370 = v386;
        int v375 = v379;
LABEL_591:
        uint64_t v14 = ++v414;
        unint64_t v392 = __PAIR64__(v62, v63);
        unsigned int v13 = (void *)a11;
        int v31 = v391;
        goto LABEL_19;
      case 0xB:
      case 0xC:
        if (v33 == -2146697216) {
          char v99 = 13;
        }
        else {
          char v99 = -94;
        }
        *i8++ = v99;
        int v100 = v379;
        if (v379 >= 0xFFFFFFFE) {
          int v100 = -2;
        }
        int v27 = 1;
        goto LABEL_199;
      case 0xF:
        goto LABEL_510;
      case 0x10:
        int v45 = 0;
        int v39 = 0;
        int v40 = 0;
        unsigned int v115 = v14[2];
        int v114 = v14 + 2;
        unint64_t v365 = v115 | ((unint64_t)*(v114 - 1) << 32);
        v414 = v114;
        i8[3] = -89;
        goto LABEL_509;
      case 0x11:
      case 0x13:
      case 0x14:
        uint64_t v47 = *(void *)(a11 + 192);
        unsigned int v50 = v14[3];
        int v49 = v14 + 3;
        uint64_t v48 = v50;
        uint64_t v52 = *(v49 - 2);
        uint64_t v51 = *(v49 - 1);
        v414 = v49;
        uint64_t v53 = *(void *)(a11 + 56);
        unint64_t v365 = v50 | ((unint64_t)v51 << 32);
        int v54 = (unsigned __int8 *)(v53 + v365);
        unsigned __int16 v55 = *(_WORD *)(a11 + 176);
        if (!v55)
        {
          unsigned int v56 = 0;
          goto LABEL_257;
        }
        unsigned int v56 = 0;
        uint64_t v57 = v47 + 8;
        while (2)
        {
          if (v52 != *(unsigned __int16 *)(v57 + 4)) {
            goto LABEL_45;
          }
          if (_pcre2_strncmp_8(v54, *(unsigned __int8 **)(v57 - 8), v52))
          {
            unsigned __int16 v55 = *(_WORD *)(a11 + 176);
LABEL_45:
            ++v56;
            v57 += 16;
            if (v56 >= v55) {
              goto LABEL_257;
            }
            continue;
          }
          break;
        }
        if (!*(_WORD *)(v57 + 6))
        {
          if (v381 == -2146238464) {
            char v261 = -110;
          }
          else {
            char v261 = -112;
          }
          i8[3] = v261;
          i8[4] = BYTE1(*(_DWORD *)v57);
          i8[5] = *(_DWORD *)v57;
          if (*(_DWORD *)v57 > *(_DWORD *)(a11 + 248)) {
            *(_DWORD *)(a11 + 248) = *(_DWORD *)v57;
          }
          goto LABEL_273;
        }
        unsigned __int16 v55 = *(_WORD *)(a11 + 176);
LABEL_257:
        if (v56 < v55)
        {
          if (v381 == -2146238464) {
            char v145 = -110;
          }
          else {
            char v145 = -112;
          }
          i8[3] = v145;
          LODWORD(v415[0]) = 0;
          unsigned int v408 = 0;
          if (a12 || sub_1A687768C(v54, v52, &v408, (int *)v415, a4, a11))
          {
            ++i8[3];
            *((_WORD *)i8 + 2) = bswap32((unsigned __int16)v408) >> 16;
            *((_WORD *)i8 + 3) = bswap32(LOWORD(v415[0])) >> 16;
            uint64_t v38 = 5;
            goto LABEL_274;
          }
          return 0;
        }
        if (v381 != -2146172928) {
          goto LABEL_835;
        }
        if (v52 < 2) {
          goto LABEL_271;
        }
        unsigned int v146 = 0;
        uint64_t v147 = (v51 << 32) + v48 + 1;
        uint64_t v148 = v52 - 1;
        do
        {
          unsigned int v146 = 10 * v146 + *(unsigned __int8 *)(v53 + v147) - 48;
          if (v146 >= 0x10000)
          {
            *a4 = 161;
LABEL_829:
            *(void *)(a11 + 168) = v147;
            return 0;
          }
          ++v147;
          --v148;
        }
        while (v148);
        if (v146 > *(_DWORD *)(a11 + 212))
        {
LABEL_835:
          *a4 = 115;
          uint64_t v147 = v365;
          goto LABEL_829;
        }
        if (!v146) {
LABEL_271:
        }
          LOWORD(v146) = -1;
        i8[3] = -110;
        i8[4] = BYTE1(v146);
        i8[5] = v146;
LABEL_273:
        uint64_t v38 = 3;
LABEL_274:
        int v39 = 0;
        int v40 = 0;
        unsigned int v44 = 138;
        int v45 = 1;
        char v46 = 1;
LABEL_510:
        ++*(_WORD *)(a11 + 180);
        char *i8 = v44;
        uint64_t v413 = 0;
        ++v414;
        v412 = (unsigned __int8 *)i8;
        int v246 = *(_DWORD *)(a11 + 276);
        int v247 = sub_1A687299C(v377, &v412, &v414, a4, v38, &v410, &v409, (char *)&v410 + 4, (char *)&v409 + 4, &v404, a11, v366);
        if (!v247) {
          return 0;
        }
        --*(_WORD *)(a11 + 180);
        if (v247 > 0) {
          int v27 = v45 & v39;
        }
        else {
          int v27 = 0;
        }
        int v367 = v247;
        if (v40)
        {
          --*(_WORD *)(a11 + 182);
          uint64_t v18 = a12;
          uint64_t v26 = __src;
          unsigned int v248 = HIDWORD(v392);
          if (a12) {
            goto LABEL_516;
          }
LABEL_529:
          i8 = (char *)v412;
          if (v44 < 0x84)
          {
            BOOL v363 = 0;
            BOOL v255 = (v44 == 126 || v44 == 130) && HIDWORD(v409) < 0xFFFFFFFE;
            if (v255 && v409 < 0xFFFFFFFE) {
              unsigned int v63 = HIDWORD(v410);
            }
            else {
              unsigned int v63 = v392;
            }
            if (v255 && v409 < 0xFFFFFFFE) {
              unsigned int v29 = HIDWORD(v409);
            }
            else {
              unsigned int v29 = v386;
            }
            unsigned int v62 = v248;
            unint64_t v371 = __PAIR64__(v248, v392);
            int v370 = v386;
            int v375 = v379;
          }
          else
          {
            if (v379 != -1 || v409 == -1)
            {
              unsigned int v252 = HIDWORD(v409);
              if (v409 > 0xFFFFFFFD || HIDWORD(v409) < 0xFFFFFFFE)
              {
                BOOL v363 = 0;
              }
              else
              {
                BOOL v363 = 0;
                HIDWORD(v410) = v410;
                unsigned int v252 = v409 | v246;
                HIDWORD(v409) = v409 | v246;
              }
              unsigned int v62 = v248;
              int v375 = v379;
            }
            else
            {
              BOOL v363 = v409 < 0xFFFFFFFE;
              if (v409 >= 0xFFFFFFFE) {
                unsigned int v62 = v248;
              }
              else {
                unsigned int v62 = v410;
              }
              int v375 = -2;
              unsigned int v252 = HIDWORD(v409);
              unsigned int v379 = v409;
            }
            if (v252 >= 0xFFFFFFFE) {
              unsigned int v63 = v392;
            }
            else {
              unsigned int v63 = HIDWORD(v410);
            }
            if (v252 >= 0xFFFFFFFE) {
              unsigned int v29 = v386;
            }
            else {
              unsigned int v29 = v252;
            }
            unint64_t v371 = __PAIR64__(v248, v392);
            int v370 = v386;
          }
LABEL_570:
          unint64_t v19 = v403;
          goto LABEL_591;
        }
        char v249 = v46 ^ 1;
        if (a12) {
          char v249 = 1;
        }
        unsigned int v248 = HIDWORD(v392);
        if (v249)
        {
          uint64_t v18 = a12;
          uint64_t v26 = __src;
          if (!a12) {
            goto LABEL_529;
          }
          goto LABEL_516;
        }
        int v250 = 1;
        int v251 = i8;
        uint64_t v26 = __src;
        do
        {
          v251 += __rev16(*(unsigned __int16 *)(v251 + 1));
          --v250;
        }
        while (*v251 != 121);
        uint64_t v18 = a12;
        if (i8[3] != 167)
        {
          if (-v250 >= 2)
          {
            *(void *)(a11 + 168) = v365;
            int v332 = 127;
            goto LABEL_825;
          }
          if (v250) {
            int v27 = v247 > 0;
          }
          else {
            unint64_t v409 = 0xFFFFFFFEFFFFFFFELL;
          }
          unsigned int v44 = 138;
          if (!a12) {
            goto LABEL_529;
          }
LABEL_516:
          if (2147483627 - v403 >= v413 - 6)
          {
            unint64_t v19 = v413 - 6 + v403;
            *(_DWORD *)(i8 + 1) = 7930624;
            i8[5] = 3;
            i8 += 6;
            unsigned int v62 = v248;
LABEL_518:
            unsigned int v63 = v392;
LABEL_519:
            unsigned int v29 = v386;
            goto LABEL_591;
          }
LABEL_821:
          int v332 = 120;
          goto LABEL_825;
        }
        if (!v250)
        {
          i8[3] = -108;
          i8 = (char *)v412;
          unsigned int v62 = HIDWORD(v392);
          unsigned int v63 = v392;
          unsigned int v29 = v386;
          goto LABEL_570;
        }
        *(void *)(a11 + 168) = v365;
        int v332 = 154;
LABEL_825:
        *a4 = v332;
        return 0;
      case 0x12:
        unsigned int v118 = v14[3];
        BOOL v117 = v14 + 3;
        unsigned int v116 = v118;
        unint64_t v119 = *(v117 - 1) | ((unint64_t)*(v117 - 2) << 32);
        v414 = v117;
        if (v118 <= *(_DWORD *)(a11 + 212))
        {
          if (v116 > *(_DWORD *)(a11 + 248)) {
            *(_DWORD *)(a11 + 248) = v116;
          }
          int v39 = 0;
          int v40 = 0;
          unint64_t v365 = v119 - 2;
          i8[3] = -112;
          i8[4] = BYTE1(v116);
          i8[5] = v116;
          uint64_t v38 = 3;
          goto LABEL_510;
        }
        *a4 = 115;
        *(void *)(a11 + 168) = v119;
        return 0;
      case 0x15:
        unsigned int v120 = v14[2];
        if (v14[1])
        {
          if (v120 < 0xA || v120 == 10 && v14[3] <= 0x28)
          {
            char v121 = -107;
            goto LABEL_508;
          }
        }
        else if (v120 == 10)
        {
          if (v14[3] == 40) {
            char v121 = -107;
          }
          else {
            char v121 = -108;
          }
LABEL_508:
          int v39 = 0;
          int v40 = 0;
          i8[3] = v121;
          v414 += 3;
LABEL_509:
          uint64_t v38 = 1;
          goto LABEL_510;
        }
        char v121 = -108;
        goto LABEL_508;
      case 0x16:
        int v27 = 0;
        if ((v377 & 0x400) != 0) {
          LOBYTE(v101) = 26;
        }
        else {
          LOBYTE(v101) = 25;
        }
        goto LABEL_220;
      case 0x17:
        int v100 = v379;
        if (v379 >= 0xFFFFFFFE) {
          int v100 = -2;
        }
        if ((v377 & 0x20) != 0) {
          char v122 = 13;
        }
        else {
          char v122 = 12;
        }
        *i8++ = v122;
        int v27 = 1;
        unsigned int v62 = HIDWORD(v392);
        unsigned int v63 = v392;
        unint64_t v371 = v392;
        unsigned int v29 = v386;
        int v370 = v386;
        goto LABEL_200;
      case 0x18:
        unsigned int v123 = v42 - 6;
        unsigned int v124 = v379;
        if (v379 >= 0xFFFFFFFE) {
          int v125 = -2;
        }
        else {
          int v125 = v379;
        }
        int v27 = v123 < 0x11;
        if (v123 < 0x11) {
          unsigned int v124 = v125;
        }
        unsigned int v379 = v124;
        if ((v42 - 15) <= 1)
        {
          unsigned int v127 = v14[1];
          char v126 = v127;
          v414 = v14 + 1;
          unsigned int v128 = HIWORD(v127);
          unint64_t v19 = v403;
          if (v42 != 16 || v128)
          {
            if (v42 == 16) {
              char v258 = 16;
            }
            else {
              char v258 = 15;
            }
            char *i8 = v258;
            i8[1] = v128;
            i8[2] = v126;
            i8 += 3;
          }
          else
          {
            *i8++ = 13;
          }
          unsigned int v62 = HIDWORD(v392);
          unsigned int v63 = v392;
          unint64_t v371 = v392;
          unsigned int v29 = v386;
          int v370 = v386;
          int v375 = v379;
          uint64_t v18 = a12;
          goto LABEL_590;
        }
        if (*(_WORD *)(a11 + 182) && v42 == 3)
        {
          unint64_t v19 = v403;
          unsigned int v224 = a1;
          unsigned int v225 = HIDWORD(v392);
          if ((*(unsigned char *)(*(void *)a11 + 64) & 0x40) == 0)
          {
            int v332 = 199;
            goto LABEL_825;
          }
        }
        else
        {
          unint64_t v19 = v403;
          unsigned int v224 = a1;
          unsigned int v225 = HIDWORD(v392);
          if (v42 == 14)
          {
            *(_DWORD *)(a11 + 208) |= 0x400000u;
            char v259 = 1;
LABEL_595:
            uint64_t v18 = a12;
            uint64_t v26 = __src;
            if (((v32 & 0xFFFE) == 4 || v42 == 1) && !*(_DWORD *)(a11 + 280)) {
              *(_DWORD *)(a11 + 280) = 1;
            }
            if ((((v224 & 0x80000) == 0) & v259) != 0) {
              char v260 = 13;
            }
            else {
              char v260 = v32;
            }
            *i8++ = v260;
            unsigned int v62 = v225;
            unsigned int v63 = v392;
            unint64_t v371 = __PAIR64__(v225, v392);
            goto LABEL_622;
          }
        }
        char v259 = 0;
        goto LABEL_595;
      case 0x1A:
        uint64_t v38 = 0;
        int v40 = 0;
        char v46 = 0;
        unsigned int v44 = 134;
        goto LABEL_202;
      case 0x1B:
        int v27 = 0;
        unsigned int v351 = v14[1];
        int v352 = (v351 >> 18) & 1;
        v414 = v14 + 1;
        int v360 = (v351 >> 3) & 1;
        BOOL v361 = (v351 & 0x40000) == 0;
        unsigned int v377 = v351;
        goto LABEL_221;
      case 0x20:
        unsigned int v130 = v14[2];
        uint64_t v129 = v14 + 2;
        unint64_t v112 = v130 | ((unint64_t)*(v129 - 1) << 32);
        v414 = v129;
        uint64_t v82 = a11;
        if (v42 > *(_DWORD *)(a11 + 212))
        {
LABEL_832:
          *(void *)(v82 + 168) = v112;
          int v332 = 115;
          goto LABEL_825;
        }
        unint64_t v365 = v112;
LABEL_197:
        BOOL v363 = 0;
        int v27 = 0;
        char *i8 = 117;
        i8[1] = BYTE1(v42);
        i8[2] = v42;
        i8 += 3;
        *(_DWORD *)(v82 + 292) = 1;
        int v100 = v379;
        if (v379 >= 0xFFFFFFFE) {
          int v100 = -2;
        }
LABEL_199:
        unsigned int v62 = HIDWORD(v392);
        unsigned int v63 = v392;
        HIDWORD(v371) = HIDWORD(v392);
        unsigned int v29 = v386;
LABEL_200:
        unsigned int v379 = v100;
        int v375 = v100;
        goto LABEL_223;
      case 0x22:
        uint64_t v38 = 0;
        int v40 = 0;
        char v46 = 0;
        unsigned int v44 = 133;
LABEL_202:
        int v39 = 1;
        goto LABEL_510;
      case 0x23:
        int v45 = 0;
        uint64_t v38 = 0;
        char v46 = 0;
        ++*(_WORD *)(a11 + 182);
        unsigned int v44 = 126;
        goto LABEL_254;
      case 0x24:
        if (v14[1] != -2145845248 || v14[2] + 2143354879 > 0xFFF4FFFE)
        {
          int v45 = 0;
          uint64_t v38 = 0;
          char v46 = 0;
          ++*(_WORD *)(a11 + 182);
          unsigned int v44 = 127;
LABEL_254:
          int v39 = 1;
          int v40 = 1;
          goto LABEL_510;
        }
        int v27 = 0;
        *i8++ = -94;
        ++v414;
LABEL_221:
        unsigned int v62 = HIDWORD(v392);
        unsigned int v63 = v392;
LABEL_222:
        unsigned int v29 = v386;
        goto LABEL_223;
      case 0x25:
        int v45 = 0;
        uint64_t v38 = 0;
        char v46 = 0;
        ++*(_WORD *)(a11 + 182);
        unsigned int v44 = 128;
        goto LABEL_254;
      case 0x26:
        int v45 = 0;
        uint64_t v38 = 0;
        char v46 = 0;
        ++*(_WORD *)(a11 + 182);
        unsigned int v44 = 129;
        goto LABEL_254;
      case 0x27:
        int v45 = 0;
        uint64_t v38 = 0;
        char v46 = 0;
        ++*(_WORD *)(a11 + 182);
        unsigned int v44 = 130;
        goto LABEL_254;
      case 0x28:
        int v45 = 0;
        uint64_t v38 = 0;
        char v46 = 0;
        ++*(_WORD *)(a11 + 182);
        unsigned int v44 = 131;
        goto LABEL_254;
      case 0x29:
      case 0x2D:
        goto LABEL_225;
      case 0x2A:
        *(_DWORD *)(a11 + 284) = 1;
        uint64_t v131 = *(uint64_t **)(a11 + 184);
        if (v131)
        {
          uint64_t v18 = a12;
          unint64_t v19 = v403;
          uint64_t v26 = __src;
          unsigned int v62 = HIDWORD(v392);
          do
          {
            if (*((unsigned __int16 *)v131 + 5) < *(unsigned __int16 *)(a11 + 182)) {
              break;
            }
            if (a12)
            {
              v19 += 3;
            }
            else
            {
              char *i8 = -91;
              i8[1] = *((unsigned char *)v131 + 9);
              i8[2] = *((unsigned char *)v131 + 8);
              i8 += 3;
            }
            uint64_t v131 = (uint64_t *)*v131;
          }
          while (v131);
        }
        else
        {
          uint64_t v18 = a12;
          unint64_t v19 = v403;
          uint64_t v26 = __src;
          unsigned int v62 = HIDWORD(v392);
        }
        int v27 = 0;
        if (*(_WORD *)(a11 + 182)) {
          char v240 = -92;
        }
        else {
          char v240 = -93;
        }
        *i8++ = v240;
        int v241 = v379;
        if (v379 >= 0xFFFFFFFE) {
          int v241 = -2;
        }
        unsigned int v379 = v241;
        int v378 = 1;
        goto LABEL_518;
      case 0x2B:
      case 0x2C:
        goto LABEL_128;
      case 0x2E:
      case 0x30:
        *(_DWORD *)(a11 + 288) = 1;
LABEL_128:
        int v27 = 0;
        int v101 = dword_1A68A7E80[(v32 + 2144796672) >> 16];
        goto LABEL_220;
      case 0x2F:
      case 0x31:
        *(_DWORD *)(a11 + 288) = 1;
        goto LABEL_225;
      case 0x32:
        int v27 = 0;
        *(_DWORD *)(a11 + 208) |= 0x1000u;
        LOBYTE(v101) = -98;
        goto LABEL_220;
      case 0x33:
        *(_DWORD *)(a11 + 208) |= 0x1000u;
LABEL_225:
        int v132 = (unsigned __int8 *)(i8 + 1);
        char *i8 = dword_1A68A7E80[(v32 + 2144796672) >> 16];
        uint64_t v133 = i8 + 2;
        int v135 = v414[1];
        int v134 = v135;
        ++v414;
        v412 = v132;
        if (v135 < 1)
        {
          unsigned __int8 v136 = 0;
          uint64_t v18 = a12;
          unint64_t v19 = v403;
        }
        else
        {
          unsigned __int8 v136 = 0;
          uint64_t v18 = a12;
          unint64_t v19 = v403;
          do
          {
            unsigned int v137 = v414[1];
            ++v414;
            if ((a1 & 0x80000) != 0)
            {
              unsigned int v138 = _pcre2_ord2utf_8(v137, (uint64_t)v416);
            }
            else
            {
              v416[0] = v137;
              unsigned int v138 = 1;
            }
            uint64_t v139 = v138;
            if (a12)
            {
              v19 += v138;
            }
            else
            {
              memcpy(v133, v416, v138);
              v133 += v139;
              v136 += v139;
            }
            --v134;
          }
          while (v134);
          int v132 = v412;
        }
        int v27 = 0;
        *int v132 = v136;
        *uint64_t v133 = 0;
        i8 = v133 + 1;
        goto LABEL_237;
      case 0x34:
      case 0x35:
      case 0x36:
        goto LABEL_50;
      case 0x37:
      case 0x38:
      case 0x39:
        unsigned int v41 = 1;
        goto LABEL_50;
      case 0x3A:
      case 0x3B:
      case 0x3C:
        unsigned int v41 = 0;
        int v43 = 1;
        goto LABEL_50;
      case 0x3D:
      case 0x3E:
      case 0x3F:
        int v59 = v14[2];
        uint64_t v58 = v14 + 2;
        int v43 = v59;
        unsigned int v41 = *(v58 - 1);
        v414 = v58;
LABEL_50:
        if (v27) {
          BOOL v60 = v41 == 0;
        }
        else {
          BOOL v60 = 1;
        }
        int v27 = !v60;
        BOOL v61 = v43 != v41;
        if (v41) {
          unsigned int v62 = HIDWORD(v392);
        }
        else {
          unsigned int v62 = HIDWORD(v371);
        }
        if (v41) {
          unsigned int v63 = v392;
        }
        else {
          unsigned int v63 = v371;
        }
        unsigned int v64 = v379;
        if (!v41) {
          unsigned int v64 = v375;
        }
        unsigned int v379 = v64;
        if (v41) {
          unsigned int v29 = v386;
        }
        else {
          unsigned int v29 = v370;
        }
        unsigned int v65 = (v33 + 2144010240) >> 16;
        if (v65 > 0xA) {
          goto LABEL_130;
        }
        int v66 = 1;
        if (((1 << v65) & 0x249) != 0)
        {
          int v68 = 0;
          char v67 = 0;
        }
        else if (((1 << v65) & 0x492) != 0)
        {
          int v66 = 0;
          char v67 = 1;
          int v68 = v361;
        }
        else
        {
LABEL_130:
          int v66 = 0;
          char v67 = 1;
          int v68 = v352;
        }
        unsigned int v69 = __src;
        v412 = (unsigned __int8 *)__src;
        uint64_t v70 = *__src;
        uint64_t v71 = (v70 - 117);
        if (v71 > 0x2D) {
          goto LABEL_133;
        }
        if (((1 << (v70 - 117)) & 0x2BFE00) != 0)
        {
          if (v43 == 1 && v41 == 1) {
            char v73 = v66;
          }
          else {
            char v73 = 1;
          }
          if (v73)
          {
            int v74 = i8 - __src;
            if (v70 != 138) {
              goto LABEL_85;
            }
            if (__src[3] != 148 || __src[__rev16(*(unsigned __int16 *)(__src + 1))] == 120)
            {
              LODWORD(v70) = 138;
              goto LABEL_85;
            }
          }
          goto LABEL_147;
        }
        if (v70 == 117)
        {
          if (v43 == 1 && v41 == 1) {
            int v227 = v66;
          }
          else {
            int v227 = 1;
          }
          if (v227 == 1)
          {
            uint64_t v18 = a12;
            if (v41)
            {
              if (v41 == 1 && v43 == 0x10000)
              {
                unsigned int v41 = 1;
              }
              else
              {
                int v294 = v41 - (v43 == v41);
                if (a12)
                {
                  if (v294 > 715827882) {
                    goto LABEL_821;
                  }
                  unint64_t v295 = 3 * v294;
                  if (2147483627 - v403 < v295) {
                    goto LABEL_821;
                  }
                  v403 += v295;
                }
                else if (v294 >= 1)
                {
                  do
                  {
                    __int16 v306 = *(_WORD *)v69;
                    i8[2] = v69[2];
                    *(_WORD *)i8 = v306;
                    unsigned int v69 = i8;
                    i8 += 3;
                    --v294;
                  }
                  while (v294);
                  unsigned int v69 = i8 - 3;
                }
                int v307 = v43 - v41;
                if (v43 == v41) {
                  goto LABEL_155;
                }
                unsigned int v41 = 0;
                if (v43 == 0x10000) {
                  int v43 = 0x10000;
                }
                else {
                  int v43 = v307;
                }
              }
            }
            *(_WORD *)(v69 + 3) = *(_WORD *)v69;
            v69[5] = v69[2];
            LODWORD(v70) = 134;
            *(_WORD *)unsigned int v69 = 134;
            v69[2] = 6;
            *((_WORD *)v69 + 3) = 121;
            v69[8] = 6;
            i8 += 6;
            uint64_t v413 = 9;
            __src = v69;
            int v74 = i8 - v69;
            int v367 = -1;
LABEL_85:
            BOOL v75 = v43 != 0x10000 || v70 >= 0x84;
            if (v75) {
              unsigned int v76 = v43;
            }
            else {
              unsigned int v76 = v41 + 1;
            }
            uint64_t v77 = v41 - 1;
            int v336 = v74;
            if (v41 != 1)
            {
              if (!v41)
              {
                int v382 = v68;
                char v393 = v67;
                BOOL v387 = v61;
                int v337 = v27;
                uint64_t v18 = a12;
                if (v76 < 2 || v76 == 0x10000)
                {
                  uint64_t v78 = __src;
                  v397 = (unsigned __int8 *)(__src + 1);
                  memmove(__src + 1, __src, v74);
                  ++i8;
                  if (!v76)
                  {
                    char *__src = -90;
                    unint64_t v19 = v403;
                    int v27 = v337;
                    BOOL v61 = v387;
                    uint64_t v102 = (unsigned __int8 *)(__src + 1);
                    goto LABEL_150;
                  }
                  uint64_t v79 = 0;
                  int v68 = v382;
                  char *__src = v382 - 106;
                }
                else
                {
                  v397 = (unsigned __int8 *)(__src + 4);
                  memmove(__src + 4, __src, v74);
                  i8 += 4;
                  int v68 = v382;
                  char *__src = v382 - 106;
                  uint64_t v79 = __src + 2;
                  *(_WORD *)(__src + 1) = 134;
                  __src[3] = 0;
                  uint64_t v78 = 0;
                }
                char v67 = v393;
                if (v76 == 0x10000)
                {
                  uint64_t v79 = v78;
                  unsigned int v111 = i8;
                  int v27 = v337;
                  BOOL v61 = v387;
                  uint64_t v102 = v397;
LABEL_636:
                  v268 = v111 - 3;
                  uint64_t v269 = &v111[-__rev16(*((unsigned __int16 *)v111 - 1)) - 3];
                  int v270 = *v269;
                  char v271 = v66 ^ 1;
                  if (v270 != 132) {
                    char v271 = 1;
                  }
                  if ((v271 & 1) == 0)
                  {
                    int v270 = 134;
                    *uint64_t v269 = -122;
                    goto LABEL_642;
                  }
                  if ((v270 & 0xFE) != 0x84)
                  {
LABEL_642:
                    if (!a12)
                    {
                      if (v367 < 0)
                      {
                        LOBYTE(v270) = v270 + 5;
                        goto LABEL_699;
                      }
                      if (v270 == 138)
                      {
                        if (v269[__rev16(*(unsigned __int16 *)(v269 + 1))] == 120)
                        {
                          LOBYTE(v270) = -118;
                          goto LABEL_700;
                        }
                        LOBYTE(v270) = -113;
LABEL_699:
                        *uint64_t v269 = v270;
                      }
                    }
LABEL_700:
                    if (v66)
                    {
                      if (v270 == 143 || v270 == 138)
                      {
                        __int16 __srca = (_WORD)v111 - (_WORD)v269;
                        int v296 = v102;
                        int v297 = v27;
                        BOOL v298 = v61;
                        memmove(v269 + 3, v269, (int)v111 - (int)v269);
                        uint64_t v102 = v296;
                        BOOL v61 = v298;
                        int v27 = v297;
                        if (*v269 == 138) {
                          char v299 = -121;
                        }
                        else {
                          char v299 = -116;
                        }
                        *uint64_t v269 = v299;
                        v111[3] = 124;
                        v111[4] = (unsigned __int16)(__srca + 3) >> 8;
                        v111[5] = __srca + 3;
                        i8 = v111 + 6;
                        v269[1] = (unsigned __int16)(__srca + 3) >> 8;
                        v269[2] = __srca + 3;
                      }
                      else
                      {
                        *uint64_t v269 = v270 + 1;
                        char *v268 = 124;
                        i8 = v111;
                      }
                      uint64_t v18 = a12;
                      if (v79) {
                        char *v79 = -104;
                      }
                      BOOL v75 = v41 >= 2;
                      unint64_t v19 = v403;
                      if (!v75) {
                        goto LABEL_150;
                      }
LABEL_764:
                      int v311 = v412;
                      uint64_t v312 = *v412;
                      if (v312 > 0x5C)
                      {
                        if ((v312 - 110) < 2)
                        {
                          int v311 = v412 + 33;
LABEL_779:
                          v412 = v311;
                          goto LABEL_780;
                        }
                        if (v312 == 112)
                        {
                          uint64_t v315 = __rev16(*(unsigned __int16 *)(v412 + 1));
                        }
                        else
                        {
                          if (v312 != 93)
                          {
LABEL_780:
                            int v316 = i8 - v311;
                            if ((int)i8 - (int)v311 >= 1)
                            {
                              unint64_t v317 = *v311;
                              if (v317 <= 0x75 && (int v318 = byte_1A68A7EBC[v317]) != 0)
                              {
                                *int v311 = v318;
                              }
                              else
                              {
                                int v319 = v102;
                                int v320 = v27;
                                BOOL v321 = v61;
                                memmove(v311 + 3, v311, (i8 - v311));
                                uint64_t v102 = v319;
                                BOOL v61 = v321;
                                int v27 = v320;
                                *int v311 = -124;
                                i8[3] = 121;
                                i8[4] = (unsigned __int16)(v316 + 3) >> 8;
                                i8[5] = v316 + 3;
                                i8 += 6;
                                *(_WORD *)(v412 + 1) = bswap32(v316 + 3) >> 16;
                              }
                            }
                            uint64_t v18 = a12;
                            goto LABEL_150;
                          }
                          uint64_t v315 = 2 * (v412[3] - 15 < 2) + 4;
                        }
                      }
                      else
                      {
                        if ((v312 - 29) > 0x33
                          || ((1 << (v312 - 29)) & 0x800400200100FLL) == 0)
                        {
                          goto LABEL_780;
                        }
                        int v311 = &v412[_pcre2_OP_lengths_8[v312]];
                        v412 = v311;
                        if ((a1 & 0x80000) == 0) {
                          goto LABEL_780;
                        }
                        unsigned int v314 = *(v311 - 1);
                        if (v314 < 0xC0) {
                          goto LABEL_780;
                        }
                        uint64_t v315 = _pcre2_utf8_table4[v314 & 0x3F];
                      }
                      v311 += v315;
                      goto LABEL_779;
                    }
                    char *v268 = v68 + 122;
                    i8 = v111;
                    goto LABEL_148;
                  }
                  char *v268 = v68 + 122;
                  unsigned int v69 = (char *)v102;
                  uint64_t v18 = a12;
                  goto LABEL_682;
                }
                unsigned int v243 = v76 - 1;
                int v27 = v337;
                BOOL v61 = v387;
                uint64_t v102 = v397;
LABEL_633:
                if (v243 == 0x10000)
                {
                  uint64_t v79 = v78;
                  goto LABEL_635;
                }
                if (v18 && v243)
                {
                  uint64_t v272 = (v413 + 7) * v243;
                  unint64_t v273 = v272 - 6;
                  if (v272 > 0x7FFFFFFF || 2147483627 - v403 < v273) {
                    goto LABEL_821;
                  }
                  unint64_t v19 = v403 + v273;
                }
                else
                {
                  unint64_t v19 = v403;
                  if (v243)
                  {
                    char v396 = v67;
                    BOOL v389 = v61;
                    int v339 = v27;
                    uint64_t v275 = (v68 - 106);
                    char *i8 = v68 - 106;
                    v276 = i8 + 1;
                    unsigned int v277 = v243 - 1;
                    v399 = v102;
                    if (v243 != 1)
                    {
                      __int16 v278 = (_WORD)i8 + 2;
                      do
                      {
                        __int16 v279 = v278 - (_WORD)v79;
                        if (!v79) {
                          __int16 v279 = 0;
                        }
                        v276[1] = HIBYTE(v279);
                        uint64_t v79 = v276 + 1;
                        char *v276 = -122;
                        v276[2] = v279;
                        uint64_t v280 = v275;
                        memcpy(v276 + 3, v399, v336);
                        uint64_t v275 = v280;
                        v276 += v336 + 4;
                        *(v276 - 1) = v280;
                        v278 += v336 + 4;
                        --v277;
                      }
                      while (v277);
                      uint64_t v79 = &v276[-v336 - 3];
                      uint64_t v18 = a12;
                      unint64_t v19 = v403;
                    }
                    memcpy(v276, v399, v336);
                    uint64_t v102 = v399;
                    i8 = &v276[v336];
                    int v27 = v339;
                    BOOL v61 = v389;
                    char v67 = v396;
                  }
                }
                if (v79)
                {
                  int v281 = i8 + 1;
                  do
                  {
                    char v282 = v281 - (_BYTE)v79;
                    uint64_t v283 = &i8[-(v281 - (int)v79)];
                    uint64_t v284 = __rev16(*(unsigned __int16 *)(v283 + 1));
                    char *i8 = 121;
                    unsigned int v285 = (v281 - v79) >> 8;
                    i8[1] = (unsigned __int16)(v281 - (_WORD)v79) >> 8;
                    i8[2] = v281 - (_BYTE)v79;
                    if (v284) {
                      BOOL v286 = v79 == 0;
                    }
                    else {
                      BOOL v286 = 1;
                    }
                    v79 -= v284;
                    i8 += 3;
                    v283[1] = v285;
                    v283[2] = v282;
                    v281 += 3;
                  }
                  while (!v286);
                }
                unsigned int v111 = i8;
                unsigned int v69 = (char *)v102;
LABEL_763:
                uint64_t v102 = (unsigned __int8 *)v69;
                i8 = v111;
                if ((v67 & 1) == 0) {
                  goto LABEL_764;
                }
LABEL_150:
                *(_DWORD *)(a11 + 276) |= 2 * v61;
                uint64_t v26 = (char *)v102;
                goto LABEL_591;
              }
              if (a12)
              {
                unint64_t v144 = v413 * v77;
                if (v413 * v77 > 0x7FFFFFFF || 2147483627 - v403 < v144) {
                  goto LABEL_821;
                }
                v403 += v144;
              }
              else
              {
                int v384 = v68;
                char v395 = v67;
                BOOL v388 = v61;
                int v338 = v27;
                if (v363 && v29 > 0xFFFFFFFD)
                {
                  unsigned int v63 = v62;
                  unsigned int v29 = v379;
                }
                size_t v242 = v74;
                do
                {
                  memcpy(i8, __src, v242);
                  i8 += v242;
                  LODWORD(v77) = v77 - 1;
                }
                while (v77);
                int v27 = v338;
                BOOL v61 = v388;
                char v67 = v395;
                int v68 = v384;
              }
            }
            uint64_t v79 = 0;
            if (v76 == 0x10000)
            {
              uint64_t v102 = (unsigned __int8 *)__src;
LABEL_635:
              unsigned int v111 = i8;
              goto LABEL_636;
            }
            unsigned int v243 = v76 - v41;
            uint64_t v102 = (unsigned __int8 *)__src;
            uint64_t v78 = 0;
            uint64_t v18 = a12;
            goto LABEL_633;
          }
        }
        else if (v71 != 45)
        {
LABEL_133:
          if ((v70 - 110) < 7)
          {
            if (v43)
            {
              uint64_t v18 = a12;
              if (v43 == 1 && v41 == 1)
              {
                uint64_t v102 = (unsigned __int8 *)__src;
LABEL_149:
                unint64_t v19 = v403;
                goto LABEL_150;
              }
              if (v41 || v43 != 0x10000)
              {
                unsigned int v111 = i8 + 1;
                if (v41 == 1 && v43 == 0x10000)
                {
                  char v214 = v68 + 100;
                }
                else
                {
                  if (v43 != 1 || v41)
                  {
                    char *i8 = v68 + 104;
                    i8[1] = BYTE1(v41);
                    i8[2] = v41;
                    if (v43 == 0x10000) {
                      __int16 v288 = 0;
                    }
                    else {
                      __int16 v288 = v43;
                    }
                    i8[3] = HIBYTE(v288);
                    i8[4] = v288;
                    unsigned int v111 = i8 + 5;
                    goto LABEL_682;
                  }
                  char v214 = v68 + 102;
                }
                char *i8 = v214;
LABEL_682:
                unint64_t v19 = v403;
                goto LABEL_763;
              }
              *i8++ = v68 + 98;
LABEL_155:
              unsigned int v111 = i8;
              goto LABEL_682;
            }
            goto LABEL_146;
          }
          if ((v70 - 29) > 3)
          {
            if (v70 >= 0x17)
            {
              int v332 = 110;
              goto LABEL_825;
            }
            if (v43 == 1 && v41 == 1) {
              goto LABEL_147;
            }
            char v394 = v67;
            size_t v108 = 0;
            if ((v70 - 15) > 1)
            {
              char v109 = -1;
              int v110 = -1;
            }
            else
            {
              int v110 = __src[1];
              char v109 = __src[2];
            }
            LOBYTE(v103) = 52;
            if (!v43) {
              goto LABEL_146;
            }
          }
          else
          {
            if (v43 == 1 && v41 == 1) {
              goto LABEL_147;
            }
            int v103 = dword_1A68A7EAC[v70 - 29];
            unsigned int v104 = *(i8 - 1);
            char v394 = v67;
            if ((a1 & 0x80000) != 0 && (v104 & 0xC0) == 0x80)
            {
              int v398 = dword_1A68A7EAC[v70 - 29];
              char v383 = v68;
              int v105 = v27;
              uint64_t v106 = 0;
              do
                int v107 = i8[--v106] & 0xC0;
              while (v107 == 128);
              size_t v108 = -(int)v106;
              __memcpy_chk();
              char v109 = -1;
              int v110 = -1;
              int v27 = v105;
              BOOL v61 = v43 != v41;
              LOBYTE(v68) = v383;
              LOBYTE(v103) = v398;
              if (!v43)
              {
LABEL_146:
                i8 = __src;
                goto LABEL_147;
              }
            }
            else
            {
              v416[0] = *(i8 - 1);
              char v109 = -1;
              int v110 = -1;
              size_t v108 = 1;
              if (v41 >= 2 && v70 <= 0x1E)
              {
                unsigned int v29 = *(_DWORD *)(a11 + 276) | (v70 == 30);
                char v109 = -1;
                size_t v108 = 1;
                unsigned int v63 = v104;
              }
              if (!v43) {
                goto LABEL_146;
              }
            }
          }
          char v228 = v103 + v68;
          if (!v41)
          {
            if (v43 == 1)
            {
              char v292 = v228 + 37;
              unsigned int v69 = __src;
              char *__src = v292;
              uint64_t v256 = __src + 1;
              unint64_t v19 = v403;
              goto LABEL_758;
            }
            unint64_t v19 = v403;
            if (v43 != 0x10000)
            {
              char v293 = v228 + 39;
              unsigned int v69 = __src;
              char *__src = v293;
              __src[1] = BYTE1(v43);
              __src[2] = v43;
              uint64_t v256 = __src + 3;
              goto LABEL_758;
            }
            char v230 = v228 + 33;
LABEL_574:
            unsigned int v69 = __src;
            char *__src = v230;
            uint64_t v256 = __src + 1;
LABEL_758:
            if (v108)
            {
              int v309 = v27;
              BOOL v310 = v61;
              memcpy(v256, v416, v108);
              BOOL v61 = v310;
              int v27 = v309;
              unsigned int v111 = &v256[v108];
            }
            else
            {
              *uint64_t v256 = v70;
              unsigned int v111 = v256 + 1;
              if ((v110 & 0x80000000) == 0)
              {
                v256[1] = v110;
                unsigned int v111 = v256 + 3;
                v256[2] = v109;
              }
            }
            uint64_t v18 = a12;
            char v67 = v394;
            goto LABEL_763;
          }
          if (v41 == 1)
          {
            __int16 v229 = v43 - 1;
            if (v43 == 1)
            {
              uint64_t v102 = (unsigned __int8 *)__src;
              goto LABEL_148;
            }
            unint64_t v19 = v403;
            if (v43 == 0x10000)
            {
              char v230 = v228 + 35;
              goto LABEL_574;
            }
            char *i8 = v228 + 39;
            i8[1] = HIBYTE(v229);
            i8[2] = v229;
            goto LABEL_756;
          }
          char *__src = v103 + 41;
          __src[1] = BYTE1(v41);
          __src[2] = v41;
          uint64_t v256 = __src + 3;
          unsigned int v262 = v43 - v41;
          if (v43 == v41)
          {
            unint64_t v19 = v403;
          }
          else
          {
            unint64_t v19 = v403;
            if (v108)
            {
              size_t v289 = v108;
              int v340 = v27;
              v400 = (char *)v108;
              BOOL v290 = v61;
              char v291 = v109;
              int v390 = v110;
              unsigned int v385 = v262;
              memcpy(v256, v416, v289);
              unsigned int v262 = v385;
              int v110 = v390;
              char v109 = v291;
              BOOL v61 = v290;
              size_t v108 = (size_t)v400;
              int v27 = v340;
              i8 = &v400[(void)v256];
            }
            else
            {
              __src[3] = v70;
              if (v110 < 0)
              {
                i8 = __src + 4;
              }
              else
              {
                __src[4] = v110;
                i8 = __src + 6;
                __src[5] = v109;
              }
            }
            if (v43 == 0x10000)
            {
              char v308 = v228 + 33;
            }
            else
            {
              if (v262 != 1)
              {
                char *i8 = v228 + 39;
                i8[1] = BYTE1(v262);
                i8[2] = v262;
LABEL_756:
                uint64_t v256 = i8 + 3;
                goto LABEL_757;
              }
              char v308 = v228 + 37;
            }
            char *i8 = v308;
            uint64_t v256 = i8 + 1;
          }
LABEL_757:
          unsigned int v69 = __src;
          goto LABEL_758;
        }
LABEL_147:
        uint64_t v102 = (unsigned __int8 *)__src;
LABEL_148:
        uint64_t v18 = a12;
        goto LABEL_149;
      default:
        uint64_t v97 = a11;
        unsigned int v98 = a1;
        unsigned int v62 = HIDWORD(v392);
        if ((*v14 & 0x80000000) == 0) {
          goto LABEL_240;
        }
        goto LABEL_831;
    }
  }
}

void sub_1A6875A50(uint64_t a1, void *__src, size_t __n, unsigned int a4, int a5)
{
  int v6 = __n;
  int v9 = *(_WORD **)(a1 + 72);
  size_t v10 = __n;
  if (a5)
  {
    int v11 = a5;
    uint64_t v12 = __n + 2;
    do
    {
      int v13 = memcmp(__src, v9 + 1, v10);
      if (v13)
      {
        if (v13 < 0) {
          goto LABEL_9;
        }
      }
      else if (*((unsigned char *)v9 + v12))
      {
LABEL_9:
        memmove((char *)v9 + *(unsigned __int16 *)(a1 + 178), v9, v11 * *(unsigned __int16 *)(a1 + 178));
        break;
      }
      int v9 = (_WORD *)((char *)v9 + *(unsigned __int16 *)(a1 + 178));
      --v11;
    }
    while (v11);
  }
  *int v9 = bswap32(a4) >> 16;
  uint64_t v14 = (char *)(v9 + 1);
  memcpy(v14, __src, v10);
  size_t v15 = *(unsigned __int16 *)(a1 + 178) - v6 - 2;

  bzero(&v14[v10], v15);
}

unsigned __int8 *sub_1A6875B34(unsigned __int8 *result, int a2)
{
  while (2)
  {
    uint64_t v2 = *result;
    switch(*result)
    {
      case 'U':
      case 'V':
      case 'W':
      case 'X':
      case 'Y':
      case 'Z':
      case '^':
      case '_':
        int v3 = result[1];
        goto LABEL_9;
      case '[':
      case '\\':
      case ']':
      case 'a':
        int v3 = result[3];
LABEL_9:
        uint64_t v5 = 2 * ((v3 - 15) < 2);
        goto LABEL_10;
      case 'b':
      case 'c':
      case 'd':
      case 'e':
      case 'f':
      case 'g':
      case 'h':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'n':
      case 'o':
      case 'q':
      case 'r':
      case 's':
      case 't':
      case 'v':
        goto LABEL_15;
      case 'p':
        unsigned int v6 = *(unsigned __int16 *)(result + 1);
        goto LABEL_13;
      case 'u':
        return result;
      case 'w':
        unsigned int v6 = *(unsigned __int16 *)(result + 5);
LABEL_13:
        result += __rev16(v6);
        continue;
      default:
        if ((v2 - 153) <= 8 && ((1 << (v2 + 103)) & 0x155) != 0)
        {
          uint64_t v5 = result[1];
LABEL_10:
          result += v5 + _pcre2_OP_lengths_8[v2];
          continue;
        }
        if (*result)
        {
LABEL_15:
          result += _pcre2_OP_lengths_8[v2];
          if (a2 && (v2 - 29) <= 0x37)
          {
            unsigned int v7 = *(result - 1);
            if (v7 >= 0xC0) {
              result += _pcre2_utf8_table4[v7 & 0x3F];
            }
          }
          continue;
        }
        return 0;
    }
  }
}

uint64_t sub_1A6875CAC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = a1;
  uint64_t v10 = (a4 + 1);
  for (uint64_t i = *a1; ; uint64_t i = 0x78u)
  {
    uint64_t v12 = sub_1A6877BC0(&v9[_pcre2_OP_lengths_8[i]], 0);
    uint64_t result = 0;
    unsigned int v14 = *v12;
    if (v14 > 0x5D)
    {
      switch(*v12)
      {
        case 0x7Eu:
        case 0x82u:
          uint64_t v18 = v12;
          uint64_t v17 = a2;
          uint64_t v19 = a3;
          uint64_t v20 = a4;
          uint64_t v21 = 1;
          goto LABEL_17;
        case 0x7Fu:
        case 0x80u:
        case 0x81u:
        case 0x83u:
        case 0x85u:
          return result;
        case 0x84u:
          uint64_t v18 = v12;
          uint64_t v17 = a2;
          uint64_t v19 = a3;
          uint64_t v20 = v10;
          goto LABEL_16;
        case 0x86u:
        case 0x87u:
        case 0x8Bu:
        case 0x8Cu:
          goto LABEL_14;
        case 0x88u:
        case 0x89u:
        case 0x8Du:
        case 0x8Eu:
          unsigned int v15 = __rev16(*(unsigned __int16 *)(v12 + 3));
          if (v15 >= 0x20) {
            int v16 = 1;
          }
          else {
            int v16 = 1 << v15;
          }
          uint64_t v17 = v16 | a2;
          uint64_t v18 = v12;
          goto LABEL_15;
        case 0x8Au:
        case 0x8Fu:
          if (v12[__rev16(*(unsigned __int16 *)(v12 + 1))] != 120) {
            return 0;
          }
LABEL_14:
          uint64_t v18 = v12;
          uint64_t v17 = a2;
LABEL_15:
          uint64_t v19 = a3;
          uint64_t v20 = a4;
LABEL_16:
          uint64_t v21 = a5;
LABEL_17:
          uint64_t result = sub_1A6875CAC(v18, v17, v19, v20, v21);
          if (result) {
            goto LABEL_18;
          }
          return result;
        default:
          if (v14 == 94) {
            goto LABEL_21;
          }
          return result;
      }
    }
    if (v14 - 1 >= 2) {
      break;
    }
LABEL_18:
    v9 += __rev16(*(unsigned __int16 *)(v9 + 1));
    if (*v9 != 120) {
      return 1;
    }
  }
  if (v14 - 85 >= 2)
  {
    if (v14 != 27) {
      return result;
    }
    goto LABEL_18;
  }
LABEL_21:
  if (v12[1] == 13)
  {
    uint64_t result = 0;
    if ((int)a4 > 0 || (*(_DWORD *)(a3 + 252) & a2) != 0) {
      return result;
    }
    if (!(*(_DWORD *)(a3 + 288) | a5) && (*(unsigned char *)(a3 + 205) & 0x80) == 0) {
      goto LABEL_18;
    }
  }
  return 0;
}

uint64_t sub_1A6875EB0(unsigned char *a1, unsigned int *a2, int a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = 0;
  unsigned int v7 = -2;
  *a2 = -2;
  for (char i = *a1 + 120; ; char i = -16)
  {
    uint64_t v9 = i > 6u ? 0 : qword_1A68A7F48[i];
    uint64_t v10 = sub_1A6877BC0(&v5[v9 + 3], 1);
    unsigned int v11 = *v10;
    if (v11 > 0x35) {
      break;
    }
    if (*v10 > 0x28u)
    {
      if (v11 - 48 >= 2)
      {
        if (v11 == 41)
        {
          v10 += 2;
          if (!a3) {
            return 0;
          }
        }
        else
        {
          if (v11 != 43) {
            return 0;
          }
LABEL_22:
          if (!a3) {
            return 0;
          }
        }
        uint64_t v15 = v10[1];
        if (v7 > 0xFFFFFFFD)
        {
          unsigned int v7 = 0;
LABEL_40:
          uint64_t v6 = v15;
          goto LABEL_42;
        }
        goto LABEL_41;
      }
    }
    else
    {
      if (v11 - 35 < 2 || v11 == 29) {
        goto LABEL_22;
      }
      if (v11 != 30) {
        return 0;
      }
    }
LABEL_36:
    if (!a3 || (char)v10[1] < 0) {
      return 0;
    }
    uint64_t v15 = v10[1];
    if (v7 > 0xFFFFFFFD)
    {
      unsigned int v7 = 1;
      goto LABEL_40;
    }
LABEL_41:
    if (v6 != v15) {
      return 0;
    }
LABEL_42:
    v5 += __rev16(*(unsigned __int16 *)(v5 + 1));
    if (*v5 != 120)
    {
      *a2 = v7;
      return v6;
    }
  }
  if (v11 - 126 > 0x10 || ((1 << (v11 - 126)) & 0x18FD1) == 0)
  {
    if (v11 == 54)
    {
      v10 += 2;
    }
    else if (v11 != 56)
    {
      return 0;
    }
    goto LABEL_36;
  }
  uint64_t v14 = sub_1A6875EB0();
  if (v7 > 0xFFFFFFFD)
  {
    uint64_t v6 = v14;
    unsigned int v7 = 0;
    goto LABEL_42;
  }
  if (v6 == v14 && v7 == 0) {
    goto LABEL_42;
  }
  return 0;
}

uint64_t sub_1A6876098(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  uint64_t v10 = (a4 + 1);
  uint64_t v11 = *a1;
  while (2)
  {
    uint64_t v12 = sub_1A6877BC0(&v9[_pcre2_OP_lengths_8[v11]], 0);
    int v13 = *v12;
    if (v13 != 138) {
      goto LABEL_16;
    }
    uint64_t v15 = v12 + 3;
    int v14 = v12[3];
    if (v14 == 119)
    {
      uint64_t v16 = __rev16(*((unsigned __int16 *)v12 + 4));
      goto LABEL_7;
    }
    if (v14 == 118)
    {
      uint64_t v16 = 6;
LABEL_7:
      v15 += v16;
      int v14 = *v15;
    }
    unsigned int v17 = v14 - 144;
    BOOL v18 = v17 > 0x12;
    int v19 = (1 << v17) & 0x4003F;
    if (!v18 && v19 != 0) {
      return 0;
    }
    uint64_t result = sub_1A6876098(v15, a2, a3, a4, 1);
    if (!result) {
      return result;
    }
    do
      v15 += __rev16(*(unsigned __int16 *)(v15 + 1));
    while (*v15 == 120);
    uint64_t v12 = sub_1A6877BC0(v15 + 3, 0);
    int v13 = *v12;
LABEL_16:
    switch(v13)
    {
      case 126:
      case 130:
        uint64_t v22 = a2;
        uint64_t v25 = a3;
        uint64_t v26 = a4;
        uint64_t v27 = 1;
        goto LABEL_24;
      case 127:
      case 128:
      case 129:
      case 131:
      case 133:
      case 138:
        goto LABEL_36;
      case 132:
        uint64_t v22 = a2;
        uint64_t v25 = a3;
        uint64_t v26 = v10;
        goto LABEL_23;
      case 134:
      case 135:
      case 139:
      case 140:
        uint64_t v22 = a2;
        goto LABEL_22;
      case 136:
      case 137:
      case 141:
      case 142:
        unsigned int v23 = __rev16(*(unsigned __int16 *)(v12 + 3));
        if (v23 >= 0x20) {
          int v24 = 1;
        }
        else {
          int v24 = 1 << v23;
        }
        uint64_t v22 = v24 | a2;
LABEL_22:
        uint64_t v25 = a3;
        uint64_t v26 = a4;
LABEL_23:
        uint64_t v27 = a5;
LABEL_24:
        uint64_t result = sub_1A6876098(v12, v22, v25, v26, v27);
        if (result) {
          goto LABEL_25;
        }
        return result;
      default:
        if ((v13 - 85) < 2 || v13 == 94)
        {
          if (v12[1] != 12) {
            return 0;
          }
          uint64_t result = 0;
          if ((int)a4 > 0 || (*(_DWORD *)(a3 + 252) & a2) != 0) {
            return result;
          }
          if (*(_DWORD *)(a3 + 288) | a5 || (*(unsigned char *)(a3 + 205) & 0x80) != 0) {
            return 0;
          }
        }
        else
        {
LABEL_36:
          if ((v13 - 29) < 0xFFFFFFFE) {
            return 0;
          }
        }
LABEL_25:
        v9 += __rev16(*(unsigned __int16 *)(v9 + 1));
        uint64_t v11 = 0x78u;
        if (*v9 == 120) {
          continue;
        }
        uint64_t result = 1;
        break;
    }
    return result;
  }
}

_DWORD *sub_1A6876300(int a1, void *a2, int a3, _DWORD *a4, uint64_t a5)
{
  uint64_t v5 = (_DWORD *)*a2;
  if (*a2) {
    v5[2] = a1 - *(_DWORD *)(a5 + 56) - v5[1];
  }
  if (a3)
  {
    if (v5) {
      BOOL v6 = v5 == a4 - 4;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6 && v5[3] == 255)
    {
      unsigned int v7 = a4;
      a4 = v5;
    }
    else
    {
      unsigned int v7 = a4 + 4;
      *a4 = -2147090432;
      *((void *)a4 + 1) = 0xFF00000000;
    }
    int v8 = a4;
    a4[1] = a1 - *(_DWORD *)(a5 + 56);
    a4 = v7;
  }
  else
  {
    int v8 = 0;
  }
  *a2 = v8;
  return a4;
}

uint64_t sub_1A6876384(unint64_t *a1, _DWORD *a2, _WORD *a3, _WORD *a4, _DWORD *a5, uint64_t a6)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  int v8 = (unsigned char *)*a1;
  uint64_t v9 = (unsigned char *)*a1;
  unint64_t v10 = *(void *)(a6 + 64);
  if (*a1 >= v10) {
    goto LABEL_31;
  }
  unsigned int v15 = *v9++;
  unsigned int v14 = v15;
  *a2 = 0;
  if (v15 != 123)
  {
    if ((*(unsigned char *)(*(void *)(a6 + 32) + v14) & 2) != 0)
    {
      *(_WORD *)BOOL v36 = __tolower(v14);
      *a1 = (unint64_t)v9;
LABEL_33:
      int v34 = 255;
      int v26 = 1;
      goto LABEL_34;
    }
LABEL_31:
    uint64_t result = 0;
    *a5 = 146;
    *a1 = (unint64_t)v9;
    return result;
  }
  if ((unint64_t)v9 >= v10) {
    goto LABEL_31;
  }
  if (*v9 == 94)
  {
    *a2 = 1;
    uint64_t v9 = v8 + 2;
  }
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = MEMORY[0x1E4F14390];
  while (2)
  {
    unint64_t v19 = *(void *)(a6 + 64);
    if ((unint64_t)v9 >= v19) {
      goto LABEL_31;
    }
    unsigned int v35 = v16;
    while (1)
    {
      uint64_t v20 = v9;
      unsigned int v22 = *v9++;
      uint64_t v21 = v22;
      if (v22 == 45 || v21 == 95) {
        goto LABEL_16;
      }
      if ((v21 & 0x80) == 0)
      {
        if ((*(_DWORD *)(v18 + 4 * v21 + 60) & 0x4000) == 0) {
          break;
        }
        goto LABEL_15;
      }
      if (!__maskrune(v21, 0x4000uLL)) {
        break;
      }
LABEL_15:
      unint64_t v19 = *(void *)(a6 + 64);
LABEL_16:
      if ((unint64_t)v9 >= v19) {
        goto LABEL_31;
      }
    }
    if (!v21) {
      goto LABEL_31;
    }
    if (v21 != 125)
    {
      uint64_t v9 = v20 + 1;
      v36[v17] = __tolower(v21);
      BOOL v23 = v21 == 61 || v21 == 58;
      uint64_t v16 = v35;
      if (v23 && v35 == 0) {
        uint64_t v16 = (char *)&v36[v17];
      }
      if (++v17 == 49)
      {
        uint64_t v9 = v20 + 1;
        goto LABEL_31;
      }
      continue;
    }
    break;
  }
  v36[v17] = 0;
  *a1 = (unint64_t)(v20 + 1);
  if (!v35) {
    goto LABEL_33;
  }
  *unsigned int v35 = 0;
  if (!_pcre2_strcmp_c8_8(v36, "bidiclass") || !_pcre2_strcmp_c8_8(v36, "bc"))
  {
    __memmove_chk();
    int v26 = 0;
    *(_DWORD *)BOOL v36 = 1768188258;
    int v34 = 255;
    goto LABEL_34;
  }
  if (!_pcre2_strcmp_c8_8(v36, "script") || !_pcre2_strcmp_c8_8(v36, "sc"))
  {
    int v33 = 4;
    goto LABEL_57;
  }
  if (!_pcre2_strcmp_c8_8(v36, "scriptextensions"))
  {
    int v33 = 5;
LABEL_57:
    int v34 = v33;
LABEL_58:
    __memmove_chk();
    int v26 = 0;
LABEL_34:
    unint64_t v27 = 486;
    unint64_t v28 = 0;
    while (1)
    {
      unint64_t v29 = (v27 + v28) >> 1;
      int v30 = _pcre2_strcmp_c8_8(v36, (unsigned __int8 *)&_pcre2_utt_names_8[_pcre2_utt_8[3 * v29]]);
      if (!v30) {
        break;
      }
      if (v30 <= 0) {
        unint64_t v27 = (v27 + v28) >> 1;
      }
      else {
        unint64_t v28 = v29 + 1;
      }
      if (v28 >= v27) {
        goto LABEL_40;
      }
    }
    int v31 = (char *)&_pcre2_utt_8[3 * v29];
    *a4 = *((_WORD *)v31 + 2);
    int v32 = *((unsigned __int16 *)v31 + 1);
    if (((v34 != 255) & ~v26) != 0)
    {
      if (v32 == 5)
      {
        *a3 = v34;
        return 1;
      }
      if (v32 != 4) {
        goto LABEL_40;
      }
    }
    *a3 = v32;
    return 1;
  }
  if (!_pcre2_strcmp_c8_8(v36, "scx"))
  {
    int v34 = 5;
    goto LABEL_58;
  }
LABEL_40:
  uint64_t result = 0;
  *a5 = 147;
  return result;
}

uint64_t sub_1A6876704(unsigned __int8 **a1, unint64_t a2, int a3, unsigned __int8 a4, void *a5, void *a6, _DWORD *a7, int *a8, uint64_t a9)
{
  uint64_t v9 = *a1;
  uint64_t v11 = *a1 + 1;
  int v10 = **a1;
  if ((unint64_t)v11 >= a2)
  {
    uint64_t v14 = 0;
    if (v10 == 42) {
      int v15 = 160;
    }
    else {
      int v15 = 162;
    }
    goto LABEL_36;
  }
  *a6 = v11;
  *a5 = &v11[-*(void *)(a9 + 56)];
  if (!a3 || v10 == 42)
  {
    if (v10 != 42 && *v11 - 48 <= 9) {
      goto LABEL_35;
    }
    uint64_t v16 = 1;
    while ((*(unsigned char *)(*(void *)(a9 + 32) + v9[v16]) & 0x10) != 0)
    {
      if (a2 - (void)v9 == ++v16)
      {
        uint64_t v16 = a2 - (void)v9;
        goto LABEL_16;
      }
    }
    goto LABEL_16;
  }
  unsigned int v12 = *v11;
  if (v12 >= 0xC0)
  {
    int v13 = v9[2] & 0x3F;
    if ((v12 & 0x20) == 0)
    {
      unsigned int v12 = v9[2] & 0x3F | ((v12 & 0x1F) << 6);
      goto LABEL_34;
    }
    if ((v12 & 0x10) != 0)
    {
      if ((v12 & 8) != 0)
      {
        int v19 = v9[3] & 0x3F;
        int v20 = v9[4] & 0x3F;
        int v21 = v9[5] & 0x3F;
        if ((v12 & 4) == 0)
        {
          unsigned int v12 = ((v12 & 3) << 24) | (v13 << 18) | (v19 << 12) | (v20 << 6) | v21;
          goto LABEL_34;
        }
        int v17 = ((v12 & 1) << 30) | (v13 << 24) | (v19 << 18) | (v20 << 12) | (v21 << 6);
        char v18 = v9[6];
      }
      else
      {
        int v17 = ((v12 & 7) << 18) | (v13 << 12) | ((v9[3] & 0x3F) << 6);
        char v18 = v9[4];
      }
    }
    else
    {
      int v17 = ((v12 & 0xF) << 12) | (v13 << 6);
      char v18 = v9[3];
    }
    unsigned int v12 = v17 & 0xFFFFFFC0 | v18 & 0x3F;
  }
LABEL_34:
  int v22 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v12 & 0x7F | (_pcre2_ucd_stage1_8[v12 >> 7] << 7)] + 1];
  if (v22 == 13)
  {
LABEL_35:
    uint64_t v14 = 0;
    int v15 = 144;
    goto LABEL_36;
  }
  uint64_t v16 = 1;
  while (2)
  {
    if (v22 == 13 || v12 == 95 || _pcre2_ucp_gentype_8[v22] == 1)
    {
      do
      {
        if ((unint64_t)&v9[++v16] >= a2) {
          goto LABEL_16;
        }
        unsigned int v12 = v9[v16];
      }
      while ((v12 & 0xC0) == 0x80);
      if (v12 >= 0xC0)
      {
        int v24 = v9[v16 + 1] & 0x3F;
        if ((v12 & 0x20) != 0)
        {
          if ((v12 & 0x10) != 0)
          {
            if ((v12 & 8) != 0)
            {
              int v27 = v9[v16 + 2] & 0x3F;
              int v28 = v9[v16 + 3] & 0x3F;
              int v29 = v9[v16 + 4] & 0x3F;
              if ((v12 & 4) == 0)
              {
                unsigned int v12 = ((v12 & 3) << 24) | (v24 << 18) | (v27 << 12) | (v28 << 6) | v29;
                goto LABEL_55;
              }
              int v25 = ((v12 & 1) << 30) | (v24 << 24) | (v27 << 18) | (v28 << 12) | (v29 << 6);
              char v26 = v9[v16 + 5];
            }
            else
            {
              int v25 = ((v12 & 7) << 18) | (v24 << 12) | ((v9[v16 + 2] & 0x3F) << 6);
              char v26 = v9[v16 + 3];
            }
          }
          else
          {
            int v25 = ((v12 & 0xF) << 12) | (v24 << 6);
            char v26 = v9[v16 + 2];
          }
          unsigned int v12 = v25 & 0xFFFFFFC0 | v26 & 0x3F;
          goto LABEL_55;
        }
        unsigned int v12 = v9[v16 + 1] & 0x3F | ((v12 & 0x1F) << 6);
      }
LABEL_55:
      int v22 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v12 & 0x7F | (_pcre2_ucd_stage1_8[v12 >> 7] << 7)] + 1];
      continue;
    }
    break;
  }
LABEL_16:
  uint64_t v11 = &v9[v16];
  if (v16 >= 34)
  {
    uint64_t v14 = 0;
    int v15 = 148;
LABEL_36:
    *a8 = v15;
    goto LABEL_37;
  }
  *a7 = v16 - 1;
  if (v10 != 42)
  {
    if (v16 == 1)
    {
      uint64_t v14 = 0;
      int v15 = 162;
      goto LABEL_36;
    }
    if ((unint64_t)v11 >= a2 || *v11 != a4)
    {
      uint64_t v14 = 0;
      int v15 = 142;
      goto LABEL_36;
    }
    ++v11;
  }
  uint64_t v14 = 1;
LABEL_37:
  *a1 = v11;
  return v14;
}

uint64_t sub_1A6876A18(unsigned __int8 *a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v4 = a1 + 1;
  int v3 = *a1;
  if (a2 - (uint64_t)(a1 + 1) < 2) {
    return 0;
  }
  while (1)
  {
    int v5 = a1[1];
    if (v5 == 91) {
      break;
    }
    if (v5 != 92)
    {
      if (v5 == 93) {
        return 0;
      }
      goto LABEL_10;
    }
    if ((a1[2] & 0xFE) != 0x5C) {
      goto LABEL_10;
    }
    uint64_t v4 = a1 + 2;
LABEL_12:
    a1 = v4++;
    if (a2 - (uint64_t)v4 <= 1) {
      return 0;
    }
  }
  if (a1[2] == v3) {
    return 0;
  }
LABEL_10:
  if (v5 != v3 || a1[2] != 93) {
    goto LABEL_12;
  }
  *a3 = v4;
  return 1;
}

uint64_t sub_1A6876AB4(unsigned __int8 *a1, unsigned int a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = a2;
  BOOL v6 = "alpha";
  while (1)
  {
    uint64_t v7 = asc_1A68D004B[v4];
    if (v7 == a2 && !_pcre2_strncmp_c8_8(a1, v6, v5)) {
      break;
    }
    v6 += v7 + 1;
    if (++v4 == 14) {
      return 0xFFFFFFFFLL;
    }
  }
  return v4;
}

uint64_t sub_1A6876B44(unsigned int **a1, int *a2, _DWORD *a3, uint64_t a4, uint64_t a5)
{
  int v10 = *a1;
  uint64_t v11 = *a1 + 2;
  unint64_t v12 = *v11 | ((unint64_t)(*a1)[1] << 32);
  while (1)
  {
    *a1 = v11 + 1;
    int v13 = sub_1A6876C2C(a1, a2, a3, a4, a5);
    if (v13 < 0) {
      break;
    }
    if (v13 > *(_DWORD *)(a5 + 280)) {
      *(_DWORD *)(a5 + 280) = v13;
    }
    *v10 |= v13;
    uint64_t v11 = *a1;
    int v10 = *a1;
    if (**a1 != -2147418112) {
      return 1;
    }
  }
  if (!*a2) {
    *a2 = 125;
  }
  uint64_t result = 0;
  if (*(void *)(a5 + 168) == -1) {
    *(void *)(a5 + 168) = v12;
  }
  return result;
}

uint64_t sub_1A6876C2C(unsigned int **a1, int *a2, _DWORD *a3, uint64_t a4, uint64_t a5)
{
  BOOL v6 = a1;
  uint64_t v7 = *a1;
  unsigned int v56 = v7;
  int v8 = (*a3)++;
  if (v8 > 2000)
  {
    int v9 = 135;
    goto LABEL_86;
  }
  uint64_t v13 = 0;
  unsigned int v14 = 0;
  uint64_t v54 = 0;
  unsigned __int16 v55 = 0;
  while (2)
  {
    uint64_t v53 = 0;
    unsigned int v15 = *v7;
    if ((*v7 & 0x80000000) == 0)
    {
LABEL_5:
      int v16 = 1;
      goto LABEL_6;
    }
    unsigned int v17 = v15 & 0xFFFF0000;
    int v18 = 0;
    int v16 = 0;
    switch(((v15 & 0xFFFF0000) + 2147418112) >> 16)
    {
      case 0u:
      case 0x18u:
        goto LABEL_92;
      case 1u:
      case 0x19u:
      case 0x21u:
        goto LABEL_40;
      case 2u:
        if ((*(unsigned char *)(a5 + 205) & 2) != 0 || (*(unsigned char *)(a5 + 210) & 0x20) != 0) {
          goto LABEL_95;
        }
        uint64_t v30 = (unsigned __int16)*v7;
        if ((unsigned __int16)*v7 > 9u) {
          goto LABEL_56;
        }
        unint64_t v31 = *(void *)(a5 + 8 * v30 + 88);
        goto LABEL_57;
      case 3u:
        if ((*(unsigned char *)(a5 + 205) & 2) == 0) {
          goto LABEL_29;
        }
        goto LABEL_95;
      case 4u:
        goto LABEL_53;
      case 5u:
        int v16 = 0;
        int v20 = v7 + 3;
        goto LABEL_12;
      case 6u:
        int v16 = 0;
        int v20 = v7 + 5;
        goto LABEL_12;
      case 7u:
        int v18 = (unsigned __int16)*v7;
        goto LABEL_40;
      case 8u:
      case 0x15u:
      case 0x2Bu:
      case 0x2Du:
      case 0x2Fu:
      case 0x31u:
        goto LABEL_6;
      case 9u:
      case 0xDu:
        int v16 = 1;
        unsigned int v56 = sub_1A6877208(v7, 1);
        if (v56) {
          goto LABEL_6;
        }
        goto LABEL_93;
      case 0xBu:
      case 0x16u:
        goto LABEL_5;
      case 0xEu:
        int v18 = 0;
LABEL_40:
        int v19 = v7 + 1;
        goto LABEL_41;
      case 0xFu:
        char v26 = sub_1A6877208(v7 + 1, 2);
        goto LABEL_44;
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
        int v18 = 0;
        int v19 = v7 + 4;
LABEL_41:
        unsigned int v56 = v19;
        int v16 = sub_1A68773D4(&v56, 1, (uint64_t)a2, (uint64_t)a3, v18, a4, a5);
        if (v16 < 0) {
          return 0xFFFFFFFFLL;
        }
        goto LABEL_6;
      case 0x17u:
        int v40 = (unsigned __int16)*v7;
        if (v40 == 17 || v40 == 22) {
          return 0xFFFFFFFFLL;
        }
        if ((v40 - 6) > 0x10) {
          goto LABEL_17;
        }
        if (v40 == 14 && (*(_DWORD *)(a5 + 204) & 0x80000) != 0)
        {
          int v9 = 136;
          goto LABEL_86;
        }
        if ((v40 - 15) <= 1) {
LABEL_53:
        }
          unsigned int v56 = v7 + 1;
        goto LABEL_5;
      case 0x1Au:
        int v16 = 0;
        int v20 = v7 + 1;
        goto LABEL_12;
      case 0x1Fu:
        LODWORD(v30) = (unsigned __int16)*v7;
LABEL_56:
        unsigned int v43 = v7[2];
        uint64_t v42 = v7 + 2;
        unint64_t v31 = v43 | ((unint64_t)*(v42 - 1) << 32);
        unsigned int v56 = v42;
        goto LABEL_57;
      case 0x20u:
LABEL_29:
        uint64_t v51 = a4;
        uint64_t v52 = v6;
        unsigned int v33 = v7[3];
        int v32 = v7 + 3;
        uint64_t v34 = *(void *)(a5 + 192);
        uint64_t v35 = *(v32 - 2);
        unint64_t v31 = v33 | ((unint64_t)*(v32 - 1) << 32);
        unsigned int v56 = v32;
        unsigned __int16 v36 = *(_WORD *)(a5 + 176);
        if (!v36) {
          goto LABEL_89;
        }
        unsigned int v37 = 0;
        uint64_t v38 = (unsigned __int8 *)(*(void *)(a5 + 56) + v31);
        int v39 = (unsigned __int16 *)(v34 + 14);
        while (2)
        {
          if (v35 != *(v39 - 1)) {
            goto LABEL_34;
          }
          if (_pcre2_strncmp_8(v38, *(unsigned __int8 **)(v39 - 7), v35))
          {
            unsigned __int16 v36 = *(_WORD *)(a5 + 176);
LABEL_34:
            ++v37;
            v39 += 8;
            if (v37 >= v36) {
              goto LABEL_89;
            }
            continue;
          }
          break;
        }
        LODWORD(v30) = *(_DWORD *)(v39 - 3);
        if (!v30)
        {
LABEL_89:
          *a2 = 115;
          *(void *)(a5 + 168) = v31;
          return 0xFFFFFFFFLL;
        }
        if (v17 == -2145320960)
        {
          a4 = v51;
          BOOL v6 = v52;
        }
        else
        {
          int v49 = *v39;
          a4 = v51;
          BOOL v6 = v52;
          if (v49 || (*(unsigned char *)(a5 + 210) & 0x20) != 0) {
            goto LABEL_95;
          }
        }
LABEL_57:
        if (v30 > *(_DWORD *)(a5 + 212))
        {
          *(void *)(a5 + 168) = v31;
          int v9 = 115;
          goto LABEL_86;
        }
        if (!v30) {
          goto LABEL_95;
        }
        unsigned int v44 = *(unsigned int **)(a5 + 224);
        unsigned int v45 = *v44;
        if (*v44 != 0x80000000)
        {
          do
          {
            if ((v45 & 0xFFFF0000) == 0x80050000)
            {
              ++v44;
            }
            else if (v45 == (v30 | 0x80080000))
            {
              break;
            }
            unsigned int v46 = v44[1];
            ++v44;
            unsigned int v45 = v46;
          }
          while (v46 != 0x80000000);
        }
        uint64_t v53 = v44;
        uint64_t v47 = sub_1A6877208(v44 + 1, 2);
        if (!v47)
        {
LABEL_93:
          int v9 = 190;
          goto LABEL_86;
        }
        if (v56 > v44 && v56 < v47) {
          goto LABEL_95;
        }
        if (!a4)
        {
LABEL_71:
          uint64_t v54 = a4;
          unsigned __int16 v55 = v44;
          uint64_t v53 = v44 + 1;
          int v16 = sub_1A68773D4(&v53, 0, (uint64_t)a2, (uint64_t)a3, v30, (uint64_t)&v54, a5);
          if (v16 < 0)
          {
            if (!*a2) {
              goto LABEL_95;
            }
            return 0xFFFFFFFFLL;
          }
LABEL_6:
          if ((int)(v13 ^ 0x7FFFFFFF) < v16) {
            goto LABEL_85;
          }
          uint64_t v13 = (v16 + v13);
          if ((int)v13 >= 0x10000) {
            goto LABEL_85;
          }
          uint64_t v7 = ++v56;
          unsigned int v14 = v16;
          continue;
        }
        uint64_t v48 = (void *)a4;
        while ((unsigned int *)v48[1] != v44)
        {
          uint64_t v48 = (void *)*v48;
          if (!v48) {
            goto LABEL_71;
          }
        }
LABEL_95:
        int v9 = 125;
LABEL_86:
        *a2 = v9;
        return 0xFFFFFFFFLL;
      case 0x22u:
      case 0x23u:
      case 0x26u:
        int v21 = sub_1A687272C(v7 + 1, &v56, a4, a5, a3);
        *a2 = v21;
        if (v21) {
          return 0xFFFFFFFFLL;
        }
        HIDWORD(v23) = v56[1];
        LODWORD(v23) = HIDWORD(v23) + 2144075776;
        unsigned int v22 = v23 >> 16;
        BOOL v24 = v22 >= 9;
        unsigned int v25 = v22 - 9;
        if (v24)
        {
          if (v25 >= 3)
          {
LABEL_17:
            int v16 = 0;
          }
          else
          {
            int v16 = 0;
            int v20 = v56 + 3;
LABEL_12:
            unsigned int v56 = v20;
          }
        }
        else
        {
          int v16 = 0;
          ++v56;
        }
        goto LABEL_6;
      case 0x24u:
      case 0x25u:
      case 0x27u:
        if (!sub_1A6876B44(&v56, a2, a3, a4, a5)) {
          return 0xFFFFFFFFLL;
        }
        goto LABEL_17;
      case 0x28u:
      case 0x2Cu:
      case 0x2Eu:
      case 0x30u:
      case 0x32u:
        int v16 = 0;
        int v20 = &v7[v7[1] + 1];
        goto LABEL_12;
      case 0x29u:
      case 0x2Au:
        uint64_t v7 = sub_1A6877208(v7, 0);
        if (!v7) {
          goto LABEL_93;
        }
LABEL_92:
        *BOOL v6 = v7;
        return v13;
      case 0x3Cu:
      case 0x3Du:
      case 0x3Eu:
        unsigned int v27 = v7[2];
        char v26 = v7 + 2;
        int v28 = *(v26 - 1);
        if (v28 != v27) {
          goto LABEL_95;
        }
        unsigned int v29 = v28 - 1;
        if (v28 == 1)
        {
LABEL_44:
          int v16 = 0;
        }
        else if (v28)
        {
          if (v14 && 0x7FFFFFFF / v14 < v29)
          {
LABEL_85:
            int v9 = 187;
            goto LABEL_86;
          }
          int v16 = v29 * v14;
        }
        else
        {
          int v16 = 0;
          LODWORD(v13) = v13 - v14;
        }
        unsigned int v56 = v26;
        goto LABEL_6;
      default:
        goto LABEL_95;
    }
  }
}

unsigned int *sub_1A6877208(unsigned int *a1, int a2)
{
  int v2 = 0;
  while (2)
  {
    unint64_t v3 = *a1;
    uint64_t v4 = 0;
    switch(WORD1(v3) ^ 0x8000)
    {
      case 0:
        return v4;
      case 1:
        uint64_t v4 = a1;
        if (v2 | a2) {
          goto LABEL_5;
        }
        return v4;
      case 2:
      case 8:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
      case 0x15:
      case 0x1A:
      case 0x22:
      case 0x23:
      case 0x24:
      case 0x25:
      case 0x26:
      case 0x27:
      case 0x28:
        ++v2;
        goto LABEL_5;
      case 3:
        a1 += 2 * ((*a1 & 0xFFFE) > 9);
        goto LABEL_5;
      case 0xD:
        uint64_t v4 = a1;
        if (a2 == 1) {
          return v4;
        }
        goto LABEL_5;
      case 0x18:
        BOOL v6 = a1 + 1;
        if ((unsigned __int16)*a1 - 15 > 1) {
          BOOL v6 = a1;
        }
        if ((unsigned __int16)*a1 - 27 >= 2) {
          a1 = v6;
        }
        else {
          a1 += 3;
        }
        goto LABEL_5;
      case 0x19:
        if (!v2) {
          return a1;
        }
        --v2;
LABEL_5:
        uint64_t v5 = (v3 >> 16) & 0x7FFF;
        if (v5 <= 0x3F)
        {
          a1 += byte_1A68A7D98[v5];
LABEL_7:
          ++a1;
          continue;
        }
        return 0;
      case 0x29:
      case 0x2D:
      case 0x2F:
      case 0x31:
      case 0x33:
        a1 += a1[1];
        goto LABEL_5;
      default:
        if ((v3 & 0x80000000) != 0) {
          goto LABEL_5;
        }
        goto LABEL_7;
    }
  }
}

uint64_t sub_1A68773D4(unsigned int **a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  if (a5 < 1 || (*(unsigned char *)(a7 + 210) & 0x20) != 0) {
    goto LABEL_5;
  }
  LODWORD(v13) = *(_DWORD *)(*(void *)(a7 + 240) + 4 * a5);
  if ((v13 & 0x40000000) != 0) {
    return 0xFFFFFFFFLL;
  }
  if ((v13 & 0x80000000) == 0)
  {
LABEL_5:
    uint64_t v14 = sub_1A6876C2C(a1, a3, a4, a6, a7);
    if ((v14 & 0x80000000) == 0)
    {
      int v15 = -1;
      do
      {
        uint64_t v13 = v14;
        if (v15 != -1 && v15 != v14) {
          break;
        }
        if (**a1 == -2145845248)
        {
          if (a5 >= 1) {
            *(_DWORD *)(*(void *)(a7 + 240) + 4 * a5) |= v14 | 0x80000000;
          }
          return v13;
        }
        ++*a1;
        uint64_t v14 = sub_1A6876C2C(a1, a3, a4, a6, a7);
        int v15 = v13;
      }
      while ((v14 & 0x80000000) == 0);
    }
    if (a5 >= 1) {
      *(_DWORD *)(*(void *)(a7 + 240) + 4 * a5) |= 0x40000000u;
    }
    return 0xFFFFFFFFLL;
  }
  if (a2) {
    *a1 = sub_1A6877208(*a1, 2);
  }
  return (unsigned __int16)v13;
}

uint64_t sub_1A687750C(uint64_t result, unsigned char **a2, int a3, uint64_t a4, unsigned int *a5)
{
  unsigned int v5 = *a5;
  if (*a5 != -1)
  {
    uint64_t v9 = result;
    do
    {
      unsigned int v10 = -1;
      do
      {
        uint64_t v11 = v10 + 2;
        ++v10;
      }
      while (v5 + v10 + 1 == a5[v11]);
      unint64_t v12 = &a5[v11];
      *(_DWORD *)(a4 + 264) = v5;
      *(_DWORD *)(a4 + 268) = a5[v10];
      uint64_t result = sub_1A68777E4(v9, a2, a3, a4, *a5, a5[v10], *a5);
      unsigned int v5 = *v12;
      a5 = v12;
    }
    while (*v12 != -1);
  }
  return result;
}

uint64_t sub_1A68775B4(uint64_t a1, unsigned char **a2, int a3, uint64_t a4, int *a5)
{
  int v10 = *a5;
  if (!*a5
    || (*(_DWORD *)(a4 + 264) = 0,
        *(_DWORD *)(a4 + 268) = v10 - 1,
        uint64_t result = sub_1A68777E4(a1, a2, a3, a4, 0, v10 - 1, v10),
        int v10 = *a5,
        *a5 != -1))
  {
    if ((a3 & 0x80000) != 0) {
      int v12 = 1114111;
    }
    else {
      int v12 = -1;
    }
    for (char i = a5 + 1; ; ++i)
    {
      int v14 = *i;
      unsigned int v15 = v10 + 1;
      if (*i != v10 + 1)
      {
        unsigned int v16 = v14 == -1 ? v12 : v14 - 1;
        *(_DWORD *)(a4 + 264) = v15;
        *(_DWORD *)(a4 + 268) = v16;
        uint64_t result = sub_1A68777E4(a1, a2, a3, a4, v15, v16, v14 - 1);
        int v14 = *i;
        if (*i == -1) {
          break;
        }
      }
      int v10 = v14;
    }
  }
  return result;
}

uint64_t sub_1A687768C(unsigned __int8 *a1, unsigned int a2, unsigned int *a3, int *a4, _DWORD *a5, uint64_t a6)
{
  int v12 = *(unsigned __int8 **)(a6 + 72);
  unsigned int v13 = *(unsigned __int16 *)(a6 + 176);
  if (*(_WORD *)(a6 + 176))
  {
    unsigned int v14 = 0;
    uint64_t v15 = a2 + 2;
    while (_pcre2_strncmp_8(a1, v12 + 2, a2) || v12[v15])
    {
      v12 += *(unsigned __int16 *)(a6 + 178);
      ++v14;
      unsigned int v13 = *(unsigned __int16 *)(a6 + 176);
      if (v14 >= v13) {
        goto LABEL_9;
      }
    }
    unsigned int v13 = *(unsigned __int16 *)(a6 + 176);
  }
  else
  {
    unsigned int v14 = 0;
  }
LABEL_9:
  if (v14 >= v13)
  {
    uint64_t result = 0;
    *a5 = 153;
    *(void *)(a6 + 168) = &a1[-*(void *)(a6 + 56)];
  }
  else
  {
    *a3 = v14;
    int v16 = 1;
    do
    {
      int v17 = v16;
      unsigned int v18 = __rev16(*(unsigned __int16 *)v12);
      int v19 = 1 << v18;
      if (v18 >= 0x20) {
        int v19 = 1;
      }
      unsigned int v20 = *(_DWORD *)(a6 + 248);
      *(_DWORD *)(a6 + 252) |= v19;
      if (v18 > v20) {
        *(_DWORD *)(a6 + 248) = v18;
      }
      if (v14 + v17 >= *(unsigned __int16 *)(a6 + 176)) {
        break;
      }
      v12 += *(unsigned __int16 *)(a6 + 178);
      if (_pcre2_strncmp_8(a1, v12 + 2, a2)) {
        break;
      }
      int v16 = v17 + 1;
    }
    while (!v12[a2 + 2]);
    *a4 = v17;
    return 1;
  }
  return result;
}

uint64_t sub_1A68777E4@<X0>(uint64_t a1@<X0>, unsigned char **a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, unsigned int a5@<W4>, unsigned int a6@<W5>, int a7@<W8>)
{
  unsigned int v7 = a6;
  unsigned int v8 = a5;
  LODWORD(v10) = a3;
  if (a6 >= 0xFF) {
    unsigned int v12 = 255;
  }
  else {
    unsigned int v12 = a6;
  }
  if ((a3 & 8) == 0) {
    goto LABEL_5;
  }
  if ((a3 & 0xA0000) != 0)
  {
    uint64_t v13 = 0;
    uint64_t v10 = a3 & 0xFFFFFFF7;
    unsigned int v14 = a5;
LABEL_8:
    unsigned int v36 = v14 - 1;
    unsigned int v40 = v14;
LABEL_9:
    unsigned int v37 = v7 + 1;
    while (v8 <= v7)
    {
      signed int v15 = v8;
      while (1)
      {
        a7 = _pcre2_ucd_stage2_8[v15 - (a7 & 0xFFFFFF80) + (_pcre2_ucd_stage1_8[v15 / 128] << 7)];
        if (_pcre2_ucd_records_8[12 * a7 + 3])
        {
          unsigned int v8 = v15 + 1;
          int v16 = (int *)((char *)&_pcre2_ucd_caseless_sets_8 + 4 * _pcre2_ucd_records_8[12 * a7 + 3]);
          int v17 = *v16;
          if (*v16 == -1)
          {
            int v18 = 0;
          }
          else
          {
            unsigned int v38 = v12;
            unsigned int v39 = v7;
            int v18 = 0;
            do
            {
              if (v17 == v15)
              {
                int v19 = 0;
                int v17 = v16[1];
              }
              else
              {
                int v19 = -1;
                do
                {
                  int v20 = v16[v19 + 2];
                  ++v19;
                }
                while (v17 + v19 + 1 == v20);
                v18 += sub_1A68777E4(a1, a2, v10, a4);
                int v17 = v20;
              }
              v16 += (v19 + 1);
            }
            while (v17 != -1);
            unsigned int v12 = v38;
            unsigned int v7 = v39;
          }
          goto LABEL_37;
        }
        a7 = *(_DWORD *)&_pcre2_ucd_records_8[12 * a7 + 4];
        if (a7) {
          break;
        }
        if (++v15 > v7) {
          goto LABEL_45;
        }
      }
      unsigned int v21 = v15 + 1;
      int v22 = v15 + a7;
      do
      {
        unsigned int v23 = v22;
        unsigned int v8 = v21;
        if (v21 > v7) {
          break;
        }
        int v24 = _pcre2_ucd_stage2_8[v21 - (v22 & 0xFFFFFF80) + (_pcre2_ucd_stage1_8[(int)v21 / 128] << 7)];
        if (_pcre2_ucd_records_8[12
                                * _pcre2_ucd_stage2_8[v8 - (v22 & 0xFFFFFF80) + (_pcre2_ucd_stage1_8[v22 >> 7] << 7)]
                                + 3])
          break;
        ++v22;
        int v25 = *(_DWORD *)&_pcre2_ucd_records_8[12 * v24 + 4];
        unsigned int v21 = v8 + 1;
      }
      while (v22 == v25 + v8);
      if ((v15 + a7) < *(_DWORD *)(a4 + 264) || v23 > *(_DWORD *)(a4 + 268))
      {
        if (v15 + a7 < v14 && v23 >= v36)
        {
          unsigned int v14 = v15 + a7;
          goto LABEL_8;
        }
        if (v23 <= v7 || v15 + a7 > v37)
        {
          int v18 = sub_1A68777E4(a1, a2, v10, a4);
LABEL_37:
          uint64_t v13 = (v18 + v13);
          unsigned int v14 = v40;
          continue;
        }
        if (v23 >= 0xFF) {
          a7 = 255;
        }
        else {
          a7 = v23;
        }
        if (v23 > v12) {
          unsigned int v12 = a7;
        }
        unsigned int v7 = v23;
        goto LABEL_9;
      }
    }
LABEL_45:
    unsigned int v8 = v14;
  }
  else
  {
    if (v12 < a5)
    {
LABEL_5:
      uint64_t v13 = 0;
      goto LABEL_50;
    }
    uint64_t v26 = a5;
    uint64_t v27 = v12 + 1;
    do
    {
      unint64_t v28 = *(unsigned __int8 *)(*(void *)(a4 + 16) + v26);
      *(unsigned char *)(a1 + (v28 >> 3)) |= 1 << (v28 & 7);
      ++v26;
    }
    while (v27 != v26);
    uint64_t v13 = v27 - a5;
  }
LABEL_50:
  if (v7 > 0xFF && (v10 & 0x80000) == 0) {
    unsigned int v30 = 255;
  }
  else {
    unsigned int v30 = v7;
  }
  if (v8 <= *(_DWORD *)(a4 + 264) || v30 >= *(_DWORD *)(a4 + 268))
  {
    if (v8 <= v12)
    {
      unsigned int v31 = v8;
      do
      {
        *(unsigned char *)(a1 + ((unint64_t)v31 >> 3)) |= 1 << (v31 & 7);
        uint64_t v13 = (v13 + 1);
        ++v31;
      }
      while (v31 <= v12);
    }
    unsigned int v32 = v8 <= 0x100 ? 256 : v8;
    if (v30 >= v32)
    {
      unsigned int v33 = *a2;
      if ((v10 & 0x80000) != 0)
      {
        if (v32 < v7)
        {
          *unsigned int v33 = 2;
          uint64_t v34 = (uint64_t)&v33[_pcre2_ord2utf_8(v32, (uint64_t)(v33 + 1)) + 1];
LABEL_70:
          unsigned int v33 = (unsigned char *)(v34 + _pcre2_ord2utf_8(v7, v34));
          goto LABEL_71;
        }
        if (v32 == v7)
        {
          *unsigned int v33 = 1;
          uint64_t v34 = (uint64_t)(v33 + 1);
          goto LABEL_70;
        }
      }
LABEL_71:
      *a2 = v33;
    }
  }
  return v13;
}

unsigned __int8 *sub_1A6877BC0(unsigned __int8 *result, int a2)
{
  while (1)
  {
    uint64_t v2 = *result;
    switch(*result)
    {
      case 0x76u:
      case 0x90u:
      case 0x91u:
      case 0x92u:
      case 0x93u:
      case 0x94u:
      case 0x95u:
        goto LABEL_10;
      case 0x77u:
        result += __rev16(*(unsigned __int16 *)(result + 5));
        continue;
      case 0x78u:
      case 0x79u:
      case 0x7Au:
      case 0x7Bu:
      case 0x7Cu:
      case 0x7Du:
      case 0x7Eu:
      case 0x82u:
      case 0x84u:
      case 0x85u:
      case 0x86u:
      case 0x87u:
      case 0x88u:
      case 0x89u:
      case 0x8Bu:
      case 0x8Cu:
      case 0x8Du:
      case 0x8Eu:
      case 0x96u:
      case 0x97u:
      case 0x98u:
      case 0x9Au:
      case 0x9Cu:
      case 0x9Eu:
      case 0xA0u:
      case 0xA2u:
      case 0xA3u:
      case 0xA4u:
      case 0xA5u:
        return result;
      case 0x7Fu:
      case 0x80u:
      case 0x81u:
      case 0x83u:
        if (!a2) {
          return result;
        }
        do
        {
          result += __rev16(*(unsigned __int16 *)(result + 1));
          uint64_t v2 = *result;
        }
        while (v2 == 120);
LABEL_10:
        result += _pcre2_OP_lengths_8[v2];
        break;
      case 0x8Au:
      case 0x8Fu:
        if (result[3] != 148) {
          return result;
        }
        unsigned int v4 = __rev16(*(unsigned __int16 *)(result + 1));
        if (result[v4] != 121) {
          return result;
        }
        result += v4 + 3;
        break;
      case 0x99u:
      case 0x9Bu:
      case 0x9Du:
      case 0x9Fu:
      case 0xA1u:
        result += result[1] + (unint64_t)_pcre2_OP_lengths_8[v2];
        continue;
      case 0xA6u:
        result += __rev16(*((unsigned __int16 *)result + 1)) + 4;
        continue;
      default:
        if ((v2 - 4) < 2 && a2 != 0) {
          goto LABEL_10;
        }
        return result;
    }
  }
}

unsigned __int8 *_pcre2_find_bracket_8(unsigned __int8 *result, int a2, int a3)
{
  while (2)
  {
    uint64_t v3 = *result;
    switch(*result)
    {
      case 'U':
      case 'V':
      case 'W':
      case 'X':
      case 'Y':
      case 'Z':
      case '^':
      case '_':
        int v4 = result[1];
        goto LABEL_10;
      case '[':
      case '\\':
      case ']':
      case 'a':
        int v4 = result[3];
LABEL_10:
        uint64_t v6 = 2 * ((v4 - 15) < 2);
        goto LABEL_11;
      case 'b':
      case 'c':
      case 'd':
      case 'e':
      case 'f':
      case 'g':
      case 'h':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'n':
      case 'o':
      case 'q':
      case 'r':
      case 's':
      case 't':
      case 'u':
      case 'v':
        goto LABEL_19;
      case 'p':
        unsigned int v7 = *(unsigned __int16 *)(result + 1);
        goto LABEL_17;
      case 'w':
        unsigned int v7 = *(unsigned __int16 *)(result + 5);
LABEL_17:
        result += __rev16(v7);
        continue;
      default:
        char v5 = v3 - 125;
        if ((v3 - 125) > 0x24) {
          goto LABEL_18;
        }
        if (((1 << v5) & 0x1550000000) != 0)
        {
          uint64_t v6 = result[1];
LABEL_11:
          result += v6 + _pcre2_OP_lengths_8[v3];
          continue;
        }
        if (((1 << v5) & 0x31800) != 0)
        {
          if (a3 == bswap32(*(unsigned __int16 *)(result + 3)) >> 16) {
            return result;
          }
          result += _pcre2_OP_lengths_8[v3];
          continue;
        }
        if (v3 == 125)
        {
          if (a3 < 0) {
            return result;
          }
          result += 3;
          continue;
        }
LABEL_18:
        if (*result)
        {
LABEL_19:
          result += _pcre2_OP_lengths_8[v3];
          if (a2 && (v3 - 29) <= 0x37)
          {
            unsigned int v8 = *(result - 1);
            if (v8 >= 0xC0) {
              result += _pcre2_utf8_table4[v8 & 0x3F];
            }
          }
          continue;
        }
        return 0;
    }
  }
}

uint64_t pcre2_get_error_message_8(int a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return 4294967248;
  }
  int v3 = a1 - 100;
  if (a1 < 100)
  {
    if ((a1 & 0x80000000) == 0)
    {
      int v4 = &byte_1A68AB649;
      int v3 = 1;
      goto LABEL_8;
    }
    int v3 = -a1;
    int v4 = "no error";
  }
  else
  {
    int v4 = "no error";
  }
  if (v3 < 1)
  {
    LOBYTE(v6) = *v4;
    if (!*v4)
    {
      uint64_t result = 0;
LABEL_22:
      *(unsigned char *)(a2 + result) = 0;
      return result;
    }
LABEL_15:
    uint64_t v9 = 0;
    uint64_t v10 = a3 - 1;
    uint64_t v11 = v4 + 1;
    while (v10 != v9)
    {
      *(unsigned char *)(a2 + v9) = v6;
      uint64_t result = v9 + 1;
      int v6 = v11[v9++];
      if (!v6) {
        goto LABEL_22;
      }
    }
    *(unsigned char *)(a2 + v10) = 0;
    return 4294967248;
  }
  while (1)
  {
LABEL_8:
    while (*v4++)
      ;
    LOBYTE(v6) = *v4;
    if (!*v4) {
      return 4294967267;
    }
    if (v3-- < 2) {
      goto LABEL_15;
    }
  }
}

unsigned __int8 *_pcre2_extuni_8(int a1, unsigned __int8 *a2, unint64_t a3, unint64_t a4, int a5, _DWORD *a6)
{
  if ((unint64_t)a2 >= a4) {
    return a2;
  }
  if (a1 >= 0) {
    int v6 = a1;
  }
  else {
    int v6 = a1 + 127;
  }
  unsigned int v7 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[a1 - (v6 & 0xFFFFFF80) + (_pcre2_ucd_stage1_8[v6 >> 7] << 7)] + 2];
  while (1)
  {
    unsigned int v8 = *a2;
    if (a5 && v8 >= 0xC0)
    {
      int v9 = a2[1] & 0x3F;
      if ((v8 & 0x20) != 0)
      {
        if ((v8 & 0x10) != 0)
        {
          if ((v8 & 8) != 0)
          {
            int v26 = a2[2] & 0x3F;
            int v27 = a2[3] & 0x3F;
            int v28 = a2[4] & 0x3F;
            if ((v8 & 4) != 0)
            {
              unsigned int v8 = ((v8 & 1) << 30) | (v9 << 24) | (v26 << 18) | (v27 << 12) | (v28 << 6) | a2[5] & 0x3F;
              uint64_t v10 = 6;
            }
            else
            {
              unsigned int v8 = ((v8 & 3) << 24) | (v9 << 18) | (v26 << 12) | (v27 << 6) | v28;
              uint64_t v10 = 5;
            }
          }
          else
          {
            unsigned int v8 = ((v8 & 7) << 18) | (v9 << 12) | ((a2[2] & 0x3F) << 6) | a2[3] & 0x3F;
            uint64_t v10 = 4;
          }
        }
        else
        {
          unsigned int v8 = ((v8 & 0xF) << 12) | (v9 << 6) | a2[2] & 0x3F;
          uint64_t v10 = 3;
        }
      }
      else
      {
        unsigned int v8 = a2[1] & 0x3F | ((v8 & 0x1F) << 6);
        uint64_t v10 = 2;
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unsigned int v11 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v8 & 0x7F | (_pcre2_ucd_stage1_8[v8 >> 7] << 7)] + 2];
    if (((_pcre2_ucp_gbtable_8[v7] >> v11) & 1) == 0) {
      return a2;
    }
    if (v7 == 11 && v11 == 11)
    {
      if (a5)
      {
        unsigned int v12 = a2;
        do
          char v13 = *--v12;
        while ((v13 & 0xC0) == 0x80);
      }
      else
      {
        unsigned int v12 = a2 - 1;
      }
      if ((unint64_t)v12 > a3) {
        break;
      }
    }
LABEL_40:
    if ((v11 == 13 || v11 == 3) && v7 == 14) {
      unsigned int v7 = 14;
    }
    else {
      unsigned int v7 = v11;
    }
    if (a6) {
      ++*a6;
    }
    a2 += v10;
    if ((unint64_t)a2 >= a4) {
      return a2;
    }
  }
  char v14 = 0;
  do
  {
    if (a5)
    {
      do
      {
        unsigned int v16 = *--v12;
        unsigned int v15 = v16;
      }
      while ((v16 & 0xC0) == 0x80);
      if (v15 >= 0xC0)
      {
        int v17 = v12[1] & 0x3F;
        if ((v15 & 0x20) != 0)
        {
          if ((v15 & 0x10) != 0)
          {
            if ((v15 & 8) != 0)
            {
              int v21 = v12[2] & 0x3F;
              int v22 = v12[3] & 0x3F;
              int v23 = v12[4] & 0x3F;
              if ((v15 & 4) == 0)
              {
                unsigned int v15 = ((v15 & 3) << 24) | (v17 << 18) | (v21 << 12) | (v22 << 6) | v23;
                goto LABEL_37;
              }
              int v19 = ((v15 & 1) << 30) | (v17 << 24) | (v21 << 18) | (v22 << 12) | (v23 << 6);
              unsigned __int8 v20 = v12[5];
            }
            else
            {
              int v19 = ((v15 & 7) << 18) | (v17 << 12) | ((v12[2] & 0x3F) << 6);
              unsigned __int8 v20 = v12[3];
            }
          }
          else
          {
            int v19 = ((v15 & 0xF) << 12) | (v17 << 6);
            unsigned __int8 v20 = v12[2];
          }
          unsigned int v15 = v19 & 0xFFFFFFC0 | v20 & 0x3F;
          goto LABEL_37;
        }
        unsigned int v15 = v12[1] & 0x3F | ((v15 & 0x1F) << 6);
      }
    }
    else
    {
      unsigned int v18 = *--v12;
      unsigned int v15 = v18;
    }
LABEL_37:
    if (_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v15 & 0x7F | (_pcre2_ucd_stage1_8[v15 >> 7] << 7)] + 2] != 11) {
      break;
    }
    ++v14;
  }
  while ((unint64_t)v12 > a3);
  if ((v14 & 1) == 0) {
    goto LABEL_40;
  }
  return a2;
}

uint64_t _pcre2_is_newline_8(unsigned __int8 *a1, int a2, uint64_t a3, int *a4, int a5)
{
  int v5 = *a1;
  if (a5 && v5 >= 0xC0)
  {
    int v6 = a1[1] & 0x3F;
    if ((v5 & 0x20) == 0)
    {
      int v5 = a1[1] & 0x3F | ((v5 & 0x1F) << 6);
      goto LABEL_13;
    }
    if ((v5 & 0x10) != 0)
    {
      if ((v5 & 8) != 0)
      {
        int v9 = a1[2] & 0x3F;
        int v10 = a1[3] & 0x3F;
        int v11 = a1[4] & 0x3F;
        if ((v5 & 4) == 0)
        {
          int v5 = ((v5 & 3) << 24) | (v6 << 18) | (v9 << 12) | (v10 << 6) | v11;
          goto LABEL_13;
        }
        int v7 = ((v5 & 1) << 30) | (v6 << 24) | (v9 << 18) | (v10 << 12) | (v11 << 6);
        unsigned __int8 v8 = a1[5];
      }
      else
      {
        int v7 = ((v5 & 7) << 18) | (v6 << 12) | ((a1[2] & 0x3F) << 6);
        unsigned __int8 v8 = a1[3];
      }
    }
    else
    {
      int v7 = ((v5 & 0xF) << 12) | (v6 << 6);
      unsigned __int8 v8 = a1[2];
    }
    int v5 = v7 & 0xFFFFFFC0 | v8 & 0x3F;
  }
LABEL_13:
  if (a2 != 2)
  {
    uint64_t v12 = 0;
    if (v5 > 132)
    {
      if ((v5 - 8232) >= 2)
      {
        if (v5 != 133) {
          return v12;
        }
        if (a5) {
          int v13 = 2;
        }
        else {
          int v13 = 1;
        }
      }
      else
      {
        int v13 = 3;
      }
LABEL_31:
      *a4 = v13;
      return 1;
    }
    if ((v5 - 10) >= 3)
    {
      if (v5 != 13) {
        return v12;
      }
      goto LABEL_23;
    }
LABEL_19:
    int v13 = 1;
    goto LABEL_31;
  }
  if (v5 == 10) {
    goto LABEL_19;
  }
  if (v5 == 13)
  {
LABEL_23:
    int v13 = 1;
    if (a3 - 1 > (unint64_t)a1)
    {
      if (a1[1] == 10) {
        int v13 = 2;
      }
      else {
        int v13 = 1;
      }
    }
    goto LABEL_31;
  }
  return 0;
}

uint64_t _pcre2_was_newline_8(unsigned char *a1, int a2, unint64_t a3, int *a4, int a5)
{
  if (!a5)
  {
    int v8 = *--a1;
    int v5 = v8;
    goto LABEL_15;
  }
  do
  {
    int v6 = *--a1;
    int v5 = v6;
  }
  while ((v6 & 0xC0) == 0x80);
  if (v5 >= 0xC0)
  {
    int v7 = a1[1] & 0x3F;
    if ((v5 & 0x20) == 0)
    {
      int v5 = a1[1] & 0x3F | ((v5 & 0x1F) << 6);
      goto LABEL_15;
    }
    if ((v5 & 0x10) != 0)
    {
      if ((v5 & 8) != 0)
      {
        int v11 = a1[2] & 0x3F;
        int v12 = a1[3] & 0x3F;
        int v13 = a1[4] & 0x3F;
        if ((v5 & 4) == 0)
        {
          int v5 = ((v5 & 3) << 24) | (v7 << 18) | (v11 << 12) | (v12 << 6) | v13;
          goto LABEL_15;
        }
        int v9 = ((v5 & 1) << 30) | (v7 << 24) | (v11 << 18) | (v12 << 12) | (v13 << 6);
        char v10 = a1[5];
      }
      else
      {
        int v9 = ((v5 & 7) << 18) | (v7 << 12) | ((a1[2] & 0x3F) << 6);
        char v10 = a1[3];
      }
    }
    else
    {
      int v9 = ((v5 & 0xF) << 12) | (v7 << 6);
      char v10 = a1[2];
    }
    int v5 = v9 & 0xFFFFFFC0 | v10 & 0x3F;
  }
LABEL_15:
  if (a2 != 2)
  {
    uint64_t v14 = 0;
    if (v5 > 132)
    {
      if ((v5 - 8232) >= 2)
      {
        if (v5 != 133) {
          return v14;
        }
        if (a5) {
          int v15 = 2;
        }
        else {
          int v15 = 1;
        }
      }
      else
      {
        int v15 = 3;
      }
LABEL_33:
      *a4 = v15;
      return 1;
    }
    if ((v5 - 11) >= 3)
    {
      if (v5 != 10) {
        return v14;
      }
      goto LABEL_25;
    }
LABEL_21:
    int v15 = 1;
    goto LABEL_33;
  }
  if (v5 == 13) {
    goto LABEL_21;
  }
  if (v5 == 10)
  {
LABEL_25:
    int v15 = 1;
    if ((unint64_t)a1 > a3)
    {
      if (*(a1 - 1) == 13) {
        int v15 = 2;
      }
      else {
        int v15 = 1;
      }
    }
    goto LABEL_33;
  }
  return 0;
}

uint64_t _pcre2_study_8(uint64_t a1)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  int v28 = 0;
  unsigned int v2 = *(_DWORD *)(a1 + 88);
  int v3 = (unsigned __int8 *)(a1 + *(unsigned __int16 *)(a1 + 134) * (unint64_t)*(unsigned __int16 *)(a1 + 132) + 136);
  int v4 = *(_DWORD *)(a1 + 96);
  if ((v4 & 0x210) != 0) {
    goto LABEL_2;
  }
  v29[0] = 0;
  int v7 = sub_1A6878824(a1, v3, (v2 >> 19) & 1, (v2 >> 17) & 1, v29);
  if (v7 != 1)
  {
    if (v7 != 3)
    {
      int v4 = *(_DWORD *)(a1 + 96);
      goto LABEL_2;
    }
    return 1;
  }
  int v8 = 0;
  int v9 = (unsigned char *)(a1 + 40);
  uint64_t v10 = 0xFFFFFFFFLL;
  unsigned int v11 = -8;
  int v12 = -1;
  do
  {
    uint64_t v13 = v10;
    v11 += 8;
    int v14 = *v9;
    if (!*v9) {
      goto LABEL_46;
    }
    if ((v14 & (v14 - 1)) != 0) {
      goto LABEL_54;
    }
    int v15 = v8 | 6;
    int v16 = v8 | 7;
    if (v14 != 128) {
      int v16 = v11;
    }
    if (v14 != 64) {
      int v15 = v16;
    }
    int v17 = v8 | 4;
    int v18 = v8 | 5;
    if (v14 != 32) {
      int v18 = v11;
    }
    if (v14 != 16) {
      int v17 = v18;
    }
    if (*v9 <= 0x3Fu) {
      int v15 = v17;
    }
    int v19 = v8 | 1;
    int v20 = v8 | 2;
    int v21 = v8 | 3;
    if (v14 != 8) {
      int v21 = v11;
    }
    if (v14 != 4) {
      int v20 = v21;
    }
    if (v14 != 2) {
      int v19 = v20;
    }
    uint64_t v10 = *v9 <= 0xFu ? v19 : v15;
    if ((v2 & 0x80000) != 0 && v10 > 0x7F)
    {
LABEL_54:
      int v24 = *(_DWORD *)(a1 + 96);
LABEL_55:
      int v25 = 64;
      goto LABEL_56;
    }
    if (v12 < 0)
    {
      int v12 = v10;
LABEL_46:
      uint64_t v10 = v13;
      goto LABEL_47;
    }
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_54;
    }
    int v22 = *(unsigned __int8 *)(*(void *)(a1 + 24) + v10 + 256);
    if ((v2 & 0xA0000) != 0)
    {
      int v23 = v10 - 128;
      if (v10 < 0x80) {
        int v23 = v10;
      }
      if (_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[128 * _pcre2_ucd_stage1_8[v10 > 0x7F] + v23] + 3]) {
        goto LABEL_54;
      }
      if (v10 >= 0x80) {
        int v22 = *(_DWORD *)&_pcre2_ucd_records_8[12
      }
                                             * _pcre2_ucd_stage2_8[128 * _pcre2_ucd_stage1_8[v10 > 0x7F]
                                                                 + v23]
                                             + 4]
            + v10;
    }
    if (v22 != v12) {
      goto LABEL_54;
    }
LABEL_47:
    ++v9;
    v8 += 8;
  }
  while (v11 < 0xF8);
  int v24 = *(_DWORD *)(a1 + 96);
  if (v12 < 0) {
    goto LABEL_55;
  }
  if ((v24 & 0x80) != 0)
  {
    int v27 = *(_DWORD *)(a1 + 116);
    if (v27 == v12 || (v10 & 0x80000000) == 0 && v27 == v10) {
      goto LABEL_55;
    }
  }
  *(_DWORD *)(a1 + 112) = v12;
  if ((int)v10 < 0) {
    int v25 = 16;
  }
  else {
    int v25 = 48;
  }
LABEL_56:
  int v4 = v24 | v25;
  *(_DWORD *)(a1 + 96) = v4;
LABEL_2:
  if ((v4 & 0x802000) != 0) {
    return 0;
  }
  if (*(unsigned __int16 *)(a1 + 130) > 0x80u) {
    return 0;
  }
  v29[0] = 0;
  int v5 = sub_1A6879378(a1, (char *)v3, v3, (v2 >> 19) & 1, 0, &v28, v29);
  switch(v5)
  {
    case -1:
      return 0;
    case -2:
      return 2;
    case -3:
      return 3;
  }
  if (v5 >= 0xFFFF) {
    __int16 v26 = -1;
  }
  else {
    __int16 v26 = v5;
  }
  *(_WORD *)(a1 + 126) = v26;
  return 0;
}

uint64_t sub_1A6878824(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  if (a3) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = 32;
  }
  int v6 = (*a5)++;
  if (v6 > 999) {
    return 4;
  }
  unsigned int v11 = a2;
  char v73 = (_DWORD *)(a1 + 65);
  unsigned __int8 v13 = *a2;
  uint64_t v14 = a1 + 40;
  uint64_t v15 = 1;
LABEL_7:
  unsigned int v16 = v13 - 136;
  BOOL v17 = v16 > 6;
  int v18 = (1 << v16) & 0x63;
  if (v17 || v18 == 0) {
    int v20 = v11 + 3;
  }
  else {
    int v20 = v11 + 5;
  }
  while (2)
  {
    int v21 = *v20;
    uint64_t result = 3;
    int v22 = 0;
    uint64_t v23 = 2;
    switch(*v20)
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x12u:
      case 0x14u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Cu:
      case 0x1Fu:
      case 0x20u:
      case 0x3Bu:
      case 0x3Cu:
      case 0x3Du:
      case 0x3Eu:
      case 0x3Fu:
      case 0x40u:
      case 0x41u:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x45u:
      case 0x46u:
      case 0x47u:
      case 0x48u:
      case 0x49u:
      case 0x4Au:
      case 0x4Bu:
      case 0x4Cu:
      case 0x4Du:
      case 0x4Eu:
      case 0x4Fu:
      case 0x50u:
      case 0x51u:
      case 0x52u:
      case 0x53u:
      case 0x54u:
      case 0x71u:
      case 0x72u:
      case 0x73u:
      case 0x74u:
      case 0x75u:
      case 0x7Du:
      case 0x8Au:
      case 0x8Fu:
      case 0x90u:
      case 0x91u:
      case 0x92u:
      case 0x93u:
      case 0x94u:
      case 0x95u:
      case 0x99u:
      case 0x9Au:
      case 0x9Bu:
      case 0x9Cu:
      case 0x9Du:
      case 0x9Eu:
      case 0x9Fu:
      case 0xA0u:
      case 0xA1u:
      case 0xA2u:
      case 0xA3u:
      case 0xA4u:
      case 0xA5u:
        return 0;
      case 4u:
      case 5u:
      case 0x57u:
      case 0x58u:
      case 0x5Fu:
        ++v20;
        continue;
      case 6u:
        uint64_t v58 = 0;
        uint64_t v59 = *(void *)(a1 + 24);
        do
        {
          *(unsigned char *)(v14 + v58) |= ~*(unsigned char *)(v59 + (v58 + 576));
          ++v58;
        }
        while (v5 != v58);
        goto LABEL_118;
      case 7u:
        uint64_t v60 = a1;
        int v61 = 64;
        goto LABEL_121;
      case 8u:
        uint64_t v62 = 0;
        uint64_t v63 = *(void *)(a1 + 24);
        do
        {
          *(unsigned char *)(v14 + v62) |= ~*(unsigned char *)(v63 + (v62 + 512));
          ++v62;
        }
        while (v5 != v62);
        goto LABEL_118;
      case 9u:
        uint64_t v60 = a1;
        int v61 = 0;
        goto LABEL_121;
      case 0xAu:
        uint64_t v64 = 0;
        uint64_t v65 = *(void *)(a1 + 24);
        do
        {
          *(unsigned char *)(v14 + v64) |= ~*(unsigned char *)(v65 + (v64 + 672));
          ++v64;
        }
        while (v5 != v64);
LABEL_118:
        if (a3) {
          *(void *)(a1 + 64) = -1;
        }
        goto LABEL_140;
      case 0xBu:
        uint64_t v60 = a1;
        int v61 = 160;
LABEL_121:
        sub_1A687A1AC(v60, v61, v5);
        goto LABEL_140;
      case 0x10u:
        if (v20[1] == 10)
        {
          uint64_t v66 = v20[2];
          unsigned int v67 = _pcre2_ucd_caseless_sets_8[v66];
          if (v67 == -1)
          {
LABEL_140:
            uint64_t v23 = v15;
            goto LABEL_141;
          }
          int v68 = &_pcre2_ucd_caseless_sets_8[v66 + 1];
          while (!a3)
          {
            if (v67 < 0x100) {
              goto LABEL_129;
            }
            *(unsigned char *)(a1 + 71) |= 0x80u;
LABEL_130:
            unsigned int v69 = *v68++;
            unsigned int v67 = v69;
            if (v69 == -1) {
              goto LABEL_140;
            }
          }
          _pcre2_ord2utf_8(v67, (uint64_t)v74);
          unsigned int v67 = v74[0];
LABEL_129:
          *(unsigned char *)(a1 + (v67 >> 3) + 40) |= 1 << (v67 & 7);
          goto LABEL_130;
        }
        return 0;
      case 0x11u:
      case 0x15u:
        *(unsigned char *)(a1 + 41) |= 0x3Cu;
        if (a3)
        {
          *(unsigned char *)(a1 + 64) |= 4u;
          char v57 = *(unsigned char *)(a1 + 68) | 4;
          goto LABEL_134;
        }
        *(unsigned char *)(a1 + 56) |= 0x20u;
        goto LABEL_140;
      case 0x13u:
        *(unsigned char *)(a1 + 41) |= 2u;
        *(unsigned char *)(a1 + 44) |= 1u;
        if (a3)
        {
          *(unsigned char *)(a1 + 64) |= 4u;
          char v57 = *(unsigned char *)(a1 + 68) | 0xE;
LABEL_134:
          *(unsigned char *)(a1 + 68) = v57;
        }
        else
        {
          *(unsigned char *)(a1 + 60) |= 1u;
        }
        goto LABEL_140;
      case 0x1Bu:
        uint64_t v27 = 1;
        goto LABEL_61;
      case 0x1Du:
      case 0x23u:
      case 0x24u:
      case 0x2Bu:
        goto LABEL_136;
      case 0x1Eu:
      case 0x30u:
      case 0x31u:
      case 0x38u:
        goto LABEL_138;
      case 0x21u:
      case 0x22u:
      case 0x25u:
      case 0x26u:
      case 0x2Au:
      case 0x2Cu:
        int v24 = v20 + 1;
        goto LABEL_23;
      case 0x27u:
      case 0x28u:
      case 0x2Du:
        int v24 = v20 + 3;
LABEL_23:
        int v20 = sub_1A6879FDC(a1, v24, 0, a3, a4);
        continue;
      case 0x29u:
        v20 += 2;
LABEL_136:
        uint64_t v70 = v20 + 1;
        uint64_t v71 = a1;
        int v72 = 0;
        goto LABEL_139;
      case 0x2Eu:
      case 0x2Fu:
      case 0x32u:
      case 0x33u:
      case 0x37u:
      case 0x39u:
        int v25 = v20 + 1;
        goto LABEL_25;
      case 0x34u:
      case 0x35u:
      case 0x3Au:
        int v25 = v20 + 3;
LABEL_25:
        int v20 = sub_1A6879FDC(a1, v25, 1, a3, a4);
        continue;
      case 0x36u:
        v20 += 2;
LABEL_138:
        uint64_t v70 = v20 + 1;
        uint64_t v71 = a1;
        int v72 = 1;
LABEL_139:
        sub_1A6879FDC(v71, v70, v72, a3, a4);
        goto LABEL_140;
      case 0x55u:
      case 0x56u:
      case 0x59u:
      case 0x5Au:
      case 0x5Eu:
      case 0x60u:
        goto LABEL_27;
      case 0x5Bu:
      case 0x5Cu:
      case 0x61u:
        v20 += 2;
LABEL_27:
        uint64_t result = 0;
        switch(v20[1])
        {
          case 6u:
            uint64_t v42 = 0;
            uint64_t v43 = *(void *)(a1 + 24);
            do
            {
              *(unsigned char *)(v14 + v42) |= ~*(unsigned char *)(v43 + (v42 + 576));
              ++v42;
            }
            while (v5 != v42);
            goto LABEL_75;
          case 7u:
            uint64_t v44 = a1;
            int v45 = 64;
            goto LABEL_78;
          case 8u:
            uint64_t v46 = 0;
            uint64_t v47 = *(void *)(a1 + 24);
            do
            {
              *(unsigned char *)(v14 + v46) |= ~*(unsigned char *)(v47 + (v46 + 512));
              ++v46;
            }
            while (v5 != v46);
            goto LABEL_75;
          case 9u:
            uint64_t v44 = a1;
            int v45 = 0;
            goto LABEL_78;
          case 0xAu:
            uint64_t v48 = 0;
            uint64_t v49 = *(void *)(a1 + 24);
            do
            {
              *(unsigned char *)(v14 + v48) |= ~*(unsigned char *)(v49 + (v48 + 672));
              ++v48;
            }
            while (v5 != v48);
LABEL_75:
            if (a3) {
              *(void *)(a1 + 64) = -1;
            }
            break;
          case 0xBu:
            uint64_t v44 = a1;
            int v45 = 160;
LABEL_78:
            sub_1A687A1AC(v44, v45, v5);
            break;
          case 0x11u:
          case 0x15u:
            *(unsigned char *)(a1 + 41) |= 0x3Cu;
            if (a3)
            {
              *(unsigned char *)(a1 + 64) |= 4u;
              char v26 = *(unsigned char *)(a1 + 68) | 4;
              goto LABEL_81;
            }
            *(unsigned char *)(a1 + 56) |= 0x20u;
            break;
          case 0x13u:
            *(unsigned char *)(a1 + 41) |= 2u;
            *(unsigned char *)(a1 + 44) |= 1u;
            if (a3)
            {
              *(unsigned char *)(a1 + 64) |= 4u;
              char v26 = *(unsigned char *)(a1 + 68) | 0xE;
LABEL_81:
              *(unsigned char *)(a1 + 68) = v26;
            }
            else
            {
              *(unsigned char *)(a1 + 60) |= 1u;
            }
            break;
          default:
            return result;
        }
        v20 += 2;
        continue;
      case 0x5Du:
        goto LABEL_33;
      case 0x6Eu:
        goto LABEL_58;
      case 0x6Fu:
        goto LABEL_54;
      case 0x70u:
        uint64_t result = 0;
        unsigned __int8 v28 = v20[3];
        if ((v28 & 4) != 0 || (v28 & 3) == 1) {
          return result;
        }
        if ((v20[3] & 2) != 0) {
          int v22 = v20 + 4;
        }
        else {
          int v22 = 0;
        }
        if (!a3 || (v20[3] & 1) != 0)
        {
LABEL_54:
          if (a3)
          {
            *(unsigned char *)(a1 + 64) |= 0xF0u;
            *char v73 = -1;
            *(_DWORD *)((char *)v73 + 3) = -1;
            int v21 = *v20;
          }
          if (v21 != 112)
          {
LABEL_58:
            int v22 = v20 + 1;
            unsigned int v40 = v20 + 33;
            goto LABEL_85;
          }
          uint64_t v30 = __rev16(*(unsigned __int16 *)(v20 + 1));
        }
        else
        {
          unsigned int v29 = &v20[16 * (v28 & 2) + 4];
          uint64_t v30 = __rev16(*(unsigned __int16 *)(v20 + 1));
          while (1)
          {
            while (1)
            {
              unsigned int v31 = v29 + 1;
              int v32 = *v29;
              if (v32 != 1) {
                break;
              }
              unint64_t v38 = *v31;
              do
                char v39 = *++v31;
              while ((v39 & 0xC0) == 0x80);
              *(unsigned char *)(a1 + (v38 >> 3) + 40) |= 1 << (v38 & 7);
              unsigned int v29 = v31;
            }
            if (v32 != 2) {
              break;
            }
            unsigned int v34 = *++v29;
            unsigned int v33 = v34;
            do
            {
              unsigned int v36 = *++v29;
              unsigned int v35 = v36;
            }
            while ((v36 & 0xC0) == 0x80);
            do
              char v37 = *++v29;
            while ((v37 & 0xC0) == 0x80);
            if (v33 <= v35)
            {
              do
              {
                *(unsigned char *)(a1 + (v33 >> 3) + 40) |= 1 << (v33 & 7);
                ++v33;
              }
              while (v35 >= v33);
            }
          }
          if (*v29) {
            return 3;
          }
        }
        unsigned int v40 = &v20[v30];
        if (!v22) {
          goto LABEL_94;
        }
LABEL_85:
        uint64_t v50 = 0;
        if (a3)
        {
          do
          {
            *(unsigned char *)(v14 + v50) |= v22[v50];
            ++v50;
          }
          while (v50 != 16);
          unsigned int v51 = 128;
          do
          {
            if ((v22[(unint64_t)v51 >> 3] >> (v51 & 7)))
            {
              *(unsigned char *)(a1 + 64) |= 1 << (v51 >> 6);
              v51 |= 0x3Fu;
            }
          }
          while (v51++ < 0xFF);
        }
        else
        {
          do
          {
            *(unsigned char *)(v14 + v50) |= v22[v50];
            ++v50;
          }
          while (v50 != 32);
        }
LABEL_94:
        unsigned int v53 = *v40 - 98;
        if (v53 > 0xB) {
          goto LABEL_140;
        }
        int v54 = 1 << v53;
        if ((v54 & 0x533) != 0)
        {
          int v20 = v40 + 1;
        }
        else
        {
          if ((v54 & 0x8C0) == 0) {
            goto LABEL_140;
          }
          BOOL v55 = __rev16(*(unsigned __int16 *)(v40 + 1)) == 0;
          uint64_t v56 = 5;
          if (!v55) {
            uint64_t v56 = 0;
          }
          int v20 = &v40[v56];
          if (!v55) {
            goto LABEL_140;
          }
        }
        continue;
      case 0x76u:
        uint64_t v27 = 6;
        goto LABEL_61;
      case 0x77u:
        uint64_t v27 = __rev16(*(unsigned __int16 *)(v20 + 5));
LABEL_61:
        v20 += v27;
        continue;
      case 0x78u:
        goto LABEL_141;
      case 0x79u:
      case 0x7Au:
      case 0x7Bu:
      case 0x7Cu:
        return 2;
      case 0x7Eu:
      case 0x82u:
      case 0x84u:
      case 0x85u:
      case 0x86u:
      case 0x87u:
      case 0x88u:
      case 0x89u:
      case 0x8Bu:
      case 0x8Cu:
      case 0x8Du:
      case 0x8Eu:
        uint64_t result = sub_1A6878824(a1, v20, a3, a4, a5);
        if (result == 2)
        {
          do
            v20 += __rev16(*(unsigned __int16 *)(v20 + 1));
          while (*v20 == 120);
LABEL_33:
          v20 += 3;
          continue;
        }
        uint64_t v23 = v15;
        if (result != 1) {
          return result;
        }
LABEL_141:
        v11 += __rev16(*(unsigned __int16 *)(v11 + 1));
        unsigned __int8 v13 = 120;
        uint64_t v15 = v23;
        uint64_t result = v23;
        if (*v11 != 120) {
          return result;
        }
        goto LABEL_7;
      case 0x7Fu:
      case 0x80u:
      case 0x81u:
      case 0x83u:
        do
          v20 += __rev16(*(unsigned __int16 *)(v20 + 1));
        while (*v20 == 120);
        goto LABEL_33;
      case 0x96u:
      case 0x97u:
      case 0x98u:
        uint64_t result = sub_1A6878824(a1, ++v20, a3, a4, a5);
        if (result <= 4 && ((1 << result) & 0x19) != 0) {
          return result;
        }
        do
          v20 += __rev16(*(unsigned __int16 *)(v20 + 1));
        while (*v20 == 120);
        goto LABEL_33;
      case 0xA6u:
        unsigned int v41 = v20 + 1;
        do
          v41 += __rev16(*(unsigned __int16 *)(v41 + 1));
        while (*v41 == 120);
        int v20 = v41 + 3;
        continue;
      default:
        return result;
    }
  }
}

uint64_t sub_1A6879378(uint64_t a1, char *a2, unsigned __int8 *a3, int a4, void *a5, _DWORD *a6, int *a7)
{
  char v7 = *a2;
  if ((*a2 + 117) >= 5u)
  {
    int v9 = *(_DWORD *)(a1 + 96);
    uint64_t v10 = a2[1];
    uint64_t v11 = a2[2];
    int v12 = (*a6)++;
    if (v12 > 1000) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v14 = a7;
    int v84 = 0;
    int v85 = v9;
    int v15 = 0;
    int v78 = 0;
    uint64_t v16 = 0;
    BOOL v27 = (v7 & 0xFE) == 136;
    uint64_t v17 = 3;
    if (v27) {
      uint64_t v17 = 5;
    }
    int v18 = (unsigned __int8 *)&a2[v17];
    int v19 = (unsigned __int8 *)&a2[v11 | (v10 << 8)];
    uint64_t v77 = a1 + 136;
    uint64_t v80 = a7 + 1;
    int v87 = 0;
    int v88 = -1;
    int v83 = -1;
    int v79 = -1;
    int v91 = a4;
    uint64_t v90 = a1;
    while (1)
    {
      if (v15 <= 65534) {
        uint64_t v20 = v15;
      }
      else {
        uint64_t v20 = 0xFFFFLL;
      }
      if (v15 <= 65534) {
        int v21 = v18;
      }
      else {
        int v21 = v19;
      }
      uint64_t v22 = *v21;
      uint64_t v23 = v16;
      uint64_t v8 = 0xFFFFFFFFLL;
      switch(*v21)
      {
        case 0u:
        case 0x78u:
        case 0x79u:
        case 0x7Au:
        case 0x7Bu:
        case 0x7Cu:
          uint64_t v8 = v88;
          if (v88 < 0 || !v87 && (int)v20 < v88) {
            uint64_t v8 = v20;
          }
          BOOL v27 = v22 != 120 || v8 == 0;
          if (!v27)
          {
            int v87 = 0;
            int v88 = v8;
            int v15 = 0;
            int v19 = &v21[__rev16(*(unsigned __int16 *)(v21 + 1))];
            goto LABEL_45;
          }
          return v8;
        case 1u:
        case 2u:
        case 4u:
        case 5u:
        case 0x17u:
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x76u:
        case 0x7Du:
        case 0x90u:
        case 0x91u:
        case 0x92u:
        case 0x93u:
        case 0x94u:
        case 0x95u:
          goto LABEL_20;
        case 3u:
        case 0x9Au:
        case 0x9Cu:
        case 0x9Eu:
        case 0xA0u:
        case 0xA2u:
        case 0xA5u:
          uint64_t v25 = _pcre2_OP_lengths_8[v22];
          goto LABEL_26;
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x16u:
          goto LABEL_104;
        case 0xEu:
          if (!a4) {
            goto LABEL_104;
          }
          return v8;
        case 0xFu:
        case 0x10u:
          v21 += 2;
LABEL_104:
          int v15 = v20 + 1;
          int v18 = v21 + 1;
          continue;
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x23u:
        case 0x24u:
        case 0x2Bu:
        case 0x30u:
        case 0x31u:
        case 0x38u:
        case 0x3Du:
        case 0x3Eu:
        case 0x45u:
        case 0x4Au:
        case 0x4Bu:
        case 0x52u:
          int v15 = v20 + 1;
          int v18 = v21 + 2;
          if (!a4) {
            continue;
          }
          unsigned int v26 = v21[1];
          goto LABEL_23;
        case 0x21u:
        case 0x22u:
        case 0x25u:
        case 0x26u:
        case 0x27u:
        case 0x28u:
        case 0x2Au:
        case 0x2Cu:
        case 0x2Du:
        case 0x2Eu:
        case 0x2Fu:
        case 0x32u:
        case 0x33u:
        case 0x34u:
        case 0x35u:
        case 0x37u:
        case 0x39u:
        case 0x3Au:
        case 0x3Bu:
        case 0x3Cu:
        case 0x3Fu:
        case 0x40u:
        case 0x41u:
        case 0x42u:
        case 0x44u:
        case 0x46u:
        case 0x47u:
        case 0x48u:
        case 0x49u:
        case 0x4Cu:
        case 0x4Du:
        case 0x4Eu:
        case 0x4Fu:
        case 0x51u:
        case 0x53u:
        case 0x54u:
          int v18 = &v21[_pcre2_OP_lengths_8[v22]];
          int v15 = v20;
          if (!a4) {
            continue;
          }
          unsigned int v24 = *(v18 - 1);
          int v15 = v20;
          if (v24 < 0xC0) {
            continue;
          }
          v18 += _pcre2_utf8_table4[v24 & 0x3F];
          goto LABEL_53;
        case 0x29u:
        case 0x36u:
        case 0x43u:
        case 0x50u:
          int v15 = v20 + (bswap32(*(unsigned __int16 *)(v21 + 1)) >> 16);
          int v18 = v21 + 4;
          if (!a4) {
            continue;
          }
          unsigned int v26 = v21[3];
LABEL_23:
          if (v26 >= 0xC0) {
            v18 += _pcre2_utf8_table4[v26 & 0x3F];
          }
          continue;
        case 0x55u:
        case 0x56u:
        case 0x59u:
        case 0x5Au:
        case 0x5Eu:
        case 0x60u:
          int v28 = v21[1];
          goto LABEL_51;
        case 0x57u:
        case 0x58u:
        case 0x5Fu:
          int v15 = v20 + 1;
          BOOL v35 = v21[1] - 15 >= 2;
          uint64_t v36 = 2;
          uint64_t v37 = 4;
          goto LABEL_106;
        case 0x5Bu:
        case 0x5Cu:
        case 0x61u:
          int v28 = v21[3];
LABEL_51:
          uint64_t v30 = &v21[2 * ((v28 - 15) < 2)];
          uint64_t v29 = _pcre2_OP_lengths_8[v22];
          goto LABEL_52;
        case 0x5Du:
          int v15 = v20 + (bswap32(*(unsigned __int16 *)(v21 + 1)) >> 16);
          BOOL v35 = v21[3] - 15 >= 2;
          uint64_t v36 = 4;
          uint64_t v37 = 6;
LABEL_106:
          if (!v35) {
            uint64_t v36 = v37;
          }
          int v18 = &v21[v36];
          uint64_t v16 = v23;
          continue;
        case 0x6Eu:
        case 0x6Fu:
        case 0x70u:
          if (v22 == 112) {
            uint64_t v38 = __rev16(*(unsigned __int16 *)(v21 + 1));
          }
          else {
            uint64_t v38 = 33;
          }
          int v18 = &v21[v38];
          unsigned int v63 = *v18 - 98;
          if (v63 > 0xB)
          {
            int v15 = v20 + 1;
          }
          else
          {
            int v64 = 1 << v63;
            if ((v64 & 0x533) == 0)
            {
              if ((v64 & 0x20C) == 0)
              {
                int v15 = v20 + (bswap32(*(unsigned __int16 *)(v18 + 1)) >> 16);
                v18 += 5;
                continue;
              }
              LODWORD(v20) = v20 + 1;
            }
            ++v18;
LABEL_53:
            int v15 = v20;
          }
          continue;
        case 0x71u:
        case 0x72u:
          int v39 = v21[1];
          int v40 = v21[2];
          int v41 = v40 | (v39 << 8);
          if (v41 <= *v14)
          {
            LODWORD(v42) = v14[v41];
            if ((v42 & 0x80000000) == 0) {
              goto LABEL_143;
            }
          }
          if ((*(unsigned char *)(a1 + 89) & 2) != 0)
          {
            LODWORD(v42) = 0;
            goto LABEL_140;
          }
          bracket_8 = _pcre2_find_bracket_8(a3, a4, v21[2] | (v21[1] << 8));
          if (!bracket_8) {
            return 4294967294;
          }
          uint64_t v44 = bracket_8;
          int v45 = bracket_8;
          do
            v45 += __rev16(*(unsigned __int16 *)(v45 + 1));
          while (*v45 == 120);
          a4 = v91;
          if ((v85 & 0x200000) != 0)
          {
            uint64_t v46 = _pcre2_find_bracket_8(v45, v91, v41);
            a4 = v91;
            if (v46)
            {
              LODWORD(v42) = 0;
LABEL_126:
              a1 = v90;
              goto LABEL_140;
            }
          }
          if (v21 > v44 && v21 < v45)
          {
            LODWORD(v42) = 0;
            int v87 = 1;
            goto LABEL_126;
          }
          a1 = v90;
          if (a5)
          {
            uint64_t v71 = a5;
            while ((unsigned __int8 *)v71[1] != v44)
            {
              uint64_t v71 = (void *)*v71;
              if (!v71) {
                goto LABEL_139;
              }
            }
            LODWORD(v42) = 0;
            int v87 = 1;
          }
          else
          {
LABEL_139:
            uint64_t v72 = sub_1A6879378(v90);
            a4 = v91;
            uint64_t v42 = v72;
            a1 = v90;
            uint64_t v8 = v42;
            if ((v42 & 0x80000000) != 0) {
              return v8;
            }
          }
LABEL_140:
          v14[v41] = v42;
          uint64_t v73 = *v14;
          if ((int)v73 + 1 < v41)
          {
            memset(&v80[v73], 255, 4 * ((v39 << 8) + v40 - v73 - 2) + 4);
            a1 = v90;
            a4 = v91;
          }
          *uint64_t v14 = v41;
LABEL_143:
          uint64_t v61 = 3;
LABEL_144:
          int v18 = &v21[v61];
          unsigned int v74 = 1;
          unsigned int v75 = *v18 - 98;
          if (v75 <= 0xB)
          {
            if (((1 << v75) & 0x533) != 0)
            {
              unsigned int v74 = 0;
              ++v18;
            }
            else if (((1 << v75) & 0x20C) != 0)
            {
              ++v18;
              unsigned int v74 = 1;
            }
            else
            {
              unsigned int v74 = __rev16(*(unsigned __int16 *)(v18 + 1));
              v18 += 5;
            }
          }
          if ((int)v42 < 1 || (v15 = 0xFFFF, uint64_t v16 = v23, 0x7FFFFFFF / v42 >= v74))
          {
            int v76 = v74 * v42;
            if (0xFFFF - (int)v20 >= v76) {
              int v15 = v76 + v20;
            }
            else {
              int v15 = 0xFFFF;
            }
            uint64_t v16 = v23;
          }
          break;
        case 0x73u:
        case 0x74u:
          if ((v85 & 0x200000) != 0 || (*(unsigned char *)(a1 + 89) & 2) != 0)
          {
            LODWORD(v42) = 0;
            goto LABEL_102;
          }
          signed int v47 = __rev16(*(unsigned __int16 *)(v21 + 3));
          if (!v47)
          {
            LODWORD(v42) = 0x7FFFFFFF;
            goto LABEL_102;
          }
          uint64_t v48 = (unsigned __int8 *)(v77
                                  + *(unsigned __int16 *)(a1 + 132)
                                  * (unint64_t)__rev16(*(unsigned __int16 *)(v21 + 1)));
          uint64_t v49 = *v14;
          LODWORD(v42) = 0x7FFFFFFF;
          while (2)
          {
            uint64_t v50 = v14;
            int v51 = *v48;
            uint64_t v52 = v48[1] | (v51 << 8);
            if ((int)v52 <= (int)v49)
            {
              LODWORD(v8) = v50[v52];
              if ((v8 & 0x80000000) == 0)
              {
                uint64_t v52 = v49;
                uint64_t v14 = v50;
                goto LABEL_87;
              }
            }
            int v81 = v48[1];
            signed int v82 = v47;
            unsigned int v53 = _pcre2_find_bracket_8(a3, a4, v52);
            if (!v53) {
              return 4294967294;
            }
            int v54 = v53;
            int v55 = v51 << 8;
            uint64_t v56 = v53;
            do
              v56 += __rev16(*(unsigned __int16 *)(v56 + 1));
            while (*v56 == 120);
            uint64_t v14 = v50;
            a4 = v91;
            a1 = v90;
            if (v21 > v54 && v21 < v56) {
              goto LABEL_78;
            }
            if (a5)
            {
              char v57 = a5;
              while ((unsigned __int8 *)v57[1] != v54)
              {
                char v57 = (void *)*v57;
                if (!v57) {
                  goto LABEL_83;
                }
              }
LABEL_78:
              LODWORD(v8) = 0;
              int v87 = 1;
            }
            else
            {
LABEL_83:
              int v58 = v55;
              uint64_t v59 = sub_1A6879378(v90);
              int v55 = v58;
              a4 = v91;
              uint64_t v8 = v59;
              a1 = v90;
              if ((v8 & 0x80000000) != 0) {
                return v8;
              }
            }
            v14[v52] = v8;
            uint64_t v60 = *v14;
            if ((int)v60 + 1 < (int)v52)
            {
              memset(&v80[v60], 255, 4 * (v55 + v81 - v60 - 2) + 4);
              a1 = v90;
              a4 = v91;
            }
            *uint64_t v14 = v52;
            signed int v47 = v82;
LABEL_87:
            if ((int)v8 < (int)v42) {
              LODWORD(v42) = v8;
            }
            if ((int)v42 >= 1)
            {
              v48 += *(unsigned __int16 *)(a1 + 132);
              uint64_t v61 = 5;
              uint64_t v49 = v52;
              if (v47-- <= 1) {
                goto LABEL_144;
              }
              continue;
            }
            break;
          }
LABEL_102:
          uint64_t v61 = 5;
          goto LABEL_144;
        case 0x75u:
          uint64_t v65 = &a3[__rev16(*(unsigned __int16 *)(v21 + 1))];
          unsigned int v66 = __rev16(*(unsigned __int16 *)(v65 + 3));
          unint64_t v67 = (unint64_t)v65;
          if (v66 == v79)
          {
            LODWORD(v20) = v78 + v20;
            goto LABEL_133;
          }
          do
            v67 += __rev16(*(unsigned __int16 *)(v67 + 1));
          while (*(unsigned char *)v67 == 120);
          if (v21 > v65 && (unint64_t)v21 < v67) {
            goto LABEL_114;
          }
          if (a5)
          {
            unsigned int v69 = a5;
            while ((unsigned __int8 *)v69[1] != v65)
            {
              unsigned int v69 = (void *)*v69;
              if (!v69) {
                goto LABEL_131;
              }
            }
LABEL_114:
            int v87 = 1;
          }
          else
          {
LABEL_131:
            uint64_t v70 = sub_1A6879378(a1);
            if ((v70 & 0x80000000) != 0) {
              return v70;
            }
            int v78 = v70;
            int v79 = v66;
            LODWORD(v20) = v70 + v20;
            a4 = v91;
            a1 = v90;
          }
LABEL_133:
          uint64_t v16 = 0;
          int v18 = &v21[(v23 + 3)];
          int v15 = v20;
          continue;
        case 0x77u:
          uint64_t v25 = __rev16(*(unsigned __int16 *)(v21 + 5));
          goto LABEL_26;
        case 0x7Eu:
        case 0x7Fu:
        case 0x80u:
        case 0x81u:
        case 0x82u:
        case 0x83u:
          do
          {
            v21 += __rev16(*(unsigned __int16 *)(v21 + 1));
            LODWORD(v22) = *v21;
          }
          while (v22 == 120);
LABEL_20:
          uint64_t v25 = _pcre2_OP_lengths_8[v22];
LABEL_26:
          int v18 = &v21[v25];
          goto LABEL_53;
        case 0x84u:
        case 0x85u:
        case 0x87u:
        case 0x8Bu:
        case 0x8Cu:
          goto LABEL_118;
        case 0x86u:
          int v18 = v21 + 3;
          if (v21[3] == 117)
          {
            uint64_t v16 = 3;
            int v15 = v20;
            if (v21[6] == 121) {
              continue;
            }
          }
          goto LABEL_118;
        case 0x88u:
        case 0x89u:
        case 0x8Du:
        case 0x8Eu:
          unsigned int v31 = __rev16(*(unsigned __int16 *)(v21 + 3));
          if ((v85 & 0x200000) != 0 || v31 != v83)
          {
            uint64_t v32 = sub_1A6879378(v90);
            a4 = v91;
            uint64_t v33 = v32;
            a1 = v90;
            int v83 = v31;
            int v84 = v33;
            uint64_t v8 = v33;
            if ((v33 & 0x80000000) != 0) {
              return v8;
            }
          }
          do
            v21 += __rev16(*(unsigned __int16 *)(v21 + 1));
          while (*v21 == 120);
          int v15 = v84 + v20;
LABEL_45:
          int v18 = v21 + 3;
          uint64_t v16 = v23;
          continue;
        case 0x8Au:
        case 0x8Fu:
          unsigned int v34 = &v21[__rev16(*(unsigned __int16 *)(v21 + 1))];
          if (*v34 != 120) {
            goto LABEL_48;
          }
LABEL_118:
          uint64_t v68 = sub_1A6879378(a1);
          uint64_t v8 = v68;
          if ((v68 & 0x80000000) != 0) {
            return v8;
          }
          do
            v21 += __rev16(*(unsigned __int16 *)(v21 + 1));
          while (*v21 == 120);
          int v15 = v68 + v20;
          int v18 = v21 + 3;
          uint64_t v16 = v23;
          a4 = v91;
          a1 = v90;
          continue;
        case 0x96u:
        case 0x97u:
        case 0x98u:
        case 0xA6u:
          unsigned int v34 = &v21[_pcre2_OP_lengths_8[v22]];
          do
            v34 += __rev16(*(unsigned __int16 *)(v34 + 1));
          while (*v34 == 120);
LABEL_48:
          int v18 = v34 + 3;
          goto LABEL_53;
        case 0x99u:
        case 0x9Bu:
        case 0x9Du:
        case 0x9Fu:
        case 0xA1u:
          uint64_t v29 = _pcre2_OP_lengths_8[v22];
          uint64_t v30 = &v21[v21[1]];
LABEL_52:
          int v18 = &v30[v29];
          goto LABEL_53;
        case 0xA3u:
        case 0xA4u:
          return v8;
        default:
          return 4294967293;
      }
    }
  }
  return 0;
}

unsigned __int8 *sub_1A6879FDC(uint64_t a1, unsigned __int8 *a2, int a3, int a4, int a5)
{
  char v7 = a2 + 1;
  unint64_t v6 = *a2;
  *(unsigned char *)(a1 + (v6 >> 3) + 40) |= 1 << (v6 & 7);
  if (a4 && v6 >= 0xC0)
  {
    if ((v6 & 0x20) != 0)
    {
      if ((v6 & 0x10) != 0)
      {
        if ((v6 & 8) != 0)
        {
          int v8 = a2[1] & 0x3F;
          int v9 = a2[2] & 0x3F;
          int v10 = a2[3] & 0x3F;
          int v11 = a2[4] & 0x3F;
          if ((v6 & 4) != 0)
          {
            LODWORD(v6) = ((v6 & 1) << 30) | (v8 << 24) | (v9 << 18) | (v10 << 12) | (v11 << 6) | a2[5] & 0x3F;
            char v7 = a2 + 6;
          }
          else
          {
            LODWORD(v6) = ((v6 & 3) << 24) | (v8 << 18) | (v9 << 12) | (v10 << 6) | v11;
            char v7 = a2 + 5;
          }
        }
        else
        {
          LODWORD(v6) = ((v6 & 7) << 18) | ((a2[1] & 0x3F) << 12) | ((a2[2] & 0x3F) << 6) | a2[3] & 0x3F;
          char v7 = a2 + 4;
        }
      }
      else
      {
        LODWORD(v6) = ((v6 & 0xF) << 12) | ((a2[1] & 0x3F) << 6) | a2[2] & 0x3F;
        char v7 = a2 + 3;
      }
    }
    else
    {
      char v7 = a2 + 2;
      LODWORD(v6) = a2[1] & 0x3F | ((v6 & 0x1F) << 6);
    }
  }
  if (a3)
  {
    if (!(a5 | a4))
    {
      unint64_t v13 = *(unsigned __int8 *)(*(void *)(a1 + 24) + v6 + 256);
      goto LABEL_17;
    }
    unsigned int v12 = *(_DWORD *)&_pcre2_ucd_records_8[12
                                         * _pcre2_ucd_stage2_8[v6 & 0x7F | (_pcre2_ucd_stage1_8[v6 >> 7] << 7)]
                                         + 4]
        + v6;
    if (a4)
    {
      _pcre2_ord2utf_8(v12, (uint64_t)v15);
      unint64_t v13 = v15[0];
LABEL_17:
      *(unsigned char *)(a1 + (v13 >> 3) + 40) |= 1 << (v13 & 7);
      return v7;
    }
    if (v12 <= 0xFF) {
      *(unsigned char *)(a1 + (v12 >> 3) + 40) |= 1 << (v12 & 7);
    }
  }
  return v7;
}

uint64_t sub_1A687A1AC(uint64_t result, int a2, int a3)
{
  uint64_t v3 = result;
  if (!a3) {
    goto LABEL_5;
  }
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 24);
  do
  {
    *(unsigned char *)(result + 40 + v4) |= *(unsigned char *)(v5 + (a2 + 512 + v4));
    ++v4;
  }
  while (a3 != v4);
  if (a3 != 32)
  {
LABEL_5:
    for (unsigned int i = 128; i != 256; ++i)
    {
      if ((*(unsigned __int8 *)((i >> 3) + *(void *)(v3 + 24) + 512) >> (i & 7)))
      {
        uint64_t result = _pcre2_ord2utf_8(i, (uint64_t)v7);
        *(unsigned char *)(v3 + ((unint64_t)v7[0] >> 3) + 40) |= 1 << (v7[0] & 7);
      }
    }
  }
  return result;
}

uint64_t _pcre2_auto_possessify_8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  int v23 = 1000;
  unsigned int v2 = *a1;
  if (v2 <= 0xA7)
  {
    uint64_t v5 = a1;
    unsigned int v6 = *(_DWORD *)(a2 + 204);
    int v22 = v6 & 0x80000;
    uint64_t v7 = (v6 >> 19) & 1;
    uint64_t v8 = (v6 >> 17) & 1;
    while ((v2 - 33) > 0x40u)
    {
      if (v2 - 110 < 2)
      {
        uint64_t v10 = 33;
        goto LABEL_14;
      }
      if (v2 == 112)
      {
        uint64_t v10 = __rev16(*(unsigned __int16 *)(v5 + 1));
LABEL_14:
        unsigned __int8 v11 = v5[v10];
        if ((v11 - 98) <= 7u)
        {
          unsigned int v12 = sub_1A687A6B0(v5, v7, v8, *(void *)(a2 + 16), (uint64_t)&v24);
          BOOL v25 = (v11 & 1) == 0;
          if (v12)
          {
            if (sub_1A687ABB0(v12, v7, v8, a2, &v24, v12, &v23) && (v11 - 98) <= 7u) {
              v5[v10] = 0x6D6D6C6C6B6B6A6AuLL >> (8 * (v11 - 98));
            }
          }
        }
LABEL_36:
        LOBYTE(v2) = *v5;
      }
      uint64_t result = v2;
      switch((char)v2)
      {
        case 'U':
        case 'V':
        case 'W':
        case 'X':
        case 'Y':
        case 'Z':
        case '^':
        case '_':
          int v16 = v5[1];
          goto LABEL_43;
        case '[':
        case '\\':
        case ']':
        case 'a':
          int v16 = v5[3];
LABEL_43:
          uint64_t v17 = 2 * ((v16 - 15) < 2);
          goto LABEL_44;
        case 'b':
        case 'c':
        case 'd':
        case 'e':
        case 'f':
        case 'g':
        case 'h':
        case 'i':
        case 'j':
        case 'k':
        case 'l':
        case 'm':
        case 'n':
        case 'o':
        case 'q':
        case 'r':
        case 's':
        case 't':
        case 'u':
        case 'v':
          goto LABEL_52;
        case 'p':
          unsigned int v20 = *(unsigned __int16 *)(v5 + 1);
          goto LABEL_50;
        case 'w':
          unsigned int v20 = *(unsigned __int16 *)(v5 + 5);
LABEL_50:
          uint64_t v17 = __rev16(v20);
          goto LABEL_44;
        default:
          if (v2 - 153 <= 8 && ((1 << (v2 + 103)) & 0x155) != 0)
          {
            uint64_t v17 = v5[1];
LABEL_44:
            int v18 = _pcre2_OP_lengths_8;
            goto LABEL_45;
          }
          if (!(_BYTE)v2) {
            return result;
          }
LABEL_52:
          uint64_t v17 = _pcre2_OP_lengths_8[v2];
          int v19 = &v5[v17];
          if (v22)
          {
            if ((v2 - 29) <= 0x37u)
            {
              unsigned int v21 = *(v19 - 1);
              if (v21 >= 0xC0)
              {
                LOBYTE(v2) = v21 & 0x3F;
                int v18 = _pcre2_utf8_table4;
LABEL_45:
                int v19 = &v5[v17 + v18[v2]];
              }
            }
          }
          unsigned int v2 = *v19;
          uint64_t v5 = v19;
          if (v2 >= 0xA8) {
            return 0xFFFFFFFFLL;
          }
          break;
      }
    }
    if (v2 <= 0x54u)
    {
      if (v2 <= 0x47u)
      {
        if (v2 >= 0x2Eu) {
          int v13 = -46;
        }
        else {
          int v13 = -33;
        }
        if (v2 <= 0x3Au) {
          int v9 = v13;
        }
        else {
          int v9 = 197;
        }
      }
      else
      {
        int v9 = 184;
      }
    }
    else
    {
      int v9 = 171;
    }
    if ((v2 + v9 + 33) >= 0x29u)
    {
      BOOL v25 = ((v9 + v2) & 0xF9) == 0;
    }
    else
    {
      uint64_t v14 = sub_1A687A6B0(v5, v7, v8, *(void *)(a2 + 16), (uint64_t)&v24);
      BOOL v25 = ((v9 + v2) & 0xF9) == 0;
      if (v14 && sub_1A687ABB0(v14, v7, v8, a2, &v24, v14, &v23))
      {
        switch((_BYTE)v2 + (_BYTE)v9)
        {
          case 0:
            unsigned __int8 v15 = *v5 + 9;
            goto LABEL_35;
          case 1:
          case 2:
            unsigned __int8 v15 = *v5 + 8;
            goto LABEL_35;
          case 3:
          case 4:
            unsigned __int8 v15 = *v5 + 7;
            goto LABEL_35;
          case 5:
          case 6:
            unsigned __int8 v15 = *v5 + 6;
            goto LABEL_35;
          case 7:
            unsigned __int8 v15 = *v5 + 5;
LABEL_35:
            *uint64_t v5 = v15;
            break;
          default:
            goto LABEL_36;
        }
      }
    }
    goto LABEL_36;
  }
  return 0xFFFFFFFFLL;
}

unsigned __int8 *sub_1A687A6B0(unsigned __int8 *a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  unsigned int v8 = *a1;
  uint64_t result = a1 + 1;
  unsigned int v7 = v8;
  *(void *)a5 = v8;
  if (v8 - 33 <= 0x40)
  {
    if (v7 >= 0x2E) {
      int v9 = 46;
    }
    else {
      int v9 = 33;
    }
    if (v7 <= 0x3A) {
      int v10 = v9;
    }
    else {
      int v10 = 59;
    }
    if (v7 <= 0x47) {
      int v11 = v10;
    }
    else {
      int v11 = 72;
    }
    if (v7 <= 0x54) {
      int v12 = v11;
    }
    else {
      int v12 = 85;
    }
    BOOL v13 = (v7 - v12 + 33) > 0x2Du
       || ((1 << (v7 - v12 + 33)) & 0x238000000000) == 0;
    uint64_t v14 = a1 + 3;
    if (!v13) {
      uint64_t result = v14;
    }
    if ((v7 - v12 - 2) > 8u) {
      int v15 = 1;
    }
    else {
      int v15 = dword_1A68ABD94[(char)(v7 - v12 - 2)];
    }
    *(_DWORD *)(a5 + 4) = v15;
    if (v12 <= 58)
    {
      if (v12 == 33)
      {
        int v16 = 29;
LABEL_38:
        *(_DWORD *)a5 = v16;
LABEL_39:
        int v22 = result + 1;
        unsigned int v21 = *result;
        if (a2 && v21 >= 0xC0)
        {
          if ((v21 & 0x20) != 0)
          {
            int v25 = *v22 & 0x3F;
            if ((v21 & 0x10) != 0)
            {
              if ((v21 & 8) != 0)
              {
                int v36 = result[2] & 0x3F;
                int v37 = result[3] & 0x3F;
                int v38 = result[4] & 0x3F;
                if ((v21 & 4) != 0)
                {
                  unsigned int v21 = ((v21 & 1) << 30) | (v25 << 24) | (v36 << 18) | (v37 << 12) | (v38 << 6) | result[5] & 0x3F;
                  int v22 = result + 6;
                }
                else
                {
                  unsigned int v21 = ((v21 & 3) << 24) | (v25 << 18) | (v36 << 12) | (v37 << 6) | v38;
                  int v22 = result + 5;
                }
              }
              else
              {
                unsigned int v21 = ((v21 & 7) << 18) | (v25 << 12) | ((result[2] & 0x3F) << 6) | result[3] & 0x3F;
                int v22 = result + 4;
              }
            }
            else
            {
              unsigned int v21 = ((v21 & 0xF) << 12) | (v25 << 6) | result[2] & 0x3F;
              int v22 = result + 3;
            }
          }
          else
          {
            int v22 = result + 2;
            unsigned int v21 = result[1] & 0x3F | ((v21 & 0x1F) << 6);
          }
        }
        *(_DWORD *)(a5 + 8) = v21;
        *(_DWORD *)(a5 + 12) = -1;
        return v22;
      }
LABEL_30:
      int v18 = 29;
LABEL_32:
      *(_DWORD *)a5 = v18;
      unsigned int v19 = *result;
      if (a2 && v19 >= 0xC0)
      {
        if ((v19 & 0x20) != 0)
        {
          int v24 = result[1] & 0x3F;
          if ((v19 & 0x10) != 0)
          {
            if ((v19 & 8) != 0)
            {
              int v33 = result[2] & 0x3F;
              int v34 = result[3] & 0x3F;
              int v35 = result[4] & 0x3F;
              if ((v19 & 4) != 0)
              {
                unsigned int v19 = ((v19 & 1) << 30) | (v24 << 24) | (v33 << 18) | (v34 << 12) | (v35 << 6) | result[5] & 0x3F;
                result += 6;
              }
              else
              {
                unsigned int v19 = ((v19 & 3) << 24) | (v24 << 18) | (v33 << 12) | (v34 << 6) | v35;
                result += 5;
              }
            }
            else
            {
              unsigned int v19 = ((v19 & 7) << 18) | (v24 << 12) | ((result[2] & 0x3F) << 6) | result[3] & 0x3F;
              result += 4;
            }
          }
          else
          {
            unsigned int v19 = ((v19 & 0xF) << 12) | (v24 << 6) | result[2] & 0x3F;
            result += 3;
          }
        }
        else
        {
          unsigned __int8 v20 = result[1];
          result += 2;
          unsigned int v19 = v20 & 0x3F | ((v19 & 0x1F) << 6);
        }
      }
      else
      {
        ++result;
      }
      *(_DWORD *)(a5 + 8) = v19;
      if (v19 >= 0x80 && (a3 | a2 || v19 > 0xFF)) {
        unsigned int v39 = *(_DWORD *)&_pcre2_ucd_records_8[12
      }
                                             * _pcre2_ucd_stage2_8[v19 & 0x7F | (_pcre2_ucd_stage1_8[v19 >> 7] << 7)]
                                             + 4]
            + v19;
      else {
        unsigned int v39 = *(unsigned __int8 *)(a4 + v19);
      }
      *(_DWORD *)(a5 + 12) = v39;
      if (v19 == v39) {
        *(_DWORD *)(a5 + 12) = -1;
      }
      else {
        *(_DWORD *)(a5 + 16) = -1;
      }
      return result;
    }
    if (v12 != 85)
    {
      if (v12 != 72)
      {
        int v16 = 31;
        goto LABEL_38;
      }
      int v18 = 31;
      goto LABEL_32;
    }
    unsigned int v17 = *result++;
    unsigned int v7 = v17;
    *(_DWORD *)a5 = v17;
  }
  int v18 = 31;
  switch(v7)
  {
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
      return result;
    case 0xEu:
    case 0x1Bu:
    case 0x1Cu:
      return 0;
    case 0xFu:
    case 0x10u:
      int v26 = *result;
      if (v26 != 10)
      {
        *(_DWORD *)(a5 + 8) = v26;
        *(_DWORD *)(a5 + 12) = result[1];
        result += 2;
        return result;
      }
      uint64_t v27 = 0;
      int v28 = (char *)&_pcre2_ucd_caseless_sets_8 + 4 * result[1];
      int v23 = result + 2;
      do
      {
        if (v27 == 24)
        {
          *(_DWORD *)(a5 + 8) = result[2];
          *(_DWORD *)(a5 + 12) = result[3];
          return v23;
        }
        int v29 = *(_DWORD *)&v28[v27];
        *(_DWORD *)(a5 + v27 + 8) = v29;
        v27 += 4;
      }
      while (v29 != -1);
      if (v7 == 16) {
        int v30 = 29;
      }
      else {
        int v30 = 31;
      }
      *(_DWORD *)a5 = v30;
      return v23;
    case 0x1Du:
    case 0x1Fu:
      goto LABEL_39;
    case 0x1Eu:
      goto LABEL_30;
    case 0x20u:
      goto LABEL_32;
    default:
      if (v7 - 110 >= 2)
      {
        if (v7 != 112) {
          return 0;
        }
        int v23 = &result[__rev16(*(unsigned __int16 *)result) - 1];
      }
      else
      {
        int v23 = result + 32;
      }
      unsigned int v31 = *v23 - 98;
      if (v31 > 0xB) {
        goto LABEL_71;
      }
      int v32 = 1 << v31;
      if ((v32 & 0x533) != 0)
      {
        *(_DWORD *)(a5 + 4) = 1;
LABEL_64:
        ++v23;
        goto LABEL_71;
      }
      if ((v32 & 0x20C) != 0) {
        goto LABEL_64;
      }
      *(_DWORD *)(a5 + 4) = __rev16(*(unsigned __int16 *)(v23 + 1)) == 0;
      v23 += 5;
LABEL_71:
      *(_DWORD *)(a5 + 8) = v23 - result;
      return v23;
  }
}

uint64_t sub_1A687ABB0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, unsigned __int8 *a6, _DWORD *a7)
{
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  int v7 = (*a7)--;
  if (v7 < 2) {
    return 0;
  }
  int v84 = 0;
  int v83 = a5 + 2;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_5:
        while (1)
        {
          int v16 = *a1;
          if (v16 != 118) {
            break;
          }
          a1 += 6;
        }
        if (v16 != 119) {
          break;
        }
        a1 += __rev16(*(unsigned __int16 *)(a1 + 5));
      }
      while (v16 == 120)
      {
        a1 += __rev16(*(unsigned __int16 *)(a1 + 1));
        int v16 = *a1;
      }
      if ((v16 - 121) > 0x1E) {
        break;
      }
      int v17 = 1 << (v16 - 121);
      if ((v17 & 0xA800) != 0)
      {
        int v22 = &a1[__rev16(*(unsigned __int16 *)(a1 + 1))];
        a1 += _pcre2_OP_lengths_8[v16];
        int v84 = 1;
        if (*v22 == 120)
        {
          do
          {
            uint64_t result = sub_1A687ABB0(a1, a2, a3, a4, a5, a6, a7);
            if (!result) {
              return result;
            }
            a1 = v22 + 3;
            v22 += __rev16(*(unsigned __int16 *)(v22 + 1));
          }
          while (*v22 == 120);
          int v84 = 1;
        }
      }
      else if ((v17 & 9) != 0)
      {
        if (!a5[1]) {
          return 0;
        }
        uint64_t result = 0;
        switch(a1[-__rev16(*(unsigned __int16 *)(a1 + 1))])
        {
          case 0x7Eu:
          case 0x7Fu:
          case 0x80u:
          case 0x81u:
          case 0x84u:
            return v84 ^ 1u;
          case 0x82u:
          case 0x83u:
            return result;
          case 0x85u:
            if ((*a5 - 29) >= 2) {
              return 0;
            }
            goto LABEL_24;
          case 0x88u:
          case 0x89u:
          case 0x8Du:
          case 0x8Eu:
            if (!*(_DWORD *)(a4 + 292)) {
              goto LABEL_24;
            }
            return 0;
          default:
LABEL_24:
            a1 += _pcre2_OP_lengths_8[v16];
            break;
        }
      }
      else
      {
        if ((v17 & 0x60000000) == 0) {
          break;
        }
        int v79 = a1 + 1;
        if (a1[1] - 132 > 4 || ((1 << (a1[1] + 124)) & 0x15) == 0) {
          return 0;
        }
        do
          v79 += __rev16(*(unsigned __int16 *)(v79 + 1));
        while (*v79 == 120);
        uint64_t result = sub_1A687ABB0(v79 + 3, a2, a3, a4, a5, a6, a7);
        if (!result) {
          return result;
        }
        a1 += _pcre2_OP_lengths_8[v16];
      }
    }
    if (!v16) {
      return a5[1] != 0;
    }
    uint64_t result = (uint64_t)sub_1A687A6B0(a1, a2, a3, *(void *)(a4 + 16), (uint64_t)&v85);
    if (!result) {
      return result;
    }
    a1 = (unsigned __int8 *)result;
    int v19 = *a5;
    if (*a5 == 29)
    {
      unsigned __int8 v20 = &v85;
      unsigned int v21 = v83;
LABEL_26:
      int v23 = *v21;
      if (v20 == &v85) {
        uint64_t v24 = result;
      }
      else {
        uint64_t v24 = (uint64_t)a6;
      }
      uint64_t v25 = v24 + 2;
      int v26 = v20 + 3;
      while (2)
      {
        uint64_t result = 0;
        int v27 = *v20;
        if (*v20 <= 109)
        {
          switch(v27)
          {
            case 6:
              if (v23 > 0xFF || (*(unsigned char *)(*(void *)(a4 + 32) + v23) & 8) == 0) {
                return 0;
              }
              goto LABEL_150;
            case 7:
              if (v23 <= 0xFF && (*(unsigned char *)(*(void *)(a4 + 32) + v23) & 8) != 0) {
                return 0;
              }
              goto LABEL_150;
            case 8:
              if (v23 > 0xFF || (*(unsigned char *)(*(void *)(a4 + 32) + v23) & 1) == 0) {
                return 0;
              }
              goto LABEL_150;
            case 9:
              if v23 <= 0xFF && (*(unsigned char *)(*(void *)(a4 + 32) + v23)) {
                return 0;
              }
              goto LABEL_150;
            case 10:
              if (v23 > 0xFF || (*(unsigned char *)(*(void *)(a4 + 32) + v23) & 0x10) == 0) {
                return 0;
              }
              goto LABEL_150;
            case 11:
              if (v23 <= 0xFE && (*(unsigned char *)(*(void *)(a4 + 32) + v23) & 0x10) != 0) {
                return 0;
              }
              goto LABEL_150;
            case 15:
            case 16:
              int v30 = v27 == 15;
              unint64_t v31 = v20[3];
              LODWORD(v18) = _pcre2_ucd_stage2_8[v23
                                               - (v18 & 0xFFFFFF80)
                                               + (_pcre2_ucd_stage1_8[v23 / 128] << 7)];
              int v32 = &_pcre2_ucd_records_8[12 * v18];
              switch(v20[2])
              {
                case 1:
                  int v39 = _pcre2_ucd_records_8[12 * v18 + 1];
                  if (v39 == 5 || v39 == 9) {
                    goto LABEL_124;
                  }
                  BOOL v41 = v39 == 8;
                  goto LABEL_145;
                case 2:
                  BOOL v42 = v27 == 15;
                  BOOL v43 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * v18 + 1]] == v31;
                  goto LABEL_119;
                case 3:
                  BOOL v42 = v27 == 15;
                  int v44 = _pcre2_ucd_records_8[12 * v18 + 1];
                  goto LABEL_115;
                case 4:
                  BOOL v42 = v27 == 15;
                  int v44 = *v32;
LABEL_115:
                  BOOL v43 = v31 == v44;
                  goto LABEL_119;
                case 5:
                  if (v31 == *v32) {
                    goto LABEL_124;
                  }
                  int v45 = (*(_DWORD *)((char *)&_pcre2_ucd_script_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12 * v18 + 8] & 0x3FF]
                                   + ((v31 >> 3) & 0x1FFFFFFC)) >> v31) & 1;
                  goto LABEL_148;
                case 6:
                  BOOL v42 = v27 == 15;
                  BOOL v43 = (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * v18 + 1]] & 0xFFFFFFFD) == 1;
                  goto LABEL_119;
                case 7:
                case 8:
                  if (v23 < 0x2000)
                  {
                    if (v23 > 132)
                    {
                      if (v23 > 5759)
                      {
                        if (v23 == 5760 || v23 == 6158) {
                          goto LABEL_149;
                        }
                      }
                      else if (v23 == 133 || v23 == 160)
                      {
                        goto LABEL_149;
                      }
                    }
                    else if (v23 <= 0x20 && ((1 << v23) & 0x100003E00) != 0)
                    {
                      goto LABEL_149;
                    }
                  }
                  else if ((v23 - 0x2000) < 0xB {
                         || (v23 - 8232) <= 0x37
                  }
                         && ((1 << (v23 - 40)) & 0x80000000000083) != 0
                         || v23 == 12288)
                  {
                    goto LABEL_149;
                  }
                  BOOL v42 = v27 == 15;
                  BOOL v43 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * v18 + 1]] == 6;
LABEL_119:
                  int v46 = !v43;
                  int v30 = v42 ^ v46;
                  goto LABEL_149;
                case 9:
                  if ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * v18 + 1]] | 2) == 3)
                  {
LABEL_124:
                    int v45 = 1;
                  }
                  else
                  {
                    BOOL v41 = v23 == 95;
LABEL_145:
                    int v45 = v41;
                  }
LABEL_148:
                  int v30 = v45 == v30;
                  goto LABEL_149;
                case 10:
                  int v18 = &_pcre2_ucd_caseless_sets_8[_pcre2_ucd_records_8[12 * v18 + 3]];
                  break;
                default:
                  return 0;
              }
              while (1)
              {
                int v47 = *v18;
                if (*v18 > v23) {
                  break;
                }
                ++v18;
                if (v47 == v23) {
                  goto LABEL_149;
                }
              }
              int v30 = v27 != 15;
LABEL_149:
              if (v30) {
                goto LABEL_150;
              }
              return 0;
            case 17:
            case 21:
            case 23:
            case 25:
              uint64_t result = 0;
              if ((v23 - 10) >= 4 && (v23 - 8232) >= 2 && v23 != 133) {
                goto LABEL_150;
              }
              return result;
            case 18:
              uint64_t result = 0;
              if (v23 < 0x2000)
              {
                if (v23 <= 159)
                {
                  if (v23 != 9 && v23 != 32) {
                    return result;
                  }
                }
                else if (v23 != 160 && v23 != 5760 && v23 != 6158)
                {
                  return result;
                }
              }
              else if (v23 > 8238)
              {
                if (v23 != 8239 && v23 != 8287 && v23 != 12288) {
                  return result;
                }
              }
              else if ((v23 - 0x2000) >= 0xB)
              {
                return result;
              }
              goto LABEL_150;
            case 19:
              uint64_t result = 0;
              if (v23 < 0x2000)
              {
                if (v23 <= 159)
                {
                  if (v23 == 9 || v23 == 32) {
                    return result;
                  }
                }
                else if (v23 == 160 || v23 == 5760 || v23 == 6158)
                {
                  return result;
                }
              }
              else if (v23 > 8238)
              {
                if (v23 == 8239 || v23 == 8287 || v23 == 12288) {
                  return result;
                }
              }
              else if ((v23 - 0x2000) < 0xB)
              {
                return result;
              }
              break;
            case 20:
              if ((v23 - 10) >= 4 && (v23 - 8232) >= 2 && v23 != 133) {
                return 0;
              }
              goto LABEL_150;
            case 24:
              goto LABEL_150;
            case 29:
              int v33 = v20[2];
              int v34 = v26;
              while (v23 != v33)
              {
                int v35 = *v34++;
                int v33 = v35;
                if (v35 == -1) {
                  goto LABEL_150;
                }
              }
              return 0;
            case 31:
              int v36 = v20[2];
              int v37 = v26;
              while (v23 != v36)
              {
                int v38 = *v37++;
                int v36 = v38;
                if (v38 == -1) {
                  return 0;
                }
              }
              if (v23 == -1) {
                return 0;
              }
              goto LABEL_150;
            default:
              return result;
          }
          goto LABEL_150;
        }
        switch(v27)
        {
          case 'n':
            if (v23 <= 0xFF) {
              goto LABEL_89;
            }
            break;
          case 'o':
            if (v23 > 0xFF) {
              return 0;
            }
LABEL_89:
            if ((*(unsigned __int8 *)(v24 - v20[2] + ((unint64_t)v23 >> 3)) >> (v23 & 7))) {
              return 0;
            }
            break;
          case 'p':
            uint64_t v81 = v24;
            uint64_t v82 = v25;
            int v28 = v26;
            BOOL v29 = _pcre2_xclass_8(v23, (unsigned char *)(v25 - v20[2]));
            int v26 = v28;
            uint64_t v24 = v81;
            uint64_t v25 = v82;
            if (v29) {
              return 0;
            }
            break;
          default:
            return result;
        }
LABEL_150:
        int v48 = v21[1];
        ++v21;
        int v23 = v48;
        if (v48 == -1) {
          goto LABEL_235;
        }
        continue;
      }
    }
    unsigned int v21 = (int *)&v87;
    unsigned __int8 v20 = a5;
    if (v85 == 29) {
      goto LABEL_26;
    }
    if (v19 == 110 || v85 == 110 || !a2 && (v19 == 111 || v85 == 111)) {
      break;
    }
    if ((v19 - 15) > 1)
    {
      uint64_t result = 0;
      unsigned int v62 = v19 - 6;
      if (v62 > 0x10 || (v85 - 6) > 0x14) {
        return result;
      }
      if (!byte_1A68ABB6A[21 * v62 + v85 - 6]) {
        return 0;
      }
    }
    else if (v85 != 24)
    {
      if ((v85 - 15) > 1) {
        return 0;
      }
      int v49 = byte_1A68ABCCF[14 * *v83 + v87];
      switch(byte_1A68ABCCF[14 * *v83 + v87])
      {
        case 1u:
          uint64_t result = 0;
          if (v19 != 16 || v85 != 16) {
            return result;
          }
          break;
        case 2u:
          if ((v19 == v85) == (a5[3] == v88)) {
            return 0;
          }
          break;
        case 3u:
          if (v19 == v85) {
            return 0;
          }
          break;
        case 4u:
          if (v85 != 16) {
            return 0;
          }
          int v76 = v19 == 16;
          unsigned int v77 = a5[3];
          uint64_t v78 = v88;
          goto LABEL_271;
        case 5u:
          if (v19 != 16) {
            return 0;
          }
          int v76 = v85 == 16;
          unsigned int v77 = v88;
          uint64_t v78 = a5[3];
LABEL_271:
          if (byte_1A68ABA8C[30 * v77 + v78] != v76) {
            return 0;
          }
          break;
        case 6u:
        case 7u:
        case 8u:
          if (v85 != 16) {
            return 0;
          }
          uint64_t v50 = (unsigned __int8 *)&unk_1A68ABB5E + 4 * (v49 - 6);
          unsigned int v51 = v88;
          if (v88 == *v50 || v88 == v50[1]) {
            goto LABEL_249;
          }
          uint64_t result = 0;
          if (v19 != 16) {
            return result;
          }
          int v52 = v50[2];
          goto LABEL_242;
        case 9u:
        case 0xAu:
        case 0xBu:
          if (v19 != 16) {
            return 0;
          }
          uint64_t v71 = (unsigned __int8 *)&unk_1A68ABB5E + 4 * (v49 - 9);
          unsigned int v51 = a5[3];
          if (v51 == *v71 || v51 == v71[1]) {
            goto LABEL_258;
          }
          uint64_t result = 0;
          if (v85 != 16) {
            return result;
          }
          int v52 = v71[2];
LABEL_242:
          if (v51 == v52) {
            return result;
          }
          break;
        case 0xCu:
        case 0xDu:
        case 0xEu:
          if (v85 != 16) {
            return 0;
          }
          uint64_t v72 = (unsigned __int8 *)&unk_1A68ABB5E + 4 * (v49 - 12);
          LODWORD(v73) = v88;
          if (byte_1A68ABA8C[30 * *v72 + v88] && byte_1A68ABA8C[30 * v72[1] + v88])
          {
            uint64_t result = 0;
            if (v19 != 16) {
              return result;
            }
            int v74 = v72[3];
            goto LABEL_256;
          }
LABEL_249:
          if (v19 == 16) {
            return 0;
          }
          break;
        case 0xFu:
        case 0x10u:
        case 0x11u:
          if (v19 != 16) {
            return 0;
          }
          unsigned int v75 = (unsigned __int8 *)&unk_1A68ABB5E + 4 * (v49 - 15);
          uint64_t v73 = a5[3];
          if (byte_1A68ABA8C[30 * *v75 + v73] && byte_1A68ABA8C[30 * v75[1] + v73])
          {
            uint64_t result = 0;
            if (v85 != 16) {
              return result;
            }
            int v74 = v75[3];
LABEL_256:
            if (v73 == v74) {
              return result;
            }
          }
          else
          {
LABEL_258:
            if (v85 == 16) {
              return 0;
            }
          }
          break;
        default:
          return 0;
      }
    }
LABEL_235:
    if (!v86) {
      return 1;
    }
  }
  uint64_t result = 0;
  if (a2) {
    BOOL v53 = 0;
  }
  else {
    BOOL v53 = v19 == 111;
  }
  BOOL v54 = v53 || v19 == 110;
  int v55 = v54;
  if (v54) {
    uint64_t v56 = a5;
  }
  else {
    uint64_t v56 = &v85;
  }
  if (v54) {
    char v57 = a6;
  }
  else {
    char v57 = a1;
  }
  if (v54) {
    int v58 = v85;
  }
  else {
    int v58 = *a5;
  }
  if (v54) {
    uint64_t v59 = &v85;
  }
  else {
    uint64_t v59 = a5;
  }
  uint64_t v60 = &v57[-v56[2]];
  switch(v58)
  {
    case 6:
      LODWORD(result) = 1;
      goto LABEL_198;
    case 7:
LABEL_198:
      uint64_t v61 = *(void *)(a4 + 24) + 64;
      goto LABEL_226;
    case 8:
      LODWORD(result) = 1;
      goto LABEL_223;
    case 9:
LABEL_223:
      uint64_t v61 = *(void *)(a4 + 24);
      goto LABEL_226;
    case 10:
      LODWORD(result) = 1;
      goto LABEL_225;
    case 11:
LABEL_225:
      uint64_t v61 = *(void *)(a4 + 24) + 160;
LABEL_226:
      if (!result) {
        goto LABEL_232;
      }
      uint64_t v69 = 0;
      while ((v60[v69] & ~*(unsigned __int8 *)(v61 + v69)) == 0)
      {
        if (++v69 == 32) {
          goto LABEL_235;
        }
      }
      return 0;
    default:
      if ((v58 - 110) < 2)
      {
        if (v59 == &v85) {
          unsigned int v63 = a1;
        }
        else {
          unsigned int v63 = a6;
        }
        if (v55) {
          int v64 = &v85;
        }
        else {
          int v64 = a5;
        }
        uint64_t v61 = (uint64_t)&v63[-v64[2]];
        goto LABEL_232;
      }
      if (v58 != 112) {
        return result;
      }
      if (v59 == &v85) {
        uint64_t v65 = a1;
      }
      else {
        uint64_t v65 = a6;
      }
      if (v55) {
        unsigned int v66 = &v85;
      }
      else {
        unsigned int v66 = a5;
      }
      unint64_t v67 = &v65[-v66[2]];
      unsigned __int8 v68 = v67[2];
      if ((v68 & 4) != 0) {
        return 0;
      }
      if ((v67[2] & 2) == 0)
      {
        if (!v86) {
          return (v68 & 1) == 0;
        }
        goto LABEL_5;
      }
      uint64_t v61 = (uint64_t)(v67 + 3);
LABEL_232:
      uint64_t v70 = 0;
      while ((*(unsigned char *)(v61 + v70) & v60[v70]) == 0)
      {
        if (++v70 == 32) {
          goto LABEL_235;
        }
      }
      return 0;
  }
}

uint64_t pcre2_match_8(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  long long v149 = 0u;
  long long v150 = 0u;
  long long v147 = 0u;
  long long v148 = 0u;
  long long v145 = 0u;
  long long v146 = 0u;
  long long v143 = 0u;
  long long v144 = 0u;
  long long v141 = 0u;
  long long v142 = 0u;
  long long v139 = 0u;
  long long v140 = 0u;
  long long v137 = 0u;
  long long v138 = 0u;
  long long v135 = 0u;
  long long v136 = 0u;
  long long v133 = 0u;
  long long v134 = 0u;
  if ((unint64_t)v2 | v3) {
    unsigned int v8 = v2;
  }
  else {
    unsigned int v8 = "";
  }
  *(void *)&long long v136 = &v157;
  if ((v5 & 0x1FFF9FC0) != 0) {
    return 4294967262;
  }
  uint64_t v11 = v6;
  uint64_t valid = 4294967245;
  if (!v6) {
    return valid;
  }
  int v12 = (uint32x2_t *)v1;
  if (!v1 || !v8) {
    return valid;
  }
  BOOL v13 = v7;
  unsigned int v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  long long v155 = 0uLL;
  long long v156 = 0uLL;
  long long v153 = 0uLL;
  long long v154 = 0uLL;
  long long v152 = 0uLL;
  memset(v151, 0, sizeof(v151));
  if (v3 == -1)
  {
    uint64_t v16 = _pcre2_strlen_8(v8);
    uint64_t v17 = 1;
  }
  else
  {
    uint64_t v17 = 0;
  }
  if (v16 < (unint64_t)v15) {
    return 4294967263;
  }
  if (v12[10].i32[0] != 1346589253) {
    return 4294967265;
  }
  __int32 v18 = v12[12].i32[0];
  if ((v18 & 7) != 1) {
    return 4294967264;
  }
  __int32 v19 = v12[11].i32[0];
  int v20 = (v14 >> 4) & 1;
  if ((v14 & 0x20) != 0) {
    int v20 = 2;
  }
  LOWORD(v141) = v20;
  if (v20)
  {
    if (((v19 | v14) & 0x20000000) != 0) {
      return 4294967262;
    }
  }
  if (v13 && *(void *)&v13[7] != -1 && (v19 & 0x800000) == 0) {
    return 4294967240;
  }
  char v126 = &v8[v15];
  int v127 = v19 & 0x80000;
  __int32 v131 = v19;
  if (*(unsigned char *)(v11 + 73))
  {
    (*(void (**)(void, void))(v11 + 8))(*(void *)(v11 + 32), *(void *)(v11 + 16));
    __int32 v19 = v131;
    *(unsigned char *)(v11 + 73) &= ~1u;
  }
  *(void *)(v11 + 64) = 0;
  BOOL v117 = (uint64_t *)(v11 + 64);
  *(void *)(v11 + 32) = 0;
  *(void *)&long long v143 = v8;
  uint64_t v111 = v15;
  uint64_t v106 = v17;
  unint64_t v115 = (unint64_t)&v8[v16];
  unsigned __int32 v129 = v18;
  if (v127 && ((v14 & 0x40000000) == 0 || (v19 & 0x4000000) != 0))
  {
    if ((v19 & 0x4000000) != 0)
    {
      if (v16 > v15)
      {
        unint64_t v23 = (unint64_t)&v8[v15];
        int v32 = *v126 & 0xC0;
        if (v32 == 128)
        {
          int v33 = (unsigned __int8 *)&v8[v15 + 1];
          while (v33 < (unsigned __int8 *)&v8[v16])
          {
            char v34 = *v33++;
            if ((v34 & 0xC0) != 0x80)
            {
              unint64_t v23 = (unint64_t)(v33 - 1);
              goto LABEL_50;
            }
          }
          *(void *)&long long v143 = v33;
          unint64_t v23 = (unint64_t)v33;
          goto LABEL_338;
        }
LABEL_50:
        *(void *)&long long v143 = v23;
        int v33 = (unsigned __int8 *)v23;
        if (v32 == 128)
        {
LABEL_338:
          uint64_t valid = _pcre2_valid_utf_8(v33, &v8[v16] - (char *)v33, v117);
          *(_DWORD *)(v11 + 76) = valid;
          if (valid)
          {
            int v95 = (uint64_t *)(v11 + 64);
            while (1)
            {
              uint64_t v96 = v143;
              uint64_t v97 = *v95;
              uint64_t v98 = v143 - (void)v8 + *v95;
              *int v95 = v98;
              if ((v131 & 0x4000000) == 0 || (int)valid > 0) {
                return valid;
              }
              int v22 = &v8[v98];
              if ((unint64_t)&v8[v98] >= v23) {
                break;
              }
              unint64_t v99 = v97 + v96 + 1;
              int v100 = &v8[v16 - 1 - v97 - v96];
              do
              {
                int v101 = (unsigned __int8 *)v99;
                unint64_t v102 = (unint64_t)v100;
                *(void *)&long long v143 = v99;
                if (v99 >= v23) {
                  break;
                }
                ++v99;
                --v100;
              }
              while ((*v101 & 0xC0) == 0x80);
              int v95 = (uint64_t *)(v11 + 64);
              uint64_t valid = _pcre2_valid_utf_8(v101, v102, v117);
              *(_DWORD *)(v11 + 76) = valid;
              if (!valid) {
                goto LABEL_347;
              }
            }
            LODWORD(valid) = 2;
            unsigned int v21 = &v8[v16];
          }
          else
          {
LABEL_347:
            unsigned int v21 = &v8[v16];
            int v22 = &v8[v16];
          }
          goto LABEL_33;
        }
LABEL_74:
        int v41 = v12[15].u16[2];
        if (v12[15].i16[2] && v23 > (unint64_t)v8)
        {
          unint64_t v42 = v23;
LABEL_77:
          BOOL v43 = (unsigned __int8 *)(v42 - 1);
          while (1)
          {
            int v33 = v43;
            *(void *)&long long v143 = v43;
            if (v43 <= (unsigned __int8 *)v8) {
              break;
            }
            --v43;
            if ((*v33 & 0xC0) != 0x80)
            {
              unint64_t v42 = (unint64_t)v33;
              if (--v41) {
                goto LABEL_77;
              }
              goto LABEL_338;
            }
          }
        }
        else
        {
          int v33 = (unsigned __int8 *)v23;
        }
        goto LABEL_338;
      }
    }
    else if (v16 > v15 && (*v126 & 0xC0) == 0x80)
    {
      if (v15) {
        return 4294967260;
      }
      else {
        return 4294967274;
      }
    }
    unint64_t v23 = (unint64_t)&v8[v15];
    *(void *)&long long v143 = &v8[v15];
    goto LABEL_74;
  }
  unsigned int v21 = &v8[v16];
  LODWORD(valid) = 0;
  int v22 = &v8[v16];
  unint64_t v23 = (unint64_t)v126;
LABEL_33:
  uint64_t v24 = &_pcre2_default_match_context_8;
  if (v13) {
    uint64_t v25 = v13;
  }
  else {
    uint64_t v25 = v12;
  }
  if (v13) {
    uint64_t v24 = (long long *)v13;
  }
  long long v133 = *(_OWORD *)v25->i8;
  *(uint32x2_t *)&long long v134 = v25[2];
  __int32 v26 = v12[11].i32[0];
  unsigned __int32 v27 = v12[12].u32[0];
  uint64_t v28 = *((void *)v24 + 7);
  if (v28 == -1) {
    BOOL v29 = v21;
  }
  else {
    BOOL v29 = &v8[v28];
  }
  unint64_t v125 = (unint64_t)v29;
  LODWORD(v151[0]) = 2;
  *(void *)&long long v152 = v8;
  *((void *)&v152 + 1) = v22 - v8;
  DWORD2(v156) = 0;
  uint64_t v30 = *((void *)v24 + 3);
  *(void *)&long long v150 = *((void *)v24 + 4);
  *((void *)&v150 + 1) = v30;
  *((void *)&v149 + 1) = v151;
  *(void *)&long long v140 = v111;
  *((void *)&v143 + 1) = v22;
  unsigned __int32 v109 = v27;
  LODWORD(v30) = (v12[15].u16[2] | v27 & 0x2000) != 0;
  LODWORD(v138) = (v27 >> 12) & 1;
  DWORD1(v138) = v30;
  *((void *)&v145 + 1) = 0;
  *(void *)&long long v146 = 0;
  WORD2(v141) = v12[16].i16[3];
  WORD3(v141) = v12[16].i16[2];
  *((void *)&v141 + 1) = v12 + 17;
  *(void *)&long long v142 = (char *)v12 + WORD3(v141) * (unint64_t)WORD2(v141) + 136;
  *((void *)&v142 + 1) = v8;
  WORD1(v141) = v12[15].i16[0];
  LODWORD(v148) = v26;
  *((void *)&v148 + 1) = 0;
  switch(v12[15].i16[1])
  {
    case 1:
      LODWORD(v149) = 1;
      char v31 = 13;
      goto LABEL_54;
    case 2:
      LODWORD(v149) = 1;
      char v31 = 10;
LABEL_54:
      BYTE4(v149) = v31;
      goto LABEL_60;
    case 3:
      LODWORD(v149) = 2;
      WORD2(v149) = 2573;
      goto LABEL_60;
    case 4:
      int v35 = 1;
      goto LABEL_58;
    case 5:
      int v35 = 2;
LABEL_58:
      HIDWORD(v148) = v35;
      goto LABEL_60;
    case 6:
      LODWORD(v149) = 1;
      BYTE4(v149) = 0;
LABEL_60:
      unint64_t v36 = (16 * v12[16].u16[0] + 135) & 0x1FFFF0;
      LODWORD(v37) = *((_DWORD *)v24 + 16);
      unsigned int v38 = v12[12].u32[1];
      if (v37 >= v38) {
        unint64_t v37 = v38;
      }
      else {
        unint64_t v37 = v37;
      }
      *((void *)&v136 + 1) = v37;
      *(uint32x2_t *)&long long v137 = vmin_u32(*(uint32x2_t *)((char *)v24 + 68), v12[13]);
      if (v36 > 0x800)
      {
        *((void *)&v134 + 1) = 10 * v36;
        if (v37 < (10 * v36) >> 10)
        {
          if (v36 > v37 << 10) {
            return 4294967233;
          }
          *((void *)&v134 + 1) = (v37 << 10) / v36 * v36;
        }
        unint64_t v44 = v36;
        uint64_t v39 = ((uint64_t (*)(void))v133)();
        *(void *)&long long v135 = v39;
        if (!v39) {
          return 4294967248;
        }
        uint64_t v40 = *((void *)&v134 + 1);
        unint64_t v36 = v44;
      }
      else
      {
        uint64_t v39 = v136;
        uint64_t v40 = (unsigned __int16)(0x5000u / (unsigned __int16)v36 * v36);
        *((void *)&v134 + 1) = v40;
        *(void *)&long long v135 = v136;
      }
      *((void *)&v135 + 1) = v39 + v40;
      unsigned int v123 = (unsigned __int8 *)v36;
      memset((void *)(v39 + 128), 255, v36 - 128);
      uint32x2_t v45 = v12[3];
      uint64_t v46 = *(void *)&v45 + 256;
      *((uint32x2_t *)&v138 + 1) = v45;
      *(void *)&long long v139 = *(void *)&v45 + 256;
      *((void *)&v139 + 1) = *(void *)&v45 + 832;
      __int32 v47 = v12[12].i32[0];
      unint64_t v118 = v47 & 0x10;
      char v119 = v47;
      if ((v47 & 0x10) != 0)
      {
        __int32 v48 = v12[14].i32[0];
        unsigned __int32 v49 = v131;
        int __c = v48;
        if ((v47 & 0x20) != 0)
        {
          char v121 = 0;
          int v116 = *(unsigned __int8 *)(v46 + v48);
          if (v48 >= 0x80u && (v131 & 0x20000) != 0 && !v127)
          {
            char v121 = 0;
            int v116 = (*(_DWORD *)&_pcre2_ucd_records_8[12
                                                                    * _pcre2_ucd_stage2_8[v48 & 0x7F | (_pcre2_ucd_stage1_8[v48 >> 7] << 7)]
                                                                    + 4]
                                   + v48);
          }
        }
        else
        {
          char v121 = 0;
          int v116 = v12[14].i32[0];
        }
      }
      else
      {
        int __c = 0;
        int v116 = 0;
        int v50 = (v109 >> 9) & 1;
        if ((v47 & 0x40) == 0) {
          int v50 = 1;
        }
        if (v50) {
          unsigned int v51 = 0;
        }
        else {
          unsigned int v51 = v12 + 5;
        }
        char v121 = v51;
        unsigned __int32 v49 = v131;
      }
      size_t v108 = v126 - 1;
      int v122 = (v49 >> 19) & 1;
      int v128 = v26 | v14;
      if ((v47 & 0x80) != 0)
      {
        __int32 v52 = v12[14].i32[1];
        if ((v47 & 0x100) != 0)
        {
          LOBYTE(v46) = *(unsigned char *)(v46 + v12[14].i32[1]);
          if (v12[14].i32[1] >= 0x80u && (v49 & 0x20000) != 0 && !v127) {
            LODWORD(v46) = *(_DWORD *)&_pcre2_ucd_records_8[12
          }
                                                          * _pcre2_ucd_stage2_8[v12[14].i32[1] & 0x7F | (_pcre2_ucd_stage1_8[v12[14].i32[1] >> 7] << 7)]
                                                          + 4]
                         + v12[14].i32[1];
        }
        else
        {
          LODWORD(v46) = v12[14].i32[1];
        }
      }
      else
      {
        LOBYTE(v52) = 0;
        LOBYTE(v46) = 0;
      }
      int v53 = (v129 >> 14) & 0xC;
      BOOL v55 = (v47 & 0x10) != 0 || v121 != 0;
      BOOL v110 = v55;
      int v104 = v52;
      int v105 = v46;
      unint64_t v107 = v118 >> 4;
      __int16 v120 = v26;
      int v103 = (v129 >> 14) & 0xC;
LABEL_113:
      unint64_t v112 = 0;
      unsigned int v113 = 0;
      uint64_t v130 = 0;
      unint64_t v132 = 0;
      HIDWORD(v137) = 0;
      int v124 = v53 | valid | v14;
      break;
    default:
      return 4294967252;
  }
  while (1)
  {
    if (v12[11].i8[2]) {
      goto LABEL_234;
    }
    if ((v26 & 0x100) == 0)
    {
      uint64_t v56 = (unsigned __int8 *)v22;
      goto LABEL_117;
    }
    if (v127)
    {
      uint64_t v56 = (unsigned __int8 *)v23;
      if (v23 >= (unint64_t)v22) {
        goto LABEL_117;
      }
LABEL_126:
      if (HIDWORD(v148))
      {
        if ((unint64_t)v56 < *((void *)&v143 + 1)
          && _pcre2_is_newline_8(v56, SHIDWORD(v148), *((uint64_t *)&v143 + 1), (int *)&v149, v122))
        {
          goto LABEL_117;
        }
      }
      else if ((unint64_t)v56 <= *((void *)&v143 + 1) - (unint64_t)v149 {
             && *v56 == BYTE4(v149)
      }
             && (v149 == 1 || v56[1] == BYTE5(v149)))
      {
        goto LABEL_117;
      }
      ++v56;
      while (v56 < (unsigned __int8 *)v22)
      {
        char v60 = *v56++;
        if ((v60 & 0xC0) != 0x80)
        {
          --v56;
          goto LABEL_126;
        }
      }
    }
    else
    {
      uint64_t v56 = (unsigned __int8 *)v23;
      if (v23 < (unint64_t)v22)
      {
        do
        {
          if (HIDWORD(v148))
          {
            if ((unint64_t)v56 < *((void *)&v143 + 1)
              && _pcre2_is_newline_8(v56, SHIDWORD(v148), *((uint64_t *)&v143 + 1), (int *)&v149, v122))
            {
              break;
            }
          }
          else if ((unint64_t)v56 <= *((void *)&v143 + 1) - (unint64_t)v149 {
                 && *v56 == BYTE4(v149)
          }
                 && (v149 == 1 || v56[1] == BYTE5(v149)))
          {
            break;
          }
          ++v56;
        }
        while (v56 < (unsigned __int8 *)v22);
      }
    }
LABEL_117:
    if (v128 < 0) {
      break;
    }
    if (!v118)
    {
      if ((v109 & 0x200) != 0)
      {
        if (v23 > *((void *)&v142 + 1) + v111)
        {
          if (v127)
          {
            if (v23 >= (unint64_t)v56) {
              goto LABEL_290;
            }
LABEL_169:
            if (HIDWORD(v148))
            {
              if (v23 > *((void *)&v142 + 1)
                && _pcre2_was_newline_8((unsigned char *)v23, SHIDWORD(v148), *((unint64_t *)&v142 + 1), (int *)&v149, v122))
              {
                goto LABEL_290;
              }
LABEL_177:
              ++v23;
              while (v23 < (unint64_t)v56)
              {
                char v65 = *(unsigned char *)v23++;
                if ((v65 & 0xC0) != 0x80)
                {
                  --v23;
                  goto LABEL_169;
                }
              }
            }
            else if (v23 < *((void *)&v142 + 1) + (unint64_t)v149 {
                   || *(unsigned __int8 *)(v23 - v149) != BYTE4(v149)
            }
                   || v149 != 1 && *(unsigned __int8 *)(v23 - v149 + 1) != BYTE5(v149))
            {
              goto LABEL_177;
            }
          }
          else
          {
            while (v23 < (unint64_t)v56)
            {
              if (HIDWORD(v148))
              {
                if (v23 > *((void *)&v142 + 1)
                  && _pcre2_was_newline_8((unsigned char *)v23, SHIDWORD(v148), *((unint64_t *)&v142 + 1), (int *)&v149, v122))
                {
                  break;
                }
              }
              else if (v23 >= *((void *)&v142 + 1) + (unint64_t)v149 {
                     && *(unsigned __int8 *)(v23 - v149) == BYTE4(v149)
              }
                     && (v149 == 1 || *(unsigned __int8 *)(v23 - v149 + 1) == BYTE5(v149)))
              {
                break;
              }
              ++v23;
            }
          }
LABEL_290:
          if (*(unsigned char *)(v23 - 1) == 13)
          {
            BOOL v87 = (HIDWORD(v148) - 1) > 1 || v23 >= (unint64_t)v56;
            if (!v87 && *(unsigned char *)v23 == 10) {
              ++v23;
            }
          }
        }
LABEL_230:
        LOWORD(v26) = v120;
        int v68 = (unsigned __int16)v141;
        int v22 = (char *)*((void *)&v143 + 1);
        int v58 = (char *)v23;
      }
      else
      {
        if (!v121) {
          goto LABEL_230;
        }
        do
        {
          int v58 = (char *)v23;
          if (v23 >= (unint64_t)v56) {
            break;
          }
          ++v23;
        }
        while (((v121->u8[(unint64_t)*v58 >> 3] >> (*v58 & 7)) & 1) == 0);
        int v68 = (unsigned __int16)v141;
        int v22 = (char *)*((void *)&v143 + 1);
        if ((_WORD)v141) {
          BOOL v69 = 0;
        }
        else {
          BOOL v69 = (unint64_t)v58 >= *((void *)&v143 + 1);
        }
        if (v69) {
          goto LABEL_300;
        }
        LOWORD(v26) = v120;
      }
      char v59 = v119;
      goto LABEL_232;
    }
    if (__c == v116)
    {
      char v57 = (char *)memchr((void *)v23, __c, (size_t)&v56[-v23]);
      if (v57) {
        int v58 = v57;
      }
      else {
        int v58 = (char *)v56;
      }
      char v59 = v119;
    }
    else
    {
      unsigned int v66 = v113;
      if (v113 && v23 <= (unint64_t)v113)
      {
        if (v113 == v56) {
          unint64_t v67 = 0;
        }
        else {
          unint64_t v67 = v113;
        }
      }
      else
      {
        uint64_t v70 = (unsigned __int8 *)memchr((void *)v23, __c, (size_t)&v56[-v23]);
        unint64_t v67 = v70;
        if (v70) {
          unsigned int v66 = v70;
        }
        else {
          unsigned int v66 = v56;
        }
      }
      uint64_t v71 = v112;
      unsigned int v113 = v66;
      if (v112 && v23 <= (unint64_t)v112)
      {
        if (v112 == v56) {
          uint64_t v72 = 0;
        }
        else {
          uint64_t v72 = v112;
        }
      }
      else
      {
        uint64_t v72 = (unsigned __int8 *)memchr((void *)v23, v116, (size_t)&v56[-v23]);
        if (v72) {
          uint64_t v71 = v72;
        }
        else {
          uint64_t v71 = v56;
        }
      }
      char v59 = v119;
      unint64_t v112 = v71;
      if (v67)
      {
        if (v67 < v72 || v72 == 0) {
          int v58 = (char *)v67;
        }
        else {
          int v58 = (char *)v72;
        }
      }
      else if (v72)
      {
        int v58 = (char *)v72;
      }
      else
      {
        int v58 = (char *)v56;
      }
    }
    int v68 = (unsigned __int16)v141;
    int v22 = (char *)*((void *)&v143 + 1);
    if (!(_WORD)v141 && (unint64_t)v58 >= *((void *)&v143 + 1))
    {
LABEL_300:
      uint64_t valid = 0;
      unint64_t v23 = (unint64_t)v58;
      goto LABEL_302;
    }
    LOWORD(v26) = v120;
LABEL_232:
    if (v68) {
      goto LABEL_233;
    }
    unint64_t v81 = v22 - v58;
    if (v22 - v58 < v12[15].u16[3]) {
      goto LABEL_299;
    }
    if ((v59 & 0x80) == 0
      || (uint64_t v82 = &v58[v107], &v58[v107] <= v108)
      || (v128 >= 0 ? (v83 = v81 >= 0x4C4B40) : (v83 = 1), v83 ? (int v84 = 0) : (int v84 = 1), v81 >> 3 >= 0x271 && !v84))
    {
LABEL_233:
      unint64_t v23 = (unint64_t)v58;
      goto LABEL_234;
    }
    int v85 = (char *)memchr(&v58[v107], v104, v22 - v82);
    if (v104 == v105) {
      goto LABEL_269;
    }
    if (!v85)
    {
      int v85 = (char *)memchr(v82, v105, v22 - v82);
LABEL_269:
      if (!v85) {
        int v85 = v22;
      }
    }
    if (v85 >= v22) {
      goto LABEL_299;
    }
    unint64_t v23 = (unint64_t)v58;
    size_t v108 = v85;
    LOWORD(v26) = v120;
LABEL_234:
    if (v23 > v125) {
      goto LABEL_298;
    }
    *(void *)&long long v153 = v23 - (void)v8;
    DWORD2(v156) |= 1u;
    *((void *)&v144 + 1) = v23;
    *(void *)&long long v145 = v23;
    DWORD2(v137) = 0;
    *((void *)&v140 + 1) = 0;
    HIDWORD(v147) = v124;
    DWORD1(v148) = 0;
    uint64_t v74 = sub_1A687CAC8((unsigned __int8 *)v23, (unsigned __int8 *)v142, (void *)(v11 + 80), *(unsigned __int16 *)(v11 + 74), v12[16].u16[0], v123, (uint64_t)&v133);
    BOOL v75 = HIDWORD(v137) != 0;
    uint64_t v76 = v130;
    BOOL v77 = v130 == 0;
    BOOL v78 = !v75 || !v77;
    if (v75 && v77) {
      uint64_t v76 = *((void *)&v144 + 1);
    }
    unint64_t v79 = v132;
    if (!v78) {
      unint64_t v79 = v23;
    }
    uint64_t v130 = v76;
    unint64_t v132 = v79;
    uint64_t valid = 0;
    switch(v74)
    {
      case 0xFFFFFC1B:
        goto LABEL_303;
      case 0xFFFFFC1C:
      case 0xFFFFFC1F:
        goto LABEL_243;
      case 0xFFFFFC1D:
        int v58 = (char *)v147;
        if ((unint64_t)v147 > v23) {
          goto LABEL_250;
        }
        goto LABEL_243;
      case 0xFFFFFC1E:
        DWORD2(v148) = DWORD1(v148);
        int v58 = (char *)v23;
        goto LABEL_250;
      default:
        uint64_t valid = v74;
        if (v74) {
          goto LABEL_303;
        }
LABEL_243:
        DWORD2(v148) = 0;
        int v58 = (char *)(v23 + 1);
        if (!v127 || v58 >= v22) {
          goto LABEL_250;
        }
        uint64_t v80 = &v22[~v23];
        break;
    }
    while ((*v58 & 0xC0) == 0x80)
    {
      ++v58;
      if (!--v80)
      {
        int v58 = v22;
        break;
      }
    }
LABEL_250:
    if ((v26 & 0x100) != 0)
    {
      if (HIDWORD(v148))
      {
        if (v23 < *((void *)&v143 + 1)
          && _pcre2_is_newline_8((unsigned __int8 *)v23, SHIDWORD(v148), *((uint64_t *)&v143 + 1), (int *)&v149, v122))
        {
          goto LABEL_298;
        }
      }
      else if (v23 <= *((void *)&v143 + 1) - (unint64_t)v149 {
             && *(unsigned __int8 *)v23 == BYTE4(v149)
      }
             && (v149 == 1 || *(unsigned __int8 *)(v23 + 1) == BYTE5(v149)))
      {
LABEL_298:
        uint64_t valid = 0;
        goto LABEL_303;
      }
    }
    if (v128 < 0 || v58 > v22)
    {
LABEL_299:
      uint64_t valid = 0;
      unint64_t v23 = (unint64_t)v58;
      goto LABEL_303;
    }
    if (v58 > v126
      && *(v58 - 1) == 13
      && v58 < v22
      && *v58 == 10
      && (v12[12].i8[1] & 8) == 0
      && ((HIDWORD(v148) - 1) < 2 || v149 == 2))
    {
      ++v58;
    }
    *((void *)&v145 + 1) = 0;
    unint64_t v23 = (unint64_t)v58;
  }
  if (!v110) {
    goto LABEL_230;
  }
  if (v23 >= (unint64_t)v56) {
    goto LABEL_301;
  }
  unint64_t v61 = *(unsigned __int8 *)v23;
  if (v118)
  {
    BOOL v63 = v61 != __c && v61 != v116;
    if (!v63 || v121 == 0)
    {
      if (v63) {
        goto LABEL_301;
      }
      goto LABEL_230;
    }
  }
  else if (!v121)
  {
    goto LABEL_301;
  }
  if ((v121->u8[v61 >> 3] >> (v61 & 7))) {
    goto LABEL_230;
  }
LABEL_301:
  uint64_t valid = 0;
LABEL_302:
  int v22 = (char *)v56;
LABEL_303:
  if (v127 && v22 != (char *)v115 && (!valid || valid == -2))
  {
LABEL_307:
    unsigned int v88 = v22;
    while (1)
    {
      unint64_t v23 = (unint64_t)(v88 + 1);
      if ((unint64_t)(v88 + 1) >= v115) {
        break;
      }
      ++v88;
      if ((*(unsigned char *)v23 & 0xC0) != 0x80)
      {
        *(void *)&long long v143 = v23;
        int v89 = _pcre2_valid_utf_8((unsigned __int8 *)v23, (unint64_t)&v8[v16 - v23], v117);
        if (!v89)
        {
          *((void *)&v143 + 1) = &v8[v16];
          int v22 = &v8[v16];
          LODWORD(valid) = 1;
LABEL_315:
          LOWORD(v26) = v120;
          int v53 = v103;
          goto LABEL_113;
        }
        unsigned int v88 = v22;
        if (v89 < 0)
        {
          uint64_t v90 = *v117;
          int v22 = (char *)(v23 + *v117);
          *((void *)&v143 + 1) = v22;
          if (v90 <= 0) {
            goto LABEL_307;
          }
          LODWORD(valid) = 3;
          goto LABEL_315;
        }
      }
    }
    uint64_t valid = 0;
  }
  if ((void)v135 != (void)v136) {
    (*((void (**)(void, void))&v133 + 1))(v135, v134);
  }
  *(void *)(v11 + 24) = v12;
  *(void *)(v11 + 40) = *((void *)&v145 + 1);
  *(unsigned char *)(v11 + 72) = 0;
  if (valid == 1)
  {
    if ((SDWORD2(v140) & 0x80000000) == 0) {
      int v91 = DWORD2(v140);
    }
    else {
      int v91 = DWORD2(v140) + 1;
    }
    int v92 = v91 >> 1;
    if (SDWORD2(v140) < 2 * *(unsigned __int16 *)(v11 + 74)) {
      uint64_t valid = (v92 + 1);
    }
    else {
      uint64_t valid = 0;
    }
    *(_DWORD *)(v11 + 76) = valid;
    *(void *)(v11 + 64) = v23 - (void)v8;
    uint64_t v93 = v144;
    if ((unint64_t)v145 > (unint64_t)v144) {
      uint64_t v93 = v145;
    }
    *(void *)(v11 + 48) = *((void *)&v144 + 1) - (void)v8;
    *(void *)(v11 + 56) = v93 - (void)v8;
    if ((v14 & 0x4000) == 0)
    {
      *(void *)(v11 + 32) = v8;
      return valid;
    }
    unsigned int v94 = (void *)(*(uint64_t (**)(uint64_t, void))v11)(v106 + v16, *(void *)(v11 + 16));
    *(void *)(v11 + 32) = v94;
    if (v94)
    {
      memcpy(v94, v8, v106 + v16);
      *(unsigned char *)(v11 + 73) |= 1u;
      return *(unsigned int *)(v11 + 76);
    }
    return 4294967248;
  }
  *(void *)(v11 + 40) = v146;
  if (valid == -2 || !valid)
  {
    if (v132)
    {
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 80) = v132 - (void)v8;
      *(void *)(v11 + 88) = v22 - v8;
      *(void *)(v11 + 56) = v22 - v8;
      *(void *)(v11 + 64) = v132 - (void)v8;
      *(void *)(v11 + 48) = v130 - (void)v8;
      uint64_t valid = 4294967294;
    }
    else
    {
      uint64_t valid = 0xFFFFFFFFLL;
    }
  }
  *(_DWORD *)(v11 + 76) = valid;
  return valid;
}

uint64_t sub_1A687CAC8(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4, int a5, unsigned __int8 *a6, uint64_t a7)
{
  int v7 = a6;
  v1423 = 0;
  unsigned int v11 = 0;
  uint64_t v12 = 0;
  int v13 = 0;
  unsigned int v14 = 0;
  v1440[0] = 0;
  unsigned int v15 = *(_DWORD *)(a7 + 240);
  int v16 = v15 & 0x80000;
  int v1432 = (v15 >> 19) & 1;
  size_t __n = (size_t)(a6 - 80);
  uint64_t v17 = *(unsigned __int8 ***)(a7 + 32);
  *((_DWORD *)v17 + 12) = 0;
  v17[13] = (unsigned __int8 *)0xFFFFFFFFLL;
  v17[10] = a1;
  v17[11] = a1;
  v17[12] = 0;
  v1433 = (unint64_t *)(a7 + 184);
  *((_OWORD *)v17 + 7) = xmmword_1A68ABDC0;
  __int32 v18 = (unint64_t *)(a7 + 168);
  v1436 = (unsigned __int16 *)(a7 + 128);
  v1430 = (int *)(a7 + 84);
  v1431 = (_DWORD *)(a7 + 76);
  uint64_t v1424 = -(uint64_t)a6;
  v1425 = (int *)(a7 + 256);
  unsigned int v1421 = v15;
  int v1429 = v15 & 0xA0000;
  uint64_t v1437 = a7;
  int v1435 = v15 & 0x80000;
  v1434 = (unint64_t *)(a7 + 168);
  while (2)
  {
    *((_DWORD *)v17 + 13) = v13;
    unint64_t *v17 = a2;
    v17[4] = v7;
    if (v13)
    {
      v17[14] = (unsigned __int8 *)v17 - *(void *)(a7 + 32);
      if ((v13 & 0xFFFF0000) == 0x40000) {
        *((_DWORD *)v17 + 26) = (unsigned __int16)v13;
      }
    }
    unsigned int v19 = *(_DWORD *)(a7 + 72);
    *(_DWORD *)(a7 + 72) = v19 + 1;
    if (v19 >= *(_DWORD *)(a7 + 64)) {
      return 4294967249;
    }
    if (v11 >= *(_DWORD *)(a7 + 68)) {
      return 4294967243;
    }
    v1426 = v14;
LABEL_8:
    while (2)
    {
      int v20 = *v17;
      unsigned int v21 = **v17;
      *((unsigned char *)v17 + 73) = v21;
      uint64_t v22 = 4294967252;
      uint64_t v23 = 0;
      switch(v21)
      {
        case 0u:
        case 0xA3u:
          if (*((_DWORD *)v17 + 26) != -1)
          {
            uint32x2_t v45 = v17;
            do
            {
              uint64_t v46 = v45[14];
              if (v46 == (unsigned __int8 *)-1) {
                return 4294967252;
              }
              __int32 v47 = &v46[*(void *)(a7 + 32)];
              uint32x2_t v45 = (unsigned __int8 **)&v47[v1424];
            }
            while (*((unsigned __int16 *)v47 + 27) << 16 != 0x40000);
            v1426 = v47;
            v45[12] = v17[12];
            *((_OWORD *)v45 + 5) = *((_OWORD *)v17 + 5);
            *v45 += 3;
            uint64_t v17 = (unsigned __int8 **)&v47[v1424];
            continue;
          }
          int v297 = v17[10];
          BOOL v298 = v17[11];
          if (v297 == v298)
          {
            int v501 = *(_DWORD *)(a7 + 236);
            if ((v501 & 4) != 0
              || (v501 & 8) != 0 && v297 == (unsigned __int8 *)(*(void *)(a7 + 152) + *(void *)(a7 + 112)))
            {
              uint64_t v23 = 0;
              goto LABEL_2587;
            }
          }
          if ((unint64_t)v297 < *v18 && ((*(_DWORD *)(a7 + 240) | *(_DWORD *)(a7 + 236)) & 0x20000000) != 0)
          {
            uint64_t v23 = 0;
            uint64_t v22 = 0;
            if (!v21) {
              goto LABEL_2587;
            }
          }
          else
          {
            *(void *)(a7 + 176) = v297;
            *(void *)(a7 + 120) = v17[15];
            *(void *)(a7 + 200) = v17[12];
            if ((unint64_t)v297 > *(void *)(a7 + 192)) {
              *(void *)(a7 + 192) = v297;
            }
            uint64_t v1412 = *(void *)(a7 + 152);
            *a3 = &v298[-v1412];
            a3[1] = &v297[-v1412];
            if (a5 + 1 < a4) {
              int v1413 = a5 + 1;
            }
            else {
              int v1413 = a4;
            }
            int v1414 = 2 * v1413;
            unsigned int v1415 = 2 * v1413 - 2;
            memcpy(a3 + 2, v17 + 16, 8 * v1415);
            unint64_t v1416 = (v1414 - 1);
            if ((unint64_t)(v17[15] + 2) <= v1416)
            {
              do
              {
                a3[v1416] = -1;
                unint64_t v1416 = v1415;
                BOOL v110 = (unint64_t)(v17[15] + 2) > v1415;
                uint64_t v22 = 1;
                --v1415;
              }
              while (!v110);
            }
            else
            {
              return 1;
            }
          }
          return v22;
        case 1u:
          long long v133 = v17[10];
          long long v134 = *(unsigned __int8 **)(a7 + 152);
          goto LABEL_212;
        case 2u:
          long long v133 = v17[10];
          long long v134 = (unsigned __int8 *)(*(void *)(a7 + 152) + *(void *)(a7 + 112));
LABEL_212:
          if (v133 == v134) {
            goto LABEL_2529;
          }
          goto LABEL_3375;
        case 3u:
          v17[11] = v17[10];
          goto LABEL_2529;
        case 4u:
        case 5u:
          __int32 v48 = v17[10];
          if (v48 == *(unsigned __int8 **)(a7 + 160)) {
            goto LABEL_602;
          }
          if (!v16)
          {
            unsigned __int32 v49 = v48 - 1;
            unsigned int v50 = *(v48 - 1);
            goto LABEL_597;
          }
          unsigned __int32 v49 = v17[10];
          do
          {
            unsigned int v51 = *--v49;
            unsigned int v50 = v51;
          }
          while ((v51 & 0xC0) == 0x80);
          if (v50 < 0xC0) {
            goto LABEL_597;
          }
          int v52 = v49[1] & 0x3F;
          if ((v50 & 0x20) == 0)
          {
            unsigned int v50 = v49[1] & 0x3F | ((v50 & 0x1F) << 6);
            goto LABEL_597;
          }
          if ((v50 & 0x10) != 0)
          {
            if ((v50 & 8) != 0)
            {
              int v865 = v49[2] & 0x3F;
              int v866 = v49[3] & 0x3F;
              int v867 = v49[4] & 0x3F;
              if ((v50 & 4) == 0)
              {
                unsigned int v50 = ((v50 & 3) << 24) | (v52 << 18) | (v865 << 12) | (v866 << 6) | v867;
                goto LABEL_597;
              }
              int v544 = ((v50 & 1) << 30) | (v52 << 24) | (v865 << 18) | (v866 << 12) | (v867 << 6);
              unsigned __int8 v545 = v49[5];
            }
            else
            {
              int v544 = ((v50 & 7) << 18) | (v52 << 12) | ((v49[2] & 0x3F) << 6);
              unsigned __int8 v545 = v49[3];
            }
          }
          else
          {
            int v544 = ((v50 & 0xF) << 12) | (v52 << 6);
            unsigned __int8 v545 = v49[2];
          }
          unsigned int v50 = v544 & 0xFFFFFFC0 | v545 & 0x3F;
LABEL_597:
          if ((unint64_t)v49 < *v1433) {
            unint64_t *v1433 = (unint64_t)v49;
          }
          if ((*(unsigned char *)(a7 + 242) & 2) != 0)
          {
            int v300 = v50 == 95
                || (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                            * _pcre2_ucd_stage2_8[v50 & 0x7F | (_pcre2_ucd_stage1_8[v50 >> 7] << 7)]
                                                            + 1]] & 0xFFFFFFFD) == 1;
          }
          else if (v50 > 0xFF)
          {
LABEL_602:
            int v300 = 0;
          }
          else
          {
            int v300 = (*(unsigned __int8 *)(*(void *)(a7 + 104) + v50) >> 4) & 1;
          }
          unsigned int v372 = (unsigned char *)*v18;
          if ((unint64_t)v48 >= *v18)
          {
            unsigned int v378 = *v1436;
            if (!*v1436) {
              goto LABEL_774;
            }
            if ((unint64_t)v48 > *v1433 || (int v379 = *v1430) != 0)
            {
              _DWORD *v1431 = 1;
              if (v378 > 1) {
                return 4294967294;
              }
LABEL_774:
              int v379 = 0;
            }
LABEL_775:
            unint64_t *v17 = v20 + 1;
            if (*v20 == 5)
            {
              uint64_t v23 = 0;
              if (v379 != v300) {
                continue;
              }
            }
            else
            {
              uint64_t v23 = 0;
              if (v379 == v300) {
                continue;
              }
            }
            goto LABEL_2587;
          }
          int v373 = v48 + 1;
          if (v16)
          {
            v374 = v48 + 1;
            if (v373 < v372)
            {
              int v375 = &v372[~(unint64_t)v48];
              v374 = v48 + 1;
              do
              {
                if ((*v374 & 0xC0) != 0x80) {
                  goto LABEL_760;
                }
                ++v374;
                --v375;
              }
              while (v375);
              v374 = (unsigned char *)*v18;
            }
LABEL_760:
            unsigned int v376 = *v48;
            if (v376 >= 0xC0)
            {
              int v377 = *v373 & 0x3F;
              if ((v376 & 0x20) != 0)
              {
                if ((v376 & 0x10) != 0)
                {
                  if ((v376 & 8) != 0)
                  {
                    int v907 = v48[2] & 0x3F;
                    int v908 = v48[3] & 0x3F;
                    int v909 = v48[4] & 0x3F;
                    if ((v376 & 4) == 0)
                    {
                      unsigned int v376 = ((v376 & 3) << 24) | (v377 << 18) | (v907 << 12) | (v908 << 6) | v909;
                      goto LABEL_769;
                    }
                    int v570 = ((v376 & 1) << 30) | (v377 << 24) | (v907 << 18) | (v908 << 12) | (v909 << 6);
                    unsigned __int8 v571 = v48[5];
                  }
                  else
                  {
                    int v570 = ((v376 & 7) << 18) | (v377 << 12) | ((v48[2] & 0x3F) << 6);
                    unsigned __int8 v571 = v48[3];
                  }
                }
                else
                {
                  int v570 = ((v376 & 0xF) << 12) | (v377 << 6);
                  unsigned __int8 v571 = v48[2];
                }
                unsigned int v376 = v570 & 0xFFFFFFC0 | v571 & 0x3F;
                goto LABEL_769;
              }
              unsigned int v376 = v377 & 0xFFFFF83F | ((v376 & 0x1F) << 6);
            }
          }
          else
          {
            unsigned int v376 = *v48;
            v374 = v48 + 1;
          }
LABEL_769:
          if ((unint64_t)v374 > *(void *)(a7 + 192)) {
            *(void *)(a7 + 192) = v374;
          }
          if ((*(unsigned char *)(a7 + 242) & 2) == 0)
          {
            if (v376 <= 0xFF)
            {
              int v379 = (*(unsigned __int8 *)(*(void *)(a7 + 104) + v376) >> 4) & 1;
              goto LABEL_775;
            }
            goto LABEL_774;
          }
          int v379 = v376 == 95
              || (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                          * _pcre2_ucd_stage2_8[v376 & 0x7F | (_pcre2_ucd_stage1_8[v376 >> 7] << 7)]
                                                          + 1]] & 0xFFFFFFFD) == 1;
          goto LABEL_775;
        case 6u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v136 = *v135;
          if (v16 && v136 >= 0xC0)
          {
            if ((v136 & 0x20) != 0)
            {
              int v548 = v135[1] & 0x3F;
              if ((v136 & 0x10) != 0)
              {
                if ((v136 & 8) != 0)
                {
                  int v871 = v135[2] & 0x3F;
                  int v872 = v135[3] & 0x3F;
                  int v873 = v135[4] & 0x3F;
                  if ((v136 & 4) != 0)
                  {
                    unsigned int v136 = ((v136 & 1) << 30) | (v548 << 24) | (v871 << 18) | (v872 << 12) | (v873 << 6) | v135[5] & 0x3F;
                    v549 = v135 + 6;
                  }
                  else
                  {
                    unsigned int v136 = ((v136 & 3) << 24) | (v548 << 18) | (v871 << 12) | (v872 << 6) | v873;
                    v549 = v135 + 5;
                  }
                }
                else
                {
                  unsigned int v136 = ((v136 & 7) << 18) | (v548 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                  v549 = v135 + 4;
                }
              }
              else
              {
                unsigned int v136 = ((v136 & 0xF) << 12) | (v548 << 6) | v135[2] & 0x3F;
                v549 = v135 + 3;
              }
              v17[10] = v549;
            }
            else
            {
              v17[10] = v135 + 2;
              unsigned int v136 = v135[1] & 0x3F | ((v136 & 0x1F) << 6);
            }
            if (v136 > 0xFF) {
              goto LABEL_2529;
            }
          }
          if ((*(unsigned char *)(*(void *)(a7 + 104) + v136) & 8) == 0) {
            goto LABEL_2529;
          }
          goto LABEL_1958;
        case 7u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v137 = *v135;
          if (!v16 || v137 < 0xC0) {
            goto LABEL_2430;
          }
          if ((v137 & 0x20) != 0)
          {
            int v550 = v135[1] & 0x3F;
            if ((v137 & 0x10) != 0)
            {
              if ((v137 & 8) != 0)
              {
                int v874 = v135[2] & 0x3F;
                int v875 = v135[3] & 0x3F;
                int v876 = v135[4] & 0x3F;
                if ((v137 & 4) != 0)
                {
                  unsigned int v137 = ((v137 & 1) << 30) | (v550 << 24) | (v874 << 18) | (v875 << 12) | (v876 << 6) | v135[5] & 0x3F;
                  v551 = v135 + 6;
                }
                else
                {
                  unsigned int v137 = ((v137 & 3) << 24) | (v550 << 18) | (v874 << 12) | (v875 << 6) | v876;
                  v551 = v135 + 5;
                }
              }
              else
              {
                unsigned int v137 = ((v137 & 7) << 18) | (v550 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                v551 = v135 + 4;
              }
            }
            else
            {
              unsigned int v137 = ((v137 & 0xF) << 12) | (v550 << 6) | v135[2] & 0x3F;
              v551 = v135 + 3;
            }
            v17[10] = v551;
          }
          else
          {
            v17[10] = v135 + 2;
            unsigned int v137 = v135[1] & 0x3F | ((v137 & 0x1F) << 6);
          }
          if (v137 <= 0xFF)
          {
LABEL_2430:
            if ((*(unsigned char *)(*(void *)(a7 + 104) + v137) & 8) != 0) {
              goto LABEL_2529;
            }
          }
          goto LABEL_1958;
        case 8u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v138 = *v135;
          if (v16 && v138 >= 0xC0)
          {
            if ((v138 & 0x20) != 0)
            {
              int v552 = v135[1] & 0x3F;
              if ((v138 & 0x10) != 0)
              {
                if ((v138 & 8) != 0)
                {
                  int v877 = v135[2] & 0x3F;
                  int v878 = v135[3] & 0x3F;
                  int v879 = v135[4] & 0x3F;
                  if ((v138 & 4) != 0)
                  {
                    unsigned int v138 = ((v138 & 1) << 30) | (v552 << 24) | (v877 << 18) | (v878 << 12) | (v879 << 6) | v135[5] & 0x3F;
                    v553 = v135 + 6;
                  }
                  else
                  {
                    unsigned int v138 = ((v138 & 3) << 24) | (v552 << 18) | (v877 << 12) | (v878 << 6) | v879;
                    v553 = v135 + 5;
                  }
                }
                else
                {
                  unsigned int v138 = ((v138 & 7) << 18) | (v552 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                  v553 = v135 + 4;
                }
              }
              else
              {
                unsigned int v138 = ((v138 & 0xF) << 12) | (v552 << 6) | v135[2] & 0x3F;
                v553 = v135 + 3;
              }
              v17[10] = v553;
            }
            else
            {
              v17[10] = v135 + 2;
              unsigned int v138 = v135[1] & 0x3F | ((v138 & 0x1F) << 6);
            }
            if (v138 > 0xFF) {
              goto LABEL_2529;
            }
          }
          if ((*(unsigned char *)(*(void *)(a7 + 104) + v138) & 1) == 0) {
            goto LABEL_2529;
          }
          goto LABEL_1958;
        case 9u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v139 = *v135;
          if (!v16 || v139 < 0xC0) {
            goto LABEL_2440;
          }
          if ((v139 & 0x20) != 0)
          {
            int v554 = v135[1] & 0x3F;
            if ((v139 & 0x10) != 0)
            {
              if ((v139 & 8) != 0)
              {
                int v880 = v135[2] & 0x3F;
                int v881 = v135[3] & 0x3F;
                int v882 = v135[4] & 0x3F;
                if ((v139 & 4) != 0)
                {
                  unsigned int v139 = ((v139 & 1) << 30) | (v554 << 24) | (v880 << 18) | (v881 << 12) | (v882 << 6) | v135[5] & 0x3F;
                  v555 = v135 + 6;
                }
                else
                {
                  unsigned int v139 = ((v139 & 3) << 24) | (v554 << 18) | (v880 << 12) | (v881 << 6) | v882;
                  v555 = v135 + 5;
                }
              }
              else
              {
                unsigned int v139 = ((v139 & 7) << 18) | (v554 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                v555 = v135 + 4;
              }
            }
            else
            {
              unsigned int v139 = ((v139 & 0xF) << 12) | (v554 << 6) | v135[2] & 0x3F;
              v555 = v135 + 3;
            }
            v17[10] = v555;
          }
          else
          {
            v17[10] = v135 + 2;
            unsigned int v139 = v135[1] & 0x3F | ((v139 & 0x1F) << 6);
          }
          if (v139 <= 0xFF)
          {
LABEL_2440:
            if (*(unsigned char *)(*(void *)(a7 + 104) + v139)) {
              goto LABEL_2529;
            }
          }
          goto LABEL_1958;
        case 0xAu:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v140 = *v135;
          if (v16 && v140 >= 0xC0)
          {
            if ((v140 & 0x20) != 0)
            {
              int v556 = v135[1] & 0x3F;
              if ((v140 & 0x10) != 0)
              {
                if ((v140 & 8) != 0)
                {
                  int v883 = v135[2] & 0x3F;
                  int v884 = v135[3] & 0x3F;
                  int v885 = v135[4] & 0x3F;
                  if ((v140 & 4) != 0)
                  {
                    unsigned int v140 = ((v140 & 1) << 30) | (v556 << 24) | (v883 << 18) | (v884 << 12) | (v885 << 6) | v135[5] & 0x3F;
                    v557 = v135 + 6;
                  }
                  else
                  {
                    unsigned int v140 = ((v140 & 3) << 24) | (v556 << 18) | (v883 << 12) | (v884 << 6) | v885;
                    v557 = v135 + 5;
                  }
                }
                else
                {
                  unsigned int v140 = ((v140 & 7) << 18) | (v556 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                  v557 = v135 + 4;
                }
              }
              else
              {
                unsigned int v140 = ((v140 & 0xF) << 12) | (v556 << 6) | v135[2] & 0x3F;
                v557 = v135 + 3;
              }
              v17[10] = v557;
            }
            else
            {
              v17[10] = v135 + 2;
              unsigned int v140 = v135[1] & 0x3F | ((v140 & 0x1F) << 6);
            }
            if (v140 > 0xFF) {
              goto LABEL_2529;
            }
          }
          if ((*(unsigned char *)(*(void *)(a7 + 104) + v140) & 0x10) == 0) {
            goto LABEL_2529;
          }
          goto LABEL_1958;
        case 0xBu:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v141 = *v135;
          if (!v16 || v141 < 0xC0) {
            goto LABEL_2450;
          }
          if ((v141 & 0x20) != 0)
          {
            int v558 = v135[1] & 0x3F;
            if ((v141 & 0x10) != 0)
            {
              if ((v141 & 8) != 0)
              {
                int v886 = v135[2] & 0x3F;
                int v887 = v135[3] & 0x3F;
                int v888 = v135[4] & 0x3F;
                if ((v141 & 4) != 0)
                {
                  unsigned int v141 = ((v141 & 1) << 30) | (v558 << 24) | (v886 << 18) | (v887 << 12) | (v888 << 6) | v135[5] & 0x3F;
                  v559 = v135 + 6;
                }
                else
                {
                  unsigned int v141 = ((v141 & 3) << 24) | (v558 << 18) | (v886 << 12) | (v887 << 6) | v888;
                  v559 = v135 + 5;
                }
              }
              else
              {
                unsigned int v141 = ((v141 & 7) << 18) | (v558 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                v559 = v135 + 4;
              }
            }
            else
            {
              unsigned int v141 = ((v141 & 0xF) << 12) | (v558 << 6) | v135[2] & 0x3F;
              v559 = v135 + 3;
            }
            v17[10] = v559;
          }
          else
          {
            v17[10] = v135 + 2;
            unsigned int v141 = v135[1] & 0x3F | ((v141 & 0x1F) << 6);
          }
          if (v141 <= 0xFF)
          {
LABEL_2450:
            if ((*(unsigned char *)(*(void *)(a7 + 104) + v141) & 0x10) != 0) {
              goto LABEL_2529;
            }
          }
          goto LABEL_1958;
        case 0xCu:
          int v142 = *(_DWORD *)(a7 + 252);
          long long v143 = v17[10];
          unint64_t v144 = *(void *)(a7 + 168);
          if (v142)
          {
            if ((unint64_t)v143 < v144)
            {
              if (_pcre2_is_newline_8(v143, v142, v144, v1425, v1432))
              {
                uint64_t v23 = 0;
LABEL_724:
                a7 = v1437;
                int v16 = v1435;
                __int32 v18 = v1434;
                goto LABEL_2587;
              }
              __int32 v18 = v1434;
              unint64_t v144 = *v1434;
              a7 = v1437;
              int v16 = v1435;
            }
          }
          else
          {
            uint64_t v359 = *v1425;
            if ((unint64_t)v143 <= v144 - v359
              && *v143 == *(unsigned __int8 *)(a7 + 260)
              && (v359 == 1 || v143[1] == *(unsigned __int8 *)(a7 + 261)))
            {
              goto LABEL_1958;
            }
          }
          unsigned int v574 = *v1436;
          if (*v1436)
          {
            v575 = v17[10];
            if (v575 == (unsigned __int8 *)(v144 - 1)
              && !*(_DWORD *)(a7 + 252)
              && *v1425 == 2
              && *v575 == *(unsigned __int8 *)(a7 + 260))
            {
              _DWORD *v1431 = 1;
              if (v574 > 1) {
                return 4294967294;
              }
            }
          }
LABEL_1232:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= v144) {
            goto LABEL_1954;
          }
          v576 = v135 + 1;
          v17[10] = v135 + 1;
          if (v16 && (unint64_t)v576 < v144)
          {
            unint64_t v577 = v144 - (void)v576;
            v578 = v135 + 2;
            do
            {
              if ((*(v578 - 1) & 0xC0) != 0x80) {
                break;
              }
              v17[10] = v578++;
              --v577;
            }
            while (v577);
          }
LABEL_1238:
          ++*v17;
          continue;
        case 0xDu:
          unint64_t v144 = *v18;
          goto LABEL_1232;
        case 0xEu:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          long long v145 = v135 + 1;
          goto LABEL_252;
        case 0xFu:
        case 0x10u:
          int v53 = v17[10];
          if ((unint64_t)v53 >= *v18) {
            goto LABEL_179;
          }
          v17[10] = v53 + 1;
          unsigned int v54 = *v53;
          if (v16 && v54 >= 0xC0)
          {
            if ((v54 & 0x20) != 0)
            {
              int v506 = v53[1] & 0x3F;
              if ((v54 & 0x10) != 0)
              {
                if ((v54 & 8) != 0)
                {
                  int v845 = v53[2] & 0x3F;
                  int v846 = v53[3] & 0x3F;
                  int v847 = v53[4] & 0x3F;
                  if ((v54 & 4) != 0)
                  {
                    unsigned int v54 = ((v54 & 1) << 30) | (v506 << 24) | (v845 << 18) | (v846 << 12) | (v847 << 6) | v53[5] & 0x3F;
                    v507 = v53 + 6;
                  }
                  else
                  {
                    unsigned int v54 = ((v54 & 3) << 24) | (v506 << 18) | (v845 << 12) | (v846 << 6) | v847;
                    v507 = v53 + 5;
                  }
                }
                else
                {
                  unsigned int v54 = ((v54 & 7) << 18) | (v506 << 12) | ((v53[2] & 0x3F) << 6) | v53[3] & 0x3F;
                  v507 = v53 + 4;
                }
              }
              else
              {
                unsigned int v54 = ((v54 & 0xF) << 12) | (v506 << 6) | v53[2] & 0x3F;
                v507 = v53 + 3;
              }
              v17[10] = v507;
            }
            else
            {
              v17[10] = v53 + 2;
              unsigned int v54 = v53[1] & 0x3F | ((v54 & 0x1F) << 6);
            }
          }
          int v910 = _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)];
          v911 = &_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)]];
          switch(v20[1])
          {
            case 0u:
              goto LABEL_2080;
            case 1u:
              unsigned int v912 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)]
                                        + 1];
              BOOL v110 = v912 > 9;
              int v913 = (1 << v912) & 0x320;
              if (!v110 && v913 != 0) {
                goto LABEL_2080;
              }
              if (v21 == 15) {
                goto LABEL_2586;
              }
              goto LABEL_1958;
            case 2u:
              BOOL v915 = v21 == 15;
              BOOL v916 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                             * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)]
                                                             + 1]] == v20[2];
              goto LABEL_2074;
            case 3u:
              BOOL v915 = v21 == 15;
              int v917 = v20[2];
              int v918 = _pcre2_ucd_records_8[12 * v910 + 1];
              goto LABEL_2073;
            case 4u:
              BOOL v915 = v21 == 15;
              int v917 = v20[2];
              int v918 = *v911;
LABEL_2073:
              BOOL v916 = v917 == v918;
LABEL_2074:
              int v919 = !v916;
              if (((v915 ^ v919) & 1) == 0) {
                goto LABEL_2586;
              }
              goto LABEL_1958;
            case 5u:
              unint64_t v920 = v20[2];
              if (v920 == *v911)
              {
LABEL_2080:
                if (v21 == 15) {
                  goto LABEL_1958;
                }
              }
              else
              {
                BOOL v921 = v21 == 15;
                int v922 = *(_DWORD *)((char *)&_pcre2_ucd_script_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12 * v910 + 8] & 0x3FF]
                                 + ((v920 >> 3) & 0x1C)) >> v920;
LABEL_2117:
                if (((v921 ^ v922) & 1) == 0) {
                  goto LABEL_1958;
                }
              }
              goto LABEL_2586;
            case 6u:
              BOOL v921 = v21 == 15;
              int v922 = (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                              * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)]
                                                              + 1]] & 0xFFFFFFFD) == 1;
              goto LABEL_2117;
            case 7u:
            case 8u:
              if ((int)v54 >= 0x2000)
              {
                if (v54 - 0x2000 >= 0xB
                  && (v54 - 8232 > 0x37 || ((1 << (v54 - 40)) & 0x80000000000083) == 0)
                  && v54 != 12288)
                {
                  goto LABEL_2554;
                }
LABEL_2112:
                if (v21 == 15) {
                  goto LABEL_2113;
                }
LABEL_2586:
                unint64_t *v17 = v20 + 3;
                continue;
              }
              if ((int)v54 > 132)
              {
                if ((int)v54 > 5759)
                {
                  if (v54 == 5760 || v54 == 6158) {
                    goto LABEL_2112;
                  }
                }
                else if (v54 == 133 || v54 == 160)
                {
                  goto LABEL_2112;
                }
              }
              else if (v54 <= 0x20 && ((1 << v54) & 0x100003E00) != 0)
              {
                goto LABEL_2112;
              }
LABEL_2554:
              BOOL v929 = v21 == 15;
              BOOL v930 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                             * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)]
                                                             + 1]] == 6;
LABEL_2103:
              BOOL v931 = !v930;
LABEL_2107:
              if ((v929 ^ v931)) {
                goto LABEL_2113;
              }
              goto LABEL_2586;
            case 9u:
              if ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                            * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)]
                                                            + 1]] | 2) == 3)
                goto LABEL_2112;
              BOOL v923 = v21 == 15;
              BOOL v924 = v54 == 95;
              goto LABEL_2100;
            case 0xAu:
              v925 = &_pcre2_ucd_caseless_sets_8[v20[2]];
              while (1)
              {
                unsigned int v926 = *v925;
                if (v54 < *v925) {
                  break;
                }
                ++v925;
                if (v54 == v926) {
                  goto LABEL_2112;
                }
              }
              if (v21 == 15) {
                goto LABEL_2586;
              }
              goto LABEL_2113;
            case 0xBu:
              if (v54 - 36 <= 0x3C && ((1 << (v54 - 36)) & 0x1000000010000001) != 0) {
                goto LABEL_2112;
              }
              BOOL v923 = v21 == 15;
              BOOL v924 = v54 >> 13 > 6 || (v54 - 160) >> 5 < 0x6BB;
LABEL_2100:
              if ((v923 ^ v924)) {
                goto LABEL_2586;
              }
              goto LABEL_2113;
            case 0xCu:
              BOOL v929 = v21 == 15;
              BOOL v930 = v20[2] == *(unsigned __int16 *)&_pcre2_ucd_records_8[12
                                                                        * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)]
                                                                        + 8] >> 11;
              goto LABEL_2103;
            case 0xDu:
              BOOL v929 = v21 == 15;
              BOOL v931 = ((*(_DWORD *)((char *)&_pcre2_ucd_BOOLprop_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v54 & 0x7F | (_pcre2_ucd_stage1_8[v54 >> 7] << 7)] + 10] & 0xFFF]
                                 + ((v20[2] >> 3) & 0x1CLL)) >> v20[2]) & 1) == 0;
              goto LABEL_2107;
            default:
              return 4294967252;
          }
        case 0x11u:
          long long v146 = v17[10];
          unint64_t v147 = *v18;
          if ((unint64_t)v146 >= *v18)
          {
            unsigned int v119 = *v1436;
            if (*v1436)
            {
              if ((unint64_t)v146 <= *v1433) {
                goto LABEL_1956;
              }
              goto LABEL_1957;
            }
            goto LABEL_1958;
          }
          long long v148 = v146 + 1;
          v17[10] = v146 + 1;
          int v149 = *v146;
          if (v16 && v149 >= 0xC0)
          {
            if ((v149 & 0x20) != 0)
            {
              int v560 = *v148 & 0x3F;
              if ((v149 & 0x10) != 0)
              {
                if ((v149 & 8) != 0)
                {
                  int v889 = v146[2] & 0x3F;
                  int v890 = v146[3] & 0x3F;
                  int v891 = v146[4] & 0x3F;
                  if ((v149 & 4) != 0)
                  {
                    int v149 = ((v149 & 1) << 30) | (v560 << 24) | (v889 << 18) | (v890 << 12) | (v891 << 6) | v146[5] & 0x3F;
                    long long v148 = v146 + 6;
                  }
                  else
                  {
                    int v149 = ((v149 & 3) << 24) | (v560 << 18) | (v889 << 12) | (v890 << 6) | v891;
                    long long v148 = v146 + 5;
                  }
                }
                else
                {
                  int v149 = ((v149 & 7) << 18) | (v560 << 12) | ((v146[2] & 0x3F) << 6) | v146[3] & 0x3F;
                  long long v148 = v146 + 4;
                }
              }
              else
              {
                int v149 = ((v149 & 0xF) << 12) | (v560 << 6) | v146[2] & 0x3F;
                long long v148 = v146 + 3;
              }
              v17[10] = v148;
            }
            else
            {
              long long v148 = v146 + 2;
              v17[10] = v146 + 2;
              int v149 = v146[1] & 0x3F | ((v149 & 0x1F) << 6);
            }
          }
          uint64_t v23 = 0;
          if (v149 <= 12)
          {
            if ((v149 - 11) >= 2)
            {
              if (v149 != 10) {
                goto LABEL_2587;
              }
              goto LABEL_2529;
            }
          }
          else if ((v149 - 8232) >= 2 && v149 != 133)
          {
            if (v149 != 13) {
              goto LABEL_2587;
            }
            if ((unint64_t)v148 < v147)
            {
              if (*v148 == 10)
              {
                long long v145 = v148 + 1;
LABEL_252:
                v17[10] = v145;
              }
              goto LABEL_2529;
            }
            unsigned int v314 = *v1436;
            if (*v1436)
            {
              if ((unint64_t)v148 > *v1433) {
                goto LABEL_635;
              }
LABEL_634:
              if (*v1430) {
                goto LABEL_635;
              }
            }
LABEL_2529:
            unint64_t *v17 = v20 + 1;
            continue;
          }
          if (*(_WORD *)(a7 + 130) == 2) {
            goto LABEL_1958;
          }
          goto LABEL_2529;
        case 0x12u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          int v150 = *v135;
          if (v16 && v150 >= 0xC0)
          {
            if ((v150 & 0x20) != 0)
            {
              int v561 = v135[1] & 0x3F;
              if ((v150 & 0x10) != 0)
              {
                if ((v150 & 8) != 0)
                {
                  int v892 = v135[2] & 0x3F;
                  int v893 = v135[3] & 0x3F;
                  int v894 = v135[4] & 0x3F;
                  if ((v150 & 4) != 0)
                  {
                    int v150 = ((v150 & 1) << 30) | (v561 << 24) | (v892 << 18) | (v893 << 12) | (v894 << 6) | v135[5] & 0x3F;
                    v562 = v135 + 6;
                  }
                  else
                  {
                    int v150 = ((v150 & 3) << 24) | (v561 << 18) | (v892 << 12) | (v893 << 6) | v894;
                    v562 = v135 + 5;
                  }
                }
                else
                {
                  int v150 = ((v150 & 7) << 18) | (v561 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                  v562 = v135 + 4;
                }
              }
              else
              {
                int v150 = ((v150 & 0xF) << 12) | (v561 << 6) | v135[2] & 0x3F;
                v562 = v135 + 3;
              }
              v17[10] = v562;
            }
            else
            {
              v17[10] = v135 + 2;
              int v150 = v135[1] & 0x3F | ((v150 & 0x1F) << 6);
            }
          }
          uint64_t v23 = 0;
          if (v150 < 0x2000)
          {
            if (v150 <= 159)
            {
              if (v150 == 9 || v150 == 32) {
                goto LABEL_2587;
              }
            }
            else if (v150 == 160 || v150 == 5760 || v150 == 6158)
            {
              goto LABEL_2587;
            }
          }
          else if (v150 > 8238)
          {
            BOOL v1046 = v150 == 8239 || v150 == 8287;
            if (v1046 || v150 == 12288) {
              goto LABEL_2587;
            }
          }
          else if ((v150 - 0x2000) < 0xB)
          {
            goto LABEL_2587;
          }
          goto LABEL_2529;
        case 0x13u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          int v151 = *v135;
          if (v16 && v151 >= 0xC0)
          {
            if ((v151 & 0x20) != 0)
            {
              int v563 = v135[1] & 0x3F;
              if ((v151 & 0x10) != 0)
              {
                if ((v151 & 8) != 0)
                {
                  int v895 = v135[2] & 0x3F;
                  int v896 = v135[3] & 0x3F;
                  int v897 = v135[4] & 0x3F;
                  if ((v151 & 4) != 0)
                  {
                    int v151 = ((v151 & 1) << 30) | (v563 << 24) | (v895 << 18) | (v896 << 12) | (v897 << 6) | v135[5] & 0x3F;
                    v564 = v135 + 6;
                  }
                  else
                  {
                    int v151 = ((v151 & 3) << 24) | (v563 << 18) | (v895 << 12) | (v896 << 6) | v897;
                    v564 = v135 + 5;
                  }
                }
                else
                {
                  int v151 = ((v151 & 7) << 18) | (v563 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                  v564 = v135 + 4;
                }
              }
              else
              {
                int v151 = ((v151 & 0xF) << 12) | (v563 << 6) | v135[2] & 0x3F;
                v564 = v135 + 3;
              }
              v17[10] = v564;
            }
            else
            {
              v17[10] = v135 + 2;
              int v151 = v135[1] & 0x3F | ((v151 & 0x1F) << 6);
            }
          }
          uint64_t v23 = 0;
          if (v151 < 0x2000)
          {
            if (v151 <= 159)
            {
              if (v151 != 9 && v151 != 32) {
                goto LABEL_2587;
              }
              goto LABEL_2529;
            }
            BOOL v1047 = v151 == 160 || v151 == 5760;
            int v1048 = 6158;
          }
          else
          {
            if (v151 <= 8238)
            {
              if ((v151 - 0x2000) >= 0xB) {
                goto LABEL_2587;
              }
              goto LABEL_2529;
            }
            if (v151 == 8239) {
              goto LABEL_2529;
            }
            BOOL v1047 = v151 == 12288;
            int v1048 = 8287;
          }
          if (!v1047 && v151 != v1048) {
            goto LABEL_2587;
          }
          goto LABEL_2529;
        case 0x14u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v152 = *v135;
          if (v16 && v152 >= 0xC0)
          {
            if ((v152 & 0x20) != 0)
            {
              int v565 = v135[1] & 0x3F;
              if ((v152 & 0x10) != 0)
              {
                if ((v152 & 8) != 0)
                {
                  int v898 = v135[2] & 0x3F;
                  int v899 = v135[3] & 0x3F;
                  int v900 = v135[4] & 0x3F;
                  if ((v152 & 4) != 0)
                  {
                    unsigned int v152 = ((v152 & 1) << 30) | (v565 << 24) | (v898 << 18) | (v899 << 12) | (v900 << 6) | v135[5] & 0x3F;
                    v566 = v135 + 6;
                  }
                  else
                  {
                    unsigned int v152 = ((v152 & 3) << 24) | (v565 << 18) | (v898 << 12) | (v899 << 6) | v900;
                    v566 = v135 + 5;
                  }
                }
                else
                {
                  unsigned int v152 = ((v152 & 7) << 18) | (v565 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                  v566 = v135 + 4;
                }
              }
              else
              {
                unsigned int v152 = ((v152 & 0xF) << 12) | (v565 << 6) | v135[2] & 0x3F;
                v566 = v135 + 3;
              }
              v17[10] = v566;
            }
            else
            {
              v17[10] = v135 + 2;
              unsigned int v152 = v135[1] & 0x3F | ((v152 & 0x1F) << 6);
            }
          }
          uint64_t v23 = 0;
          BOOL v1050 = v152 - 10 >= 4 && v152 - 8232 >= 2;
          if (v1050 && v152 != 133) {
            goto LABEL_2529;
          }
          goto LABEL_2587;
        case 0x15u:
          long long v135 = v17[10];
          if ((unint64_t)v135 >= *v18) {
            goto LABEL_1954;
          }
          v17[10] = v135 + 1;
          unsigned int v153 = *v135;
          if (v16 && v153 >= 0xC0)
          {
            if ((v153 & 0x20) != 0)
            {
              int v567 = v135[1] & 0x3F;
              if ((v153 & 0x10) != 0)
              {
                if ((v153 & 8) != 0)
                {
                  int v901 = v135[2] & 0x3F;
                  int v902 = v135[3] & 0x3F;
                  int v903 = v135[4] & 0x3F;
                  if ((v153 & 4) != 0)
                  {
                    unsigned int v153 = ((v153 & 1) << 30) | (v567 << 24) | (v901 << 18) | (v902 << 12) | (v903 << 6) | v135[5] & 0x3F;
                    v568 = v135 + 6;
                  }
                  else
                  {
                    unsigned int v153 = ((v153 & 3) << 24) | (v567 << 18) | (v901 << 12) | (v902 << 6) | v903;
                    v568 = v135 + 5;
                  }
                }
                else
                {
                  unsigned int v153 = ((v153 & 7) << 18) | (v567 << 12) | ((v135[2] & 0x3F) << 6) | v135[3] & 0x3F;
                  v568 = v135 + 4;
                }
              }
              else
              {
                unsigned int v153 = ((v153 & 0xF) << 12) | (v567 << 6) | v135[2] & 0x3F;
                v568 = v135 + 3;
              }
              v17[10] = v568;
            }
            else
            {
              v17[10] = v135 + 2;
              unsigned int v153 = v135[1] & 0x3F | ((v153 & 0x1F) << 6);
            }
          }
          BOOL v1051 = v153 - 10 >= 4 && v153 - 8232 >= 2;
          if (!v1051 || v153 == 133) {
            goto LABEL_2529;
          }
          goto LABEL_1958;
        case 0x16u:
          long long v154 = v17[10];
          unint64_t v155 = *v18;
          if ((unint64_t)v154 >= v155)
          {
            unsigned int v313 = *v1436;
            if (!*v1436) {
              goto LABEL_1062;
            }
            __int32 v18 = v1434;
            if ((unint64_t)v154 > *v1433 || *v1430)
            {
              _DWORD *v1431 = 1;
              if (v313 > 1) {
                return 4294967294;
              }
            }
            goto LABEL_2113;
          }
          long long v156 = v154 + 1;
          v17[10] = v154 + 1;
          unsigned int v157 = *v154;
          if (v16 && v157 >= 0xC0)
          {
            if ((v157 & 0x20) != 0)
            {
              int v569 = *v156 & 0x3F;
              if ((v157 & 0x10) != 0)
              {
                if ((v157 & 8) != 0)
                {
                  int v904 = v154[2] & 0x3F;
                  int v905 = v154[3] & 0x3F;
                  int v906 = v154[4] & 0x3F;
                  if ((v157 & 4) != 0)
                  {
                    unsigned int v157 = ((v157 & 1) << 30) | (v569 << 24) | (v904 << 18) | (v905 << 12) | (v906 << 6) | v154[5] & 0x3F;
                    long long v156 = v154 + 6;
                  }
                  else
                  {
                    unsigned int v157 = ((v157 & 3) << 24) | (v569 << 18) | (v904 << 12) | (v905 << 6) | v906;
                    long long v156 = v154 + 5;
                  }
                }
                else
                {
                  unsigned int v157 = ((v157 & 7) << 18) | (v569 << 12) | ((v154[2] & 0x3F) << 6) | v154[3] & 0x3F;
                  long long v156 = v154 + 4;
                }
              }
              else
              {
                unsigned int v157 = ((v157 & 0xF) << 12) | (v569 << 6) | v154[2] & 0x3F;
                long long v156 = v154 + 3;
              }
              v17[10] = v156;
            }
            else
            {
              long long v156 = v154 + 2;
              v17[10] = v154 + 2;
              unsigned int v157 = v154[1] & 0x3F | ((v157 & 0x1F) << 6);
            }
          }
          v1052 = _pcre2_extuni_8(v157, v156, *(void *)(a7 + 152), v155, v1432, 0);
          a7 = v1437;
          v17[10] = v1052;
          if ((unint64_t)v1052 >= *(void *)(v1437 + 168))
          {
            unsigned int v1053 = *v1436;
            if (*v1436)
            {
              if ((unint64_t)v1052 > *v1433 || *v1430)
              {
                _DWORD *v1431 = 1;
                if (v1053 > 1) {
                  return 4294967294;
                }
              }
            }
          }
          ++*v17;
          goto LABEL_3443;
        case 0x17u:
          goto LABEL_285;
        case 0x18u:
          goto LABEL_293;
        case 0x19u:
          if ((*(unsigned char *)(a7 + 236) & 2) != 0) {
            goto LABEL_3375;
          }
          if ((*(unsigned char *)(a7 + 240) & 0x10) == 0)
          {
LABEL_285:
            uint64_t v158 = v17[10];
            uint64_t v159 = *v18;
            if ((unint64_t)v158 < *v18)
            {
              int v160 = *(_DWORD *)(a7 + 252);
              if (v160)
              {
                int is_newline_8 = _pcre2_is_newline_8(v158, v160, v159, v1425, v1432);
                __int32 v18 = v1434;
                int v16 = v1435;
                a7 = v1437;
                if (!is_newline_8) {
                  goto LABEL_1155;
                }
                uint64_t v158 = v17[10];
                uint64_t v159 = *v1434;
                uint64_t v162 = *v1425;
              }
              else
              {
                uint64_t v162 = *v1425;
                if ((unint64_t)v158 > v159 - v162
                  || *v158 != *(unsigned __int8 *)(a7 + 260)
                  || v162 != 1 && v158[1] != *(unsigned __int8 *)(a7 + 261))
                {
                  goto LABEL_1155;
                }
              }
              if (v158 != (unsigned __int8 *)(v159 - v162)) {
                goto LABEL_1155;
              }
            }
            int v163 = *v1436;
            if (*v1436)
            {
              _DWORD *v1431 = 1;
              if (v163 != 1) {
                return 4294967294;
              }
            }
            goto LABEL_1238;
          }
LABEL_293:
          if ((unint64_t)v17[10] < *v18) {
            goto LABEL_3375;
          }
          int v164 = *v1436;
          if (*v1436)
          {
            _DWORD *v1431 = 1;
            if (v164 != 1) {
              return 4294967294;
            }
          }
          goto LABEL_2529;
        case 0x1Au:
          int v165 = v17[10];
          uint64_t v166 = *v18;
          if ((unint64_t)v165 < *v18)
          {
            int v167 = *(_DWORD *)(a7 + 252);
            if (v167)
            {
              int v168 = _pcre2_is_newline_8(v165, v167, v166, v1425, v1432);
              __int32 v18 = v1434;
              int v16 = v1435;
              a7 = v1437;
              if (!v168) {
                goto LABEL_1155;
              }
              int v20 = *v17;
            }
            else
            {
              uint64_t v532 = *v1425;
              if ((unint64_t)v165 > v166 - v532
                || *v165 != *(unsigned __int8 *)(a7 + 260)
                || v532 != 1 && v165[1] != *(unsigned __int8 *)(a7 + 261))
              {
LABEL_1155:
                unsigned int v533 = *v1436;
                if (*v1436)
                {
                  v534 = v17[10];
                  if ((unint64_t)(v534 + 1) >= *v18
                    && !*(_DWORD *)(a7 + 252)
                    && *v1425 == 2
                    && *v534 == *(unsigned __int8 *)(a7 + 260))
                  {
                    _DWORD *v1431 = 1;
                    if (v533 > 1) {
                      return 4294967294;
                    }
                  }
                }
                goto LABEL_3375;
              }
            }
            goto LABEL_2529;
          }
          if ((*(unsigned char *)(a7 + 236) & 2) != 0) {
            goto LABEL_3375;
          }
          unsigned int v314 = *v1436;
          if (!*v1436) {
            goto LABEL_2529;
          }
          if ((unint64_t)v165 > *v1433)
          {
LABEL_635:
            _DWORD *v1431 = 1;
            if (v314 > 1) {
              return 4294967294;
            }
            goto LABEL_2529;
          }
          goto LABEL_634;
        case 0x1Bu:
          if (v17[10] != *(unsigned __int8 **)(a7 + 152) || (*(unsigned char *)(a7 + 236) & 1) != 0) {
            goto LABEL_3375;
          }
          goto LABEL_2529;
        case 0x1Cu:
          int v169 = v17[10];
          unint64_t v170 = *(void *)(a7 + 152);
          if ((*(unsigned char *)(a7 + 236) & 1) != 0 && v169 == (unsigned __int8 *)v170) {
            goto LABEL_3375;
          }
          if (v169 == (unsigned __int8 *)v170) {
            goto LABEL_2529;
          }
          if (v169 == (unsigned __int8 *)*v18 && (*(unsigned char *)(a7 + 242) & 0x20) == 0) {
            goto LABEL_3375;
          }
          int v171 = *(_DWORD *)(a7 + 252);
          if (v171)
          {
            if ((unint64_t)v169 <= v170) {
              goto LABEL_3375;
            }
            uint64_t v23 = _pcre2_was_newline_8(v169, v171, v170, v1425, v1432);
            if (!v23) {
              goto LABEL_177;
            }
            int v20 = *v17;
            a7 = v1437;
            int v16 = v1435;
            __int32 v18 = v1434;
          }
          else
          {
            uint64_t v581 = *v1425;
            if ((unint64_t)v169 < v170 + v581
              || v169[-v581] != *(unsigned __int8 *)(a7 + 260)
              || v581 != 1 && v169[-v581 + 1] != *(unsigned __int8 *)(a7 + 261))
            {
              goto LABEL_3375;
            }
          }
          goto LABEL_2529;
        case 0x1Du:
          if (v16)
          {
            unint64_t v172 = 1;
            v17[3] = (unsigned __int8 *)1;
            unint64_t *v17 = v20 + 1;
            unsigned int v173 = v20[1];
            if (v173 >= 0xC0)
            {
              if ((v173 & 0x20) != 0)
              {
                if ((v173 & 0x10) != 0)
                {
                  unint64_t v172 = 4;
                  uint64_t v840 = 5;
                  if ((v173 & 4) != 0) {
                    uint64_t v840 = 6;
                  }
                  if ((v173 & 8) != 0) {
                    unint64_t v172 = v840;
                  }
                }
                else
                {
                  unint64_t v172 = 3;
                }
              }
              else
              {
                unint64_t v172 = 2;
              }
              v17[3] = (unsigned __int8 *)v172;
            }
            long long v135 = v17[10];
            if (v172 <= *v18 - (unint64_t)v135)
            {
              v841 = v135 + 1;
              v842 = v20 + 2;
              v843 = (unsigned __int8 *)(v172 - 1);
              do
              {
                unint64_t *v17 = v842;
                int v844 = *(v842 - 1);
                v17[10] = v841;
                if (v844 != *(v841 - 1)) {
                  goto LABEL_1958;
                }
                v17[3] = v843;
                ++v841;
                ++v842;
                --v843;
              }
              while (v843 != (unsigned __int8 *)-1);
              continue;
            }
            if ((unint64_t)v135 >= *v18)
            {
LABEL_1954:
              unsigned int v119 = *v1436;
              if (*v1436)
              {
                if ((unint64_t)v135 <= *v1433) {
                  goto LABEL_1956;
                }
                goto LABEL_1957;
              }
            }
            goto LABEL_1958;
          }
          uint64_t v174 = v17[10];
          if ((uint64_t)(*v18 - (void)v174) <= 0)
          {
LABEL_640:
            int v316 = v1436;
LABEL_1137:
            unsigned int v530 = *v316;
            if (v530 && ((unint64_t)v174 > *v1433 || *v1430))
            {
              _DWORD *v1431 = 1;
              if (v530 > 1) {
                return 4294967294;
              }
            }
            goto LABEL_1958;
          }
          int v315 = v20[1];
          v17[10] = v174 + 1;
          if (v315 != *v174) {
            goto LABEL_1958;
          }
          goto LABEL_2001;
        case 0x1Eu:
          uint64_t v174 = v17[10];
          if ((unint64_t)v174 >= *v18) {
            goto LABEL_640;
          }
          if (!v16)
          {
            if ((v1421 & 0x20000) != 0)
            {
              int v510 = *v174;
              int v572 = v20[1];
              if (((char)v20[1] & 0x80000000) == 0)
              {
                uint64_t v573 = *(void *)(a7 + 88);
                int v509 = *(unsigned __int8 *)(v573 + v20[1]);
                int v510 = *(unsigned __int8 *)(v573 + *v174);
                goto LABEL_1999;
              }
              if (v510 != v572)
              {
                int v509 = *(_DWORD *)&_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v572 & 0x7F | 0x80] + 4] + v572;
                goto LABEL_1999;
              }
            }
            else
            {
              uint64_t v508 = *(void *)(a7 + 88);
              int v509 = *(unsigned __int8 *)(v508 + v20[1]);
              int v510 = *(unsigned __int8 *)(v508 + *v174);
LABEL_1999:
              if (v509 != v510) {
                goto LABEL_1958;
              }
            }
            v17[10] = v174 + 1;
LABEL_2001:
            unint64_t *v17 = v20 + 2;
            continue;
          }
          uint64_t v175 = 1;
          v17[3] = (unsigned __int8 *)1;
          long long v176 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          unsigned int v177 = v20[1];
          if (v177 >= 0xC0)
          {
            int v178 = v20[2] & 0x3F;
            if ((v177 & 0x20) != 0)
            {
              if ((v177 & 0x10) != 0)
              {
                if ((v177 & 8) != 0)
                {
                  int v1035 = v20[3] & 0x3F;
                  int v1036 = v20[4] & 0x3F;
                  int v1037 = v20[5] & 0x3F;
                  if ((v177 & 4) != 0)
                  {
                    unsigned int v177 = ((v177 & 1) << 30) | (v178 << 24) | (v1035 << 18) | (v1036 << 12) | (v1037 << 6) | v20[6] & 0x3F;
                    uint64_t v175 = 6;
                  }
                  else
                  {
                    unsigned int v177 = ((v177 & 3) << 24) | (v178 << 18) | (v1035 << 12) | (v1036 << 6) | v1037;
                    uint64_t v175 = 5;
                  }
                }
                else
                {
                  unsigned int v177 = ((v177 & 7) << 18) | (v178 << 12) | ((v20[3] & 0x3F) << 6) | v20[4] & 0x3F;
                  uint64_t v175 = 4;
                }
              }
              else
              {
                unsigned int v177 = ((v177 & 0xF) << 12) | (v178 << 6) | v20[3] & 0x3F;
                uint64_t v175 = 3;
              }
            }
            else
            {
              uint64_t v175 = 2;
              unsigned int v177 = v20[2] & 0x3F | ((v177 & 0x1F) << 6);
            }
            v17[3] = (unsigned __int8 *)v175;
          }
          if (v177 <= 0x7F)
          {
            if (*(unsigned __int8 *)(*(void *)(a7 + 88) + v177) != *(unsigned __int8 *)(*(void *)(a7 + 88) + *v174)) {
              goto LABEL_1958;
            }
            unint64_t *v17 = v20 + 2;
            v17[10] = v174 + 1;
            continue;
          }
          v17[10] = v174 + 1;
          unsigned int v1057 = *v174;
          if (v1057 >= 0xC0)
          {
            if ((v1057 & 0x20) != 0)
            {
              int v1058 = v174[1] & 0x3F;
              if ((v1057 & 0x10) != 0)
              {
                if ((v1057 & 8) != 0)
                {
                  int v1060 = v174[2] & 0x3F;
                  int v1061 = v174[3] & 0x3F;
                  int v1062 = v174[4] & 0x3F;
                  if ((v1057 & 4) != 0)
                  {
                    unsigned int v1057 = ((v1057 & 1) << 30) | (v1058 << 24) | (v1060 << 18) | (v1061 << 12) | (v1062 << 6) | v174[5] & 0x3F;
                    v1059 = v174 + 6;
                  }
                  else
                  {
                    unsigned int v1057 = ((v1057 & 3) << 24) | (v1058 << 18) | (v1060 << 12) | (v1061 << 6) | v1062;
                    v1059 = v174 + 5;
                  }
                }
                else
                {
                  unsigned int v1057 = ((v1057 & 7) << 18) | (v1058 << 12) | ((v174[2] & 0x3F) << 6) | v174[3] & 0x3F;
                  v1059 = v174 + 4;
                }
              }
              else
              {
                unsigned int v1057 = ((v1057 & 0xF) << 12) | (v1058 << 6) | v174[2] & 0x3F;
                v1059 = v174 + 3;
              }
              v17[10] = v1059;
            }
            else
            {
              v17[10] = v174 + 2;
              unsigned int v1057 = v174[1] & 0x3F | ((v1057 & 0x1F) << 6);
            }
          }
          unint64_t *v17 = &v176[v175];
          if (v1057 == v177) {
            continue;
          }
          uint64_t v23 = 0;
          if (v1057 == *(_DWORD *)&_pcre2_ucd_records_8[12
                                                       * _pcre2_ucd_stage2_8[v177 & 0x7F | (_pcre2_ucd_stage1_8[v177 >> 7] << 7)]
                                                       + 4]
                      + v177)
            continue;
LABEL_2587:
          while (2)
          {
            v1064 = v17[10];
            if ((unint64_t)v1064 > *(void *)(a7 + 192)) {
              *(void *)(a7 + 192) = v1064;
            }
            if (!*((_DWORD *)v17 + 12)) {
              return v23;
            }
            uint64_t v17 = (unsigned __int8 **)((unsigned __int8 *)v17 - v17[4]);
            *(_DWORD *)(*(void *)(a7 + 264) + 104) |= 2u;
            unsigned int v1065 = *((unsigned __int8 *)v17 + 72);
            uint64_t v22 = 4294967252;
            if (v1065 > 0x63)
            {
              switch(*((unsigned char *)v17 + 72))
              {
                case 0xC8:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1066 = *((_DWORD *)v17 + 14);
                  unsigned int v1067 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1066 + 1;
                  if (v1066 >= v1067) {
                    continue;
                  }
                  v1068 = v17[10];
                  if ((unint64_t)v1068 >= *v18)
                  {
LABEL_2881:
                    uint64_t v23 = 0;
                    unsigned int v1194 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1068 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1194 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1068 + 1;
                    unsigned int v1069 = *v1068;
                    if (v1069 < 0xC0) {
                      goto LABEL_3149;
                    }
                    if ((v1069 & 0x20) != 0)
                    {
                      int v1218 = v1068[1] & 0x3F;
                      if ((v1069 & 0x10) != 0)
                      {
                        if ((v1069 & 8) != 0)
                        {
                          int v1257 = v1068[2] & 0x3F;
                          int v1258 = v1068[3] & 0x3F;
                          int v1259 = v1068[4] & 0x3F;
                          if ((v1069 & 4) != 0)
                          {
                            unsigned int v1069 = ((v1069 & 1) << 30) | (v1218 << 24) | (v1257 << 18) | (v1258 << 12) | (v1259 << 6) | v1068[5] & 0x3F;
                            v1219 = v1068 + 6;
                          }
                          else
                          {
                            unsigned int v1069 = ((v1069 & 3) << 24) | (v1218 << 18) | (v1257 << 12) | (v1258 << 6) | v1259;
                            v1219 = v1068 + 5;
                          }
                        }
                        else
                        {
                          unsigned int v1069 = ((v1069 & 7) << 18) | (v1218 << 12) | ((v1068[2] & 0x3F) << 6) | v1068[3] & 0x3F;
                          v1219 = v1068 + 4;
                        }
                      }
                      else
                      {
                        unsigned int v1069 = ((v1069 & 0xF) << 12) | (v1218 << 6) | v1068[2] & 0x3F;
                        v1219 = v1068 + 3;
                      }
                      v17[10] = v1219;
                    }
                    else
                    {
                      v17[10] = v1068 + 2;
                      unsigned int v1069 = v1068[1] & 0x3F | ((v1069 & 0x1F) << 6);
                    }
                    if (v1069 < 0x100)
                    {
LABEL_3149:
                      uint64_t v23 = 0;
                      if ((v17[2][(unint64_t)v1069 >> 3] >> (v1069 & 7)))
                      {
LABEL_3544:
                        int v13 = 0;
                        a2 = *v17;
                        char v1390 = -56;
                        goto LABEL_3478;
                      }
                    }
                    else
                    {
                      uint64_t v23 = 0;
                      if (*((unsigned char *)v17 + 73) != 110) {
                        goto LABEL_3544;
                      }
                    }
                  }
                  continue;
                case 0xC9:
                  if (v23) {
                    continue;
                  }
                  v1106 = v17[10];
                  v17[10] = v1106 - 1;
                  if (v1106 <= v17[1]) {
                    continue;
                  }
                  if ((*(v1106 - 1) & 0xC0) == 0x80)
                  {
                    v1384 = v1106 - 2;
                    do
                    {
                      v17[10] = v1384;
                      char v1385 = *v1384--;
                    }
                    while ((v1385 & 0xC0) == 0x80);
                  }
                  uint64_t v90 = v12;
                  goto LABEL_3502;
                case 0xCA:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1107 = *((_DWORD *)v17 + 14);
                  unsigned int v1108 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1107 + 1;
                  if (v1107 >= v1108) {
                    continue;
                  }
                  v1109 = v17[10];
                  unint64_t v1110 = *v18;
                  v1111 = v17[3];
                  if ((unint64_t)v1109 <= *v18 - (unint64_t)v1111)
                  {
                    int v1112 = memcmp(v17[10], v17[2], (size_t)v17[3]);
                    __int32 v18 = v1434;
                    int v16 = v1435;
                    a7 = v1437;
                    if (!v1112) {
                      goto LABEL_3520;
                    }
                  }
                  v1111 = v17[5];
                  if (v1111 && (unint64_t)v1109 <= v1110 - (unint64_t)v1111)
                  {
                    int v1114 = memcmp(v1109, (char *)v17 + 74, (size_t)v17[5]);
                    __int32 v18 = v1434;
                    int v16 = v1435;
                    a7 = v1437;
                    if (!v1114)
                    {
LABEL_3520:
                      v17[10] = &v1111[(void)v1109];
LABEL_3536:
                      int v7 = a6;
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -54;
                      goto LABEL_3479;
                    }
                  }
                  uint64_t v23 = 0;
                  if ((unint64_t)v1109 >= v1110)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1115 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1109 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1115 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  continue;
                case 0xCB:
                  if (v23) {
                    continue;
                  }
                  v1338 = v17[10] - 1;
                  do
                  {
                    v17[10] = v1338;
                    char v1339 = *v1338--;
                  }
                  while ((v1339 & 0xC0) == 0x80);
                  unsigned int v347 = v17[1];
                  unsigned int v348 = v1338 + 1;
                  uint64_t v37 = v12;
                  goto LABEL_3395;
                case 0xCC:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1116 = *((_DWORD *)v17 + 14);
                  unsigned int v1117 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1116 + 1;
                  if (v1116 >= v1117) {
                    continue;
                  }
                  v1118 = v17[10];
                  if ((unint64_t)v1118 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1201 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1118 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1201 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1118 + 1;
                    unsigned int v1119 = *v1118;
                    if (v1119 >= 0xC0)
                    {
                      if ((v1119 & 0x20) != 0)
                      {
                        int v1220 = v1118[1] & 0x3F;
                        if ((v1119 & 0x10) != 0)
                        {
                          if ((v1119 & 8) != 0)
                          {
                            int v1260 = v1118[2] & 0x3F;
                            int v1261 = v1118[3] & 0x3F;
                            int v1262 = v1118[4] & 0x3F;
                            if ((v1119 & 4) != 0)
                            {
                              unsigned int v1119 = ((v1119 & 1) << 30) | (v1220 << 24) | (v1260 << 18) | (v1261 << 12) | (v1262 << 6) | v1118[5] & 0x3F;
                              v1221 = v1118 + 6;
                            }
                            else
                            {
                              unsigned int v1119 = ((v1119 & 3) << 24) | (v1220 << 18) | (v1260 << 12) | (v1261 << 6) | v1262;
                              v1221 = v1118 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1119 = ((v1119 & 7) << 18) | (v1220 << 12) | ((v1118[2] & 0x3F) << 6) | v1118[3] & 0x3F;
                            v1221 = v1118 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1119 = ((v1119 & 0xF) << 12) | (v1220 << 6) | v1118[2] & 0x3F;
                          v1221 = v1118 + 3;
                        }
                        v17[10] = v1221;
                      }
                      else
                      {
                        v17[10] = v1118 + 2;
                        unsigned int v1119 = v1118[1] & 0x3F | ((v1119 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if (*((_DWORD *)v17 + 16) != v1119)
                    {
                      uint64_t v23 = 0;
                      if (*((_DWORD *)v17 + 17) != v1119)
                      {
                        int v13 = 0;
                        a2 = *v17;
                        char v1390 = -52;
                        goto LABEL_3478;
                      }
                    }
                  }
                  continue;
                case 0xCD:
                  if (v23) {
                    continue;
                  }
                  v1340 = v17[10] - 1;
                  do
                  {
                    v17[10] = v1340;
                    char v1341 = *v1340--;
                  }
                  while ((v1341 & 0xC0) == 0x80);
                  uint64_t v280 = v17[1];
                  int v281 = v1340 + 1;
                  uint64_t v37 = v12;
                  goto LABEL_3399;
                case 0xCE:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1120 = *((_DWORD *)v17 + 14);
                  unsigned int v1121 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1120 + 1;
                  if (v1120 >= v1121) {
                    continue;
                  }
                  v1122 = v17[10];
                  if ((unint64_t)v1122 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1202 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1122 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1202 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1122 + 1;
                    unsigned int v1123 = *v1122;
                    if (v1123 >= 0xC0)
                    {
                      if ((v1123 & 0x20) != 0)
                      {
                        int v1222 = v1122[1] & 0x3F;
                        if ((v1123 & 0x10) != 0)
                        {
                          if ((v1123 & 8) != 0)
                          {
                            int v1263 = v1122[2] & 0x3F;
                            int v1264 = v1122[3] & 0x3F;
                            int v1265 = v1122[4] & 0x3F;
                            if ((v1123 & 4) != 0)
                            {
                              unsigned int v1123 = ((v1123 & 1) << 30) | (v1222 << 24) | (v1263 << 18) | (v1264 << 12) | (v1265 << 6) | v1122[5] & 0x3F;
                              v1223 = v1122 + 6;
                            }
                            else
                            {
                              unsigned int v1123 = ((v1123 & 3) << 24) | (v1222 << 18) | (v1263 << 12) | (v1264 << 6) | v1265;
                              v1223 = v1122 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1123 = ((v1123 & 7) << 18) | (v1222 << 12) | ((v1122[2] & 0x3F) << 6) | v1122[3] & 0x3F;
                            v1223 = v1122 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1123 = ((v1123 & 0xF) << 12) | (v1222 << 6) | v1122[2] & 0x3F;
                          v1223 = v1122 + 3;
                        }
                        v17[10] = v1223;
                      }
                      else
                      {
                        v17[10] = v1122 + 2;
                        unsigned int v1123 = v1122[1] & 0x3F | ((v1123 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if (*((_DWORD *)v17 + 16) != v1123)
                    {
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -50;
                      goto LABEL_3478;
                    }
                  }
                  continue;
                case 0xCF:
                  if (v23) {
                    continue;
                  }
                  v1342 = v17[10] - 1;
                  do
                  {
                    v17[10] = v1342;
                    char v1343 = *v1342--;
                  }
                  while ((v1343 & 0xC0) == 0x80);
                  char v263 = v17[1];
                  int8x16_t v264 = v1342 + 1;
                  uint64_t v37 = v12;
                  goto LABEL_3403;
                case 0xD0:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1124 = *((_DWORD *)v17 + 14);
                  unsigned int v1125 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1124 + 1;
                  if (v1124 >= v1125) {
                    continue;
                  }
                  v1126 = v17[10];
                  if ((unint64_t)v1126 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1203 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1126 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1203 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1126 + 1;
                    if (v16)
                    {
                      unsigned int v1127 = *v1126;
                      if (v1127 >= 0xC0)
                      {
                        if ((v1127 & 0x20) != 0)
                        {
                          uint64_t v1224 = 4;
                          uint64_t v1225 = 5;
                          if ((v1127 & 4) != 0) {
                            uint64_t v1225 = 6;
                          }
                          if ((v1127 & 8) != 0) {
                            uint64_t v1224 = v1225;
                          }
                          if ((v1127 & 0x10) != 0) {
                            uint64_t v1128 = v1224;
                          }
                          else {
                            uint64_t v1128 = 3;
                          }
                        }
                        else
                        {
                          uint64_t v1128 = 2;
                        }
                        v17[10] = &v1126[v1128];
                      }
                    }
                    uint64_t v23 = 0;
                    if (*((_DWORD *)v17 + 16) != 15)
                    {
                      uint64_t v183 = v12;
                      int v7 = a6;
LABEL_3543:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -48;
                      uint64_t v12 = v183;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD1:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1129 = *((_DWORD *)v17 + 14);
                  unsigned int v1130 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1129 + 1;
                  if (v1129 >= v1130) {
                    continue;
                  }
                  v1131 = v17[10];
                  if ((unint64_t)v1131 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1204 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1131 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1204 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1131 + 1;
                    unsigned int v1132 = *v1131;
                    if (v16 && v1132 >= 0xC0)
                    {
                      if ((v1132 & 0x20) != 0)
                      {
                        int v1226 = v1131[1] & 0x3F;
                        if ((v1132 & 0x10) != 0)
                        {
                          if ((v1132 & 8) != 0)
                          {
                            int v1266 = v1131[2] & 0x3F;
                            int v1267 = v1131[3] & 0x3F;
                            int v1268 = v1131[4] & 0x3F;
                            if ((v1132 & 4) != 0)
                            {
                              unsigned int v1132 = ((v1132 & 1) << 30) | (v1226 << 24) | (v1266 << 18) | (v1267 << 12) | (v1268 << 6) | v1131[5] & 0x3F;
                              v1227 = v1131 + 6;
                            }
                            else
                            {
                              unsigned int v1132 = ((v1132 & 3) << 24) | (v1226 << 18) | (v1266 << 12) | (v1267 << 6) | v1268;
                              v1227 = v1131 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1132 = ((v1132 & 7) << 18) | (v1226 << 12) | ((v1131[2] & 0x3F) << 6) | v1131[3] & 0x3F;
                            v1227 = v1131 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1132 = ((v1132 & 0xF) << 12) | (v1226 << 6) | v1131[2] & 0x3F;
                          v1227 = v1131 + 3;
                        }
                        v17[10] = v1227;
                      }
                      else
                      {
                        v17[10] = v1131 + 2;
                        unsigned int v1132 = v1131[1] & 0x3F | ((v1132 & 0x1F) << 6);
                      }
                    }
                    unsigned int v1308 = _pcre2_ucd_records_8[12
                                               * _pcre2_ucd_stage2_8[v1132 & 0x7F | (_pcre2_ucd_stage1_8[v1132 >> 7] << 7)]
                                               + 1];
                    BOOL v110 = v1308 > 9;
                    int v1309 = (1 << v1308) & 0x320;
                    uint64_t v23 = 0;
                    if (v110 || v1309 == 0)
                    {
                      if (*((_DWORD *)v17 + 16) == 15)
                      {
LABEL_3545:
                        int v7 = a6;
LABEL_3546:
                        int v13 = 0;
                        a2 = *v17;
                        char v1390 = -47;
                        goto LABEL_3479;
                      }
                    }
                    else if (*((_DWORD *)v17 + 16) != 15)
                    {
                      goto LABEL_3545;
                    }
                  }
                  continue;
                case 0xD2:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1133 = *((_DWORD *)v17 + 14);
                  unsigned int v1134 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1133 + 1;
                  if (v1133 >= v1134) {
                    continue;
                  }
                  v1135 = v17[10];
                  if ((unint64_t)v1135 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1205 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1135 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1205 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1135 + 1;
                    unsigned int v1136 = *v1135;
                    if (v16 && v1136 >= 0xC0)
                    {
                      if ((v1136 & 0x20) != 0)
                      {
                        int v1228 = v1135[1] & 0x3F;
                        if ((v1136 & 0x10) != 0)
                        {
                          if ((v1136 & 8) != 0)
                          {
                            int v1269 = v1135[2] & 0x3F;
                            int v1270 = v1135[3] & 0x3F;
                            int v1271 = v1135[4] & 0x3F;
                            if ((v1136 & 4) != 0)
                            {
                              unsigned int v1136 = ((v1136 & 1) << 30) | (v1228 << 24) | (v1269 << 18) | (v1270 << 12) | (v1271 << 6) | v1135[5] & 0x3F;
                              v1229 = v1135 + 6;
                            }
                            else
                            {
                              unsigned int v1136 = ((v1136 & 3) << 24) | (v1228 << 18) | (v1269 << 12) | (v1270 << 6) | v1271;
                              v1229 = v1135 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1136 = ((v1136 & 7) << 18) | (v1228 << 12) | ((v1135[2] & 0x3F) << 6) | v1135[3] & 0x3F;
                            v1229 = v1135 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1136 = ((v1136 & 0xF) << 12) | (v1228 << 6) | v1135[2] & 0x3F;
                          v1229 = v1135 + 3;
                        }
                        v17[10] = v1229;
                      }
                      else
                      {
                        v17[10] = v1135 + 2;
                        unsigned int v1136 = v1135[1] & 0x3F | ((v1136 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                  * _pcre2_ucd_stage2_8[v1136 & 0x7F | (_pcre2_ucd_stage1_8[v1136 >> 7] << 7)]
                                                                  + 1]] != *((_DWORD *)v17 + 17)) == (*((_DWORD *)v17 + 16) == 15))
                    {
                      int v7 = a6;
LABEL_3547:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -46;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD3:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1137 = *((_DWORD *)v17 + 14);
                  unsigned int v1138 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1137 + 1;
                  if (v1137 >= v1138) {
                    continue;
                  }
                  v1139 = v17[10];
                  if ((unint64_t)v1139 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1206 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1139 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1206 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1139 + 1;
                    unsigned int v1140 = *v1139;
                    if (v16 && v1140 >= 0xC0)
                    {
                      if ((v1140 & 0x20) != 0)
                      {
                        int v1230 = v1139[1] & 0x3F;
                        if ((v1140 & 0x10) != 0)
                        {
                          if ((v1140 & 8) != 0)
                          {
                            int v1272 = v1139[2] & 0x3F;
                            int v1273 = v1139[3] & 0x3F;
                            int v1274 = v1139[4] & 0x3F;
                            if ((v1140 & 4) != 0)
                            {
                              unsigned int v1140 = ((v1140 & 1) << 30) | (v1230 << 24) | (v1272 << 18) | (v1273 << 12) | (v1274 << 6) | v1139[5] & 0x3F;
                              v1231 = v1139 + 6;
                            }
                            else
                            {
                              unsigned int v1140 = ((v1140 & 3) << 24) | (v1230 << 18) | (v1272 << 12) | (v1273 << 6) | v1274;
                              v1231 = v1139 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1140 = ((v1140 & 7) << 18) | (v1230 << 12) | ((v1139[2] & 0x3F) << 6) | v1139[3] & 0x3F;
                            v1231 = v1139 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1140 = ((v1140 & 0xF) << 12) | (v1230 << 6) | v1139[2] & 0x3F;
                          v1231 = v1139 + 3;
                        }
                        v17[10] = v1231;
                      }
                      else
                      {
                        v17[10] = v1139 + 2;
                        unsigned int v1140 = v1139[1] & 0x3F | ((v1140 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if ((*((_DWORD *)v17 + 17) != _pcre2_ucd_records_8[12
                                                                      * _pcre2_ucd_stage2_8[v1140 & 0x7F | (_pcre2_ucd_stage1_8[v1140 >> 7] << 7)]
                                                                      + 1]) == (*((_DWORD *)v17 + 16) == 15))
                    {
                      int v7 = a6;
LABEL_3548:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -45;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD4:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1141 = *((_DWORD *)v17 + 14);
                  unsigned int v1142 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1141 + 1;
                  if (v1141 >= v1142) {
                    continue;
                  }
                  v1143 = v17[10];
                  if ((unint64_t)v1143 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1207 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1143 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1207 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1143 + 1;
                    unsigned int v1144 = *v1143;
                    if (v16 && v1144 >= 0xC0)
                    {
                      if ((v1144 & 0x20) != 0)
                      {
                        int v1232 = v1143[1] & 0x3F;
                        if ((v1144 & 0x10) != 0)
                        {
                          if ((v1144 & 8) != 0)
                          {
                            int v1275 = v1143[2] & 0x3F;
                            int v1276 = v1143[3] & 0x3F;
                            int v1277 = v1143[4] & 0x3F;
                            if ((v1144 & 4) != 0)
                            {
                              unsigned int v1144 = ((v1144 & 1) << 30) | (v1232 << 24) | (v1275 << 18) | (v1276 << 12) | (v1277 << 6) | v1143[5] & 0x3F;
                              v1233 = v1143 + 6;
                            }
                            else
                            {
                              unsigned int v1144 = ((v1144 & 3) << 24) | (v1232 << 18) | (v1275 << 12) | (v1276 << 6) | v1277;
                              v1233 = v1143 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1144 = ((v1144 & 7) << 18) | (v1232 << 12) | ((v1143[2] & 0x3F) << 6) | v1143[3] & 0x3F;
                            v1233 = v1143 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1144 = ((v1144 & 0xF) << 12) | (v1232 << 6) | v1143[2] & 0x3F;
                          v1233 = v1143 + 3;
                        }
                        v17[10] = v1233;
                      }
                      else
                      {
                        v17[10] = v1143 + 2;
                        unsigned int v1144 = v1143[1] & 0x3F | ((v1144 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if ((*((_DWORD *)v17 + 17) != _pcre2_ucd_records_8[12
                                                                      * _pcre2_ucd_stage2_8[v1144 & 0x7F | (_pcre2_ucd_stage1_8[v1144 >> 7] << 7)]]) == (*((_DWORD *)v17 + 16) == 15))
                    {
                      int v7 = a6;
LABEL_3549:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -44;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD5:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1145 = *((_DWORD *)v17 + 14);
                  unsigned int v1146 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1145 + 1;
                  if (v1145 >= v1146) {
                    continue;
                  }
                  v1147 = v17[10];
                  if ((unint64_t)v1147 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1208 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1147 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1208 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1147 + 1;
                    unsigned int v1148 = *v1147;
                    if (v16 && v1148 >= 0xC0)
                    {
                      if ((v1148 & 0x20) != 0)
                      {
                        int v1234 = v1147[1] & 0x3F;
                        if ((v1148 & 0x10) != 0)
                        {
                          if ((v1148 & 8) != 0)
                          {
                            int v1278 = v1147[2] & 0x3F;
                            int v1279 = v1147[3] & 0x3F;
                            int v1280 = v1147[4] & 0x3F;
                            if ((v1148 & 4) != 0)
                            {
                              unsigned int v1148 = ((v1148 & 1) << 30) | (v1234 << 24) | (v1278 << 18) | (v1279 << 12) | (v1280 << 6) | v1147[5] & 0x3F;
                              v1235 = v1147 + 6;
                            }
                            else
                            {
                              unsigned int v1148 = ((v1148 & 3) << 24) | (v1234 << 18) | (v1278 << 12) | (v1279 << 6) | v1280;
                              v1235 = v1147 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1148 = ((v1148 & 7) << 18) | (v1234 << 12) | ((v1147[2] & 0x3F) << 6) | v1147[3] & 0x3F;
                            v1235 = v1147 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1148 = ((v1148 & 0xF) << 12) | (v1234 << 6) | v1147[2] & 0x3F;
                          v1235 = v1147 + 3;
                        }
                        v17[10] = v1235;
                      }
                      else
                      {
                        v17[10] = v1147 + 2;
                        unsigned int v1148 = v1147[1] & 0x3F | ((v1148 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if (((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                   * _pcre2_ucd_stage2_8[v1148 & 0x7F | (_pcre2_ucd_stage1_8[v1148 >> 7] << 7)]
                                                                   + 1]] & 0xFFFFFFFD) != 1) == (*((_DWORD *)v17 + 16) == 15))
                    {
                      int v7 = a6;
LABEL_3550:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -43;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD6:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1149 = *((_DWORD *)v17 + 14);
                  unsigned int v1150 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1149 + 1;
                  if (v1149 >= v1150) {
                    continue;
                  }
                  v1151 = v17[10];
                  if ((unint64_t)v1151 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1209 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1151 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1209 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1151 + 1;
                    int v1152 = *v1151;
                    if (v16 && v1152 >= 0xC0)
                    {
                      if ((v1152 & 0x20) != 0)
                      {
                        int v1236 = v1151[1] & 0x3F;
                        if ((v1152 & 0x10) != 0)
                        {
                          if ((v1152 & 8) != 0)
                          {
                            int v1281 = v1151[2] & 0x3F;
                            int v1282 = v1151[3] & 0x3F;
                            int v1283 = v1151[4] & 0x3F;
                            if ((v1152 & 4) != 0)
                            {
                              int v1152 = ((v1152 & 1) << 30) | (v1236 << 24) | (v1281 << 18) | (v1282 << 12) | (v1283 << 6) | v1151[5] & 0x3F;
                              v1237 = v1151 + 6;
                            }
                            else
                            {
                              int v1152 = ((v1152 & 3) << 24) | (v1236 << 18) | (v1281 << 12) | (v1282 << 6) | v1283;
                              v1237 = v1151 + 5;
                            }
                          }
                          else
                          {
                            int v1152 = ((v1152 & 7) << 18) | (v1236 << 12) | ((v1151[2] & 0x3F) << 6) | v1151[3] & 0x3F;
                            v1237 = v1151 + 4;
                          }
                        }
                        else
                        {
                          int v1152 = ((v1152 & 0xF) << 12) | (v1236 << 6) | v1151[2] & 0x3F;
                          v1237 = v1151 + 3;
                        }
                        v17[10] = v1237;
                      }
                      else
                      {
                        v17[10] = v1151 + 2;
                        int v1152 = v1151[1] & 0x3F | ((v1152 & 0x1F) << 6);
                      }
                    }
                    if (v1152 < 0x2000)
                    {
                      if (v1152 > 132)
                      {
                        if (v1152 > 5759)
                        {
                          if (v1152 != 5760 && v1152 != 6158)
                          {
LABEL_3207:
                            uint64_t v23 = 0;
                            if ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                          * _pcre2_ucd_stage2_8[v1152 & 0x7F | (_pcre2_ucd_stage1_8[v1152 >> 7] << 7)]
                                                                          + 1]] != 6) == (*((_DWORD *)v17 + 16) == 15))
                              goto LABEL_3551;
                            continue;
                          }
                        }
                        else if (v1152 != 133 && v1152 != 160)
                        {
                          goto LABEL_3207;
                        }
                      }
                      else if (v1152 > 0x20 || ((1 << v1152) & 0x100003E00) == 0)
                      {
                        goto LABEL_3207;
                      }
                    }
                    else if ((v1152 - 0x2000) >= 0xB)
                    {
                      BOOL v1311 = (v1152 - 8232) > 0x37
                           || ((1 << (v1152 - 40)) & 0x80000000000083) == 0;
                      if (v1311 && v1152 != 12288) {
                        goto LABEL_3207;
                      }
                    }
                    uint64_t v23 = 0;
                    if (*((_DWORD *)v17 + 16) != 15)
                    {
LABEL_3551:
                      int v7 = a6;
LABEL_3552:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -42;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD7:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1153 = *((_DWORD *)v17 + 14);
                  unsigned int v1154 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1153 + 1;
                  if (v1153 >= v1154) {
                    continue;
                  }
                  v1155 = v17[10];
                  if ((unint64_t)v1155 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1210 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1155 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1210 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1155 + 1;
                    unsigned int v1156 = *v1155;
                    if (v16 && v1156 >= 0xC0)
                    {
                      if ((v1156 & 0x20) != 0)
                      {
                        int v1238 = v1155[1] & 0x3F;
                        if ((v1156 & 0x10) != 0)
                        {
                          if ((v1156 & 8) != 0)
                          {
                            int v1284 = v1155[2] & 0x3F;
                            int v1285 = v1155[3] & 0x3F;
                            int v1286 = v1155[4] & 0x3F;
                            if ((v1156 & 4) != 0)
                            {
                              unsigned int v1156 = ((v1156 & 1) << 30) | (v1238 << 24) | (v1284 << 18) | (v1285 << 12) | (v1286 << 6) | v1155[5] & 0x3F;
                              v1239 = v1155 + 6;
                            }
                            else
                            {
                              unsigned int v1156 = ((v1156 & 3) << 24) | (v1238 << 18) | (v1284 << 12) | (v1285 << 6) | v1286;
                              v1239 = v1155 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1156 = ((v1156 & 7) << 18) | (v1238 << 12) | ((v1155[2] & 0x3F) << 6) | v1155[3] & 0x3F;
                            v1239 = v1155 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1156 = ((v1156 & 0xF) << 12) | (v1238 << 6) | v1155[2] & 0x3F;
                          v1239 = v1155 + 3;
                        }
                        v17[10] = v1239;
                      }
                      else
                      {
                        v17[10] = v1155 + 2;
                        unsigned int v1156 = v1155[1] & 0x3F | ((v1156 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    BOOL v1315 = v1156 == 95
                         || (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                     * _pcre2_ucd_stage2_8[v1156 & 0x7F | (_pcre2_ucd_stage1_8[v1156 >> 7] << 7)]
                                                                     + 1]] & 0xFFFFFFFD) == 1;
                    if ((((*((_DWORD *)v17 + 16) != 15) ^ v1315) & 1) == 0)
                    {
                      int v7 = a6;
LABEL_3553:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -41;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD8:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1157 = *((_DWORD *)v17 + 14);
                  unsigned int v1158 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1157 + 1;
                  if (v1157 >= v1158) {
                    continue;
                  }
                  v1159 = v17[10];
                  if ((unint64_t)v1159 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1211 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1159 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1211 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1159 + 1;
                    unsigned int v1160 = *v1159;
                    if (v16 && v1160 >= 0xC0)
                    {
                      if ((v1160 & 0x20) != 0)
                      {
                        int v1240 = v1159[1] & 0x3F;
                        if ((v1160 & 0x10) != 0)
                        {
                          if ((v1160 & 8) != 0)
                          {
                            int v1287 = v1159[2] & 0x3F;
                            int v1288 = v1159[3] & 0x3F;
                            int v1289 = v1159[4] & 0x3F;
                            if ((v1160 & 4) != 0)
                            {
                              unsigned int v1160 = ((v1160 & 1) << 30) | (v1240 << 24) | (v1287 << 18) | (v1288 << 12) | (v1289 << 6) | v1159[5] & 0x3F;
                              v1241 = v1159 + 6;
                            }
                            else
                            {
                              unsigned int v1160 = ((v1160 & 3) << 24) | (v1240 << 18) | (v1287 << 12) | (v1288 << 6) | v1289;
                              v1241 = v1159 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1160 = ((v1160 & 7) << 18) | (v1240 << 12) | ((v1159[2] & 0x3F) << 6) | v1159[3] & 0x3F;
                            v1241 = v1159 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1160 = ((v1160 & 0xF) << 12) | (v1240 << 6) | v1159[2] & 0x3F;
                          v1241 = v1159 + 3;
                        }
                        v17[10] = v1241;
                      }
                      else
                      {
                        v17[10] = v1159 + 2;
                        unsigned int v1160 = v1159[1] & 0x3F | ((v1160 & 0x1F) << 6);
                      }
                    }
                    v1316 = &_pcre2_ucd_caseless_sets_8[*((unsigned int *)v17 + 17)];
                    do
                    {
                      unsigned int v1317 = *v1316;
                      if (v1160 < *v1316)
                      {
                        uint64_t v23 = 0;
                        if (*((_DWORD *)v17 + 16) == 15) {
                          goto LABEL_3554;
                        }
                        goto LABEL_2587;
                      }
                      ++v1316;
                    }
                    while (v1160 != v1317);
                    uint64_t v23 = 0;
                    if (*((_DWORD *)v17 + 16) != 15)
                    {
LABEL_3554:
                      int v7 = a6;
LABEL_3555:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -40;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xD9:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1161 = *((_DWORD *)v17 + 14);
                  unsigned int v1162 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1161 + 1;
                  if (v1161 >= v1162) {
                    continue;
                  }
                  v1163 = v17[10];
                  if ((unint64_t)v1163 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1212 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1163 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1212 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1163 + 1;
                    unsigned int v1164 = *v1163;
                    if (v16 && v1164 >= 0xC0)
                    {
                      if ((v1164 & 0x20) != 0)
                      {
                        int v1242 = v1163[1] & 0x3F;
                        if ((v1164 & 0x10) != 0)
                        {
                          if ((v1164 & 8) != 0)
                          {
                            int v1290 = v1163[2] & 0x3F;
                            int v1291 = v1163[3] & 0x3F;
                            int v1292 = v1163[4] & 0x3F;
                            if ((v1164 & 4) != 0)
                            {
                              unsigned int v1164 = ((v1164 & 1) << 30) | (v1242 << 24) | (v1290 << 18) | (v1291 << 12) | (v1292 << 6) | v1163[5] & 0x3F;
                              v1243 = v1163 + 6;
                            }
                            else
                            {
                              unsigned int v1164 = ((v1164 & 3) << 24) | (v1242 << 18) | (v1290 << 12) | (v1291 << 6) | v1292;
                              v1243 = v1163 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1164 = ((v1164 & 7) << 18) | (v1242 << 12) | ((v1163[2] & 0x3F) << 6) | v1163[3] & 0x3F;
                            v1243 = v1163 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1164 = ((v1164 & 0xF) << 12) | (v1242 << 6) | v1163[2] & 0x3F;
                          v1243 = v1163 + 3;
                        }
                        v17[10] = v1243;
                      }
                      else
                      {
                        v17[10] = v1163 + 2;
                        unsigned int v1164 = v1163[1] & 0x3F | ((v1164 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if (v1164 - 36 > 0x3C || ((1 << (v1164 - 36)) & 0x1000000010000001) == 0)
                    {
                      BOOL v1320 = v1164 >> 13 > 6 || (v1164 - 160) >> 5 < 0x6BB;
                      if (((v1320 ^ (*((_DWORD *)v17 + 16) != 15)) & 1) == 0)
                      {
LABEL_3556:
                        int v7 = a6;
LABEL_3557:
                        int v13 = 0;
                        a2 = *v17;
                        char v1390 = -39;
                        goto LABEL_3479;
                      }
                    }
                    else if (*((_DWORD *)v17 + 16) != 15)
                    {
                      goto LABEL_3556;
                    }
                  }
                  continue;
                case 0xDA:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1165 = *((_DWORD *)v17 + 14);
                  unsigned int v1166 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1165 + 1;
                  if (v1165 >= v1166) {
                    continue;
                  }
                  v1167 = v17[10];
                  unint64_t v1168 = *v18;
                  if ((unint64_t)v1167 >= v1168)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1169 = *v1436;
                    __int32 v18 = v1434;
                    if (*v1436)
                    {
                      if ((unint64_t)v1167 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1169 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                    continue;
                  }
                  v1387 = v1167 + 1;
                  v17[10] = v1167 + 1;
                  unsigned int v1388 = *v1167;
                  if (v16)
                  {
                    int v7 = a6;
                    if (v1388 >= 0xC0)
                    {
                      if ((v1388 & 0x20) != 0)
                      {
                        int v1400 = *v1387 & 0x3F;
                        if ((v1388 & 0x10) != 0)
                        {
                          if ((v1388 & 8) != 0)
                          {
                            int v1405 = v1167[2] & 0x3F;
                            int v1406 = v1167[3] & 0x3F;
                            int v1407 = v1167[4] & 0x3F;
                            if ((v1388 & 4) != 0)
                            {
                              unsigned int v1388 = ((v1388 & 1) << 30) | (v1400 << 24) | (v1405 << 18) | (v1406 << 12) | (v1407 << 6) | v1167[5] & 0x3F;
                              v1387 = v1167 + 6;
                            }
                            else
                            {
                              unsigned int v1388 = ((v1388 & 3) << 24) | (v1400 << 18) | (v1405 << 12) | (v1406 << 6) | v1407;
                              v1387 = v1167 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1388 = ((v1388 & 7) << 18) | (v1400 << 12) | ((v1167[2] & 0x3F) << 6) | v1167[3] & 0x3F;
                            v1387 = v1167 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1388 = ((v1388 & 0xF) << 12) | (v1400 << 6) | v1167[2] & 0x3F;
                          v1387 = v1167 + 3;
                        }
                        v17[10] = v1387;
                      }
                      else
                      {
                        v1387 = v1167 + 2;
                        v17[10] = v1167 + 2;
                        unsigned int v1388 = v1167[1] & 0x3F | ((v1388 & 0x1F) << 6);
                      }
                    }
                  }
                  else
                  {
                    int v7 = a6;
                  }
                  v1409 = _pcre2_extuni_8(v1388, v1387, *(void *)(a7 + 152), v1168, v1432, 0);
                  a7 = v1437;
                  v17[10] = v1409;
                  if ((unint64_t)v1409 >= *(void *)(v1437 + 168))
                  {
                    unsigned int v1410 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1409 > *v1433 || *v1430)
                      {
                        _DWORD *v1431 = 1;
                        if (v1410 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  goto LABEL_3646;
                case 0xDB:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1170 = *((_DWORD *)v17 + 14);
                  unsigned int v1171 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1170 + 1;
                  if (v1170 >= v1171) {
                    continue;
                  }
                  v1172 = v17[10];
                  uint64_t v1173 = *v18;
                  if ((unint64_t)v1172 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1213 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1172 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1213 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    if (*((_DWORD *)v17 + 16) == 12)
                    {
                      int v1174 = *(_DWORD *)(a7 + 252);
                      if (v1174)
                      {
                        int v1175 = _pcre2_is_newline_8(v17[10], v1174, v1173, v1425, v1432);
                        __int32 v18 = v1434;
                        int v16 = v1435;
                        a7 = v1437;
                        int v1176 = v1175;
                        uint64_t v23 = 0;
                        if (v1176) {
                          continue;
                        }
                        v1172 = v17[10];
                      }
                      else
                      {
                        uint64_t v1253 = *v1425;
                        if ((unint64_t)v1172 <= v1173 - v1253 && *v1172 == *(unsigned __int8 *)(a7 + 260))
                        {
                          uint64_t v23 = 0;
                          if (v1253 == 1) {
                            continue;
                          }
                          uint64_t v23 = 0;
                          if (v1172[1] == *(unsigned __int8 *)(a7 + 261)) {
                            continue;
                          }
                        }
                      }
                    }
                    v1254 = v1172 + 1;
                    v17[10] = v1172 + 1;
                    int v1255 = *v1172;
                    if (v1255 >= 0xC0)
                    {
                      if ((v1255 & 0x20) != 0)
                      {
                        int v1256 = *v1254 & 0x3F;
                        if ((v1255 & 0x10) != 0)
                        {
                          if ((v1255 & 8) != 0)
                          {
                            int v1305 = v1172[2] & 0x3F;
                            int v1306 = v1172[3] & 0x3F;
                            int v1307 = v1172[4] & 0x3F;
                            if ((v1255 & 4) != 0)
                            {
                              int v1255 = ((v1255 & 1) << 30) | (v1256 << 24) | (v1305 << 18) | (v1306 << 12) | (v1307 << 6) | v1172[5] & 0x3F;
                              v1254 = v1172 + 6;
                            }
                            else
                            {
                              int v1255 = ((v1255 & 3) << 24) | (v1256 << 18) | (v1305 << 12) | (v1306 << 6) | v1307;
                              v1254 = v1172 + 5;
                            }
                          }
                          else
                          {
                            int v1255 = ((v1255 & 7) << 18) | (v1256 << 12) | ((v1172[2] & 0x3F) << 6) | v1172[3] & 0x3F;
                            v1254 = v1172 + 4;
                          }
                        }
                        else
                        {
                          int v1255 = ((v1255 & 0xF) << 12) | (v1256 << 6) | v1172[2] & 0x3F;
                          v1254 = v1172 + 3;
                        }
                        v17[10] = v1254;
                      }
                      else
                      {
                        v1254 = v1172 + 2;
                        v17[10] = v1172 + 2;
                        int v1255 = v1172[1] & 0x3F | ((v1255 & 0x1F) << 6);
                      }
                    }
                    uint64_t v22 = 4294967252;
                    switch(*((_DWORD *)v17 + 16))
                    {
                      case 6:
                        if (v1255 > 0xFF) {
                          goto LABEL_3656;
                        }
                        uint64_t v23 = 0;
                        if ((*(unsigned char *)(*(void *)(a7 + 104) + v1255) & 8) == 0) {
                          goto LABEL_3656;
                        }
                        continue;
                      case 7:
                        uint64_t v23 = 0;
                        if (v1255 <= 0xFF)
                        {
                          uint64_t v23 = 0;
                          if ((*(unsigned char *)(*(void *)(a7 + 104) + v1255) & 8) != 0) {
                            goto LABEL_3656;
                          }
                        }
                        continue;
                      case 8:
                        if (v1255 > 0xFF) {
                          goto LABEL_3656;
                        }
                        uint64_t v23 = 0;
                        if ((*(unsigned char *)(*(void *)(a7 + 104) + v1255) & 1) == 0) {
                          goto LABEL_3656;
                        }
                        continue;
                      case 9:
                        uint64_t v23 = 0;
                        if (v1255 <= 0xFF)
                        {
                          uint64_t v23 = 0;
                          if (*(unsigned char *)(*(void *)(a7 + 104) + v1255)) {
                            goto LABEL_3656;
                          }
                        }
                        continue;
                      case 0xA:
                        if (v1255 > 0xFF) {
                          goto LABEL_3656;
                        }
                        uint64_t v23 = 0;
                        if ((*(unsigned char *)(*(void *)(a7 + 104) + v1255) & 0x10) == 0) {
                          goto LABEL_3656;
                        }
                        continue;
                      case 0xB:
                        uint64_t v23 = 0;
                        if (v1255 <= 0xFF)
                        {
                          uint64_t v23 = 0;
                          if ((*(unsigned char *)(*(void *)(a7 + 104) + v1255) & 0x10) != 0) {
                            goto LABEL_3656;
                          }
                        }
                        continue;
                      case 0xC:
                        unsigned int v1408 = *v1436;
                        if (!*v1436
                          || (unint64_t)v1254 < *v18
                          || *(_DWORD *)(v1437 + 252)
                          || *v1425 != 2
                          || v1255 != *(unsigned __int8 *)(v1437 + 260))
                        {
                          goto LABEL_3655;
                        }
                        _DWORD *v1431 = 1;
                        a7 = v1437;
                        if (v1408 > 1) {
                          return 4294967294;
                        }
                        goto LABEL_3656;
                      case 0xD:
                      case 0xE:
                        goto LABEL_3656;
                      case 0x11:
                        uint64_t v23 = 0;
                        if (v1255 > 132)
                        {
                          if ((v1255 - 8232) >= 2 && v1255 != 133) {
                            continue;
                          }
LABEL_3318:
                          uint64_t v23 = 0;
                          if (*(_WORD *)(a7 + 130) != 2) {
                            goto LABEL_3656;
                          }
                          continue;
                        }
                        if ((v1255 - 11) < 2) {
                          goto LABEL_3318;
                        }
                        if (v1255 == 10) {
                          goto LABEL_3656;
                        }
                        if (v1255 == 13)
                        {
                          if ((unint64_t)v1254 < *v18 && *v1254 == 10) {
                            v17[10] = v1254 + 1;
                          }
LABEL_3655:
                          a7 = v1437;
                          goto LABEL_3656;
                        }
                        break;
                      case 0x12:
                        uint64_t v23 = 0;
                        if (v1255 < 0x2000)
                        {
                          if (v1255 <= 159)
                          {
                            if (v1255 != 9 && v1255 != 32) {
                              goto LABEL_3656;
                            }
                          }
                          else if (v1255 != 160 && v1255 != 5760 && v1255 != 6158)
                          {
                            goto LABEL_3656;
                          }
                        }
                        else if (v1255 > 8238)
                        {
                          BOOL v1331 = v1255 == 8239 || v1255 == 8287;
                          if (!v1331 && v1255 != 12288) {
                            goto LABEL_3656;
                          }
                        }
                        else if ((v1255 - 0x2000) >= 0xB)
                        {
                          goto LABEL_3656;
                        }
                        continue;
                      case 0x13:
                        uint64_t v23 = 0;
                        if (v1255 < 0x2000)
                        {
                          if (v1255 <= 159)
                          {
                            if (v1255 == 9 || v1255 == 32) {
                              goto LABEL_3656;
                            }
                          }
                          else if (v1255 == 160 || v1255 == 5760 || v1255 == 6158)
                          {
                            goto LABEL_3656;
                          }
                        }
                        else if (v1255 > 8238)
                        {
                          BOOL v1330 = v1255 == 8239 || v1255 == 8287;
                          if (v1330 || v1255 == 12288) {
                            goto LABEL_3656;
                          }
                        }
                        else if ((v1255 - 0x2000) < 0xB)
                        {
                          goto LABEL_3656;
                        }
                        continue;
                      case 0x14:
                        uint64_t v23 = 0;
                        BOOL v1324 = (v1255 - 10) >= 4 && (v1255 - 8232) >= 2;
                        if (v1324 && v1255 != 133) {
                          goto LABEL_3656;
                        }
                        continue;
                      case 0x15:
                        if ((v1255 - 10) < 4 || (v1255 - 8232) < 2) {
                          goto LABEL_3656;
                        }
                        uint64_t v23 = 0;
                        if (v1255 == 133) {
                          goto LABEL_3656;
                        }
                        continue;
                      default:
                        return v22;
                    }
                  }
                  continue;
                case 0xDC:
                  if (v23) {
                    continue;
                  }
                  v1344 = v17[10];
                  v655 = v1344 - 1;
                  v17[10] = v1344 - 1;
                  unsigned int v1345 = *(v1344 - 1);
                  if (!v16) {
                    goto LABEL_3456;
                  }
                  if ((v1345 & 0xC0) == 0x80)
                  {
                    v1346 = v1344 - 2;
                    do
                    {
                      v17[10] = v1346;
                      unsigned int v1347 = *v1346--;
                      unsigned int v1345 = v1347;
                    }
                    while ((v1347 & 0xC0) == 0x80);
                    v655 = v1346 + 1;
                  }
                  if (v1345 < 0xC0) {
                    goto LABEL_3456;
                  }
                  int v1348 = v655[1] & 0x3F;
                  if ((v1345 & 0x20) == 0)
                  {
                    unsigned int v1345 = v655[1] & 0x3F | ((v1345 & 0x1F) << 6);
                    goto LABEL_3456;
                  }
                  if ((v1345 & 0x10) != 0)
                  {
                    if ((v1345 & 8) != 0)
                    {
                      int v1358 = v655[2] & 0x3F;
                      int v1359 = v655[3] & 0x3F;
                      int v1360 = v655[4] & 0x3F;
                      if ((v1345 & 4) == 0)
                      {
                        unsigned int v1345 = ((v1345 & 3) << 24) | (v1348 << 18) | (v1358 << 12) | (v1359 << 6) | v1360;
                        goto LABEL_3456;
                      }
                      int v1356 = ((v1345 & 1) << 30) | (v1348 << 24) | (v1358 << 18) | (v1359 << 12) | (v1360 << 6);
                      unsigned __int8 v1357 = v655[5];
                    }
                    else
                    {
                      int v1356 = ((v1345 & 7) << 18) | (v1348 << 12) | ((v655[2] & 0x3F) << 6);
                      unsigned __int8 v1357 = v655[3];
                    }
                  }
                  else
                  {
                    int v1356 = ((v1345 & 0xF) << 12) | (v1348 << 6);
                    unsigned __int8 v1357 = v655[2];
                  }
                  unsigned int v1345 = v1356 & 0xFFFFFFC0 | v1357 & 0x3F;
LABEL_3456:
                  v795 = v17[1];
                  if (v655 <= v795) {
                    goto LABEL_2584;
                  }
                  unsigned __int8 v1361 = _pcre2_ucd_records_8[12
                                             * _pcre2_ucd_stage2_8[v1345 & 0x7F | (_pcre2_ucd_stage1_8[v1345 >> 7] << 7)]
                                             + 2];
                  v1362 = v655;
                  break;
                case 0xDD:
                  if (v23) {
                    continue;
                  }
                  v1056 = v17[10] - 1;
                  do
                  {
                    v17[10] = v1056;
                    int v1350 = *v1056--;
                    int v1349 = v1350;
                  }
                  while ((v1350 & 0xC0) == 0x80);
                  if (*((_DWORD *)v17 + 16) == 17
                    && (v1349 == 10 ? (BOOL v1351 = v1056 + 1 > v17[1]) : (BOOL v1351 = 0), v1351 && *v1056 == 13))
                  {
                    v17[10] = v1056;
                  }
                  else
                  {
                    ++v1056;
                  }
                  goto LABEL_3430;
                case 0xDE:
                  if (v23) {
                    continue;
                  }
                  v1352 = v17[10];
                  v793 = v1352 - 1;
                  v17[10] = v1352 - 1;
                  if (v16 && (*v793 & 0xC0) == 0x80)
                  {
                    v1353 = v1352 - 2;
                    do
                    {
                      v17[10] = v1353;
                      char v1354 = *v1353--;
                    }
                    while ((v1354 & 0xC0) == 0x80);
                    v793 = v1353 + 1;
                  }
                  goto LABEL_1770;
                case 0xDF:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1177 = *((_DWORD *)v17 + 14);
                  unsigned int v1178 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1177 + 1;
                  if (v1177 >= v1178) {
                    continue;
                  }
                  v1179 = v17[10];
                  if ((unint64_t)v1179 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1214 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1179 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1214 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1179 + 1;
                    unsigned int v1180 = *v1179;
                    if (v16 && v1180 >= 0xC0)
                    {
                      if ((v1180 & 0x20) != 0)
                      {
                        int v1244 = v1179[1] & 0x3F;
                        if ((v1180 & 0x10) != 0)
                        {
                          if ((v1180 & 8) != 0)
                          {
                            int v1293 = v1179[2] & 0x3F;
                            int v1294 = v1179[3] & 0x3F;
                            int v1295 = v1179[4] & 0x3F;
                            if ((v1180 & 4) != 0)
                            {
                              unsigned int v1180 = ((v1180 & 1) << 30) | (v1244 << 24) | (v1293 << 18) | (v1294 << 12) | (v1295 << 6) | v1179[5] & 0x3F;
                              v1245 = v1179 + 6;
                            }
                            else
                            {
                              unsigned int v1180 = ((v1180 & 3) << 24) | (v1244 << 18) | (v1293 << 12) | (v1294 << 6) | v1295;
                              v1245 = v1179 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1180 = ((v1180 & 7) << 18) | (v1244 << 12) | ((v1179[2] & 0x3F) << 6) | v1179[3] & 0x3F;
                            v1245 = v1179 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1180 = ((v1180 & 0xF) << 12) | (v1244 << 6) | v1179[2] & 0x3F;
                          v1245 = v1179 + 3;
                        }
                        v17[10] = v1245;
                      }
                      else
                      {
                        v17[10] = v1179 + 2;
                        unsigned int v1180 = v1179[1] & 0x3F | ((v1180 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if ((((*((_DWORD *)v17 + 16) != 15) ^ (*(_DWORD *)((char *)&_pcre2_ucd_BOOLprop_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v1180 & 0x7F | (_pcre2_ucd_stage1_8[v1180 >> 7] << 7)] + 10] & 0xFFF]
                                                                      + (((unint64_t)*((unsigned int *)v17 + 17) >> 3) & 0x1FFFFFFC)) >> *((_DWORD *)v17 + 17))) & 1) == 0)
                    {
                      int v7 = a6;
LABEL_3558:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -33;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xE0:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1181 = *((_DWORD *)v17 + 14);
                  unsigned int v1182 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1181 + 1;
                  if (v1181 >= v1182) {
                    continue;
                  }
                  v1183 = v17[10];
                  if ((unint64_t)v1183 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1215 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1183 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1215 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1183 + 1;
                    unsigned int v1184 = *v1183;
                    if (v16 && v1184 >= 0xC0)
                    {
                      if ((v1184 & 0x20) != 0)
                      {
                        int v1246 = v1183[1] & 0x3F;
                        if ((v1184 & 0x10) != 0)
                        {
                          if ((v1184 & 8) != 0)
                          {
                            int v1296 = v1183[2] & 0x3F;
                            int v1297 = v1183[3] & 0x3F;
                            int v1298 = v1183[4] & 0x3F;
                            if ((v1184 & 4) != 0)
                            {
                              unsigned int v1184 = ((v1184 & 1) << 30) | (v1246 << 24) | (v1296 << 18) | (v1297 << 12) | (v1298 << 6) | v1183[5] & 0x3F;
                              v1247 = v1183 + 6;
                            }
                            else
                            {
                              unsigned int v1184 = ((v1184 & 3) << 24) | (v1246 << 18) | (v1296 << 12) | (v1297 << 6) | v1298;
                              v1247 = v1183 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1184 = ((v1184 & 7) << 18) | (v1246 << 12) | ((v1183[2] & 0x3F) << 6) | v1183[3] & 0x3F;
                            v1247 = v1183 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1184 = ((v1184 & 0xF) << 12) | (v1246 << 6) | v1183[2] & 0x3F;
                          v1247 = v1183 + 3;
                        }
                        v17[10] = v1247;
                      }
                      else
                      {
                        v17[10] = v1183 + 2;
                        unsigned int v1184 = v1183[1] & 0x3F | ((v1184 & 0x1F) << 6);
                      }
                    }
                    uint64_t v23 = 0;
                    if ((*((_DWORD *)v17 + 17) != *(unsigned __int16 *)&_pcre2_ucd_records_8[12
                                                                                            * _pcre2_ucd_stage2_8[v1184 & 0x7F | (_pcre2_ucd_stage1_8[v1184 >> 7] << 7)]
                                                                                            + 8] >> 11) == (*((_DWORD *)v17 + 16) == 15))
                    {
                      int v7 = a6;
LABEL_3559:
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -32;
                      goto LABEL_3479;
                    }
                  }
                  continue;
                case 0xE1:
                  if (v23) {
                    continue;
                  }
                  unsigned int v1185 = *((_DWORD *)v17 + 14);
                  unsigned int v1186 = *((_DWORD *)v17 + 15);
                  *((_DWORD *)v17 + 14) = v1185 + 1;
                  if (v1185 >= v1186) {
                    continue;
                  }
                  v1187 = v17[10];
                  if ((unint64_t)v1187 >= *v18)
                  {
                    uint64_t v23 = 0;
                    unsigned int v1216 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v1187 > *v1433 || (uint64_t v23 = 0, *v1430))
                      {
                        uint64_t v23 = 0;
                        _DWORD *v1431 = 1;
                        if (v1216 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  else
                  {
                    v17[10] = v1187 + 1;
                    unsigned int v1188 = *v1187;
                    if (v16 && v1188 >= 0xC0)
                    {
                      if ((v1188 & 0x20) != 0)
                      {
                        int v1248 = v1187[1] & 0x3F;
                        if ((v1188 & 0x10) != 0)
                        {
                          if ((v1188 & 8) != 0)
                          {
                            int v1299 = v1187[2] & 0x3F;
                            int v1300 = v1187[3] & 0x3F;
                            int v1301 = v1187[4] & 0x3F;
                            if ((v1188 & 4) != 0)
                            {
                              unsigned int v1188 = ((v1188 & 1) << 30) | (v1248 << 24) | (v1299 << 18) | (v1300 << 12) | (v1301 << 6) | v1187[5] & 0x3F;
                              v1249 = v1187 + 6;
                            }
                            else
                            {
                              unsigned int v1188 = ((v1188 & 3) << 24) | (v1248 << 18) | (v1299 << 12) | (v1300 << 6) | v1301;
                              v1249 = v1187 + 5;
                            }
                          }
                          else
                          {
                            unsigned int v1188 = ((v1188 & 7) << 18) | (v1248 << 12) | ((v1187[2] & 0x3F) << 6) | v1187[3] & 0x3F;
                            v1249 = v1187 + 4;
                          }
                        }
                        else
                        {
                          unsigned int v1188 = ((v1188 & 0xF) << 12) | (v1248 << 6) | v1187[2] & 0x3F;
                          v1249 = v1187 + 3;
                        }
                        v17[10] = v1249;
                      }
                      else
                      {
                        v17[10] = v1187 + 2;
                        unsigned int v1188 = v1187[1] & 0x3F | ((v1188 & 0x1F) << 6);
                      }
                    }
                    int v1321 = _pcre2_ucd_stage2_8[v1188 & 0x7F | (_pcre2_ucd_stage1_8[v1188 >> 7] << 7)];
                    unint64_t v1322 = *((unsigned int *)v17 + 17);
                    if (v1322 == _pcre2_ucd_records_8[12 * v1321])
                    {
                      uint64_t v23 = 0;
                      if (*((_DWORD *)v17 + 16) != 15) {
                        goto LABEL_3560;
                      }
                    }
                    else
                    {
                      uint64_t v23 = 0;
                      if ((((*((_DWORD *)v17 + 16) != 15) ^ (*(_DWORD *)((char *)&_pcre2_ucd_script_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12 * v1321 + 8] & 0x3FF]
                                                                        + ((v1322 >> 3) & 0x1FFFFFFC)) >> v1322)) & 1) == 0)
                      {
LABEL_3560:
                        int v7 = a6;
LABEL_3561:
                        int v13 = 0;
                        a2 = *v17;
                        char v1390 = -31;
                        goto LABEL_3479;
                      }
                    }
                  }
                  continue;
                default:
                  if (v1065 == 100)
                  {
                    if (!v23)
                    {
                      unsigned int v1189 = *((_DWORD *)v17 + 14);
                      unsigned int v1190 = *((_DWORD *)v17 + 15);
                      *((_DWORD *)v17 + 14) = v1189 + 1;
                      if (v1189 < v1190)
                      {
                        v1086 = v17[10];
                        if ((unint64_t)v1086 >= *v18)
                        {
LABEL_2886:
                          uint64_t v23 = 0;
                          unsigned int v1195 = *v1436;
                          if (*v1436)
                          {
                            if ((unint64_t)v1086 > *v1433 || (uint64_t v23 = 0, *v1430))
                            {
                              uint64_t v23 = 0;
                              _DWORD *v1431 = 1;
                              if (v1195 > 1) {
                                return 4294967294;
                              }
                            }
                          }
                        }
                        else
                        {
                          v17[10] = v1086 + 1;
                          unsigned int v1191 = *v1086;
                          if (v16 && v1191 >= 0xC0)
                          {
                            if ((v1191 & 0x20) != 0)
                            {
                              int v1250 = v1086[1] & 0x3F;
                              if ((v1191 & 0x10) != 0)
                              {
                                if ((v1191 & 8) != 0)
                                {
                                  int v1302 = v1086[2] & 0x3F;
                                  int v1303 = v1086[3] & 0x3F;
                                  int v1304 = v1086[4] & 0x3F;
                                  if ((v1191 & 4) != 0)
                                  {
                                    unsigned int v1191 = ((v1191 & 1) << 30) | (v1250 << 24) | (v1302 << 18) | (v1303 << 12) | (v1304 << 6) | v1086[5] & 0x3F;
                                    v1251 = v1086 + 6;
                                  }
                                  else
                                  {
                                    unsigned int v1191 = ((v1191 & 3) << 24) | (v1250 << 18) | (v1302 << 12) | (v1303 << 6) | v1304;
                                    v1251 = v1086 + 5;
                                  }
                                }
                                else
                                {
                                  unsigned int v1191 = ((v1191 & 7) << 18) | (v1250 << 12) | ((v1086[2] & 0x3F) << 6) | v1086[3] & 0x3F;
                                  v1251 = v1086 + 4;
                                }
                              }
                              else
                              {
                                unsigned int v1191 = ((v1191 & 0xF) << 12) | (v1250 << 6) | v1086[2] & 0x3F;
                                v1251 = v1086 + 3;
                              }
                              v17[10] = v1251;
                            }
                            else
                            {
                              v17[10] = v1086 + 2;
                              unsigned int v1191 = v1086[1] & 0x3F | ((v1191 & 0x1F) << 6);
                            }
                          }
                          BOOL v1323 = _pcre2_xclass_8(v1191, v17[2]);
                          uint64_t v23 = 0;
                          a7 = v1437;
                          int v16 = v1435;
                          __int32 v18 = v1434;
                          if (v1323) {
                            goto LABEL_3622;
                          }
                        }
                      }
                    }
                  }
                  else
                  {
                    if (v1065 != 101) {
                      return v22;
                    }
                    if (!v23)
                    {
                      v1070 = v17[10];
                      v17[10] = v1070 - 1;
                      if (v1070 > v17[1])
                      {
                        if (v16 && (*(v1070 - 1) & 0xC0) == 0x80)
                        {
                          v1380 = v1070 - 2;
                          do
                          {
                            v17[10] = v1380;
                            char v1381 = *v1380--;
                          }
                          while ((v1381 & 0xC0) == 0x80);
                        }
                        uint64_t v223 = v12;
LABEL_3493:
                        int v13 = 0;
                        a2 = *v17;
                        char v1390 = 101;
                        uint64_t v12 = v223;
                        goto LABEL_3478;
                      }
                    }
                  }
                  continue;
              }
              while (2)
              {
                if (v16)
                {
                  do
                  {
                    unsigned int v1364 = *--v1362;
                    unsigned int v1363 = v1364;
                  }
                  while ((v1364 & 0xC0) == 0x80);
                  if (v1363 >= 0xC0)
                  {
                    int v1365 = v1362[1] & 0x3F;
                    if ((v1363 & 0x20) == 0)
                    {
                      unsigned int v1363 = v1362[1] & 0x3F | ((v1363 & 0x1F) << 6);
                      goto LABEL_3464;
                    }
                    if ((v1363 & 0x10) == 0)
                    {
                      int v1367 = ((v1363 & 0xF) << 12) | (v1365 << 6);
                      unsigned __int8 v1368 = v1362[2];
                      goto LABEL_3474;
                    }
                    if ((v1363 & 8) == 0)
                    {
                      int v1367 = ((v1363 & 7) << 18) | (v1365 << 12) | ((v1362[2] & 0x3F) << 6);
                      unsigned __int8 v1368 = v1362[3];
                      goto LABEL_3474;
                    }
                    int v1369 = v1362[2] & 0x3F;
                    int v1370 = v1362[3] & 0x3F;
                    int v1371 = v1362[4] & 0x3F;
                    if ((v1363 & 4) != 0)
                    {
                      int v1367 = ((v1363 & 1) << 30) | (v1365 << 24) | (v1369 << 18) | (v1370 << 12) | (v1371 << 6);
                      unsigned __int8 v1368 = v1362[5];
LABEL_3474:
                      unsigned int v1363 = v1367 & 0xFFFFFFC0 | v1368 & 0x3F;
                    }
                    else
                    {
                      unsigned int v1363 = ((v1363 & 3) << 24) | (v1365 << 18) | (v1369 << 12) | (v1370 << 6) | v1371;
                    }
                  }
                }
                else
                {
                  v1362 = v655 - 1;
                  unsigned int v1363 = *(v655 - 1);
                }
LABEL_3464:
                int v1366 = _pcre2_ucd_records_8[12
                                           * _pcre2_ucd_stage2_8[v1363 & 0x7F | (_pcre2_ucd_stage1_8[v1363 >> 7] << 7)]
                                           + 2];
                if (((_pcre2_ucp_gbtable_8[v1366] >> v1361) & 1) == 0) {
                  goto LABEL_2584;
                }
                v17[10] = v1362;
                unsigned __int8 v1361 = v1366;
                v655 = v1362;
                if (v1362 <= v795)
                {
                  v655 = v1362;
LABEL_2584:
                  if (v655 > v795)
                  {
                    int v13 = 0;
                    a2 = *v17;
                    char v1390 = -36;
                    goto LABEL_3478;
                  }
                  goto LABEL_8;
                }
                continue;
              }
            }
            break;
          }
          break;
        case 0x1Fu:
        case 0x20u:
          int v53 = v17[10];
          if ((unint64_t)v53 >= *v18)
          {
LABEL_179:
            unsigned int v119 = *v1436;
            if (*v1436)
            {
              if ((unint64_t)v53 <= *v1433) {
                goto LABEL_1956;
              }
              goto LABEL_1957;
            }
            goto LABEL_1958;
          }
          if (v16)
          {
            unint64_t *v17 = v20 + 2;
            unsigned int v55 = v20[1];
            if (v55 >= 0xC0)
            {
              if ((v55 & 0x20) != 0)
              {
                int v546 = v20[2] & 0x3F;
                if ((v55 & 0x10) != 0)
                {
                  if ((v55 & 8) != 0)
                  {
                    int v868 = v20[3] & 0x3F;
                    int v869 = v20[4] & 0x3F;
                    int v870 = v20[5] & 0x3F;
                    if ((v55 & 4) != 0)
                    {
                      unsigned int v55 = ((v55 & 1) << 30) | (v546 << 24) | (v868 << 18) | (v869 << 12) | (v870 << 6) | v20[6] & 0x3F;
                      v547 = v20 + 7;
                    }
                    else
                    {
                      unsigned int v55 = ((v55 & 3) << 24) | (v546 << 18) | (v868 << 12) | (v869 << 6) | v870;
                      v547 = v20 + 6;
                    }
                  }
                  else
                  {
                    unsigned int v55 = ((v55 & 7) << 18) | (v546 << 12) | ((v20[3] & 0x3F) << 6) | v20[4] & 0x3F;
                    v547 = v20 + 5;
                  }
                }
                else
                {
                  unsigned int v55 = ((v55 & 0xF) << 12) | (v546 << 6) | v20[3] & 0x3F;
                  v547 = v20 + 4;
                }
                unint64_t *v17 = v547;
              }
              else
              {
                unint64_t *v17 = v20 + 3;
                unsigned int v55 = v20[2] & 0x3F | ((v55 & 0x1F) << 6);
              }
            }
            v17[10] = v53 + 1;
            unsigned int v1038 = *v53;
            if (v1038 >= 0xC0)
            {
              if ((v1038 & 0x20) != 0)
              {
                int v1039 = v53[1] & 0x3F;
                if ((v1038 & 0x10) != 0)
                {
                  if ((v1038 & 8) != 0)
                  {
                    int v1041 = v53[2] & 0x3F;
                    int v1042 = v53[3] & 0x3F;
                    int v1043 = v53[4] & 0x3F;
                    if ((v1038 & 4) != 0)
                    {
                      unsigned int v1038 = ((v1038 & 1) << 30) | (v1039 << 24) | (v1041 << 18) | (v1042 << 12) | (v1043 << 6) | v53[5] & 0x3F;
                      v1040 = v53 + 6;
                    }
                    else
                    {
                      unsigned int v1038 = ((v1038 & 3) << 24) | (v1039 << 18) | (v1041 << 12) | (v1042 << 6) | v1043;
                      v1040 = v53 + 5;
                    }
                  }
                  else
                  {
                    unsigned int v1038 = ((v1038 & 7) << 18) | (v1039 << 12) | ((v53[2] & 0x3F) << 6) | v53[3] & 0x3F;
                    v1040 = v53 + 4;
                  }
                }
                else
                {
                  unsigned int v1038 = ((v1038 & 0xF) << 12) | (v1039 << 6) | v53[2] & 0x3F;
                  v1040 = v53 + 3;
                }
                v17[10] = v1040;
              }
              else
              {
                v17[10] = v53 + 2;
                unsigned int v1038 = v53[1] & 0x3F | ((v1038 & 0x1F) << 6);
              }
            }
            if (v55 == v1038) {
              goto LABEL_1958;
            }
            if (v21 == 32)
            {
              int v1054 = v55 < 0x80
                    ? *(unsigned __int8 *)(*(void *)(a7 + 96) + v55)
                    : *(_DWORD *)&_pcre2_ucd_records_8[12
                                                     * _pcre2_ucd_stage2_8[v55 & 0x7F | (_pcre2_ucd_stage1_8[v55 >> 7] << 7)]
                                                     + 4]
                    + v55;
              uint64_t v23 = 0;
              if (v1054 == v1038) {
                goto LABEL_2587;
              }
            }
            continue;
          }
          if ((v1421 & 0x20000) != 0)
          {
            v17[10] = v53 + 1;
            int v511 = *v53;
            unsigned int v512 = v20[1];
            unint64_t *v17 = v20 + 2;
            if (v512 == v511) {
              goto LABEL_1958;
            }
            if (v21 == 32)
            {
              int v513 = (v512 & 0x80) != 0
                   ? *(_DWORD *)&_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v512 & 0x7F | 0x80] + 4] + v512
                   : *(unsigned __int8 *)(*(void *)(a7 + 96) + v512);
              uint64_t v23 = 0;
              if (v513 == v511) {
                goto LABEL_2587;
              }
            }
            continue;
          }
          uint64_t v311 = v20[1];
          v17[10] = v53 + 1;
          int v312 = *v53;
          if (v311 == v312 || v21 == 32 && *(unsigned __int8 *)(*(void *)(a7 + 96) + v311) == v312) {
            goto LABEL_1958;
          }
          goto LABEL_2001;
        case 0x21u:
        case 0x22u:
        case 0x23u:
        case 0x24u:
        case 0x25u:
        case 0x26u:
        case 0x2Eu:
        case 0x2Fu:
        case 0x30u:
        case 0x31u:
        case 0x32u:
        case 0x33u:
          uint64_t v24 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          int v25 = *v20;
          if (v21 >= 0x2E) {
            int v26 = -46;
          }
          else {
            int v26 = -33;
          }
          unsigned int v27 = v26 + v25;
          unsigned int v28 = dword_1A68ABDE0[v27];
          *((_DWORD *)v17 + 14) = v28;
          unsigned int v29 = dword_1A68ABE0C[v27];
          *((_DWORD *)v17 + 15) = v29;
          uint64_t v30 = dword_1A68ABE38[v27];
          if (v16) {
            goto LABEL_60;
          }
          goto LABEL_58;
        case 0x27u:
        case 0x34u:
          unsigned int v28 = 0;
          *((_DWORD *)v17 + 14) = 0;
          unsigned int v29 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 15) = v29;
          uint64_t v24 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          uint64_t v30 = 1;
          if (v16) {
            goto LABEL_60;
          }
          goto LABEL_58;
        case 0x28u:
        case 0x35u:
          unsigned int v28 = 0;
          uint64_t v30 = 0;
          *((_DWORD *)v17 + 14) = 0;
          unsigned int v29 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 15) = v29;
          uint64_t v24 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          if (v16) {
            goto LABEL_60;
          }
          goto LABEL_58;
        case 0x29u:
        case 0x36u:
          unsigned int v29 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 14) = v29;
          *((_DWORD *)v17 + 15) = v29;
          uint64_t v24 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          unsigned int v28 = v29;
          uint64_t v30 = v12;
          if (v16) {
            goto LABEL_60;
          }
          goto LABEL_58;
        case 0x2Au:
        case 0x37u:
          unsigned int v28 = 0;
          v17[7] = (unsigned __int8 *)0xFFFFFFFF00000000;
          uint64_t v24 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          uint64_t v30 = 2;
          goto LABEL_55;
        case 0x2Bu:
        case 0x38u:
          v17[7] = (unsigned __int8 *)0xFFFFFFFF00000001;
          uint64_t v24 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          uint64_t v30 = 2;
          unsigned int v28 = 1;
LABEL_55:
          unsigned int v29 = -1;
          if (v16) {
            goto LABEL_60;
          }
          goto LABEL_58;
        case 0x2Cu:
        case 0x39u:
          unsigned int v28 = 0;
          v17[7] = (unsigned __int8 *)0x100000000;
          uint64_t v24 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          uint64_t v30 = 2;
          unsigned int v29 = 1;
          if (!v16) {
            goto LABEL_58;
          }
          goto LABEL_60;
        case 0x2Du:
        case 0x3Au:
          unsigned int v28 = 0;
          *((_DWORD *)v17 + 14) = 0;
          unsigned int v29 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 15) = v29;
          uint64_t v24 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          uint64_t v30 = 2;
          if (!v16)
          {
LABEL_58:
            a2 = v24 + 1;
            unint64_t *v17 = v24 + 1;
            unsigned int v56 = *v24;
            goto LABEL_64;
          }
LABEL_60:
          v17[2] = v24;
          v17[3] = (unsigned __int8 *)1;
          unsigned int v56 = *v24;
          if (v56 < 0xC0)
          {
            a2 = v24 + 1;
            unint64_t *v17 = v24 + 1;
LABEL_64:
            *((_DWORD *)v17 + 16) = v56;
            if (v21 <= 0x2D)
            {
              if (v28)
              {
                uint64_t v61 = 0;
                unint64_t v62 = *v18;
                BOOL v63 = v17[10];
                while (1)
                {
                  int v64 = &v63[v61];
                  if ((unint64_t)&v63[v61] >= v62) {
                    break;
                  }
                  v17[10] = v64 + 1;
                  if (v56 != *v64) {
                    goto LABEL_114;
                  }
                  if ((int)++v61 + 1 > v28) {
                    goto LABEL_73;
                  }
                }
                unsigned int v81 = *v1436;
                if (!*v1436) {
                  goto LABEL_114;
                }
                if ((unint64_t)v64 <= *v1433) {
                  goto LABEL_112;
                }
                goto LABEL_113;
              }
LABEL_73:
              uint64_t v12 = v30;
              if (v29 == v28) {
                continue;
              }
              if (!v30)
              {
                uint64_t v12 = 0;
                int v13 = 0;
LABEL_3541:
                char v1390 = 27;
                goto LABEL_3478;
              }
              char v65 = v17[10];
              v17[1] = v65;
              unsigned int v66 = v65;
              BOOL v265 = v29 >= v28;
              unsigned int v67 = v29 - v28;
              if (v67 != 0 && v265)
              {
                unint64_t v68 = *v18;
                unsigned int v66 = v65;
                while ((unint64_t)v66 < v68)
                {
                  if (v56 == *v66)
                  {
                    v17[10] = ++v66;
                    if (--v67) {
                      continue;
                    }
                  }
                  goto LABEL_648;
                }
                unsigned int v318 = *v1436;
                if (*v1436 && ((unint64_t)v66 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v318 > 1) {
                    return 4294967294;
                  }
                }
              }
LABEL_648:
              uint64_t v12 = 2;
              if (v30 == 2) {
                continue;
              }
LABEL_3380:
              uint64_t v12 = v30;
              if (v66 > v65)
              {
                int v13 = 0;
                a2 = *v17;
                char v1390 = 28;
                goto LABEL_3539;
              }
            }
            else
            {
              if (v1429 == 0x20000 && v56 >= 0x80) {
                unsigned int v60 = *(_DWORD *)&_pcre2_ucd_records_8[12
              }
                                                     * _pcre2_ucd_stage2_8[v56 & 0x7F | (_pcre2_ucd_stage1_8[v56 >> 7] << 7)]
                                                     + 4]
                    + v56;
              else {
                unsigned int v60 = *(unsigned __int8 *)(*(void *)(a7 + 96) + v56);
              }
              *((_DWORD *)v17 + 17) = v60;
              if (v28)
              {
                uint64_t v69 = 0;
                unint64_t v70 = *v18;
                uint64_t v71 = v17[10];
                while (1)
                {
                  uint64_t v72 = &v71[v69];
                  if ((unint64_t)&v71[v69] >= v70) {
                    break;
                  }
                  int v73 = *v72;
                  BOOL v74 = v56 == v73 || v60 == v73;
                  if (!v74) {
                    goto LABEL_114;
                  }
                  v17[10] = &v71[++v69];
                  if ((int)v69 + 1 > v28) {
                    goto LABEL_92;
                  }
                }
                unsigned int v81 = *v1436;
                if (!*v1436) {
                  goto LABEL_114;
                }
                if ((unint64_t)v72 <= *v1433)
                {
LABEL_112:
                  if (*v1430) {
                    goto LABEL_113;
                  }
LABEL_114:
                  uint64_t v23 = 0;
                  uint64_t v12 = v30;
                  goto LABEL_2587;
                }
LABEL_113:
                _DWORD *v1431 = 1;
                if (v81 > 1) {
                  return 4294967294;
                }
                goto LABEL_114;
              }
LABEL_92:
              uint64_t v12 = v30;
              if (v29 == v28) {
                continue;
              }
              if (!v30)
              {
                uint64_t v12 = 0;
                int v13 = 0;
LABEL_3525:
                char v1390 = 25;
                goto LABEL_3478;
              }
              BOOL v75 = v17[10];
              v17[1] = v75;
              uint64_t v76 = v75;
              BOOL v265 = v29 >= v28;
              unsigned int v77 = v29 - v28;
              if (v77 != 0 && v265)
              {
                unint64_t v78 = *v18;
                uint64_t v76 = v75;
                while ((unint64_t)v76 < v78)
                {
                  int v79 = *v76;
                  if (v56 == v79 || v60 == v79)
                  {
                    v17[10] = ++v76;
                    if (--v77) {
                      continue;
                    }
                  }
                  goto LABEL_654;
                }
                unsigned int v319 = *v1436;
                if (*v1436 && ((unint64_t)v76 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v319 > 1) {
                    return 4294967294;
                  }
                }
              }
LABEL_654:
              uint64_t v12 = 2;
              if (v30 == 2) {
                continue;
              }
LABEL_3378:
              uint64_t v12 = v30;
              if (v76 != v75)
              {
                int v13 = 0;
                a2 = *v17;
                char v1390 = 26;
LABEL_3539:
                uint64_t v12 = v30;
                goto LABEL_3478;
              }
            }
            continue;
          }
          int v57 = v24[1] & 0x3F;
          unsigned int v1418 = v30;
          if ((v56 & 0x20) != 0)
          {
            if ((v56 & 0x10) != 0)
            {
              if ((v56 & 8) != 0)
              {
                int v236 = v24[2] & 0x3F;
                int v237 = v24[3] & 0x3F;
                int v238 = v24[4] & 0x3F;
                if ((v56 & 4) != 0)
                {
                  unsigned int v58 = ((v56 & 1) << 30) | (v57 << 24) | (v236 << 18) | (v237 << 12) | (v238 << 6) | v24[5] & 0x3F;
                  uint64_t v59 = 6;
                }
                else
                {
                  unsigned int v58 = ((v56 & 3) << 24) | (v57 << 18) | (v236 << 12) | (v237 << 6) | v238;
                  uint64_t v59 = 5;
                }
              }
              else
              {
                unsigned int v58 = ((v56 & 7) << 18) | (v57 << 12) | ((v24[2] & 0x3F) << 6) | v24[3] & 0x3F;
                uint64_t v59 = 4;
              }
            }
            else
            {
              unsigned int v58 = ((v56 & 0xF) << 12) | (v57 << 6) | v24[2] & 0x3F;
              uint64_t v59 = 3;
            }
          }
          else
          {
            unsigned int v58 = v24[1] & 0x3F | ((v56 & 0x1F) << 6);
            uint64_t v59 = 2;
          }
          v17[3] = (unsigned __int8 *)v59;
          unint64_t *v17 = &v24[v59];
          unsigned int v1419 = a4;
          int v1420 = a5;
          if (v21 >= 0x2E
            && (int v335 = *(_DWORD *)&_pcre2_ucd_records_8[12
                                                      * _pcre2_ucd_stage2_8[v58 & 0x7F | (_pcre2_ucd_stage1_8[v58 >> 7] << 7)]
                                                      + 4]) != 0)
          {
            size_t v336 = _pcre2_ord2utf_8(v335 + v58, (uint64_t)v17 + 74);
            v17[5] = (unsigned __int8 *)v336;
            unsigned int v28 = *((_DWORD *)v17 + 14);
            if (v28) {
              goto LABEL_703;
            }
          }
          else
          {
            size_t v336 = 0;
            v17[5] = 0;
            if (v28)
            {
LABEL_703:
              unint64_t v337 = *v1434;
              size_t v338 = (size_t)v17[3];
              unint64_t v339 = *v1434 - v338;
              int v340 = v17[10];
              unint64_t v341 = *v1434 - v336;
              int v342 = 1;
              while (1)
              {
                if ((unint64_t)v340 > v339 || (v343 = memcmp(v340, v17[2], v338), size_t v344 = v338, v343))
                {
                  if (!v336) {
                    break;
                  }
                  if ((unint64_t)v340 > v341) {
                    break;
                  }
                  int v345 = memcmp(v340, (char *)v17 + 74, v336);
                  size_t v344 = v336;
                  if (v345) {
                    break;
                  }
                }
                v340 += v344;
                v17[10] = v340;
                if (++v342 > v28) {
                  goto LABEL_710;
                }
              }
              if ((unint64_t)v340 < v337)
              {
                uint64_t v23 = 0;
                uint64_t v12 = v1418;
                a4 = v1419;
                a5 = v1420;
                goto LABEL_724;
              }
              a7 = v1437;
              unsigned int v119 = *v1436;
              a4 = v1419;
              a5 = v1420;
              int v16 = v1435;
              __int32 v18 = v1434;
              uint64_t v12 = v1418;
              if (*v1436)
              {
                if ((unint64_t)v340 > *v1433) {
                  goto LABEL_1957;
                }
LABEL_1956:
                if (*v1430)
                {
LABEL_1957:
                  _DWORD *v1431 = 1;
                  if (v119 > 1) {
                    return 4294967294;
                  }
                }
              }
              goto LABEL_1958;
            }
          }
LABEL_710:
          unsigned int v346 = *((_DWORD *)v17 + 15);
          a4 = v1419;
          uint64_t v12 = v1418;
          a5 = v1420;
          a7 = v1437;
          int v16 = v1435;
          __int32 v18 = v1434;
          if (v346 == v28) {
            continue;
          }
          if (!v1418)
          {
            uint64_t v12 = 0;
            goto LABEL_3536;
          }
          unsigned int v347 = v17[10];
          v17[1] = v347;
          unsigned int v348 = v347;
          BOOL v265 = v346 >= v28;
          unsigned int v349 = v346 - v28;
          if (v349 != 0 && v265)
          {
            size_t v350 = (size_t)v17[3];
            unint64_t v351 = *v1434 - v350;
            unint64_t v1417 = *v1434;
            unint64_t v352 = *v1434 - v336;
            unsigned int v348 = v347;
            while (1)
            {
              if ((unint64_t)v348 > v351 || (int v353 = memcmp(v348, v17[2], v350), v354 = v350, v353))
              {
                if (!v336) {
                  break;
                }
                if ((unint64_t)v348 > v352) {
                  break;
                }
                int v355 = memcmp(v348, (char *)v17 + 74, v336);
                size_t v354 = v336;
                if (v355) {
                  break;
                }
              }
              v348 += v354;
              v17[10] = v348;
              if (!--v349) {
                goto LABEL_733;
              }
            }
            if ((unint64_t)v348 >= v1417)
            {
              unsigned int v356 = *v1436;
              if (*v1436)
              {
                if ((unint64_t)v348 > *v1433 || *v1430)
                {
                  _DWORD *v1431 = 1;
                  if (v356 > 1) {
                    return 4294967294;
                  }
                }
              }
            }
          }
LABEL_733:
          uint64_t v12 = 2;
          uint64_t v37 = v1418;
          a4 = v1419;
          a5 = v1420;
          a7 = v1437;
          int v16 = v1435;
          __int32 v18 = v1434;
          if (v1418 == 2) {
            continue;
          }
LABEL_3395:
          uint64_t v12 = v37;
          if (v348 > v347)
          {
            int v13 = 0;
            a2 = *v17;
            char v1390 = -53;
            goto LABEL_3563;
          }
          continue;
        case 0x3Bu:
        case 0x3Cu:
        case 0x3Du:
        case 0x3Eu:
        case 0x3Fu:
        case 0x40u:
        case 0x48u:
        case 0x49u:
        case 0x4Au:
        case 0x4Bu:
        case 0x4Cu:
        case 0x4Du:
          char v31 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          int v32 = *v20;
          if (v21 <= 0x47) {
            int v33 = -59;
          }
          else {
            int v33 = -72;
          }
          unsigned int v34 = v33 + v32;
          unsigned int v35 = dword_1A68ABDE0[v34];
          *((_DWORD *)v17 + 14) = v35;
          unsigned int v36 = dword_1A68ABE0C[v34];
          *((_DWORD *)v17 + 15) = v36;
          uint64_t v37 = dword_1A68ABE38[v34];
          goto LABEL_123;
        case 0x41u:
        case 0x4Eu:
          unsigned int v35 = 0;
          *((_DWORD *)v17 + 14) = 0;
          unsigned int v36 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 15) = v36;
          char v31 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          uint64_t v37 = 1;
          goto LABEL_123;
        case 0x42u:
        case 0x4Fu:
          unsigned int v35 = 0;
          uint64_t v37 = 0;
          *((_DWORD *)v17 + 14) = 0;
          unsigned int v36 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 15) = v36;
          char v31 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          goto LABEL_123;
        case 0x43u:
        case 0x50u:
          unsigned int v36 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 14) = v36;
          *((_DWORD *)v17 + 15) = v36;
          char v31 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          unsigned int v35 = v36;
          uint64_t v37 = v12;
          goto LABEL_123;
        case 0x44u:
        case 0x51u:
          unsigned int v35 = 0;
          v17[7] = (unsigned __int8 *)0xFFFFFFFF00000000;
          char v31 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          uint64_t v37 = 2;
          goto LABEL_120;
        case 0x45u:
        case 0x52u:
          v17[7] = (unsigned __int8 *)0xFFFFFFFF00000001;
          char v31 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          uint64_t v37 = 2;
          unsigned int v35 = 1;
LABEL_120:
          unsigned int v36 = -1;
          goto LABEL_123;
        case 0x46u:
        case 0x53u:
          unsigned int v35 = 0;
          v17[7] = (unsigned __int8 *)0x100000000;
          char v31 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          uint64_t v37 = 2;
          unsigned int v36 = 1;
          goto LABEL_123;
        case 0x47u:
        case 0x54u:
          unsigned int v35 = 0;
          *((_DWORD *)v17 + 14) = 0;
          unsigned int v36 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 15) = v36;
          char v31 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          uint64_t v37 = 2;
LABEL_123:
          a2 = v31 + 1;
          unint64_t *v17 = v31 + 1;
          unsigned int v82 = *v31;
          *((_DWORD *)v17 + 16) = v82;
          if (v16 && v82 >= 0xC0)
          {
            if ((v82 & 0x20) != 0)
            {
              int v84 = *a2 & 0x3F;
              if ((v82 & 0x10) != 0)
              {
                if ((v82 & 8) != 0)
                {
                  int v120 = v31[2] & 0x3F;
                  int v121 = v31[3] & 0x3F;
                  int v122 = v31[4] & 0x3F;
                  if ((v82 & 4) != 0)
                  {
                    unsigned int v82 = ((v82 & 1) << 30) | (v84 << 24) | (v120 << 18) | (v121 << 12) | (v122 << 6) | v31[5] & 0x3F;
                    *((_DWORD *)v17 + 16) = v82;
                    a2 = v31 + 6;
                  }
                  else
                  {
                    a2 = v31 + 5;
                    unsigned int v82 = ((v82 & 3) << 24) | (v84 << 18) | (v120 << 12) | (v121 << 6) | v122;
                    *((_DWORD *)v17 + 16) = v82;
                  }
                }
                else
                {
                  unsigned int v82 = ((v82 & 7) << 18) | (v84 << 12) | ((v31[2] & 0x3F) << 6) | v31[3] & 0x3F;
                  *((_DWORD *)v17 + 16) = v82;
                  a2 = v31 + 4;
                }
              }
              else
              {
                unsigned int v82 = ((v82 & 0xF) << 12) | (v84 << 6) | v31[2] & 0x3F;
                *((_DWORD *)v17 + 16) = v82;
                a2 = v31 + 3;
              }
              unint64_t *v17 = a2;
            }
            else
            {
              a2 = v31 + 2;
              unint64_t *v17 = v31 + 2;
              int v83 = v31[1] & 0x3F | ((v82 & 0x1F) << 6);
              *((_DWORD *)v17 + 16) = v83;
              unsigned int v82 = v83;
            }
          }
          if (v21 < 0x48)
          {
            if (v16)
            {
              if (v35)
              {
                unint64_t v240 = *v18;
                int v241 = v17[10];
                int v242 = 1;
                while ((unint64_t)v241 < v240)
                {
                  v17[10] = v241 + 1;
                  unsigned int v243 = *v241;
                  if (v243 < 0xC0)
                  {
                    ++v241;
                  }
                  else if ((v243 & 0x20) != 0)
                  {
                    int v245 = v241[1] & 0x3F;
                    if ((v243 & 0x10) != 0)
                    {
                      if ((v243 & 8) != 0)
                      {
                        int v246 = v241[2] & 0x3F;
                        int v247 = v241[3] & 0x3F;
                        int v248 = v241[4] & 0x3F;
                        if ((v243 & 4) != 0)
                        {
                          unsigned int v243 = ((v243 & 1) << 30) | (v245 << 24) | (v246 << 18) | (v247 << 12) | (v248 << 6) | v241[5] & 0x3F;
                          v241 += 6;
                        }
                        else
                        {
                          unsigned int v243 = ((v243 & 3) << 24) | (v245 << 18) | (v246 << 12) | (v247 << 6) | v248;
                          v241 += 5;
                        }
                      }
                      else
                      {
                        unsigned int v243 = ((v243 & 7) << 18) | (v245 << 12) | ((v241[2] & 0x3F) << 6) | v241[3] & 0x3F;
                        v241 += 4;
                      }
                    }
                    else
                    {
                      unsigned int v243 = ((v243 & 0xF) << 12) | (v245 << 6) | v241[2] & 0x3F;
                      v241 += 3;
                    }
                    v17[10] = v241;
                  }
                  else
                  {
                    v17[10] = v241 + 2;
                    int v244 = v241[1] & 0x3F | ((v243 & 0x1F) << 6);
                    v241 += 2;
                    unsigned int v243 = v244;
                  }
                  if (v82 == v243) {
                    goto LABEL_586;
                  }
                  if (++v242 > v35) {
                    goto LABEL_503;
                  }
                }
                unsigned int v296 = *v1436;
                if (!*v1436) {
                  goto LABEL_586;
                }
                if ((unint64_t)v241 <= *v1433) {
                  goto LABEL_584;
                }
                goto LABEL_585;
              }
            }
            else if (v35)
            {
              uint64_t v259 = 0;
              unint64_t v260 = *v18;
              char v261 = v17[10];
              while (1)
              {
                unsigned int v262 = &v261[v259];
                if ((unint64_t)&v261[v259] >= v260) {
                  break;
                }
                v17[10] = v262 + 1;
                if (v82 == *v262) {
                  goto LABEL_586;
                }
                if ((int)++v259 + 1 > v35) {
                  goto LABEL_503;
                }
              }
              unsigned int v296 = *v1436;
              if (!*v1436) {
                goto LABEL_586;
              }
              if ((unint64_t)v262 <= *v1433) {
                goto LABEL_584;
              }
              goto LABEL_585;
            }
LABEL_503:
            uint64_t v12 = v37;
            if (v36 == v35) {
              continue;
            }
            if (!v37)
            {
              uint64_t v12 = 0;
              int v7 = a6;
              if (!v16)
              {
LABEL_3542:
                int v13 = 0;
                char v1390 = 31;
                goto LABEL_3479;
              }
              char v1390 = -50;
              goto LABEL_3509;
            }
            char v263 = v17[10];
            v17[1] = v263;
            int8x16_t v264 = v263;
            BOOL v265 = v36 >= v35;
            unsigned int v266 = v36 - v35;
            if (v16)
            {
              if (v266 != 0 && v265)
              {
                unint64_t v267 = *v18;
                int8x16_t v264 = v263;
                while ((unint64_t)v264 < v267)
                {
                  unsigned int v268 = *v264;
                  if (v268 < 0xC0)
                  {
                    uint64_t v270 = 1;
                  }
                  else
                  {
                    int v269 = v264[1] & 0x3F;
                    if ((v268 & 0x20) != 0)
                    {
                      if ((v268 & 0x10) != 0)
                      {
                        if ((v268 & 8) != 0)
                        {
                          int v271 = v264[2] & 0x3F;
                          int v272 = v264[3] & 0x3F;
                          int v273 = v264[4] & 0x3F;
                          if ((v268 & 4) != 0)
                          {
                            unsigned int v268 = ((v268 & 1) << 30) | (v269 << 24) | (v271 << 18) | (v272 << 12) | (v273 << 6) | v264[5] & 0x3F;
                            uint64_t v270 = 6;
                          }
                          else
                          {
                            unsigned int v268 = ((v268 & 3) << 24) | (v269 << 18) | (v271 << 12) | (v272 << 6) | v273;
                            uint64_t v270 = 5;
                          }
                        }
                        else
                        {
                          unsigned int v268 = ((v268 & 7) << 18) | (v269 << 12) | ((v264[2] & 0x3F) << 6) | v264[3] & 0x3F;
                          uint64_t v270 = 4;
                        }
                      }
                      else
                      {
                        unsigned int v268 = ((v268 & 0xF) << 12) | (v269 << 6) | v264[2] & 0x3F;
                        uint64_t v270 = 3;
                      }
                    }
                    else
                    {
                      uint64_t v270 = 2;
                      unsigned int v268 = v264[1] & 0x3F | ((v268 & 0x1F) << 6);
                    }
                  }
                  if (v82 != v268)
                  {
                    v264 += v270;
                    v17[10] = v264;
                    if (--v266) {
                      continue;
                    }
                  }
                  goto LABEL_786;
                }
                unsigned int v380 = *v1436;
                if (*v1436 && ((unint64_t)v264 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v380 > 1) {
                    return 4294967294;
                  }
                }
              }
LABEL_786:
              uint64_t v12 = 2;
              if (v37 == 2) {
                continue;
              }
LABEL_3403:
              uint64_t v12 = v37;
              if (v264 > v263)
              {
                int v13 = 0;
                a2 = *v17;
                char v1390 = -49;
                goto LABEL_3563;
              }
            }
            else
            {
              if (v266 != 0 && v265)
              {
                unint64_t v292 = *v18;
                int8x16_t v264 = v263;
                while ((unint64_t)v264 < v292)
                {
                  if (v82 != *v264)
                  {
                    v17[10] = ++v264;
                    if (--v266) {
                      continue;
                    }
                  }
                  goto LABEL_798;
                }
                unsigned int v382 = *v1436;
                if (*v1436 && ((unint64_t)v264 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v382 > 1) {
                    return 4294967294;
                  }
                }
              }
LABEL_798:
              uint64_t v12 = 2;
              if (v37 == 2) {
                continue;
              }
LABEL_3384:
              uint64_t v12 = v37;
              if (v264 != v263)
              {
                int v13 = 0;
                a2 = *v17;
                char v1390 = 32;
                goto LABEL_3563;
              }
            }
          }
          else
          {
            if (v1429 && v82 >= 0x80) {
              unsigned int v239 = *(_DWORD *)&_pcre2_ucd_records_8[12
            }
                                                    * _pcre2_ucd_stage2_8[v82 & 0x7F | (_pcre2_ucd_stage1_8[v82 >> 7] << 7)]
                                                    + 4]
                   + v82;
            else {
              unsigned int v239 = *(unsigned __int8 *)(*(void *)(a7 + 96) + v82);
            }
            *((_DWORD *)v17 + 17) = v239;
            if (v16)
            {
              if (v35)
              {
                unint64_t v249 = *v18;
                int v250 = v17[10];
                int v251 = 1;
                while ((unint64_t)v250 < v249)
                {
                  v17[10] = v250 + 1;
                  unsigned int v252 = *v250;
                  if (v252 < 0xC0)
                  {
                    ++v250;
                  }
                  else if ((v252 & 0x20) != 0)
                  {
                    int v254 = v250[1] & 0x3F;
                    if ((v252 & 0x10) != 0)
                    {
                      if ((v252 & 8) != 0)
                      {
                        int v255 = v250[2] & 0x3F;
                        int v256 = v250[3] & 0x3F;
                        int v257 = v250[4] & 0x3F;
                        if ((v252 & 4) != 0)
                        {
                          unsigned int v252 = ((v252 & 1) << 30) | (v254 << 24) | (v255 << 18) | (v256 << 12) | (v257 << 6) | v250[5] & 0x3F;
                          v250 += 6;
                        }
                        else
                        {
                          unsigned int v252 = ((v252 & 3) << 24) | (v254 << 18) | (v255 << 12) | (v256 << 6) | v257;
                          v250 += 5;
                        }
                      }
                      else
                      {
                        unsigned int v252 = ((v252 & 7) << 18) | (v254 << 12) | ((v250[2] & 0x3F) << 6) | v250[3] & 0x3F;
                        v250 += 4;
                      }
                    }
                    else
                    {
                      unsigned int v252 = ((v252 & 0xF) << 12) | (v254 << 6) | v250[2] & 0x3F;
                      v250 += 3;
                    }
                    v17[10] = v250;
                  }
                  else
                  {
                    v17[10] = v250 + 2;
                    int v253 = v250[1] & 0x3F | ((v252 & 0x1F) << 6);
                    v250 += 2;
                    unsigned int v252 = v253;
                  }
                  if (v82 == v252 || v239 == v252) {
                    goto LABEL_586;
                  }
                  if (++v251 > v35) {
                    goto LABEL_532;
                  }
                }
                unsigned int v296 = *v1436;
                if (!*v1436) {
                  goto LABEL_586;
                }
                if ((unint64_t)v250 <= *v1433) {
                  goto LABEL_584;
                }
                goto LABEL_585;
              }
            }
            else if (v35)
            {
              uint64_t v274 = 0;
              unint64_t v275 = *v18;
              v276 = v17[10];
              while (1)
              {
                unsigned int v277 = &v276[v274];
                if ((unint64_t)&v276[v274] >= v275) {
                  break;
                }
                int v278 = *v277;
                if (v82 == v278 || v239 == v278) {
                  goto LABEL_586;
                }
                v17[10] = &v276[++v274];
                if ((int)v274 + 1 > v35) {
                  goto LABEL_532;
                }
              }
              unsigned int v296 = *v1436;
              if (!*v1436) {
                goto LABEL_586;
              }
              if ((unint64_t)v277 <= *v1433)
              {
LABEL_584:
                if (*v1430) {
                  goto LABEL_585;
                }
LABEL_586:
                uint64_t v23 = 0;
                uint64_t v12 = v37;
                goto LABEL_2587;
              }
LABEL_585:
              _DWORD *v1431 = 1;
              if (v296 > 1) {
                return 4294967294;
              }
              goto LABEL_586;
            }
LABEL_532:
            uint64_t v12 = v37;
            if (v36 == v35) {
              continue;
            }
            if (!v37)
            {
              uint64_t v12 = 0;
              int v7 = a6;
              if (!v16)
              {
LABEL_3598:
                int v13 = 0;
                char v1390 = 29;
                goto LABEL_3479;
              }
              char v1390 = -52;
LABEL_3509:
              int v13 = 0;
              goto LABEL_3479;
            }
            uint64_t v280 = v17[10];
            v17[1] = v280;
            int v281 = v280;
            BOOL v282 = v36 >= v35;
            unsigned int v283 = v36 - v35;
            if (v16)
            {
              if (v283 != 0 && v282)
              {
                unint64_t v284 = *v18;
                int v281 = v280;
                while ((unint64_t)v281 < v284)
                {
                  unsigned int v285 = *v281;
                  if (v285 < 0xC0)
                  {
                    uint64_t v287 = 1;
                  }
                  else
                  {
                    int v286 = v281[1] & 0x3F;
                    if ((v285 & 0x20) != 0)
                    {
                      if ((v285 & 0x10) != 0)
                      {
                        if ((v285 & 8) != 0)
                        {
                          int v288 = v281[2] & 0x3F;
                          int v289 = v281[3] & 0x3F;
                          int v290 = v281[4] & 0x3F;
                          if ((v285 & 4) != 0)
                          {
                            unsigned int v285 = ((v285 & 1) << 30) | (v286 << 24) | (v288 << 18) | (v289 << 12) | (v290 << 6) | v281[5] & 0x3F;
                            uint64_t v287 = 6;
                          }
                          else
                          {
                            unsigned int v285 = ((v285 & 3) << 24) | (v286 << 18) | (v288 << 12) | (v289 << 6) | v290;
                            uint64_t v287 = 5;
                          }
                        }
                        else
                        {
                          unsigned int v285 = ((v285 & 7) << 18) | (v286 << 12) | ((v281[2] & 0x3F) << 6) | v281[3] & 0x3F;
                          uint64_t v287 = 4;
                        }
                      }
                      else
                      {
                        unsigned int v285 = ((v285 & 0xF) << 12) | (v286 << 6) | v281[2] & 0x3F;
                        uint64_t v287 = 3;
                      }
                    }
                    else
                    {
                      uint64_t v287 = 2;
                      unsigned int v285 = v281[1] & 0x3F | ((v285 & 0x1F) << 6);
                    }
                  }
                  if (v82 != v285 && v239 != v285)
                  {
                    v281 += v287;
                    v17[10] = v281;
                    if (--v283) {
                      continue;
                    }
                  }
                  goto LABEL_792;
                }
                unsigned int v381 = *v1436;
                if (*v1436 && ((unint64_t)v281 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v381 > 1) {
                    return 4294967294;
                  }
                }
              }
LABEL_792:
              uint64_t v12 = 2;
              if (v37 == 2) {
                continue;
              }
LABEL_3399:
              uint64_t v12 = v37;
              if (v281 > v280)
              {
                int v13 = 0;
                a2 = *v17;
                char v1390 = -51;
                goto LABEL_3563;
              }
            }
            else
            {
              if (v283 != 0 && v282)
              {
                unint64_t v293 = *v18;
                int v281 = v280;
                while ((unint64_t)v281 < v293)
                {
                  int v294 = *v281;
                  if (v82 != v294 && v239 != v294)
                  {
                    v17[10] = ++v281;
                    if (--v283) {
                      continue;
                    }
                  }
                  goto LABEL_804;
                }
                unsigned int v383 = *v1436;
                if (*v1436 && ((unint64_t)v281 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v383 > 1) {
                    return 4294967294;
                  }
                }
              }
LABEL_804:
              uint64_t v12 = 2;
              if (v37 == 2) {
                continue;
              }
LABEL_3382:
              uint64_t v12 = v37;
              if (v281 != v280)
              {
                int v13 = 0;
                a2 = *v17;
                char v1390 = 30;
LABEL_3563:
                uint64_t v12 = v37;
                goto LABEL_3478;
              }
            }
          }
          continue;
        case 0x55u:
        case 0x56u:
        case 0x57u:
        case 0x58u:
        case 0x59u:
        case 0x5Au:
          unsigned int v38 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          unsigned int v39 = *v20 - 85;
          unsigned int v40 = dword_1A68ABDE0[v39];
          *((_DWORD *)v17 + 14) = v40;
          *((_DWORD *)v17 + 15) = dword_1A68ABE0C[v39];
          uint64_t v12 = dword_1A68ABE38[v39];
          goto LABEL_331;
        case 0x5Bu:
        case 0x5Cu:
          unsigned int v40 = 0;
          *((_DWORD *)v17 + 14) = 0;
          *((_DWORD *)v17 + 15) = __rev16(*(unsigned __int16 *)(v20 + 1));
          uint64_t v12 = *v20 != 92;
          goto LABEL_323;
        case 0x5Du:
          unsigned int v40 = __rev16(*(unsigned __int16 *)(v20 + 1));
          *((_DWORD *)v17 + 14) = v40;
          *((_DWORD *)v17 + 15) = v40;
LABEL_323:
          unsigned int v38 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          goto LABEL_331;
        case 0x5Eu:
          unsigned int v40 = 0;
          unint64_t v179 = 0xFFFFFFFF00000000;
          goto LABEL_328;
        case 0x5Fu:
          v17[7] = (unsigned __int8 *)0xFFFFFFFF00000001;
          uint64_t v180 = (unsigned int *)(v17 + 7);
          unint64_t *v17 = v20 + 2;
          int v181 = v20[1];
          *((_DWORD *)v17 + 16) = v181;
          __int8 v182 = v17 + 8;
          if ((v181 - 15) <= 1)
          {
            unint64_t *v17 = v20 + 3;
            uint64_t v183 = v20[2];
            unint64_t *v17 = v20 + 4;
            unsigned int v184 = v20[3];
            *((_DWORD *)v17 + 17) = v184;
            uint64_t v12 = 2;
            unsigned int v40 = 1;
            goto LABEL_333;
          }
          uint64_t v12 = 2;
          unsigned int v40 = 1;
          goto LABEL_372;
        case 0x60u:
          unsigned int v40 = 0;
          unint64_t v179 = 0x100000000;
LABEL_328:
          v17[7] = (unsigned __int8 *)v179;
          unsigned int v38 = v20 + 1;
          goto LABEL_330;
        case 0x61u:
          unsigned int v40 = 0;
          *((_DWORD *)v17 + 14) = 0;
          *((_DWORD *)v17 + 15) = __rev16(*(unsigned __int16 *)(v20 + 1));
          unsigned int v38 = v20 + 3;
LABEL_330:
          unint64_t *v17 = v38;
          uint64_t v12 = 2;
LABEL_331:
          unint64_t *v17 = v38 + 1;
          int v181 = *v38;
          *((_DWORD *)v17 + 16) = v181;
          __int8 v182 = v17 + 8;
          if ((v181 - 15) < 2)
          {
            unint64_t *v17 = v38 + 2;
            uint64_t v183 = v38[1];
            unint64_t *v17 = v38 + 3;
            unsigned int v184 = v38[2];
            *((_DWORD *)v17 + 17) = v184;
            if (v40)
            {
LABEL_333:
              switch((int)v183)
              {
                case 0:
                  if (v181 == 15) {
                    goto LABEL_2113;
                  }
                  unint64_t v384 = *v18;
                  unsigned int v385 = v17[10];
                  unsigned int v386 = 1;
                  while ((unint64_t)v385 < v384)
                  {
                    BOOL v387 = v385 + 1;
                    v17[10] = v385 + 1;
                    if (v16)
                    {
                      unsigned int v388 = *v385;
                      if (v388 >= 0xC0)
                      {
                        uint64_t v389 = 2;
                        uint64_t v390 = 3;
                        uint64_t v391 = 4;
                        uint64_t v392 = 5;
                        if ((v388 & 4) != 0) {
                          uint64_t v392 = 6;
                        }
                        if ((v388 & 8) != 0) {
                          uint64_t v391 = v392;
                        }
                        if ((v388 & 0x10) != 0) {
                          uint64_t v390 = v391;
                        }
                        if ((v388 & 0x20) != 0) {
                          uint64_t v389 = v390;
                        }
                        BOOL v387 = &v385[v389];
                        v17[10] = v387;
                      }
                    }
                    ++v386;
                    unsigned int v385 = v387;
                    if (v386 > v40) {
                      goto LABEL_1425;
                    }
                  }
                  unsigned int v579 = *v1436;
                  if (!*v1436) {
                    goto LABEL_2113;
                  }
                  if ((unint64_t)v385 <= *v1433) {
                    goto LABEL_1357;
                  }
                  goto LABEL_1358;
                case 1:
                  unint64_t v393 = *v18;
                  char v394 = v17[10];
                  int v395 = 1;
                  while (1)
                  {
                    if ((unint64_t)v394 >= v393)
                    {
                      unsigned int v579 = *v1436;
                      if (*v1436)
                      {
                        if ((unint64_t)v394 > *v1433) {
                          goto LABEL_1358;
                        }
                        goto LABEL_1357;
                      }
                      goto LABEL_2113;
                    }
                    v17[10] = v394 + 1;
                    unsigned int v396 = *v394;
                    if (v16 && v396 >= 0xC0)
                    {
                      if ((v396 & 0x20) != 0)
                      {
                        int v398 = v394[1] & 0x3F;
                        if ((v396 & 0x10) != 0)
                        {
                          if ((v396 & 8) != 0)
                          {
                            int v399 = v394[2] & 0x3F;
                            int v400 = v394[3] & 0x3F;
                            int v401 = v394[4] & 0x3F;
                            if ((v396 & 4) != 0)
                            {
                              unsigned int v396 = ((v396 & 1) << 30) | (v398 << 24) | (v399 << 18) | (v400 << 12) | (v401 << 6) | v394[5] & 0x3F;
                              v394 += 6;
                            }
                            else
                            {
                              unsigned int v396 = ((v396 & 3) << 24) | (v398 << 18) | (v399 << 12) | (v400 << 6) | v401;
                              v394 += 5;
                            }
                            v17[10] = v394;
                            __int32 v18 = v1434;
                            goto LABEL_838;
                          }
                          unsigned int v396 = ((v396 & 7) << 18) | (v398 << 12) | ((v394[2] & 0x3F) << 6) | v394[3] & 0x3F;
                          v394 += 4;
                        }
                        else
                        {
                          unsigned int v396 = ((v396 & 0xF) << 12) | (v398 << 6) | v394[2] & 0x3F;
                          v394 += 3;
                        }
                        v17[10] = v394;
                      }
                      else
                      {
                        v17[10] = v394 + 2;
                        int v397 = v394[1] & 0x3F | ((v396 & 0x1F) << 6);
                        v394 += 2;
                        unsigned int v396 = v397;
                      }
                    }
                    else
                    {
                      ++v394;
                    }
LABEL_838:
                    unsigned int v402 = _pcre2_ucd_records_8[12
                                              * _pcre2_ucd_stage2_8[v396 & 0x7F | (_pcre2_ucd_stage1_8[v396 >> 7] << 7)]
                                              + 1];
                    BOOL v110 = v402 > 9;
                    int v403 = (1 << v402) & 0x320;
                    if (v110 || v403 == 0)
                    {
                      if (v181 != 15) {
                        goto LABEL_2113;
                      }
                    }
                    else if (v181 == 15)
                    {
                      goto LABEL_2113;
                    }
                    if (++v395 > v40) {
                      goto LABEL_1425;
                    }
                  }
                case 2:
                  unint64_t v405 = *v18;
                  uint64_t v406 = v17[10];
                  for (unsigned int i = 1; i <= v40; ++i)
                  {
                    if ((unint64_t)v406 >= v405)
                    {
                      unsigned int v579 = *v1436;
                      if (*v1436)
                      {
                        if ((unint64_t)v406 > *v1433) {
                          goto LABEL_1358;
                        }
LABEL_1357:
                        if (*v1430)
                        {
LABEL_1358:
                          _DWORD *v1431 = 1;
                          if (v579 > 1) {
                            return 4294967294;
                          }
                        }
                      }
LABEL_2113:
                      uint64_t v23 = 0;
                      goto LABEL_2587;
                    }
                    v17[10] = v406 + 1;
                    unsigned int v408 = *v406;
                    if (v16 && v408 >= 0xC0)
                    {
                      if ((v408 & 0x20) != 0)
                      {
                        int v410 = v406[1] & 0x3F;
                        if ((v408 & 0x10) != 0)
                        {
                          if ((v408 & 8) != 0)
                          {
                            int v411 = v406[2] & 0x3F;
                            int v412 = v406[3] & 0x3F;
                            int v413 = v406[4] & 0x3F;
                            if ((v408 & 4) != 0)
                            {
                              unsigned int v408 = ((v408 & 1) << 30) | (v410 << 24) | (v411 << 18) | (v412 << 12) | (v413 << 6) | v406[5] & 0x3F;
                              v406 += 6;
                            }
                            else
                            {
                              unsigned int v408 = ((v408 & 3) << 24) | (v410 << 18) | (v411 << 12) | (v412 << 6) | v413;
                              v406 += 5;
                            }
                          }
                          else
                          {
                            unsigned int v408 = ((v408 & 7) << 18) | (v410 << 12) | ((v406[2] & 0x3F) << 6) | v406[3] & 0x3F;
                            v406 += 4;
                          }
                        }
                        else
                        {
                          unsigned int v408 = ((v408 & 0xF) << 12) | (v410 << 6) | v406[2] & 0x3F;
                          v406 += 3;
                        }
                        v17[10] = v406;
                      }
                      else
                      {
                        v17[10] = v406 + 2;
                        int v409 = v406[1] & 0x3F | ((v408 & 0x1F) << 6);
                        v406 += 2;
                        unsigned int v408 = v409;
                      }
                    }
                    else
                    {
                      ++v406;
                    }
                    if ((v181 == 15) != (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                                  * _pcre2_ucd_stage2_8[v408 & 0x7F | (_pcre2_ucd_stage1_8[v408 >> 7] << 7)]
                                                                                  + 1]] != v184))
                    {
LABEL_1062:
                      uint64_t v23 = 0;
                      __int32 v18 = v1434;
                      goto LABEL_2587;
                    }
                    __int32 v18 = v1434;
                  }
                  goto LABEL_1425;
                case 3:
                  unint64_t v414 = *v18;
                  int v186 = v17[10];
                  int v415 = 1;
                  while (1)
                  {
                    if ((unint64_t)v186 >= v414)
                    {
                      unsigned int v234 = *v1436;
                      if (*v1436) {
                        goto LABEL_1041;
                      }
                      goto LABEL_2113;
                    }
                    v17[10] = v186 + 1;
                    unsigned int v416 = *v186;
                    if (v16 && v416 >= 0xC0)
                    {
                      if ((v416 & 0x20) != 0)
                      {
                        int v418 = v186[1] & 0x3F;
                        if ((v416 & 0x10) != 0)
                        {
                          if ((v416 & 8) != 0)
                          {
                            int v419 = v186[2] & 0x3F;
                            int v420 = v186[3] & 0x3F;
                            int v421 = v186[4] & 0x3F;
                            if ((v416 & 4) != 0)
                            {
                              unsigned int v416 = ((v416 & 1) << 30) | (v418 << 24) | (v419 << 18) | (v420 << 12) | (v421 << 6) | v186[5] & 0x3F;
                              v186 += 6;
                            }
                            else
                            {
                              unsigned int v416 = ((v416 & 3) << 24) | (v418 << 18) | (v419 << 12) | (v420 << 6) | v421;
                              v186 += 5;
                            }
                            v17[10] = v186;
                            __int32 v18 = v1434;
                            goto LABEL_881;
                          }
                          unsigned int v416 = ((v416 & 7) << 18) | (v418 << 12) | ((v186[2] & 0x3F) << 6) | v186[3] & 0x3F;
                          v186 += 4;
                        }
                        else
                        {
                          unsigned int v416 = ((v416 & 0xF) << 12) | (v418 << 6) | v186[2] & 0x3F;
                          v186 += 3;
                        }
                        v17[10] = v186;
                      }
                      else
                      {
                        v17[10] = v186 + 2;
                        int v417 = v186[1] & 0x3F | ((v416 & 0x1F) << 6);
                        v186 += 2;
                        unsigned int v416 = v417;
                      }
                    }
                    else
                    {
                      ++v186;
                    }
LABEL_881:
                    if ((v181 == 15) != (v184 != _pcre2_ucd_records_8[12
                                                                     * _pcre2_ucd_stage2_8[v416 & 0x7F | (_pcre2_ucd_stage1_8[v416 >> 7] << 7)]
                                                                     + 1]))
                      goto LABEL_1971;
                    if (++v415 > v40) {
                      goto LABEL_1425;
                    }
                  }
                case 4:
                  unint64_t v422 = *v18;
                  int v186 = v17[10];
                  int v423 = 1;
                  while (1)
                  {
                    if ((unint64_t)v186 >= v422) {
                      goto LABEL_1040;
                    }
                    v17[10] = v186 + 1;
                    unsigned int v424 = *v186;
                    if (v16 && v424 >= 0xC0)
                    {
                      if ((v424 & 0x20) != 0)
                      {
                        int v426 = v186[1] & 0x3F;
                        if ((v424 & 0x10) != 0)
                        {
                          if ((v424 & 8) != 0)
                          {
                            int v427 = v186[2] & 0x3F;
                            int v428 = v186[3] & 0x3F;
                            int v429 = v186[4] & 0x3F;
                            if ((v424 & 4) != 0)
                            {
                              unsigned int v424 = ((v424 & 1) << 30) | (v426 << 24) | (v427 << 18) | (v428 << 12) | (v429 << 6) | v186[5] & 0x3F;
                              v186 += 6;
                            }
                            else
                            {
                              unsigned int v424 = ((v424 & 3) << 24) | (v426 << 18) | (v427 << 12) | (v428 << 6) | v429;
                              v186 += 5;
                            }
                            v17[10] = v186;
                            __int32 v18 = v1434;
                            goto LABEL_900;
                          }
                          unsigned int v424 = ((v424 & 7) << 18) | (v426 << 12) | ((v186[2] & 0x3F) << 6) | v186[3] & 0x3F;
                          v186 += 4;
                        }
                        else
                        {
                          unsigned int v424 = ((v424 & 0xF) << 12) | (v426 << 6) | v186[2] & 0x3F;
                          v186 += 3;
                        }
                        v17[10] = v186;
                      }
                      else
                      {
                        v17[10] = v186 + 2;
                        int v425 = v186[1] & 0x3F | ((v424 & 0x1F) << 6);
                        v186 += 2;
                        unsigned int v424 = v425;
                      }
                    }
                    else
                    {
                      ++v186;
                    }
LABEL_900:
                    if ((v181 == 15) != (v184 != _pcre2_ucd_records_8[12
                                                                     * _pcre2_ucd_stage2_8[v424 & 0x7F | (_pcre2_ucd_stage1_8[v424 >> 7] << 7)]]))
                      goto LABEL_1971;
                    if (++v423 > v40) {
                      goto LABEL_1425;
                    }
                  }
                case 5:
                  unint64_t v430 = *v18;
                  v431 = v17[10];
                  for (unsigned int j = 1; j <= v40; ++j)
                  {
                    if ((unint64_t)v431 >= v430) {
                      goto LABEL_1148;
                    }
                    v17[10] = v431 + 1;
                    unsigned int v433 = *v431;
                    if (v16 && v433 >= 0xC0)
                    {
                      if ((v433 & 0x20) != 0)
                      {
                        int v435 = v431[1] & 0x3F;
                        if ((v433 & 0x10) != 0)
                        {
                          if ((v433 & 8) != 0)
                          {
                            int v436 = v431[2] & 0x3F;
                            int v437 = v431[3] & 0x3F;
                            int v438 = v431[4] & 0x3F;
                            if ((v433 & 4) != 0)
                            {
                              unsigned int v433 = ((v433 & 1) << 30) | (v435 << 24) | (v436 << 18) | (v437 << 12) | (v438 << 6) | v431[5] & 0x3F;
                              v431 += 6;
                            }
                            else
                            {
                              unsigned int v433 = ((v433 & 3) << 24) | (v435 << 18) | (v436 << 12) | (v437 << 6) | v438;
                              v431 += 5;
                            }
                          }
                          else
                          {
                            unsigned int v433 = ((v433 & 7) << 18) | (v435 << 12) | ((v431[2] & 0x3F) << 6) | v431[3] & 0x3F;
                            v431 += 4;
                          }
                        }
                        else
                        {
                          unsigned int v433 = ((v433 & 0xF) << 12) | (v435 << 6) | v431[2] & 0x3F;
                          v431 += 3;
                        }
                        v17[10] = v431;
                      }
                      else
                      {
                        v17[10] = v431 + 2;
                        int v434 = v431[1] & 0x3F | ((v433 & 0x1F) << 6);
                        v431 += 2;
                        unsigned int v433 = v434;
                      }
                    }
                    else
                    {
                      ++v431;
                    }
                    int v439 = _pcre2_ucd_stage2_8[v433 & 0x7F | (_pcre2_ucd_stage1_8[v433 >> 7] << 7)];
                    if (v184 == _pcre2_ucd_records_8[12 * v439]) {
                      BOOL v440 = v181 == 15;
                    }
                    else {
                      BOOL v440 = (v181 == 15) == ((_pcre2_ucd_script_sets_8[(v184 >> 5)
                    }
                                                                      + (*(_WORD *)&_pcre2_ucd_records_8[12 * v439 + 8] & 0x3FF)] & (1 << v184)) != 0);
                    __int32 v18 = v1434;
                    if (v440) {
                      goto LABEL_1971;
                    }
                  }
                  goto LABEL_1425;
                case 6:
                  unint64_t v441 = *v18;
                  int v186 = v17[10];
                  int v442 = 1;
                  while (1)
                  {
                    if ((unint64_t)v186 >= v441) {
                      goto LABEL_1040;
                    }
                    v17[10] = v186 + 1;
                    unsigned int v443 = *v186;
                    if (v16 && v443 >= 0xC0)
                    {
                      if ((v443 & 0x20) != 0)
                      {
                        int v445 = v186[1] & 0x3F;
                        if ((v443 & 0x10) != 0)
                        {
                          if ((v443 & 8) != 0)
                          {
                            int v446 = v186[2] & 0x3F;
                            int v447 = v186[3] & 0x3F;
                            int v448 = v186[4] & 0x3F;
                            if ((v443 & 4) != 0)
                            {
                              unsigned int v443 = ((v443 & 1) << 30) | (v445 << 24) | (v446 << 18) | (v447 << 12) | (v448 << 6) | v186[5] & 0x3F;
                              v186 += 6;
                            }
                            else
                            {
                              unsigned int v443 = ((v443 & 3) << 24) | (v445 << 18) | (v446 << 12) | (v447 << 6) | v448;
                              v186 += 5;
                            }
                            v17[10] = v186;
                            __int32 v18 = v1434;
                            goto LABEL_940;
                          }
                          unsigned int v443 = ((v443 & 7) << 18) | (v445 << 12) | ((v186[2] & 0x3F) << 6) | v186[3] & 0x3F;
                          v186 += 4;
                        }
                        else
                        {
                          unsigned int v443 = ((v443 & 0xF) << 12) | (v445 << 6) | v186[2] & 0x3F;
                          v186 += 3;
                        }
                        v17[10] = v186;
                      }
                      else
                      {
                        v17[10] = v186 + 2;
                        int v444 = v186[1] & 0x3F | ((v443 & 0x1F) << 6);
                        v186 += 2;
                        unsigned int v443 = v444;
                      }
                    }
                    else
                    {
                      ++v186;
                    }
LABEL_940:
                    if ((v181 == 15) != ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                                   * _pcre2_ucd_stage2_8[v443 & 0x7F | (_pcre2_ucd_stage1_8[v443 >> 7] << 7)]
                                                                                   + 1]] & 0xFFFFFFFD) != 1))
                      goto LABEL_1971;
                    if (++v442 > v40) {
                      goto LABEL_1425;
                    }
                  }
                case 7:
                case 8:
                  unint64_t v185 = *v18;
                  int v186 = v17[10];
                  int v187 = 1;
                  while (1)
                  {
                    if ((unint64_t)v186 >= v185) {
                      goto LABEL_1040;
                    }
                    v17[10] = v186 + 1;
                    int v188 = *v186;
                    if (!v16 || v188 < 0xC0)
                    {
                      ++v186;
                      goto LABEL_350;
                    }
                    if ((v188 & 0x20) == 0)
                    {
                      v17[10] = v186 + 2;
                      int v189 = v186[1] & 0x3F | ((v188 & 0x1F) << 6);
                      v186 += 2;
                      int v188 = v189;
                      goto LABEL_350;
                    }
                    int v190 = v186[1] & 0x3F;
                    if ((v188 & 0x10) == 0) {
                      break;
                    }
                    if ((v188 & 8) == 0)
                    {
                      int v188 = ((v188 & 7) << 18) | (v190 << 12) | ((v186[2] & 0x3F) << 6) | v186[3] & 0x3F;
                      v186 += 4;
                      goto LABEL_345;
                    }
                    int v191 = v186[2] & 0x3F;
                    int v192 = v186[3] & 0x3F;
                    int v193 = v186[4] & 0x3F;
                    if ((v188 & 4) != 0)
                    {
                      int v188 = ((v188 & 1) << 30) | (v190 << 24) | (v191 << 18) | (v192 << 12) | (v193 << 6) | v186[5] & 0x3F;
                      v186 += 6;
                    }
                    else
                    {
                      int v188 = ((v188 & 3) << 24) | (v190 << 18) | (v191 << 12) | (v192 << 6) | v193;
                      v186 += 5;
                    }
                    v17[10] = v186;
                    __int32 v18 = v1434;
LABEL_350:
                    if (v188 < 0x2000)
                    {
                      if (v188 > 132)
                      {
                        if (v188 > 5759)
                        {
                          if (v188 != 5760 && v188 != 6158) {
                            goto LABEL_368;
                          }
                        }
                        else if (v188 != 133 && v188 != 160)
                        {
                          goto LABEL_368;
                        }
                      }
                      else if (v188 > 0x20 || ((1 << v188) & 0x100003E00) == 0)
                      {
                        goto LABEL_368;
                      }
                    }
                    else if ((v188 - 0x2000) >= 0xB {
                           && ((v188 - 8232) > 0x37
                    }
                            || ((1 << (v188 - 40)) & 0x80000000000083) == 0)
                           && v188 != 12288)
                    {
LABEL_368:
                      if ((v181 == 15) != (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                                    * _pcre2_ucd_stage2_8[v188 & 0x7F | (_pcre2_ucd_stage1_8[v188 >> 7] << 7)]
                                                                                    + 1]] != 6))
                        goto LABEL_1971;
                      goto LABEL_360;
                    }
                    if (v181 == 15) {
                      goto LABEL_1971;
                    }
LABEL_360:
                    if (++v187 > v40) {
                      goto LABEL_1425;
                    }
                  }
                  int v188 = ((v188 & 0xF) << 12) | (v190 << 6) | v186[2] & 0x3F;
                  v186 += 3;
LABEL_345:
                  v17[10] = v186;
                  goto LABEL_350;
                case 9:
                  unint64_t v449 = *v18;
                  int v186 = v17[10];
                  int v450 = 1;
                  while (1)
                  {
                    if ((unint64_t)v186 >= v449) {
                      goto LABEL_1040;
                    }
                    v17[10] = v186 + 1;
                    unsigned int v451 = *v186;
                    if (v16 && v451 >= 0xC0)
                    {
                      if ((v451 & 0x20) != 0)
                      {
                        int v453 = v186[1] & 0x3F;
                        if ((v451 & 0x10) != 0)
                        {
                          if ((v451 & 8) != 0)
                          {
                            int v454 = v186[2] & 0x3F;
                            int v455 = v186[3] & 0x3F;
                            int v456 = v186[4] & 0x3F;
                            if ((v451 & 4) != 0)
                            {
                              unsigned int v451 = ((v451 & 1) << 30) | (v453 << 24) | (v454 << 18) | (v455 << 12) | (v456 << 6) | v186[5] & 0x3F;
                              v186 += 6;
                            }
                            else
                            {
                              unsigned int v451 = ((v451 & 3) << 24) | (v453 << 18) | (v454 << 12) | (v455 << 6) | v456;
                              v186 += 5;
                            }
                            v17[10] = v186;
                            __int32 v18 = v1434;
                            goto LABEL_959;
                          }
                          unsigned int v451 = ((v451 & 7) << 18) | (v453 << 12) | ((v186[2] & 0x3F) << 6) | v186[3] & 0x3F;
                          v186 += 4;
                        }
                        else
                        {
                          unsigned int v451 = ((v451 & 0xF) << 12) | (v453 << 6) | v186[2] & 0x3F;
                          v186 += 3;
                        }
                        v17[10] = v186;
                      }
                      else
                      {
                        v17[10] = v186 + 2;
                        int v452 = v186[1] & 0x3F | ((v451 & 0x1F) << 6);
                        v186 += 2;
                        unsigned int v451 = v452;
                      }
                    }
                    else
                    {
                      ++v186;
                    }
LABEL_959:
                    BOOL v458 = v451 == 95
                        || (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                    * _pcre2_ucd_stage2_8[v451 & 0x7F | (_pcre2_ucd_stage1_8[v451 >> 7] << 7)]
                                                                    + 1]] & 0xFFFFFFFD) == 1;
                    if ((((v181 == 15) ^ v458) & 1) == 0) {
                      goto LABEL_1971;
                    }
                    if (++v450 > v40) {
                      goto LABEL_1425;
                    }
                  }
                case 10:
                  unint64_t v459 = *v18;
                  v460 = v17[10];
                  v461 = &_pcre2_ucd_caseless_sets_8[v184];
                  for (unsigned int k = 1; k <= v40; ++k)
                  {
                    if ((unint64_t)v460 >= v459) {
                      goto LABEL_1869;
                    }
                    v17[10] = v460 + 1;
                    unsigned int v463 = *v460;
                    if (v16 && v463 >= 0xC0)
                    {
                      if ((v463 & 0x20) != 0)
                      {
                        int v465 = v460[1] & 0x3F;
                        if ((v463 & 0x10) != 0)
                        {
                          if ((v463 & 8) != 0)
                          {
                            int v466 = v460[2] & 0x3F;
                            int v467 = v460[3] & 0x3F;
                            int v468 = v460[4] & 0x3F;
                            if ((v463 & 4) != 0)
                            {
                              unsigned int v463 = ((v463 & 1) << 30) | (v465 << 24) | (v466 << 18) | (v467 << 12) | (v468 << 6) | v460[5] & 0x3F;
                              v460 += 6;
                            }
                            else
                            {
                              unsigned int v463 = ((v463 & 3) << 24) | (v465 << 18) | (v466 << 12) | (v467 << 6) | v468;
                              v460 += 5;
                            }
                          }
                          else
                          {
                            unsigned int v463 = ((v463 & 7) << 18) | (v465 << 12) | ((v460[2] & 0x3F) << 6) | v460[3] & 0x3F;
                            v460 += 4;
                          }
                        }
                        else
                        {
                          unsigned int v463 = ((v463 & 0xF) << 12) | (v465 << 6) | v460[2] & 0x3F;
                          v460 += 3;
                        }
                        v17[10] = v460;
                      }
                      else
                      {
                        v17[10] = v460 + 2;
                        int v464 = v460[1] & 0x3F | ((v463 & 0x1F) << 6);
                        v460 += 2;
                        unsigned int v463 = v464;
                      }
                    }
                    else
                    {
                      ++v460;
                    }
                    v469 = v461;
                    while (1)
                    {
                      unsigned int v470 = *v469;
                      if (v463 < *v469) {
                        break;
                      }
                      ++v469;
                      if (v463 == v470)
                      {
                        if (v181 == 15) {
                          goto LABEL_1971;
                        }
                        goto LABEL_989;
                      }
                    }
                    if (v181 != 15) {
                      goto LABEL_1971;
                    }
LABEL_989:
                    ;
                  }
                  goto LABEL_1425;
                case 11:
                  unint64_t v471 = *v18;
                  v472 = v17[10];
                  for (unsigned int m = 1; m <= v40; ++m)
                  {
                    if ((unint64_t)v472 >= v471) {
                      goto LABEL_1804;
                    }
                    v17[10] = v472 + 1;
                    unsigned int v474 = *v472;
                    if (v16 && v474 >= 0xC0)
                    {
                      if ((v474 & 0x20) != 0)
                      {
                        int v476 = v472[1] & 0x3F;
                        if ((v474 & 0x10) != 0)
                        {
                          if ((v474 & 8) != 0)
                          {
                            int v477 = v472[2] & 0x3F;
                            int v478 = v472[3] & 0x3F;
                            int v479 = v472[4] & 0x3F;
                            if ((v474 & 4) != 0)
                            {
                              unsigned int v474 = ((v474 & 1) << 30) | (v476 << 24) | (v477 << 18) | (v478 << 12) | (v479 << 6) | v472[5] & 0x3F;
                              v472 += 6;
                            }
                            else
                            {
                              unsigned int v474 = ((v474 & 3) << 24) | (v476 << 18) | (v477 << 12) | (v478 << 6) | v479;
                              v472 += 5;
                            }
                          }
                          else
                          {
                            unsigned int v474 = ((v474 & 7) << 18) | (v476 << 12) | ((v472[2] & 0x3F) << 6) | v472[3] & 0x3F;
                            v472 += 4;
                          }
                        }
                        else
                        {
                          unsigned int v474 = ((v474 & 0xF) << 12) | (v476 << 6) | v472[2] & 0x3F;
                          v472 += 3;
                        }
                        v17[10] = v472;
                      }
                      else
                      {
                        v17[10] = v472 + 2;
                        int v475 = v472[1] & 0x3F | ((v474 & 0x1F) << 6);
                        v472 += 2;
                        unsigned int v474 = v475;
                      }
                    }
                    else
                    {
                      ++v472;
                    }
                    if (v474 - 36 > 0x3C || ((1 << (v474 - 36)) & 0x1000000010000001) == 0)
                    {
                      BOOL v482 = v474 >> 13 > 6 || (v474 - 160) >> 5 < 0x6BB;
                      if ((v181 == 15) == v482) {
                        goto LABEL_1971;
                      }
                    }
                    else if (v181 == 15)
                    {
                      goto LABEL_1971;
                    }
                  }
                  goto LABEL_1425;
                case 12:
                  unint64_t v483 = *v18;
                  int v186 = v17[10];
                  int v484 = 1;
                  break;
                case 13:
                  unint64_t v491 = *v18;
                  v431 = v17[10];
                  v492 = &_pcre2_ucd_BOOLprop_sets_8[v184 >> 5];
                  unsigned int v493 = 1;
                  int v494 = 1 << v184;
                  while ((unint64_t)v431 < v491)
                  {
                    v17[10] = v431 + 1;
                    unsigned int v495 = *v431;
                    if (v16 && v495 >= 0xC0)
                    {
                      if ((v495 & 0x20) != 0)
                      {
                        int v497 = v431[1] & 0x3F;
                        if ((v495 & 0x10) != 0)
                        {
                          if ((v495 & 8) != 0)
                          {
                            int v498 = v431[2] & 0x3F;
                            int v499 = v431[3] & 0x3F;
                            int v500 = v431[4] & 0x3F;
                            if ((v495 & 4) != 0)
                            {
                              unsigned int v495 = ((v495 & 1) << 30) | (v497 << 24) | (v498 << 18) | (v499 << 12) | (v500 << 6) | v431[5] & 0x3F;
                              v431 += 6;
                            }
                            else
                            {
                              unsigned int v495 = ((v495 & 3) << 24) | (v497 << 18) | (v498 << 12) | (v499 << 6) | v500;
                              v431 += 5;
                            }
                          }
                          else
                          {
                            unsigned int v495 = ((v495 & 7) << 18) | (v497 << 12) | ((v431[2] & 0x3F) << 6) | v431[3] & 0x3F;
                            v431 += 4;
                          }
                        }
                        else
                        {
                          unsigned int v495 = ((v495 & 0xF) << 12) | (v497 << 6) | v431[2] & 0x3F;
                          v431 += 3;
                        }
                        v17[10] = v431;
                      }
                      else
                      {
                        v17[10] = v431 + 2;
                        int v496 = v431[1] & 0x3F | ((v495 & 0x1F) << 6);
                        v431 += 2;
                        unsigned int v495 = v496;
                      }
                    }
                    else
                    {
                      ++v431;
                    }
                    if ((v181 == 15) != ((v494 & v492[*(_WORD *)&_pcre2_ucd_records_8[12
                                                                                     * _pcre2_ucd_stage2_8[v495 & 0x7F | (_pcre2_ucd_stage1_8[v495 >> 7] << 7)]
                                                                                     + 10] & 0xFFF]) == 0))
                      goto LABEL_1061;
                    ++v493;
                    __int32 v18 = v1434;
                    if (v493 > v40) {
                      goto LABEL_1425;
                    }
                  }
LABEL_1148:
                  unsigned int v234 = *v1436;
                  if (!*v1436) {
                    goto LABEL_1971;
                  }
                  if ((unint64_t)v431 <= *v1433) {
                    goto LABEL_1969;
                  }
                  goto LABEL_1970;
                default:
                  return 4294967252;
              }
              while (1)
              {
                if ((unint64_t)v186 >= v483)
                {
LABEL_1040:
                  unsigned int v234 = *v1436;
                  if (*v1436)
                  {
LABEL_1041:
                    if ((unint64_t)v186 > *v1433) {
                      goto LABEL_1970;
                    }
LABEL_1969:
                    if (*v1430) {
                      goto LABEL_1970;
                    }
                  }
LABEL_1971:
                  uint64_t v23 = 0;
                  goto LABEL_2587;
                }
                v17[10] = v186 + 1;
                unsigned int v485 = *v186;
                if (v16 && v485 >= 0xC0)
                {
                  if ((v485 & 0x20) != 0)
                  {
                    int v487 = v186[1] & 0x3F;
                    if ((v485 & 0x10) != 0)
                    {
                      if ((v485 & 8) != 0)
                      {
                        int v488 = v186[2] & 0x3F;
                        int v489 = v186[3] & 0x3F;
                        int v490 = v186[4] & 0x3F;
                        if ((v485 & 4) != 0)
                        {
                          unsigned int v485 = ((v485 & 1) << 30) | (v487 << 24) | (v488 << 18) | (v489 << 12) | (v490 << 6) | v186[5] & 0x3F;
                          v186 += 6;
                        }
                        else
                        {
                          unsigned int v485 = ((v485 & 3) << 24) | (v487 << 18) | (v488 << 12) | (v489 << 6) | v490;
                          v186 += 5;
                        }
                        v17[10] = v186;
                        __int32 v18 = v1434;
                        goto LABEL_1037;
                      }
                      unsigned int v485 = ((v485 & 7) << 18) | (v487 << 12) | ((v186[2] & 0x3F) << 6) | v186[3] & 0x3F;
                      v186 += 4;
                    }
                    else
                    {
                      unsigned int v485 = ((v485 & 0xF) << 12) | (v487 << 6) | v186[2] & 0x3F;
                      v186 += 3;
                    }
                    v17[10] = v186;
                  }
                  else
                  {
                    v17[10] = v186 + 2;
                    int v486 = v186[1] & 0x3F | ((v485 & 0x1F) << 6);
                    v186 += 2;
                    unsigned int v485 = v486;
                  }
                }
                else
                {
                  ++v186;
                }
LABEL_1037:
                if ((v181 == 15) != (v184 != *(unsigned __int16 *)&_pcre2_ucd_records_8[12
                                                                                       * _pcre2_ucd_stage2_8[v485 & 0x7F | (_pcre2_ucd_stage1_8[v485 >> 7] << 7)]
                                                                                       + 8] >> 11))
                  goto LABEL_1971;
                if (++v484 > v40) {
                  goto LABEL_1425;
                }
              }
            }
            goto LABEL_1425;
          }
          if (!v40)
          {
LABEL_1424:
            uint64_t v183 = 0xFFFFFFFFLL;
LABEL_1425:
            uint64_t v204 = v12;
LABEL_1426:
            unsigned int v653 = *((_DWORD *)v17 + 14);
            unsigned int v652 = *((_DWORD *)v17 + 15);
            uint64_t v12 = v204;
            unsigned int v654 = v652 - v653;
            if (v652 == v653) {
              continue;
            }
            if (!v204)
            {
              if ((v183 & 0x80000000) == 0)
              {
                int v7 = a6;
                uint64_t v12 = 0;
                switch((int)v183)
                {
                  case 0:
                    goto LABEL_3543;
                  case 1:
                    goto LABEL_3546;
                  case 2:
                    goto LABEL_3547;
                  case 3:
                    goto LABEL_3548;
                  case 4:
                    goto LABEL_3549;
                  case 5:
                    goto LABEL_3561;
                  case 6:
                    goto LABEL_3550;
                  case 7:
                  case 8:
                    goto LABEL_3552;
                  case 9:
                    goto LABEL_3553;
                  case 10:
                    goto LABEL_3555;
                  case 11:
                    goto LABEL_3557;
                  case 12:
                    goto LABEL_3559;
                  case 13:
                    goto LABEL_3558;
                  default:
                    return 4294967252;
                }
              }
              if (*v182 == 22)
              {
                uint64_t v12 = 0;
                int v7 = a6;
LABEL_3646:
                int v13 = 0;
                a2 = *v17;
                char v1390 = -38;
                goto LABEL_3479;
              }
              uint64_t v12 = 0;
              if (v16)
              {
LABEL_3656:
                int v13 = 0;
                a2 = *v17;
                char v1390 = -37;
                goto LABEL_3478;
              }
LABEL_3611:
              int v13 = 0;
              a2 = *v17;
              char v1390 = 33;
              goto LABEL_3478;
            }
            v655 = v17[10];
            v17[1] = v655;
            int v656 = *((_DWORD *)v17 + 16);
            if ((v183 & 0x80000000) == 0)
            {
              switch((int)v183)
              {
                case 0:
                  unsigned int v687 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v688 = *v18;
                  while ((unint64_t)v655 < v688)
                  {
                    uint64_t v689 = 1;
                    if (v16)
                    {
                      unsigned int v690 = *v655;
                      if (v690 >= 0xC0)
                      {
                        uint64_t v689 = 2;
                        uint64_t v691 = 3;
                        uint64_t v692 = 4;
                        uint64_t v693 = 5;
                        if ((v690 & 4) != 0) {
                          uint64_t v693 = 6;
                        }
                        if ((v690 & 8) != 0) {
                          uint64_t v692 = v693;
                        }
                        if ((v690 & 0x10) != 0) {
                          uint64_t v691 = v692;
                        }
                        if ((v690 & 0x20) != 0) {
                          uint64_t v689 = v691;
                        }
                      }
                    }
                    if (v656 != 15)
                    {
                      v655 += v689;
                      v17[10] = v655;
                      if (--v687) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
                  goto LABEL_1764;
                case 1:
                  unsigned int v694 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v695 = *v18;
                  while ((unint64_t)v655 < v695)
                  {
                    unsigned int v696 = *v655;
                    if (v16 && v696 >= 0xC0)
                    {
                      int v697 = v655[1] & 0x3F;
                      if ((v696 & 0x20) != 0)
                      {
                        if ((v696 & 0x10) != 0)
                        {
                          if ((v696 & 8) != 0)
                          {
                            int v701 = v655[2] & 0x3F;
                            int v702 = v655[3] & 0x3F;
                            int v703 = v655[4] & 0x3F;
                            if ((v696 & 4) != 0)
                            {
                              unsigned int v696 = ((v696 & 1) << 30) | (v697 << 24) | (v701 << 18) | (v702 << 12) | (v703 << 6) | v655[5] & 0x3F;
                              uint64_t v698 = 6;
                            }
                            else
                            {
                              unsigned int v696 = ((v696 & 3) << 24) | (v697 << 18) | (v701 << 12) | (v702 << 6) | v703;
                              uint64_t v698 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v696 = ((v696 & 7) << 18) | (v697 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v698 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v696 = ((v696 & 0xF) << 12) | (v697 << 6) | v655[2] & 0x3F;
                          uint64_t v698 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v698 = 2;
                        unsigned int v696 = v655[1] & 0x3F | ((v696 & 0x1F) << 6);
                      }
                    }
                    else
                    {
                      uint64_t v698 = 1;
                    }
                    unsigned int v699 = _pcre2_ucd_records_8[12
                                              * _pcre2_ucd_stage2_8[v696 & 0x7F | (_pcre2_ucd_stage1_8[v696 >> 7] << 7)]
                                              + 1];
                    if (v699 > 9 || ((1 << v699) & 0x320) == 0)
                    {
                      if (v656 != 15) {
                        goto LABEL_1768;
                      }
                    }
                    else if (v656 == 15)
                    {
                      goto LABEL_1768;
                    }
                    v655 += v698;
                    v17[10] = v655;
                    if (!--v694) {
                      goto LABEL_1768;
                    }
                  }
                  goto LABEL_1764;
                case 2:
                  unsigned int v704 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v705 = *v18;
                  while ((unint64_t)v655 < v705)
                  {
                    unsigned int v706 = *v655;
                    uint64_t v707 = 1;
                    if (v16 && v706 >= 0xC0)
                    {
                      int v708 = v655[1] & 0x3F;
                      if ((v706 & 0x20) != 0)
                      {
                        if ((v706 & 0x10) != 0)
                        {
                          if ((v706 & 8) != 0)
                          {
                            int v709 = v655[2] & 0x3F;
                            int v710 = v655[3] & 0x3F;
                            int v711 = v655[4] & 0x3F;
                            if ((v706 & 4) != 0)
                            {
                              unsigned int v706 = ((v706 & 1) << 30) | (v708 << 24) | (v709 << 18) | (v710 << 12) | (v711 << 6) | v655[5] & 0x3F;
                              uint64_t v707 = 6;
                            }
                            else
                            {
                              unsigned int v706 = ((v706 & 3) << 24) | (v708 << 18) | (v709 << 12) | (v710 << 6) | v711;
                              uint64_t v707 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v706 = ((v706 & 7) << 18) | (v708 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v707 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v706 = ((v706 & 0xF) << 12) | (v708 << 6) | v655[2] & 0x3F;
                          uint64_t v707 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v707 = 2;
                        unsigned int v706 = v655[1] & 0x3F | ((v706 & 0x1F) << 6);
                      }
                    }
                    if ((v656 == 15) == (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                                  * _pcre2_ucd_stage2_8[v706 & 0x7F | (_pcre2_ucd_stage1_8[v706 >> 7] << 7)]
                                                                                  + 1]] != *((_DWORD *)v17 + 17)))
                    {
                      v655 += v707;
                      v17[10] = v655;
                      if (--v704) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
                  goto LABEL_1764;
                case 3:
                  unsigned int v712 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v713 = *v18;
                  while ((unint64_t)v655 < v713)
                  {
                    unsigned int v714 = *v655;
                    uint64_t v715 = 1;
                    if (v16 && v714 >= 0xC0)
                    {
                      int v716 = v655[1] & 0x3F;
                      if ((v714 & 0x20) != 0)
                      {
                        if ((v714 & 0x10) != 0)
                        {
                          if ((v714 & 8) != 0)
                          {
                            int v717 = v655[2] & 0x3F;
                            int v718 = v655[3] & 0x3F;
                            int v719 = v655[4] & 0x3F;
                            if ((v714 & 4) != 0)
                            {
                              unsigned int v714 = ((v714 & 1) << 30) | (v716 << 24) | (v717 << 18) | (v718 << 12) | (v719 << 6) | v655[5] & 0x3F;
                              uint64_t v715 = 6;
                            }
                            else
                            {
                              unsigned int v714 = ((v714 & 3) << 24) | (v716 << 18) | (v717 << 12) | (v718 << 6) | v719;
                              uint64_t v715 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v714 = ((v714 & 7) << 18) | (v716 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v715 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v714 = ((v714 & 0xF) << 12) | (v716 << 6) | v655[2] & 0x3F;
                          uint64_t v715 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v715 = 2;
                        unsigned int v714 = v655[1] & 0x3F | ((v714 & 0x1F) << 6);
                      }
                    }
                    if ((v656 == 15) == (*((_DWORD *)v17 + 17) != _pcre2_ucd_records_8[12
                                                                                      * _pcre2_ucd_stage2_8[v714 & 0x7F | (_pcre2_ucd_stage1_8[v714 >> 7] << 7)]
                                                                                      + 1]))
                    {
                      v655 += v715;
                      v17[10] = v655;
                      if (--v712) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
                  goto LABEL_1764;
                case 4:
                  unsigned int v720 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v721 = *v18;
                  while ((unint64_t)v655 < v721)
                  {
                    unsigned int v722 = *v655;
                    uint64_t v723 = 1;
                    if (v16 && v722 >= 0xC0)
                    {
                      int v724 = v655[1] & 0x3F;
                      if ((v722 & 0x20) != 0)
                      {
                        if ((v722 & 0x10) != 0)
                        {
                          if ((v722 & 8) != 0)
                          {
                            int v725 = v655[2] & 0x3F;
                            int v726 = v655[3] & 0x3F;
                            int v727 = v655[4] & 0x3F;
                            if ((v722 & 4) != 0)
                            {
                              unsigned int v722 = ((v722 & 1) << 30) | (v724 << 24) | (v725 << 18) | (v726 << 12) | (v727 << 6) | v655[5] & 0x3F;
                              uint64_t v723 = 6;
                            }
                            else
                            {
                              unsigned int v722 = ((v722 & 3) << 24) | (v724 << 18) | (v725 << 12) | (v726 << 6) | v727;
                              uint64_t v723 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v722 = ((v722 & 7) << 18) | (v724 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v723 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v722 = ((v722 & 0xF) << 12) | (v724 << 6) | v655[2] & 0x3F;
                          uint64_t v723 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v723 = 2;
                        unsigned int v722 = v655[1] & 0x3F | ((v722 & 0x1F) << 6);
                      }
                    }
                    if ((v656 == 15) == (*((_DWORD *)v17 + 17) != _pcre2_ucd_records_8[12
                                                                                      * _pcre2_ucd_stage2_8[v722 & 0x7F | (_pcre2_ucd_stage1_8[v722 >> 7] << 7)]]))
                    {
                      v655 += v723;
                      v17[10] = v655;
                      if (--v720) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
                  goto LABEL_1764;
                case 5:
                  unsigned int v728 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v729 = *v18;
                  while ((unint64_t)v655 < v729)
                  {
                    unsigned int v730 = *v655;
                    uint64_t v731 = 1;
                    if (v16 && v730 >= 0xC0)
                    {
                      int v732 = v655[1] & 0x3F;
                      if ((v730 & 0x20) != 0)
                      {
                        if ((v730 & 0x10) != 0)
                        {
                          if ((v730 & 8) != 0)
                          {
                            int v733 = v655[2] & 0x3F;
                            int v734 = v655[3] & 0x3F;
                            int v735 = v655[4] & 0x3F;
                            if ((v730 & 4) != 0)
                            {
                              unsigned int v730 = ((v730 & 1) << 30) | (v732 << 24) | (v733 << 18) | (v734 << 12) | (v735 << 6) | v655[5] & 0x3F;
                              uint64_t v731 = 6;
                            }
                            else
                            {
                              unsigned int v730 = ((v730 & 3) << 24) | (v732 << 18) | (v733 << 12) | (v734 << 6) | v735;
                              uint64_t v731 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v730 = ((v730 & 7) << 18) | (v732 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v731 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v730 = ((v730 & 0xF) << 12) | (v732 << 6) | v655[2] & 0x3F;
                          uint64_t v731 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v731 = 2;
                        unsigned int v730 = v655[1] & 0x3F | ((v730 & 0x1F) << 6);
                      }
                    }
                    int v736 = _pcre2_ucd_stage2_8[v730 & 0x7F | (_pcre2_ucd_stage1_8[v730 >> 7] << 7)];
                    unint64_t v737 = *((unsigned int *)v17 + 17);
                    if (v737 == _pcre2_ucd_records_8[12 * v736])
                    {
                      if (v656 == 15) {
                        goto LABEL_1768;
                      }
                    }
                    else if ((v656 == 15) == ((*(_DWORD *)((char *)&_pcre2_ucd_script_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12 * v736 + 8] & 0x3FF] {
                                                          + ((v737 >> 3) & 0x1FFFFFFC)) >> v737) & 1))
                    }
                    {
                      goto LABEL_1768;
                    }
                    v655 += v731;
                    v17[10] = v655;
                    if (!--v728) {
                      goto LABEL_1768;
                    }
                  }
                  goto LABEL_1764;
                case 6:
                  unsigned int v738 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v739 = *v18;
                  while ((unint64_t)v655 < v739)
                  {
                    unsigned int v740 = *v655;
                    uint64_t v741 = 1;
                    if (v16 && v740 >= 0xC0)
                    {
                      int v742 = v655[1] & 0x3F;
                      if ((v740 & 0x20) != 0)
                      {
                        if ((v740 & 0x10) != 0)
                        {
                          if ((v740 & 8) != 0)
                          {
                            int v743 = v655[2] & 0x3F;
                            int v744 = v655[3] & 0x3F;
                            int v745 = v655[4] & 0x3F;
                            if ((v740 & 4) != 0)
                            {
                              unsigned int v740 = ((v740 & 1) << 30) | (v742 << 24) | (v743 << 18) | (v744 << 12) | (v745 << 6) | v655[5] & 0x3F;
                              uint64_t v741 = 6;
                            }
                            else
                            {
                              unsigned int v740 = ((v740 & 3) << 24) | (v742 << 18) | (v743 << 12) | (v744 << 6) | v745;
                              uint64_t v741 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v740 = ((v740 & 7) << 18) | (v742 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v741 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v740 = ((v740 & 0xF) << 12) | (v742 << 6) | v655[2] & 0x3F;
                          uint64_t v741 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v741 = 2;
                        unsigned int v740 = v655[1] & 0x3F | ((v740 & 0x1F) << 6);
                      }
                    }
                    if ((v656 == 15) == ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                                   * _pcre2_ucd_stage2_8[v740 & 0x7F | (_pcre2_ucd_stage1_8[v740 >> 7] << 7)]
                                                                                   + 1]] & 0xFFFFFFFD) != 1))
                    {
                      v655 += v741;
                      v17[10] = v655;
                      if (--v738) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
                  goto LABEL_1764;
                case 7:
                case 8:
                  unsigned int v657 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v658 = *v18;
LABEL_1432:
                  if ((unint64_t)v655 >= v658) {
                    goto LABEL_1764;
                  }
                  int v659 = *v655;
                  uint64_t v660 = 1;
                  if (v16 && v659 >= 0xC0)
                  {
                    int v661 = v655[1] & 0x3F;
                    if ((v659 & 0x20) != 0)
                    {
                      if ((v659 & 0x10) != 0)
                      {
                        if ((v659 & 8) != 0)
                        {
                          int v662 = v655[2] & 0x3F;
                          int v663 = v655[3] & 0x3F;
                          int v664 = v655[4] & 0x3F;
                          if ((v659 & 4) != 0)
                          {
                            int v659 = ((v659 & 1) << 30) | (v661 << 24) | (v662 << 18) | (v663 << 12) | (v664 << 6) | v655[5] & 0x3F;
                            uint64_t v660 = 6;
                          }
                          else
                          {
                            int v659 = ((v659 & 3) << 24) | (v661 << 18) | (v662 << 12) | (v663 << 6) | v664;
                            uint64_t v660 = 5;
                          }
                        }
                        else
                        {
                          int v659 = ((v659 & 7) << 18) | (v661 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                          uint64_t v660 = 4;
                        }
                      }
                      else
                      {
                        int v659 = ((v659 & 0xF) << 12) | (v661 << 6) | v655[2] & 0x3F;
                        uint64_t v660 = 3;
                      }
                    }
                    else
                    {
                      uint64_t v660 = 2;
                      int v659 = v655[1] & 0x3F | ((v659 & 0x1F) << 6);
                    }
                  }
                  if (v659 < 0x2000)
                  {
                    if (v659 > 132)
                    {
                      if (v659 > 5759)
                      {
                        if (v659 != 5760 && v659 != 6158) {
                          goto LABEL_1462;
                        }
                      }
                      else if (v659 != 133 && v659 != 160)
                      {
                        goto LABEL_1462;
                      }
                    }
                    else if (v659 > 0x20 || ((1 << v659) & 0x100003E00) == 0)
                    {
                      goto LABEL_1462;
                    }
                  }
                  else if ((v659 - 0x2000) >= 0xB {
                         && ((v659 - 8232) > 0x37
                  }
                          || ((1 << (v659 - 40)) & 0x80000000000083) == 0)
                         && v659 != 12288)
                  {
LABEL_1462:
                    if ((v656 == 15) != (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                                  * _pcre2_ucd_stage2_8[v659 & 0x7F | (_pcre2_ucd_stage1_8[v659 >> 7] << 7)]
                                                                                  + 1]] != 6))
                    {
LABEL_1768:
                      uint64_t v12 = 2;
                      if (v204 != 2)
                      {
                        v793 = v17[10];
                        uint64_t v12 = v204;
LABEL_1770:
                        if (v793 > v17[1])
                        {
                          int v13 = 0;
                          a2 = *v17;
                          char v1390 = -34;
LABEL_3478:
                          int v7 = a6;
                          goto LABEL_3479;
                        }
                      }
                      continue;
                    }
LABEL_1454:
                    v655 += v660;
                    v17[10] = v655;
                    if (!--v657) {
                      goto LABEL_1768;
                    }
                    goto LABEL_1432;
                  }
                  if (v656 == 15) {
                    goto LABEL_1768;
                  }
                  goto LABEL_1454;
                case 9:
                  unsigned int v746 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v747 = *v18;
                  while ((unint64_t)v655 < v747)
                  {
                    unsigned int v748 = *v655;
                    uint64_t v749 = 1;
                    if (v16 && v748 >= 0xC0)
                    {
                      int v750 = v655[1] & 0x3F;
                      if ((v748 & 0x20) != 0)
                      {
                        if ((v748 & 0x10) != 0)
                        {
                          if ((v748 & 8) != 0)
                          {
                            int v751 = v655[2] & 0x3F;
                            int v752 = v655[3] & 0x3F;
                            int v753 = v655[4] & 0x3F;
                            if ((v748 & 4) != 0)
                            {
                              unsigned int v748 = ((v748 & 1) << 30) | (v750 << 24) | (v751 << 18) | (v752 << 12) | (v753 << 6) | v655[5] & 0x3F;
                              uint64_t v749 = 6;
                            }
                            else
                            {
                              unsigned int v748 = ((v748 & 3) << 24) | (v750 << 18) | (v751 << 12) | (v752 << 6) | v753;
                              uint64_t v749 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v748 = ((v748 & 7) << 18) | (v750 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v749 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v748 = ((v748 & 0xF) << 12) | (v750 << 6) | v655[2] & 0x3F;
                          uint64_t v749 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v749 = 2;
                        unsigned int v748 = v655[1] & 0x3F | ((v748 & 0x1F) << 6);
                      }
                    }
                    BOOL v755 = v748 == 95
                        || (_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                    * _pcre2_ucd_stage2_8[v748 & 0x7F | (_pcre2_ucd_stage1_8[v748 >> 7] << 7)]
                                                                    + 1]] & 0xFFFFFFFD) == 1;
                    if ((v656 == 15) != v755)
                    {
                      v655 += v749;
                      v17[10] = v655;
                      if (--v746) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
                  goto LABEL_1764;
                case 10:
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v756 = *v18;
                  while ((unint64_t)v655 < v756)
                  {
                    unsigned int v757 = *v655;
                    uint64_t v758 = 1;
                    if (v16 && v757 >= 0xC0)
                    {
                      int v759 = v655[1] & 0x3F;
                      if ((v757 & 0x20) != 0)
                      {
                        if ((v757 & 0x10) != 0)
                        {
                          if ((v757 & 8) != 0)
                          {
                            int v760 = v655[2] & 0x3F;
                            int v761 = v655[3] & 0x3F;
                            int v762 = v655[4] & 0x3F;
                            if ((v757 & 4) != 0)
                            {
                              unsigned int v757 = ((v757 & 1) << 30) | (v759 << 24) | (v760 << 18) | (v761 << 12) | (v762 << 6) | v655[5] & 0x3F;
                              uint64_t v758 = 6;
                            }
                            else
                            {
                              unsigned int v757 = ((v757 & 3) << 24) | (v759 << 18) | (v760 << 12) | (v761 << 6) | v762;
                              uint64_t v758 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v757 = ((v757 & 7) << 18) | (v759 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v758 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v757 = ((v757 & 0xF) << 12) | (v759 << 6) | v655[2] & 0x3F;
                          uint64_t v758 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v758 = 2;
                        unsigned int v757 = v655[1] & 0x3F | ((v757 & 0x1F) << 6);
                      }
                    }
                    v763 = &_pcre2_ucd_caseless_sets_8[*((unsigned int *)v17 + 17)];
                    while (1)
                    {
                      unsigned int v764 = *v763;
                      if (v757 < *v763) {
                        break;
                      }
                      ++v763;
                      if (v757 == v764)
                      {
                        if (v656 == 15) {
                          goto LABEL_1768;
                        }
                        goto LABEL_1699;
                      }
                    }
                    if (v656 != 15) {
                      goto LABEL_1768;
                    }
LABEL_1699:
                    v655 += v758;
                    v17[10] = v655;
                    if (++v653 == v652) {
                      goto LABEL_1768;
                    }
                  }
                  goto LABEL_1764;
                case 11:
                  unsigned int v765 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v766 = *v18;
                  while (2)
                  {
                    if ((unint64_t)v655 >= v766) {
                      goto LABEL_1764;
                    }
                    unsigned int v767 = *v655;
                    uint64_t v768 = 1;
                    if (v16 && v767 >= 0xC0)
                    {
                      int v769 = v655[1] & 0x3F;
                      if ((v767 & 0x20) != 0)
                      {
                        if ((v767 & 0x10) != 0)
                        {
                          if ((v767 & 8) != 0)
                          {
                            int v770 = v655[2] & 0x3F;
                            int v771 = v655[3] & 0x3F;
                            int v772 = v655[4] & 0x3F;
                            if ((v767 & 4) != 0)
                            {
                              unsigned int v767 = ((v767 & 1) << 30) | (v769 << 24) | (v770 << 18) | (v771 << 12) | (v772 << 6) | v655[5] & 0x3F;
                              uint64_t v768 = 6;
                            }
                            else
                            {
                              unsigned int v767 = ((v767 & 3) << 24) | (v769 << 18) | (v770 << 12) | (v771 << 6) | v772;
                              uint64_t v768 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v767 = ((v767 & 7) << 18) | (v769 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v768 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v767 = ((v767 & 0xF) << 12) | (v769 << 6) | v655[2] & 0x3F;
                          uint64_t v768 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v768 = 2;
                        unsigned int v767 = v655[1] & 0x3F | ((v767 & 0x1F) << 6);
                      }
                    }
                    if (v767 - 36 > 0x3C || ((1 << (v767 - 36)) & 0x1000000010000001) == 0)
                    {
                      BOOL v775 = v767 >> 13 > 6 || (v767 - 160) >> 5 < 0x6BB;
                      if ((v656 == 15) == v775) {
                        goto LABEL_1768;
                      }
                    }
                    else if (v656 == 15)
                    {
                      goto LABEL_1768;
                    }
                    v655 += v768;
                    v17[10] = v655;
                    if (!--v765) {
                      goto LABEL_1768;
                    }
                    continue;
                  }
                case 12:
                  unsigned int v776 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v777 = *v18;
                  while ((unint64_t)v655 < v777)
                  {
                    unsigned int v778 = *v655;
                    uint64_t v779 = 1;
                    if (v16 && v778 >= 0xC0)
                    {
                      int v780 = v655[1] & 0x3F;
                      if ((v778 & 0x20) != 0)
                      {
                        if ((v778 & 0x10) != 0)
                        {
                          if ((v778 & 8) != 0)
                          {
                            int v781 = v655[2] & 0x3F;
                            int v782 = v655[3] & 0x3F;
                            int v783 = v655[4] & 0x3F;
                            if ((v778 & 4) != 0)
                            {
                              unsigned int v778 = ((v778 & 1) << 30) | (v780 << 24) | (v781 << 18) | (v782 << 12) | (v783 << 6) | v655[5] & 0x3F;
                              uint64_t v779 = 6;
                            }
                            else
                            {
                              unsigned int v778 = ((v778 & 3) << 24) | (v780 << 18) | (v781 << 12) | (v782 << 6) | v783;
                              uint64_t v779 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v778 = ((v778 & 7) << 18) | (v780 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v779 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v778 = ((v778 & 0xF) << 12) | (v780 << 6) | v655[2] & 0x3F;
                          uint64_t v779 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v779 = 2;
                        unsigned int v778 = v655[1] & 0x3F | ((v778 & 0x1F) << 6);
                      }
                    }
                    if ((v656 == 15) == (*((_DWORD *)v17 + 17) != *(unsigned __int16 *)&_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v778 & 0x7F | (_pcre2_ucd_stage1_8[v778 >> 7] << 7)] + 8] >> 11))
                    {
                      v655 += v779;
                      v17[10] = v655;
                      if (--v776) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
                  goto LABEL_1764;
                case 13:
                  unsigned int v784 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_1768;
                  }
                  unint64_t v785 = *v18;
                  while ((unint64_t)v655 < v785)
                  {
                    unsigned int v786 = *v655;
                    uint64_t v787 = 1;
                    if (v16 && v786 >= 0xC0)
                    {
                      int v788 = v655[1] & 0x3F;
                      if ((v786 & 0x20) != 0)
                      {
                        if ((v786 & 0x10) != 0)
                        {
                          if ((v786 & 8) != 0)
                          {
                            int v789 = v655[2] & 0x3F;
                            int v790 = v655[3] & 0x3F;
                            int v791 = v655[4] & 0x3F;
                            if ((v786 & 4) != 0)
                            {
                              unsigned int v786 = ((v786 & 1) << 30) | (v788 << 24) | (v789 << 18) | (v790 << 12) | (v791 << 6) | v655[5] & 0x3F;
                              uint64_t v787 = 6;
                            }
                            else
                            {
                              unsigned int v786 = ((v786 & 3) << 24) | (v788 << 18) | (v789 << 12) | (v790 << 6) | v791;
                              uint64_t v787 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v786 = ((v786 & 7) << 18) | (v788 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v787 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v786 = ((v786 & 0xF) << 12) | (v788 << 6) | v655[2] & 0x3F;
                          uint64_t v787 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v787 = 2;
                        unsigned int v786 = v655[1] & 0x3F | ((v786 & 0x1F) << 6);
                      }
                    }
                    if ((v656 == 15) == (((*(_DWORD *)((char *)&_pcre2_ucd_BOOLprop_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v786 & 0x7F | (_pcre2_ucd_stage1_8[v786 >> 7] << 7)] + 10] & 0xFFF]
                                                      + (((unint64_t)*((unsigned int *)v17 + 17) >> 3) & 0x1FFFFFFC)) >> *((_DWORD *)v17 + 17)) & 1) == 0))
                    {
                      v655 += v787;
                      v17[10] = v655;
                      if (--v784) {
                        continue;
                      }
                    }
                    goto LABEL_1768;
                  }
LABEL_1764:
                  unsigned int v792 = *v1436;
                  if (*v1436 && ((unint64_t)v655 > *v1433 || *v1430))
                  {
                    _DWORD *v1431 = 1;
                    if (v792 > 1) {
                      return 4294967294;
                    }
                  }
                  goto LABEL_1768;
                default:
                  return 4294967252;
              }
            }
            if (v656 == 22)
            {
              if (v652 > v653)
              {
                unint64_t v665 = *v18;
                while ((unint64_t)v655 < v665)
                {
                  v666 = v655 + 1;
                  v17[10] = v655 + 1;
                  unsigned int v667 = *v655;
                  if (v16 && v667 >= 0xC0)
                  {
                    if ((v667 & 0x20) != 0)
                    {
                      int v668 = *v666 & 0x3F;
                      if ((v667 & 0x10) != 0)
                      {
                        if ((v667 & 8) != 0)
                        {
                          int v669 = v655[2] & 0x3F;
                          int v670 = v655[3] & 0x3F;
                          int v671 = v655[4] & 0x3F;
                          if ((v667 & 4) != 0)
                          {
                            unsigned int v667 = ((v667 & 1) << 30) | (v668 << 24) | (v669 << 18) | (v670 << 12) | (v671 << 6) | v655[5] & 0x3F;
                            v666 = v655 + 6;
                          }
                          else
                          {
                            unsigned int v667 = ((v667 & 3) << 24) | (v668 << 18) | (v669 << 12) | (v670 << 6) | v671;
                            v666 = v655 + 5;
                          }
                        }
                        else
                        {
                          unsigned int v667 = ((v667 & 7) << 18) | (v668 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                          v666 = v655 + 4;
                        }
                      }
                      else
                      {
                        unsigned int v667 = ((v667 & 0xF) << 12) | (v668 << 6) | v655[2] & 0x3F;
                        v666 = v655 + 3;
                      }
                      v17[10] = v666;
                    }
                    else
                    {
                      v666 = v655 + 2;
                      v17[10] = v655 + 2;
                      unsigned int v667 = v655[1] & 0x3F | ((v667 & 0x1F) << 6);
                    }
                  }
                  v655 = _pcre2_extuni_8(v667, v666, *(void *)(a7 + 152), v665, v1432, 0);
                  a7 = v1437;
                  v17[10] = v655;
                  unint64_t v665 = *(void *)(v1437 + 168);
                  if ((unint64_t)v655 >= v665)
                  {
                    unsigned int v672 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v655 > *v1433 || *v1430)
                      {
                        _DWORD *v1431 = 1;
                        if (v672 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  ++v653;
                  int v16 = v1435;
                  if (v653 >= *((_DWORD *)v17 + 15)) {
                    goto LABEL_1776;
                  }
                }
                unsigned int v794 = *v1436;
                if (*v1436 && ((unint64_t)v655 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v794 > 1) {
                    return 4294967294;
                  }
                }
              }
LABEL_1776:
              uint64_t v12 = 2;
              __int32 v18 = v1434;
              if (v204 != 2)
              {
                v795 = v17[1];
                uint64_t v12 = v204;
                goto LABEL_2584;
              }
              continue;
            }
            uint64_t v22 = 4294967252;
            if (v16)
            {
              switch(v656)
              {
                case 6:
                  uint64_t v673 = a4;
                  unsigned int v932 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v933 = *v1434;
                  while (1)
                  {
                    if ((unint64_t)v655 >= v933) {
                      goto LABEL_2288;
                    }
                    unsigned int v934 = *v655;
                    if (v934 < 0xC0) {
                      break;
                    }
                    int v935 = v655[1] & 0x3F;
                    if ((v934 & 0x20) != 0)
                    {
                      if ((v934 & 0x10) != 0)
                      {
                        if ((v934 & 8) != 0)
                        {
                          int v937 = v655[2] & 0x3F;
                          int v938 = v655[3] & 0x3F;
                          int v939 = v655[4] & 0x3F;
                          if ((v934 & 4) != 0)
                          {
                            unsigned int v934 = ((v934 & 1) << 30) | (v935 << 24) | (v937 << 18) | (v938 << 12) | (v939 << 6) | v655[5] & 0x3F;
                            uint64_t v936 = 6;
                          }
                          else
                          {
                            unsigned int v934 = ((v934 & 3) << 24) | (v935 << 18) | (v937 << 12) | (v938 << 6) | v939;
                            uint64_t v936 = 5;
                          }
                        }
                        else
                        {
                          unsigned int v934 = ((v934 & 7) << 18) | (v935 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                          uint64_t v936 = 4;
                        }
                      }
                      else
                      {
                        unsigned int v934 = ((v934 & 0xF) << 12) | (v935 << 6) | v655[2] & 0x3F;
                        uint64_t v936 = 3;
                      }
                    }
                    else
                    {
                      uint64_t v936 = 2;
                      unsigned int v934 = v655[1] & 0x3F | ((v934 & 0x1F) << 6);
                    }
                    if (v934 <= 0xFF) {
                      goto LABEL_2134;
                    }
LABEL_2135:
                    v655 += v936;
                    v17[10] = v655;
                    if (!--v932) {
                      goto LABEL_2558;
                    }
                  }
                  uint64_t v936 = 1;
LABEL_2134:
                  if ((*(unsigned char *)(*(void *)(v1437 + 104) + v934) & 8) != 0) {
                    goto LABEL_2558;
                  }
                  goto LABEL_2135;
                case 7:
                  uint64_t v673 = a4;
                  unsigned int v940 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v941 = *v1434;
                  while ((unint64_t)v655 < v941)
                  {
                    unsigned int v942 = *v655;
                    if (v942 < 0xC0)
                    {
                      uint64_t v944 = 1;
                    }
                    else
                    {
                      int v943 = v655[1] & 0x3F;
                      if ((v942 & 0x20) != 0)
                      {
                        if ((v942 & 0x10) != 0)
                        {
                          if ((v942 & 8) != 0)
                          {
                            int v945 = v655[2] & 0x3F;
                            int v946 = v655[3] & 0x3F;
                            int v947 = v655[4] & 0x3F;
                            if ((v942 & 4) != 0)
                            {
                              unsigned int v942 = ((v942 & 1) << 30) | (v943 << 24) | (v945 << 18) | (v946 << 12) | (v947 << 6) | v655[5] & 0x3F;
                              uint64_t v944 = 6;
                            }
                            else
                            {
                              unsigned int v942 = ((v942 & 3) << 24) | (v943 << 18) | (v945 << 12) | (v946 << 6) | v947;
                              uint64_t v944 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v942 = ((v942 & 7) << 18) | (v943 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v944 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v942 = ((v942 & 0xF) << 12) | (v943 << 6) | v655[2] & 0x3F;
                          uint64_t v944 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v944 = 2;
                        unsigned int v942 = v655[1] & 0x3F | ((v942 & 0x1F) << 6);
                      }
                      if (v942 > 0xFF) {
                        goto LABEL_2558;
                      }
                    }
                    if ((*(unsigned char *)(*(void *)(v1437 + 104) + v942) & 8) != 0)
                    {
                      v655 += v944;
                      v17[10] = v655;
                      if (--v940) {
                        continue;
                      }
                    }
                    goto LABEL_2558;
                  }
                  goto LABEL_2288;
                case 8:
                  uint64_t v673 = a4;
                  unsigned int v948 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v949 = *v1434;
                  while (1)
                  {
                    if ((unint64_t)v655 >= v949) {
                      goto LABEL_2288;
                    }
                    unsigned int v950 = *v655;
                    if (v950 < 0xC0) {
                      break;
                    }
                    int v951 = v655[1] & 0x3F;
                    if ((v950 & 0x20) != 0)
                    {
                      if ((v950 & 0x10) != 0)
                      {
                        if ((v950 & 8) != 0)
                        {
                          int v953 = v655[2] & 0x3F;
                          int v954 = v655[3] & 0x3F;
                          int v955 = v655[4] & 0x3F;
                          if ((v950 & 4) != 0)
                          {
                            unsigned int v950 = ((v950 & 1) << 30) | (v951 << 24) | (v953 << 18) | (v954 << 12) | (v955 << 6) | v655[5] & 0x3F;
                            uint64_t v952 = 6;
                          }
                          else
                          {
                            unsigned int v950 = ((v950 & 3) << 24) | (v951 << 18) | (v953 << 12) | (v954 << 6) | v955;
                            uint64_t v952 = 5;
                          }
                        }
                        else
                        {
                          unsigned int v950 = ((v950 & 7) << 18) | (v951 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                          uint64_t v952 = 4;
                        }
                      }
                      else
                      {
                        unsigned int v950 = ((v950 & 0xF) << 12) | (v951 << 6) | v655[2] & 0x3F;
                        uint64_t v952 = 3;
                      }
                    }
                    else
                    {
                      uint64_t v952 = 2;
                      unsigned int v950 = v655[1] & 0x3F | ((v950 & 0x1F) << 6);
                    }
                    if (v950 <= 0xFF) {
                      goto LABEL_2170;
                    }
LABEL_2171:
                    v655 += v952;
                    v17[10] = v655;
                    if (!--v948) {
                      goto LABEL_2558;
                    }
                  }
                  uint64_t v952 = 1;
LABEL_2170:
                  if (*(unsigned char *)(*(void *)(v1437 + 104) + v950)) {
                    goto LABEL_2558;
                  }
                  goto LABEL_2171;
                case 9:
                  uint64_t v673 = a4;
                  unsigned int v956 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v957 = *v1434;
                  while ((unint64_t)v655 < v957)
                  {
                    unsigned int v958 = *v655;
                    if (v958 < 0xC0)
                    {
                      uint64_t v960 = 1;
                    }
                    else
                    {
                      int v959 = v655[1] & 0x3F;
                      if ((v958 & 0x20) != 0)
                      {
                        if ((v958 & 0x10) != 0)
                        {
                          if ((v958 & 8) != 0)
                          {
                            int v961 = v655[2] & 0x3F;
                            int v962 = v655[3] & 0x3F;
                            int v963 = v655[4] & 0x3F;
                            if ((v958 & 4) != 0)
                            {
                              unsigned int v958 = ((v958 & 1) << 30) | (v959 << 24) | (v961 << 18) | (v962 << 12) | (v963 << 6) | v655[5] & 0x3F;
                              uint64_t v960 = 6;
                            }
                            else
                            {
                              unsigned int v958 = ((v958 & 3) << 24) | (v959 << 18) | (v961 << 12) | (v962 << 6) | v963;
                              uint64_t v960 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v958 = ((v958 & 7) << 18) | (v959 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v960 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v958 = ((v958 & 0xF) << 12) | (v959 << 6) | v655[2] & 0x3F;
                          uint64_t v960 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v960 = 2;
                        unsigned int v958 = v655[1] & 0x3F | ((v958 & 0x1F) << 6);
                      }
                      if (v958 > 0xFF) {
                        goto LABEL_2558;
                      }
                    }
                    if (*(unsigned char *)(*(void *)(v1437 + 104) + v958))
                    {
                      v655 += v960;
                      v17[10] = v655;
                      if (--v956) {
                        continue;
                      }
                    }
                    goto LABEL_2558;
                  }
                  goto LABEL_2288;
                case 10:
                  uint64_t v673 = a4;
                  unsigned int v964 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v965 = *v1434;
                  while (1)
                  {
                    if ((unint64_t)v655 >= v965) {
                      goto LABEL_2288;
                    }
                    unsigned int v966 = *v655;
                    if (v966 < 0xC0) {
                      break;
                    }
                    int v967 = v655[1] & 0x3F;
                    if ((v966 & 0x20) != 0)
                    {
                      if ((v966 & 0x10) != 0)
                      {
                        if ((v966 & 8) != 0)
                        {
                          int v969 = v655[2] & 0x3F;
                          int v970 = v655[3] & 0x3F;
                          int v971 = v655[4] & 0x3F;
                          if ((v966 & 4) != 0)
                          {
                            unsigned int v966 = ((v966 & 1) << 30) | (v967 << 24) | (v969 << 18) | (v970 << 12) | (v971 << 6) | v655[5] & 0x3F;
                            uint64_t v968 = 6;
                          }
                          else
                          {
                            unsigned int v966 = ((v966 & 3) << 24) | (v967 << 18) | (v969 << 12) | (v970 << 6) | v971;
                            uint64_t v968 = 5;
                          }
                        }
                        else
                        {
                          unsigned int v966 = ((v966 & 7) << 18) | (v967 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                          uint64_t v968 = 4;
                        }
                      }
                      else
                      {
                        unsigned int v966 = ((v966 & 0xF) << 12) | (v967 << 6) | v655[2] & 0x3F;
                        uint64_t v968 = 3;
                      }
                    }
                    else
                    {
                      uint64_t v968 = 2;
                      unsigned int v966 = v655[1] & 0x3F | ((v966 & 0x1F) << 6);
                    }
                    if (v966 <= 0xFF) {
                      goto LABEL_2206;
                    }
LABEL_2207:
                    v655 += v968;
                    v17[10] = v655;
                    if (!--v964) {
                      goto LABEL_2558;
                    }
                  }
                  uint64_t v968 = 1;
LABEL_2206:
                  if ((*(unsigned char *)(*(void *)(v1437 + 104) + v966) & 0x10) != 0) {
                    goto LABEL_2558;
                  }
                  goto LABEL_2207;
                case 11:
                  uint64_t v673 = a4;
                  unsigned int v972 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v973 = *v1434;
                  while ((unint64_t)v655 < v973)
                  {
                    unsigned int v974 = *v655;
                    if (v974 < 0xC0)
                    {
                      uint64_t v976 = 1;
                    }
                    else
                    {
                      int v975 = v655[1] & 0x3F;
                      if ((v974 & 0x20) != 0)
                      {
                        if ((v974 & 0x10) != 0)
                        {
                          if ((v974 & 8) != 0)
                          {
                            int v977 = v655[2] & 0x3F;
                            int v978 = v655[3] & 0x3F;
                            int v979 = v655[4] & 0x3F;
                            if ((v974 & 4) != 0)
                            {
                              unsigned int v974 = ((v974 & 1) << 30) | (v975 << 24) | (v977 << 18) | (v978 << 12) | (v979 << 6) | v655[5] & 0x3F;
                              uint64_t v976 = 6;
                            }
                            else
                            {
                              unsigned int v974 = ((v974 & 3) << 24) | (v975 << 18) | (v977 << 12) | (v978 << 6) | v979;
                              uint64_t v976 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v974 = ((v974 & 7) << 18) | (v975 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v976 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v974 = ((v974 & 0xF) << 12) | (v975 << 6) | v655[2] & 0x3F;
                          uint64_t v976 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v976 = 2;
                        unsigned int v974 = v655[1] & 0x3F | ((v974 & 0x1F) << 6);
                      }
                      if (v974 > 0xFF) {
                        goto LABEL_2558;
                      }
                    }
                    if ((*(unsigned char *)(*(void *)(v1437 + 104) + v974) & 0x10) != 0)
                    {
                      v655 += v976;
                      v17[10] = v655;
                      if (--v972) {
                        continue;
                      }
                    }
                    goto LABEL_2558;
                  }
                  goto LABEL_2288;
                case 12:
                  uint64_t v673 = a4;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v980 = *v1434;
                  while ((unint64_t)v655 < v980)
                  {
                    int v981 = *(_DWORD *)(v1437 + 252);
                    if (v981)
                    {
                      if (_pcre2_is_newline_8(v655, v981, v980, v1425, v1432)) {
                        goto LABEL_2558;
                      }
                      v655 = v17[10];
                      unint64_t v980 = *v1434;
                    }
                    else
                    {
                      uint64_t v982 = *v1425;
                      if ((unint64_t)v655 <= v980 - v982
                        && *v655 == *(unsigned __int8 *)(v1437 + 260)
                        && (v982 == 1 || v655[1] == *(unsigned __int8 *)(v1437 + 261)))
                      {
                        goto LABEL_2558;
                      }
                    }
                    unsigned int v983 = *v1436;
                    v984 = v655 + 1;
                    if (*v1436)
                    {
                      if ((unint64_t)v984 >= v980
                        && !*(_DWORD *)(v1437 + 252)
                        && *v1425 == 2
                        && *v655 == *(unsigned __int8 *)(v1437 + 260))
                      {
                        _DWORD *v1431 = 1;
                        if (v983 > 1) {
                          return 4294967294;
                        }
                      }
                    }
                    do
                    {
                      v655 = v984;
                      v17[10] = v984;
                      if ((unint64_t)v984 >= v980) {
                        break;
                      }
                      ++v984;
                    }
                    while ((*v655 & 0xC0) == 0x80);
                    if (++v653 >= *((_DWORD *)v17 + 15)) {
                      goto LABEL_2558;
                    }
                  }
                  goto LABEL_2288;
                case 13:
                  uint64_t v673 = a4;
                  if (v652 != -1)
                  {
                    if (v652 <= v653) {
                      goto LABEL_2558;
                    }
                    unint64_t v985 = *v1434;
                    do
                    {
                      if ((unint64_t)v655 >= v985) {
                        goto LABEL_2288;
                      }
                      v986 = v655 + 1;
                      do
                      {
                        v655 = v986;
                        v17[10] = v986;
                        if ((unint64_t)v986 >= v985) {
                          break;
                        }
                        ++v986;
                      }
                      while ((*v655 & 0xC0) == 0x80);
                      ++v653;
                    }
                    while (v653 != v652);
                    goto LABEL_2558;
                  }
                  unint64_t v1055 = *v18;
                  v17[10] = (unsigned __int8 *)*v18;
                  unsigned int v999 = *v1436;
                  if (!*v1436) {
                    goto LABEL_2558;
                  }
                  if (v1055 > *v1433) {
                    goto LABEL_2291;
                  }
                  goto LABEL_2290;
                case 14:
                  uint64_t v673 = a4;
                  v987 = (unsigned __int8 *)*v18;
                  if (v654 <= *v18 - v655)
                  {
                    v17[10] = &v655[v654];
                  }
                  else
                  {
                    v17[10] = v987;
                    unsigned int v988 = *v1436;
                    if (*v1436 && ((unint64_t)v987 > *v1433 || *v1430))
                    {
                      _DWORD *v1431 = 1;
                      if (v988 > 1) {
                        return 4294967294;
                      }
                    }
                  }
                  goto LABEL_2558;
                case 17:
                  uint64_t v673 = a4;
                  unsigned int v989 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v990 = *v1434;
                  while (1)
                  {
                    if ((unint64_t)v655 >= v990) {
                      goto LABEL_2288;
                    }
                    unsigned int v991 = *v655;
                    if (v991 < 0xC0)
                    {
                      uint64_t v994 = 1;
                      uint64_t v993 = v1437;
                    }
                    else
                    {
                      int v992 = v655[1] & 0x3F;
                      uint64_t v993 = v1437;
                      if ((v991 & 0x20) != 0)
                      {
                        if ((v991 & 0x10) != 0)
                        {
                          if ((v991 & 8) != 0)
                          {
                            int v995 = v655[2] & 0x3F;
                            int v996 = v655[3] & 0x3F;
                            int v997 = v655[4] & 0x3F;
                            if ((v991 & 4) != 0)
                            {
                              unsigned int v991 = ((v991 & 1) << 30) | (v992 << 24) | (v995 << 18) | (v996 << 12) | (v997 << 6) | v655[5] & 0x3F;
                              uint64_t v994 = 6;
                            }
                            else
                            {
                              unsigned int v991 = ((v991 & 3) << 24) | (v992 << 18) | (v995 << 12) | (v996 << 6) | v997;
                              uint64_t v994 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v991 = ((v991 & 7) << 18) | (v992 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v994 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v991 = ((v991 & 0xF) << 12) | (v992 << 6) | v655[2] & 0x3F;
                          uint64_t v994 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v994 = 2;
                        unsigned int v991 = v655[1] & 0x3F | ((v991 & 0x1F) << 6);
                      }
                    }
                    if (v991 != 10)
                    {
                      if (v991 == 13)
                      {
                        v998 = v655 + 1;
                        v17[10] = v655 + 1;
                        if ((unint64_t)(v655 + 1) >= v990) {
                          goto LABEL_2558;
                        }
                        if (*v998 != 10) {
                          goto LABEL_2286;
                        }
                        uint64_t v994 = 2;
                      }
                      else if (*(_WORD *)(v993 + 130) == 2 || v991 - 11 >= 2 && v991 - 8232 >= 2 && v991 != 133)
                      {
                        goto LABEL_2558;
                      }
                    }
                    v998 = &v655[v994];
                    v17[10] = &v655[v994];
LABEL_2286:
                    v655 = v998;
                    if (!--v989) {
                      goto LABEL_2558;
                    }
                  }
                case 18:
                case 19:
                  uint64_t v673 = a4;
                  unsigned int v674 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v675 = *v1434;
                  int v676 = v656 == 18;
                  break;
                case 20:
                case 21:
                  uint64_t v673 = a4;
                  unsigned int v848 = v652 - v653;
                  if (v652 <= v653) {
                    goto LABEL_2558;
                  }
                  unint64_t v849 = *v1434;
                  int v850 = v656 == 20;
                  while ((unint64_t)v655 < v849)
                  {
                    unsigned int v851 = *v655;
                    if (v851 < 0xC0)
                    {
                      uint64_t v853 = 1;
                    }
                    else
                    {
                      int v852 = v655[1] & 0x3F;
                      if ((v851 & 0x20) != 0)
                      {
                        if ((v851 & 0x10) != 0)
                        {
                          if ((v851 & 8) != 0)
                          {
                            int v854 = v655[2] & 0x3F;
                            int v855 = v655[3] & 0x3F;
                            int v856 = v655[4] & 0x3F;
                            if ((v851 & 4) != 0)
                            {
                              unsigned int v851 = ((v851 & 1) << 30) | (v852 << 24) | (v854 << 18) | (v855 << 12) | (v856 << 6) | v655[5] & 0x3F;
                              uint64_t v853 = 6;
                            }
                            else
                            {
                              unsigned int v851 = ((v851 & 3) << 24) | (v852 << 18) | (v854 << 12) | (v855 << 6) | v856;
                              uint64_t v853 = 5;
                            }
                          }
                          else
                          {
                            unsigned int v851 = ((v851 & 7) << 18) | (v852 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                            uint64_t v853 = 4;
                          }
                        }
                        else
                        {
                          unsigned int v851 = ((v851 & 0xF) << 12) | (v852 << 6) | v655[2] & 0x3F;
                          uint64_t v853 = 3;
                        }
                      }
                      else
                      {
                        uint64_t v853 = 2;
                        unsigned int v851 = v655[1] & 0x3F | ((v851 & 0x1F) << 6);
                      }
                    }
                    unsigned int v857 = v851 - 10;
                    BOOL v858 = v851 == 133;
                    unsigned int v859 = v851 - 8232;
                    int v861 = v857 < 4 || v859 < 2 || v858;
                    if (v861 != v850)
                    {
                      v655 += v853;
                      v17[10] = v655;
                      if (--v848) {
                        continue;
                      }
                    }
                    goto LABEL_2558;
                  }
LABEL_2288:
                  unsigned int v999 = *v1436;
                  if (!*v1436) {
                    goto LABEL_2558;
                  }
                  if ((unint64_t)v655 > *v1433) {
                    goto LABEL_2291;
                  }
LABEL_2290:
                  if (*v1430)
                  {
LABEL_2291:
                    _DWORD *v1431 = 1;
                    if (v999 > 1) {
                      return 4294967294;
                    }
                  }
LABEL_2558:
                  uint64_t v12 = 2;
                  a4 = v673;
                  a7 = v1437;
                  int v16 = v1435;
                  __int32 v18 = v1434;
                  if (v204 != 2)
                  {
                    v1056 = v17[10];
                    uint64_t v12 = v204;
LABEL_3430:
                    if (v1056 > v17[1])
                    {
                      int v13 = 0;
                      a2 = *v17;
                      char v1390 = -35;
                      goto LABEL_3478;
                    }
                  }
                  continue;
                default:
                  return v22;
              }
              while (1)
              {
                if ((unint64_t)v655 >= v675) {
                  goto LABEL_2288;
                }
                int v677 = *v655;
                if (v677 < 0xC0)
                {
                  uint64_t v679 = 1;
                }
                else
                {
                  int v678 = v655[1] & 0x3F;
                  if ((v677 & 0x20) != 0)
                  {
                    if ((v677 & 0x10) != 0)
                    {
                      if ((v677 & 8) != 0)
                      {
                        int v680 = v655[2] & 0x3F;
                        int v681 = v655[3] & 0x3F;
                        int v682 = v655[4] & 0x3F;
                        if ((v677 & 4) != 0)
                        {
                          int v677 = ((v677 & 1) << 30) | (v678 << 24) | (v680 << 18) | (v681 << 12) | (v682 << 6) | v655[5] & 0x3F;
                          uint64_t v679 = 6;
                        }
                        else
                        {
                          int v677 = ((v677 & 3) << 24) | (v678 << 18) | (v680 << 12) | (v681 << 6) | v682;
                          uint64_t v679 = 5;
                        }
                      }
                      else
                      {
                        int v677 = ((v677 & 7) << 18) | (v678 << 12) | ((v655[2] & 0x3F) << 6) | v655[3] & 0x3F;
                        uint64_t v679 = 4;
                      }
                    }
                    else
                    {
                      int v677 = ((v677 & 0xF) << 12) | (v678 << 6) | v655[2] & 0x3F;
                      uint64_t v679 = 3;
                    }
                  }
                  else
                  {
                    uint64_t v679 = 2;
                    int v677 = v655[1] & 0x3F | ((v677 & 0x1F) << 6);
                  }
                }
                int v683 = 1;
                if (v677 < 0x2000)
                {
                  if (v677 <= 159)
                  {
                    if (v677 == 9 || v677 == 32) {
                      goto LABEL_1506;
                    }
                  }
                  else if (v677 == 160 || v677 == 5760 || v677 == 6158)
                  {
                    goto LABEL_1506;
                  }
                }
                else if (v677 > 8238)
                {
                  if (v677 == 8239 || v677 == 8287 || v677 == 12288) {
                    goto LABEL_1506;
                  }
                }
                else if ((v677 - 0x2000) < 0xB)
                {
                  goto LABEL_1506;
                }
                int v683 = 0;
LABEL_1506:
                if (v683 != v676)
                {
                  v655 += v679;
                  v17[10] = v655;
                  if (--v674) {
                    continue;
                  }
                }
                goto LABEL_2558;
              }
            }
            switch(v656)
            {
              case 6:
                uint64_t v684 = a4;
                unsigned int v1000 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1001 = *v1434;
                while ((unint64_t)v655 < v1001)
                {
                  if ((*(unsigned char *)(*(void *)(v1437 + 104) + *v655) & 8) == 0)
                  {
                    v17[10] = ++v655;
                    if (--v1000) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 7:
                uint64_t v684 = a4;
                unsigned int v1002 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1003 = *v1434;
                while ((unint64_t)v655 < v1003)
                {
                  if ((*(unsigned char *)(*(void *)(v1437 + 104) + *v655) & 8) != 0)
                  {
                    v17[10] = ++v655;
                    if (--v1002) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 8:
                uint64_t v684 = a4;
                unsigned int v1004 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1005 = *v1434;
                while ((unint64_t)v655 < v1005)
                {
                  if ((*(unsigned char *)(*(void *)(v1437 + 104) + *v655) & 1) == 0)
                  {
                    v17[10] = ++v655;
                    if (--v1004) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 9:
                uint64_t v684 = a4;
                unsigned int v1006 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1007 = *v1434;
                while ((unint64_t)v655 < v1007)
                {
                  if (*(unsigned char *)(*(void *)(v1437 + 104) + *v655))
                  {
                    v17[10] = ++v655;
                    if (--v1006) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 10:
                uint64_t v684 = a4;
                unsigned int v1008 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1009 = *v1434;
                while ((unint64_t)v655 < v1009)
                {
                  if ((*(unsigned char *)(*(void *)(v1437 + 104) + *v655) & 0x10) == 0)
                  {
                    v17[10] = ++v655;
                    if (--v1008) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 11:
                uint64_t v684 = a4;
                unsigned int v1010 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1011 = *v1434;
                while ((unint64_t)v655 < v1011)
                {
                  if ((*(unsigned char *)(*(void *)(v1437 + 104) + *v655) & 0x10) != 0)
                  {
                    v17[10] = ++v655;
                    if (--v1010) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 12:
                uint64_t v684 = a4;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                while (1)
                {
                  uint64_t v1012 = *v1434;
                  if ((unint64_t)v655 >= *v1434) {
                    goto LABEL_2392;
                  }
                  int v1013 = *(_DWORD *)(v1437 + 252);
                  if (v1013)
                  {
                    if (_pcre2_is_newline_8(v655, v1013, v1012, v1425, v1432)) {
                      goto LABEL_2398;
                    }
                    v655 = v17[10];
                  }
                  else
                  {
                    uint64_t v1014 = *v1425;
                    if ((unint64_t)v655 <= v1012 - v1014
                      && *v655 == *(unsigned __int8 *)(v1437 + 260)
                      && (v1014 == 1 || v655[1] == *(unsigned __int8 *)(v1437 + 261)))
                    {
                      goto LABEL_2398;
                    }
                  }
                  unsigned int v1015 = *v1436;
                  if (*v1436)
                  {
                    if ((unint64_t)(v655 + 1) >= *v1434
                      && !*(_DWORD *)(v1437 + 252)
                      && *v1425 == 2
                      && *v655 == *(unsigned __int8 *)(v1437 + 260))
                    {
                      _DWORD *v1431 = 1;
                      if (v1015 > 1) {
                        return 4294967294;
                      }
                    }
                  }
                  v17[10] = ++v655;
                  if (++v653 >= *((_DWORD *)v17 + 15)) {
                    goto LABEL_2398;
                  }
                }
              case 13:
              case 14:
                uint64_t v684 = a4;
                v685 = (unsigned __int8 *)*v18;
                if (v654 <= *v18 - v655)
                {
                  v17[10] = &v655[v654];
                }
                else
                {
                  v17[10] = v685;
                  unsigned int v686 = *v1436;
                  if (*v1436 && ((unint64_t)v685 > *v1433 || *v1430))
                  {
                    _DWORD *v1431 = 1;
                    if (v686 > 1) {
                      return 4294967294;
                    }
                  }
                }
                goto LABEL_2398;
              case 17:
                uint64_t v684 = a4;
                unsigned int v1016 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1017 = *v1434;
                break;
              case 18:
                uint64_t v684 = a4;
                unsigned int v1021 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1022 = *v1434;
                while ((unint64_t)v655 < v1022)
                {
                  int v1023 = *v655;
                  if (v1023 != 9 && v1023 != 32 && v1023 != 160)
                  {
                    v17[10] = ++v655;
                    if (--v1021) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 19:
                uint64_t v684 = a4;
                unsigned int v1024 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1025 = *v1434;
                while ((unint64_t)v655 < v1025)
                {
                  int v1026 = *v655;
                  if (v1026 == 9 || v1026 == 160 || v1026 == 32)
                  {
                    v17[10] = ++v655;
                    if (--v1024) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 20:
                uint64_t v684 = a4;
                unsigned int v1027 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1028 = *v1434;
                while ((unint64_t)v655 < v1028)
                {
                  int v1029 = *v655;
                  if ((v1029 - 10) >= 4 && v1029 != 133)
                  {
                    v17[10] = ++v655;
                    if (--v1027) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
                goto LABEL_2392;
              case 21:
                uint64_t v684 = a4;
                unsigned int v1030 = v652 - v653;
                if (v652 <= v653) {
                  goto LABEL_2398;
                }
                unint64_t v1031 = *v1434;
                while ((unint64_t)v655 < v1031)
                {
                  int v1032 = *v655;
                  if ((v1032 - 10) < 4 || v1032 == 133)
                  {
                    v17[10] = ++v655;
                    if (--v1030) {
                      continue;
                    }
                  }
                  goto LABEL_2398;
                }
LABEL_2392:
                unsigned int v1033 = *v1436;
                if (*v1436 && ((unint64_t)v655 > *v1433 || *v1430))
                {
                  _DWORD *v1431 = 1;
                  if (v1033 > 1) {
                    return 4294967294;
                  }
                }
LABEL_2398:
                uint64_t v12 = 2;
                a4 = v684;
                a7 = v1437;
                int v16 = v1435;
                __int32 v18 = v1434;
                if (v204 != 2)
                {
                  v1034 = v17[10];
                  uint64_t v12 = v204;
LABEL_3391:
                  if (v1034 != v17[1])
                  {
                    int v13 = 0;
                    a2 = *v17;
                    char v1390 = 34;
                    goto LABEL_3478;
                  }
                }
                continue;
              default:
                return v22;
            }
            while (1)
            {
              if ((unint64_t)v655 >= v1017) {
                goto LABEL_2392;
              }
              int v1018 = *v655;
              if (v1018 == 10)
              {
                uint64_t v1020 = 1;
              }
              else if (v1018 == 13)
              {
                v1019 = v655 + 1;
                v17[10] = v655 + 1;
                if ((unint64_t)(v655 + 1) >= v1017) {
                  goto LABEL_2398;
                }
                if (*v1019 != 10) {
                  goto LABEL_2359;
                }
                uint64_t v1020 = 2;
              }
              else
              {
                if (*(_WORD *)(v1437 + 130) == 2) {
                  goto LABEL_2398;
                }
                uint64_t v1020 = 1;
                if ((v1018 - 11) >= 2 && v1018 != 133) {
                  goto LABEL_2398;
                }
              }
              v1019 = &v655[v1020];
              v17[10] = v1019;
LABEL_2359:
              v655 = v1019;
              if (!--v1016) {
                goto LABEL_2398;
              }
            }
          }
          uint64_t v180 = (unsigned int *)(v17 + 7);
LABEL_372:
          if (v181 == 22)
          {
            uint64_t v194 = v17[10];
            unint64_t v195 = *v18;
            unsigned int v196 = 1;
            while ((unint64_t)v194 < v195)
            {
              uint64_t v197 = v194 + 1;
              v17[10] = v194 + 1;
              unsigned int v198 = *v194;
              if (v16 && v198 >= 0xC0)
              {
                if ((v198 & 0x20) != 0)
                {
                  int v199 = *v197 & 0x3F;
                  if ((v198 & 0x10) != 0)
                  {
                    if ((v198 & 8) != 0)
                    {
                      int v200 = v194[2] & 0x3F;
                      int v201 = v194[3] & 0x3F;
                      int v202 = v194[4] & 0x3F;
                      if ((v198 & 4) != 0)
                      {
                        unsigned int v198 = ((v198 & 1) << 30) | (v199 << 24) | (v200 << 18) | (v201 << 12) | (v202 << 6) | v194[5] & 0x3F;
                        uint64_t v197 = v194 + 6;
                      }
                      else
                      {
                        unsigned int v198 = ((v198 & 3) << 24) | (v199 << 18) | (v200 << 12) | (v201 << 6) | v202;
                        uint64_t v197 = v194 + 5;
                      }
                    }
                    else
                    {
                      unsigned int v198 = ((v198 & 7) << 18) | (v199 << 12) | ((v194[2] & 0x3F) << 6) | v194[3] & 0x3F;
                      uint64_t v197 = v194 + 4;
                    }
                  }
                  else
                  {
                    unsigned int v198 = ((v198 & 0xF) << 12) | (v199 << 6) | v194[2] & 0x3F;
                    uint64_t v197 = v194 + 3;
                  }
                  v17[10] = v197;
                }
                else
                {
                  uint64_t v197 = v194 + 2;
                  v17[10] = v194 + 2;
                  unsigned int v198 = v194[1] & 0x3F | ((v198 & 0x1F) << 6);
                }
              }
              uint64_t v194 = _pcre2_extuni_8(v198, v197, *(void *)(a7 + 152), v195, v1432, 0);
              a7 = v1437;
              v17[10] = v194;
              unint64_t v195 = *(void *)(v1437 + 168);
              if ((unint64_t)v194 >= v195)
              {
                unsigned int v203 = *v1436;
                if (*v1436)
                {
                  if ((unint64_t)v194 > *v1433 || *v1430)
                  {
                    _DWORD *v1431 = 1;
                    if (v203 > 1) {
                      return 4294967294;
                    }
                  }
                }
              }
              ++v196;
              int v16 = v1435;
              if (v196 > *v180)
              {
                uint64_t v183 = 0xFFFFFFFFLL;
                uint64_t v204 = v12;
                __int32 v18 = v1434;
                goto LABEL_1426;
              }
            }
            unsigned int v234 = *v1436;
            if (!*v1436)
            {
LABEL_1061:
              uint64_t v23 = 0;
              __int32 v18 = v1434;
              goto LABEL_2587;
            }
            int v235 = v1433;
            __int32 v18 = v1434;
LABEL_446:
            if ((unint64_t)v194 > *v235) {
              goto LABEL_1970;
            }
            goto LABEL_1969;
          }
          uint64_t v22 = 4294967252;
          if (v16)
          {
            switch(v181)
            {
              case 6:
                unint64_t v205 = *v18;
                char v206 = v17[10];
                for (unsigned int n = 1; n <= v40; ++n)
                {
                  if ((unint64_t)v206 >= v205) {
                    goto LABEL_1916;
                  }
                  v17[10] = v206 + 1;
                  unsigned int v208 = *v206;
                  if (v208 < 0xC0)
                  {
                    ++v206;
                  }
                  else if ((v208 & 0x20) != 0)
                  {
                    int v210 = v206[1] & 0x3F;
                    if ((v208 & 0x10) != 0)
                    {
                      if ((v208 & 8) != 0)
                      {
                        int v211 = v206[2] & 0x3F;
                        int v212 = v206[3] & 0x3F;
                        int v213 = v206[4] & 0x3F;
                        if ((v208 & 4) != 0)
                        {
                          unsigned int v208 = ((v208 & 1) << 30) | (v210 << 24) | (v211 << 18) | (v212 << 12) | (v213 << 6) | v206[5] & 0x3F;
                          v206 += 6;
                        }
                        else
                        {
                          unsigned int v208 = ((v208 & 3) << 24) | (v210 << 18) | (v211 << 12) | (v212 << 6) | v213;
                          v206 += 5;
                        }
                      }
                      else
                      {
                        unsigned int v208 = ((v208 & 7) << 18) | (v210 << 12) | ((v206[2] & 0x3F) << 6) | v206[3] & 0x3F;
                        v206 += 4;
                      }
                    }
                    else
                    {
                      unsigned int v208 = ((v208 & 0xF) << 12) | (v210 << 6) | v206[2] & 0x3F;
                      v206 += 3;
                    }
                    v17[10] = v206;
                  }
                  else
                  {
                    v17[10] = v206 + 2;
                    int v209 = v206[1] & 0x3F | ((v208 & 0x1F) << 6);
                    v206 += 2;
                    unsigned int v208 = v209;
                  }
                  if (v208 <= 0x7F && (*(unsigned char *)(*(void *)(a7 + 104) + v208) & 8) != 0) {
                    goto LABEL_1971;
                  }
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                goto LABEL_1425;
              case 7:
                uint64_t v624 = 0;
                unint64_t v625 = *v18;
                v626 = v17[10];
                do
                {
                  int v217 = &v626[v624];
                  if ((unint64_t)&v626[v624] >= v625) {
                    goto LABEL_1308;
                  }
                  int v627 = (char)*v217;
                  if (v627 < 0 || (*(unsigned char *)(*(void *)(a7 + 104) + v627) & 8) == 0) {
                    goto LABEL_1971;
                  }
                  v17[10] = &v626[++v624];
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                while ((int)v624 + 1 <= v40);
                goto LABEL_1425;
              case 8:
                unint64_t v628 = *v18;
                v629 = v17[10];
                for (iunsigned int i = 1; ii <= v40; ++ii)
                {
                  if ((unint64_t)v629 >= v628) {
                    goto LABEL_1967;
                  }
                  if ((char)*v629 & 0x80000000) == 0 && (*(unsigned char *)(*(void *)(a7 + 104) + *v629)) {
                    goto LABEL_1971;
                  }
                  v631 = v629 + 1;
                  do
                  {
                    v629 = v631;
                    v17[10] = v631;
                    if ((unint64_t)v631 >= v628) {
                      break;
                    }
                    ++v631;
                  }
                  while ((*v629 & 0xC0) == 0x80);
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                goto LABEL_1425;
              case 9:
                uint64_t v632 = 0;
                unint64_t v633 = *v18;
                v634 = v17[10];
                do
                {
                  int v217 = &v634[v632];
                  if ((unint64_t)&v634[v632] >= v633) {
                    goto LABEL_1308;
                  }
                  int v635 = (char)*v217;
                  if (v635 < 0 || (*(unsigned char *)(*(void *)(a7 + 104) + v635) & 1) == 0) {
                    goto LABEL_1971;
                  }
                  v17[10] = &v634[++v632];
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                while ((int)v632 + 1 <= v40);
                goto LABEL_1425;
              case 10:
                unint64_t v636 = *v18;
                v629 = v17[10];
                for (junsigned int j = 1; jj <= v40; ++jj)
                {
                  if ((unint64_t)v629 >= v636)
                  {
LABEL_1967:
                    unsigned int v234 = *v1436;
                    if (*v1436)
                    {
                      if ((unint64_t)v629 > *v1433) {
                        goto LABEL_1970;
                      }
                      goto LABEL_1969;
                    }
                    goto LABEL_1971;
                  }
                  if (((char)*v629 & 0x80000000) == 0 && (*(unsigned char *)(*(void *)(a7 + 104) + *v629) & 0x10) != 0) {
                    goto LABEL_1971;
                  }
                  v638 = v629 + 1;
                  do
                  {
                    v629 = v638;
                    v17[10] = v638;
                    if ((unint64_t)v638 >= v636) {
                      break;
                    }
                    ++v638;
                  }
                  while ((*v629 & 0xC0) == 0x80);
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                goto LABEL_1425;
              case 11:
                uint64_t v639 = 0;
                unint64_t v640 = *v18;
                v641 = v17[10];
                while (1)
                {
                  int v217 = &v641[v639];
                  if ((unint64_t)&v641[v639] >= v640) {
                    break;
                  }
                  int v642 = (char)*v217;
                  if (v642 < 0 || (*(unsigned char *)(*(void *)(a7 + 104) + v642) & 0x10) == 0) {
                    goto LABEL_1971;
                  }
                  v17[10] = &v641[++v639];
                  uint64_t v183 = 0xFFFFFFFFLL;
                  if ((int)v639 + 1 > v40) {
                    goto LABEL_1425;
                  }
                }
LABEL_1308:
                unsigned int v234 = *v1436;
                if (!*v1436) {
                  goto LABEL_1971;
                }
                if ((unint64_t)v217 <= *v1433) {
                  goto LABEL_1969;
                }
                goto LABEL_1970;
              case 12:
                uint64_t v194 = v17[10];
                unint64_t v643 = *v18;
                unsigned int v644 = 1;
                while ((unint64_t)v194 < v643)
                {
                  int v645 = *(_DWORD *)(a7 + 252);
                  if (v645)
                  {
                    if (_pcre2_is_newline_8(v194, v645, v643, v1425, v1432)) {
                      goto LABEL_2578;
                    }
                    uint64_t v194 = v17[10];
                    __int32 v18 = v1434;
                    unint64_t v643 = *v1434;
                    a7 = v1437;
                    int v16 = v1435;
                  }
                  else
                  {
                    uint64_t v646 = *v1425;
                    if ((unint64_t)v194 <= v643 - v646
                      && *v194 == *(unsigned __int8 *)(a7 + 260)
                      && (v646 == 1 || v194[1] == *(unsigned __int8 *)(a7 + 261)))
                    {
                      goto LABEL_1971;
                    }
                  }
                  unsigned int v647 = *v1436;
                  v648 = v194 + 1;
                  if (*v1436)
                  {
                    if ((unint64_t)v648 >= v643
                      && !*(_DWORD *)(a7 + 252)
                      && *v1425 == 2
                      && *v194 == *(unsigned __int8 *)(a7 + 260))
                    {
                      _DWORD *v1431 = 1;
                      if (v647 > 1) {
                        return 4294967294;
                      }
                    }
                  }
                  do
                  {
                    uint64_t v194 = v648;
                    v17[10] = v648;
                    if ((unint64_t)v648 >= v643) {
                      break;
                    }
                    ++v648;
                  }
                  while ((*v194 & 0xC0) == 0x80);
                  ++v644;
                  uint64_t v183 = 0xFFFFFFFFLL;
                  if (v644 > *v180) {
                    goto LABEL_1425;
                  }
                }
LABEL_1972:
                unsigned int v234 = *v1436;
                if (!*v1436) {
                  goto LABEL_1971;
                }
                int v235 = v1433;
                goto LABEL_446;
              case 13:
                unint64_t v649 = *v18;
                char v206 = v17[10];
                for (kunsigned int k = 1; kk <= v40; ++kk)
                {
                  if ((unint64_t)v206 >= v649) {
                    goto LABEL_1916;
                  }
                  v651 = v206 + 1;
                  do
                  {
                    char v206 = v651;
                    v17[10] = v651;
                    if ((unint64_t)v651 >= v649) {
                      break;
                    }
                    ++v651;
                  }
                  while ((*v206 & 0xC0) == 0x80);
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                goto LABEL_1425;
              case 14:
                int v217 = v17[10];
                if ((unint64_t)v217 <= *v18 - v40) {
                  goto LABEL_1423;
                }
                goto LABEL_1971;
              case 17:
                unint64_t v796 = *v18;
                v472 = v17[10];
                unsigned int v797 = 1;
                while (1)
                {
                  if ((unint64_t)v472 >= v796)
                  {
LABEL_1804:
                    unsigned int v234 = *v1436;
                    if (!*v1436) {
                      goto LABEL_1971;
                    }
                    if ((unint64_t)v472 <= *v1433) {
                      goto LABEL_1969;
                    }
LABEL_1970:
                    _DWORD *v1431 = 1;
                    if (v234 <= 1) {
                      goto LABEL_1971;
                    }
                    return 4294967294;
                  }
                  v798 = v472 + 1;
                  v17[10] = v472 + 1;
                  int v799 = *v472;
                  if (v799 >= 0xC0)
                  {
                    if ((v799 & 0x20) != 0)
                    {
                      int v800 = *v798 & 0x3F;
                      if ((v799 & 0x10) != 0)
                      {
                        if ((v799 & 8) != 0)
                        {
                          int v801 = v472[2] & 0x3F;
                          int v802 = v472[3] & 0x3F;
                          int v803 = v472[4] & 0x3F;
                          if ((v799 & 4) != 0)
                          {
                            int v799 = ((v799 & 1) << 30) | (v800 << 24) | (v801 << 18) | (v802 << 12) | (v803 << 6) | v472[5] & 0x3F;
                            v798 = v472 + 6;
                          }
                          else
                          {
                            int v799 = ((v799 & 3) << 24) | (v800 << 18) | (v801 << 12) | (v802 << 6) | v803;
                            v798 = v472 + 5;
                          }
                        }
                        else
                        {
                          int v799 = ((v799 & 7) << 18) | (v800 << 12) | ((v472[2] & 0x3F) << 6) | v472[3] & 0x3F;
                          v798 = v472 + 4;
                        }
                      }
                      else
                      {
                        int v799 = ((v799 & 0xF) << 12) | (v800 << 6) | v472[2] & 0x3F;
                        v798 = v472 + 3;
                      }
                      v17[10] = v798;
                    }
                    else
                    {
                      v798 = v472 + 2;
                      v17[10] = v472 + 2;
                      int v799 = v472[1] & 0x3F | ((v799 & 0x1F) << 6);
                    }
                  }
                  if (v799 <= 12) {
                    break;
                  }
                  if ((v799 - 8232) < 2 || v799 == 133) {
                    goto LABEL_1799;
                  }
                  if (v799 != 13) {
                    goto LABEL_3375;
                  }
                  if ((unint64_t)v798 < v796 && *v798 == 10) {
                    v17[10] = ++v798;
                  }
LABEL_1800:
                  ++v797;
                  uint64_t v183 = 0xFFFFFFFFLL;
                  v472 = v798;
                  if (v797 > v40) {
                    goto LABEL_1425;
                  }
                }
                if ((v799 - 11) >= 2)
                {
                  if (v799 != 10) {
                    goto LABEL_3375;
                  }
                  goto LABEL_1800;
                }
LABEL_1799:
                if (*(_WORD *)(a7 + 130) == 2) {
                  goto LABEL_1971;
                }
                goto LABEL_1800;
              case 18:
                unint64_t v804 = *v18;
                v805 = v17[10];
                for (munsigned int m = 1; mm <= v40; ++mm)
                {
                  if ((unint64_t)v805 >= v804)
                  {
                    unsigned int v1063 = *v1436;
                    if (!*v1436) {
                      goto LABEL_1971;
                    }
                    if ((unint64_t)v805 <= *v1433 && !*v1430 || (_DWORD *v1431 = 1, v1063 <= 1))
                    {
LABEL_2578:
                      uint64_t v23 = 0;
                      a7 = v1437;
                      int v16 = v1435;
                      __int32 v18 = v1434;
                      goto LABEL_2587;
                    }
                    return 4294967294;
                  }
                  v17[10] = v805 + 1;
                  int v807 = *v805;
                  if (v807 < 0xC0)
                  {
                    ++v805;
                  }
                  else if ((v807 & 0x20) != 0)
                  {
                    int v809 = v805[1] & 0x3F;
                    if ((v807 & 0x10) != 0)
                    {
                      if ((v807 & 8) != 0)
                      {
                        int v810 = v805[2] & 0x3F;
                        int v811 = v805[3] & 0x3F;
                        int v812 = v805[4] & 0x3F;
                        if ((v807 & 4) != 0)
                        {
                          int v807 = ((v807 & 1) << 30) | (v809 << 24) | (v810 << 18) | (v811 << 12) | (v812 << 6) | v805[5] & 0x3F;
                          v805 += 6;
                        }
                        else
                        {
                          int v807 = ((v807 & 3) << 24) | (v809 << 18) | (v810 << 12) | (v811 << 6) | v812;
                          v805 += 5;
                        }
                      }
                      else
                      {
                        int v807 = ((v807 & 7) << 18) | (v809 << 12) | ((v805[2] & 0x3F) << 6) | v805[3] & 0x3F;
                        v805 += 4;
                      }
                    }
                    else
                    {
                      int v807 = ((v807 & 0xF) << 12) | (v809 << 6) | v805[2] & 0x3F;
                      v805 += 3;
                    }
                    v17[10] = v805;
                  }
                  else
                  {
                    v17[10] = v805 + 2;
                    int v808 = v805[1] & 0x3F | ((v807 & 0x1F) << 6);
                    v805 += 2;
                    int v807 = v808;
                  }
                  if (v807 < 0x2000)
                  {
                    if (v807 <= 159)
                    {
                      if (v807 == 9 || v807 == 32) {
                        goto LABEL_1958;
                      }
                    }
                    else if (v807 == 160 || v807 == 5760 || v807 == 6158)
                    {
                      goto LABEL_1958;
                    }
                  }
                  else if (v807 > 8238)
                  {
                    if (v807 == 8239 || v807 == 8287 || v807 == 12288) {
                      goto LABEL_1958;
                    }
                  }
                  else if ((v807 - 0x2000) < 0xB)
                  {
                    goto LABEL_1958;
                  }
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                goto LABEL_1425;
              case 19:
                unint64_t v813 = *v18;
                v460 = v17[10];
                unsigned int v814 = 1;
                break;
              case 20:
                unint64_t v822 = *v18;
                char v206 = v17[10];
                for (nunsigned int n = 1; nn <= v40; ++nn)
                {
                  if ((unint64_t)v206 >= v822) {
                    goto LABEL_1916;
                  }
                  v17[10] = v206 + 1;
                  unsigned int v824 = *v206;
                  if (v824 < 0xC0)
                  {
                    ++v206;
                  }
                  else if ((v824 & 0x20) != 0)
                  {
                    int v826 = v206[1] & 0x3F;
                    if ((v824 & 0x10) != 0)
                    {
                      if ((v824 & 8) != 0)
                      {
                        int v827 = v206[2] & 0x3F;
                        int v828 = v206[3] & 0x3F;
                        int v829 = v206[4] & 0x3F;
                        if ((v824 & 4) != 0)
                        {
                          unsigned int v824 = ((v824 & 1) << 30) | (v826 << 24) | (v827 << 18) | (v828 << 12) | (v829 << 6) | v206[5] & 0x3F;
                          v206 += 6;
                        }
                        else
                        {
                          unsigned int v824 = ((v824 & 3) << 24) | (v826 << 18) | (v827 << 12) | (v828 << 6) | v829;
                          v206 += 5;
                        }
                      }
                      else
                      {
                        unsigned int v824 = ((v824 & 7) << 18) | (v826 << 12) | ((v206[2] & 0x3F) << 6) | v206[3] & 0x3F;
                        v206 += 4;
                      }
                    }
                    else
                    {
                      unsigned int v824 = ((v824 & 0xF) << 12) | (v826 << 6) | v206[2] & 0x3F;
                      v206 += 3;
                    }
                    v17[10] = v206;
                  }
                  else
                  {
                    v17[10] = v206 + 2;
                    int v825 = v206[1] & 0x3F | ((v824 & 0x1F) << 6);
                    v206 += 2;
                    unsigned int v824 = v825;
                  }
                  BOOL v830 = v824 - 10 >= 4 && v824 - 8232 >= 2;
                  if (!v830 || v824 == 133) {
                    goto LABEL_1958;
                  }
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                goto LABEL_1425;
              case 21:
                unint64_t v831 = *v18;
                char v206 = v17[10];
                for (unsigned int i1 = 1; i1 <= v40; ++i1)
                {
                  if ((unint64_t)v206 >= v831)
                  {
LABEL_1916:
                    unsigned int v234 = *v1436;
                    if (!*v1436) {
                      goto LABEL_1971;
                    }
                    if ((unint64_t)v206 <= *v1433) {
                      goto LABEL_1969;
                    }
                    goto LABEL_1970;
                  }
                  v17[10] = v206 + 1;
                  unsigned int v833 = *v206;
                  if (v833 < 0xC0)
                  {
                    ++v206;
                  }
                  else if ((v833 & 0x20) != 0)
                  {
                    int v835 = v206[1] & 0x3F;
                    if ((v833 & 0x10) != 0)
                    {
                      if ((v833 & 8) != 0)
                      {
                        int v836 = v206[2] & 0x3F;
                        int v837 = v206[3] & 0x3F;
                        int v838 = v206[4] & 0x3F;
                        if ((v833 & 4) != 0)
                        {
                          unsigned int v833 = ((v833 & 1) << 30) | (v835 << 24) | (v836 << 18) | (v837 << 12) | (v838 << 6) | v206[5] & 0x3F;
                          v206 += 6;
                        }
                        else
                        {
                          unsigned int v833 = ((v833 & 3) << 24) | (v835 << 18) | (v836 << 12) | (v837 << 6) | v838;
                          v206 += 5;
                        }
                      }
                      else
                      {
                        unsigned int v833 = ((v833 & 7) << 18) | (v835 << 12) | ((v206[2] & 0x3F) << 6) | v206[3] & 0x3F;
                        v206 += 4;
                      }
                    }
                    else
                    {
                      unsigned int v833 = ((v833 & 0xF) << 12) | (v835 << 6) | v206[2] & 0x3F;
                      v206 += 3;
                    }
                    v17[10] = v206;
                  }
                  else
                  {
                    v17[10] = v206 + 2;
                    int v834 = v206[1] & 0x3F | ((v833 & 0x1F) << 6);
                    v206 += 2;
                    unsigned int v833 = v834;
                  }
                  BOOL v839 = v833 - 10 >= 4 && v833 - 8232 >= 2;
                  if (v839 && v833 != 133) {
                    goto LABEL_1958;
                  }
                  uint64_t v183 = 0xFFFFFFFFLL;
                }
                goto LABEL_1425;
              default:
                return v22;
            }
            while (1)
            {
              if ((unint64_t)v460 >= v813)
              {
LABEL_1869:
                unsigned int v234 = *v1436;
                if (!*v1436) {
                  goto LABEL_1971;
                }
                if ((unint64_t)v460 <= *v1433) {
                  goto LABEL_1969;
                }
                goto LABEL_1970;
              }
              v17[10] = v460 + 1;
              int v815 = *v460;
              if (v815 < 0xC0)
              {
                ++v460;
              }
              else if ((v815 & 0x20) != 0)
              {
                int v817 = v460[1] & 0x3F;
                if ((v815 & 0x10) != 0)
                {
                  if ((v815 & 8) != 0)
                  {
                    int v818 = v460[2] & 0x3F;
                    int v819 = v460[3] & 0x3F;
                    int v820 = v460[4] & 0x3F;
                    if ((v815 & 4) != 0)
                    {
                      int v815 = ((v815 & 1) << 30) | (v817 << 24) | (v818 << 18) | (v819 << 12) | (v820 << 6) | v460[5] & 0x3F;
                      v460 += 6;
                    }
                    else
                    {
                      int v815 = ((v815 & 3) << 24) | (v817 << 18) | (v818 << 12) | (v819 << 6) | v820;
                      v460 += 5;
                    }
                  }
                  else
                  {
                    int v815 = ((v815 & 7) << 18) | (v817 << 12) | ((v460[2] & 0x3F) << 6) | v460[3] & 0x3F;
                    v460 += 4;
                  }
                }
                else
                {
                  int v815 = ((v815 & 0xF) << 12) | (v817 << 6) | v460[2] & 0x3F;
                  v460 += 3;
                }
                v17[10] = v460;
              }
              else
              {
                v17[10] = v460 + 2;
                int v816 = v460[1] & 0x3F | ((v815 & 0x1F) << 6);
                v460 += 2;
                int v815 = v816;
              }
              if (v815 < 0x2000)
              {
                if (v815 <= 159)
                {
                  if (v815 != 9 && v815 != 32) {
                    goto LABEL_1958;
                  }
                  goto LABEL_1855;
                }
                if (v815 != 160 && v815 != 5760)
                {
                  int v821 = 6158;
                  goto LABEL_1864;
                }
              }
              else if (v815 > 8238)
              {
                if (v815 != 8239 && v815 != 12288)
                {
                  int v821 = 8287;
LABEL_1864:
                  if (v815 != v821) {
                    goto LABEL_1958;
                  }
                }
              }
              else if ((v815 - 0x2000) >= 0xB)
              {
                goto LABEL_1958;
              }
LABEL_1855:
              ++v814;
              uint64_t v183 = 0xFFFFFFFFLL;
              if (v814 > v40) {
                goto LABEL_1425;
              }
            }
          }
          switch(v181)
          {
            case 6:
              uint64_t v214 = 0;
              unint64_t v215 = *v18;
              unsigned int v216 = v17[10];
              do
              {
                int v217 = &v216[v214];
                if ((unint64_t)&v216[v214] >= v215) {
                  goto LABEL_1308;
                }
                if ((*(unsigned char *)(*(void *)(a7 + 104) + *v217) & 8) != 0) {
                  goto LABEL_1971;
                }
                v17[10] = &v216[++v214];
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v214 + 1 <= v40);
              goto LABEL_1425;
            case 7:
              uint64_t v584 = 0;
              unint64_t v585 = *v18;
              v586 = v17[10];
              do
              {
                int v217 = &v586[v584];
                if ((unint64_t)&v586[v584] >= v585) {
                  goto LABEL_1308;
                }
                if ((*(unsigned char *)(*(void *)(a7 + 104) + *v217) & 8) == 0) {
                  goto LABEL_1971;
                }
                v17[10] = &v586[++v584];
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v584 + 1 <= v40);
              goto LABEL_1425;
            case 8:
              uint64_t v587 = 0;
              unint64_t v588 = *v18;
              v589 = v17[10];
              do
              {
                int v217 = &v589[v587];
                if ((unint64_t)&v589[v587] >= v588) {
                  goto LABEL_1308;
                }
                if (*(unsigned char *)(*(void *)(a7 + 104) + *v217)) {
                  goto LABEL_1971;
                }
                v17[10] = &v589[++v587];
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v587 + 1 <= v40);
              goto LABEL_1425;
            case 9:
              uint64_t v590 = 0;
              unint64_t v591 = *v18;
              v592 = v17[10];
              do
              {
                int v217 = &v592[v590];
                if ((unint64_t)&v592[v590] >= v591) {
                  goto LABEL_1308;
                }
                if ((*(unsigned char *)(*(void *)(a7 + 104) + *v217) & 1) == 0) {
                  goto LABEL_1971;
                }
                v17[10] = &v592[++v590];
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v590 + 1 <= v40);
              goto LABEL_1425;
            case 10:
              uint64_t v593 = 0;
              unint64_t v594 = *v18;
              v595 = v17[10];
              do
              {
                int v217 = &v595[v593];
                if ((unint64_t)&v595[v593] >= v594) {
                  goto LABEL_1308;
                }
                if ((*(unsigned char *)(*(void *)(a7 + 104) + *v217) & 0x10) != 0) {
                  goto LABEL_1971;
                }
                v17[10] = &v595[++v593];
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v593 + 1 <= v40);
              goto LABEL_1425;
            case 11:
              uint64_t v596 = 0;
              unint64_t v597 = *v18;
              v598 = v17[10];
              do
              {
                int v217 = &v598[v596];
                if ((unint64_t)&v598[v596] >= v597) {
                  goto LABEL_1308;
                }
                if ((*(unsigned char *)(*(void *)(a7 + 104) + *v217) & 0x10) == 0) {
                  goto LABEL_1971;
                }
                v17[10] = &v598[++v596];
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v596 + 1 <= v40);
              goto LABEL_1425;
            case 12:
              uint64_t v194 = v17[10];
              unsigned int v599 = 1;
              do
              {
                uint64_t v600 = *v18;
                if ((unint64_t)v194 >= *v18) {
                  goto LABEL_1972;
                }
                int v601 = *(_DWORD *)(a7 + 252);
                if (v601)
                {
                  if (_pcre2_is_newline_8(v194, v601, v600, v1425, v1432)) {
                    goto LABEL_2578;
                  }
                  uint64_t v194 = v17[10];
                  a7 = v1437;
                  int v16 = v1435;
                  __int32 v18 = v1434;
                }
                else
                {
                  uint64_t v602 = *v1425;
                  if ((unint64_t)v194 <= v600 - v602
                    && *v194 == *(unsigned __int8 *)(a7 + 260)
                    && (v602 == 1 || v194[1] == *(unsigned __int8 *)(a7 + 261)))
                  {
                    goto LABEL_1971;
                  }
                }
                unsigned int v603 = *v1436;
                if (*v1436)
                {
                  if ((unint64_t)(v194 + 1) >= *v18
                    && !*(_DWORD *)(a7 + 252)
                    && *v1425 == 2
                    && *v194 == *(unsigned __int8 *)(a7 + 260))
                  {
                    _DWORD *v1431 = 1;
                    if (v603 > 1) {
                      return 4294967294;
                    }
                  }
                }
                v17[10] = ++v194;
                ++v599;
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while (v599 <= *((_DWORD *)v17 + 14));
              goto LABEL_1425;
            case 13:
              int v217 = v17[10];
              if ((unint64_t)v217 > *v18 - v40) {
                goto LABEL_1308;
              }
LABEL_1423:
              v17[10] = &v217[v40];
              goto LABEL_1424;
            case 17:
              unint64_t v604 = *v18;
              v472 = v17[10];
              unsigned int v605 = 1;
              break;
            case 18:
              uint64_t v608 = 0;
              unint64_t v609 = *v18;
              v610 = v17[10];
              do
              {
                int v217 = &v610[v608];
                if ((unint64_t)&v610[v608] >= v609) {
                  goto LABEL_1308;
                }
                v17[10] = v217 + 1;
                int v611 = *v217;
                if (v611 == 9 || v611 == 32 || v611 == 160) {
                  goto LABEL_1958;
                }
                ++v608;
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v608 + 1 <= v40);
              goto LABEL_1425;
            case 19:
              uint64_t v612 = 0;
              unint64_t v613 = *v18;
              v614 = v17[10];
              do
              {
                int v217 = &v614[v612];
                if ((unint64_t)&v614[v612] >= v613) {
                  goto LABEL_1308;
                }
                v17[10] = v217 + 1;
                int v615 = *v217;
                if (v615 != 9 && v615 != 160 && v615 != 32) {
                  goto LABEL_1958;
                }
                ++v612;
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v612 + 1 <= v40);
              goto LABEL_1425;
            case 20:
              uint64_t v616 = 0;
              unint64_t v617 = *v18;
              v618 = v17[10];
              do
              {
                int v217 = &v618[v616];
                if ((unint64_t)&v618[v616] >= v617) {
                  goto LABEL_1308;
                }
                v17[10] = v217 + 1;
                int v619 = *v217;
                if ((v619 - 10) < 4 || v619 == 133) {
                  goto LABEL_1958;
                }
                ++v616;
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v616 + 1 <= v40);
              goto LABEL_1425;
            case 21:
              uint64_t v620 = 0;
              unint64_t v621 = *v18;
              v622 = v17[10];
              do
              {
                int v217 = &v622[v620];
                if ((unint64_t)&v622[v620] >= v621) {
                  goto LABEL_1308;
                }
                v17[10] = v217 + 1;
                int v623 = *v217;
                if ((v623 - 10) >= 4 && v623 != 133) {
                  goto LABEL_1958;
                }
                ++v620;
                uint64_t v183 = 0xFFFFFFFFLL;
              }
              while ((int)v620 + 1 <= v40);
              goto LABEL_1425;
            default:
              return v22;
          }
          while (1)
          {
            if ((unint64_t)v472 >= v604) {
              goto LABEL_1804;
            }
            v606 = v472 + 1;
            v17[10] = v472 + 1;
            unsigned int v607 = *v472;
            if (v607 > 0xC)
            {
              if (v607 == 133)
              {
LABEL_1322:
                if (*(_WORD *)(a7 + 130) == 2) {
                  goto LABEL_1971;
                }
                goto LABEL_1323;
              }
              if (v607 != 13) {
                goto LABEL_3375;
              }
              if ((unint64_t)v606 < v604 && *v606 == 10)
              {
                v606 = v472 + 2;
                v17[10] = v472 + 2;
              }
            }
            else
            {
              if (v607 - 11 < 2) {
                goto LABEL_1322;
              }
              if (v607 != 10) {
                goto LABEL_3375;
              }
            }
LABEL_1323:
            ++v605;
            uint64_t v183 = 0xFFFFFFFFLL;
            v472 = v606;
            if (v605 > v40) {
              goto LABEL_1425;
            }
          }
        case 0x6Eu:
        case 0x6Fu:
          int v85 = v20 + 1;
          v17[2] = v20 + 1;
          a2 = v20 + 33;
          unint64_t *v17 = v20 + 33;
          unsigned int v86 = v20[33] - 98;
          if (v86 > 0xB)
          {
            v17[7] = (unsigned __int8 *)0x100000001;
            unsigned int v89 = 1;
            unsigned int v88 = 1;
            if (v16) {
              goto LABEL_137;
            }
          }
          else
          {
            if (((1 << v86) & 0x73F) != 0)
            {
              a2 = v20 + 34;
              unint64_t *v17 = v20 + 34;
              unsigned int v87 = v20[33] - 98;
              unsigned int v88 = dword_1A68ABDE0[v87];
              *((_DWORD *)v17 + 14) = v88;
              unsigned int v89 = dword_1A68ABE0C[v87];
              *((_DWORD *)v17 + 15) = v89;
              uint64_t v90 = dword_1A68ABE38[v87];
              if (v16) {
                goto LABEL_135;
              }
            }
            else
            {
              unsigned int v88 = __rev16(*((unsigned __int16 *)v20 + 17));
              *((_DWORD *)v17 + 14) = v88;
              unsigned int v320 = __rev16(*((unsigned __int16 *)v20 + 18));
              if (v320) {
                unsigned int v89 = v320;
              }
              else {
                unsigned int v89 = -1;
              }
              *((_DWORD *)v17 + 15) = v89;
              uint64_t v90 = dword_1A68ABE38[v20[33] - 98];
              a2 = v20 + 38;
              unint64_t *v17 = v20 + 38;
              if (v16)
              {
LABEL_135:
                if (v88)
                {
                  uint64_t v12 = v90;
LABEL_137:
                  unint64_t v91 = *v18;
                  int v92 = v17[10];
                  for (unsigned int i2 = 1; i2 <= v88; ++i2)
                  {
                    if ((unint64_t)v92 >= v91) {
                      goto LABEL_691;
                    }
                    unsigned int v94 = v92 + 1;
                    v17[10] = v92 + 1;
                    unsigned int v95 = *v92;
                    if (v95 < 0xC0) {
                      goto LABEL_153;
                    }
                    if ((v95 & 0x20) != 0)
                    {
                      int v96 = *v94 & 0x3F;
                      if ((v95 & 0x10) != 0)
                      {
                        if ((v95 & 8) != 0)
                        {
                          int v97 = v92[2] & 0x3F;
                          int v98 = v92[3] & 0x3F;
                          int v99 = v92[4] & 0x3F;
                          if ((v95 & 4) != 0)
                          {
                            unsigned int v95 = ((v95 & 1) << 30) | (v96 << 24) | (v97 << 18) | (v98 << 12) | (v99 << 6) | v92[5] & 0x3F;
                            unsigned int v94 = v92 + 6;
                          }
                          else
                          {
                            unsigned int v95 = ((v95 & 3) << 24) | (v96 << 18) | (v97 << 12) | (v98 << 6) | v99;
                            unsigned int v94 = v92 + 5;
                          }
                        }
                        else
                        {
                          unsigned int v95 = ((v95 & 7) << 18) | (v96 << 12) | ((v92[2] & 0x3F) << 6) | v92[3] & 0x3F;
                          unsigned int v94 = v92 + 4;
                        }
                      }
                      else
                      {
                        unsigned int v95 = ((v95 & 0xF) << 12) | (v96 << 6) | v92[2] & 0x3F;
                        unsigned int v94 = v92 + 3;
                      }
                      v17[10] = v94;
                    }
                    else
                    {
                      unsigned int v94 = v92 + 2;
                      v17[10] = v92 + 2;
                      unsigned int v95 = v92[1] & 0x3F | ((v95 & 0x1F) << 6);
                    }
                    if (v95 < 0x100)
                    {
LABEL_153:
                      if (((v85[(unint64_t)v95 >> 3] >> (v95 & 7)) & 1) == 0) {
                        goto LABEL_1958;
                      }
                    }
                    else if (v21 == 110)
                    {
                      goto LABEL_1958;
                    }
                    int v92 = v94;
                  }
LABEL_666:
                  uint64_t v90 = v12;
                }
LABEL_667:
                uint64_t v12 = v90;
                if (v89 == v88) {
                  continue;
                }
                if (!v90)
                {
                  uint64_t v12 = 0;
                  int v7 = a6;
                  if (!v16)
                  {
LABEL_3540:
                    int v13 = 0;
                    char v1390 = 23;
                    goto LABEL_3479;
                  }
                  char v1390 = -56;
                  goto LABEL_3509;
                }
                unsigned int v324 = v17[10];
                v17[1] = v324;
                if (!v16)
                {
                  v502 = v324;
                  BOOL v265 = v89 >= v88;
                  unsigned int v503 = v89 - v88;
                  if (v503 != 0 && v265)
                  {
                    unint64_t v504 = *v18;
                    v502 = v324;
                    while ((unint64_t)v502 < v504)
                    {
                      if ((v85[(unint64_t)*v502 >> 3] >> (*v502 & 7)))
                      {
                        v17[10] = ++v502;
                        if (--v503) {
                          continue;
                        }
                      }
                      goto LABEL_2012;
                    }
                    unsigned int v863 = *v1436;
                    if (*v1436 && ((unint64_t)v502 > *v1433 || *v1430))
                    {
                      _DWORD *v1431 = 1;
                      if (v863 > 1) {
                        return 4294967294;
                      }
                    }
                  }
LABEL_2012:
                  uint64_t v12 = 2;
                  if (v90 == 2) {
                    continue;
                  }
LABEL_3376:
                  if (v502 < v324)
                  {
                    uint64_t v23 = 0;
                    uint64_t v12 = v90;
                    goto LABEL_2587;
                  }
                  int v13 = 0;
                  a2 = *v17;
                  char v1390 = 24;
                  goto LABEL_3477;
                }
                BOOL v265 = v89 >= v88;
                unsigned int v325 = v89 - v88;
                if (v325 == 0 || !v265) {
                  goto LABEL_2006;
                }
                unint64_t v326 = *v18;
                while (1)
                {
                  if ((unint64_t)v324 >= v326)
                  {
                    unsigned int v862 = *v1436;
                    if (*v1436 && ((unint64_t)v324 > *v1433 || *v1430))
                    {
                      _DWORD *v1431 = 1;
                      if (v862 > 1) {
                        return 4294967294;
                      }
                    }
LABEL_2006:
                    uint64_t v12 = 2;
                    if (v90 == 2) {
                      goto LABEL_8;
                    }
LABEL_3502:
                    int v13 = 0;
                    a2 = *v17;
                    char v1390 = -55;
LABEL_3477:
                    uint64_t v12 = v90;
                    goto LABEL_3478;
                  }
                  unsigned int v327 = *v324;
                  if (v327 < 0xC0) {
                    break;
                  }
                  int v328 = v324[1] & 0x3F;
                  if ((v327 & 0x20) != 0)
                  {
                    if ((v327 & 0x10) != 0)
                    {
                      if ((v327 & 8) != 0)
                      {
                        int v330 = v324[2] & 0x3F;
                        int v331 = v324[3] & 0x3F;
                        int v332 = v324[4] & 0x3F;
                        if ((v327 & 4) != 0)
                        {
                          unsigned int v327 = ((v327 & 1) << 30) | (v328 << 24) | (v330 << 18) | (v331 << 12) | (v332 << 6) | v324[5] & 0x3F;
                          uint64_t v329 = 6;
                        }
                        else
                        {
                          unsigned int v327 = ((v327 & 3) << 24) | (v328 << 18) | (v330 << 12) | (v331 << 6) | v332;
                          uint64_t v329 = 5;
                        }
                      }
                      else
                      {
                        unsigned int v327 = ((v327 & 7) << 18) | (v328 << 12) | ((v324[2] & 0x3F) << 6) | v324[3] & 0x3F;
                        uint64_t v329 = 4;
                      }
                    }
                    else
                    {
                      unsigned int v327 = ((v327 & 0xF) << 12) | (v328 << 6) | v324[2] & 0x3F;
                      uint64_t v329 = 3;
                    }
                  }
                  else
                  {
                    uint64_t v329 = 2;
                    unsigned int v327 = v324[1] & 0x3F | ((v327 & 0x1F) << 6);
                  }
                  if (v327 < 0x100) {
                    goto LABEL_688;
                  }
                  if (v21 == 110) {
                    goto LABEL_2006;
                  }
LABEL_689:
                  v324 += v329;
                  v17[10] = v324;
                  if (!--v325) {
                    goto LABEL_2006;
                  }
                }
                uint64_t v329 = 1;
LABEL_688:
                if (((v85[(unint64_t)v327 >> 3] >> (v327 & 7)) & 1) == 0) {
                  goto LABEL_2006;
                }
                goto LABEL_689;
              }
            }
            if (!v88) {
              goto LABEL_667;
            }
            uint64_t v12 = v90;
          }
          uint64_t v321 = 0;
          unint64_t v322 = *v18;
          unsigned int v323 = v17[10];
          while (1)
          {
            int v92 = &v323[v321];
            if ((unint64_t)&v323[v321] >= v322) {
              break;
            }
            v17[10] = v92 + 1;
            if (((v85[(unint64_t)*v92 >> 3] >> (*v92 & 7)) & 1) == 0) {
              goto LABEL_1958;
            }
            if ((int)++v321 + 1 > v88) {
              goto LABEL_666;
            }
          }
LABEL_691:
          unsigned int v119 = *v1436;
          if (*v1436)
          {
            if ((unint64_t)v92 <= *v1433) {
              goto LABEL_1956;
            }
            goto LABEL_1957;
          }
          goto LABEL_1958;
        case 0x70u:
          v17[2] = v20 + 3;
          int v218 = &v20[__rev16(*(unsigned __int16 *)(v20 + 1))];
          unint64_t *v17 = v218;
          unsigned int v219 = *v218 - 98;
          if (v219 > 0xB)
          {
            v17[7] = (unsigned __int8 *)0x100000001;
          }
          else
          {
            if (((1 << v219) & 0x73F) != 0)
            {
              unint64_t *v17 = v218 + 1;
              unsigned int v220 = *v218 - 98;
              unsigned int v221 = dword_1A68ABDE0[v220];
              *((_DWORD *)v17 + 14) = v221;
              unsigned int v222 = dword_1A68ABE0C[v220];
              *((_DWORD *)v17 + 15) = v222;
              uint64_t v223 = dword_1A68ABE38[v220];
            }
            else
            {
              unsigned int v221 = __rev16(*(unsigned __int16 *)(v218 + 1));
              *((_DWORD *)v17 + 14) = v221;
              unsigned int v222 = __rev16(*(unsigned __int16 *)(v218 + 3));
              if (!v222) {
                unsigned int v222 = -1;
              }
              *((_DWORD *)v17 + 15) = v222;
              uint64_t v223 = dword_1A68ABE38[*v218 - 98];
              unint64_t *v17 = v218 + 5;
            }
            if (!v221)
            {
              unsigned int v521 = 0;
              uint64_t v12 = v223;
              goto LABEL_1118;
            }
            uint64_t v12 = v223;
          }
          unsigned int v514 = 1;
          do
          {
            uint64_t v174 = v17[10];
            if ((unint64_t)v174 >= *v18)
            {
              int v316 = v1436;
              a7 = v1437;
              goto LABEL_1137;
            }
            v17[10] = v174 + 1;
            unsigned int v515 = *v174;
            if (v16 && v515 >= 0xC0)
            {
              if ((v515 & 0x20) != 0)
              {
                int v516 = v174[1] & 0x3F;
                if ((v515 & 0x10) != 0)
                {
                  if ((v515 & 8) != 0)
                  {
                    int v518 = v174[2] & 0x3F;
                    int v519 = v174[3] & 0x3F;
                    int v520 = v174[4] & 0x3F;
                    if ((v515 & 4) != 0)
                    {
                      unsigned int v515 = ((v515 & 1) << 30) | (v516 << 24) | (v518 << 18) | (v519 << 12) | (v520 << 6) | v174[5] & 0x3F;
                      v517 = v174 + 6;
                    }
                    else
                    {
                      unsigned int v515 = ((v515 & 3) << 24) | (v516 << 18) | (v518 << 12) | (v519 << 6) | v520;
                      v517 = v174 + 5;
                    }
                  }
                  else
                  {
                    unsigned int v515 = ((v515 & 7) << 18) | (v516 << 12) | ((v174[2] & 0x3F) << 6) | v174[3] & 0x3F;
                    v517 = v174 + 4;
                  }
                }
                else
                {
                  unsigned int v515 = ((v515 & 0xF) << 12) | (v516 << 6) | v174[2] & 0x3F;
                  v517 = v174 + 3;
                }
                v17[10] = v517;
              }
              else
              {
                v17[10] = v174 + 2;
                unsigned int v515 = v174[1] & 0x3F | ((v515 & 0x1F) << 6);
              }
            }
            uint64_t v23 = _pcre2_xclass_8(v515, v17[2]);
            if (!v23) {
              goto LABEL_724;
            }
            ++v514;
            unsigned int v521 = *((_DWORD *)v17 + 14);
            int v16 = v1435;
            __int32 v18 = v1434;
          }
          while (v514 <= v521);
          unsigned int v222 = *((_DWORD *)v17 + 15);
          uint64_t v223 = v12;
          a7 = v1437;
LABEL_1118:
          if (v521 == v222) {
            continue;
          }
          if (!v223)
          {
            uint64_t v12 = 0;
LABEL_3622:
            int v7 = a6;
            int v13 = 0;
            a2 = *v17;
            char v1390 = 100;
            goto LABEL_3479;
          }
          v522 = v17[10];
          v17[1] = v522;
          while (v521 < *((_DWORD *)v17 + 15))
          {
            if ((unint64_t)v522 >= *v18)
            {
              unsigned int v864 = *v1436;
              if (*v1436 && ((unint64_t)v522 > *v1433 || *v1430))
              {
                _DWORD *v1431 = 1;
                if (v864 > 1) {
                  return 4294967294;
                }
              }
              break;
            }
            unsigned int v523 = *v522;
            uint64_t v524 = 1;
            if (v16 && v523 >= 0xC0)
            {
              int v525 = v522[1] & 0x3F;
              if ((v523 & 0x20) != 0)
              {
                if ((v523 & 0x10) != 0)
                {
                  if ((v523 & 8) != 0)
                  {
                    int v526 = v522[2] & 0x3F;
                    int v527 = v522[3] & 0x3F;
                    int v528 = v522[4] & 0x3F;
                    if ((v523 & 4) != 0)
                    {
                      unsigned int v523 = ((v523 & 1) << 30) | (v525 << 24) | (v526 << 18) | (v527 << 12) | (v528 << 6) | v522[5] & 0x3F;
                      uint64_t v524 = 6;
                    }
                    else
                    {
                      unsigned int v523 = ((v523 & 3) << 24) | (v525 << 18) | (v526 << 12) | (v527 << 6) | v528;
                      uint64_t v524 = 5;
                    }
                  }
                  else
                  {
                    unsigned int v523 = ((v523 & 7) << 18) | (v525 << 12) | ((v522[2] & 0x3F) << 6) | v522[3] & 0x3F;
                    uint64_t v524 = 4;
                  }
                }
                else
                {
                  unsigned int v523 = ((v523 & 0xF) << 12) | (v525 << 6) | v522[2] & 0x3F;
                  uint64_t v524 = 3;
                }
              }
              else
              {
                uint64_t v524 = 2;
                unsigned int v523 = v522[1] & 0x3F | ((v523 & 0x1F) << 6);
              }
            }
            BOOL v529 = _pcre2_xclass_8(v523, v17[2]);
            a7 = v1437;
            int v16 = v1435;
            __int32 v18 = v1434;
            if (!v529) {
              break;
            }
            v522 = &v17[10][v524];
            v17[10] = v522;
            ++v521;
          }
          uint64_t v12 = 2;
          if (v223 != 2) {
            goto LABEL_3493;
          }
          continue;
        case 0x71u:
        case 0x72u:
          BOOL v100 = v21 == 114;
          *((_DWORD *)v17 + 16) = v100;
          v17[5] = (unsigned __int8 *)(((v20[1] << 9) | (2 * v20[2])) - 2);
          int v101 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          goto LABEL_167;
        case 0x73u:
        case 0x74u:
          BOOL v100 = v21 == 116;
          *((_DWORD *)v17 + 16) = v100;
          unsigned int v102 = __rev16(*(unsigned __int16 *)(v20 + 3));
          uint64_t v103 = *(void *)(a7 + 136);
          int v104 = v20[1];
          int v105 = v20[2];
          uint64_t v106 = *(unsigned __int16 *)(a7 + 134);
          int v101 = v20 + 5;
          unint64_t *v17 = v20 + 5;
          if (!v102) {
            goto LABEL_167;
          }
          unint64_t v107 = v17[15];
          size_t v108 = (unsigned __int8 *)(v103 + (v105 | (v104 << 8)) * (unint64_t)v106 + 1);
          while (2)
          {
            unsigned __int32 v109 = (unsigned __int8 *)(((*(v108 - 1) << 9) | (2 * *v108)) - 2);
            v17[5] = v109;
            if (v109 >= v107)
            {
              if (v102 >= 2) {
                goto LABEL_166;
              }
            }
            else
            {
              BOOL v110 = v17[(void)v109 + 16] == (unsigned __int8 *)-1 && v102 > 1;
              if (v110)
              {
LABEL_166:
                v108 += v106;
                --v102;
                continue;
              }
            }
            break;
          }
LABEL_167:
          int v111 = *v101;
          if ((v111 - 98) >= 6)
          {
            if ((v111 - 104) >= 2)
            {
              int v333 = sub_1A688A508((unint64_t)v17[5], v100, (uint64_t)v17, a7, v1440);
              if (v333)
              {
                int v16 = v1435;
                __int32 v18 = v1434;
                if (v333 < 1)
                {
                  unsigned int v334 = v17[10];
                  a7 = v1437;
                  if ((unint64_t)v334 < *v1434) {
                    goto LABEL_1971;
                  }
                }
                else
                {
                  unsigned int v334 = (unsigned __int8 *)*v1434;
                  v17[10] = (unsigned __int8 *)*v1434;
                  a7 = v1437;
                }
                unsigned int v580 = *v1436;
                if (!*v1436) {
                  goto LABEL_1971;
                }
                if ((unint64_t)v334 > *v1433 || *v1430)
                {
                  _DWORD *v1431 = 1;
                  if (v580 > 1) {
                    return 4294967294;
                  }
                }
                goto LABEL_3375;
              }
              v17[10] += (unint64_t)v1440[0];
LABEL_3442:
              a7 = v1437;
LABEL_3443:
              int v16 = v1435;
              __int32 v18 = v1434;
              continue;
            }
            unsigned int v113 = __rev16(*(unsigned __int16 *)(v101 + 1));
            *((_DWORD *)v17 + 14) = v113;
            unsigned int v114 = __rev16(*(unsigned __int16 *)(v101 + 3));
            *((_DWORD *)v17 + 15) = v114;
            unsigned int v124 = *v101;
            unsigned int v123 = v101 + 5;
            uint64_t v12 = dword_1A68ABE38[v124 - 98];
            if (!v114) {
              unsigned int v114 = -1;
            }
            *((_DWORD *)v17 + 15) = v114;
            unint64_t *v17 = v123;
          }
          else
          {
            unint64_t *v17 = v101 + 1;
            unsigned int v112 = *v101 - 98;
            unsigned int v113 = dword_1A68ABDE0[v112];
            *((_DWORD *)v17 + 14) = v113;
            unsigned int v114 = dword_1A68ABE0C[v112];
            *((_DWORD *)v17 + 15) = v114;
            uint64_t v12 = dword_1A68ABE38[v112];
          }
          unint64_t v125 = (unint64_t)v17[5];
          if (v125 >= (unint64_t)v17[15]
            || (char v126 = &v17[v125], v127 = v126[16], v127 == (unsigned __int8 *)-1))
          {
            if (!v113 || (*(unsigned char *)(a7 + 241) & 2) != 0) {
              continue;
            }
          }
          else
          {
            if (v127 == v126[17]) {
              continue;
            }
            if (!v113)
            {
              unsigned int v128 = 0;
              goto LABEL_201;
            }
          }
          unsigned int v129 = 1;
          while (1)
          {
            v1439 = 0;
            int v130 = sub_1A688A508((unint64_t)v17[5], *((_DWORD *)v17 + 16), (uint64_t)v17, a7, &v1439);
            if (v130) {
              break;
            }
            v17[10] = &v1439[(void)v17[10]];
            ++v129;
            unsigned int v128 = *((_DWORD *)v17 + 14);
            a7 = v1437;
            if (v129 > v128)
            {
              unsigned int v114 = *((_DWORD *)v17 + 15);
              int v16 = v1435;
              __int32 v18 = v1434;
LABEL_201:
              if (v128 == v114) {
                goto LABEL_8;
              }
              if (v12)
              {
                v17[1] = v17[10];
                v17[3] = (unsigned __int8 *)(v17[(void)v17[5] + 17] - v17[(void)v17[5] + 16]);
                int v7 = a6;
                if (v128 < v114)
                {
                  int v131 = 1;
                  while (1)
                  {
                    v1439 = 0;
                    int v132 = sub_1A688A508((unint64_t)v17[5], *((_DWORD *)v17 + 16), (uint64_t)v17, a7, &v1439);
                    if (v132) {
                      break;
                    }
                    if (v1439 != v17[3]) {
                      int v131 = 0;
                    }
                    v17[10] = &v1439[(void)v17[10]];
                    ++v128;
                    a7 = v1437;
                    if (v128 >= *((_DWORD *)v17 + 15)) {
                      goto LABEL_1263;
                    }
                  }
                  if (v132 >= 1)
                  {
                    unsigned int v582 = *v1436;
                    if (*v1436)
                    {
                      if (*v1434 > *v1433)
                      {
                        _DWORD *v1431 = 1;
                        if (v582 >= 2) {
                          return 4294967294;
                        }
                      }
                    }
                  }
                  a7 = v1437;
LABEL_1263:
                  int v16 = v1435;
                  __int32 v18 = v1434;
                  if (!v131)
                  {
                    *((_DWORD *)v17 + 15) = v128;
LABEL_3519:
                    int v13 = 0;
                    a2 = *v17;
                    char v1390 = 22;
                    goto LABEL_3479;
                  }
                }
                v583 = v17[10];
LABEL_3374:
                if (v583 >= v17[1])
                {
                  int v13 = 0;
                  a2 = *v17;
                  char v1390 = 21;
                  goto LABEL_3478;
                }
LABEL_3375:
                uint64_t v23 = 0;
                goto LABEL_2587;
              }
LABEL_3513:
              int v7 = a6;
              int v13 = 0;
              v1438 = 0;
              a2 = *v17;
              char v1390 = 20;
              goto LABEL_3479;
            }
          }
          if (v130 < 1)
          {
            int v301 = v17[10];
            __int32 v18 = v1434;
            a7 = v1437;
            int v16 = v1435;
            if ((unint64_t)v301 < *v1434) {
              goto LABEL_1958;
            }
          }
          else
          {
            __int32 v18 = v1434;
            int v301 = (unsigned __int8 *)*v1434;
            v17[10] = (unsigned __int8 *)*v1434;
            a7 = v1437;
            int v16 = v1435;
          }
          unsigned int v531 = *v1436;
          if (*v1436 && ((unint64_t)v301 > *v1433 || *v1430))
          {
            _DWORD *v1431 = 1;
            if (v531 >= 2) {
              return 4294967294;
            }
          }
LABEL_1958:
          uint64_t v23 = 0;
          goto LABEL_2587;
        case 0x75u:
          uint64_t v1392 = __rev16(*(unsigned __int16 *)(v20 + 1));
          v1074 = (unsigned __int8 *)(*(void *)(a7 + 144) + v1392);
          if (v1392) {
            LODWORD(v1392) = __rev16(*(unsigned __int16 *)(v1074 + 3));
          }
          int v7 = a6;
          int v13 = v1392 | 0x40000;
          if (*((_DWORD *)v17 + 26) == -1) {
            goto LABEL_3579;
          }
          v1393 = v17;
          do
          {
            v1394 = v1393[14];
            if (v1394 == (unsigned __int8 *)-1) {
              goto LABEL_3579;
            }
            v1395 = &v1394[*(void *)(a7 + 32)];
            v1393 = (unsigned __int8 **)&v1395[v1424];
          }
          while (*((_DWORD *)v1395 + 13) != v13);
          if (v17[10] == v1393[10]) {
            return 4294967244;
          }
LABEL_3579:
          v17[1] = v1074;
          *((_DWORD *)v17 + 14) = v13;
          uint64_t v1386 = *v1074;
          goto LABEL_3580;
        case 0x76u:
        case 0x77u:
          uint64_t v23 = sub_1A688A8B4((uint64_t)v17, (void *)a7, (uint64_t *)v1440);
          if ((int)v23 > 0) {
            goto LABEL_176;
          }
          if ((v23 & 0x80000000) != 0) {
            goto LABEL_177;
          }
          unint64_t v115 = &(*v17)[(unint64_t)v1440[0]];
          goto LABEL_3441;
        case 0x78u:
          do
          {
            v20 += __rev16(*(unsigned __int16 *)(v20 + 1));
            unint64_t *v17 = v20;
          }
          while (*v20 == 120);
          continue;
        case 0x79u:
        case 0x7Au:
        case 0x7Bu:
        case 0x7Cu:
          int v41 = 0;
          unint64_t v42 = &v20[-__rev16(*(unsigned __int16 *)(v20 + 1))];
          int v43 = *v42;
          if (v43 == 134 || v43 == 138) {
            goto LABEL_593;
          }
          unint64_t v44 = &v17[14][*(void *)(a7 + 32)];
          int v41 = &v44[v1424];
          v17[14] = *(unsigned __int8 **)&v44[v1424 + 112];
          v1426 = v44;
          if (*((unsigned __int16 *)v44 + 27) << 16 == 196608)
          {
            memcpy(v41 + 128, v17 + 16, 8 * (void)v17[15]);
            __int32 v18 = v1434;
            int v16 = v1435;
            a7 = v1437;
            *((void *)v41 + 15) = v17[15];
            *((void *)v41 + 12) = v17[12];
            v17[4] = (unsigned __int8 *)((char *)v17 - (char *)v41);
            uint64_t v23 = 1;
            goto LABEL_2587;
          }
          int v43 = *v42;
LABEL_593:
          uint64_t v23 = 1;
          switch(v43)
          {
            case 126:
            case 128:
              char v302 = v17[10];
              if ((unint64_t)v302 > *(void *)(a7 + 192)) {
                *(void *)(a7 + 192) = v302;
              }
              v17[10] = (unsigned __int8 *)*((void *)v41 + 10);
              goto LABEL_610;
            case 127:
            case 129:
              goto LABEL_2587;
            case 130:
            case 131:
              int v304 = v17[10];
              if ((unint64_t)v304 > *(void *)(a7 + 192)) {
                *(void *)(a7 + 192) = v304;
              }
              v17[10] = (unsigned __int8 *)*((void *)v41 + 10);
              goto LABEL_1075;
            case 132:
LABEL_610:
              v17[4] = (unsigned __int8 *)((char *)v17 - (char *)v41);
              for (i3 = *(void *)v41; ; *(void *)int v41 = i3)
              {
                i3 += __rev16(*(unsigned __int16 *)(i3 + 1));
                if (*(unsigned char *)i3 != 120) {
                  break;
                }
              }
              goto LABEL_1075;
            case 133:
              uint64_t v23 = _pcre2_script_run_8(*((unsigned __int8 **)v41 + 10), (unint64_t)v17[10], v1432);
              __int32 v18 = v1434;
              int v16 = v1435;
              a7 = v1437;
              if (v23) {
                goto LABEL_1075;
              }
              goto LABEL_2587;
            case 136:
            case 137:
            case 141:
            case 142:
              unsigned int v299 = *(unsigned __int16 *)(v42 + 3);
              if (*((_DWORD *)v17 + 26) == bswap32(v299) >> 16)
              {
                memcpy(v17 + 16, &v1426[v1424 + 128], 8 * *(void *)&v1426[v1424 + 120]);
                __int32 v18 = v1434;
                int v16 = v1435;
                a7 = v1437;
                v17[15] = *(unsigned __int8 **)&v1426[v1424 + 120];
                v17[13] = *(unsigned __int8 **)&v1426[v1424 + 104];
                int v233 = *(unsigned __int8 **)&v1426[v1424];
              }
              else
              {
                unsigned int v305 = __rev16(v299);
                unint64_t v306 = 2 * v305 - 2;
                *((_DWORD *)v17 + 27) = v305;
                uint64_t v307 = *(void *)(a7 + 152);
                char v308 = (unsigned __int8 *)(*((void *)v41 + 10) - v307);
                int v309 = &v17[v306];
                BOOL v310 = &v17[10][-v307];
                v309[16] = v308;
                v309[17] = v310;
                if ((unint64_t)v17[15] <= v306) {
                  v17[15] = (unsigned __int8 *)(v306 + 2);
                }
LABEL_1075:
                int v233 = *v17;
                if (**v17 == 124)
                {
                  memcpy(v41 + 80, v17 + 10, __n);
                  __int32 v18 = v1434;
                  int v16 = v1435;
                  a7 = v1437;
                  uint64_t v23 = 4294966298;
                  goto LABEL_2587;
                }
                int v505 = *((unsigned __int8 *)v17 + 73);
                if (v505 != 121 && (!v41 || v17[10] != *((unsigned __int8 **)v41 + 10)))
                {
                  int v13 = 0;
                  v1391 = v233 + 3;
                  if (v505 == 123) {
                    char v1390 = 6;
                  }
                  else {
                    char v1390 = 7;
                  }
                  if (v505 == 123) {
                    a2 = v1391;
                  }
                  else {
                    a2 = v42;
                  }
                  goto LABEL_3478;
                }
              }
              break;
            default:
              goto LABEL_1075;
          }
          goto LABEL_3447;
        case 0x7Du:
          uint64_t v224 = __rev16(*(unsigned __int16 *)(v20 + 1));
          if (v16)
          {
            if (v224)
            {
              unint64_t v225 = *(void *)(a7 + 160);
              int v226 = v17[10];
              do
              {
                if ((unint64_t)v226 <= v225) {
                  goto LABEL_3375;
                }
                LODWORD(v224) = v224 - 1;
                int v227 = v226 - 1;
                do
                {
                  v17[10] = v227;
                  char v228 = *v227--;
                }
                while ((v228 & 0xC0) == 0x80);
                int v226 = v227 + 1;
              }
              while (v224);
            }
            else
            {
              int v226 = v17[10];
            }
          }
          else
          {
            unint64_t v317 = v17[10];
            if ((uint64_t)&v317[-*(void *)(a7 + 152)] < v224) {
              goto LABEL_3375;
            }
            int v226 = &v317[-v224];
            v17[10] = v226;
          }
          if ((unint64_t)v226 < *v1433) {
            unint64_t *v1433 = (unint64_t)v226;
          }
          goto LABEL_2586;
        case 0x7Eu:
        case 0x80u:
        case 0x82u:
        case 0x83u:
          int v13 = v21 | 0x20000;
          *((_DWORD *)v17 + 14) = v21 | 0x20000;
          uint64_t v1379 = *v20;
          goto LABEL_3504;
        case 0x7Fu:
        case 0x81u:
          int v13 = v21 | 0x20000;
          *((_DWORD *)v17 + 14) = v21 | 0x20000;
          uint64_t v1404 = *v20;
          goto LABEL_3527;
        case 0x84u:
        case 0x85u:
        case 0x8Bu:
          int v13 = v21 | 0x20000;
          goto LABEL_3530;
        case 0x86u:
          if (!*(_DWORD *)(a7 + 80) && *((_DWORD *)v17 + 12))
          {
LABEL_3370:
            uint64_t v1334 = __rev16(*(unsigned __int16 *)(v20 + 1));
            v17[1] = &v20[v1334];
            a2 = &v20[_pcre2_OP_lengths_8[*v20]];
            if (v20[v1334] == 120)
            {
              int v13 = 0;
              char v1390 = 1;
              goto LABEL_3478;
            }
            unint64_t *v17 = a2;
            continue;
          }
          int v13 = 0;
          *((_DWORD *)v17 + 14) = 0;
          goto LABEL_3538;
        case 0x87u:
        case 0x8Cu:
          *((_DWORD *)v17 + 16) = 0;
          unsigned int v1389 = 0x20000;
          v1200 = v20;
          int v7 = a6;
          goto LABEL_3534;
        case 0x88u:
        case 0x8Du:
          int v13 = (bswap32(*(unsigned __int16 *)(v20 + 3)) >> 16) | 0x10000;
LABEL_3530:
          *((_DWORD *)v17 + 14) = v13;
          goto LABEL_3538;
        case 0x89u:
        case 0x8Eu:
          *((_DWORD *)v17 + 16) = 0;
          goto LABEL_3532;
        case 0x8Au:
        case 0x8Fu:
          int64_t v116 = __rev16(*(unsigned __int16 *)(v20 + 1));
          v17[3] = (unsigned __int8 *)v116;
          if (v20[v116] != 120)
          {
            v116 -= 3;
            v17[3] = (unsigned __int8 *)v116;
          }
          int v7 = a6;
          BOOL v117 = v20 + 3;
          unint64_t *v17 = v20 + 3;
          int v118 = v20[3];
          if ((v118 & 0xFE) != 0x76) {
            goto LABEL_737;
          }
          uint64_t v23 = sub_1A688A8B4((uint64_t)v17, (void *)a7, (uint64_t *)v1440);
          if ((int)v23 > 0)
          {
LABEL_176:
            uint64_t v23 = 0;
LABEL_177:
            a7 = v1437;
LABEL_178:
            int v16 = v1435;
            __int32 v18 = v1434;
            goto LABEL_2587;
          }
          a7 = v1437;
          if ((v23 & 0x80000000) != 0) {
            goto LABEL_178;
          }
          v357 = v1440[0];
          BOOL v117 = &(*v17)[(unint64_t)v1440[0]];
          unint64_t *v17 = v117;
          int64_t v116 = v17[3] - v357;
          v17[3] = (unsigned __int8 *)v116;
          int v118 = *v117;
LABEL_737:
          if (v118 <= 161)
          {
            int v16 = v1435;
            __int32 v18 = v1434;
            switch(v118)
            {
              case 144:
                unint64_t v358 = ((v117[1] << 9) | (2 * v117[2])) - 2;
                if (v358 >= (unint64_t)v17[15] || v17[v358 + 16] == (unsigned __int8 *)-1) {
                  goto LABEL_3435;
                }
                int v118 = 0x90u;
                goto LABEL_3369;
              case 145:
                if (!(v117[4] | (v117[3] << 8))) {
                  goto LABEL_3435;
                }
                int v535 = (v117[3] << 8) + v117[4] + 1;
                v536 = (unsigned __int8 *)(*(void *)(a7 + 136)
                                         + *(unsigned __int16 *)(a7 + 134)
                                         * (unint64_t)__rev16(*(unsigned __int16 *)(v117 + 1))
                                         + 1);
                while (1)
                {
                  unint64_t v537 = ((*(v536 - 1) << 9) | (2 * *v536)) - 2;
                  if (v537 < (unint64_t)v17[15] && v17[v537 + 16] != (unsigned __int8 *)-1) {
                    break;
                  }
                  v536 += *(unsigned __int16 *)(a7 + 134);
                  if (--v535 <= 1) {
                    goto LABEL_3435;
                  }
                }
                int v118 = 0x91u;
                goto LABEL_3369;
              case 146:
                int v538 = *((_DWORD *)v17 + 26);
                if (v538 == -1) {
                  goto LABEL_3435;
                }
                unsigned int v539 = __rev16(*(unsigned __int16 *)(v117 + 1));
                if (v539 != 0xFFFF && v539 != v538) {
                  goto LABEL_3435;
                }
                int v118 = 0x92u;
                goto LABEL_3369;
              case 147:
                int v541 = *((_DWORD *)v17 + 26);
                if (v541 == -1 || !(v117[4] | (v117[3] << 8))) {
                  goto LABEL_3435;
                }
                int v542 = (v117[3] << 8) + v117[4] + 1;
                unint64_t v543 = *(void *)(a7 + 136)
                     + *(unsigned __int16 *)(a7 + 134) * (unint64_t)__rev16(*(unsigned __int16 *)(v117 + 1))
                     + 1;
                break;
              case 148:
                goto LABEL_3435;
              case 149:
                goto LABEL_3369;
              default:
                if (v118 != 126 && v118 != 128) {
                  goto LABEL_3629;
                }
                int v1403 = 1;
                goto LABEL_3630;
            }
            while (v541 != bswap32(*(unsigned __int16 *)(v543 - 1)) >> 16)
            {
              v543 += *(unsigned __int16 *)(a7 + 134);
              if (--v542 <= 1) {
                goto LABEL_3435;
              }
            }
            int v118 = 0x93u;
            goto LABEL_3369;
          }
          int v16 = v1435;
          __int32 v18 = v1434;
          if (v118 == 162) {
            goto LABEL_3435;
          }
LABEL_3629:
          int v1403 = 0;
LABEL_3630:
          *((_DWORD *)v17 + 14) = v1403;
          v17[1] = v117;
          unsigned int v1398 = *v117;
          unsigned int v1399 = v1398;
          goto LABEL_3631;
        case 0x96u:
          int v13 = 0;
          a2 = v20 + 1;
          v17[1] = v20 + 1;
          char v1390 = 9;
          goto LABEL_3478;
        case 0x97u:
          v1396 = v20 + 1;
          v17[1] = v20 + 1;
          do
          {
            v1396 += __rev16(*(unsigned __int16 *)(v1396 + 1));
            v17[1] = v1396;
          }
          while (*v1396 == 120);
          int v13 = 0;
          a2 = v1396 + 3;
          char v1390 = 10;
          goto LABEL_3478;
        case 0x98u:
          *((_DWORD *)v17 + 16) = 1;
          v1200 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          int v1397 = v20[1];
          if (v1397 == 137)
          {
            ++v20;
LABEL_3532:
            int v7 = a6;
          }
          else
          {
            int v7 = a6;
            if (v1397 != 142)
            {
              unsigned int v1389 = 0x20000;
LABEL_3534:
              *((_DWORD *)v17 + 14) = v1389;
              *((_DWORD *)v17 + 15) = 0;
              v17[2] = v1200;
              goto LABEL_3627;
            }
            ++v20;
          }
          unsigned int v1389 = (bswap32(*(unsigned __int16 *)(v20 + 3)) >> 16) | 0x10000;
          v1200 = v20;
          goto LABEL_3534;
        case 0x99u:
          int v13 = 0;
          *(void *)(a7 + 208) = v20 + 2;
          v17[12] = v20 + 2;
          a2 = &v20[v20[1] + _pcre2_OP_lengths_8[*v20]];
          char v1390 = 12;
          goto LABEL_3478;
        case 0x9Au:
          int v13 = 0;
          a2 = &v20[_pcre2_OP_lengths_8[*v20]];
          char v1390 = 14;
          goto LABEL_3478;
        case 0x9Bu:
          int v13 = 0;
          *(void *)(a7 + 208) = v20 + 2;
          v17[12] = v20 + 2;
          a2 = &v20[v20[1] + _pcre2_OP_lengths_8[*v20]];
          char v1390 = 15;
          goto LABEL_3478;
        case 0x9Cu:
          int v13 = 0;
          a2 = &v20[_pcre2_OP_lengths_8[*v20]];
          char v1390 = 16;
          goto LABEL_3478;
        case 0x9Du:
          unsigned int v229 = *(_DWORD *)(a7 + 248);
          unsigned int v230 = *(_DWORD *)(a7 + 244) + 1;
          *(_DWORD *)(a7 + 244) = v230;
          uint64_t v231 = _pcre2_OP_lengths_8[*v20];
          if (v230 > v229)
          {
            int v13 = 0;
            a2 = &v20[v231 + v20[1]];
            char v1390 = 17;
            goto LABEL_3478;
          }
          unint64_t *v17 = &v20[v20[1] + v231];
          continue;
        case 0x9Eu:
          int v13 = 0;
          a2 = &v20[_pcre2_OP_lengths_8[*v20]];
          char v1390 = 18;
          goto LABEL_3478;
        case 0x9Fu:
          int v13 = 0;
          *(void *)(a7 + 208) = v20 + 2;
          v17[12] = v20 + 2;
          a2 = &v20[v20[1] + _pcre2_OP_lengths_8[*v20]];
          char v1390 = 19;
          goto LABEL_3478;
        case 0xA0u:
          int v13 = 0;
          a2 = &v20[_pcre2_OP_lengths_8[*v20]];
          char v1390 = 13;
          goto LABEL_3478;
        case 0xA1u:
          int v13 = 0;
          *(void *)(a7 + 208) = v20 + 2;
          v17[12] = v20 + 2;
          a2 = &v20[v20[1] + _pcre2_OP_lengths_8[*v20]];
          char v1390 = 36;
          goto LABEL_3478;
        case 0xA2u:
          goto LABEL_2587;
        case 0xA4u:
          unint64_t v232 = v17[10];
          if ((unint64_t)v232 > *(void *)(a7 + 192)) {
            *(void *)(a7 + 192) = v232;
          }
          uint64_t v23 = 4294966297;
          v1423 = v17;
          goto LABEL_2587;
        case 0xA5u:
          if (*((_DWORD *)v17 + 26) != -1) {
            goto LABEL_440;
          }
          unsigned int v360 = *(unsigned __int16 *)(v20 + 1);
          unsigned int v361 = __rev16(v360);
          unsigned int v362 = (bswap32(v360) >> 16) | 0x10000;
          BOOL v363 = v17;
          do
          {
            uint64_t v364 = v363[14];
            if (v364 == (unsigned __int8 *)-1) {
              return 4294967252;
            }
            unint64_t v365 = &v364[*(void *)(a7 + 32)];
            BOOL v363 = (unsigned __int8 **)&v365[v1424];
          }
          while (*((_DWORD *)v365 + 13) != v362);
          v1426 = v365;
          unint64_t v366 = 2 * v361 - 2;
          *((_DWORD *)v17 + 27) = v361;
          int v367 = v363[10];
          uint64_t v368 = *(void *)(a7 + 152);
          v369 = &v367[-v368];
          int v370 = &v17[v366];
          unint64_t v371 = &v17[10][-v368];
          v370[16] = v369;
          v370[17] = v371;
          if ((unint64_t)v17[15] <= v366) {
            v17[15] = (unsigned __int8 *)(v366 + 2);
          }
LABEL_440:
          unint64_t *v17 = &v20[_pcre2_OP_lengths_8[*v20]];
          continue;
        case 0xA6u:
          int v233 = v20 + 1;
          unint64_t *v17 = v20 + 1;
          do
          {
            v233 += __rev16(*(unsigned __int16 *)(v233 + 1));
            unint64_t *v17 = v233;
          }
          while (*v233 == 120);
          goto LABEL_3447;
        default:
          return v22;
      }
      break;
    }
    switch(*((unsigned char *)v17 + 72))
    {
      case 1:
        if (v23) {
          goto LABEL_2587;
        }
        int v20 = v17[1];
        unint64_t *v17 = v20;
        goto LABEL_3370;
      case 2:
        if (v23 == -993)
        {
          v1071 = *v17;
          uint64_t v1072 = __rev16(*(unsigned __int16 *)(*v17 + 1));
          v1196 = &(*v17)[v1072];
          if (*(void *)(a7 + 216) >= (unint64_t)v1196) {
            goto LABEL_2587;
          }
          if (*v1071 != 120)
          {
            uint64_t v23 = 4294966303;
            if (*v1196 != 120) {
              goto LABEL_2587;
            }
          }
        }
        else
        {
          if (v23) {
            goto LABEL_2587;
          }
          v1071 = *v17;
          uint64_t v1072 = __rev16(*(unsigned __int16 *)(*v17 + 1));
        }
        uint64_t v23 = 0;
        int v20 = &v1071[v1072];
        unint64_t *v17 = &v1071[v1072];
        if (v1071[v1072] == 120)
        {
          int v13 = *((_DWORD *)v17 + 14);
LABEL_3538:
          a2 = &v20[_pcre2_OP_lengths_8[*v20]];
          char v1390 = 2;
          goto LABEL_3478;
        }
        goto LABEL_2587;
      case 3:
        if (v23 == -993 || !v23)
        {
          uint64_t v23 = 0;
          v1192 = *v17;
          uint64_t v1193 = __rev16(*(unsigned __int16 *)(*v17 + 1));
          int v20 = &(*v17)[v1193];
          unint64_t *v17 = v20;
          if (v1192[v1193] == 120)
          {
            int v13 = *((_DWORD *)v17 + 14);
            uint64_t v1379 = 0x78u;
LABEL_3504:
            a2 = &v20[_pcre2_OP_lengths_8[v1379]];
            char v1390 = 3;
            goto LABEL_3478;
          }
          goto LABEL_2587;
        }
        if (v23 != -999) {
          goto LABEL_2587;
        }
        memcpy(v17 + 16, v1423 + 16, 8 * (void)v1423[15]);
        v17[15] = v1423[15];
        v17[12] = v1423[12];
        v1355 = *v17;
        do
        {
          v1355 += __rev16(*(unsigned __int16 *)(v1355 + 1));
          unint64_t *v17 = v1355;
        }
        while (*v1355 == 120);
        unint64_t v115 = v1355 + 3;
LABEL_3441:
        unint64_t *v17 = v115;
        goto LABEL_3442;
      case 4:
        if ((int)v23 <= -994)
        {
          if (v23 == -999) {
            goto LABEL_2113;
          }
          if ((v23 + 997) < 3)
          {
            int v20 = *v17;
            do
            {
              v20 += __rev16(*(unsigned __int16 *)(v20 + 1));
              unint64_t *v17 = v20;
            }
            while (*v20 == 120);
            goto LABEL_2586;
          }
          goto LABEL_2587;
        }
        if (v23 == 1) {
          goto LABEL_2113;
        }
        if (v23 != -993 && v23) {
          goto LABEL_2587;
        }
        int v20 = &(*v17)[__rev16(*(unsigned __int16 *)(*v17 + 1))];
        unint64_t *v17 = v20;
        if (*v20 != 120) {
          goto LABEL_2586;
        }
        int v13 = *((_DWORD *)v17 + 14);
        uint64_t v1404 = 0x78u;
LABEL_3527:
        int v7 = a6;
        a2 = &v20[_pcre2_OP_lengths_8[v1404]];
        char v1390 = 4;
LABEL_3479:
        *((unsigned char *)v17 + 72) = v1390;
        unsigned int v14 = &v7[(void)v17];
        if (&v7[(void)v17] < (unsigned __int8 *)*(void *)(a7 + 40)) {
          goto LABEL_3487;
        }
        unint64_t v1372 = *(void *)(a7 + 24);
        unint64_t v1373 = 2 * v1372;
        unint64_t v1374 = *(void *)(a7 + 56);
        if (v1374 >= (2 * v1372) >> 10 || (unint64_t v1373 = (v1374 << 10) / (unint64_t)v7 * (void)v7, v1372 < v1373))
        {
          uint64_t v1375 = a7;
          v1376 = (char *)(*(uint64_t (**)(unint64_t, void))a7)(v1373, *(void *)(a7 + 16));
          if (!v1376) {
            return 4294967248;
          }
          v1377 = v1376;
          memcpy(v1376, *(const void **)(v1375 + 32), *(void *)(v1375 + 24));
          uint64_t v1378 = *(void *)(v1375 + 32);
          if (v1378 != *(void *)(v1375 + 48))
          {
            (*(void (**)(void, void))(v1375 + 8))(*(void *)(v1375 + 32), *(void *)(v1375 + 16));
            uint64_t v1375 = v1437;
          }
          *(void *)(v1375 + 32) = v1377;
          *(void *)(v1375 + 40) = &v1377[v1373];
          uint64_t v17 = (unsigned __int8 **)((char *)v17 + (void)v1377 - v1378);
          int v7 = a6;
          *(void *)(v1375 + 24) = v1373;
          unsigned int v14 = &a6[(void)v17];
LABEL_3487:
          memcpy(v14 + 80, v17 + 10, __n);
          unsigned int v11 = *((_DWORD *)v17 + 12) + 1;
          *((_DWORD *)v14 + 12) = v11;
          uint64_t v17 = (unsigned __int8 **)v14;
          a7 = v1437;
          int v16 = v1435;
          __int32 v18 = v1434;
          continue;
        }
        return 4294967233;
      case 5:
        if ((int)v23 > -994)
        {
          if (v23 == -993 || !v23)
          {
            v1332 = v17[1];
            uint64_t v1333 = __rev16(*(unsigned __int16 *)(v1332 + 1));
            BOOL v117 = &v1332[v1333];
            v17[1] = &v1332[v1333];
            if (v1332[v1333] != 120)
            {
LABEL_3366:
              if (*((_DWORD *)v17 + 14)) {
                goto LABEL_3434;
              }
              goto LABEL_3367;
            }
            unsigned int v1398 = **v17;
            unsigned int v1399 = 0x78u;
            int v7 = a6;
LABEL_3631:
            int v13 = v1398 | 0x30000;
            a2 = &v117[_pcre2_OP_lengths_8[v1399]];
            char v1390 = 5;
            goto LABEL_3479;
          }
          if (v23 == 1) {
            goto LABEL_3433;
          }
        }
        else
        {
          if ((v23 + 997) < 3) {
            goto LABEL_3366;
          }
          if (v23 == -999)
          {
            memcpy(v17 + 16, v1423 + 16, 8 * (void)v1423[15]);
            __int32 v18 = v1434;
            int v16 = v1435;
            a7 = v1437;
            v17[15] = v1423[15];
LABEL_3433:
            if (!*((_DWORD *)v17 + 14))
            {
LABEL_3434:
              int64_t v116 = (int64_t)v17[3];
              BOOL v117 = *v17;
LABEL_3435:
              a2 = &v117[v116];
              unint64_t *v17 = &v117[v116];
              if (*((unsigned __int8 *)v17 + 73) == 143)
              {
                int v13 = 131215;
                char v1390 = 35;
                goto LABEL_3478;
              }
              goto LABEL_8;
            }
LABEL_3367:
            BOOL v117 = *v17;
            do
            {
              v117 += __rev16(*(unsigned __int16 *)(v117 + 1));
              unint64_t *v17 = v117;
              int v118 = *v117;
            }
            while (v118 == 120);
LABEL_3369:
            int64_t v116 = _pcre2_OP_lengths_8[v118];
            goto LABEL_3435;
          }
        }
        goto LABEL_2587;
      case 6:
        if (v23) {
          goto LABEL_2587;
        }
        *v17 -= __rev16(*(unsigned __int16 *)(*v17 + 1));
        goto LABEL_8;
      case 7:
        if (v23) {
          goto LABEL_2587;
        }
        int v233 = *v17;
        goto LABEL_3447;
      case 8:
        if (v23 == -993)
        {
          v1197 = *v17;
          uint64_t v1198 = __rev16(*(unsigned __int16 *)(*v17 + 1));
          v1199 = &(*v17)[v1198];
          if (*(void *)(a7 + 216) >= (unint64_t)v1199) {
            goto LABEL_2587;
          }
          if (*v1197 != 120)
          {
            uint64_t v23 = 4294966303;
            if (*v1199 != 120) {
              goto LABEL_2587;
            }
          }
        }
        else
        {
          if (v23)
          {
            if (v23 == -998)
            {
              *((_DWORD *)v17 + 15) = 1;
              if (v17[10] == v17[1])
              {
                int v233 = *v17;
                do
                {
                  v233 += __rev16(*(unsigned __int16 *)(v233 + 1));
                  unint64_t *v17 = v233;
                }
                while (*v233 == 120);
                goto LABEL_3447;
              }
              v1200 = v17[2];
              unint64_t *v17 = v1200;
LABEL_3626:
              int v7 = a6;
LABEL_3627:
              v17[1] = v17[10];
              int v13 = *((_DWORD *)v17 + 14);
              a2 = &v1200[_pcre2_OP_lengths_8[*v1200]];
              char v1390 = 8;
              goto LABEL_3479;
            }
            goto LABEL_2587;
          }
          v1197 = *v17;
          uint64_t v1198 = __rev16(*(unsigned __int16 *)(*v17 + 1));
        }
        v1200 = &v1197[v1198];
        unint64_t *v17 = &v1197[v1198];
        if (v1197[v1198] == 120) {
          goto LABEL_3626;
        }
        if (*((_DWORD *)v17 + 15) || (uint64_t v23 = 0, *((_DWORD *)v17 + 16)))
        {
          int v233 = &v1197[v1198];
LABEL_3447:
          unint64_t *v17 = v233 + 3;
          goto LABEL_8;
        }
        goto LABEL_2587;
      case 9:
        if (v23) {
          goto LABEL_2587;
        }
        int v233 = v17[1];
        do
        {
          v233 += __rev16(*(unsigned __int16 *)(v233 + 1));
          v17[1] = v233;
        }
        while (*v233 == 120);
        goto LABEL_3447;
      case 0xA:
        if (!v23) {
          goto LABEL_1238;
        }
        goto LABEL_2587;
      case 0xB:
        v1073 = v17[1];
        v1074 = &v1073[__rev16(*(unsigned __int16 *)(v1073 + 1))];
        if ((v23 + 997) >= 5)
        {
          if (v23) {
            goto LABEL_2587;
          }
        }
        else
        {
          if (*(_DWORD *)(a7 + 232) != (*((_DWORD *)v17 + 14) ^ 0x40000)) {
            goto LABEL_2587;
          }
          BOOL v74 = v23 == -993;
          uint64_t v23 = 0;
          if (!v74) {
            goto LABEL_2587;
          }
          uint64_t v23 = 0;
          if (*(void *)(a7 + 216) >= (unint64_t)v1074) {
            goto LABEL_2587;
          }
          if (*v1073 != 120)
          {
            uint64_t v23 = 0;
            if (*v1074 != 120) {
              goto LABEL_2587;
            }
          }
        }
        uint64_t v23 = 0;
        v17[1] = v1074;
        if (*v1074 == 120)
        {
          int v13 = *((_DWORD *)v17 + 14);
          uint64_t v1386 = 0x78u;
          int v7 = a6;
LABEL_3580:
          a2 = &v1074[_pcre2_OP_lengths_8[v1386]];
          char v1390 = 11;
          goto LABEL_3479;
        }
        goto LABEL_2587;
      case 0xC:
        if (v23 == -994)
        {
          int v1075 = _pcre2_strcmp_8(*v17 + 2, *(unsigned __int8 **)(a7 + 224));
          __int32 v18 = v1434;
          int v16 = v1435;
          a7 = v1437;
          int v1076 = v1075;
          uint64_t v23 = 4294966302;
          if (!v1076)
          {
            *(void *)(v1437 + 224) = v17[10];
            uint64_t v23 = 4294966301;
          }
        }
        goto LABEL_2587;
      case 0xD:
      case 0x24:
        if (!v23)
        {
          *(_DWORD *)(a7 + 232) = *((_DWORD *)v17 + 26);
          uint64_t v23 = 4294966299;
        }
        goto LABEL_2587;
      case 0xE:
      case 0xF:
        if (!v23)
        {
          *(_DWORD *)(a7 + 232) = *((_DWORD *)v17 + 26);
          uint64_t v23 = 4294966300;
        }
        goto LABEL_2587;
      case 0x10:
        if (!v23)
        {
          *(void *)(a7 + 224) = v17[10];
          *(_DWORD *)(a7 + 232) = *((_DWORD *)v17 + 26);
          uint64_t v23 = 4294966301;
        }
        goto LABEL_2587;
      case 0x11:
        if (!v23)
        {
          *(void *)(a7 + 224) = *v17 + 2;
          *(_DWORD *)(a7 + 232) = *((_DWORD *)v17 + 26);
          uint64_t v23 = 4294966302;
        }
        goto LABEL_2587;
      case 0x12:
      case 0x13:
        if (!v23)
        {
          *(void *)(a7 + 216) = *v17;
          *(_DWORD *)(a7 + 232) = *((_DWORD *)v17 + 26);
          uint64_t v23 = 4294966303;
        }
        goto LABEL_2587;
      case 0x14:
        if (v23) {
          goto LABEL_2587;
        }
        unsigned int v1077 = *((_DWORD *)v17 + 14);
        unsigned int v1078 = *((_DWORD *)v17 + 15);
        *((_DWORD *)v17 + 14) = v1077 + 1;
        if (v1077 >= v1078) {
          goto LABEL_2587;
        }
        int v1079 = sub_1A688A508((unint64_t)v17[5], *((_DWORD *)v17 + 16), (uint64_t)v17, a7, &v1438);
        if (!v1079)
        {
          a7 = v1437;
          v17[10] = &v1438[(void)v17[10]];
          goto LABEL_3513;
        }
        if (v1079 <= 0)
        {
          v1080 = v17[10];
          a7 = v1437;
          int v16 = v1435;
          __int32 v18 = v1434;
        }
        else
        {
          __int32 v18 = v1434;
          v1080 = (unsigned __int8 *)*v1434;
          v17[10] = (unsigned __int8 *)*v1434;
          a7 = v1437;
          int v16 = v1435;
        }
        uint64_t v23 = 0;
        if ((unint64_t)v1080 >= *v18)
        {
          uint64_t v23 = 0;
          unsigned int v1217 = *v1436;
          if (*v1436)
          {
            if ((unint64_t)v1080 > *v1433 || (uint64_t v23 = 0, *v1430))
            {
              uint64_t v23 = 0;
              _DWORD *v1431 = 1;
              if (v1217 > 1) {
                return 4294967294;
              }
            }
          }
        }
        goto LABEL_2587;
      case 0x15:
        if (v23) {
          goto LABEL_2587;
        }
        v583 = (unsigned __int8 *)(v17[10] - v17[3]);
        v17[10] = v583;
        goto LABEL_3374;
      case 0x16:
        if (v23) {
          goto LABEL_2587;
        }
        v1081 = v17[1];
        if (v17[10] == v1081) {
          goto LABEL_2587;
        }
        v17[10] = v1081;
        unsigned int v1382 = *((_DWORD *)v17 + 14);
        unsigned int v1383 = *((_DWORD *)v17 + 15) - 1;
        *((_DWORD *)v17 + 15) = v1383;
        if (v1382 >= v1383)
        {
          int v7 = a6;
        }
        else
        {
          int v7 = a6;
          do
          {
            v1439 = 0;
            sub_1A688A508((unint64_t)v17[5], *((_DWORD *)v17 + 16), (uint64_t)v17, a7, &v1439);
            a7 = v1437;
            v17[10] = &v1439[(void)v17[10]];
            ++v1382;
          }
          while (v1382 < *((_DWORD *)v17 + 15));
        }
        goto LABEL_3519;
      case 0x17:
        if (v23) {
          goto LABEL_2587;
        }
        unsigned int v1082 = *((_DWORD *)v17 + 14);
        unsigned int v1083 = *((_DWORD *)v17 + 15);
        *((_DWORD *)v17 + 14) = v1082 + 1;
        if (v1082 >= v1083) {
          goto LABEL_2587;
        }
        v1068 = v17[10];
        if ((unint64_t)v1068 >= *v18) {
          goto LABEL_2881;
        }
        uint64_t v23 = 0;
        v17[10] = v1068 + 1;
        if (((v17[2][(unint64_t)*v1068 >> 3] >> (*v1068 & 7)) & 1) == 0) {
          goto LABEL_2587;
        }
        a2 = *v17;
        int v7 = a6;
        goto LABEL_3540;
      case 0x18:
        if (v23) {
          goto LABEL_2587;
        }
        v502 = v17[10] - 1;
        v17[10] = v502;
        unsigned int v324 = v17[1];
        uint64_t v90 = v12;
        goto LABEL_3376;
      case 0x19:
        if (v23) {
          goto LABEL_2587;
        }
        unsigned int v1084 = *((_DWORD *)v17 + 14);
        unsigned int v1085 = *((_DWORD *)v17 + 15);
        *((_DWORD *)v17 + 14) = v1084 + 1;
        if (v1084 >= v1085) {
          goto LABEL_2587;
        }
        v1086 = v17[10];
        if ((unint64_t)v1086 >= *v18) {
          goto LABEL_2886;
        }
        int v1087 = *v1086;
        if (*((_DWORD *)v17 + 16) != v1087)
        {
          uint64_t v23 = 0;
          if (*((_DWORD *)v17 + 17) != v1087) {
            goto LABEL_2587;
          }
        }
        int v13 = 0;
        v17[10] = v1086 + 1;
        a2 = *v17;
        goto LABEL_3525;
      case 0x1A:
        uint64_t v76 = v17[10] - 1;
        v17[10] = v76;
        if (v23) {
          goto LABEL_2587;
        }
        BOOL v75 = v17[1];
        uint64_t v30 = v12;
        goto LABEL_3378;
      case 0x1B:
        if (v23) {
          goto LABEL_2587;
        }
        unsigned int v1088 = *((_DWORD *)v17 + 14);
        unsigned int v1089 = *((_DWORD *)v17 + 15);
        *((_DWORD *)v17 + 14) = v1088 + 1;
        if (v1088 >= v1089) {
          goto LABEL_2587;
        }
        v1068 = v17[10];
        if ((unint64_t)v1068 >= *v18) {
          goto LABEL_2881;
        }
        uint64_t v23 = 0;
        int v1090 = *((_DWORD *)v17 + 16);
        v17[10] = v1068 + 1;
        if (v1090 != *v1068) {
          goto LABEL_2587;
        }
        int v13 = 0;
        a2 = *v17;
        goto LABEL_3541;
      case 0x1C:
        unsigned int v66 = v17[10] - 1;
        v17[10] = v66;
        if (v23) {
          goto LABEL_2587;
        }
        char v65 = v17[1];
        uint64_t v30 = v12;
        goto LABEL_3380;
      case 0x1D:
        if (v23) {
          goto LABEL_2587;
        }
        unsigned int v1091 = *((_DWORD *)v17 + 14);
        unsigned int v1092 = *((_DWORD *)v17 + 15);
        *((_DWORD *)v17 + 14) = v1091 + 1;
        if (v1091 >= v1092) {
          goto LABEL_2587;
        }
        v1086 = v17[10];
        if ((unint64_t)v1086 >= *v18) {
          goto LABEL_2886;
        }
        uint64_t v23 = 0;
        int v1093 = *v1086;
        if (*((_DWORD *)v17 + 16) == v1093) {
          goto LABEL_2587;
        }
        uint64_t v23 = 0;
        if (*((_DWORD *)v17 + 17) == v1093) {
          goto LABEL_2587;
        }
        v17[10] = v1086 + 1;
        a2 = *v17;
        int v7 = a6;
        goto LABEL_3598;
      case 0x1E:
        if (v23) {
          goto LABEL_2587;
        }
        int v281 = v17[10] - 1;
        v17[10] = v281;
        uint64_t v280 = v17[1];
        uint64_t v37 = v12;
        goto LABEL_3382;
      case 0x1F:
        if (v23) {
          goto LABEL_2587;
        }
        unsigned int v1094 = *((_DWORD *)v17 + 14);
        unsigned int v1095 = *((_DWORD *)v17 + 15);
        *((_DWORD *)v17 + 14) = v1094 + 1;
        if (v1094 >= v1095) {
          goto LABEL_2587;
        }
        v1068 = v17[10];
        if ((unint64_t)v1068 >= *v18) {
          goto LABEL_2881;
        }
        uint64_t v23 = 0;
        int v1096 = *((_DWORD *)v17 + 16);
        v17[10] = v1068 + 1;
        if (v1096 == *v1068) {
          goto LABEL_2587;
        }
        a2 = *v17;
        int v7 = a6;
        goto LABEL_3542;
      case 0x20:
        if (v23) {
          goto LABEL_2587;
        }
        int8x16_t v264 = v17[10] - 1;
        v17[10] = v264;
        char v263 = v17[1];
        uint64_t v37 = v12;
        goto LABEL_3384;
      case 0x21:
        if (v23) {
          goto LABEL_2587;
        }
        unsigned int v1097 = *((_DWORD *)v17 + 14);
        unsigned int v1098 = *((_DWORD *)v17 + 15);
        *((_DWORD *)v17 + 14) = v1097 + 1;
        if (v1097 >= v1098) {
          goto LABEL_2587;
        }
        v1086 = v17[10];
        uint64_t v1099 = *v18;
        if ((unint64_t)v1086 >= *v18) {
          goto LABEL_2886;
        }
        int v1100 = *((_DWORD *)v17 + 16);
        if (v1100 != 12) {
          goto LABEL_2708;
        }
        int v1101 = *(_DWORD *)(a7 + 252);
        if (v1101)
        {
          int v1102 = _pcre2_is_newline_8(v17[10], v1101, v1099, v1425, v1432);
          __int32 v18 = v1434;
          int v16 = v1435;
          a7 = v1437;
          int v1103 = v1102;
          uint64_t v23 = 0;
          if (!v1103)
          {
            int v1100 = *((_DWORD *)v17 + 16);
            v1086 = v17[10];
LABEL_2708:
            v17[10] = v1086 + 1;
            uint64_t v22 = 4294967252;
            int v1104 = v1100 - 6;
            uint64_t v1105 = *v1086;
            switch(v1104)
            {
              case 0:
                uint64_t v23 = 0;
                if ((*(unsigned char *)(*(void *)(a7 + 104) + v1105) & 8) == 0) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 1:
                uint64_t v23 = 0;
                if ((*(unsigned char *)(*(void *)(a7 + 104) + v1105) & 8) != 0) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 2:
                uint64_t v23 = 0;
                if ((*(unsigned char *)(*(void *)(a7 + 104) + v1105) & 1) == 0) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 3:
                uint64_t v23 = 0;
                if (*(unsigned char *)(*(void *)(a7 + 104) + v1105)) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 4:
                uint64_t v23 = 0;
                if ((*(unsigned char *)(*(void *)(a7 + 104) + v1105) & 0x10) == 0) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 5:
                uint64_t v23 = 0;
                if ((*(unsigned char *)(*(void *)(a7 + 104) + v1105) & 0x10) != 0) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 6:
                v1401 = v1086 + 1;
                goto LABEL_3603;
              case 7:
              case 8:
                goto LABEL_3611;
              case 11:
                uint64_t v23 = 0;
                if (*v1086 <= 0xCu)
                {
                  if ((v1105 - 11) >= 2)
                  {
                    if (v1105 == 10) {
                      goto LABEL_3611;
                    }
                    goto LABEL_2587;
                  }
LABEL_3331:
                  uint64_t v23 = 0;
                  if (*(_WORD *)(a7 + 130) != 2) {
                    goto LABEL_3611;
                  }
                  goto LABEL_2587;
                }
                if (v1105 == 133) {
                  goto LABEL_3331;
                }
                if (v1105 != 13) {
                  goto LABEL_2587;
                }
                if ((unint64_t)(v1086 + 1) < *v18 && v1086[1] == 10) {
                  v17[10] = v1086 + 2;
                }
                break;
              case 12:
                uint64_t v23 = 0;
                if (v1105 != 9 && v1105 != 32 && v1105 != 160) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 13:
                if (v1105 == 9) {
                  goto LABEL_3611;
                }
                if (v1105 == 32) {
                  goto LABEL_3611;
                }
                uint64_t v23 = 0;
                if (v1105 == 160) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 14:
                uint64_t v23 = 0;
                if ((v1105 - 10) >= 4 && v1105 != 133) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              case 15:
                if ((v1105 - 10) < 4) {
                  goto LABEL_3611;
                }
                uint64_t v23 = 0;
                if (v1105 == 133) {
                  goto LABEL_3611;
                }
                goto LABEL_2587;
              default:
                return v22;
            }
            goto LABEL_3651;
          }
        }
        else
        {
          uint64_t v1252 = *v1425;
          if ((unint64_t)v1086 > v1099 - v1252
            || *v1086 != *(unsigned __int8 *)(a7 + 260)
            || (uint64_t v23 = 0, v1252 != 1) && (uint64_t v23 = 0, v1086[1] != *(unsigned __int8 *)(a7 + 261)))
          {
            v1401 = v1086 + 1;
            v17[10] = v1086 + 1;
            LODWORD(v1105) = *v1086;
LABEL_3603:
            unsigned int v1402 = *v1436;
            if (!*v1436 || (unint64_t)v1401 < *v18 || *(_DWORD *)(a7 + 252) || *v1425 != 2) {
              goto LABEL_3611;
            }
            if (v1105 == *(unsigned __int8 *)(a7 + 260))
            {
              _DWORD *v1431 = 1;
              a7 = v1437;
              if (v1402 > 1) {
                return 4294967294;
              }
              goto LABEL_3611;
            }
LABEL_3651:
            a7 = v1437;
            goto LABEL_3611;
          }
        }
        goto LABEL_2587;
      case 0x22:
        if (v23) {
          goto LABEL_2587;
        }
        v1335 = v17[10];
        v1034 = v1335 - 1;
        v17[10] = v1335 - 1;
        if (*((_DWORD *)v17 + 16) == 17 && v1034 > v17[1] && *v1034 == 10)
        {
          int v1337 = *(v1335 - 2);
          v1336 = v1335 - 2;
          if (v1337 == 13)
          {
            v17[10] = v1336;
            v1034 = v1336;
          }
        }
        goto LABEL_3391;
      case 0x23:
        goto LABEL_2587;
      default:
        return v22;
    }
  }
}

uint64_t sub_1A688A508(unint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int8 **a5)
{
  if (*(void *)(a3 + 120) <= a1 || (uint64_t v6 = a3 + 8 * a1, v7 = *(void *)(v6 + 128), v7 == -1))
  {
    if ((*(unsigned char *)(a4 + 241) & 2) != 0)
    {
      int v33 = 0;
LABEL_59:
      uint64_t result = 0;
      *a5 = v33;
      return result;
    }
    return 0xFFFFFFFFLL;
  }
  uint64_t v8 = *(void *)(a3 + 80);
  uint64_t v9 = *(void *)(a4 + 152);
  int v10 = (unsigned __int8 *)(v9 + v7);
  uint64_t v11 = *(void *)(v6 + 136);
  unint64_t v12 = v11 - v7;
  if (a2)
  {
    int v13 = *(_DWORD *)(a4 + 240);
    if ((v13 & 0xA0000) != 0)
    {
      if (v7 < v11)
      {
        unint64_t v14 = v9 + v11;
        unint64_t v15 = *(void *)(a4 + 168);
        int v16 = *(unsigned __int8 **)(a3 + 80);
        while ((unint64_t)v16 < v15)
        {
          unsigned int v17 = *v16;
          if ((v13 & 0x80000) != 0)
          {
            if (v17 < 0xC0)
            {
              ++v16;
            }
            else if ((v17 & 0x20) != 0)
            {
              int v24 = v16[1] & 0x3F;
              if ((v17 & 0x10) != 0)
              {
                if ((v17 & 8) != 0)
                {
                  int v26 = v16[2] & 0x3F;
                  int v27 = v16[3] & 0x3F;
                  int v28 = v16[4] & 0x3F;
                  if ((v17 & 4) != 0)
                  {
                    unsigned int v17 = ((v17 & 1) << 30) | (v24 << 24) | (v26 << 18) | (v27 << 12) | (v28 << 6) | v16[5] & 0x3F;
                    v16 += 6;
                  }
                  else
                  {
                    unsigned int v17 = ((v17 & 3) << 24) | (v24 << 18) | (v26 << 12) | (v27 << 6) | v28;
                    v16 += 5;
                  }
                }
                else
                {
                  unsigned int v17 = ((v17 & 7) << 18) | (v24 << 12) | ((v16[2] & 0x3F) << 6) | v16[3] & 0x3F;
                  v16 += 4;
                }
              }
              else
              {
                unsigned int v17 = ((v17 & 0xF) << 12) | (v24 << 6) | v16[2] & 0x3F;
                v16 += 3;
              }
            }
            else
            {
              unsigned __int8 v20 = v16[1];
              v16 += 2;
              unsigned int v17 = v20 & 0x3F | ((v17 & 0x1F) << 6);
            }
            unsigned int v18 = *v10;
            if (v18 < 0xC0)
            {
              ++v10;
            }
            else if ((v18 & 0x20) != 0)
            {
              int v25 = v10[1] & 0x3F;
              if ((v18 & 0x10) != 0)
              {
                if ((v18 & 8) != 0)
                {
                  int v29 = v10[2] & 0x3F;
                  int v30 = v10[3] & 0x3F;
                  int v31 = v10[4] & 0x3F;
                  if ((v18 & 4) != 0)
                  {
                    unsigned int v18 = ((v18 & 1) << 30) | (v25 << 24) | (v29 << 18) | (v30 << 12) | (v31 << 6) | v10[5] & 0x3F;
                    v10 += 6;
                  }
                  else
                  {
                    unsigned int v18 = ((v18 & 3) << 24) | (v25 << 18) | (v29 << 12) | (v30 << 6) | v31;
                    v10 += 5;
                  }
                }
                else
                {
                  unsigned int v18 = ((v18 & 7) << 18) | (v25 << 12) | ((v10[2] & 0x3F) << 6) | v10[3] & 0x3F;
                  v10 += 4;
                }
              }
              else
              {
                unsigned int v18 = ((v18 & 0xF) << 12) | (v25 << 6) | v10[2] & 0x3F;
                v10 += 3;
              }
            }
            else
            {
              unsigned __int8 v21 = v10[1];
              v10 += 2;
              unsigned int v18 = v21 & 0x3F | ((v18 & 0x1F) << 6);
            }
          }
          else
          {
            unsigned int v19 = *v10++;
            unsigned int v18 = v19;
            ++v16;
          }
          if (v17 != v18
            && v17 != *(_DWORD *)&_pcre2_ucd_records_8[12
                                                     * _pcre2_ucd_stage2_8[v18 & 0x7F | (_pcre2_ucd_stage1_8[v18 >> 7] << 7)]
                                                     + 4]
                    + v18)
          {
            uint64_t v22 = &_pcre2_ucd_caseless_sets_8[_pcre2_ucd_records_8[12
                                                                 * _pcre2_ucd_stage2_8[v18 & 0x7F | (_pcre2_ucd_stage1_8[v18 >> 7] << 7)]
                                                                 + 3]];
            do
            {
              unsigned int v23 = *v22;
              if (v17 < *v22) {
                return 0xFFFFFFFFLL;
              }
              ++v22;
            }
            while (v17 != v23);
          }
          if ((unint64_t)v10 >= v14) {
            goto LABEL_58;
          }
        }
        return 1;
      }
    }
    else if (v12)
    {
      int v16 = (unsigned __int8 *)(v8 + v12);
      uint64_t v37 = v7 - v11;
      unsigned int v38 = *(unsigned __int8 **)(a3 + 80);
      while ((unint64_t)v38 < *(void *)(a4 + 168))
      {
        if (*(unsigned __int8 *)(*(void *)(a4 + 88) + *v10) != *(unsigned __int8 *)(*(void *)(a4 + 88) + *v38)) {
          return 0xFFFFFFFFLL;
        }
        ++v10;
        ++v38;
        BOOL v36 = __CFADD__(v37++, 1);
        if (v36) {
          goto LABEL_58;
        }
      }
      return 1;
    }
    goto LABEL_57;
  }
  if (*(_WORD *)(a4 + 128))
  {
    if (v12)
    {
      int v16 = (unsigned __int8 *)(v8 + v12);
      uint64_t v34 = v7 - v11;
      unsigned int v35 = *(unsigned __int8 **)(a3 + 80);
      while ((unint64_t)v35 < *(void *)(a4 + 168))
      {
        if (*v10 != *v35) {
          return 0xFFFFFFFFLL;
        }
        ++v35;
        ++v10;
        BOOL v36 = __CFADD__(v34++, 1);
        if (v36) {
          goto LABEL_58;
        }
      }
      return 1;
    }
LABEL_57:
    int v16 = *(unsigned __int8 **)(a3 + 80);
LABEL_58:
    int v33 = &v16[-v8];
    goto LABEL_59;
  }
  if (*(void *)(a4 + 168) - v8 >= v12)
  {
    if (!memcmp(v10, *(const void **)(a3 + 80), v11 - v7))
    {
      int v16 = (unsigned __int8 *)(v8 + v12);
      goto LABEL_58;
    }
    return 0xFFFFFFFFLL;
  }
  return 1;
}

uint64_t sub_1A688A8B4(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v4 = *(unsigned char **)a1;
  if (**(unsigned char **)a1 == 118) {
    uint64_t v5 = 6;
  }
  else {
    uint64_t v5 = __rev16(*(unsigned __int16 *)(v4 + 5));
  }
  *a3 = v5;
  uint64_t v6 = (uint64_t (*)(uint64_t, void))a2[35];
  if (!v6) {
    return 0;
  }
  uint64_t v7 = a2[33];
  int v8 = *(_DWORD *)(a1 + 108);
  *(_DWORD *)(v7 + 8) = (*(_DWORD *)(a1 + 120) >> 1) + 1;
  *(_DWORD *)(v7 + 12) = v8;
  uint64_t v9 = a2[26];
  *(void *)(v7 + 16) = a1 + 112;
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 56) = *(void *)(a1 + 80) - a2[19];
  *(void *)(v7 + 64) = __rev16(*(unsigned __int16 *)(v4 + 1));
  *(void *)(v7 + 72) = __rev16(*(unsigned __int16 *)(v4 + 3));
  if (*v4 == 118)
  {
    int v10 = 0;
    uint64_t v11 = 0;
    *(_DWORD *)(v7 + 4) = v4[5];
    *(void *)(v7 + 80) = 0;
  }
  else
  {
    *(_DWORD *)(v7 + 4) = 0;
    *(void *)(v7 + 80) = __rev16(*(unsigned __int16 *)(v4 + 7));
    int v10 = v4 + 10;
    uint64_t v11 = *a3 - 11;
  }
  *(void *)(v7 + 88) = v11;
  *(void *)(v7 + 96) = v10;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  *(void *)(a1 + 112) = -1;
  *(void *)(a1 + 120) = -1;
  uint64_t result = v6(v7, a2[34]);
  *(void *)(a1 + 112) = v13;
  *(void *)(a1 + 120) = v14;
  *(_DWORD *)(v7 + 104) = 0;
  return result;
}

void *pcre2_match_data_create_8(unsigned int a1, long long *a2)
{
  if (a1 <= 1) {
    int v2 = 1;
  }
  else {
    int v2 = a1;
  }
  uint64_t result = _pcre2_memctl_malloc_8(8 * (2 * v2) + 80, a2);
  if (result)
  {
    *((_WORD *)result + 37) = v2;
    *((unsigned char *)result + 73) = 0;
  }
  return result;
}

void *pcre2_match_data_create_from_pattern_8(uint64_t a1, long long *a2)
{
  if (!a2) {
    a2 = (long long *)a1;
  }
  uint64_t v2 = *(unsigned __int16 *)(a1 + 128) + 1;
  uint64_t result = _pcre2_memctl_malloc_8(16 * v2 + 80, a2);
  if (result)
  {
    *((_WORD *)result + 37) = v2;
    *((unsigned char *)result + 73) = 0;
  }
  return result;
}

uint64_t pcre2_match_data_free_8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(unsigned char *)(result + 73)) {
      (*(void (**)(void, void))(result + 8))(*(void *)(result + 32), *(void *)(result + 16));
    }
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    uint64_t v2 = *(void *)(v1 + 16);
    return v3(v1, v2);
  }
  return result;
}

uint64_t pcre2_get_mark_8(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

uint64_t pcre2_get_ovector_pointer_8(uint64_t a1)
{
  return a1 + 80;
}

uint64_t pcre2_get_ovector_count_8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 74);
}

uint64_t pcre2_get_startchar_8(uint64_t a1)
{
  return *(void *)(a1 + 64);
}

uint64_t pcre2_get_match_data_size_8(uint64_t a1)
{
  return 16 * *(unsigned __int16 *)(a1 + 74) + 80;
}

uint64_t _pcre2_valid_utf_8(unsigned __int8 *a1, unint64_t a2, void *a3)
{
  if (!a2) {
    return 0;
  }
  for (unsigned int i = a1; ; ++i)
  {
    unint64_t v4 = a2 - 1;
    if ((char)*i < 0) {
      break;
    }
    --a2;
LABEL_15:
    if (!a2) {
      return 0;
    }
  }
  unsigned int v5 = *i;
  if (v5 <= 0xBF)
  {
    *a3 = i - a1;
    return 4294967274;
  }
  else if (v5 >= 0xFE)
  {
    *a3 = i - a1;
    return 4294967273;
  }
  else
  {
    unint64_t v6 = _pcre2_utf8_table4[*i & 0x3F];
    a2 = v4 - v6;
    if (v4 < v6 && (*a3 = i - a1, unint64_t v7 = ~v4 + v6, v7 < 5))
    {
      return (-3 - v7);
    }
    else
    {
      int v9 = i + 1;
      unsigned int v8 = i[1];
      if ((v8 & 0xC0) == 0x80)
      {
        switch((int)v6)
        {
          case 1:
            if ((v5 & 0x3E) != 0) {
              goto LABEL_14;
            }
            *a3 = v9 + ~a1;
            uint64_t v16 = 4294967279;
            break;
          case 2:
            char v10 = i[2];
            i += 2;
            if ((v10 & 0xC0) != 0x80)
            {
              int v15 = i - a1;
              goto LABEL_54;
            }
            if (v5 == 224 && (v8 & 0x20) == 0)
            {
              *a3 = (int)i - (int)a1 - 2;
              uint64_t v16 = 4294967278;
            }
            else
            {
              if (v5 != 237 || v8 < 0xA0) {
                goto LABEL_15;
              }
              *a3 = (int)i - (int)a1 - 2;
              uint64_t v16 = 4294967280;
            }
            break;
          case 3:
            if ((i[2] & 0xC0) != 0x80)
            {
              int v17 = i - a1;
              goto LABEL_56;
            }
            char v11 = i[3];
            i += 3;
            if ((v11 & 0xC0) != 0x80)
            {
              int v18 = i - a1;
              goto LABEL_61;
            }
            if (v5 == 240 && (v8 & 0x30) == 0)
            {
              *a3 = (int)i - (int)a1 - 3;
              uint64_t v16 = 4294967277;
            }
            else
            {
              if (v5 <= 0xF4 && (v5 != 244 || v8 < 0x90)) {
                goto LABEL_15;
              }
              *a3 = (int)i - (int)a1 - 3;
              uint64_t v16 = 4294967281;
            }
            break;
          case 4:
            int v13 = i + 2;
            if ((i[2] & 0xC0) != 0x80) {
              goto LABEL_50;
            }
            int v14 = i + 3;
            if ((i[3] & 0xC0) != 0x80) {
              goto LABEL_60;
            }
            int v9 = i + 4;
            if ((i[4] & 0xC0) != 0x80)
            {
              int v19 = v9 - a1;
              goto LABEL_64;
            }
            uint64_t v16 = 4294967283;
            if (v5 != 248 || (v8 & 0x38) != 0) {
              goto LABEL_52;
            }
            *a3 = v9 - (int)a1 - 4;
            uint64_t v16 = 4294967276;
            break;
          case 5:
            int v13 = i + 2;
            if ((i[2] & 0xC0) == 0x80)
            {
              int v14 = i + 3;
              if ((i[3] & 0xC0) == 0x80)
              {
                if ((i[4] & 0xC0) == 0x80)
                {
                  int v9 = i + 5;
                  if ((i[5] & 0xC0) == 0x80)
                  {
                    uint64_t v16 = 4294967282;
                    if (v5 != 252 || (v8 & 0x3C) != 0) {
                      goto LABEL_52;
                    }
                    *a3 = v9 - (int)a1 - 5;
                    uint64_t v16 = 4294967275;
                  }
                  else
                  {
                    *a3 = (int)i - (int)a1;
                    uint64_t v16 = 4294967284;
                  }
                }
                else
                {
                  int v19 = i + 4 - a1;
LABEL_64:
                  *a3 = v19 - 4;
                  uint64_t v16 = 4294967285;
                }
              }
              else
              {
LABEL_60:
                int v18 = v14 - a1;
LABEL_61:
                *a3 = v18 - 3;
                uint64_t v16 = 4294967286;
              }
            }
            else
            {
LABEL_50:
              int v15 = v13 - a1;
LABEL_54:
              int v17 = v15 - 2;
LABEL_56:
              *a3 = v17;
              uint64_t v16 = 4294967287;
            }
            break;
          default:
            if (v6 < 4)
            {
LABEL_14:
              ++i;
              goto LABEL_15;
            }
            uint64_t v16 = 4294967282;
LABEL_52:
            *a3 = (v9 - a1 - v6);
            break;
        }
      }
      else
      {
        *a3 = v9 + ~a1;
        return 4294967288;
      }
    }
  }
  return v16;
}

uint64_t pcre2_jit_compile_8(uint64_t a1, int a2)
{
  if (!a1) {
    return 4294967245;
  }
  if ((a2 & 0xFFFFFFF8) == 0x100)
  {
    int v2 = *(_DWORD *)(a1 + 88);
    if ((v2 & 0x4000000) == 0) {
      *(_DWORD *)(a1 + 88) = v2 | 0x4000000;
    }
  }
  return 4294967251;
}

uint64_t pcre2_jit_match_8()
{
  return 4294967251;
}

uint64_t pcre2_jit_stack_create_8()
{
  return 0;
}

const char *_pcre2_jit_get_target_8()
{
  return "JIT is not supported";
}

uint64_t _pcre2_jit_get_size_8()
{
  return 0;
}

void *_pcre2_memctl_malloc_8(size_t a1, long long *a2)
{
  if (a2)
  {
    uint64_t result = (void *)(*(uint64_t (**)(size_t, void))a2)(a1, *((void *)a2 + 2));
    if (result)
    {
      long long v4 = *a2;
      result[2] = *((void *)a2 + 2);
      *(_OWORD *)uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = malloc_type_malloc(a1, 0xCFC7CE29uLL);
    if (result)
    {
      *uint64_t result = sub_1A688AF40;
      result[1] = j__free;
      result[2] = 0;
    }
  }
  return result;
}

void *sub_1A688AF40(size_t a1)
{
  return malloc_type_malloc(a1, 0xFD6459F8uLL);
}

void *(**pcre2_general_context_create_8(void *(*a1)(size_t a1), void (__cdecl *a2)(void *), void *(*a3)(size_t a1)))(size_t a1)
{
  if (a1)
  {
    unsigned int v5 = a1;
    uint64_t result = (void *(**)(size_t))((uint64_t (*)(uint64_t, void *(*)(size_t)))a1)(24, a3);
  }
  else
  {
    unsigned int v5 = sub_1A688AF40;
    uint64_t result = (void *(**)(size_t))((uint64_t (*)(uint64_t, void *(*)(size_t)))sub_1A688AF40)(24, a3);
  }
  if (result)
  {
    if (a2) {
      unint64_t v7 = a2;
    }
    else {
      unint64_t v7 = j__free;
    }
    *uint64_t result = v5;
    result[1] = (void *(*)(size_t))v7;
    result[2] = a3;
  }
  return result;
}

__n128 pcre2_compile_context_create_8(uint64_t a1)
{
  int v2 = _pcre2_memctl_malloc_8(0x48uLL, (long long *)a1);
  if (v2)
  {
    long long v4 = unk_1EFB80798;
    *((_OWORD *)v2 + 2) = xmmword_1EFB80788;
    *((_OWORD *)v2 + 3) = v4;
    v2[8] = qword_1EFB807A8;
    __n128 result = (__n128)unk_1EFB80778;
    *(_OWORD *)int v2 = _pcre2_default_compile_context_8;
    *((__n128 *)v2 + 1) = result;
    if (a1)
    {
      __n128 result = *(__n128 *)a1;
      v2[2] = *(void *)(a1 + 16);
      *(__n128 *)int v2 = result;
    }
  }
  return result;
}

__n128 pcre2_match_context_create_8(uint64_t a1)
{
  int v2 = _pcre2_memctl_malloc_8(0x50uLL, (long long *)a1);
  if (v2)
  {
    long long v4 = unk_1EFB80800;
    *((_OWORD *)v2 + 2) = xmmword_1EFB807F0;
    *((_OWORD *)v2 + 3) = v4;
    *((_OWORD *)v2 + 4) = xmmword_1EFB80810;
    __n128 result = (__n128)unk_1EFB807E0;
    *(_OWORD *)int v2 = _pcre2_default_match_context_8;
    *((__n128 *)v2 + 1) = result;
    if (a1)
    {
      __n128 result = *(__n128 *)a1;
      v2[2] = *(void *)(a1 + 16);
      *(__n128 *)int v2 = result;
    }
  }
  return result;
}

__n128 pcre2_convert_context_create_8(uint64_t a1)
{
  int v2 = _pcre2_memctl_malloc_8(0x20uLL, (long long *)a1);
  if (v2)
  {
    result.n128_u64[0] = _pcre2_default_convert_context_8;
    long long v4 = unk_1EFB807C0;
    *int v2 = _pcre2_default_convert_context_8;
    v2[1] = v4;
    if (a1)
    {
      __n128 result = *(__n128 *)a1;
      *((void *)v2 + 2) = *(void *)(a1 + 16);
      *int v2 = result;
    }
  }
  return result;
}

__n128 pcre2_general_context_copy_8(uint64_t a1)
{
  int v2 = (__n128 *)(*(uint64_t (**)(uint64_t, void))a1)(24, *(void *)(a1 + 16));
  if (v2)
  {
    __n128 result = *(__n128 *)a1;
    v2[1].n128_u64[0] = *(void *)(a1 + 16);
    *int v2 = result;
  }
  return result;
}

__n128 pcre2_compile_context_copy_8(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void))a1)(72, *(void *)(a1 + 16));
  if (v2)
  {
    *(_OWORD *)uint64_t v2 = *(_OWORD *)a1;
    __n128 result = *(__n128 *)(a1 + 16);
    long long v4 = *(_OWORD *)(a1 + 32);
    long long v5 = *(_OWORD *)(a1 + 48);
    *(void *)(v2 + 64) = *(void *)(a1 + 64);
    *(_OWORD *)(v2 + 32) = v4;
    *(_OWORD *)(v2 + 48) = v5;
    *(__n128 *)(v2 + 16) = result;
  }
  return result;
}

__n128 pcre2_match_context_copy_8(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void))a1)(80, *(void *)(a1 + 16));
  if (v2)
  {
    *(_OWORD *)uint64_t v2 = *(_OWORD *)a1;
    __n128 result = *(__n128 *)(a1 + 16);
    long long v4 = *(_OWORD *)(a1 + 32);
    long long v5 = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v2 + 64) = v5;
    *(__n128 *)(v2 + 16) = result;
    *(_OWORD *)(v2 + 32) = v4;
  }
  return result;
}

__n128 pcre2_convert_context_copy_8(uint64_t a1)
{
  uint64_t v2 = (_OWORD *)(*(uint64_t (**)(uint64_t, void))a1)(32, *(void *)(a1 + 16));
  if (v2)
  {
    __n128 result = *(__n128 *)a1;
    long long v4 = *(_OWORD *)(a1 + 16);
    *uint64_t v2 = *(_OWORD *)a1;
    v2[1] = v4;
  }
  return result;
}

uint64_t pcre2_general_context_free_8(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 8))(result, *(void *)(result + 16));
  }
  return result;
}

uint64_t pcre2_compile_context_free_8(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 8))(result, *(void *)(result + 16));
  }
  return result;
}

uint64_t pcre2_match_context_free_8(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 8))(result, *(void *)(result + 16));
  }
  return result;
}

uint64_t pcre2_convert_context_free_8(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 8))(result, *(void *)(result + 16));
  }
  return result;
}

uint64_t pcre2_set_character_tables_8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = a2;
  return 0;
}

uint64_t pcre2_set_bsr_8(uint64_t a1, int a2)
{
  if ((a2 - 1) > 1) {
    return 4294967267;
  }
  uint64_t result = 0;
  *(_WORD *)(a1 + 56) = a2;
  return result;
}

uint64_t pcre2_set_max_pattern_length_8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 48) = a2;
  return 0;
}

uint64_t pcre2_set_newline_8(uint64_t a1, int a2)
{
  if ((a2 - 1) > 5) {
    return 4294967267;
  }
  uint64_t result = 0;
  *(_WORD *)(a1 + 58) = a2;
  return result;
}

uint64_t pcre2_set_parens_nest_limit_8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 60) = a2;
  return 0;
}

uint64_t pcre2_set_compile_extra_options_8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 64) = a2;
  return 0;
}

uint64_t pcre2_set_compile_recursion_guard_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a3;
  return 0;
}

uint64_t pcre2_set_callout_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a3;
  return 0;
}

uint64_t pcre2_set_substitute_callout_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  return 0;
}

uint64_t pcre2_set_heap_limit_8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 64) = a2;
  return 0;
}

uint64_t pcre2_set_match_limit_8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 68) = a2;
  return 0;
}

uint64_t pcre2_set_depth_limit_8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 72) = a2;
  return 0;
}

uint64_t pcre2_set_offset_limit_8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = a2;
  return 0;
}

uint64_t pcre2_set_recursion_limit_8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 72) = a2;
  return 0;
}

uint64_t pcre2_set_recursion_memory_management_8()
{
  return 0;
}

uint64_t pcre2_set_glob_separator_8(uint64_t a1, int a2)
{
  uint64_t result = 4294967267;
  if ((a2 - 46) <= 0x2E && ((1 << (a2 - 46)) & 0x400000000003) != 0)
  {
    uint64_t result = 0;
    *(_DWORD *)(a1 + 24) = a2;
  }
  return result;
}

uint64_t pcre2_set_glob_escape_8(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFF) {
    return 4294967267;
  }
  if (!a2) {
    goto LABEL_6;
  }
  if (a2 > 0x7F)
  {
    if (__maskrune(a2, 0x2000uLL)) {
      goto LABEL_6;
    }
  }
  else if ((*(_DWORD *)(MEMORY[0x1E4F14390] + 4 * a2 + 60) & 0x2000) != 0)
  {
LABEL_6:
    uint64_t result = 0;
    *(_DWORD *)(a1 + 28) = a2;
    return result;
  }
  return 4294967267;
}

uint64_t _pcre2_ord2utf_8(unsigned int a1, uint64_t a2)
{
  uint64_t v2 = 0;
  while (_pcre2_utf8_table1[v2] < (signed int)a1)
  {
    if (++v2 == 6)
    {
      LODWORD(v2) = 6;
      break;
    }
  }
  uint64_t v3 = (unsigned char *)(a2 + v2);
  if ((int)v2 >= 1)
  {
    unsigned int v4 = v2 + 1;
    do
    {
      *v3-- = a1 & 0x3F | 0x80;
      a1 >>= 6;
      --v4;
    }
    while (v4 > 1);
  }
  *uint64_t v3 = _pcre2_utf8_table2[4 * v2] | a1;
  return (v2 + 1);
}

uint64_t pcre2_pattern_info_8(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  if (!a3 && a2 < 0x1B) {
    return dword_1A68ABE68[a2];
  }
  if (!a1) {
    return 4294967245;
  }
  if (*(_DWORD *)(a1 + 80) != 1346589253) {
    return 4294967265;
  }
  unsigned int v4 = *(_DWORD *)(a1 + 96);
  if ((v4 & 1) == 0) {
    return 4294967264;
  }
  switch(a2)
  {
    case 0u:
      int v5 = *(_DWORD *)(a1 + 88);
      goto LABEL_49;
    case 1u:
      int v5 = *(_DWORD *)(a1 + 84);
      goto LABEL_49;
    case 2u:
      int v5 = *(unsigned __int16 *)(a1 + 130);
      goto LABEL_49;
    case 3u:
      int v5 = *(unsigned __int16 *)(a1 + 120);
      goto LABEL_49;
    case 4u:
      int v5 = *(unsigned __int16 *)(a1 + 128);
      goto LABEL_49;
    case 5u:
      if ((v4 & 0x10) == 0) {
        goto LABEL_23;
      }
      int v5 = *(_DWORD *)(a1 + 112);
      goto LABEL_49;
    case 6u:
      if ((v4 & 0x10) != 0) {
        int v5 = 1;
      }
      else {
        int v5 = (v4 >> 8) & 2;
      }
      goto LABEL_49;
    case 7u:
      if ((v4 & 0x40) != 0) {
        uint64_t v6 = a1 + 40;
      }
      else {
        uint64_t v6 = 0;
      }
      goto LABEL_45;
    case 8u:
      int v5 = (v4 >> 11) & 1;
      goto LABEL_49;
    case 9u:
      int v5 = (v4 >> 10) & 1;
      goto LABEL_49;
    case 0xAu:
      *a3 = 0;
      goto LABEL_50;
    case 0xBu:
      if ((v4 & 0x80) != 0) {
        int v5 = *(_DWORD *)(a1 + 116);
      }
      else {
LABEL_23:
      }
        int v5 = 0;
      goto LABEL_49;
    case 0xCu:
      int v5 = (v4 >> 7) & 1;
      goto LABEL_49;
    case 0xDu:
      int v5 = (v4 >> 13) & 1;
      goto LABEL_49;
    case 0xEu:
      *(_DWORD *)a3 = *(_DWORD *)(a1 + 104);
      int v7 = *(_DWORD *)(a1 + 104);
      goto LABEL_42;
    case 0xFu:
      int v5 = *(unsigned __int16 *)(a1 + 124);
      goto LABEL_49;
    case 0x10u:
      int v5 = *(unsigned __int16 *)(a1 + 126);
      goto LABEL_49;
    case 0x11u:
      int v5 = *(unsigned __int16 *)(a1 + 134);
      goto LABEL_49;
    case 0x12u:
      int v5 = *(unsigned __int16 *)(a1 + 132);
      goto LABEL_49;
    case 0x13u:
      uint64_t v6 = a1 + 136;
      goto LABEL_45;
    case 0x14u:
      int v5 = *(unsigned __int16 *)(a1 + 122);
      goto LABEL_49;
    case 0x15u:
      *(_DWORD *)a3 = *(_DWORD *)(a1 + 108);
      int v7 = *(_DWORD *)(a1 + 108);
      goto LABEL_42;
    case 0x16u:
      uint64_t v6 = *(void *)(a1 + 72);
      goto LABEL_45;
    case 0x17u:
      int v5 = (v4 >> 22) & 1;
      goto LABEL_49;
    case 0x18u:
      uint64_t v6 = 16 * *(unsigned __int16 *)(a1 + 128) + 128;
LABEL_45:
      *a3 = v6;
      goto LABEL_50;
    case 0x19u:
      *(_DWORD *)a3 = *(_DWORD *)(a1 + 100);
      int v7 = *(_DWORD *)(a1 + 100);
LABEL_42:
      if (v7 != -1) {
        goto LABEL_50;
      }
      uint64_t result = 4294967241;
      break;
    case 0x1Au:
      int v5 = *(_DWORD *)(a1 + 92);
LABEL_49:
      *(_DWORD *)a3 = v5;
LABEL_50:
      uint64_t result = 0;
      break;
    default:
      uint64_t result = 4294967262;
      break;
  }
  return result;
}

uint64_t pcre2_callout_enumerate_8(uint64_t a1, uint64_t (*a2)(long long *, uint64_t), uint64_t a3)
{
  if (!a1) {
    return 4294967245;
  }
  if (*(_DWORD *)(a1 + 80) != 1346589253) {
    return 4294967265;
  }
  if (*(unsigned char *)(a1 + 96))
  {
    int v6 = *(_DWORD *)(a1 + 88);
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v13 = 0u;
    int v7 = (unsigned __int8 *)(a1
                           + *(unsigned __int16 *)(a1 + 132) * (unint64_t)*(unsigned __int16 *)(a1 + 134)
                           + 136);
    while (1)
    {
      while (1)
      {
        uint64_t result = *v7;
        if ((result - 29) >= 0x38) {
          break;
        }
        v7 += _pcre2_OP_lengths_8[result];
        if ((v6 & 0x80000) != 0)
        {
          unsigned int v8 = *(v7 - 1);
          if (v8 >= 0xC0) {
            v7 += _pcre2_utf8_table4[v8 & 0x3F];
          }
        }
      }
      switch(*v7)
      {
        case 'U':
        case 'V':
        case 'W':
        case 'X':
        case 'Y':
        case 'Z':
        case '[':
        case '\\':
        case ']':
        case '^':
        case '_':
        case 'a':
          v7 += 2 * (v7[_pcre2_OP_lengths_8[result] - 1] - 15 < 2) + _pcre2_OP_lengths_8[result];
          continue;
        case 'b':
        case 'c':
        case 'd':
        case 'e':
        case 'f':
        case 'g':
        case 'h':
        case 'i':
        case 'j':
        case 'k':
        case 'l':
        case 'm':
        case 'n':
        case 'o':
        case 'q':
        case 'r':
        case 's':
        case 't':
        case 'u':
          goto LABEL_27;
        case 'p':
          unsigned int v10 = *(unsigned __int16 *)(v7 + 1);
          goto LABEL_25;
        case 'v':
          uint64_t v11 = __rev16(*(unsigned __int16 *)(v7 + 3));
          *((void *)&v13 + 1) = __rev16(*(unsigned __int16 *)(v7 + 1));
          *(void *)&long long v14 = v11;
          DWORD2(v14) = v7[5];
          uint64_t v16 = 0;
          long long v15 = 0uLL;
          uint64_t result = a2(&v13, a3);
          if (result) {
            return result;
          }
          v7 += _pcre2_OP_lengths_8[*v7];
          continue;
        case 'w':
          uint64_t v12 = __rev16(*(unsigned __int16 *)(v7 + 3));
          *((void *)&v13 + 1) = __rev16(*(unsigned __int16 *)(v7 + 1));
          *(void *)&long long v14 = v12;
          DWORD2(v14) = 0;
          LODWORD(v12) = __rev16(*(unsigned __int16 *)(v7 + 5));
          *(void *)&long long v15 = __rev16(*(unsigned __int16 *)(v7 + 7));
          *((void *)&v15 + 1) = (v12 - 11);
          uint64_t v16 = v7 + 10;
          uint64_t result = a2(&v13, a3);
          if (result) {
            return result;
          }
          unsigned int v10 = *(unsigned __int16 *)(v7 + 5);
LABEL_25:
          v7 += __rev16(v10);
          continue;
        default:
          if ((result - 153) > 8 || ((1 << (result + 103)) & 0x155) == 0)
          {
            if (!*v7) {
              return result;
            }
LABEL_27:
            v7 += _pcre2_OP_lengths_8[result];
          }
          else
          {
            v7 += v7[1] + (unint64_t)_pcre2_OP_lengths_8[result];
          }
          break;
      }
    }
  }
  return 4294967264;
}

uint64_t _pcre2_strcmp_8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  do
  {
    unsigned int v2 = *a1;
    unsigned int v3 = *a2;
    if (!(v2 | v3)) {
      return 0;
    }
    ++a1;
    ++a2;
  }
  while (v2 == v3);
  if (v2 > v3) {
    return 1;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t _pcre2_strcmp_c8_8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  do
  {
    unsigned int v2 = *a1;
    unsigned int v3 = *a2;
    if (!(v2 | v3)) {
      return 0;
    }
    ++a1;
    ++a2;
  }
  while (v2 == v3);
  if (v2 > v3) {
    return 1;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t _pcre2_strncmp_8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  while (1)
  {
    unsigned int v3 = *a1;
    unsigned int v4 = *a2;
    if (v3 != v4) {
      break;
    }
    ++a2;
    ++a1;
    if (!--a3) {
      return 0;
    }
  }
  if (v3 > v4) {
    return 1;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t _pcre2_strncmp_c8_8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  while (1)
  {
    unsigned int v3 = *a1;
    unsigned int v4 = *a2;
    if (v3 != v4) {
      break;
    }
    ++a2;
    ++a1;
    if (!--a3) {
      return 0;
    }
  }
  if (v3 > v4) {
    return 1;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t _pcre2_strlen_8(unsigned char *a1)
{
  if (!*a1) {
    return 0;
  }
  uint64_t v1 = 0;
  unsigned int v2 = a1 + 1;
  do
    uint64_t result = v1 + 1;
  while (v2[v1++]);
  return result;
}

unsigned char *_pcre2_strcpy_c8_8(unsigned char *a1, unsigned char *a2)
{
  char v2 = *a2;
  unsigned int v3 = a1;
  if (*a2)
  {
    unsigned int v4 = a2 + 1;
    unsigned int v3 = a1;
    do
    {
      *v3++ = v2;
      int v5 = *v4++;
      char v2 = v5;
    }
    while (v5);
  }
  *unsigned int v3 = 0;
  return (unsigned char *)(v3 - a1);
}

BOOL _pcre2_xclass_8(int a1, unsigned char *a2)
{
  if (a1 <= 0xFF)
  {
    if ((*a2 & 4) == 0)
    {
      uint64_t v2 = *a2 & 1;
      if ((*a2 & 2) != 0) {
        return (a2[((unint64_t)a1 >> 3) + 1] >> (a1 & 7)) & 1;
      }
      return v2;
    }
    if (*a2 & 2) != 0 && ((a2[((unint64_t)a1 >> 3) + 1] >> (a1 & 7))) {
      return !(*a2 & 1);
    }
  }
  if ((*a2 & 2) != 0) {
    unsigned int v3 = a2 + 33;
  }
  else {
    unsigned int v3 = a2 + 1;
  }
  int v4 = a1 + 127;
  if (a1 >= 0) {
    int v4 = a1;
  }
  uint64_t v5 = (uint64_t)v4 >> 7;
  unsigned int v6 = a1 - (v4 & 0xFFFFFF80);
  unsigned int v7 = a1 - 8232;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = *v3;
        if (v8 != 1) {
          break;
        }
        unsigned int v10 = v3 + 2;
        unsigned int v11 = v3[1];
        if (v11 >= 0xC0)
        {
          if ((v11 & 0x20) != 0)
          {
            int v14 = *v10 & 0x3F;
            if ((v11 & 0x10) != 0)
            {
              if ((v11 & 8) != 0)
              {
                int v32 = v3[3] & 0x3F;
                int v33 = v3[4] & 0x3F;
                int v34 = v3[5] & 0x3F;
                if ((v11 & 4) != 0)
                {
                  unsigned int v11 = ((v11 & 1) << 30) | (v14 << 24) | (v32 << 18) | (v33 << 12) | (v34 << 6) | v3[6] & 0x3F;
                  unsigned int v10 = v3 + 7;
                }
                else
                {
                  unsigned int v11 = ((v11 & 3) << 24) | (v14 << 18) | (v32 << 12) | (v33 << 6) | v34;
                  unsigned int v10 = v3 + 6;
                }
              }
              else
              {
                unsigned int v11 = ((v11 & 7) << 18) | (v14 << 12) | ((v3[3] & 0x3F) << 6) | v3[4] & 0x3F;
                unsigned int v10 = v3 + 5;
              }
            }
            else
            {
              unsigned int v11 = ((v11 & 0xF) << 12) | (v14 << 6) | v3[3] & 0x3F;
              unsigned int v10 = v3 + 4;
            }
          }
          else
          {
            unsigned int v10 = v3 + 3;
            unsigned int v11 = v3[2] & 0x3F | ((v11 & 0x1F) << 6);
          }
        }
        unsigned int v3 = v10;
        if (v11 == a1) {
          return !(*a2 & 1);
        }
      }
      if (v8 != 2) {
        break;
      }
      uint64_t v12 = v3 + 2;
      unsigned int v13 = v3[1];
      if (v13 >= 0xC0)
      {
        if ((v13 & 0x20) != 0)
        {
          int v15 = *v12 & 0x3F;
          if ((v13 & 0x10) != 0)
          {
            if ((v13 & 8) != 0)
            {
              int v35 = v3[3] & 0x3F;
              int v36 = v3[4] & 0x3F;
              int v37 = v3[5] & 0x3F;
              if ((v13 & 4) != 0)
              {
                unsigned int v13 = ((v13 & 1) << 30) | (v15 << 24) | (v35 << 18) | (v36 << 12) | (v37 << 6) | v3[6] & 0x3F;
                uint64_t v12 = v3 + 7;
              }
              else
              {
                unsigned int v13 = ((v13 & 3) << 24) | (v15 << 18) | (v35 << 12) | (v36 << 6) | v37;
                uint64_t v12 = v3 + 6;
              }
            }
            else
            {
              unsigned int v13 = ((v13 & 7) << 18) | (v15 << 12) | ((v3[3] & 0x3F) << 6) | v3[4] & 0x3F;
              uint64_t v12 = v3 + 5;
            }
          }
          else
          {
            unsigned int v13 = ((v13 & 0xF) << 12) | (v15 << 6) | v3[3] & 0x3F;
            uint64_t v12 = v3 + 4;
          }
        }
        else
        {
          uint64_t v12 = v3 + 3;
          unsigned int v13 = v3[2] & 0x3F | ((v13 & 0x1F) << 6);
        }
      }
      unsigned int v3 = v12 + 1;
      unsigned int v38 = *v12;
      if (v38 >= 0xC0)
      {
        if ((v38 & 0x20) != 0)
        {
          int v39 = *v3 & 0x3F;
          if ((v38 & 0x10) != 0)
          {
            if ((v38 & 8) != 0)
            {
              int v40 = v12[2] & 0x3F;
              int v41 = v12[3] & 0x3F;
              int v42 = v12[4] & 0x3F;
              if ((v38 & 4) != 0)
              {
                unsigned int v38 = ((v38 & 1) << 30) | (v39 << 24) | (v40 << 18) | (v41 << 12) | (v42 << 6) | v12[5] & 0x3F;
                unsigned int v3 = v12 + 6;
              }
              else
              {
                unsigned int v38 = ((v38 & 3) << 24) | (v39 << 18) | (v40 << 12) | (v41 << 6) | v42;
                unsigned int v3 = v12 + 5;
              }
            }
            else
            {
              unsigned int v38 = ((v38 & 7) << 18) | (v39 << 12) | ((v12[2] & 0x3F) << 6) | v12[3] & 0x3F;
              unsigned int v3 = v12 + 4;
            }
          }
          else
          {
            unsigned int v38 = ((v38 & 0xF) << 12) | (v39 << 6) | v12[2] & 0x3F;
            unsigned int v3 = v12 + 3;
          }
        }
        else
        {
          unsigned int v3 = v12 + 2;
          unsigned int v38 = v12[1] & 0x3F | ((v38 & 0x1F) << 6);
        }
      }
      if (v13 <= a1 && v38 >= a1) {
        return !(*a2 & 1);
      }
    }
    if (!*v3) {
      return *a2 & 1;
    }
    uint64_t v2 = 0;
    int v9 = &_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]];
    switch(v3[1])
    {
      case 0u:
        goto LABEL_120;
      case 1u:
        unsigned int v16 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)] + 1];
        BOOL v17 = v16 > 9;
        int v18 = (1 << v16) & 0x320;
        if (!v17 && v18 != 0) {
          goto LABEL_120;
        }
        goto LABEL_72;
      case 2u:
        int v20 = v8 == 3;
        BOOL v21 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                      + 1]] == v3[2];
        goto LABEL_59;
      case 3u:
        int v20 = v8 == 3;
        int v22 = v3[2];
        int v23 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)] + 1];
        goto LABEL_47;
      case 4u:
        int v20 = v8 == 3;
        int v22 = v3[2];
        int v23 = *v9;
LABEL_47:
        BOOL v21 = v22 == v23;
        goto LABEL_59;
      case 5u:
        unint64_t v24 = v3[2];
        if (v24 == *v9) {
          goto LABEL_120;
        }
        BOOL v25 = v8 == 3;
        int v26 = *(_DWORD *)((char *)&_pcre2_ucd_script_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12
                                                                                          * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                                                          + 8] & 0x3FF]
                        + ((v24 >> 3) & 0x1C)) >> v24;
        goto LABEL_95;
      case 6u:
        if ((v8 == 3) == ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12
                                                                    * _pcre2_ucd_stage2_8[v6
                                                                                        + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                                    + 1]] & 0xFFFFFFFD) == 1))
          return !(*a2 & 1);
        goto LABEL_121;
      case 7u:
      case 8u:
        if (a1 < 0x2000)
        {
          if (a1 > 132)
          {
            if (a1 > 5759)
            {
              if (a1 == 5760 || a1 == 6158) {
                goto LABEL_120;
              }
            }
            else if (a1 == 133 || a1 == 160)
            {
              goto LABEL_120;
            }
          }
          else if (a1 <= 0x20 && ((1 << a1) & 0x100003E00) != 0)
          {
            goto LABEL_120;
          }
        }
        else if ((a1 - 0x2000) < 0xB {
               || v7 <= 0x37 && ((1 << v7) & 0x80000000000083) != 0
        }
               || a1 == 12288)
        {
LABEL_120:
          if (v8 == 3) {
            return !(*a2 & 1);
          }
          goto LABEL_121;
        }
        int v20 = v8 == 3;
        BOOL v21 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                      + 1]] == 6;
LABEL_59:
        int v27 = !v21;
LABEL_62:
        if (v20 != v27) {
          return !(*a2 & 1);
        }
LABEL_121:
        v3 += 3;
        break;
      case 9u:
        if ((_pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                      + 1]] | 2) == 3)
          goto LABEL_120;
        int v26 = v8 == 3;
        BOOL v25 = a1 == 95;
        goto LABEL_95;
      case 0xBu:
        if (a1 > 0x9F)
        {
          if (((a1 & 0xFFFFF800) == 55296) != (v8 == 3)) {
            return !(*a2 & 1);
          }
        }
        else
        {
          if ((a1 - 36) <= 0x3C && ((1 << (a1 - 36)) & 0x1000000010000001) != 0) {
            goto LABEL_120;
          }
LABEL_72:
          if (v8 != 3) {
            return !(*a2 & 1);
          }
        }
        goto LABEL_121;
      case 0xCu:
        int v20 = v8 == 3;
        BOOL v21 = v3[2] == *(unsigned __int16 *)&_pcre2_ucd_records_8[12
                                                                * _pcre2_ucd_stage2_8[v6
                                                                                    + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                                + 8] >> 11;
        goto LABEL_59;
      case 0xDu:
        int v20 = v8 == 3;
        int v27 = ((*(_DWORD *)((char *)&_pcre2_ucd_BOOLprop_sets_8[*(_WORD *)&_pcre2_ucd_records_8[12
                                                                                              * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                                                              + 10] & 0xFFF]
                          + ((v3[2] >> 3) & 0x1CLL)) >> v3[2]) & 1) == 0;
        goto LABEL_62;
      case 0xEu:
        int v28 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                      + 1]];
        if (v28 == 6) {
          goto LABEL_72;
        }
        if (v28) {
          goto LABEL_120;
        }
        if (_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)] + 1] == 1
          && a1 != 1564
          && a1 != 6158)
        {
          goto LABEL_94;
        }
        goto LABEL_72;
      case 0xFu:
        uint64_t v29 = _pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)] + 1];
        if ((v29 - 27) < 2) {
          goto LABEL_72;
        }
        if (_pcre2_ucp_gentype_8[v29]) {
          goto LABEL_120;
        }
        if (a1 == 1564 || v29 != 1) {
          goto LABEL_72;
        }
LABEL_94:
        int v26 = v8 == 3;
        BOOL v25 = (a1 - 8298) < 0xFFFFFFFC;
LABEL_95:
        if (((v25 ^ v26) & 1) == 0) {
          return !(*a2 & 1);
        }
        goto LABEL_121;
      case 0x10u:
        int v30 = _pcre2_ucp_gentype_8[_pcre2_ucd_records_8[12 * _pcre2_ucd_stage2_8[v6 + (_pcre2_ucd_stage1_8[v5] << 7)]
                                                      + 1]];
        if (v30 == 4) {
          goto LABEL_120;
        }
        BOOL v25 = v8 == 3;
        int v26 = a1 < 0x80 && v30 == 5;
        goto LABEL_95;
      default:
        return v2;
    }
  }
}

void sub_1A688C1D8(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_1A66D3000, a2, OS_LOG_TYPE_ERROR, "Could not make regex %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1A688C260()
{
  sub_1A66E7784();
  sub_1A66E7768(&dword_1A66D3000, v0, v1, "TTSAQ: schedule while stopped", v2, v3, v4, v5, v6);
}

void sub_1A688C294()
{
  sub_1A66E7784();
  sub_1A66E7768(&dword_1A66D3000, v0, v1, "TTSAQ: detected queue invalidation, rebuilding queue.", v2, v3, v4, v5, v6);
}

void sub_1A688C2C8(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl(&dword_1A66D3000, log, OS_LOG_TYPE_ERROR, "TTSAQ: Failed to enqueue buffer: %@", buf, 0xCu);
}

void sub_1A688C320(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_numberWithInt_(NSNumber, a2, a1, a4, a5);
  sub_1A66E773C();
  sub_1A66E7748(&dword_1A66D3000, v6, v7, "TTSAQ: detected queue invalidation during allocate, rebuilding. aqErr: %@", v8, v9, v10, v11, v12);
}

void sub_1A688C3B4()
{
  sub_1A66E7784();
  sub_1A66E7768(&dword_1A66D3000, v0, v1, "TTSAQ: Calling stop", v2, v3, v4, v5, v6);
}

void sub_1A688C3E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = NSNumber;
  uint64_t v6 = objc_msgSend_aqRef(*(void **)(a1 + 32), a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_numberWithLong_(v5, v7, v6, v8, v9);
  sub_1A66E773C();
  sub_1A66E771C(&dword_1A66D3000, v11, v12, "TTSAQ: Calling reset on %@ to silence queue output.", v13, v14, v15, v16, v17);
}

void sub_1A688C484(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl(&dword_1A66D3000, log, OS_LOG_TYPE_DEBUG, "TTSAQ: timed out, stopping after %@s of silence.", buf, 0xCu);
}

void sub_1A688C4DC(uint8_t *a1, const char *a2, void *a3, NSObject *a4, uint64_t a5)
{
  uint64_t v8 = objc_msgSend_numberWithInteger_(NSNumber, a2, (uint64_t)a2, (uint64_t)a4, a5);
  *(_DWORD *)a1 = 138412290;
  *a3 = v8;
  _os_log_error_impl(&dword_1A66D3000, a4, OS_LOG_TYPE_ERROR, "TTSAQ: Failed to start on attempt %@", a1, 0xCu);
}

void sub_1A688C55C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = NSNumber;
  uint64_t v6 = objc_msgSend_aqRef(a1, a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_numberWithLong_(v5, v7, v6, v8, v9);
  sub_1A66E773C();
  sub_1A66E771C(&dword_1A66D3000, v11, v12, "TTSAQ: Calling dispose on %@", v13, v14, v15, v16, v17);
}

void sub_1A688C5F8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_numberWithLong_(NSNumber, a2, a1, a4, a5);
  sub_1A66E773C();
  sub_1A66E771C(&dword_1A66D3000, v6, v7, "TTSAQ: Audio Queue %@ stopped", v8, v9, v10, v11, v12);
}

void sub_1A688C688(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_numberWithLong_(NSNumber, a2, a1, a4, a5);
  sub_1A66E773C();
  sub_1A66E771C(&dword_1A66D3000, v6, v7, "TTSAQ: Audio Queue %@ started", v8, v9, v10, v11, v12);
}

void sub_1A688C718(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = NSNumber;
  uint64_t v6 = objc_msgSend_aqRef(a1, a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_numberWithLong_(v5, v7, v6, v8, v9);
  sub_1A66E773C();
  sub_1A66E771C(&dword_1A66D3000, v11, v12, "TTSAQ: New AQ: %@", v13, v14, v15, v16, v17);
}

void sub_1A688C7B0()
{
  sub_1A66E7784();
  _os_log_error_impl(&dword_1A66D3000, v0, OS_LOG_TYPE_ERROR, "TTSAQ: attempted to configure nil audio format for output.", v1, 2u);
}

void sub_1A688C7F0(int a1, NSObject *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v2 = 136315394;
  uint64_t v3 = "-[TTSWrappedAudioQueue _selectChannels:]";
  __int16 v4 = 1024;
  int v5 = a1;
  _os_log_error_impl(&dword_1A66D3000, a2, OS_LOG_TYPE_ERROR, "TTSAQ: %s: error %d adding kAudioQueueProperty_ChannelAssignments \n", (uint8_t *)&v2, 0x12u);
}

void sub_1A688C87C(uint64_t a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, a2, a1, a4, a5);
  sub_1A66E773C();
  __int16 v9 = 2112;
  uint64_t v10 = v7;
  _os_log_error_impl(&dword_1A66D3000, a3, OS_LOG_TYPE_ERROR, "TTSAQ: Channels per frame and channel count did not match: %@ %@", v8, 0x16u);
}

void sub_1A688C938(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = objc_msgSend_numberWithInt_(NSNumber, a2, a1, a4, a5);
  sub_1A66E773C();
  sub_1A66E7748(&dword_1A66D3000, v6, v7, "TTSAQ: Could not initialize AUDSPGraph with error: %@", v8, v9, v10, v11, v12);
}

void sub_1A688C9C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = objc_msgSend_numberWithInt_(NSNumber, a2, a1, a4, a5);
  sub_1A66E773C();
  sub_1A66E7748(&dword_1A66D3000, v6, v7, "TTSAQ: Could not configure AUDSPGraph with error: %@", v8, v9, v10, v11, v12);
}

void sub_1A688CA58()
{
  *(_WORD *)os_log_t v0 = 0;
  _os_log_error_impl(&dword_1A66D3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "AUBuffer throwing bad_alloc", v0, 2u);
}

void sub_1A688CAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1A688CB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1A688CB90(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = objc_msgSend_error(a1, a2, a3, a4, a5);
  uint64_t v11 = objc_msgSend_error(v6, v7, v8, v9, v10);
  int v12 = 138412290;
  uint64_t v13 = v11;
  _os_log_error_impl(&dword_1A66D3000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "Could not parse SSML: %@", (uint8_t *)&v12, 0xCu);
}

void sub_1A688CC40(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl(&dword_1A66D3000, a2, OS_LOG_TYPE_DEBUG, "Transformed to SSML: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1A688CCB8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = objc_msgSend_error(a1, a2, a3, a4, a5);
  int v12 = objc_msgSend_location(a1, v8, v9, v10, v11);
  uint8_t v17 = objc_msgSend_hint(a1, v13, v14, v15, v16);
  int v18 = 138412802;
  int v19 = v7;
  __int16 v20 = 2112;
  BOOL v21 = v12;
  __int16 v22 = 2112;
  int v23 = v17;
  _os_log_error_impl(&dword_1A66D3000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "SSML was invalid! %@, Location: %@, Hint: %@", (uint8_t *)&v18, 0x20u);
}

void sub_1A688CD98(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl(&dword_1A66D3000, log, OS_LOG_TYPE_FAULT, "Attempting to use SSML initialization but framework isn't available", v1, 2u);
}

void sub_1A688CDDC()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  sub_1A66E773C();
  _os_log_debug_impl(&dword_1A66D3000, v0, OS_LOG_TYPE_DEBUG, "Unable to find updated identifier for nil legacy identifier using language code: %@", v1, 0xCu);
}

void sub_1A688CE50()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  sub_1A66E773C();
  _os_log_debug_impl(&dword_1A66D3000, v0, OS_LOG_TYPE_DEBUG, "Voices left to migrate: %@", v1, 0xCu);
}

void sub_1A688CEC4()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  sub_1A66E773C();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_fault_impl(&dword_1A66D3000, v1, OS_LOG_TYPE_FAULT, "Unable to complete migration for resource: %@, remaining voices to migrate: %@", v2, 0x16u);
}

void sub_1A688CF48()
{
  sub_1A66E773C();
  sub_1A66EB73C(&dword_1A66D3000, v0, v1, "Error writing migration complete flag to preferences: %@", v2, v3, v4, v5, v6);
}

void sub_1A688CFB0()
{
  sub_1A66E773C();
  sub_1A66EB73C(&dword_1A66D3000, v0, v1, "Error unarchiving flag for completed migration: %@", v2, v3, v4, v5, v6);
}

void sub_1A688D018()
{
  sub_1A66E773C();
  sub_1A66EB73C(&dword_1A66D3000, v0, v1, "Error writing voices to migrate to preferences: %@", v2, v3, v4, v5, v6);
}

void sub_1A688D080(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl(&dword_1A66D3000, log, OS_LOG_TYPE_ERROR, "Error, process other than axassetsd tried to write migration voice list to preferences", v1, 2u);
}

void sub_1A688D0C4()
{
  sub_1A66E773C();
  sub_1A66EB73C(&dword_1A66D3000, v0, v1, "Error unarchiving voices to migrate: %@", v2, v3, v4, v5, v6);
}

void sub_1A688D12C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint8_t v6 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_stringWithUTF8String_(NSString, v7, (uint64_t)"void *AssistantServicesLibrary(void)", v8, v9);
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v6, v11, (uint64_t)v10, @"TTSAXResourceMigrationUtilities.m", 22, @"%s", *a1);

  __break(1u);
}

void sub_1A688D1AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v9 = objc_msgSend_stringWithUTF8String_(NSString, v6, (uint64_t)"Class getAFLocalizationClass(void)_block_invoke", v7, v8);
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v5, v10, (uint64_t)v9, @"TTSAXResourceMigrationUtilities.m", 23, @"Unable to find class %s", "AFLocalization");

  __break(1u);
}

void sub_1A688D228()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  sub_1A66E773C();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_debug_impl(&dword_1A66D3000, v1, OS_LOG_TYPE_DEBUG, "Found installed voice resources for %@: %@", v2, 0x16u);
}

void sub_1A688D2AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_numberWithLong_(NSNumber, a2, a1, a4, a5);
  sub_1A66E773C();
  sub_1A66E7748(&dword_1A66D3000, v6, v7, "Wrong voice type passed in %@", v8, v9, v10, v11, v12);
}

void sub_1A688D33C()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  sub_1A66E773C();
  _os_log_fault_impl(&dword_1A66D3000, v0, OS_LOG_TYPE_FAULT, "Malformed Siri Asset %@", v1, 0xCu);
}

void sub_1A688D3B0()
{
  __assert_rtn("populateParameterInfoTable", "SpeechEnhancerParametersV2.h", 187, "paramInfo.size() == kNumberOfParams");
}

void sub_1A688D3DC()
{
  __assert_rtn("setParameterLight", "SpeechEnhancerCoreV2.h", 191, "index >= 0 && index < mParameterInfoTable.size()");
}

void sub_1A688D408()
{
  __assert_rtn("GetParameterList", "AUSpeechEnhancerV2.cpp", 326, "outNumParameters == mParameterInfoTable.size()");
}

void sub_1A688D434()
{
  __assert_rtn("parameterValue", "SpeechEnhancerCoreV2.h", 317, "index >= 0 && index < mParameterInfoTable.size()");
}

void sub_1A688D460()
{
  __assert_rtn("process", "SpeechEnhancerCoreV2.h", 330, "isFrequencyDomain ? (input[0].size() >= 2 * numFrames) : (input[0].size() >= numFrames)");
}

void sub_1A688D48C()
{
}

void sub_1A688D4B8()
{
  __assert_rtn("process", "SpeechEnhancerCoreV2.h", 329, "numFrames == mBlockSize");
}

void sub_1A688D4E4()
{
  __assert_rtn("process", "SpeechEnhancerCoreV2.h", 328, "output.size() == mNumInputChannels");
}

void sub_1A688D510()
{
  __assert_rtn("process", "SpeechEnhancerCoreV2.h", 327, "input.size() == mNumInputChannels");
}

void sub_1A688D53C()
{
  __assert_rtn("getParameter", "SpeechEnhancerCoreV2.h", 305, "index >= 0 && index < mParameterInfoTable.size()");
}

void sub_1A688D568()
{
  uint64_t v1 = *MEMORY[0x1E4F143B8];
  v0[0] = 67109120;
  v0[1] = -10877;
  _os_log_error_impl(&dword_1A66D3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "throwing %d", (uint8_t *)v0, 8u);
}

void sub_1A688D5EC()
{
  uint64_t v1 = *MEMORY[0x1E4F143B8];
  v0[0] = 67109120;
  v0[1] = -1;
  _os_log_error_impl(&dword_1A66D3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "throwing %d", (uint8_t *)v0, 8u);
}

void sub_1A688D670()
{
  __assert_rtn("process", "SPLMeter.h", 98, "a.size() == mWeightCurve.size()");
}

void sub_1A688D69C()
{
  __assert_rtn("getTabulatedSpeechSpectrum", "SpeechEnhancerCoreV2.h", 929, "mTmpVector1.size() >= kByrneSpectraSamples.size()");
}

void sub_1A688D6C8()
{
  __assert_rtn("getTabulatedSpeechSpectrum", "SpeechEnhancerCoreV2.h", 928, "kByrneCenterFrequency.size() == kByrneSpectraSamples.size()");
}

void sub_1A688D6F4(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = objc_msgSend_name(a1, a2, a3, a4, a5);
  uint8_t v12 = objc_msgSend_identifier(a1, v8, v9, v10, v11);
  uint8_t v17 = objc_msgSend_primaryLanguages(a1, v13, v14, v15, v16);
  int v18 = 138412802;
  int v19 = v7;
  __int16 v20 = 2112;
  BOOL v21 = v12;
  __int16 v22 = 2112;
  int v23 = v17;
  _os_log_error_impl(&dword_1A66D3000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "Malformed SSE voice (name: %@, identifier: %@, languages: %@)", (uint8_t *)&v18, 0x20u);
}

void sub_1A688D7D4(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_1A66D3000, a2, OS_LOG_TYPE_ERROR, "Unable to find primary language for %@", (uint8_t *)&v2, 0xCu);
}

void sub_1A688D84C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v9 = objc_msgSend_stringWithUTF8String_(NSString, v6, (uint64_t)"NSString *softAXLocalizedString(NSString *__strong)", v7, v8);
  uint64_t v10 = dlerror();
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v5, v11, (uint64_t)v9, @"TTSAXResource.m", 20, @"%s", v10);

  __break(1u);
}

void sub_1A688D8C4(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_stringWithUTF8String_(NSString, v7, (uint64_t)"void *AccessibilityUtilitiesLibrary(void)", v8, v9);
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v6, v11, (uint64_t)v10, @"TTSAXResource.m", 19, @"%s", *a1);

  __break(1u);
}

void sub_1A688D944(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v9 = objc_msgSend_stringWithUTF8String_(NSString, v6, (uint64_t)"NSString *getAXSpeechSourceKeySpeechFeatures(void)", v7, v8);
  uint64_t v10 = dlerror();
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v5, v11, (uint64_t)v9, @"AVSpeechSynthesisVoice.m", 19, @"%s", v10);

  __break(1u);
}

void sub_1A688D9BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v9 = objc_msgSend_stringWithUTF8String_(NSString, v6, (uint64_t)"BOOL get_AXIsInternalInstall(void)", v7, v8);
  uint64_t v10 = dlerror();
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v5, v11, (uint64_t)v9, @"AVSpeechSynthesisVoice.m", 22, @"%s", v10);

  __break(1u);
}

void sub_1A688DA34(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = objc_msgSend_identifier(a1, a2, a3, a4, a5);
  int v7 = 138412290;
  uint64_t v8 = v6;
  _os_log_error_impl(&dword_1A66D3000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "Could not find any name for this voice: %@", (uint8_t *)&v7, 0xCu);
}

void sub_1A688DACC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v9 = objc_msgSend_stringWithUTF8String_(NSString, v6, (uint64_t)"Class getAXSettingsClass(void)_block_invoke", v7, v8);
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v5, v10, (uint64_t)v9, @"AVSpeechSynthesisVoice.m", 18, @"Unable to find class %s", "AXSettings");

  __break(1u);
}

void sub_1A688DB48(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], a2, a3, a4, a5);
  uint64_t v10 = objc_msgSend_stringWithUTF8String_(NSString, v7, (uint64_t)"void *AccessibilityUtilitiesLibrary(void)", v8, v9);
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v6, v11, (uint64_t)v10, @"AVSpeechSynthesisVoice.m", 17, @"%s", *a1);

  __break(1u);
}

void sub_1A688DBC8(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  v4[0] = 67109378;
  v4[1] = v3;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl(&dword_1A66D3000, log, OS_LOG_TYPE_ERROR, "PCRE2 compilation failed at offset %d: %@", (uint8_t *)v4, 0x12u);
}

void sub_1A688DC54(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = objc_msgSend_numberWithInt_(NSNumber, a2, a1, a4, a5);
  int v7 = 138412290;
  uint64_t v8 = v6;
  _os_log_error_impl(&dword_1A66D3000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "Encountered unexpected PCRE match error %@", (uint8_t *)&v7, 0xCu);
}

void sub_1A688DCF8(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5 = objc_msgSend_zipPath(a1, a2, a3, a4, a5);
  sub_1A66E773C();
  sub_1A66E7748(&dword_1A66D3000, v6, v7, "Path name was nil while unzipping: %@", v8, v9, v10, v11, v12);
}

void sub_1A688DD7C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_msgSend_zipPath(a1, a2, a3, a4, a5);
  id v5 = objc_claimAutoreleasedReturnValue();
  objc_msgSend_fileSystemRepresentation(v5, v6, v7, v8, v9);
  sub_1A66E773C();
  sub_1A66E7748(&dword_1A66D3000, v10, v11, "TTSStreamingZipReader: Decompression failed. Could not open source: %s", v12, v13, v14, v15, v16);
}