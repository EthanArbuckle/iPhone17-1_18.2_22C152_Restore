uint64_t sub_2560E71C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v29;
  int v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  char v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  void **v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;

  v3 = a1[1];
  result = sub_2561787D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_149;
    }
    if (v3) {
      return sub_2560E7CA0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    v5 = v3;
  }
  else {
    v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_157;
  }
  v130 = result;
  v135 = v3;
  v127 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x263F8EE78];
    v143 = MEMORY[0x263F8EE78];
    v138 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_115:
      if (v12 >= 2)
      {
        v121 = *v127;
        do
        {
          v122 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_144;
          }
          if (!v121) {
            goto LABEL_156;
          }
          v123 = *(void *)&v8[16 * v122 + 32];
          v124 = *(void *)&v8[16 * v12 + 24];
          sub_2560E820C((void **)(v121 + 8 * v123), (id *)(v121 + 8 * *(void *)&v8[16 * v12 + 16]), (id *)(v121 + 8 * v124), v138);
          if (v1) {
            break;
          }
          if (v124 < v123) {
            goto LABEL_145;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v8 = sub_256152458((uint64_t)v8);
          }
          if (v122 >= *((void *)v8 + 2)) {
            goto LABEL_146;
          }
          v125 = &v8[16 * v122 + 32];
          *(void *)v125 = v123;
          *((void *)v125 + 1) = v124;
          v126 = *((void *)v8 + 2);
          if (v12 > v126) {
            goto LABEL_147;
          }
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v126 - v12));
          *((void *)v8 + 2) = v126 - 1;
          v12 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_126:
      swift_bridgeObjectRelease();
      *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_256178018();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
    v7 = sub_256178048();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v138 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v143 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v128 = *a1 + 16;
  v129 = *a1 - 8;
  v8 = (char *)MEMORY[0x263F8EE78];
  v11 = v135;
  v139 = *a1;
  while (2)
  {
    v13 = v9;
    v14 = v9 + 1;
    v134 = v9;
    if (v9 + 1 >= v11) {
      goto LABEL_45;
    }
    v131 = v8;
    v15 = *(void **)(v10 + 8 * v9);
    v16 = *(id *)(v10 + 8 * v14);
    v17 = v15;
    v18 = objc_msgSend(v16, sel_localization);
    v19 = objc_msgSend(v18, sel_displayName);

    v20 = sub_256177EE8();
    v22 = v21;

    v23 = objc_msgSend(v17, sel_localization);
    v24 = objc_msgSend(v23, sel_displayName);

    v25 = sub_256177EE8();
    v27 = v26;

    if (v20 == v25 && v22 == v27) {
      v136 = 0;
    }
    else {
      v136 = sub_256178828();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v13 = v134;
    v14 = v134 + 2;
    if (v134 + 2 >= v135) {
      goto LABEL_36;
    }
    v29 = (id *)(v128 + 8 * v134);
    while (1)
    {
      v140 = v14;
      v31 = *(v29 - 1);
      v32 = *v29;
      v33 = v31;
      v34 = objc_msgSend(v32, sel_localization);
      v35 = objc_msgSend(v34, sel_displayName);

      v36 = sub_256177EE8();
      v38 = v37;

      v39 = objc_msgSend(v33, sel_localization);
      v40 = objc_msgSend(v39, sel_displayName);

      v41 = sub_256177EE8();
      v43 = v42;

      if (v36 == v41 && v38 == v43)
      {

        swift_bridgeObjectRelease_n();
        if (v136)
        {
          v8 = v131;
          v10 = v139;
          v14 = v140;
          v13 = v134;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v30 = sub_256178828();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v136 ^ v30)) {
        break;
      }
LABEL_25:
      v14 = v140 + 1;
      ++v29;
      if (v135 == v140 + 1)
      {
        v14 = v135;
        goto LABEL_35;
      }
    }
    v14 = v140;
LABEL_35:
    v13 = v134;
LABEL_36:
    v8 = v131;
    v10 = v139;
    if (v136)
    {
LABEL_37:
      if (v14 < v13) {
        goto LABEL_150;
      }
      if (v13 < v14)
      {
        v45 = (uint64_t *)(v129 + 8 * v14);
        v46 = v14;
        v47 = v13;
        v48 = (uint64_t *)(v10 + 8 * v13);
        do
        {
          if (v47 != --v46)
          {
            if (!v10) {
              goto LABEL_155;
            }
            v49 = *v48;
            *v48 = *v45;
            *v45 = v49;
          }
          ++v47;
          --v45;
          ++v48;
        }
        while (v47 < v46);
      }
    }
LABEL_45:
    if (v14 >= v135) {
      goto LABEL_67;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_148;
    }
    if (v14 - v13 >= v130)
    {
LABEL_67:
      if (v14 < v13) {
        goto LABEL_143;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v8 = sub_2561522A0(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      v73 = *((void *)v8 + 2);
      v72 = *((void *)v8 + 3);
      v12 = v73 + 1;
      v142 = v14;
      if (v73 >= v72 >> 1) {
        v8 = sub_2561522A0((char *)(v72 > 1), v73 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v12;
      v74 = v8 + 32;
      v75 = &v8[16 * v73 + 32];
      *(void *)v75 = v13;
      *((void *)v75 + 1) = v142;
      if (!v73)
      {
        v12 = 1;
LABEL_14:
        v11 = v135;
        v9 = v142;
        if (v142 >= v135) {
          goto LABEL_115;
        }
        continue;
      }
      while (1)
      {
        v76 = v12 - 1;
        if (v12 >= 4)
        {
          v81 = &v74[16 * v12];
          v82 = *((void *)v81 - 8);
          v83 = *((void *)v81 - 7);
          v87 = __OFSUB__(v83, v82);
          v84 = v83 - v82;
          if (v87) {
            goto LABEL_132;
          }
          v86 = *((void *)v81 - 6);
          v85 = *((void *)v81 - 5);
          v87 = __OFSUB__(v85, v86);
          v79 = v85 - v86;
          v80 = v87;
          if (v87) {
            goto LABEL_133;
          }
          v88 = v12 - 2;
          v89 = &v74[16 * v12 - 32];
          v91 = *(void *)v89;
          v90 = *((void *)v89 + 1);
          v87 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          if (v87) {
            goto LABEL_135;
          }
          v87 = __OFADD__(v79, v92);
          v93 = v79 + v92;
          if (v87) {
            goto LABEL_138;
          }
          if (v93 >= v84)
          {
            v111 = &v74[16 * v76];
            v113 = *(void *)v111;
            v112 = *((void *)v111 + 1);
            v87 = __OFSUB__(v112, v113);
            v114 = v112 - v113;
            if (v87) {
              goto LABEL_142;
            }
            v104 = v79 < v114;
            goto LABEL_104;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v105 = *((void *)v8 + 4);
            v106 = *((void *)v8 + 5);
            v87 = __OFSUB__(v106, v105);
            v98 = v106 - v105;
            v99 = v87;
            goto LABEL_98;
          }
          v78 = *((void *)v8 + 4);
          v77 = *((void *)v8 + 5);
          v87 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          v80 = v87;
        }
        if (v80) {
          goto LABEL_134;
        }
        v88 = v12 - 2;
        v94 = &v74[16 * v12 - 32];
        v96 = *(void *)v94;
        v95 = *((void *)v94 + 1);
        v97 = __OFSUB__(v95, v96);
        v98 = v95 - v96;
        v99 = v97;
        if (v97) {
          goto LABEL_137;
        }
        v100 = &v74[16 * v76];
        v102 = *(void *)v100;
        v101 = *((void *)v100 + 1);
        v87 = __OFSUB__(v101, v102);
        v103 = v101 - v102;
        if (v87) {
          goto LABEL_140;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_141;
        }
        if (v98 + v103 >= v79)
        {
          v104 = v79 < v103;
LABEL_104:
          if (v104) {
            v76 = v88;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v99) {
          goto LABEL_136;
        }
        v107 = &v74[16 * v76];
        v109 = *(void *)v107;
        v108 = *((void *)v107 + 1);
        v87 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v87) {
          goto LABEL_139;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_106:
        v115 = v76 - 1;
        if (v76 - 1 >= v12)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!v10) {
          goto LABEL_154;
        }
        v116 = &v74[16 * v115];
        v117 = *(void *)v116;
        v118 = &v74[16 * v76];
        v119 = *((void *)v118 + 1);
        sub_2560E820C((void **)(v10 + 8 * *(void *)v116), (id *)(v10 + 8 * *(void *)v118), (id *)(v10 + 8 * v119), v138);
        if (v1) {
          goto LABEL_126;
        }
        if (v119 < v117) {
          goto LABEL_129;
        }
        if (v76 > *((void *)v8 + 2)) {
          goto LABEL_130;
        }
        *(void *)v116 = v117;
        *(void *)&v74[16 * v115 + 8] = v119;
        v120 = *((void *)v8 + 2);
        if (v76 >= v120) {
          goto LABEL_131;
        }
        v12 = v120 - 1;
        memmove(&v74[16 * v76], v118 + 16, 16 * (v120 - 1 - v76));
        *((void *)v8 + 2) = v120 - 1;
        if (v120 <= 2) {
          goto LABEL_14;
        }
      }
    }
    break;
  }
  if (__OFADD__(v13, v130)) {
    goto LABEL_151;
  }
  v50 = v135;
  if (v13 + v130 < v135) {
    v50 = v13 + v130;
  }
  if (v50 >= v13)
  {
    if (v14 != v50)
    {
      v132 = v8;
      v133 = v50;
      v51 = v129 + 8 * v14;
      do
      {
        v53 = *(void **)(v10 + 8 * v14);
        v54 = v13;
        v137 = v51;
        v55 = v51;
        v141 = v14;
        while (1)
        {
          v56 = *(void **)v55;
          v57 = v53;
          v58 = v56;
          v59 = objc_msgSend(v57, sel_localization);
          v60 = objc_msgSend(v59, sel_displayName);

          v61 = sub_256177EE8();
          v63 = v62;

          v64 = objc_msgSend(v58, sel_localization);
          v65 = objc_msgSend(v64, sel_displayName);

          v66 = sub_256177EE8();
          v68 = v67;

          if (v61 == v66 && v63 == v68)
          {

            swift_bridgeObjectRelease_n();
            v10 = v139;
            v52 = v141;
            goto LABEL_55;
          }
          v70 = sub_256178828();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v139;
          if ((v70 & 1) == 0) {
            break;
          }
          v52 = v141;
          if (!v139) {
            goto LABEL_153;
          }
          v71 = *(void **)v55;
          v53 = *(void **)(v55 + 8);
          *(void *)v55 = v53;
          *(void *)(v55 + 8) = v71;
          v55 -= 8;
          if (v141 == ++v54) {
            goto LABEL_55;
          }
        }
        v52 = v141;
LABEL_55:
        v14 = v52 + 1;
        v51 = v137 + 8;
        v13 = v134;
      }
      while (v14 != v133);
      v14 = v133;
      v8 = v132;
    }
    goto LABEL_67;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  result = sub_256178648();
  __break(1u);
  return result;
}

uint64_t sub_2560E7B64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v20 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    v6 = (uint64_t *)(*a4 + 8 * a3 - 8);
LABEL_6:
    uint64_t v7 = v20;
    v21 = v6;
    while (1)
    {
      id v8 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v9 = sub_256177EE8();
      uint64_t v11 = v10;

      id v12 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v13 = sub_256177EE8();
      uint64_t v15 = v14;

      if (v9 == v13 && v11 == v15)
      {
        result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v6 = v21 + 1;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v17 = sub_256178828();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t v18 = *v6;
      result = v6[1];
      uint64_t *v6 = result;
      v6[1] = v18;
      --v6;
      if (v4 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2560E7CA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = result;
  if (a3 != a2)
  {
    uint64_t v27 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v27 + 8 * a3);
    uint64_t v7 = v25;
    uint64_t v26 = v4;
    uint64_t v28 = a3;
    while (1)
    {
      id v8 = *(void **)v4;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_localization);
      id v12 = objc_msgSend(v11, sel_displayName);

      uint64_t v13 = sub_256177EE8();
      uint64_t v15 = v14;

      id v16 = objc_msgSend(v10, sel_localization);
      id v17 = objc_msgSend(v16, sel_displayName);

      uint64_t v18 = sub_256177EE8();
      uint64_t v20 = v19;

      if (v13 == v18 && v15 == v20)
      {

        result = swift_bridgeObjectRelease_n();
        uint64_t v5 = v28;
LABEL_5:
        a3 = v5 + 1;
        uint64_t v4 = v26 + 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v22 = sub_256178828();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      uint64_t v5 = v28;
      if ((v22 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v27) {
        break;
      }
      v23 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v6;
      *(void *)(v4 + 8) = v23;
      v4 -= 8;
      if (v28 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2560E7E64(char *a1, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = __src;
  uint64_t v5 = __src - a1;
  uint64_t v6 = __src - a1 + 7;
  if (__src - a1 >= 0) {
    uint64_t v6 = __src - a1;
  }
  uint64_t v7 = v6 >> 3;
  uint64_t v8 = a3 - (void)__src;
  uint64_t v9 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v9 = a3 - (void)__src;
  }
  uint64_t v10 = v9 >> 3;
  v47 = a1;
  v46 = a4;
  if (v7 >= v9 >> 3)
  {
    if (v8 < -7) {
      goto LABEL_54;
    }
    if (a4 != __src || &__src[8 * v10] <= a4) {
      memmove(a4, __src, 8 * v10);
    }
    uint64_t v26 = &a4[8 * v10];
    v45 = v26;
    v47 = v4;
    if (a1 >= v4 || v8 < 8)
    {
LABEL_53:
      sub_256152398(&v47, &v46, &v45);
      return 1;
    }
    uint64_t v27 = (char *)(a3 - 8);
    uint64_t v28 = v4;
    while (1)
    {
      v42 = v27 + 8;
      v44 = v4;
      v28 -= 8;
      id v29 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v30 = sub_256177EE8();
      uint64_t v32 = v31;

      id v33 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v34 = sub_256177EE8();
      uint64_t v36 = v35;

      if (v30 == v34 && v32 == v36) {
        break;
      }
      char v38 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0) {
        goto LABEL_46;
      }
      if (v42 != v44 || v27 >= v44) {
        *(void *)uint64_t v27 = *(void *)v28;
      }
      v47 = v28;
LABEL_51:
      if (v28 > a1)
      {
        v27 -= 8;
        uint64_t v4 = v28;
        if (v26 > a4) {
          continue;
        }
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    v45 = v26 - 8;
    uint64_t v28 = v44;
    if (v42 < v26 || v27 >= v26 || v42 != v26) {
      *(void *)uint64_t v27 = *((void *)v26 - 1);
    }
    v26 -= 8;
    goto LABEL_51;
  }
  if (v5 >= -7)
  {
    if (a4 != a1 || &a1[8 * v7] <= a4) {
      memmove(a4, a1, 8 * v7);
    }
    id v11 = &a4[8 * v7];
    v45 = v11;
    if ((unint64_t)v4 < a3 && v5 >= 8)
    {
      id v12 = a4;
      uint64_t v13 = a1;
      while (1)
      {
        uint64_t v14 = v4;
        id v15 = (id)HKUILocalizedStringForStateOfMindDomain();
        uint64_t v16 = sub_256177EE8();
        uint64_t v18 = v17;

        id v19 = (id)HKUILocalizedStringForStateOfMindDomain();
        uint64_t v20 = sub_256177EE8();
        uint64_t v22 = v21;

        if (v16 == v20 && v18 == v22) {
          break;
        }
        char v24 = sub_256178828();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v25 = v14 + 8;
        if (v13 < v14 || v13 >= v25 || v13 != v14) {
          *(void *)uint64_t v13 = *(void *)v14;
        }
LABEL_26:
        v13 += 8;
        if (v12 < v11)
        {
          uint64_t v4 = v25;
          if ((unint64_t)v25 < a3) {
            continue;
          }
        }
        v47 = v13;
        goto LABEL_53;
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      if (v13 != v12) {
        *(void *)uint64_t v13 = *(void *)v12;
      }
      v12 += 8;
      v46 = v12;
      uint64_t v25 = v14;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_2560E820C(void **__src, id *a2, id *a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  v66 = __src;
  v65 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    v54 = v4;
    uint64_t v32 = &v4[v13];
    v64 = v32;
    v66 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_256152398(&v66, &v65, &v64);
      return 1;
    }
    id v33 = v6;
    v59 = v7;
    while (1)
    {
      v61 = v5;
      v63 = v6;
      v57 = v32;
      uint64_t v35 = *--v32;
      uint64_t v34 = v35;
      uint64_t v36 = *--v33;
      id v37 = v34;
      id v38 = v36;
      v55 = v37;
      id v39 = objc_msgSend(v37, sel_localization);
      id v40 = objc_msgSend(v39, sel_displayName);

      uint64_t v41 = sub_256177EE8();
      uint64_t v43 = v42;

      id v44 = objc_msgSend(v38, sel_localization);
      id v45 = objc_msgSend(v44, sel_displayName);

      uint64_t v46 = sub_256177EE8();
      uint64_t v48 = v47;

      if (v41 == v46 && v43 == v48) {
        break;
      }
      char v50 = sub_256178828();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v51 = v61;
      uint64_t v5 = v61 - 1;
      if ((v50 & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v32 = v57;
      unint64_t v52 = (unint64_t)v59;
      if (v61 != v63 || v5 >= v63) {
        *uint64_t v5 = *v33;
      }
      v66 = v33;
LABEL_50:
      if ((unint64_t)v33 > v52)
      {
        uint64_t v6 = v33;
        if (v32 > v54) {
          continue;
        }
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v51 = v61;
    uint64_t v5 = v61 - 1;
LABEL_46:
    unint64_t v52 = (unint64_t)v59;
    id v33 = v63;
    v64 = v32;
    if (v51 < v57 || v5 >= v57 || v51 != v57) {
      *uint64_t v5 = *v32;
    }
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    v56 = &v4[v10];
    v64 = v56;
    if (v6 < v5 && v8 >= 8)
    {
      v60 = v5;
      while (1)
      {
        v58 = v7;
        v62 = v6;
        uint64_t v14 = *v4;
        id v15 = *v6;
        id v16 = v14;
        id v17 = objc_msgSend(v15, sel_localization);
        id v18 = objc_msgSend(v17, sel_displayName);

        uint64_t v19 = sub_256177EE8();
        uint64_t v21 = v20;

        id v22 = objc_msgSend(v16, sel_localization);
        id v23 = objc_msgSend(v22, sel_displayName);

        uint64_t v24 = sub_256177EE8();
        uint64_t v26 = v25;

        if (v19 == v24 && v21 == v26) {
          break;
        }
        char v28 = sub_256178828();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0) {
          goto LABEL_23;
        }
        id v29 = v60;
        uint64_t v30 = v62 + 1;
        uint64_t v31 = v58;
        if (v58 < v62 || v58 >= v30 || v58 != v62) {
          *v58 = *v62;
        }
LABEL_26:
        uint64_t v7 = v31 + 1;
        if (v4 < v56)
        {
          uint64_t v6 = v30;
          if (v30 < v29) {
            continue;
          }
        }
        v66 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      uint64_t v31 = v58;
      id v29 = v60;
      if (v58 != v4) {
        *v58 = *v4;
      }
      v65 = ++v4;
      uint64_t v30 = v62;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_2560E86BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25615246C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E86DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2561525EC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E86FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152778(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E871C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152904(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E873C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152A80(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2560E875C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152C34(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2560E877C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152C68(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E879C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152DFC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E87BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152F9C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E87DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256153128(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2560E87FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2561533C0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E881C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256153558(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2560E883C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25615358C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_2560E885C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_256152F7C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_2560E887C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_2561785F8();
    uint64_t v8 = a1 + 32;
    sub_255FB58F8(0, &qword_269F46AA0);
    sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
    uint64_t v25 = a3;
    do
    {
      uint64_t v26 = v8 + 8;
      uint64_t v27 = v4;
      uint64_t v29 = 0x6E69616D6F44;
      unint64_t v30 = 0xE600000000000000;
      id v9 = (id)NSStringFromHKStateOfMindDomain();
      sub_256177EE8();

      sub_256177F68();
      swift_bridgeObjectRelease();
      uint64_t v11 = v29;
      unint64_t v10 = v30;
      id v12 = objc_msgSend(a2, sel_applicationItems);
      id v13 = a3;
      uint64_t v14 = (void *)sub_2561783F8();
      id v15 = a2;
      id v16 = (char *)objc_allocWithZone((Class)type metadata accessor for StateOfMindSampleCountContext());
      uint64_t v17 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
      *(void *)&v16[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
      id v18 = (uint64_t *)&v16[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
      *id v18 = v11;
      v18[1] = v10;
      *(void *)&v16[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = v13;
      id v19 = v13;
      uint64_t v20 = v16;
      sub_256141D2C(v12, v14, 0);
      *(void *)&v20[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v21;
      *(void *)&v20[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = v14;
      id v22 = *(void **)&v16[v17];
      *(void *)&v16[v17] = 0;
      a2 = v15;
      id v23 = v14;

      uint64_t v24 = (objc_class *)type metadata accessor for StateOfMindOverlayContext();
      v28.receiver = v20;
      v28.super_class = v24;
      objc_msgSendSuper2(&v28, sel_init);

      sub_2561785D8();
      sub_256178608();
      a3 = v25;
      sub_256178618();
      sub_2561785E8();
      uint64_t v8 = v26;
      uint64_t v4 = v27 - 1;
    }
    while (v27 != 1);
    return v31;
  }
  return result;
}

uint64_t sub_2560E8AD8(unint64_t a1, char *a2, void *a3)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v6) {
      break;
    }
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2561785F8();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x25A2A1000](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      unint64_t v10 = v9;
      id v12 = v9;
      sub_2560E4298(&v12, a2, a3, &v13);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_2561785D8();
      sub_256178608();
      sub_256178618();
      sub_2561785E8();
      if (v6 == v8) {
        return v14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_256178678();
    swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_2560E8C48(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v47 = a7;
  uint64_t v13 = sub_256175B68();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  uint64_t v49 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v46 - v18;
  sub_2560E91C4(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v20 - 8);
  id v22 = (char *)&v46 - v21;
  id v23 = objc_msgSend(a1, sel_sleepChartFormatter);
  if (!v23)
  {
    sub_256175B48();
    uint64_t v31 = sub_256175B58();
    os_log_type_t v32 = sub_256178228();
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v51 = v34;
      *(_DWORD *)id v33 = 136446210;
      uint64_t v35 = sub_256178978();
      uint64_t v50 = sub_255FB29A8(v35, v36, &v51);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v31, v32, "[%{public}s] State of mind overlays require a sleep formatter", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v34, -1, -1);
      MEMORY[0x25A2A1E90](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v48);
    return 0;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(a1, sel_addDataViewControllerProvider);
  if (!v25)
  {
    sub_256175B48();
    id v37 = sub_256175B58();
    os_log_type_t v38 = sub_256178228();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = v48;
    if (v39)
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v51 = v42;
      *(_DWORD *)uint64_t v41 = 136446210;
      uint64_t v43 = sub_256178978();
      uint64_t v50 = sub_255FB29A8(v43, v44, &v51);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v37, v38, "[%{public}s] State of mind requires an add data provider", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v42, -1, -1);
      MEMORY[0x25A2A1E90](v41, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v40);
    return 0;
  }
  uint64_t v26 = (uint64_t)v25;
  sub_25602402C(a3, (uint64_t)v22);
  id v27 = objc_allocWithZone((Class)type metadata accessor for StateOfMindOverlayRoomViewController());
  swift_bridgeObjectRetain();
  id v28 = v24;
  swift_unknownObjectRetain();
  uint64_t v29 = StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)((uint64_t)v22, a2, a6, v28, v26, a4);
  objc_msgSend(v29, sel_setRestorationUserActivity_, a5);
  unint64_t v30 = v29;
  objc_msgSend(v30, sel_setAdditionalChartOptions_, v47);

  swift_unknownObjectRelease();
  return v30;
}

uint64_t type metadata accessor for StateOfMindOverlayRoomViewController()
{
  return self;
}

void sub_2560E90D8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_displayTypeController);
  id v2 = objc_msgSend(self, sel_stateOfMindType);
  id v3 = objc_msgSend(v1, sel_displayTypeForObjectType_, v2);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_localization);

    id v5 = objc_msgSend(v4, sel_displayName);
    sub_256177EE8();
  }
  else
  {
    __break(1u);
  }
}

void sub_2560E91C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256178448();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2560E9218(unint64_t a1, void *a2)
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_256178678())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25A2A1000](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(a2, sel_applicationItems);
      id v10 = objc_msgSend(v9, sel_displayTypeController);

      id v11 = objc_msgSend(v10, sel_displayTypeForObjectType_, v7);
      if (v11)
      {
        MEMORY[0x25A2A0A70]();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_256178038();
        }
        sub_256178058();
        sub_256178018();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

void sub_2560E93DC(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_256175B68();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v41 - v8;
  sub_256175B48();
  id v10 = sub_256175B58();
  os_log_type_t v11 = sub_256178238();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v44 = ObjectType;
  if (v12)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v48 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v43 = v4;
    uint64_t v45 = v3;
    uint64_t v15 = sub_256178978();
    uint64_t v47 = sub_255FB29A8(v15, v16, &v48);
    uint64_t v17 = v43;
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    uint64_t v47 = a1;
    sub_256178458();
    _os_log_impl(&dword_255F58000, v10, v11, "[%{public}s] Did tap info button at index: %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v14, -1, -1);
    MEMORY[0x25A2A1E90](v13, -1, -1);

    uint64_t v18 = *(void (**)(char *))(v17 + 8);
    uint64_t v3 = v45;
  }
  else
  {

    uint64_t v18 = *(void (**)(char *))(v4 + 8);
  }
  v18(v9);
  id v19 = v46;
  id v20 = objc_msgSend(v46, sel_buildFactorContextsAllowingDeselection_, 0);
  uint64_t v21 = v20;
  if (v20)
  {
    id v22 = objc_msgSend(v20, sel_activeFactorContexts);
    sub_255FB58F8(0, &qword_269F46A88);
    unint64_t v23 = sub_256178008();

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_256178678();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = a1 - v24;
    if (__OFSUB__(a1, v24))
    {
      __break(1u);
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v25 = a1;
  }
  if (sub_2560E4D3C(v25) & 1) != 0 || (sub_2560E50B4(a1, v21))
  {

    return;
  }
LABEL_13:
  unint64_t v26 = sub_2560E4B18();
  if (v26 >> 62) {
    uint64_t v27 = sub_256178678();
  }
  else {
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v19, sel_factorDisplayTypes);
  if (v28)
  {
    uint64_t v29 = v28;
    sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
    unint64_t v30 = sub_256178008();

    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_256178678();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = -1;
  }
  sub_256175B48();
  os_log_type_t v32 = sub_256175B58();
  os_log_type_t v33 = sub_256178238();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v43 = v27;
    uint64_t v35 = v34;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v41 = a1;
    uint64_t v37 = v36;
    uint64_t v48 = v36;
    *(_DWORD *)uint64_t v35 = 136446978;
    uint64_t v42 = v31;
    uint64_t v38 = sub_256178978();
    uint64_t v45 = v3;
    uint64_t v40 = sub_255FB29A8(v38, v39, &v48);
    id v46 = v7;
    uint64_t v47 = v40;
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2048;
    uint64_t v47 = v41;
    sub_256178458();
    *(_WORD *)(v35 + 22) = 2048;
    uint64_t v47 = v43;
    sub_256178458();
    *(_WORD *)(v35 + 32) = 2048;
    uint64_t v47 = v42;
    sub_256178458();
    _os_log_impl(&dword_255F58000, v32, v33, "[%{public}s] Unable to open context information view controller for index %ld.  Standard count: %ld, Health factors %ld", (uint8_t *)v35, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v37, -1, -1);
    MEMORY[0x25A2A1E90](v35, -1, -1);

    ((void (*)(id, uint64_t))v18)(v46, v45);
  }
  else
  {

    ((void (*)(char *, uint64_t))v18)(v7, v3);
  }
}

uint64_t method lookup function for StateOfMindOverlayRoomViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindOverlayRoomViewController);
}

uint64_t dispatch thunk of StateOfMindOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of StateOfMindOverlayRoomViewController.supportedDisplayTypesForComparisonContexts()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t sub_2560E9A10()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_2560E9A48()
{
  swift_release();

  return swift_deallocObject();
}

void sub_2560E9A90()
{
  sub_2560E5DD4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

void sub_2560E9AB4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

double sub_2560E9B00()
{
  CGFloat v1 = v0[4];
  CGFloat v2 = v0[5];
  CGFloat v3 = v0[6];
  CGFloat v4 = v0[7];
  v17.origin.x = v1;
  v17.origin.y = v2;
  v17.size.width = v3;
  v17.size.height = v4;
  double Width = CGRectGetWidth(v17);
  v18.origin.x = v1;
  v18.origin.y = v2;
  v18.size.width = v3;
  v18.size.height = v4;
  CGRectGetHeight(v18);
  double v5 = *v0;
  CGFloat v6 = v0[1];
  CGFloat v7 = v0[2];
  CGFloat v8 = v0[3];
  v19.origin.x = *v0;
  v19.origin.y = v6;
  v19.size.width = v7;
  v19.size.height = v8;
  double v14 = CGRectGetWidth(v19);
  v20.origin.x = v5;
  v20.origin.y = v6;
  v20.size.width = v7;
  v20.size.height = v8;
  CGRectGetHeight(v20);
  double rect = v1;
  v21.origin.x = v1;
  v21.origin.y = v2;
  v21.size.width = v3;
  v21.size.height = v4;
  double v9 = 1.0;
  if (CGRectGetHeight(v21) != 0.0)
  {
    v22.origin.x = v5;
    v22.origin.y = v6;
    v22.size.width = v7;
    v22.size.height = v8;
    if (CGRectGetWidth(v22) != 0.0)
    {
      v23.origin.x = v5;
      v23.origin.y = v6;
      v23.size.width = v7;
      v23.size.height = v8;
      if (CGRectGetHeight(v23) != 0.0)
      {
        v24.origin.x = rect;
        v24.origin.y = v2;
        v24.size.width = v3;
        v24.size.height = v4;
        double Height = CGRectGetHeight(v24);
        v25.origin.x = v5;
        v25.origin.y = v6;
        v25.size.width = v7;
        v25.size.height = v8;
        double v11 = CGRectGetWidth(v25);
        v26.origin.x = v5;
        v26.origin.y = v6;
        v26.size.width = v7;
        v26.size.height = v8;
        double v12 = CGRectGetHeight(v26);
        if (v12 >= v11) {
          double v12 = v11;
        }
        double v9 = Height * 1.5 / v12;
      }
    }
  }
  return (rect + Width * 0.5 - (v5 + v14 * 0.5)) / v9;
}

id sub_2560E9CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v127 = a1;
  uint64_t v126 = sub_256178348();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  v124 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEAD0C(0);
  MEMORY[0x270FA5388](v4 - 8);
  v115 = (uint64_t *)((char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  CGFloat v6 = (int *)type metadata accessor for EmotionShape();
  MEMORY[0x270FA5388](v6);
  CGFloat v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560ED6D8(0);
  uint64_t v116 = v9;
  MEMORY[0x270FA5388](v9);
  v118 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560ED6F8(0);
  uint64_t v117 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v120 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560ED774();
  uint64_t v119 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v123 = (uint64_t)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560ED958();
  uint64_t v121 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v122 = (uint64_t)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    CGRect v18 = result;
    unsigned int v19 = objc_msgSend(result, sel_isiPad);

    if (v19) {
      int v20 = 2;
    }
    else {
      int v20 = 1;
    }
    int v114 = v20;
    uint64_t v21 = *(void *)v2;
    char v22 = *(unsigned char *)(v2 + 8);
    sub_2560ED258(*(void *)v2, v22);
    double v23 = sub_25611C5CC(v21, v22);
    sub_256082548(v21, v22);
    if (v23 > 2.2) {
      double v23 = 2.2;
    }
    sub_2561780C8();
    sub_2560EDA44(v2);
    uint64_t v24 = sub_2561780B8();
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = MEMORY[0x263F8F500];
    *(void *)(v25 + 16) = v24;
    *(void *)(v25 + 24) = v26;
    long long v27 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v25 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v25 + 144) = v27;
    *(void *)(v25 + 160) = *(void *)(v2 + 128);
    long long v28 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v25 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v25 + 80) = v28;
    long long v29 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v25 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v25 + 112) = v29;
    long long v30 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v25 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v25 + 48) = v30;
    sub_2560EDA44(v2);
    uint64_t v31 = sub_2561780B8();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    *(void *)(v32 + 24) = v26;
    long long v33 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v32 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v32 + 144) = v33;
    *(void *)(v32 + 160) = *(void *)(v2 + 128);
    long long v34 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v32 + 80) = v34;
    long long v35 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v32 + 112) = v35;
    long long v36 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v32 + 48) = v36;
    sub_256177758();
    uint64_t v113 = v141;
    uint64_t v112 = v142;
    int v37 = v143;
    sub_2560EDA44(v2);
    uint64_t v38 = sub_2561780B8();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v38;
    *(void *)(v39 + 24) = v26;
    long long v40 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v39 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v39 + 144) = v40;
    *(void *)(v39 + 160) = *(void *)(v2 + 128);
    long long v41 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v39 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v39 + 80) = v41;
    long long v42 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v39 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v39 + 112) = v42;
    long long v43 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v39 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v39 + 48) = v43;
    sub_2560EDA44(v2);
    uint64_t v44 = sub_2561780B8();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v44;
    *(void *)(v45 + 24) = v26;
    long long v46 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v45 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v45 + 144) = v46;
    *(void *)(v45 + 160) = *(void *)(v2 + 128);
    long long v47 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v45 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v45 + 80) = v47;
    long long v48 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v45 + 96) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v45 + 112) = v48;
    long long v49 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v45 + 32) = *(_OWORD *)v2;
    *(_OWORD *)(v45 + 48) = v49;
    sub_256177758();
    uint64_t v111 = v138;
    uint64_t v110 = v139;
    int v50 = v140;
    float32x2_t v132 = vcvt_f32_f64(*(float64x2_t *)(v2 + 112));
    sub_2560EDD8C();
    sub_256177768();
    uint64_t v109 = v135;
    uint64_t v108 = v136;
    uint64_t v51 = v137;
    float v52 = *(double *)(v2 + 128);
    *(float *)&uint64_t v129 = v52;
    sub_256177768();
    float32x2_t v54 = v132;
    uint64_t v53 = v133;
    int v55 = v134;
    long long v128 = *(_OWORD *)(v2 + 16);
    sub_2560EE0C4(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
    sub_256177598();
    uint64_t v56 = v129;
    uint64_t v57 = v130;
    char v58 = v131;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v60 = (uint64_t)v115;
    uint64_t *v115 = KeyPath;
    sub_2560EDDF0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = swift_getKeyPath();
    sub_2560EDFF0(v60, (uint64_t)v8, (uint64_t (*)(void))sub_255FEAD0C);
    v62 = &v8[v6[5]];
    *(void *)v62 = v61;
    v62[8] = 0;
    v8[v6[6]] = v114;
    *(double *)&v8[v6[7]] = v23;
    v63 = &v8[v6[8]];
    uint64_t v64 = v112;
    *(void *)v63 = v113;
    *((void *)v63 + 1) = v64;
    *((_DWORD *)v63 + 4) = v37;
    v65 = &v8[v6[9]];
    uint64_t v66 = v110;
    *(void *)v65 = v111;
    *((void *)v65 + 1) = v66;
    *((_DWORD *)v65 + 4) = v50;
    v67 = &v8[v6[10]];
    uint64_t v68 = v108;
    *(void *)v67 = v109;
    *((void *)v67 + 1) = v68;
    *((void *)v67 + 2) = v51;
    v69 = &v8[v6[11]];
    *(float32x2_t *)v69 = v54;
    *((void *)v69 + 1) = v53;
    *((_DWORD *)v69 + 4) = v55;
    v70 = &v8[v6[12]];
    *(void *)v70 = v56;
    *((void *)v70 + 1) = v57;
    v70[16] = v58;
    uint64_t v71 = swift_allocObject();
    long long v72 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v71 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v71 + 128) = v72;
    *(void *)(v71 + 144) = *(void *)(v2 + 128);
    long long v73 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v71 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v71 + 64) = v73;
    long long v74 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v71 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v71 + 96) = v74;
    long long v75 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v71 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v71 + 32) = v75;
    v76 = v118;
    sub_2560EDE9C((uint64_t)v8, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for EmotionShape);
    v77 = (uint64_t (**)())&v76[*(int *)(v116 + 36)];
    *v77 = sub_2560EDE88;
    v77[1] = (uint64_t (*)())v71;
    v77[2] = 0;
    v77[3] = 0;
    sub_2560EDA44(v2);
    sub_2560EDF04((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EmotionShape);
    uint64_t v78 = swift_allocObject();
    long long v79 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v78 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v78 + 128) = v79;
    *(void *)(v78 + 144) = *(void *)(v2 + 128);
    long long v80 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v78 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v78 + 64) = v80;
    long long v81 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v78 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v78 + 96) = v81;
    long long v82 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v78 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v78 + 32) = v82;
    uint64_t v83 = v120;
    sub_2560EDE9C((uint64_t)v76, v120, (uint64_t (*)(void))sub_2560ED6D8);
    v84 = (void *)(v83 + *(int *)(v117 + 36));
    void *v84 = 0;
    v84[1] = 0;
    v84[2] = sub_2560EDE94;
    v84[3] = v78;
    sub_2560EDA44(v2);
    sub_2560EDF04((uint64_t)v76, (uint64_t (*)(void))sub_2560ED6D8);
    v118 = (char *)self;
    id v85 = objc_msgSend(v118, sel_defaultCenter);
    v86 = v124;
    sub_256178358();

    uint64_t v87 = swift_allocObject();
    long long v88 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v87 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v87 + 128) = v88;
    *(void *)(v87 + 144) = *(void *)(v2 + 128);
    long long v89 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v87 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v87 + 64) = v89;
    long long v90 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v87 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v87 + 96) = v90;
    long long v91 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v87 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v87 + 32) = v91;
    uint64_t v92 = v123;
    sub_2560EDE9C(v83, v123, (uint64_t (*)(void))sub_2560ED6F8);
    uint64_t v93 = v119;
    uint64_t v94 = v92 + *(int *)(v119 + 52);
    uint64_t v95 = v125;
    uint64_t v117 = *(void *)(v125 + 16);
    uint64_t v96 = v126;
    ((void (*)(uint64_t, char *, uint64_t))v117)(v94, v86, v126);
    v97 = (uint64_t (**)())(v92 + *(int *)(v93 + 56));
    *v97 = sub_2560EDF68;
    v97[1] = (uint64_t (*)())v87;
    sub_2560EDA44(v2);
    v98 = *(void (**)(char *, uint64_t))(v95 + 8);
    v98(v86, v96);
    sub_2560EDF04(v83, (uint64_t (*)(void))sub_2560ED6F8);
    id v99 = objc_msgSend(v118, sel_defaultCenter);
    sub_256178358();

    uint64_t v100 = swift_allocObject();
    long long v101 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v100 + 112) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v100 + 128) = v101;
    *(void *)(v100 + 144) = *(void *)(v2 + 128);
    long long v102 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v100 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v100 + 64) = v102;
    long long v103 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v100 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v100 + 96) = v103;
    long long v104 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v100 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v100 + 32) = v104;
    uint64_t v105 = v122;
    sub_2560EDE9C(v92, v122, (uint64_t (*)(void))sub_2560ED774);
    uint64_t v106 = v121;
    ((void (*)(uint64_t, char *, uint64_t))v117)(v105 + *(int *)(v121 + 52), v86, v96);
    v107 = (uint64_t (**)())(v105 + *(int *)(v106 + 56));
    *v107 = sub_2560EDFE8;
    v107[1] = (uint64_t (*)())v100;
    sub_2560EDA44(v2);
    v98(v86, v96);
    sub_2560EDF04(v92, (uint64_t (*)(void))sub_2560ED774);
    return (id)sub_2560EDFF0(v105, v127, (uint64_t (*)(void))sub_2560ED958);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2560EA820()
{
  return sub_2560EA89C();
}

uint64_t sub_2560EA89C()
{
  sub_2560EE0C4(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  if (v1 == 1) {
    sub_256177578();
  }
  return sub_256177588();
}

uint64_t sub_2560EA964()
{
  return sub_2560EA89C();
}

uint64_t sub_2560EA9DC()
{
  return sub_2560EA89C();
}

uint64_t sub_2560EAA58()
{
  return sub_2560EA89C();
}

id sub_2560EAAD0@<X0>(uint64_t a1@<X8>)
{
  return sub_2560E9CA4(a1);
}

double sub_2560EAB24@<D0>(double *a1@<X8>)
{
  return sub_2560EC120(a1);
}

uint64_t sub_2560EAB38()
{
  return sub_2560019AC();
}

double sub_2560EAB4C()
{
  return sub_2560EB20C();
}

uint64_t sub_2560EAB68()
{
  return sub_256175C98();
}

void (*sub_2560EABE0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FB0264;
}

uint64_t sub_2560EAC6C()
{
  return swift_endAccess();
}

uint64_t sub_2560EACF4(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8D538];
  sub_2560EE0C4(0, &qword_269F447E0, MEMORY[0x263F8D538], MEMORY[0x263EFDE48]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  CGFloat v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v13 - v9, a1, v4);
  v11(v8, (uint64_t)v10, v4);
  swift_beginAccess();
  sub_2560EE0C4(0, &qword_269F447D8, v2, MEMORY[0x263EFDE58]);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_2560EAEB4()
{
  return swift_endAccess();
}

uint64_t sub_2560EAF38(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8D538];
  sub_2560EE0C4(0, &qword_269F447E0, MEMORY[0x263F8D538], MEMORY[0x263EFDE48]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v8 - v6, a1, v4);
  swift_beginAccess();
  sub_2560EE0C4(0, &qword_269F447D8, v2, MEMORY[0x263EFDE58]);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void (*sub_2560EB0A0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = MEMORY[0x263F8D538];
  sub_2560EE0C4(0, &qword_269F447E0, MEMORY[0x263F8D538], MEMORY[0x263EFDE48]);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_2560EE0C4(0, &qword_269F447D8, v4, MEMORY[0x263EFDE58]);
  v3[16] = v10;
  sub_256175C58();
  swift_endAccess();
  return sub_255FB0858;
}

double sub_2560EB1F8()
{
  return sub_2560EB20C();
}

double sub_2560EB20C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_256175C48();
  sub_256175C48();
  return v0;
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.init()()
{
  sub_2560EE0C4(0, &qword_269F447D8, MEMORY[0x263F8D538], MEMORY[0x263EFDE58]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  uint64_t v11 = 0;
  sub_256175C48();
  size_t v7 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v7(v6, v5, v2);
  uint64_t v8 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__effectiveValence;
  uint64_t v11 = 0;
  sub_256175C48();
  v7(v8, v5, v2);
  return v0;
}

uint64_t sub_2560EB444(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  sub_2560EC784(-1.0, 1.0, 0.002);
  sub_2560EB4AC(v5, a1, a2, v2);

  return swift_release();
}

uint64_t sub_2560EB4AC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v6 = sub_256177A18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256177A48();
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_256177A68();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  CGRect v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v30 - v20;
  if (!*(void *)(a1 + 16)) {
    return v38(v18);
  }
  uint64_t v22 = *(void *)(a1 + 32);
  uint64_t v33 = v19;
  uint64_t v34 = v6;
  uint64_t v23 = v19;
  swift_getKeyPath();
  uint64_t v35 = v7;
  swift_getKeyPath();
  uint64_t v36 = v10;
  aBlock[0] = v22;
  swift_retain();
  sub_256175C98();
  sub_255FAEC28();
  uint64_t v31 = sub_2561782D8();
  sub_256177A58();
  MEMORY[0x25A2A0510](v17, 0.01);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v14 + 8);
  v32(v17, v23);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = a4;
  v24[3] = a1;
  uint64_t v25 = v39;
  v24[4] = v38;
  v24[5] = v25;
  aBlock[4] = sub_2560EE0A0;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255FA9E78;
  aBlock[3] = &block_descriptor_12;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  sub_256177A38();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2560ECE38((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
  sub_2560828B8(0);
  sub_2560ECE38((unint64_t *)&qword_269F44D20, sub_2560828B8);
  uint64_t v27 = v34;
  sub_2561784C8();
  long long v28 = (void *)v31;
  MEMORY[0x25A2A0D40](v21, v12, v9, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v27);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v36);
  return ((uint64_t (*)(char *, uint64_t))v32)(v21, v33);
}

uint64_t sub_2560EB908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a2 + 16);
  sub_256178848();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  swift_release();
  if (v10 == v8 - (v8 != 0))
  {
    uint64_t v11 = swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_255FB3784(a2, a2 + 32, v8 != 0, (2 * v8) | 1);
  }
  swift_bridgeObjectRelease();
  sub_2560EB4AC(v11, a3, a4, a1);

  return swift_release();
}

uint64_t sub_2560EBA28()
{
  return sub_256178918();
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  sub_2560EE0C4(0, &qword_269F447D8, MEMORY[0x263F8D538], MEMORY[0x263EFDE58]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__effectiveValence, v3);
  return v0;
}

uint64_t StateOfMindVisualization.VisualizationPPTModel.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__valence;
  sub_2560EE0C4(0, &qword_269F447D8, MEMORY[0x263F8D538], MEMORY[0x263EFDE58]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtCV14MentalHealthUI24StateOfMindVisualization21VisualizationPPTModel__effectiveValence, v3);

  return swift_deallocClassInstance();
}

uint64_t sub_2560EBCB0()
{
  return sub_256178928();
}

uint64_t sub_2560EBCF0()
{
  return sub_256178928();
}

uint64_t sub_2560EBD34()
{
  return sub_2560EBA28();
}

uint64_t sub_2560EBD58()
{
  return sub_256178928();
}

uint64_t sub_2560EBD98@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  uint64_t result = sub_256175C08();
  *a1 = result;
  return result;
}

uint64_t sub_2560EBDD8()
{
  return _s14MentalHealthUI24StateOfMindVisualizationV0G8PPTModelC2eeoiySbAE_AEtFZ_0();
}

uint64_t StateOfMindVisualization.VisualizationPPTView.model.getter()
{
  return swift_retain();
}

uint64_t StateOfMindVisualization.VisualizationPPTView.model.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*StateOfMindVisualization.VisualizationPPTView.model.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindVisualization.VisualizationPPTView.$model.getter()
{
  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  sub_2560ECE38(&qword_269F46AE0, (void (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel);

  return sub_2561760F8();
}

uint64_t StateOfMindVisualization.VisualizationPPTView.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  sub_2560ECE38(&qword_269F46AE0, (void (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel);
  uint64_t result = sub_2561760E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

__n128 StateOfMindVisualization.VisualizationPPTView.body.getter@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
  sub_2560ECE38(&qword_269F46AE0, (void (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel);
  swift_retain();
  sub_2561760F8();
  swift_release();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  swift_retain();
  sub_2561760F8();
  swift_release();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_2560ECCBC(KeyPath, 0, v13, v14, v10, (uint64_t)v16, v15, v12, 0.0, 0.0, 1.0, v11);
  uint64_t v3 = sub_2561761F8();
  char v4 = sub_256176D88();
  long long v5 = v16[7];
  *(_OWORD *)(a1 + 96) = v16[6];
  *(_OWORD *)(a1 + 112) = v5;
  uint64_t v6 = v17;
  long long v7 = v16[3];
  *(_OWORD *)(a1 + 32) = v16[2];
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = v16[5];
  *(_OWORD *)(a1 + 64) = v16[4];
  *(_OWORD *)(a1 + 80) = v8;
  __n128 result = (__n128)v16[1];
  *(_OWORD *)a1 = v16[0];
  *(__n128 *)(a1 + 16) = result;
  *(void *)(a1 + 128) = v6;
  *(void *)(a1 + 136) = v3;
  *(unsigned char *)(a1 + 144) = v4;
  return result;
}

double sub_2560EC120@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2560EC1A0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2561763A8();
  *a1 = v3;
  return result;
}

uint64_t sub_2560EC1CC()
{
  return sub_2561763B8();
}

size_t sub_2560EC1F4(uint64_t a1)
{
  sub_256029EE8();
  uint64_t v44 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  long long v47 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v7 = (void *)((char *)v42 - v6);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v42 - v8;
  uint64_t v48 = v10;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  uint64_t v46 = v12;
  v42[0] = a1;
  if (v12)
  {
    uint64_t v43 = (v11 + 32) & ~v11;
    uint64_t v14 = MEMORY[0x263F8EE78] + v43;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = *(void *)(_s5EntryVMa() - 8);
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v45 = *(void *)(v17 + 72);
    v42[1] = v11 | 7;
    uint64_t v19 = v13;
    uint64_t v20 = v44;
    while (1)
    {
      uint64_t v22 = (uint64_t)&v47[*(int *)(v20 + 48)];
      sub_2560EDE9C(v18, v22, (uint64_t (*)(void))_s5EntryVMa);
      uint64_t v23 = (uint64_t)v7 + *(int *)(v20 + 48);
      *long long v7 = v15;
      sub_2560EDFF0(v22, v23, (uint64_t (*)(void))_s5EntryVMa);
      size_t result = sub_2560EDFF0((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(void))sub_256029EE8);
      if (v16)
      {
        uint64_t v13 = v19;
        BOOL v21 = __OFSUB__(v16--, 1);
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v19[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        sub_2560EDDF0(0, &qword_269F46B50, (uint64_t (*)(uint64_t))sub_256029EE8, MEMORY[0x263F8E0F8]);
        uint64_t v28 = *(void *)(v48 + 72);
        uint64_t v29 = v43;
        uint64_t v13 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v13);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v29;
        uint64_t v33 = v30 / v28;
        v13[2] = v27;
        v13[3] = 2 * (v30 / v28);
        uint64_t v34 = (char *)v13 + v32;
        uint64_t v35 = v19[3] >> 1;
        uint64_t v36 = v35 * v28;
        if (v19[2])
        {
          if (v13 < v19 || v34 >= (char *)v19 + v32 + v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        uint64_t v14 = (uint64_t)&v34[v36];
        uint64_t v38 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        uint64_t v20 = v44;
        BOOL v21 = __OFSUB__(v38, 1);
        uint64_t v16 = v38 - 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v15;
      sub_2560EDFF0((uint64_t)v9, v14, (uint64_t (*)(void))sub_256029EE8);
      v14 += *(void *)(v48 + 72);
      v18 += v45;
      uint64_t v19 = v13;
      if (v46 == v15) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v16 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v39 = v13[3];
  if (v39 >= 2)
  {
    unint64_t v40 = v39 >> 1;
    BOOL v21 = __OFSUB__(v40, v16);
    uint64_t v41 = v40 - v16;
    if (v21) {
      goto LABEL_36;
    }
    v13[2] = v41;
  }
  return (size_t)v13;
}

uint64_t sub_2560EC5C4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (char *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v3 = result;
    size_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 32;
    while (1)
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      if (v4)
      {
        size_t result = swift_bridgeObjectRetain();
        BOOL v8 = __OFSUB__(v4--, 1);
        if (v8) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v9 = *((void *)v2 + 3);
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_28;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_2560EDDF0(0, &qword_269F46B58, (uint64_t (*)(uint64_t))sub_25609A4C0, MEMORY[0x263F8E0F8]);
        uint64_t v12 = (char *)swift_allocObject();
        int64_t v13 = _swift_stdlib_malloc_size(v12);
        uint64_t v14 = v13 - 32;
        if (v13 < 32) {
          uint64_t v14 = v13 - 17;
        }
        uint64_t v15 = v14 >> 4;
        *((void *)v12 + 2) = v11;
        *((void *)v12 + 3) = 2 * (v14 >> 4);
        uint64_t v16 = v12 + 32;
        uint64_t v17 = *((void *)v2 + 3) >> 1;
        uint64_t v6 = &v12[16 * v17 + 32];
        uint64_t v18 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (*((void *)v2 + 2))
        {
          uint64_t v19 = v2 + 32;
          if (v12 != v2 || v16 >= &v19[16 * v17]) {
            memmove(v16, v19, 16 * v17);
          }
          swift_bridgeObjectRetain();
          *((void *)v2 + 2) = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        size_t result = swift_release();
        uint64_t v2 = v12;
        BOOL v8 = __OFSUB__(v18, 1);
        uint64_t v4 = v18 - 1;
        if (v8)
        {
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
      }
      *(void *)uint64_t v6 = v5;
      *((void *)v6 + 1) = v7;
      v6 += 16;
      if (v1 == ++v5)
      {
        size_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_23:
  unint64_t v20 = *((void *)v2 + 3);
  if (v20 >= 2)
  {
    unint64_t v21 = v20 >> 1;
    BOOL v8 = __OFSUB__(v21, v4);
    uint64_t v22 = v21 - v4;
    if (v8) {
      goto LABEL_29;
    }
    *((void *)v2 + 2) = v22;
  }
  return (uint64_t)v2;
}

void sub_2560EC784(double a1, double a2, double a3)
{
  BOOL v6 = a1 <= a2;
  if (a3 > 0.0) {
    BOOL v6 = a1 >= a2;
  }
  if (!v6)
  {
    uint64_t v7 = -1;
    do
    {
      uint64_t v8 = ++v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_46;
      }
      double v9 = a1 + (double)v8 * a3;
      BOOL v10 = v9 <= a2;
      if (a3 > 0.0) {
        BOOL v10 = v9 >= a2;
      }
    }
    while (!v10);
    if (v8 <= 0) {
      goto LABEL_18;
    }
    sub_2560EE0C4(0, &qword_269F43AA8, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
    uint64_t v11 = (double *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    uint64_t v14 = v13 >> 3;
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * v14;
    uint64_t v15 = v11 + 4;
    uint64_t v16 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v8;
    uint64_t v17 = -1;
    double v18 = a1;
    while (1)
    {
      BOOL v19 = v18 <= a2;
      if (a3 > 0.0) {
        BOOL v19 = v18 >= a2;
      }
      if (v19) {
        goto LABEL_48;
      }
      double v20 = a1 + (double)(v17 + 2) * a3;
      *v15++ = v18;
      ++v17;
      double v18 = v20;
      if (v7 == v17) {
        goto LABEL_19;
      }
    }
  }
LABEL_18:
  uint64_t v8 = 0;
  uint64_t v11 = (double *)MEMORY[0x263F8EE78];
  uint64_t v15 = (double *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v16 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
  double v20 = a1;
LABEL_19:
  BOOL v21 = v20 <= a2;
  if (a3 > 0.0) {
    BOOL v21 = v20 >= a2;
  }
  if (!v21)
  {
    uint64_t v22 = MEMORY[0x263F8D538];
    while (!__OFADD__(v8, 1))
    {
      if (!v16)
      {
        unint64_t v23 = *((void *)v11 + 3);
        if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_49;
        }
        int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1) {
          uint64_t v25 = 1;
        }
        else {
          uint64_t v25 = v24;
        }
        sub_2560EE0C4(0, &qword_269F43AA8, v22, MEMORY[0x263F8E0F8]);
        int64_t v26 = (double *)swift_allocObject();
        int64_t v27 = _swift_stdlib_malloc_size(v26);
        uint64_t v28 = v27 - 32;
        if (v27 < 32) {
          uint64_t v28 = v27 - 25;
        }
        uint64_t v29 = v28 >> 3;
        *((void *)v26 + 2) = v25;
        *((void *)v26 + 3) = 2 * (v28 >> 3);
        unint64_t v30 = (unint64_t)(v26 + 4);
        uint64_t v31 = *((void *)v11 + 3) >> 1;
        if (*((void *)v11 + 2))
        {
          uint64_t v32 = v11 + 4;
          if (v26 != v11 || v30 >= (unint64_t)v32 + 8 * v31) {
            memmove(v26 + 4, v32, 8 * v31);
          }
          v11[2] = 0.0;
        }
        uint64_t v15 = (double *)(v30 + 8 * v31);
        uint64_t v16 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
        swift_release();
        uint64_t v11 = v26;
      }
      BOOL v33 = __OFSUB__(v16--, 1);
      if (v33) {
        goto LABEL_47;
      }
      *v15++ = v20;
      double v20 = a1 + (double)(v8 + 1) * a3;
      BOOL v34 = v20 <= a2;
      if (a3 > 0.0) {
        BOOL v34 = v20 >= a2;
      }
      ++v8;
      if (v34) {
        goto LABEL_41;
      }
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
LABEL_41:
  unint64_t v35 = *((void *)v11 + 3);
  if (v35 >= 2)
  {
    unint64_t v36 = v35 >> 1;
    BOOL v33 = __OFSUB__(v36, v16);
    unint64_t v37 = v36 - v16;
    if (v33)
    {
LABEL_50:
      __break(1u);
      return;
    }
    *((void *)v11 + 2) = v37;
  }
}

uint64_t _s14MentalHealthUI24StateOfMindVisualizationV0G8PPTModelC2eeoiySbAE_AEtFZ_0()
{
  return 1;
}

double sub_2560ECBCC@<D0>(double *a1@<X8>)
{
  return sub_2560EC120(a1);
}

uint64_t sub_2560ECBF4()
{
  return sub_2560019AC();
}

uint64_t type metadata accessor for StateOfMindVisualization.VisualizationPPTModel()
{
  uint64_t result = qword_269F46AF0;
  if (!qword_269F46AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2560ECC68@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_2561763A8();
  *a1 = v3;
  return result;
}

uint64_t sub_2560ECC94()
{
  return sub_2561763B8();
}

uint64_t sub_2560ECCBC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, uint64_t a12)
{
  sub_256177568();
  sub_256177568();
  uint64_t result = sub_256177568();
  *(void *)a6 = a1;
  *(unsigned char *)(a6 + 8) = a2 & 1;
  *(unsigned char *)(a6 + 16) = v24;
  *(void *)(a6 + 24) = v25;
  *(unsigned char *)(a6 + 32) = v24;
  *(void *)(a6 + 40) = v25;
  *(unsigned char *)(a6 + 48) = v24;
  *(void *)(a6 + 56) = v25;
  *(void *)(a6 + 64) = a3;
  *(void *)(a6 + 72) = a4;
  *(double *)(a6 + 80) = a7;
  *(void *)(a6 + 88) = a5;
  *(void *)(a6 + 96) = a12;
  *(double *)(a6 + 104) = a8;
  *(double *)(a6 + 112) = a9;
  *(double *)(a6 + 120) = a10;
  *(double *)(a6 + 128) = a11;
  return result;
}

uint64_t sub_2560ECDF0()
{
  return sub_2560ECE38(&qword_269F46AE8, (void (*)(uint64_t))type metadata accessor for StateOfMindVisualization.VisualizationPPTModel);
}

uint64_t sub_2560ECE38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560ECE80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560ECEA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_2560ECEB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_2560ECEF4()
{
  return type metadata accessor for StateOfMindVisualization.VisualizationPPTModel();
}

void sub_2560ECEFC()
{
  sub_2560EE0C4(319, &qword_269F447D8, MEMORY[0x263F8D538], MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for StateOfMindVisualization.VisualizationPPTModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindVisualization.VisualizationPPTModel);
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.valence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.valence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.valence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.$valence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.$valence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.$valence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.simulateInteraction(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of StateOfMindVisualization.VisualizationPPTModel.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

void *_s20VisualizationPPTViewVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *_s20VisualizationPPTViewVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.VisualizationPPTView()
{
  return &type metadata for StateOfMindVisualization.VisualizationPPTView;
}

uint64_t sub_2560ED1A8()
{
  return sub_2560ED868(&qword_269F46B00, (void (*)(uint64_t))sub_2560ED1F8, (void (*)(void))sub_256082620);
}

void sub_2560ED1F8()
{
  if (!qword_269F46B08)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46B08);
    }
  }
}

uint64_t sub_2560ED258(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t _s4LiveVwxx(uint64_t a1)
{
  sub_256082548(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t _s4LiveVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_2560ED258(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s4LiveVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_2560ED258(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_256082548(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s4LiveVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_256082548(v6, v7);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 24) = a2[3];
  swift_release();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = a2[5];
  swift_release();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  swift_release();
  *(void *)(a1 + 72) = a2[9];
  swift_release();
  *(void *)(a1 + 80) = a2[10];
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
  return a1;
}

uint64_t _s4LiveVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4LiveVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s4LiveVMa()
{
  return &_s4LiveVN;
}

uint64_t sub_2560ED6BC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2560ED6D8(uint64_t a1)
{
}

void sub_2560ED6F8(uint64_t a1)
{
}

void sub_2560ED718(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2560ED774()
{
  if (!qword_269F46B20)
  {
    sub_256178348();
    sub_2560ED6F8(255);
    sub_2560ECE38(&qword_269F45DB8, MEMORY[0x263F07CB0]);
    sub_2560ED868(&qword_269F46B28, sub_2560ED6F8, (void (*)(void))sub_2560ED8E8);
    unint64_t v0 = sub_2561762C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46B20);
    }
  }
}

uint64_t sub_2560ED868(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560ED8E8()
{
  return sub_2560ED868(&qword_269F46B30, sub_2560ED6D8, (void (*)(void))sub_2560ED924);
}

uint64_t sub_2560ED924()
{
  return sub_2560ECE38(&qword_269F47D20, (void (*)(uint64_t))type metadata accessor for EmotionShape);
}

void sub_2560ED958()
{
  if (!qword_269F46B38)
  {
    sub_256178348();
    sub_2560ED774();
    sub_2560ECE38(&qword_269F45DB8, MEMORY[0x263F07CB0]);
    sub_2560ECE38(&qword_269F46B40, (void (*)(uint64_t))sub_2560ED774);
    unint64_t v0 = sub_2561762C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46B38);
    }
  }
}

uint64_t sub_2560EDA44(uint64_t a1)
{
  return a1;
}

float sub_2560EDADC@<S0>(float *a1@<X8>)
{
  sub_2560EE0C4(0, (unint64_t *)&qword_269F443F8, MEMORY[0x263F8D538], MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v3);
  float result = (v3 + 1.0) * 0.5;
  *a1 = result;
  return result;
}

uint64_t sub_2560EDB6C()
{
  return sub_256177728();
}

float sub_2560EDBF8@<S0>(float *a1@<X8>)
{
  sub_2560EE0C4(0, (unint64_t *)&qword_269F443F8, MEMORY[0x263F8D538], MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v3);
  float result = (v3 + 1.0) * 0.5;
  *a1 = result;
  return result;
}

uint64_t objectdestroyTm_22()
{
  swift_unknownObjectRelease();
  sub_256082548(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560EDD04()
{
  return sub_256177728();
}

void sub_2560EDD8C()
{
  if (!qword_269F47D60)
  {
    sub_256097AF0();
    unint64_t v0 = sub_2561788B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47D60);
    }
  }
}

void sub_2560EDDF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560EDE54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2561764D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2560EDE88()
{
  return sub_2560EA820();
}

uint64_t sub_2560EDE94()
{
  return sub_2560EA964();
}

uint64_t sub_2560EDE9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560EDF04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560EDF68()
{
  return sub_2560EA9DC();
}

uint64_t objectdestroy_41Tm()
{
  sub_256082548(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560EDFE8()
{
  return sub_2560EAA58();
}

uint64_t sub_2560EDFF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560EE058()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560EE0A0()
{
  return sub_2560EB908(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

void sub_2560EE0C4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560EE110()
{
  return sub_2560ECE38(&qword_269F46B48, (void (*)(uint64_t))sub_2560ED958);
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *_s9PlacementVMa()
{
  return &_s9PlacementVN;
}

void *sub_2560EE17C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *long long v4 = *a2;
    long long v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = *(int *)(a3 + 44);
    uint64_t v9 = (void *)(a1 + v8);
    BOOL v10 = (uint64_t *)((char *)a2 + v8);
    sub_2560EE4C8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_2560EE4C8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(int *)(a3 + 48);
    double v20 = (void *)((char *)v4 + v19);
    BOOL v21 = (uint64_t *)((char *)a2 + v19);
    sub_2560EE4C8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *double v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_2560EE4C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560EE52C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  sub_2560EE4C8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 48);
  sub_2560EE4C8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2560EE750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_2560EE4C8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_2560EE4C8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(int *)(a3 + 48);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  sub_2560EE4C8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *uint64_t v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2560EEA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 44);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_2560EED90(a1 + v6, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_2560EE4C8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_2560EE4C8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v12 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 48);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    uint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_2560EED90(a1 + v16, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_2560EE4C8(0, &qword_269F47D00, v19, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v17, v18, v20);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2560EED90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2560EE4C8(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560EEE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  sub_2560EE4C8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176AA8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_2560EE4C8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v19 = *(int *)(a3 + 48);
  uint64_t v20 = (void *)(a1 + v19);
  BOOL v21 = (const void *)(a2 + v19);
  sub_2560EE4C8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2560EF114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 44);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_2560EED90(a1 + v7, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_2560EE4C8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_2560EE4C8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v19 = *(int *)(a3 + 48);
    uint64_t v20 = (void *)(a1 + v19);
    BOOL v21 = (const void *)(a2 + v19);
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_2560EED90(a1 + v19, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_2560EE4C8(0, &qword_269F47D00, v22, MEMORY[0x263F185C8]);
    uint64_t v24 = v23;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v20, v21, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560EF460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560EF474);
}

uint64_t sub_2560EF474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2560EE4C8(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 44);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      sub_2560EE4C8(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 48);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_2560EF600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560EF614);
}

uint64_t sub_2560EF614(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 48) = a2 + 1;
  }
  else
  {
    sub_2560EE4C8(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_2560EE4C8(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ConfirmationView()
{
  uint64_t result = qword_269F46B60;
  if (!qword_269F46B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560EF7E8()
{
  sub_2560EE4C8(319, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_2560EE4C8(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2560EF934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560EF950@<X0>(double *a1@<X1>, uint64_t a2@<X8>)
{
  sub_2560F10B4();
  MEMORY[0x270FA5388](v4 - 8);
  int v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560EFA70();
  uint64_t *v6 = sub_2561778E8();
  v6[1] = v7;
  sub_2560F1704();
  sub_2560EFBA0(a1, (uint64_t)v6 + *(int *)(v8 + 44));
  uint64_t v9 = sub_2561778E8();
  sub_25611761C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, INFINITY, 0, v9, v10);
  return sub_2560F1CD0((uint64_t)v6, (uint64_t (*)(void))sub_2560F10B4);
}

id sub_2560EFA70()
{
  uint64_t v0 = type metadata accessor for ValenceSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v4 = result;
    objc_msgSend(result, sel_isiPad);

    sub_256175FA8();
    type metadata accessor for ConfirmationView();
    sub_25611BB38((uint64_t)v2);
    return (id)sub_2560F1CD0((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2560EFBA0@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v126 = a2;
  uint64_t v125 = sub_256177958();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v123 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_256175D98();
  uint64_t v120 = *(void *)(v121 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v121);
  v118 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v115 = (uint64_t)&v93 - v6;
  sub_2560F1F88(0, &qword_269F46BE0, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F19C40]);
  uint64_t v119 = v7 - 8;
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v117 = (char *)&v93 - v8;
  uint64_t v105 = sub_256176EE8();
  uint64_t v103 = *(void *)(v105 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v105);
  long long v101 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  long long v102 = (char *)&v93 - v11;
  uint64_t v99 = type metadata accessor for ValenceSelectionPhaseSpecs() - 8;
  MEMORY[0x270FA5388](v99);
  uint64_t v98 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F14F0();
  uint64_t v107 = v13;
  uint64_t v106 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v95 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F14BC(0);
  uint64_t v104 = v15 - 8;
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v100 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F1488(0);
  uint64_t v109 = v17 - 8;
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v108 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F13FC();
  uint64_t v112 = v19 - 8;
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v110 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F13D4(0);
  uint64_t v113 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v111 = (uint64_t)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F132C(0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v122 = (uint64_t)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  int v114 = (char *)&v93 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v116 = (uint64_t)&v93 - v28;
  sub_2560F11B8(0);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v127 = (uint64_t)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v128 = (uint64_t)&v93 - v32;
  double v33 = *a1;
  LOBYTE(v146) = 1;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(&v130, v33);
  BOOL v34 = v130;
  uint64_t v35 = v131;
  uint64_t v36 = v132;
  sub_2561778E8();
  sub_256175F38();
  uint64_t v37 = v146;
  char v38 = v147;
  uint64_t v39 = v148;
  char v40 = v149;
  uint64_t v41 = v150;
  uint64_t v42 = v151;
  uint64_t v44 = *((void *)a1 + 1);
  uint64_t v43 = *((void *)a1 + 2);
  sub_2561779D8();
  uint64_t v45 = *((void *)a1 + 3);
  char v153 = v38;
  char v152 = v40;
  uint64_t v130 = v34;
  uint64_t v131 = v35;
  uint64_t v132 = v36;
  uint64_t v133 = v37;
  char v134 = v38;
  uint64_t v135 = v39;
  char v136 = v40;
  uint64_t v137 = v41;
  uint64_t v138 = v42;
  uint64_t v139 = v43;
  uint64_t v140 = v44;
  uint64_t v141 = v44;
  uint64_t v142 = v46;
  uint64_t v143 = v47;
  uint64_t v144 = v45;
  char v145 = 0;
  uint64_t v129 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B67E8);
  sub_2560F179C(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  uint64_t v97 = v48;
  unint64_t v96 = sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_2560F11EC(0);
  sub_2560F1824(&qword_269F46C00, sub_2560F11EC, (void (*)(void))sub_2560F17E8);
  uint64_t v49 = v127;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2560F18E0(v49, v128, (uint64_t (*)(void))sub_2560F11B8);
  int v50 = v95;
  sub_256177548();
  type metadata accessor for ConfirmationView();
  uint64_t v94 = a1;
  uint64_t v51 = v98;
  sub_25611BB38(v98);
  sub_256176E48();
  char v52 = sub_256176138();
  uint64_t v53 = v103;
  float32x2_t v54 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v52 & 1) == 0) {
    float32x2_t v54 = (unsigned int *)MEMORY[0x263F1A688];
  }
  int v55 = v101;
  uint64_t v56 = v105;
  (*(void (**)(char *, void, uint64_t))(v103 + 104))(v101, *v54, v105);
  uint64_t v57 = v53;
  char v58 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  v59 = v102;
  v58(v102, v55, v56);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v56);
  sub_2560F1CD0(v51, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  uint64_t v60 = sub_256176E28();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = v106;
  uint64_t v63 = (uint64_t)v100;
  uint64_t v64 = v107;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v100, v50, v107);
  v65 = (uint64_t *)(v63 + *(int *)(v104 + 44));
  uint64_t *v65 = KeyPath;
  v65[1] = v60;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v50, v64);
  int v66 = sub_256176A58();
  uint64_t v67 = v115;
  sub_25611A114(v115);
  uint64_t v68 = v120;
  v69 = v118;
  uint64_t v70 = v121;
  (*(void (**)(char *, void, uint64_t))(v120 + 104))(v118, *MEMORY[0x263F184F8], v121);
  LOBYTE(KeyPath) = sub_256175D88();
  uint64_t v71 = *(void (**)(char *, uint64_t))(v68 + 8);
  long long v72 = v69;
  uint64_t v73 = v70;
  v71(v72, v70);
  long long v74 = (unsigned int *)MEMORY[0x263F1B968];
  if ((KeyPath & 1) == 0) {
    long long v74 = (unsigned int *)MEMORY[0x263F1B950];
  }
  uint64_t v75 = v124;
  v76 = v123;
  uint64_t v77 = v125;
  (*(void (**)(char *, void, uint64_t))(v124 + 104))(v123, *v74, v125);
  uint64_t v78 = v117;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(&v117[*(int *)(v119 + 44)], v76, v77);
  *uint64_t v78 = v66;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
  v71((char *)v67, v73);
  uint64_t v79 = (uint64_t)v108;
  sub_2560F1950((uint64_t)v78, (uint64_t)&v108[*(int *)(v109 + 44)]);
  sub_2560F19E0(v63, v79, (uint64_t (*)(void))sub_2560F14BC);
  sub_2560F1A48((uint64_t)v78);
  sub_2560F1CD0(v63, (uint64_t (*)(void))sub_2560F14BC);
  uint64_t v80 = swift_getKeyPath();
  uint64_t v81 = v110;
  sub_2560F19E0(v79, v110, (uint64_t (*)(void))sub_2560F1488);
  uint64_t v82 = v81 + *(int *)(v112 + 44);
  *(void *)uint64_t v82 = v80;
  *(unsigned char *)(v82 + 8) = 1;
  sub_2560F1CD0(v79, (uint64_t (*)(void))sub_2560F1488);
  uint64_t v83 = *((void *)v94 + 5);
  uint64_t v84 = v111;
  sub_2560F19E0(v81, v111, (uint64_t (*)(void))sub_2560F13FC);
  *(void *)(v84 + *(int *)(v113 + 36)) = v83;
  sub_2560F1CD0(v81, (uint64_t (*)(void))sub_2560F13FC);
  uint64_t v130 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6818);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_2560F1824(&qword_269F46C18, sub_2560F13D4, (void (*)(void))sub_2560F1AD8);
  uint64_t v85 = (uint64_t)v114;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_2560F1CD0(v84, (uint64_t (*)(void))sub_2560F13D4);
  uint64_t v86 = v116;
  sub_2560F18E0(v85, v116, (uint64_t (*)(void))sub_2560F132C);
  uint64_t v87 = v128;
  uint64_t v88 = v127;
  sub_2560F19E0(v128, v127, (uint64_t (*)(void))sub_2560F11B8);
  uint64_t v89 = v122;
  sub_2560F19E0(v86, v122, (uint64_t (*)(void))sub_2560F132C);
  uint64_t v90 = v126;
  sub_2560F19E0(v88, v126, (uint64_t (*)(void))sub_2560F11B8);
  sub_2560F1148();
  sub_2560F19E0(v89, v90 + *(int *)(v91 + 48), (uint64_t (*)(void))sub_2560F132C);
  sub_2560F1CD0(v86, (uint64_t (*)(void))sub_2560F132C);
  sub_2560F1CD0(v87, (uint64_t (*)(void))sub_2560F11B8);
  sub_2560F1CD0(v89, (uint64_t (*)(void))sub_2560F132C);
  return sub_2560F1CD0(v88, (uint64_t (*)(void))sub_2560F11B8);
}

uint64_t sub_2560F0A10@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v2 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255F5CE90();
  uint64_t result = sub_256177028();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_2560F0B14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2561774E8();
  *a1 = result;
  return result;
}

double sub_2560F0B54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (double *)v2;
  uint64_t v6 = sub_256175D98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F19E0(v2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConfirmationView);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  sub_2560F18E0((uint64_t)v13, v15 + v14, (uint64_t (*)(void))type metadata accessor for ConfirmationView);
  uint64_t v16 = sub_2561761F8();
  int v17 = sub_256176D88();
  double v18 = *v4;
  sub_25611A114((uint64_t)v10);
  sub_2560D6690((uint64_t)v10, (uint64_t)sub_2560F1034, v15, v16, v17, (uint64_t)&v28, v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  swift_release();
  uint64_t v19 = v29;
  char v20 = v30;
  uint64_t v21 = v31;
  uint64_t v22 = v34;
  char v23 = v35;
  double result = v4[4];
  long long v25 = v32;
  long long v26 = v33;
  long long v27 = v36;
  *(_OWORD *)a2 = v28;
  *(void *)(a2 + 16) = v19;
  *(unsigned char *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v21;
  *(_OWORD *)(a2 + 40) = v25;
  *(_OWORD *)(a2 + 56) = v26;
  *(void *)(a2 + 72) = v22;
  *(unsigned char *)(a2 + 80) = v23;
  *(_OWORD *)(a2 + 88) = v27;
  *(double *)(a2 + 104) = result;
  return result;
}

uint64_t sub_2560F0DB4()
{
  uint64_t v1 = type metadata accessor for ConfirmationView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 44);
  sub_2560EE4C8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    unint64_t v6 = v3 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  unint64_t v8 = v0 + v2 + *(int *)(v1 + 48);
  sub_2560EE4C8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175D98();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_2560F1034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ConfirmationView() - 8);
  uint64_t v4 = (double *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_2560EF950(v4, a1);
}

void sub_2560F10B4()
{
  if (!qword_269F46B70)
  {
    sub_2560EE4C8(255, &qword_269F46B78, (uint64_t (*)(uint64_t))sub_2560F1148, MEMORY[0x263F1BAC8]);
    sub_2560F167C();
    unint64_t v0 = sub_256177708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46B70);
    }
  }
}

void sub_2560F1148()
{
  if (!qword_269F46B80)
  {
    sub_2560F11B8(255);
    sub_2560F132C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F46B80);
    }
  }
}

void sub_2560F11B8(uint64_t a1)
{
}

void sub_2560F11EC(uint64_t a1)
{
}

void sub_2560F1214(uint64_t a1)
{
}

void sub_2560F123C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2560F12A0()
{
  if (!qword_269F46BA0)
  {
    sub_2560F1F88(255, &qword_269F43448, (uint64_t)&type metadata for StateOfMindVisualization.ValenceImage, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46BA0);
    }
  }
}

void sub_2560F132C(uint64_t a1)
{
}

void sub_2560F1360(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2560F13D4(uint64_t a1)
{
}

void sub_2560F13FC()
{
  if (!qword_269F46BB8)
  {
    sub_2560F1488(255);
    sub_2560F179C(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46BB8);
    }
  }
}

void sub_2560F1488(uint64_t a1)
{
}

void sub_2560F14BC(uint64_t a1)
{
}

void sub_2560F14F0()
{
  if (!qword_269F46BD0)
  {
    unint64_t v0 = sub_256177558();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46BD0);
    }
  }
}

void sub_2560F1568()
{
  if (!qword_269F46BD8)
  {
    sub_2560F1F88(255, &qword_269F46BE0, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F19C40]);
    sub_2560F15F8();
    unint64_t v0 = sub_256176B78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46BD8);
    }
  }
}

unint64_t sub_2560F15F8()
{
  unint64_t result = qword_269F46BE8;
  if (!qword_269F46BE8)
  {
    sub_2560F1F88(255, &qword_269F46BE0, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F19C40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46BE8);
  }
  return result;
}

unint64_t sub_2560F167C()
{
  unint64_t result = qword_269F46BF0;
  if (!qword_269F46BF0)
  {
    sub_2560EE4C8(255, &qword_269F46B78, (uint64_t (*)(uint64_t))sub_2560F1148, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46BF0);
  }
  return result;
}

void sub_2560F1704()
{
  if (!qword_269F46BF8)
  {
    sub_2560EE4C8(255, &qword_269F46B78, (uint64_t (*)(uint64_t))sub_2560F1148, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46BF8);
    }
  }
}

void sub_2560F179C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560F17E8()
{
  return sub_2560F1824(&qword_269F46C08, sub_2560F1214, (void (*)(void))sub_2560F18A4);
}

uint64_t sub_2560F1824(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560F18A4()
{
  return sub_2560F1824(&qword_269F46C10, (void (*)(uint64_t))sub_2560F12A0, (void (*)(void))sub_255F971A0);
}

uint64_t sub_2560F18E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560F1950(uint64_t a1, uint64_t a2)
{
  sub_2560F1F88(0, &qword_269F46BE0, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F19C40]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560F19E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560F1A48(uint64_t a1)
{
  sub_2560F1F88(0, &qword_269F46BE0, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F19C40]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2560F1AD8()
{
  unint64_t result = qword_269F46C20;
  if (!qword_269F46C20)
  {
    sub_2560F13FC();
    sub_2560F1B50();
    sub_255F96F04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46C20);
  }
  return result;
}

unint64_t sub_2560F1B50()
{
  unint64_t result = qword_269F46C28;
  if (!qword_269F46C28)
  {
    sub_2560F1488(255);
    sub_2560F1BF8();
    sub_2560F214C(&qword_269F46C40, (void (*)(uint64_t))sub_2560F1568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46C28);
  }
  return result;
}

unint64_t sub_2560F1BF8()
{
  unint64_t result = qword_269F46C30;
  if (!qword_269F46C30)
  {
    sub_2560F14BC(255);
    sub_2560F214C(&qword_269F46C38, (void (*)(uint64_t))sub_2560F14F0);
    sub_2560F214C(&qword_269F42C08, (void (*)(uint64_t))sub_255F6732C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46C30);
  }
  return result;
}

uint64_t sub_2560F1CD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560F1D30()
{
  return sub_2560F1824(&qword_269F46C48, sub_2560F1D80, (void (*)(void))sub_2560F1FD8);
}

void sub_2560F1D80(uint64_t a1)
{
}

void sub_2560F1DA8()
{
  if (!qword_269F46C58)
  {
    sub_2560F123C(255, &qword_269F46C60, (void (*)(uint64_t))sub_2560F1E34);
    sub_255FD68AC(255);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46C58);
    }
  }
}

void sub_2560F1E34()
{
  if (!qword_269F46C68)
  {
    sub_2560F123C(255, &qword_269F46C70, (void (*)(uint64_t))sub_2560F10B4);
    sub_2560F1EBC();
    unint64_t v0 = sub_256176088();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46C68);
    }
  }
}

unint64_t sub_2560F1EBC()
{
  unint64_t result = qword_269F46C78;
  if (!qword_269F46C78)
  {
    sub_2560F123C(255, &qword_269F46C70, (void (*)(uint64_t))sub_2560F10B4);
    sub_2560F214C(&qword_269F46C80, (void (*)(uint64_t))sub_2560F10B4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46C78);
  }
  return result;
}

void sub_2560F1F88(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_2560F1FD8()
{
  unint64_t result = qword_269F46C88;
  if (!qword_269F46C88)
  {
    sub_2560F1DA8();
    sub_2560F2080();
    sub_2560F214C(&qword_269F43E60, sub_255FD68AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46C88);
  }
  return result;
}

unint64_t sub_2560F2080()
{
  unint64_t result = qword_269F46C90;
  if (!qword_269F46C90)
  {
    sub_2560F123C(255, &qword_269F46C60, (void (*)(uint64_t))sub_2560F1E34);
    sub_2560F214C(&qword_269F46C98, (void (*)(uint64_t))sub_2560F1E34);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46C90);
  }
  return result;
}

uint64_t sub_2560F214C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_2560F2194(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_256175868();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    unint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_2560F2558(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *unint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    char v20 = (uint64_t *)((char *)a2 + v18);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[8];
    char v23 = (uint64_t *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    sub_2560F25F0(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_256176AA8();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        sub_2560F258C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      uint64_t v28 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v29 = (char *)v23 + v28;
      char v30 = (char *)v24 + v28;
      uint64_t v31 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      void *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_2560F2558(uint64_t a1)
{
}

void sub_2560F258C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560F25F0(uint64_t a1)
{
}

uint64_t sub_2560F2624(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  sub_2560F2558(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256175A08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  sub_2560F25F0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v13 = v10 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v14 = sub_256176158();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

void *sub_2560F288C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256175868();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  sub_2560F2558(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_256175A08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  sub_2560F25F0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_256176AA8();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_2560F258C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v26 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v27 = (char *)v21 + v26;
    uint64_t v28 = (char *)v22 + v26;
    uint64_t v29 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    void *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2560F2BF8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_2560F589C((uint64_t)a1 + v10, (uint64_t (*)(void))sub_2560F2558);
    sub_2560F2558(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_2560F589C((uint64_t)a1 + v14, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[8];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_2560F589C((uint64_t)a1 + v18, (uint64_t (*)(void))sub_2560F25F0);
    sub_2560F25F0(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_256176AA8();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_2560F258C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      uint64_t v24 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v25 = (char *)v19 + v24;
      uint64_t v26 = (char *)v20 + v24;
      uint64_t v27 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2560F2FBC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_2560F2558(0);
  uint64_t v14 = v13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_256175A08();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v11, v12, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  sub_255F63CB4(0);
  uint64_t v20 = v19;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v17, v18, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  sub_2560F25F0(0);
  uint64_t v26 = v25;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_256176AA8();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27))
    {
      sub_2560F258C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v23, v24, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
    }
    uint64_t v30 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v31 = &v23[v30];
    long long v32 = &v24[v30];
    uint64_t v33 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  return a1;
}

void *sub_2560F333C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  if (a1 != a2)
  {
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_2560F589C((uint64_t)a1 + v11, (uint64_t (*)(void))sub_2560F2558);
    sub_2560F2558(0);
    uint64_t v15 = v14;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256175A08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v12, v13, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    sub_2560F589C((uint64_t)a1 + v17, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    uint64_t v21 = v20;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    sub_2560F589C((uint64_t)a1 + v23, (uint64_t (*)(void))sub_2560F25F0);
    sub_2560F25F0(0);
    uint64_t v27 = v26;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_256176AA8();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v25, 1, v28))
      {
        sub_2560F258C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v24, v25, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v28);
      }
      uint64_t v31 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      long long v32 = &v24[v31];
      uint64_t v33 = &v25[v31];
      uint64_t v34 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560F3720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560F3734);
}

uint64_t sub_2560F3734(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_256175868();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  sub_2560F258C(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  sub_2560F258C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  sub_2560F258C(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[8];

  return v16(v18, a2, v17);
}

uint64_t sub_2560F3988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560F399C);
}

uint64_t sub_2560F399C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_256175868();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  sub_2560F258C(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  sub_2560F258C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  sub_2560F258C(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[8];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for ReflectiveIntervalSelectionHeaderText()
{
  uint64_t result = qword_269F46CA0;
  if (!qword_269F46CA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560F3C3C()
{
  sub_256175868();
  if (v0 <= 0x3F)
  {
    sub_2560F2558(319);
    if (v1 <= 0x3F)
    {
      sub_255F63CB4(319);
      if (v2 <= 0x3F)
      {
        sub_2560F25F0(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_2560F3D88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560F3DA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v180 = a2;
  sub_2560F56C8();
  uint64_t v157 = v3;
  MEMORY[0x270FA5388](v3);
  v161 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F564C(0);
  uint64_t v160 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v162 = (uint64_t)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F55D8(0, &qword_269F46CF0, sub_2560F564C, (void (*)(uint64_t))sub_2560F54F8);
  uint64_t v185 = v7;
  uint64_t v179 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v159 = (uint64_t)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v158 = (uint64_t)&v147 - v10;
  uint64_t v176 = sub_256175A08();
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  uint64_t v174 = (uint64_t)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F5550();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v178 = (uint64_t)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v184 = (uint64_t)&v147 - v15;
  uint64_t v16 = type metadata accessor for LoggingFlowBlendMode();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  v182 = (uint64_t *)((char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v183 = (uint64_t)&v147 - v19;
  uint64_t v173 = sub_256175D98();
  uint64_t v171 = *(void *)(v173 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v173);
  v169 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v188 = (char *)&v147 - v22;
  uint64_t v181 = sub_256176EE8();
  uint64_t v23 = *(void **)(v181 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v181);
  v155 = (char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v156 = (char *)&v147 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v164 = (char *)&v147 - v29;
  MEMORY[0x270FA5388](v28);
  v165 = (char *)&v147 - v30;
  uint64_t v31 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v154 = (uint64_t)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  char v35 = (char *)&v147 - v34;
  sub_2560F5464(0);
  uint64_t v166 = v36 - 8;
  MEMORY[0x270FA5388](v36 - 8);
  char v38 = (char *)&v147 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F5444(0);
  uint64_t v170 = v39 - 8;
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v168 = (uint64_t)&v147 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F5410(0);
  uint64_t v172 = v41 - 8;
  uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
  uint64_t v177 = (uint64_t)&v147 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v167 = (uint64_t)&v147 - v45;
  MEMORY[0x270FA5388](v44);
  uint64_t v189 = (uint64_t)&v147 - v46;
  uint64_t v47 = a1;
  uint64_t v48 = *a1;
  uint64_t v49 = a1[1];
  int v50 = v47;
  v186 = v47;
  uint64_t v190 = v48;
  uint64_t v191 = v49;
  unint64_t v51 = sub_255F5CE90();
  swift_bridgeObjectRetain();
  unint64_t v152 = v51;
  uint64_t v52 = sub_256177028();
  uint64_t v54 = v53;
  uint64_t v163 = v55;
  char v57 = v56 & 1;
  uint64_t v187 = type metadata accessor for ReflectiveIntervalSelectionHeaderText();
  uint64_t v149 = (uint64_t)v50 + *(int *)(v187 + 32);
  sub_25611BE0C((uint64_t)v35);
  sub_256176DE8();
  uint64_t v153 = v31;
  char v58 = sub_256176138();
  v59 = (void (*)(char *, void, uint64_t))v23[13];
  uint64_t v60 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v58 & 1) == 0) {
    uint64_t v60 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v61 = *v60;
  uint64_t v62 = v164;
  uint64_t v63 = v181;
  uint64_t v151 = v23 + 13;
  uint64_t v150 = v59;
  v59(v164, v61, v181);
  uint64_t v64 = (void (*)(char *, char *, uint64_t))v23[4];
  v65 = v165;
  v164 = (char *)(v23 + 4);
  uint64_t v148 = v64;
  v64(v165, v62, v63);
  sub_256176F08();
  swift_release();
  int v66 = (void (*)(char *, uint64_t))v23[1];
  v165 = (char *)(v23 + 1);
  char v147 = v66;
  v66(v65, v63);
  sub_2560F589C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  uint64_t v67 = sub_256176FD8();
  uint64_t v69 = v68;
  char v71 = v70 & 1;
  sub_255F67B2C(v52, v54, v57);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256176E88();
  uint64_t v72 = sub_256176F88();
  uint64_t v74 = v73;
  char v76 = v75 & 1;
  sub_255F67B2C(v67, v69, v71);
  swift_bridgeObjectRelease();
  LODWORD(v190) = sub_256176A48();
  uint64_t v77 = sub_256176FA8();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  char v83 = v82 & 1;
  sub_255F67B2C(v72, v74, v76);
  swift_bridgeObjectRelease();
  sub_25611A114((uint64_t)v188);
  uint64_t v84 = v171;
  uint64_t v85 = v169;
  uint64_t v86 = v173;
  (*(void (**)(char *, void, uint64_t))(v171 + 104))(v169, *MEMORY[0x263F184F8], v173);
  char v87 = sub_256175D88();
  uint64_t v88 = *(void (**)(char *, uint64_t))(v84 + 8);
  v88(v85, v86);
  if (v87) {
    double v89 = 1.0;
  }
  else {
    double v89 = 0.8;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v91 = v182;
  uint64_t *v182 = KeyPath;
  sub_255F63CB4(0);
  uint64_t v93 = v92;
  swift_storeEnumTagMultiPayload();
  uint64_t v94 = (uint64_t)v91;
  uint64_t v95 = v183;
  sub_2560F5738(v94, v183, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  sub_2560F5834(v95, (uint64_t)&v38[*(int *)(v166 + 44)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  *(void *)char v38 = v77;
  *((void *)v38 + 1) = v79;
  v38[16] = v83;
  *((void *)v38 + 3) = v81;
  *((double *)v38 + 4) = v89;
  sub_255F67B94(v77, v79, v83);
  swift_bridgeObjectRetain();
  sub_2560F589C(v95, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  v88(v188, v86);
  sub_255F67B2C(v77, v79, v83);
  swift_bridgeObjectRelease();
  uint64_t v96 = v168;
  sub_2560F5834((uint64_t)v38, v168, (uint64_t (*)(void))sub_2560F5464);
  *(_WORD *)(v96 + *(int *)(v170 + 44)) = 256;
  sub_2560F589C((uint64_t)v38, (uint64_t (*)(void))sub_2560F5464);
  uint64_t v97 = swift_getKeyPath();
  uint64_t v98 = v167;
  sub_2560F5834(v96, v167, (uint64_t (*)(void))sub_2560F5444);
  uint64_t v99 = v98 + *(int *)(v172 + 44);
  *(void *)uint64_t v99 = v97;
  uint64_t v100 = 1;
  *(unsigned char *)(v99 + 8) = 1;
  sub_2560F589C(v96, (uint64_t (*)(void))sub_2560F5444);
  sub_2560F5738(v98, v189, (uint64_t (*)(void))sub_2560F5410);
  uint64_t v101 = v174;
  sub_25611C0E0(v174);
  uint64_t v102 = v101;
  LOBYTE(v101) = sub_256175908();
  (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v102, v176);
  if ((v101 & 1) == 0)
  {
    uint64_t v190 = sub_2560F4E34();
    uint64_t v191 = v103;
    uint64_t v104 = sub_256177028();
    uint64_t v106 = v105;
    char v108 = v107 & 1;
    v188 = (char *)v93;
    uint64_t v109 = v154;
    sub_25611BE0C(v154);
    sub_256176DE8();
    char v110 = sub_256176138();
    uint64_t v111 = (unsigned int *)MEMORY[0x263F1A680];
    if ((v110 & 1) == 0) {
      uint64_t v111 = (unsigned int *)MEMORY[0x263F1A688];
    }
    uint64_t v112 = v155;
    uint64_t v113 = v181;
    v150(v155, *v111, v181);
    int v114 = v156;
    v148(v156, v112, v113);
    sub_256176F08();
    swift_release();
    v147(v114, v113);
    sub_2560F589C(v109, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    uint64_t v115 = sub_256176FD8();
    uint64_t v117 = v116;
    char v119 = v118 & 1;
    sub_255F67B2C(v104, v106, v108);
    swift_release();
    swift_bridgeObjectRelease();
    sub_256176E88();
    uint64_t v120 = sub_256176F88();
    uint64_t v122 = v121;
    char v124 = v123 & 1;
    sub_255F67B2C(v115, v117, v119);
    swift_bridgeObjectRelease();
    LODWORD(v190) = sub_256176A58();
    uint64_t v125 = sub_256176FA8();
    uint64_t v127 = v126;
    LOBYTE(v117) = v128;
    uint64_t v130 = v129;
    sub_255F67B2C(v120, v122, v124);
    swift_bridgeObjectRelease();
    uint64_t v131 = swift_getKeyPath();
    uint64_t v132 = (uint64_t)v182;
    uint64_t *v182 = v131;
    swift_storeEnumTagMultiPayload();
    uint64_t v133 = v183;
    sub_2560F5738(v132, v183, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
    uint64_t v134 = (uint64_t)v161;
    sub_2560F5834(v133, (uint64_t)&v161[*(int *)(v157 + 36)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
    *(void *)uint64_t v134 = v125;
    *(void *)(v134 + 8) = v127;
    *(unsigned char *)(v134 + 16) = v117 & 1;
    *(void *)(v134 + 24) = v130;
    sub_2560F589C(v133, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
    uint64_t v135 = v162;
    sub_2560F5834(v134, v162, (uint64_t (*)(void))sub_2560F56C8);
    *(_WORD *)(v135 + *(int *)(v160 + 36)) = 256;
    sub_2560F589C(v134, (uint64_t (*)(void))sub_2560F56C8);
    uint64_t v136 = swift_getKeyPath();
    uint64_t v137 = v159;
    sub_2560F5834(v135, v159, (uint64_t (*)(void))sub_2560F564C);
    uint64_t v138 = v137 + *(int *)(v185 + 36);
    *(void *)uint64_t v138 = v136;
    *(unsigned char *)(v138 + 8) = 1;
    sub_2560F589C(v135, (uint64_t (*)(void))sub_2560F564C);
    uint64_t v139 = v158;
    sub_2560F57A0(v137, v158);
    sub_2560F57A0(v139, v184);
    uint64_t v100 = 0;
  }
  uint64_t v140 = v184;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v184, v100, 1, v185);
  uint64_t v141 = v189;
  uint64_t v142 = v177;
  sub_2560F5834(v189, v177, (uint64_t (*)(void))sub_2560F5410);
  uint64_t v143 = v178;
  sub_2560F5834(v140, v178, (uint64_t (*)(void))sub_2560F5550);
  uint64_t v144 = v180;
  sub_2560F5834(v142, v180, (uint64_t (*)(void))sub_2560F5410);
  sub_2560F53A0();
  sub_2560F5834(v143, v144 + *(int *)(v145 + 48), (uint64_t (*)(void))sub_2560F5550);
  sub_2560F589C(v140, (uint64_t (*)(void))sub_2560F5550);
  sub_2560F589C(v141, (uint64_t (*)(void))sub_2560F5410);
  sub_2560F589C(v143, (uint64_t (*)(void))sub_2560F5550);
  return sub_2560F589C(v142, (uint64_t (*)(void))sub_2560F5410);
}

uint64_t sub_2560F4E34()
{
  uint64_t v0 = sub_2561756D8();
  uint64_t v38 = *(void *)(v0 - 8);
  uint64_t v39 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v37 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_256175738();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_256175788();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2561757B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v30 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = sub_256175868();
  uint64_t v30 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ReflectiveIntervalSelectionHeaderText();
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v34 + *(int *)(v24 + 20), v20);
  MEMORY[0x25A29DDD0](v25);
  sub_256175778();
  sub_2561757A8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v11, v7);
  uint64_t v27 = v33;
  sub_256175728();
  sub_2561756B8();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v36);
  v26(v14, v7);
  uint64_t v28 = v37;
  sub_2561756C8();
  sub_256175698();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v39);
  v26(v17, v7);
  sub_2560F59D8(&qword_269F44BF8, MEMORY[0x263F07258]);
  sub_256175848();
  v26(v19, v7);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v30);
  return v40;
}

uint64_t sub_2560F52BC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0x4010000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2560F5304();
  return sub_2560F3DA4(v1, a1 + *(int *)(v3 + 44));
}

void sub_2560F5304()
{
  if (!qword_269F46CB0)
  {
    sub_2560F536C(255);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46CB0);
    }
  }
}

void sub_2560F536C(uint64_t a1)
{
}

void sub_2560F53A0()
{
  if (!qword_269F46CC0)
  {
    sub_2560F5410(255);
    sub_2560F5550();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F46CC0);
    }
  }
}

void sub_2560F5410(uint64_t a1)
{
}

void sub_2560F5444(uint64_t a1)
{
}

void sub_2560F5464(uint64_t a1)
{
}

void sub_2560F5498()
{
  if (!qword_269F46CE0)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46CE0);
    }
  }
}

void sub_2560F54F8()
{
  if (!qword_269F42C58)
  {
    unint64_t v0 = sub_256176D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42C58);
    }
  }
}

void sub_2560F5550()
{
  if (!qword_269F46CE8)
  {
    sub_2560F55D8(255, &qword_269F46CF0, sub_2560F564C, (void (*)(uint64_t))sub_2560F54F8);
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46CE8);
    }
  }
}

void sub_2560F55D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2560F564C(uint64_t a1)
{
}

void sub_2560F566C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2560F56C8()
{
  if (!qword_269F45F60)
  {
    type metadata accessor for LoggingFlowBlendMode();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F60);
    }
  }
}

uint64_t sub_2560F5738(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560F57A0(uint64_t a1, uint64_t a2)
{
  sub_2560F55D8(0, &qword_269F46CF0, sub_2560F564C, (void (*)(uint64_t))sub_2560F54F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560F5834(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560F589C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560F58FC()
{
  return sub_2560F59D8(&qword_269F46D00, (void (*)(uint64_t))sub_2560F5944);
}

void sub_2560F5944()
{
  if (!qword_269F46D08)
  {
    sub_2560F536C(255);
    sub_2560F59D8(&qword_269F46D10, sub_2560F536C);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46D08);
    }
  }
}

uint64_t sub_2560F59D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for OnFirstAppear()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for OnFirstAppear(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OnFirstAppear(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OnFirstAppear(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OnFirstAppear()
{
  return &type metadata for OnFirstAppear;
}

uint64_t sub_2560F5B6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560F5B88(void (*a1)(uint64_t))
{
  sub_255FA0F78();
  uint64_t result = sub_256177578();
  if ((v3 & 1) == 0)
  {
    a1(result);
    return sub_256177588();
  }
  return result;
}

uint64_t sub_2560F5C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  char v7 = *((unsigned char *)v2 + 16);
  uint64_t v8 = v2[3];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v5;
  *(unsigned char *)(v9 + 32) = v7;
  *(void *)(v9 + 40) = v8;
  sub_2560F5D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
  sub_2560F5DBC();
  uint64_t v12 = (uint64_t (**)())(a2 + *(int *)(v11 + 36));
  *uint64_t v12 = sub_2560F5D50;
  v12[1] = (uint64_t (*)())v9;
  v12[2] = 0;
  v12[3] = 0;
  swift_retain();

  return swift_retain();
}

uint64_t sub_2560F5D10()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560F5D50()
{
  return sub_2560F5B88(*(void (**)(uint64_t))(v0 + 16));
}

void sub_2560F5D60()
{
  if (!qword_269F46D18)
  {
    sub_25605A398();
    unint64_t v0 = sub_256176A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46D18);
    }
  }
}

void sub_2560F5DBC()
{
  if (!qword_269F46D20)
  {
    sub_2560F5D60();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46D20);
    }
  }
}

unint64_t sub_2560F5E20()
{
  unint64_t result = qword_269F46D28;
  if (!qword_269F46D28)
  {
    sub_2560F5DBC();
    sub_2560F5E98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46D28);
  }
  return result;
}

unint64_t sub_2560F5E98()
{
  unint64_t result = qword_269F46D30;
  if (!qword_269F46D30)
  {
    sub_2560F5D60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46D30);
  }
  return result;
}

uint64_t sub_2560F5EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v59 = a2;
  uint64_t v2 = sub_256175938();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  MEMORY[0x270FA5388](v2);
  char v56 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_256175968();
  uint64_t v4 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_256175918();
  uint64_t v47 = *(void *)(v60 - 8);
  uint64_t v7 = v47;
  MEMORY[0x270FA5388](v60);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F660C(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v54 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v50 = (char *)&v44 - v13;
  uint64_t v53 = sub_256175868();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v44 - v16;
  sub_2560F660C(0, &qword_269F46D38, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v44 - v19;
  sub_2560F660C(0, &qword_269F45188, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = sub_256175568();
  uint64_t v48 = *(void *)(v24 - 8);
  uint64_t v49 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v46 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_256175A08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v23, 1, 1, v26);
  uint64_t v27 = sub_256175A18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v20, 1, 1, v27);
  sub_256175558();
  uint64_t v45 = v17;
  sub_2561758F8();
  uint64_t v28 = v9;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F07780], v60);
  uint64_t v29 = v6;
  uint64_t v30 = v55;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F07800], v55);
  uint64_t v31 = v56;
  uint64_t v32 = v57;
  uint64_t v33 = v58;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x263F077E0], v58);
  uint64_t v34 = (uint64_t)v50;
  uint64_t v35 = v46;
  sub_2561759D8();
  uint64_t v36 = v33;
  uint64_t v37 = v51;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v36);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v29, v30);
  uint64_t v38 = v52;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v60);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v40 = v53;
  v39(v45, v53);
  uint64_t v41 = v35;
  uint64_t v42 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v49);
  sub_25609B1D8(v34, v42);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v38, v61, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v42, 1, v40) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v59, v38, v40);
    return sub_2560240C0(v42);
  }
  else
  {
    v39(v38, v40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v59, v42, v40);
  }
}

void sub_2560F660C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256178448();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_2560F6660(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
    }
    else
    {
      uint64_t v6 = sub_256177DB8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_255F77638();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2560F67F4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result >= 2)
  {
    if (result != 2) {
      return result;
    }
  }
  else
  {
    uint64_t v3 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    sub_255F77638();
  }

  return swift_bridgeObjectRelease();
}

void *sub_2560F6894(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
  }
  else
  {
    uint64_t v4 = sub_256177DB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    sub_255F77638();
    uint64_t v6 = *(int *)(v5 + 48);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v9;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2560F69D8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2560F7844((uint64_t)a1, (uint64_t (*)(void))_s9ViewModelOMa);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
    }
    else
    {
      uint64_t v4 = sub_256177DB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      sub_255F77638();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (void *)((char *)a1 + v6);
      uint64_t v8 = (void *)((char *)a2 + v6);
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s9ViewModelOMa()
{
  uint64_t result = qword_269F46D40;
  if (!qword_269F46D40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_2560F6BA4(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_255F77638();
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_2560F6CD8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2560F7844((uint64_t)a1, (uint64_t (*)(void))_s9ViewModelOMa);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_256177DB8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_255F77638();
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2560F6E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_2560F6E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_2560F6E84()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2560F6E94()
{
  uint64_t result = sub_256177DB8();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v2;
    uint64_t v6 = &unk_2561A7B08;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_2560F6F58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560F77DC(v1, (uint64_t)v8, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_255F77638();
    uint64_t v11 = *(uint64_t *)((char *)v8 + *(int *)(v10 + 48));
    uint64_t v12 = sub_256177DB8();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v12 - 8) + 8))(v8, v12);
    return v11;
  }
  unint64_t v13 = v8[1];
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *v8;
    if (v13 < *(void *)(v14 + 16))
    {
      sub_2560F77DC(v14+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v13, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)&v5[*(int *)(v2 + 24)];
      swift_bridgeObjectRetain();
      sub_2560F7844((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
      return v11;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_2560F7160(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F77DC(v2, (uint64_t)v6, (uint64_t (*)(void))_s9ViewModelOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_255F77638();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_256177DB8();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
      uint64_t v9 = 1;
    }
    else
    {
      uint64_t v9 = *((void *)v6 + 1);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_256177DB8();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
    uint64_t v9 = 0;
  }
  return v9 == *a1;
}

uint64_t sub_2560F72D8(uint64_t *a1)
{
  uint64_t v3 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560F77DC((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v9 = *v5;
    uint64_t v8 = v5[1];
    uint64_t v10 = *a1;
    if (v8 == *a1)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_2560F7844((uint64_t)v1, (uint64_t (*)(void))_s9ViewModelOMa);
      *uint64_t v1 = v9;
      v1[1] = v10;
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_256177DB8();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
}

uint64_t sub_2560F7430()
{
  uint64_t v1 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F77DC(v0, (uint64_t)v3, (uint64_t (*)(void))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v6 = *(void *)(*(void *)v3 + 16);
    swift_bridgeObjectRelease();
    return v6 - 1;
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_256177DB8();
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    return 0;
  }
}

uint64_t sub_2560F7544()
{
  uint64_t v1 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560F77DC((uint64_t)v0, (uint64_t)v3, (uint64_t (*)(void))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v7 = *v3;
    uint64_t v6 = v3[1];
    if (v6 >= sub_2560F7430())
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_2560F7844((uint64_t)v0, (uint64_t (*)(void))_s9ViewModelOMa);
      *uint64_t v0 = v7;
      v0[1] = v6 + 1;
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_256177DB8();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
}

uint64_t sub_2560F7694()
{
  uint64_t v1 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560F77DC((uint64_t)v0, (uint64_t)v3, (uint64_t (*)(void))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v7 = *v3;
    uint64_t v6 = v3[1];
    uint64_t v8 = v6 - 1;
    if (v6 < 1)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_2560F7844((uint64_t)v0, (uint64_t (*)(void))_s9ViewModelOMa);
      *uint64_t v0 = v7;
      v0[1] = v8;
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_256177DB8();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
}

uint64_t sub_2560F77DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560F7844(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560F78A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_256177DB8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F77DC(v2, (uint64_t)v10, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(char *, uint64_t *, uint64_t))(v12 + 32);
    v16(v14, v10, v11);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a1, v14, v11);
  }
  unint64_t v17 = v10[1];
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = *v10;
    if (v17 < *(void *)(v18 + 16))
    {
      sub_2560F77DC(v18+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a1, &v7[*(int *)(v4 + 20)], v11);
      return sub_2560F7844((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2560F7B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v39 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = sub_256177DB8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560F77DC(a1, (uint64_t)v19, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_2560F7844(a1, (uint64_t (*)(void))_s9ViewModelOMa);
    sub_255F77638();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v19, v13);
    uint64_t v21 = *(void *)(a2 + 16) - 1;
LABEL_17:
    *a3 = a2;
    a3[1] = v21;
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v44 = v14;
  uint64_t v41 = a1;
  unint64_t v22 = v19[1];
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v23 = *v19;
  if (v22 >= *(void *)(v23 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v39 = v17;
  uint64_t v40 = a3;
  unint64_t v24 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v25 = *(void *)(v45 + 72);
  sub_2560F77DC(v23 + v24 + v25 * v22, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v16, &v12[*(int *)(v6 + 20)], v13);
  sub_2560F7844((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  uint64_t v26 = a2;
  uint64_t v27 = *(void *)(a2 + 16);
  if (!v27)
  {
LABEL_12:
    sub_2560F7844(v41, (uint64_t (*)(void))_s9ViewModelOMa);
    unint64_t v30 = 0;
    a2 = v26;
    uint64_t v35 = v44;
LABEL_13:
    uint64_t v21 = v30 - 1;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v13);
    a3 = v40;
    goto LABEL_17;
  }
  uint64_t v45 = a2;
  uint64_t v28 = a2 + v24;
  sub_2560F80A4((unint64_t *)&unk_269F467B0);
  uint64_t v21 = 0;
  uint64_t v29 = v26 + v24;
  do
  {
    sub_256178488();
    if (!v46)
    {
      sub_2560F7844(v41, (uint64_t (*)(void))_s9ViewModelOMa);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v13);
      goto LABEL_16;
    }
    ++v21;
    v29 += v25;
  }
  while (v27 != v21);
  uint64_t v26 = v45;
  unint64_t v30 = *(void *)(v45 + 16);
  if (!v30) {
    goto LABEL_12;
  }
  uint64_t v31 = v28;
  uint64_t v32 = v28;
  uint64_t v33 = v43;
  sub_2560F77DC(v32, v43, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  sub_2560F80A4((unint64_t *)&unk_269F476D0);
  char v34 = sub_256177E48();
  uint64_t result = sub_2560F7844(v33, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  if (v34)
  {
    sub_2560F7844(v41, (uint64_t (*)(void))_s9ViewModelOMa);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v13);
    uint64_t v21 = 0;
LABEL_16:
    a3 = v40;
    a2 = v45;
    goto LABEL_17;
  }
  uint64_t v35 = v44;
  a2 = v45;
  if (v30 <= *(void *)(v45 + 16))
  {
    uint64_t v21 = v30 - 1;
    uint64_t v36 = v31 + (v30 - 1) * v25;
    uint64_t v37 = v42;
    sub_2560F77DC(v36, v42, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
    char v38 = sub_256177D28();
    sub_2560F7844(v41, (uint64_t (*)(void))_s9ViewModelOMa);
    sub_2560F7844(v37, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
    if (v38) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2560F80A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256177DB8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2560F80E8()
{
  v24[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_256175B68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  uint64_t v6 = (void *)sub_2561757F8();
  v24[0] = 0;
  id v7 = objc_msgSend(v5, sel_ageWithCurrentDate_error_, v6, v24);

  id v8 = v24[0];
  if (!v7)
  {
    uint64_t v9 = v8;
    uint64_t v10 = (void *)sub_2561755D8();

    swift_willThrow();
    sub_256175B48();
    id v11 = v10;
    id v12 = v10;
    uint64_t v13 = sub_256175B58();
    os_log_type_t v14 = sub_256178218();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      v24[0] = v16;
      *(_DWORD *)uint64_t v15 = 136446466;
      uint64_t v17 = sub_256178978();
      uint64_t v23 = sub_255FB29A8(v17, v18, (uint64_t *)v24);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v23 = (uint64_t)v10;
      id v19 = v10;
      sub_255FB3160();
      uint64_t v20 = sub_256177F08();
      uint64_t v23 = sub_255FB29A8(v20, v21, (uint64_t *)v24);
      sub_256178458();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v13, v14, "[%{public}s] Could not fetch age from data source with error %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v16, -1, -1);
      MEMORY[0x25A2A1E90](v15, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v7;
}

uint64_t sub_2560F841C()
{
  v26[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_256175B68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  v26[0] = 0;
  id v6 = objc_msgSend(v5, sel_biologicalSexWithError_, v26);
  if (v6)
  {
    id v7 = v6;
    id v8 = v26[0];
    id v9 = (id)HKAnalyticsPropertyValueForBiologicalSex();
    uint64_t v10 = sub_256177EE8();
  }
  else
  {
    id v11 = v26[0];
    id v12 = (void *)sub_2561755D8();

    swift_willThrow();
    sub_256175B48();
    id v13 = v12;
    id v14 = v12;
    uint64_t v15 = sub_256175B58();
    os_log_type_t v16 = sub_256178218();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      unint64_t v18 = (void *)swift_slowAlloc();
      v26[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v19 = sub_256178978();
      uint64_t v25 = sub_255FB29A8(v19, v20, (uint64_t *)v26);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v25 = (uint64_t)v12;
      id v21 = v12;
      sub_255FB3160();
      uint64_t v22 = sub_256177F08();
      uint64_t v25 = sub_255FB29A8(v22, v23, (uint64_t *)v26);
      sub_256178458();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v15, v16, "[%{public}s] Could not fetch age from data source with error %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v18, -1, -1);
      MEMORY[0x25A2A1E90](v17, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v10;
}

uint64_t sub_2560F8770()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MentalHealthGenericFieldsProvider()
{
  return self;
}

uint64_t *sub_2560F87CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    id v11 = (uint64_t *)((char *)a2 + v9);
    sub_2560F8A78(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_2560F8A78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v17 = (char *)v10 + v16;
      unint64_t v18 = (char *)v11 + v16;
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = *(int *)(a3 + 28);
    id v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    char *v21 = *v22;
    *((void *)v21 + 1) = *((void *)v22 + 1);
  }
  swift_retain();
  return v4;
}

void sub_2560F8A78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560F8ADC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_2560F8A78(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_2560F8C6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  sub_2560F8A78(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_2560F8A78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v16 = (char *)v10 + v14;
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *uint64_t v19 = *v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_retain();
  return a1;
}

void *sub_2560F8ECC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560FBEA0((uint64_t)a1 + v6, (uint64_t)&qword_269F435C0, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560F8A78);
    sub_2560F8A78(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_2560F8A78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2560F9194(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_2560F8A78(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176AA8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_2560F8A78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_2560F93D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560FBEA0((uint64_t)a1 + v8, (uint64_t)&qword_269F435C0, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560F8A78);
    sub_2560F8A78(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v11);
    uint64_t v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_256176AA8();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
      {
        sub_2560F8A78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v9, v10, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v18 = &v9[v17];
      uint64_t v19 = &v10[v17];
      uint64_t v20 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v21 = *(int *)(a3 + 28);
  uint64_t v22 = (char *)a1 + v21;
  unint64_t v23 = (char *)a2 + v21;
  *uint64_t v22 = *v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_release();
  return a1;
}

uint64_t sub_2560F9688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560F969C);
}

uint64_t sub_2560F969C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560F8A78(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2560F977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560F9790);
}

uint64_t sub_2560F9790(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2560F8A78(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ExpandableInfoSectionHeader()
{
  uint64_t result = qword_269F46D50;
  if (!qword_269F46D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560F98B4()
{
  sub_2560F8A78(319, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2560F9984()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560F99A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v113 = a1;
  uint64_t v111 = sub_256176638();
  uint64_t v110 = *(void *)(v111 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v111);
  char v108 = (char *)v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v109 = (char *)v106 - v4;
  uint64_t v120 = sub_2561777B8();
  uint64_t v118 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v115 = (uint64_t (*)(uint64_t))((char *)v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x263F18C18];
  char v119 = (uint64_t (*)(uint64_t))MEMORY[0x263F1B7B8];
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_2560FBB28(0, &qword_269F46990, MEMORY[0x263F1B7B8], MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
  uint64_t v117 = v8 - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v123 = (uint64_t)v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v116 = (char *)v106 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v124 = (uint64_t)v106 - v13;
  uint64_t v14 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560FB180();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v114 = (uint64_t (*)(uint64_t))sub_2560FB180;
  sub_2560FBB28(0, &qword_269F46DC0, (uint64_t (*)(uint64_t))sub_2560FB180, v6, v7);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v122 = (uint64_t)v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v106 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v106 - v27;
  *(void *)uint64_t v19 = sub_256176668();
  *((void *)v19 + 1) = 0;
  v19[16] = 0;
  sub_2560FB6E4();
  sub_2560FA35C(v1, (uint64_t)&v19[*(int *)(v29 + 44)]);
  char v30 = sub_256176DA8();
  uint64_t v31 = type metadata accessor for ExpandableInfoSectionHeader();
  uint64_t v32 = (char *)v1 + *(int *)(v31 + 24);
  sub_25611AFC4((uint64_t)v16);
  uint64_t v112 = type metadata accessor for AssociationSelectionPhaseSpecs;
  sub_2560FB77C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_2560FBE38((uint64_t)v19, (uint64_t)v26, (uint64_t (*)(void))sub_2560FB180);
  uint64_t v41 = &v26[*(int *)(v21 + 44)];
  *uint64_t v41 = v30;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_2560FB77C((uint64_t)v19, (uint64_t (*)(void))sub_2560FB180);
  uint64_t v121 = v28;
  uint64_t v42 = (uint64_t)v28;
  uint64_t v43 = v1;
  sub_2560FB828((uint64_t)v26, v42, &qword_269F46DC0, v114);
  uint64_t v44 = (char *)v115;
  sub_2561777A8();
  LOBYTE(v21) = sub_256176DA8();
  uint64_t v45 = (char *)v1 + *(int *)(v31 + 28);
  uint64_t v46 = *((void *)v45 + 1);
  LOBYTE(v125) = *v45;
  uint64_t v126 = v46;
  sub_2560FB7DC(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  v106[1] = v32;
  sub_25611AFC4((uint64_t)v16);
  char v107 = v16;
  sub_2560FB77C((uint64_t)v16, (uint64_t (*)(void))v112);
  sub_256175D48();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v55 = v118;
  uint64_t v56 = (uint64_t)v116;
  uint64_t v57 = v120;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v116, v44, v120);
  uint64_t v58 = v56 + *(int *)(v117 + 44);
  *(unsigned char *)uint64_t v58 = v21;
  *(void *)(v58 + 8) = v48;
  *(void *)(v58 + 16) = v50;
  *(void *)(v58 + 24) = v52;
  *(void *)(v58 + 32) = v54;
  *(unsigned char *)(v58 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v57);
  sub_2560FB828(v56, v124, &qword_269F46990, v119);
  uint64_t v59 = *((void *)v45 + 1);
  LOBYTE(v125) = *v45;
  uint64_t v126 = v59;
  sub_256177578();
  int v114 = 0;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v116 = 0;
  uint64_t v117 = 0;
  uint64_t v62 = 0;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  uint64_t v115 = 0;
  v65 = 0;
  uint64_t v66 = 0;
  if (v127 == 1)
  {
    uint64_t v67 = v43[3];
    uint64_t v125 = v43[2];
    uint64_t v126 = v67;
    sub_255F5CE90();
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_256177028();
    uint64_t v70 = v69;
    char v72 = v71 & 1;
    sub_256176E18();
    uint64_t v73 = sub_256176FD8();
    uint64_t v75 = v74;
    char v77 = v76;
    swift_release();
    sub_255F67B2C(v68, v70, v72);
    swift_bridgeObjectRelease();
    sub_2561774B8();
    int v114 = (uint64_t (*)(uint64_t))sub_256176F98();
    uint64_t v60 = v78;
    LOBYTE(v68) = v79;
    uint64_t v117 = v80;
    swift_release();
    sub_255F67B2C(v73, v75, v77 & 1);
    swift_bridgeObjectRelease();
    unsigned __int8 v81 = sub_256176DA8();
    uint64_t v82 = (uint64_t)v107;
    sub_25611AFC4((uint64_t)v107);
    sub_2560FB77C(v82, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_256175D48();
    uint64_t v63 = v83;
    uint64_t v64 = v84;
    uint64_t v115 = v86;
    uint64_t v116 = v85;
    char v87 = v109;
    sub_256176628();
    uint64_t v88 = v110;
    uint64_t v89 = v111;
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v108, v87, v111);
    sub_2560FBCAC(&qword_269F45D80, MEMORY[0x263F196B8]);
    uint64_t v66 = sub_256175F58();
    LOBYTE(v125) = v68 & 1;
    unsigned __int8 v127 = 0;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
    uint64_t v61 = (uint64_t (*)(uint64_t))v125;
    v65 = (uint64_t (*)(uint64_t))v127;
    uint64_t v62 = v81;
  }
  uint64_t v118 = v62;
  char v119 = v61;
  uint64_t v120 = v64;
  uint64_t v90 = v122;
  uint64_t v91 = v65;
  sub_2560FB8B4((uint64_t)v121, v122, &qword_269F46DC0, (uint64_t (*)(uint64_t))sub_2560FB180);
  uint64_t v92 = (uint64_t (*)(uint64_t))MEMORY[0x263F1B7B8];
  uint64_t v93 = v123;
  sub_2560FB8B4(v124, v123, &qword_269F46990, MEMORY[0x263F1B7B8]);
  uint64_t v94 = v63;
  uint64_t v95 = v113;
  sub_2560FB8B4(v90, v113, &qword_269F46DC0, (uint64_t (*)(uint64_t))sub_2560FB180);
  sub_2560FB940();
  uint64_t v96 = v60;
  uint64_t v97 = v114;
  uint64_t v99 = v98;
  sub_2560FB8B4(v93, v95 + *(int *)(v98 + 48), &qword_269F46990, v92);
  uint64_t v100 = (uint64_t (**)(uint64_t))(v95 + *(int *)(v99 + 64));
  *uint64_t v100 = v97;
  v100[1] = (uint64_t (*)(uint64_t))v96;
  uint64_t v102 = (uint64_t (*)(uint64_t))v118;
  char v101 = (char)v119;
  uint64_t v104 = v116;
  uint64_t v103 = v117;
  v100[2] = v119;
  v100[3] = (uint64_t (*)(uint64_t))v103;
  v100[4] = v102;
  v100[5] = v94;
  v100[6] = (uint64_t (*)(uint64_t))v120;
  v100[7] = (uint64_t (*)(uint64_t))v104;
  v100[8] = v115;
  v100[9] = v91;
  v100[10] = (uint64_t (*)(uint64_t))v66;
  sub_2560FBB94((uint64_t)v97, v96, v101, v103);
  sub_2560FBBE4(v124, &qword_269F46990, v92);
  sub_2560FBBE4((uint64_t)v121, &qword_269F46DC0, (uint64_t (*)(uint64_t))sub_2560FB180);
  sub_2560FBC5C((uint64_t)v97, v96, (char)v119, v103);
  sub_2560FBBE4(v123, &qword_269F46990, v92);
  return sub_2560FBBE4(v122, &qword_269F46DC0, (uint64_t (*)(uint64_t))sub_2560FB180);
}

uint64_t sub_2560FA35C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v3 = type metadata accessor for ExpandableInfoSectionHeader();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v112 = v3 - 8;
  uint64_t v115 = v4;
  uint64_t v114 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v113 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560FB420();
  uint64_t v122 = v6;
  uint64_t v120 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v116 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x263F18C18];
  uint64_t v121 = sub_2560FB420;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_2560FBB28(0, &qword_269F46D90, (uint64_t (*)(uint64_t))sub_2560FB420, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
  uint64_t v118 = v10 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v117 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v119 = (uint64_t)&v99 - v13;
  uint64_t v14 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v111 = (uint64_t)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LoggingFlowBlendMode();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v102 = (uint64_t *)((char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v104 = (uint64_t)&v99 - v19;
  uint64_t v20 = sub_256176EE8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for LoggingFlowBlendMode;
  sub_2560FB53C(0, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v99 = v24 - 8;
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v99 - v25;
  sub_2560FB39C();
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v101 = (uint64_t)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560FB310();
  uint64_t v105 = v29 - 8;
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v103 = (uint64_t)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_2560FB310;
  sub_2560FBB28(0, &qword_269F46D78, (uint64_t (*)(uint64_t))sub_2560FB310, v8, v9);
  uint64_t v107 = v31 - 8;
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v106 = (uint64_t)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v108 = (uint64_t)&v99 - v34;
  uint64_t v100 = a1;
  uint64_t v35 = *a1;
  uint64_t v36 = a1[1];
  uint64_t v124 = v35;
  uint64_t v125 = v36;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_256177028();
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  sub_256176F38();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F1A680], v20);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v42 = sub_256176FD8();
  uint64_t v44 = v43;
  LOBYTE(v21) = v45;
  swift_release();
  sub_255F67B2C(v37, v39, v41);
  swift_bridgeObjectRelease();
  LODWORD(v124) = sub_256176A48();
  HIDWORD(v124) = 1059648963;
  sub_2560FBCF4(0, (unint64_t *)&qword_269F44E70, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F19910]);
  sub_2560FBD44();
  uint64_t v46 = sub_256176FA8();
  uint64_t v48 = v47;
  LOBYTE(v39) = v49;
  uint64_t v51 = v50;
  sub_255F67B2C(v42, v44, v21 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = v102;
  *uint64_t v102 = KeyPath;
  sub_2560F8A78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = (uint64_t)v53;
  uint64_t v55 = v104;
  sub_2560FBDD0(v54, v104, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  sub_2560FBE38(v55, (uint64_t)&v26[*(int *)(v99 + 44)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  *(void *)uint64_t v26 = v46;
  *((void *)v26 + 1) = v48;
  v26[16] = v39 & 1;
  *((void *)v26 + 3) = v51;
  sub_2560FB77C(v55, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v56 = sub_2561778F8();
  uint64_t v57 = v101;
  sub_25611768C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v101, 0.0, 1, 0.0, 1, v56, v58);
  sub_2560FBEA0((uint64_t)v26, (uint64_t)&qword_269F45F60, (uint64_t)v109, MEMORY[0x263F1A830], (uint64_t (*)(void))sub_2560FB53C);
  uint64_t v59 = swift_getKeyPath();
  uint64_t v60 = v103;
  sub_2560FBE38(v57, v103, (uint64_t (*)(void))sub_2560FB39C);
  uint64_t v61 = v60 + *(int *)(v105 + 44);
  *(void *)uint64_t v61 = v59;
  *(unsigned char *)(v61 + 8) = 0;
  sub_2560FB77C(v57, (uint64_t (*)(void))sub_2560FB39C);
  LOBYTE(v57) = sub_256176DC8();
  uint64_t v62 = v111;
  uint64_t v63 = (uint64_t)v100;
  sub_25611AFC4(v111);
  sub_2560FB77C(v62, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v72 = v106;
  sub_2560FBE38(v60, v106, (uint64_t (*)(void))sub_2560FB310);
  uint64_t v73 = v72 + *(int *)(v107 + 44);
  *(unsigned char *)uint64_t v73 = v57;
  *(void *)(v73 + 8) = v65;
  *(void *)(v73 + 16) = v67;
  *(void *)(v73 + 24) = v69;
  *(void *)(v73 + 32) = v71;
  *(unsigned char *)(v73 + 40) = 0;
  sub_2560FB77C(v60, (uint64_t (*)(void))sub_2560FB310);
  uint64_t v74 = v108;
  uint64_t v75 = (uint64_t (*)(uint64_t))v110;
  sub_2560FB828(v72, v108, &qword_269F46D78, (uint64_t (*)(uint64_t))v110);
  uint64_t v76 = v63;
  uint64_t v77 = v113;
  sub_2560FBE38(v76, v113, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  unint64_t v78 = (*(unsigned __int8 *)(v115 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  uint64_t v79 = swift_allocObject();
  sub_2560FBDD0(v77, v79 + v78, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  sub_2560FB484();
  sub_2560FB5A0();
  uint64_t v80 = v116;
  sub_2561775C8();
  LOBYTE(v57) = sub_256176DC8();
  sub_25611AFC4(v62);
  sub_2560FB77C(v62, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v89 = v120;
  uint64_t v90 = (uint64_t)v117;
  uint64_t v91 = v122;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v80, v122);
  uint64_t v92 = v90 + *(int *)(v118 + 44);
  *(unsigned char *)uint64_t v92 = v57;
  *(void *)(v92 + 8) = v82;
  *(void *)(v92 + 16) = v84;
  *(void *)(v92 + 24) = v86;
  *(void *)(v92 + 32) = v88;
  *(unsigned char *)(v92 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v80, v91);
  uint64_t v93 = v119;
  uint64_t v94 = (uint64_t (*)(uint64_t))v121;
  sub_2560FB828(v90, v119, &qword_269F46D90, (uint64_t (*)(uint64_t))v121);
  sub_2560FB8B4(v74, v72, &qword_269F46D78, v75);
  uint64_t v95 = v94;
  sub_2560FB8B4(v93, v90, &qword_269F46D90, v94);
  uint64_t v96 = v123;
  sub_2560FB8B4(v72, v123, &qword_269F46D78, v75);
  sub_2560FB234();
  sub_2560FB8B4(v90, v96 + *(int *)(v97 + 48), &qword_269F46D90, v95);
  sub_2560FBBE4(v93, &qword_269F46D90, v95);
  sub_2560FBBE4(v74, &qword_269F46D78, v75);
  sub_2560FBBE4(v90, &qword_269F46D90, v95);
  return sub_2560FBBE4(v72, &qword_269F46D78, v75);
}

uint64_t sub_2560FAEC4()
{
  return swift_release();
}

uint64_t sub_2560FAF30()
{
  return swift_release();
}

uint64_t sub_2560FB008@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_256176EE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2561774E8();
  sub_256176F38();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1A680], v2);
  uint64_t v7 = sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t KeyPath = swift_getKeyPath();
  id v9 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t result = MEMORY[0x25A29FE80](v9);
  *a1 = v6;
  a1[1] = KeyPath;
  a1[2] = v7;
  a1[3] = result;
  return result;
}

void sub_2560FB180()
{
  if (!qword_269F46D60)
  {
    sub_2560F8A78(255, &qword_269F46D68, (uint64_t (*)(uint64_t))sub_2560FB234, MEMORY[0x263F1BAC8]);
    sub_2560FC1D8(&qword_269F46DB8, &qword_269F46D68, (uint64_t (*)(uint64_t))sub_2560FB234);
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46D60);
    }
  }
}

void sub_2560FB234()
{
  if (!qword_269F46D70)
  {
    uint64_t v0 = MEMORY[0x263F18C18];
    uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
    sub_2560FBB28(255, &qword_269F46D78, (uint64_t (*)(uint64_t))sub_2560FB310, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_2560FBB28(255, &qword_269F46D90, (uint64_t (*)(uint64_t))sub_2560FB420, v0, v1);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v3) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F46D70);
    }
  }
}

void sub_2560FB310()
{
  if (!qword_269F46D80)
  {
    sub_2560FB39C();
    sub_2560FB7DC(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46D80);
    }
  }
}

void sub_2560FB39C()
{
  if (!qword_269F46D88)
  {
    sub_2560FB53C(255, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46D88);
    }
  }
}

void sub_2560FB420()
{
  if (!qword_269F46D98)
  {
    sub_2560FB484();
    sub_2560FB5A0();
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46D98);
    }
  }
}

void sub_2560FB484()
{
  if (!qword_269F46DA0)
  {
    sub_2560FB53C(255, (unint64_t *)&qword_269F469B0, (void (*)(uint64_t))sub_255F6732C);
    sub_2560FBCF4(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46DA0);
    }
  }
}

void sub_2560FB53C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2560FB5A0()
{
  unint64_t result = qword_269F46DA8;
  if (!qword_269F46DA8)
  {
    sub_2560FB484();
    sub_2560FB618();
    sub_255F67518();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46DA8);
  }
  return result;
}

unint64_t sub_2560FB618()
{
  unint64_t result = qword_269F46DB0;
  if (!qword_269F46DB0)
  {
    sub_2560FB53C(255, (unint64_t *)&qword_269F469B0, (void (*)(uint64_t))sub_255F6732C);
    sub_2560FBCAC(&qword_269F42C08, (void (*)(uint64_t))sub_255F6732C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46DB0);
  }
  return result;
}

void sub_2560FB6E4()
{
  if (!qword_269F46DC8)
  {
    sub_2560F8A78(255, &qword_269F46D68, (uint64_t (*)(uint64_t))sub_2560FB234, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46DC8);
    }
  }
}

uint64_t sub_2560FB77C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2560FB7DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560FB828(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2560FBB28(0, a3, a4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2560FB8B4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2560FBB28(0, a3, a4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_2560FB940()
{
  if (!qword_269F46DD0)
  {
    uint64_t v0 = MEMORY[0x263F18C18];
    uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
    sub_2560FBB28(255, &qword_269F46DC0, (uint64_t (*)(uint64_t))sub_2560FB180, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_2560FBB28(255, &qword_269F46990, MEMORY[0x263F1B7B8], v0, v1);
    sub_2560F8A78(255, &qword_269F46DD8, (uint64_t (*)(uint64_t))sub_2560FBA5C, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v3) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F46DD0);
    }
  }
}

void sub_2560FBA5C()
{
  if (!qword_269F46DE0)
  {
    sub_2560FBCF4(255, &qword_269F441D0, MEMORY[0x263F1A830], MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_2560FBB28(255, &qword_269F45D60, MEMORY[0x263F198B0], MEMORY[0x263F198A8], MEMORY[0x263F19DC0]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46DE0);
    }
  }
}

void sub_2560FBB28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_2560FBB94(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_255F67B94(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2560FBBE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2560FBB28(0, a2, a3, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560FBC5C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_255F67B2C(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2560FBCAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560FBCF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_2560FBD44()
{
  unint64_t result = qword_269F44E78;
  if (!qword_269F44E78)
  {
    sub_2560FBCF4(255, (unint64_t *)&qword_269F44E70, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F19910]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44E78);
  }
  return result;
}

uint64_t sub_2560FBDD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560FBE38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560FBEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_2560FBF08()
{
  uint64_t v1 = type metadata accessor for ExpandableInfoSectionHeader();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  sub_2560F8A78(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560FC118()
{
  type metadata accessor for ExpandableInfoSectionHeader();

  return sub_2560FAEC4();
}

uint64_t sub_2560FC180()
{
  return sub_2560FAF30();
}

uint64_t sub_2560FC19C()
{
  return sub_2560FC1D8(&qword_269F46DE8, &qword_269F46DF0, (uint64_t (*)(uint64_t))sub_2560FB940);
}

uint64_t sub_2560FC1D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2560F8A78(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_2560FC23C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_256100F50(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v82 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v80 = v8;
      uint64_t v79 = v6;
      if (v82(a2, 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      uint64_t v81 = *v16;
      (*v16)(v13, v14, v15);
      *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_256175D98();
      unint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v78(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      if (v82((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v22, v23, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v7);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v81(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      if (v82((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v7);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v81(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      if (v82((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v32, v33, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v81(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      if (v82((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v81(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      if (v82((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v7);
      }
      char v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v81(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      if (v82((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v80;
      }
      else
      {
        uint64_t v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v81(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if (v82((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v81(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v82((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v81(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      if (v82((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v81(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      if (v82((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v81(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      if (v82((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v81(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v79;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
  }
  return a1;
}

uint64_t sub_2560FD060(uint64_t a1)
{
  sub_256100F50(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    int v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + v5[5];
    uint64_t v7 = sub_256176158();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v34(v6, v7);
    uint64_t v8 = a1 + v5[7];
    uint64_t v9 = sub_256175D98();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    v33(v8, v9);
    uint64_t v10 = a1 + v5[8];
    if (!v4(v10, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v2);
    }
    uint64_t v11 = _s6StylesV8TimelineVMa(0);
    v34(v10 + *(int *)(v11 + 20), v7);
    uint64_t v12 = a1 + v5[9];
    if (!v4(v12, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
    }
    uint64_t v13 = _s6StylesV6NoDataVMa(0);
    v34(v12 + *(int *)(v13 + 20), v7);
    uint64_t v14 = a1 + v5[10];
    if (!v4(v14, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v2);
    }
    uint64_t v15 = _s6StylesV11PlaceholderVMa(0);
    v34(v14 + *(int *)(v15 + 20), v7);
    uint64_t v16 = a1 + v5[11];
    if (!v4(v16, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v2);
    }
    uint64_t v17 = _s6StylesV6SymbolVMa(0);
    v34(v16 + *(int *)(v17 + 20), v7);
    uint64_t v18 = a1 + v5[12];
    if (!v4(v18, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v18, v2);
    }
    uint64_t v19 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v34(v18 + *(int *)(v19 + 20), v7);
    v33(v18 + *(int *)(v19 + 28), v9);
    uint64_t v20 = a1 + v5[13];
    if (!v4(v20, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v20, v2);
    }
    uint64_t v21 = _s6StylesV5EmptyVMa(0);
    v34(v20 + *(int *)(v21 + 20), v7);
    uint64_t v22 = a1 + v5[14];
    if (!v4(v22, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v22, v2);
    }
    uint64_t v23 = _s6StylesV5DailyVMa(0);
    v34(v22 + *(int *)(v23 + 20), v7);
    uint64_t v24 = a1 + v5[15];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV9MomentaryVMa(0);
    v34(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v5[16];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV6HeaderVMa(0);
    v34(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v5[17];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV11ChartButtonVMa(0);
    v34(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v5[18];
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v30, v2);
    }
    uint64_t v31 = v30 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v34)(v31, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_2560FD6C4(void *a1, void *a2, uint64_t a3)
{
  sub_256100F50(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v80 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v78 = v7;
    if (v80(a2, 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v79 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v76(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v80((void *)((char *)a2 + v19), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v79(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v77 = a3;
    if (v80((void *)((char *)a2 + v24), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v79(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v80((void *)((char *)a2 + v29), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v79(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v80((void *)((char *)a2 + v34), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v79(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v80((void *)((char *)a2 + v39), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v40, 0, 1, v6);
    }
    uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v79(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v76(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    char v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v80((void *)((char *)a2 + v44), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v78;
    }
    else
    {
      uint64_t v48 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v79(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v80((void *)((char *)a2 + v50), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v79(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v80((void *)((char *)a2 + v55), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v77;
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v79(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v80((void *)((char *)a2 + v60), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v79(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v80((void *)((char *)a2 + v65), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v79(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v80((void *)((char *)a2 + v70), 1, v6))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v79(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_2560FE498(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_256100F50(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v80 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v77 = a3;
      uint64_t v78 = v7;
      if (v80(a2, 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_256176158();
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v79 = *v14;
      (*v14)(v11, v12, v13);
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      uint64_t v15 = v9[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_256175D98();
      uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v76(v16, v17, v18);
      uint64_t v19 = v9[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v80((void *)((char *)a2 + v19), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v20, v21, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v20, 0, 1, v6);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v79(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      uint64_t v24 = v9[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      if (v80((void *)((char *)a2 + v24), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v25, v26, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v25, 0, 1, v6);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v79(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v9[10];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      if (v80((void *)((char *)a2 + v29), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v30, v31, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v79(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      uint64_t v34 = v9[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v80((void *)((char *)a2 + v34), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v35, v36, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v6);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v79(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      uint64_t v39 = v9[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v80((void *)((char *)a2 + v39), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v40, v41, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v40, 0, 1, v6);
      }
      uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v79(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v76(&v40[v43[7]], &v41[v43[7]], v18);
      uint64_t v44 = v9[13];
      char v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v80((void *)((char *)a2 + v44), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v78;
      }
      else
      {
        uint64_t v48 = v78;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v45, v46, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v6);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v79(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v9[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v80((void *)((char *)a2 + v50), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v79(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v9[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v80((void *)((char *)a2 + v55), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v79(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      uint64_t v60 = v9[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v80((void *)((char *)a2 + v60), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v79(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      uint64_t v65 = v9[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v80((void *)((char *)a2 + v65), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v79(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      uint64_t v70 = v9[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v80((void *)((char *)a2 + v70), 1, v6))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v79(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v77;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *sub_2560FF274(char *a1, char *a2, uint64_t a3)
{
  sub_256100F50(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v80 = v9;
    if (v82(a2, 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v81 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v78(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v82(&a2[v21], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v81(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v79 = a3;
    if (v82(&a2[v26], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v81(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v82(&a2[v31], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v81(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v82(&a2[v36], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v81(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v82(&a2[v41], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
    }
    char v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v81(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v78(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v82(&a2[v46], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v80;
    }
    else
    {
      uint64_t v50 = v80;
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v81(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v82(&a2[v52], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v81(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v82(&a2[v57], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v79;
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v81(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v82(&a2[v62], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v81(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v82(&a2[v67], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v81(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v82(&a2[v72], 1, v8))
    {
      sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v81(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_256100050(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_256100F50(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176AA8();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      uint64_t v80 = v9;
      if (v82(a2, 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      uint64_t v81 = *v16;
      (*v16)(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      uint64_t v17 = v11[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_256175D98();
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v78(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if (v82(&a2[v21], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v81(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v79 = a3;
      if (v82(&a2[v26], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v81(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if (v82(&a2[v31], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v81(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v82(&a2[v36], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v81(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      if (v82(&a2[v41], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
      }
      char v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v81(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v82(&a2[v46], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v80;
      }
      else
      {
        uint64_t v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v81(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v82(&a2[v52], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v81(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v82(&a2[v57], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      a3 = v79;
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v81(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v82(&a2[v62], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v81(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v82(&a2[v67], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v81(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v82(&a2[v72], 1, v8))
      {
        sub_256100F50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v81(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_256100E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256100E50);
}

uint64_t sub_256100E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_256100F50(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

void sub_256100F50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256100FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256100FC8);
}

void sub_256100FC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_256100F50(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t _s20EntryPlaceholderViewVMa()
{
  uint64_t result = qword_269F46DF8;
  if (!qword_269F46DF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256101100()
{
  sub_256100F50(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2561011C4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2561011E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  sub_256101C64();
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  int v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v38 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  sub_256101E88();
  uint64_t v39 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25610201C(0);
  uint64_t v41 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v42 = (uint64_t)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_256176788();
  char v20 = sub_256176D88();
  sub_256119CA0((uint64_t)v13);
  sub_2561020A8((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v22 = result;
    objc_msgSend(result, sel_isiPad);

    sub_2561778E8();
    sub_256175F38();
    uint64_t v52 = v19;
    uint64_t v53 = 0;
    char v54 = 0;
    char v55 = v20;
    long long v56 = 0u;
    long long v57 = 0u;
    char v58 = 1;
    uint64_t v59 = v47;
    char v60 = v48;
    uint64_t v61 = v49;
    char v62 = v50;
    long long v63 = v51;
    sub_256119CA0((uint64_t)v11);
    sub_2561020A8((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
    sub_2561778E8();
    sub_2561176FC(0.0, 1, 0.0, 1, 373.0, 0, 0.0, 1, (uint64_t)v45, 0.0, 1, 0.0, 1);
    uint64_t v23 = sub_2561778E8();
    uint64_t v25 = v24;
    sub_2561016AC(v2, (uint64_t)v5);
    uint64_t v26 = (uint64_t *)&v5[*(int *)(v40 + 36)];
    *uint64_t v26 = v23;
    v26[1] = v25;
    sub_256102108((uint64_t)v5, (uint64_t)&v16[*(int *)(v39 + 36)], (uint64_t (*)(void))sub_256101C64);
    long long v27 = v45[13];
    *((_OWORD *)v16 + 12) = v45[12];
    *((_OWORD *)v16 + 13) = v27;
    *((void *)v16 + 28) = v46;
    long long v28 = v45[9];
    *((_OWORD *)v16 + 8) = v45[8];
    *((_OWORD *)v16 + 9) = v28;
    long long v29 = v45[11];
    *((_OWORD *)v16 + 10) = v45[10];
    *((_OWORD *)v16 + 11) = v29;
    long long v30 = v45[5];
    *((_OWORD *)v16 + 4) = v45[4];
    *((_OWORD *)v16 + 5) = v30;
    long long v31 = v45[7];
    *((_OWORD *)v16 + 6) = v45[6];
    *((_OWORD *)v16 + 7) = v31;
    long long v32 = v45[1];
    *(_OWORD *)uint64_t v16 = v45[0];
    *((_OWORD *)v16 + 1) = v32;
    long long v33 = v45[3];
    *((_OWORD *)v16 + 2) = v45[2];
    *((_OWORD *)v16 + 3) = v33;
    sub_2561020A8((uint64_t)v5, (uint64_t (*)(void))sub_256101C64);
    sub_256119CA0((uint64_t)v11);
    sub_2561020A8((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256177468();
    uint64_t v34 = sub_256177498();
    swift_release();
    uint64_t v35 = v43;
    sub_256119CA0(v43);
    sub_2561020A8(v35, type metadata accessor for StateOfMindTimeline.Styles);
    uint64_t v36 = v42;
    sub_256102108((uint64_t)v16, v42, (uint64_t (*)(void))sub_256101E88);
    uint64_t v37 = (uint64_t *)(v36 + *(int *)(v41 + 36));
    *uint64_t v37 = v34;
    v37[1] = 0x4028000000000000;
    v37[2] = 0;
    v37[3] = 0;
    sub_2561020A8((uint64_t)v16, (uint64_t (*)(void))sub_256101E88);
    return (id)sub_256102170(v36, v44, (uint64_t (*)(void))sub_25610201C);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2561016AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2561762B8();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (_OWORD *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - v12;
  sub_256101CC8();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256119CA0((uint64_t)v13);
  sub_2561020A8((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v18 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v19 = *MEMORY[0x263F19860];
  uint64_t v20 = sub_2561766E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
  __asm { FMOV            V0.2D, #18.0 }
  *uint64_t v7 = _Q0;
  if (*(unsigned char *)(a1 + *(int *)(_s20EntryPlaceholderViewVMa() + 20)) == 1)
  {
    sub_256101964(&v30);
  }
  else
  {
    sub_256119CA0((uint64_t)v11);
    sub_2561020A8((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
    id v26 = objc_msgSend(self, sel_systemGray5Color);
    *(void *)&long long v30 = MEMORY[0x25A29FF60](v26);
  }
  uint64_t v27 = sub_256175F48();
  sub_256102108((uint64_t)v7, (uint64_t)v17, MEMORY[0x263F19048]);
  *(void *)&v17[*(int *)(v15 + 36)] = v27;
  sub_2561020A8((uint64_t)v7, MEMORY[0x263F19048]);
  return sub_256102170((uint64_t)v17, a2, (uint64_t (*)(void))sub_256101CC8);
}

double sub_256101964@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v23 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0) - 8;
  uint64_t v1 = MEMORY[0x270FA5388](v23);
  uint64_t v22 = (uint64_t)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - v3;
  uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v22 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v22 - v13;
  sub_2561021D8();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2561A0040;
  sub_256119CA0((uint64_t)v14);
  sub_2561020A8((uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256177458();
  sub_256177498();
  swift_release();
  *(void *)(v15 + 32) = sub_256177868();
  *(void *)(v15 + 40) = v16;
  sub_256119CA0((uint64_t)v12);
  sub_256102108((uint64_t)&v12[*(int *)(v6 + 56)], (uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_2561020A8((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  sub_25604A3E0();
  sub_2561020A8((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_256119CA0((uint64_t)v9);
  uint64_t v17 = v22;
  sub_256102108((uint64_t)&v9[*(int *)(v6 + 56)], v22, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_2561020A8((uint64_t)v9, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561020A8(v17, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  *(void *)(v15 + 48) = sub_256177868();
  *(void *)(v15 + 56) = v18;
  MEMORY[0x25A2A0300](v15);
  sub_2561779B8();
  sub_2561779C8();
  sub_2561760B8();
  double result = *(double *)&v25;
  long long v20 = v26;
  uint64_t v21 = v24;
  *uint64_t v24 = v25;
  v21[1] = v20;
  *((void *)v21 + 4) = v27;
  return result;
}

void sub_256101C64()
{
  if (!qword_269F46E08)
  {
    sub_256101CC8();
    sub_256101D5C();
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46E08);
    }
  }
}

void sub_256101CC8()
{
  if (!qword_269F46E10)
  {
    sub_2561762B8();
    sub_256101FCC(255, &qword_269F46E18, MEMORY[0x263F188A8], MEMORY[0x263F18898], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46E10);
    }
  }
}

unint64_t sub_256101D5C()
{
  unint64_t result = qword_269F46E20;
  if (!qword_269F46E20)
  {
    sub_256101CC8();
    sub_2561024DC(&qword_269F42DD0, MEMORY[0x263F19048]);
    sub_256101E04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46E20);
  }
  return result;
}

unint64_t sub_256101E04()
{
  unint64_t result = qword_269F46E28;
  if (!qword_269F46E28)
  {
    sub_256101FCC(255, &qword_269F46E18, MEMORY[0x263F188A8], MEMORY[0x263F18898], MEMORY[0x263F1A180]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46E28);
  }
  return result;
}

void sub_256101E88()
{
  if (!qword_269F46E30)
  {
    sub_256101EF0(255);
    sub_256101C64();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46E30);
    }
  }
}

void sub_256101EF0(uint64_t a1)
{
}

void sub_256101F18(uint64_t a1)
{
}

void sub_256101F40()
{
  if (!qword_269F46E48)
  {
    sub_256101FCC(255, &qword_269F46E50, MEMORY[0x263F1BA08], MEMORY[0x263F1BA00], MEMORY[0x263F1B6D0]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46E48);
    }
  }
}

void sub_256101FCC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_25610201C(uint64_t a1)
{
}

void sub_256102044(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2561020A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256102108(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256102170(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2561021D8()
{
  if (!qword_269F46E60)
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46E60);
    }
  }
}

uint64_t sub_256102230()
{
  return sub_2561023D8(&qword_269F46E68, sub_25610201C, (void (*)(void))sub_256102280);
}

unint64_t sub_256102280()
{
  unint64_t result = qword_269F46E70;
  if (!qword_269F46E70)
  {
    sub_256101E88();
    sub_2561023D8(&qword_269F46E78, sub_256101EF0, (void (*)(void))sub_256102360);
    sub_2561024DC(&qword_269F46E98, (void (*)(uint64_t))sub_256101C64);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46E70);
  }
  return result;
}

uint64_t sub_256102360()
{
  return sub_2561023D8(&qword_269F46E80, sub_256101F18, (void (*)(void))sub_25610239C);
}

uint64_t sub_25610239C()
{
  return sub_2561023D8(&qword_269F46E88, (void (*)(uint64_t))sub_256101F40, (void (*)(void))sub_256102458);
}

uint64_t sub_2561023D8(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256102458()
{
  unint64_t result = qword_269F46E90;
  if (!qword_269F46E90)
  {
    sub_256101FCC(255, &qword_269F46E50, MEMORY[0x263F1BA08], MEMORY[0x263F1BA00], MEMORY[0x263F1B6D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46E90);
  }
  return result;
}

uint64_t sub_2561024DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_256102524(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v7 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_256175FC8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256176AA8();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_256102828(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v20 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v21 = (char *)v14 + v20;
      uint64_t v22 = (char *)v15 + v20;
      uint64_t v23 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_256102828(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25610288C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_256175FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_256102A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256175FC8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_256176AA8();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_256102828(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = (char *)v14 + v18;
    uint64_t v21 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_256102D08(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256175FC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256104F9C((uint64_t)a1 + v11, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_256102828(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = (char *)v13 + v18;
      uint64_t v21 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_256102FC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256175FC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v15 = v14;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_256176AA8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
    {
      sub_256102828(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v13, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    uint64_t v19 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v20 = &v12[v19];
    uint64_t v21 = &v13[v19];
    uint64_t v22 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_256103240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256175FC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (char *)(a1 + v11);
    uint64_t v13 = (char *)(a2 + v11);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256104F9C(a1 + v11, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    uint64_t v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176AA8();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17))
      {
        sub_256102828(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      uint64_t v20 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v21 = &v12[v20];
      uint64_t v22 = &v13[v20];
      uint64_t v23 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2561034F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25610350C);
}

uint64_t sub_25610350C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_256175FC8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_256102828(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_256103668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25610367C);
}

uint64_t sub_25610367C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_256175FC8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_256102828(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for NotificationsSetupPhaseContent()
{
  uint64_t result = qword_269F46EA0;
  if (!qword_269F46EA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256103824()
{
  sub_256175FC8();
  if (v0 <= 0x3F)
  {
    sub_256102828(319, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_256103934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256103950@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v175 = a2;
  uint64_t v3 = type metadata accessor for NotificationsSetupPhaseContent();
  uint64_t v4 = v3 - 8;
  uint64_t v166 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v167 = v5;
  v169 = &v153[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v170 = type metadata accessor for ReminderView(0);
  MEMORY[0x270FA5388](v170);
  uint64_t v173 = (uint64_t *)&v153[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256104EC0(0);
  uint64_t v171 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v174 = (void (*)(uint64_t))&v153[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256104E24(0, &qword_269F46ED0, sub_256104E98, (void (*)(uint64_t))sub_256072364);
  uint64_t v172 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v189 = &v153[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v187 = &v153[-v12];
  uint64_t v184 = sub_256176EE8();
  uint64_t v188 = *(void *)(v184 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v184);
  v164 = &v153[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v165 = &v153[-v16];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v180 = &v153[-v18];
  MEMORY[0x270FA5388](v17);
  uint64_t v181 = &v153[-v19];
  uint64_t v20 = type metadata accessor for LoggingFlowBlendMode();
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (uint64_t *)&v153[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  uint64_t v185 = &v153[-v24];
  uint64_t v162 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A620];
  long long v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_256102828(0, &qword_269F43500, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v26 - 8);
  long long v28 = &v153[-v27];
  uint64_t v178 = (void (*)(uint64_t))sub_2560E0DFC;
  uint64_t v177 = (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode;
  sub_256104E24(0, &qword_269F469A0, (void (*)(uint64_t))sub_2560E0DFC, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v30 = v29 - 8;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  long long v33 = &v153[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = &v153[-v34];
  uint64_t v182 = type metadata accessor for NotificationsSetupPhaseSpecs();
  uint64_t v36 = MEMORY[0x270FA5388](v182);
  uint64_t v163 = &v153[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v179 = &v153[-v39];
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (void (*)(uint64_t))&v153[-v40];
  sub_256175FA8();
  double v43 = v42;
  uint64_t v44 = *(int *)(v4 + 36);
  uint64_t v168 = a1;
  char v45 = (void (*)(uint64_t))(a1 + v44);
  sub_25611B298((uint64_t)v41);
  sub_256105374((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  uint64_t v161 = sub_2561774E8();
  sub_25611B298((uint64_t)v41);
  sub_256105374((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_256176E78();
  uint64_t v46 = sub_256176E58();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v28, 1, 1, v46);
  uint64_t v47 = sub_256176E98();
  sub_256104F9C((uint64_t)v28, &qword_269F43500, v162, v25);
  uint64_t KeyPath = swift_getKeyPath();
  LODWORD(v25) = sub_256176A58();
  uint64_t *v23 = swift_getKeyPath();
  sub_256102828(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v49 = (uint64_t)v23;
  char v50 = v185;
  sub_25610523C(v49, (uint64_t)v185, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  sub_25610530C((uint64_t)v50, (uint64_t)&v33[*(int *)(v30 + 44)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  *(void *)long long v33 = v161;
  *((void *)v33 + 1) = KeyPath;
  *((void *)v33 + 2) = v47;
  *((_DWORD *)v33 + 6) = v25;
  sub_256105374((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v185 = v35;
  v186 = v33;
  uint64_t v51 = (uint64_t)v33;
  uint64_t v52 = v45;
  sub_2561053D4(v51, (uint64_t)v35, &qword_269F469A0, v178, v177);
  sub_25611B298((uint64_t)v41);
  uint64_t v183 = (void (*)())v41;
  sub_256105374((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v53 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_2561755B8();
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();

  uint64_t v190 = v54;
  uint64_t v191 = v56;
  uint64_t v177 = (void (*)(uint64_t))sub_255F5CE90();
  uint64_t v57 = sub_256177028();
  uint64_t v59 = v58;
  uint64_t v178 = v60;
  char v62 = v61 & 1;
  long long v63 = v179;
  sub_25611B298((uint64_t)v179);
  sub_256176E48();
  char v64 = sub_256176138();
  uint64_t v65 = v188;
  uint64_t v66 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v188 + 104);
  uint64_t v157 = v66;
  uint64_t v159 = v188 + 104;
  unsigned int v67 = *MEMORY[0x263F1A680];
  unsigned int v156 = *MEMORY[0x263F1A680];
  unsigned int v68 = *MEMORY[0x263F1A688];
  unsigned int v158 = *MEMORY[0x263F1A688];
  if (v64) {
    uint64_t v69 = v67;
  }
  else {
    uint64_t v69 = v68;
  }
  uint64_t v70 = v180;
  uint64_t v176 = (uint64_t (*)())v52;
  uint64_t v71 = v184;
  v66(v180, v69, v184);
  uint64_t v72 = *(uint64_t (**)(uint64_t))(v65 + 32);
  uint64_t v161 = v65 + 32;
  uint64_t v162 = v72;
  uint64_t v73 = v181;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v72)(v181, v70, v71);
  sub_256176F08();
  swift_release();
  uint64_t v74 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
  uint64_t v188 = v65 + 8;
  uint64_t v160 = v74;
  v74(v73, v71);
  v155 = type metadata accessor for NotificationsSetupPhaseSpecs;
  sub_256105374((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  uint64_t v75 = sub_256176FD8();
  uint64_t v77 = v76;
  char v79 = v78 & 1;
  sub_255F67B2C(v57, v59, v62);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v180 = (unsigned char *)sub_256176FC8();
  uint64_t v179 = v80;
  int v154 = v81;
  uint64_t v181 = v82;
  sub_255F67B2C(v75, v77, v79);
  swift_bridgeObjectRelease();
  uint64_t v178 = (void (*)(uint64_t))swift_getKeyPath();
  uint64_t v83 = (void (*)(uint64_t))v183;
  sub_25611B298((uint64_t)v183);
  sub_256105374((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  id v84 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v85 = sub_2561755B8();
  uint64_t v87 = v86;
  swift_bridgeObjectRelease();

  uint64_t v190 = v85;
  uint64_t v191 = v87;
  uint64_t v88 = sub_256177028();
  uint64_t v90 = v89;
  char v92 = v91;
  uint64_t v93 = v163;
  sub_25611B298((uint64_t)v163);
  sub_256176E18();
  if (sub_256176138()) {
    uint64_t v94 = v156;
  }
  else {
    uint64_t v94 = v158;
  }
  uint64_t v95 = v164;
  uint64_t v96 = v184;
  v157(v164, v94, v184);
  LODWORD(v177) = v154 & 1;
  double v97 = v43 * 0.09;
  uint64_t v98 = v165;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v162)(v165, v95, v96);
  sub_256176F08();
  swift_release();
  v160(v98, v96);
  uint64_t v99 = v155;
  sub_256105374((uint64_t)v93, (uint64_t (*)(void))v155);
  v164 = (unsigned char *)sub_256176FD8();
  uint64_t v184 = v100;
  v165 = v101;
  LODWORD(v182) = v102 & 1;
  sub_255F67B2C(v88, v90, v92 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v188 = swift_getKeyPath();
  uint64_t v103 = (void (*)(uint64_t))v183;
  sub_25611B298((uint64_t)v183);
  sub_256105374((uint64_t)v103, (uint64_t (*)(void))v99);
  uint64_t v104 = v169;
  sub_25610530C(v168, (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseContent);
  unint64_t v105 = (*(unsigned __int8 *)(v166 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
  uint64_t v106 = swift_allocObject();
  sub_25610523C((uint64_t)v104, v106 + v105, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseContent);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_256105558(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  uint64_t v107 = sub_2561760E8();
  uint64_t v108 = v173;
  *uint64_t v173 = v107;
  v108[1] = v109;
  v108[2] = (uint64_t)sub_2561052A4;
  v108[3] = v106;
  v108[4] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F55050]), sel_init);
  uint64_t v110 = (uint64_t *)((char *)v108 + *(int *)(v170 + 28));
  *uint64_t v110 = swift_getKeyPath();
  sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v110) = sub_256176D88();
  sub_256175D48();
  uint64_t v112 = v111;
  uint64_t v114 = v113;
  uint64_t v116 = v115;
  uint64_t v118 = v117;
  uint64_t v119 = v174;
  sub_25610530C((uint64_t)v108, (uint64_t)v174, type metadata accessor for ReminderView);
  uint64_t v120 = (char *)v119 + *(int *)(v171 + 36);
  *uint64_t v120 = (char)v110;
  *((void *)v120 + 1) = v112;
  *((void *)v120 + 2) = v114;
  *((void *)v120 + 3) = v116;
  *((void *)v120 + 4) = v118;
  v120[40] = 0;
  sub_256105374((uint64_t)v108, type metadata accessor for ReminderView);
  uint64_t v121 = sub_2561778F8();
  uint64_t v122 = v189;
  sub_2561178C4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v189, 0.0, 1, 0.0, 1, v121, v123);
  uint64_t v124 = sub_2561778E8();
  uint64_t v126 = v125;
  uint64_t v127 = (uint64_t)&v122[*(int *)(v172 + 36)];
  sub_25606EC54(v127);
  sub_256072364();
  uint64_t v129 = (uint64_t *)(v127 + *(int *)(v128 + 36));
  *uint64_t v129 = v124;
  v129[1] = v126;
  sub_256105374((uint64_t)v119, (uint64_t (*)(void))sub_256104EC0);
  uint64_t v130 = (uint64_t)v122;
  uint64_t v131 = v187;
  uint64_t v174 = sub_256104E98;
  sub_2561053D4((uint64_t)v122, (uint64_t)v187, &qword_269F46ED0, sub_256104E98, (void (*)(uint64_t))sub_256072364);
  uint64_t v132 = (uint64_t)v186;
  uint64_t v183 = sub_2560E0DFC;
  uint64_t v176 = type metadata accessor for LoggingFlowBlendMode;
  sub_256105444((uint64_t)v185, (uint64_t)v186, &qword_269F469A0, (void (*)(uint64_t))sub_2560E0DFC, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  LOBYTE(v122) = (_BYTE)v177;
  LOBYTE(v190) = (_BYTE)v177;
  sub_256105444((uint64_t)v131, v130, &qword_269F46ED0, sub_256104E98, (void (*)(uint64_t))sub_256072364);
  uint64_t v133 = v175;
  *uint64_t v175 = v97;
  *((unsigned char *)v133 + 8) = 0;
  sub_256104C74();
  uint64_t v135 = v134;
  sub_256105444(v132, (uint64_t)v133 + v134[12], &qword_269F469A0, (void (*)(uint64_t))sub_2560E0DFC, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v136 = (char *)v133 + v135[16];
  *(void *)uint64_t v136 = 0x4034000000000000;
  v136[8] = 0;
  uint64_t v137 = (char *)v133 + v135[20];
  uint64_t v138 = v180;
  uint64_t v139 = v181;
  uint64_t v140 = v179;
  *(void *)uint64_t v137 = v180;
  *((void *)v137 + 1) = v140;
  v137[16] = (char)v122;
  *((void *)v137 + 3) = v139;
  *((_WORD *)v137 + 16) = 256;
  *((void *)v137 + 5) = v178;
  v137[48] = 1;
  uint64_t v141 = (char *)v133 + v135[24];
  *(void *)uint64_t v141 = 0x402E000000000000;
  v141[8] = 0;
  uint64_t v142 = (char *)v133 + v135[28];
  uint64_t v143 = (uint64_t)v164;
  uint64_t v144 = v184;
  *(void *)uint64_t v142 = v164;
  *((void *)v142 + 1) = v144;
  LOBYTE(v122) = v182;
  v142[16] = v182;
  *((void *)v142 + 3) = v165;
  *((_WORD *)v142 + 16) = 256;
  uint64_t v145 = v189;
  *((void *)v142 + 5) = v188;
  v142[48] = 1;
  uint64_t v146 = (char *)v133 + v135[32];
  *(void *)uint64_t v146 = 0x402E000000000000;
  v146[8] = 0;
  uint64_t v147 = (uint64_t)v133 + v135[36];
  uint64_t v148 = v174;
  sub_256105444((uint64_t)v145, v147, &qword_269F46ED0, v174, (void (*)(uint64_t))sub_256072364);
  sub_255F67B94((uint64_t)v138, (uint64_t)v140, (char)v177);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v149 = v143;
  sub_255F67B94(v143, v144, (char)v122);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2561054B4((uint64_t)v187, &qword_269F46ED0, v148, (void (*)(uint64_t))sub_256072364);
  uint64_t v150 = (void (*)(uint64_t))v183;
  uint64_t v151 = (void (*)(uint64_t))v176;
  sub_2561054B4((uint64_t)v185, &qword_269F469A0, (void (*)(uint64_t))v183, (void (*)(uint64_t))v176);
  sub_2561054B4((uint64_t)v189, &qword_269F46ED0, v148, (void (*)(uint64_t))sub_256072364);
  sub_255F67B2C(v149, v184, v182);
  swift_release();
  swift_bridgeObjectRelease();
  sub_255F67B2C((uint64_t)v180, (uint64_t)v179, v190);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_2561054B4((uint64_t)v186, &qword_269F469A0, v150, v151);
}

uint64_t sub_256104B98@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_256104BDC();
  return sub_256103950(v1, (double *)(a1 + *(int *)(v3 + 44)));
}

void sub_256104BDC()
{
  if (!qword_269F46EB0)
  {
    sub_256102828(255, &qword_269F46EB8, (uint64_t (*)(uint64_t))sub_256104C74, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46EB0);
    }
  }
}

void sub_256104C74()
{
  if (!qword_269F46EC0)
  {
    sub_256104E24(255, &qword_269F469A0, (void (*)(uint64_t))sub_2560E0DFC, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_256104D6C();
    sub_256104E24(255, &qword_269F46ED0, sub_256104E98, (void (*)(uint64_t))sub_256072364);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F46EC0);
    }
  }
}

void sub_256104D6C()
{
  if (!qword_269F46EC8)
  {
    sub_256104F4C(255, (unint64_t *)&qword_269F43530, MEMORY[0x263F1A830], MEMORY[0x263F190F0], MEMORY[0x263F18E28]);
    sub_255F67978(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46EC8);
    }
  }
}

void sub_256104E24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_256104E98(uint64_t a1)
{
}

void sub_256104EC0(uint64_t a1)
{
}

void sub_256104EE8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256104F4C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_256104F9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_256102828(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_256105010()
{
  uint64_t v1 = (int *)(type metadata accessor for NotificationsSetupPhaseContent() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = sub_256175FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[9];
  sub_256102828(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = v5 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v9 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_25610523C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2561052A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for NotificationsSetupPhaseContent() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 16))();
}

uint64_t sub_25610530C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256105374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2561053D4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_256104E24(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_256105444(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_256104E24(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_2561054B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  sub_256104E24(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_256105510()
{
  return sub_256105558(&qword_269F46EE8, (void (*)(uint64_t))sub_2561055A0);
}

uint64_t sub_256105558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2561055A0()
{
  if (!qword_269F46EF0)
  {
    sub_256102828(255, &qword_269F46EB8, (uint64_t (*)(uint64_t))sub_256104C74, MEMORY[0x263F1BAC8]);
    sub_256105634();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46EF0);
    }
  }
}

unint64_t sub_256105634()
{
  unint64_t result = qword_269F46EF8;
  if (!qword_269F46EF8)
  {
    sub_256102828(255, &qword_269F46EB8, (uint64_t (*)(uint64_t))sub_256104C74, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46EF8);
  }
  return result;
}

uint64_t *sub_2561056BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2561758A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)a1 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2561057F4(uint64_t a1)
{
  uint64_t v2 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25610589C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_256105984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_256105AB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_256105B54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  void *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_256105C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256105C54);
}

uint64_t sub_256105C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2561758A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_256105D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256105D2C);
}

uint64_t sub_256105D2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2561758A8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t _s5EntryVMa()
{
  uint64_t result = qword_269F46F00;
  if (!qword_269F46F00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256105E38()
{
  uint64_t result = sub_2561758A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_256105EE0()
{
  return sub_256107100(&qword_269F44C00, MEMORY[0x263F07508]);
}

uint64_t sub_256105F28(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2560E86DC(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      id v5 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v6 = sub_256177EE8();
      uint64_t v8 = v7;

      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1) {
        sub_2560E86DC(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

int *sub_256106014@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2561758A8();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_UUID);
  sub_256175898();

  id v8 = objc_msgSend(a1, sel_reflectiveInterval);
  if (v8 == (id)2)
  {
    objc_msgSend(a1, sel_valenceClassification);
    objc_msgSend(a1, sel_reflectiveInterval);
    unint64_t v9 = (void *)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
  }
  else
  {
    if (v8 != (id)1)
    {
      uint64_t v30 = 0;
      unint64_t v12 = 0xE000000000000000;
      goto LABEL_7;
    }
    objc_msgSend(a1, sel_valenceClassification);
    unint64_t v9 = (void *)HKUILocalizedStringForValenceClassification();
  }
  id v10 = v9;
  uint64_t v30 = sub_256177EE8();
  unint64_t v12 = v11;

LABEL_7:
  uint64_t v13 = sub_2561064B4();
  uint64_t v15 = v14;
  uint64_t v16 = sub_256106624();
  uint64_t v18 = v17;
  uint64_t v19 = sub_2561068D8();
  uint64_t v21 = v20;
  objc_msgSend(a1, sel_valence);
  uint64_t v23 = v22;

  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(a2, v6, v32);
  uint64_t result = (int *)_s5EntryVMa();
  uint64_t v25 = (uint64_t *)(a2 + result[5]);
  *uint64_t v25 = v30;
  v25[1] = v12;
  uint64_t v26 = (uint64_t *)(a2 + result[6]);
  *uint64_t v26 = v13;
  v26[1] = v15;
  uint64_t v27 = (uint64_t *)(a2 + result[7]);
  *uint64_t v27 = v16;
  v27[1] = v18;
  long long v28 = (uint64_t *)(a2 + result[8]);
  *long long v28 = v19;
  v28[1] = v21;
  *(void *)(a2 + result[9]) = v23;
  return result;
}

uint64_t sub_25610622C()
{
  return sub_256178918();
}

uint64_t sub_256106384()
{
  return sub_256178928();
}

uint64_t sub_2561063C8()
{
  return sub_256178928();
}

uint64_t sub_256106404@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2561758A8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_25610646C()
{
  return sub_256107100(&qword_269F46F10, (void (*)(uint64_t))_s5EntryVMa);
}

uint64_t sub_2561064B4()
{
  uint64_t v0 = sub_2561781D8();
  sub_256018860(v0);
  swift_bridgeObjectRelease();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v1 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255FCD9E0();
  sub_256107100((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  uint64_t v2 = sub_256177E28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_256106624()
{
  sub_256106FB8(0, &qword_269F462E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v20 - v2;
  uint64_t v4 = *(void *)(sub_2561781E8() + 16);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v0, sel_context);
  if (!v5)
  {
    if (!v4) {
      return 0;
    }
    return sub_256106D1C();
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_256177EE8();
  uint64_t v9 = v8;

  if (!v4)
  {
    if (v9) {
      return v7;
    }
    else {
      return 0;
    }
  }
  if (!v9) {
    return sub_256106D1C();
  }
  uint64_t v10 = sub_2561758C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  sub_256106FB8(0, (unint64_t *)&qword_269F462F0, (uint64_t (*)(uint64_t))sub_25610701C, MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2561A0040;
  uint64_t v12 = sub_256106D1C();
  uint64_t v14 = v13;
  uint64_t v15 = MEMORY[0x263F8D310];
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  unint64_t v16 = sub_2560A8BA8();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  *(void *)(v11 + 96) = v15;
  *(void *)(v11 + 104) = v16;
  *(void *)(v11 + 64) = v16;
  *(void *)(v11 + 72) = v7;
  *(void *)(v11 + 80) = v9;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v17 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  uint64_t v18 = sub_256177EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_256107074((uint64_t)v3);
  return v18;
}

uint64_t sub_2561068D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_256175758();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v30 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_256175708();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_256175718();
  uint64_t v6 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2561757B8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)&v25 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t v28 = sub_256175868();
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = objc_msgSend(v1, sel_startDate);
  sub_256175818();

  MEMORY[0x25A29DDD0]();
  sub_2561756F8();
  sub_2561756E8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v29);
  sub_2561756A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v13, v9);
  uint64_t v23 = v30;
  sub_256175748();
  sub_256175798();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);
  v22(v16, v9);
  sub_256107100(&qword_269F44BF8, MEMORY[0x263F07258]);
  sub_256175848();
  v22(v18, v9);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v28);
  return v33;
}

uint64_t sub_256106D1C()
{
  uint64_t v0 = sub_2561781E8();
  sub_256105F28(v0);
  swift_bridgeObjectRelease();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v1 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255FCD9E0();
  sub_256107100((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  uint64_t v2 = sub_256177E28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_256106E8C(uint64_t a1, uint64_t a2)
{
  if ((sub_256175888() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)_s5EntryVMa();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = sub_256178828(), result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = v4[6];
    uint64_t v13 = *(void *)(a1 + v12);
    uint64_t v14 = *(void *)(a1 + v12 + 8);
    uint64_t v15 = (void *)(a2 + v12);
    BOOL v16 = v13 == *v15 && v14 == v15[1];
    if (v16 || (char v17 = sub_256178828(), result = 0, (v17 & 1) != 0))
    {
      uint64_t v18 = v4[7];
      uint64_t v19 = *(void *)(a1 + v18);
      uint64_t v20 = *(void *)(a1 + v18 + 8);
      id v21 = (void *)(a2 + v18);
      BOOL v22 = v19 == *v21 && v20 == v21[1];
      if (v22 || (v23 = sub_256178828(), BOOL result = 0, (v23 & 1) != 0))
      {
        uint64_t v24 = v4[8];
        uint64_t v25 = *(void *)(a1 + v24);
        uint64_t v26 = *(void *)(a1 + v24 + 8);
        uint64_t v27 = (void *)(a2 + v24);
        if (v25 == *v27 && v26 == v27[1]) {
          return *(double *)(a1 + v4[9]) == *(double *)(a2 + v4[9]);
        }
        char v29 = sub_256178828();
        BOOL result = 0;
        if (v29) {
          return *(double *)(a1 + v4[9]) == *(double *)(a2 + v4[9]);
        }
      }
    }
  }
  return result;
}

void sub_256106FB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_25610701C()
{
  unint64_t result = qword_269F462F8;
  if (!qword_269F462F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F462F8);
  }
  return result;
}

uint64_t sub_256107074(uint64_t a1)
{
  sub_256106FB8(0, &qword_269F462E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256107100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256107148@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256107320(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (int *)_s16EntryMomentsViewVMa();
  unint64_t v8 = (uint64_t *)((char *)a3 + v7[5]);
  *unint64_t v8 = swift_getKeyPath();
  sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)a3 + v7[6]) = a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_256095C94(0, a2[2] + 1, 1, a2);
    a2 = (void *)result;
  }
  unint64_t v11 = a2[2];
  unint64_t v10 = a2[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_256095C94((void *)(v10 > 1), v11 + 1, 1, a2);
    a2 = (void *)result;
  }
  a2[2] = v11 + 1;
  uint64_t v12 = &a2[2 * v11];
  v12[4] = 0x7261746E656D6F4DLL;
  v12[5] = 0xE900000000000079;
  *(uint64_t *)((char *)a3 + v7[7]) = (uint64_t)a2;
  return result;
}

uint64_t _s16EntryMomentsViewVMa()
{
  uint64_t result = qword_269F46F18;
  if (!qword_269F46F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256107320(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256107384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v158 = a1;
  uint64_t v150 = a2;
  uint64_t v124 = _s20EntryMomentsDataViewVMa();
  MEMORY[0x270FA5388](v124);
  uint64_t v126 = (uint64_t *)((char *)&v120 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25610DD40(0, &qword_269F46F70, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
  uint64_t v149 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v125 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v127 = (uint64_t)&v120 - v6;
  sub_25610DC80(0, &qword_269F46F78, MEMORY[0x263F19B20]);
  uint64_t v146 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v148 = (uint64_t)&v120 - v8;
  uint64_t v120 = _s21EntryMomentsEmptyViewVMa();
  MEMORY[0x270FA5388](v120);
  uint64_t v122 = (uint64_t *)((char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25610DD40(0, &qword_269F46F68, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
  uint64_t v144 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v121 = (uint64_t)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v123 = (uint64_t)&v120 - v13;
  sub_25610DC80(0, &qword_269F46F60, MEMORY[0x263F19B28]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v147 = (uint64_t)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v145 = (char *)&v120 - v17;
  uint64_t v18 = sub_2561762D8();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v138 = (char *)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_256177958();
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  uint64_t v157 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_256175D98();
  uint64_t v135 = *(char **)(v156 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v156);
  uint64_t v134 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  int v154 = (char *)&v120 - v23;
  uint64_t v24 = sub_256176EE8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25610DB18(0);
  uint64_t v155 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v120 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25610DAE4(0);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v143 = (uint64_t)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v139 = (char *)&v120 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v142 = (char *)&v120 - v39;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v40 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_2561755B8();
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();

  uint64_t v159 = (void *)v41;
  uint64_t v160 = v43;
  sub_255F5CE90();
  uint64_t v132 = sub_256177028();
  uint64_t v152 = v44;
  uint64_t v153 = v45;
  int v151 = v46 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v133 = _s16EntryMomentsViewVMa();
  uint64_t v47 = v158 + *(int *)(v133 + 20);
  sub_256119CA0((uint64_t)v30);
  sub_25610E5BC((uint64_t)v30, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176F28();
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x263F1A680], v24);
  uint64_t v130 = sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v140 = v47;
  sub_256119CA0((uint64_t)v30);
  uint64_t v141 = v30;
  sub_25610E5BC((uint64_t)v30, type metadata accessor for StateOfMindTimeline.Styles);
  id v49 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v128 = MEMORY[0x25A29FE80](v49);
  sub_25611A114((uint64_t)v154);
  char v50 = v135;
  uint64_t v51 = v134;
  uint64_t v52 = v156;
  (*((void (**)(char *, void, uint64_t))v135 + 13))(v134, *MEMORY[0x263F18508], v156);
  char v53 = sub_256175D88();
  uint64_t v129 = (void (*)(char *, uint64_t))*((void *)v50 + 1);
  v129(v51, v52);
  uint64_t v54 = v136;
  uint64_t v55 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v53 & 1) == 0) {
    uint64_t v55 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v56 = v157;
  uint64_t v57 = v137;
  (*(void (**)(char *, void, uint64_t))(v136 + 104))(v157, *v55, v137);
  uint64_t v58 = (uint64_t)v138;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v138, v56, v57);
  sub_25610E554(v58, (uint64_t)&v33[*(int *)(v155 + 36)], MEMORY[0x263F190D8]);
  uint64_t v59 = v132;
  uint64_t v60 = v152;
  uint64_t v61 = v153;
  *(void *)uint64_t v33 = v132;
  *((void *)v33 + 1) = v60;
  char v62 = v151;
  v33[16] = v151;
  uint64_t v63 = KeyPath;
  *((void *)v33 + 3) = v61;
  *((void *)v33 + 4) = v63;
  *((_WORD *)v33 + 20) = 0;
  v33[42] = 1;
  uint64_t v64 = v130;
  *((void *)v33 + 6) = v48;
  *((void *)v33 + 7) = v64;
  uint64_t v135 = v33;
  *((void *)v33 + 8) = v128;
  uint64_t v65 = v59;
  sub_255F67B94(v59, v60, v62);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25610E5BC(v58, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v157, v57);
  v129(v154, v156);
  sub_255F67B2C(v65, v152, v151);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v66 = v133;
  uint64_t v67 = *(int *)(v133 + 28);
  uint64_t v68 = v158;
  uint64_t v69 = *(void **)(v158 + v67);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v69 = sub_256095C94(0, v69[2] + 1, 1, v69);
  }
  uint64_t v70 = (uint64_t)v142;
  unint64_t v72 = v69[2];
  unint64_t v71 = v69[3];
  uint64_t v73 = (uint64_t)v135;
  if (v72 >= v71 >> 1) {
    uint64_t v69 = sub_256095C94((void *)(v71 > 1), v72 + 1, 1, v69);
  }
  v69[2] = v72 + 1;
  uint64_t v74 = &v69[2 * v72];
  v74[4] = 0x6E6F6974706143;
  v74[5] = 0xE700000000000000;
  uint64_t v159 = &unk_2704B5358;
  uint64_t v75 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v75);
  sub_25610DE5C(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_25610DEA8();
  uint64_t v76 = (uint64_t)v139;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25610E5BC(v73, (uint64_t (*)(void))sub_25610DB18);
  sub_25610E10C(v76, v70);
  uint64_t v77 = *(void *)(v68 + *(int *)(v66 + 24));
  uint64_t v78 = *(void *)(v68 + v67);
  if (*(void *)(v77 + 16))
  {
    uint64_t v79 = swift_getKeyPath();
    uint64_t v80 = (uint64_t)v126;
    *uint64_t v126 = v79;
    sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = v124;
    *(void *)(v80 + *(int *)(v124 + 20)) = v77;
    *(void *)(v80 + *(int *)(v81 + 24)) = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v82 = sub_256176D98();
    uint64_t v83 = (uint64_t)v141;
    sub_256119CA0((uint64_t)v141);
    sub_25610E5BC(v83, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256175D48();
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    uint64_t v91 = v90;
    uint64_t v92 = v125;
    sub_25610E554(v80, v125, (uint64_t (*)(void))_s20EntryMomentsDataViewVMa);
    uint64_t v93 = v92 + *(int *)(v149 + 36);
    *(unsigned char *)uint64_t v93 = v82;
    *(void *)(v93 + 8) = v85;
    *(void *)(v93 + 16) = v87;
    *(void *)(v93 + 24) = v89;
    *(void *)(v93 + 32) = v91;
    *(unsigned char *)(v93 + 40) = 0;
    sub_25610E5BC(v80, (uint64_t (*)(void))_s20EntryMomentsDataViewVMa);
    uint64_t v94 = &qword_269F46F70;
    uint64_t v95 = _s20EntryMomentsDataViewVMa;
    uint64_t v96 = v127;
    sub_25610E170(v92, v127, &qword_269F46F70, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
    sub_25610E1E8(v96, v148, &qword_269F46F70, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
  }
  else
  {
    uint64_t v98 = swift_getKeyPath();
    uint64_t v99 = (uint64_t)v122;
    *uint64_t v122 = v98;
    uint64_t v100 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256107320(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    uint64_t v101 = v120;
    char v102 = (uint64_t *)(v99 + *(int *)(v120 + 20));
    *char v102 = swift_getKeyPath();
    sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v100);
    swift_storeEnumTagMultiPayload();
    *(void *)(v99 + *(int *)(v101 + 24)) = v78;
    swift_bridgeObjectRetain();
    char v103 = sub_256176D98();
    uint64_t v104 = (uint64_t)v141;
    sub_256119CA0((uint64_t)v141);
    sub_25610E5BC(v104, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256175D48();
    uint64_t v106 = v105;
    uint64_t v108 = v107;
    uint64_t v110 = v109;
    uint64_t v112 = v111;
    uint64_t v113 = v121;
    sub_25610E554(v99, v121, (uint64_t (*)(void))_s21EntryMomentsEmptyViewVMa);
    uint64_t v114 = v113 + *(int *)(v144 + 36);
    *(unsigned char *)uint64_t v114 = v103;
    *(void *)(v114 + 8) = v106;
    *(void *)(v114 + 16) = v108;
    *(void *)(v114 + 24) = v110;
    *(void *)(v114 + 32) = v112;
    *(unsigned char *)(v114 + 40) = 0;
    sub_25610E5BC(v99, (uint64_t (*)(void))_s21EntryMomentsEmptyViewVMa);
    uint64_t v94 = &qword_269F46F68;
    uint64_t v95 = _s21EntryMomentsEmptyViewVMa;
    uint64_t v96 = v123;
    sub_25610E170(v113, v123, &qword_269F46F68, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
    sub_25610E1E8(v96, v148, &qword_269F46F68, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
  }
  swift_storeEnumTagMultiPayload();
  sub_25610E260();
  sub_25610E32C();
  uint64_t v97 = (uint64_t)v145;
  sub_256176898();
  sub_25610E3F8(v96, v94, (void (*)(uint64_t))v95);
  uint64_t v115 = v143;
  sub_25610E554(v70, v143, (uint64_t (*)(void))sub_25610DAE4);
  uint64_t v116 = v147;
  sub_25610E45C(v97, v147);
  uint64_t v117 = v150;
  sub_25610E554(v115, v150, (uint64_t (*)(void))sub_25610DAE4);
  sub_25610DA58();
  sub_25610E45C(v116, v117 + *(int *)(v118 + 48));
  sub_25610E4DC(v97);
  sub_25610E5BC(v70, (uint64_t (*)(void))sub_25610DAE4);
  sub_25610E4DC(v116);
  return sub_25610E5BC(v115, (uint64_t (*)(void))sub_25610DAE4);
}

uint64_t sub_256108414@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176798();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_25610D9C0();
  return sub_256107384(v1, a1 + *(int *)(v3 + 44));
}

void *sub_256108458(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_256107320(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = v6[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)v3 + v9);
    sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v86 = v13;
      uint64_t v84 = v3;
      if (v87((char *)v11, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v15 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = (char *)v11 + v16;
      uint64_t v19 = sub_256176158();
      uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v88(v17, v18, v19);
      *((unsigned char *)v10 + v15[6]) = *((unsigned char *)v11 + v15[6]);
      uint64_t v20 = v15[7];
      uint64_t v21 = (char *)v10 + v20;
      uint64_t v22 = (char *)v11 + v20;
      uint64_t v23 = sub_256175D98();
      char v82 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v83 = v23;
      v82(v21, v22);
      uint64_t v24 = v15[8];
      uint64_t v25 = (char *)v10 + v24;
      uint64_t v26 = (char *)v11 + v24;
      uint64_t v27 = v87;
      if (v87((char *)v11 + v24, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v25, v26, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v25, 0, 1, v12);
      }
      uint64_t v29 = _s6StylesV8TimelineVMa(0);
      v88(&v25[*(int *)(v29 + 20)], &v26[*(int *)(v29 + 20)], v19);
      uint64_t v30 = v15[9];
      uint64_t v31 = (char *)v10 + v30;
      uint64_t v32 = (char *)v11 + v30;
      uint64_t v85 = v6;
      if (v27((char *)v11 + v30, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v31, v32, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v31, 0, 1, v12);
      }
      uint64_t v34 = _s6StylesV6NoDataVMa(0);
      v88(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v19);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      uint64_t v35 = v15[10];
      uint64_t v36 = (char *)v10 + v35;
      uint64_t v37 = (char *)v11 + v35;
      if (v27((char *)v11 + v35, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v36, v37, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v36, 0, 1, v12);
      }
      uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
      v88(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v19);
      uint64_t v40 = v15[11];
      uint64_t v41 = (char *)v10 + v40;
      uint64_t v42 = (char *)v11 + v40;
      if (v27((char *)v11 + v40, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v41, v42, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v41, 0, 1, v12);
      }
      uint64_t v44 = _s6StylesV6SymbolVMa(0);
      v88(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v19);
      uint64_t v45 = v15[12];
      char v46 = (char *)v10 + v45;
      uint64_t v47 = (char *)v11 + v45;
      if (v27((char *)v11 + v45, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v46, v47, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v46, 0, 1, v12);
      }
      id v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v88(&v46[v49[5]], &v47[v49[5]], v19);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v82)(&v46[v49[7]], &v47[v49[7]], v83);
      uint64_t v50 = v15[13];
      uint64_t v51 = (char *)v10 + v50;
      uint64_t v52 = (char *)v11 + v50;
      if (v27((char *)v11 + v50, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v51, v52, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v51, 0, 1, v12);
      }
      uint64_t v54 = _s6StylesV5EmptyVMa(0);
      v88(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v19);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v15[14];
      uint64_t v56 = (char *)v10 + v55;
      uint64_t v57 = (char *)v11 + v55;
      if (v27((char *)v11 + v55, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v56, v57, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v56, 0, 1, v12);
      }
      uint64_t v59 = _s6StylesV5DailyVMa(0);
      v88(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v19);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v15[15];
      uint64_t v61 = (char *)v10 + v60;
      char v62 = (char *)v11 + v60;
      if (v27((char *)v11 + v60, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v62, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v61, 0, 1, v12);
      }
      uint64_t v6 = v85;
      uint64_t v64 = _s6StylesV9MomentaryVMa(0);
      v88(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v19);
      uint64_t v65 = v15[16];
      uint64_t v66 = (char *)v10 + v65;
      uint64_t v67 = (char *)v11 + v65;
      if (v27((char *)v11 + v65, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v66, v67, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v66, 0, 1, v12);
      }
      uint64_t v69 = _s6StylesV6HeaderVMa(0);
      v88(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v19);
      uint64_t v70 = v15[17];
      unint64_t v71 = (char *)v10 + v70;
      unint64_t v72 = (char *)v11 + v70;
      if (v27((char *)v11 + v70, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v71, v72, v12);
        uint64_t v27 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v71, 0, 1, v12);
      }
      uint64_t v74 = _s6StylesV11ChartButtonVMa(0);
      v88(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v19);
      uint64_t v75 = v15[18];
      uint64_t v76 = (char *)v10 + v75;
      uint64_t v77 = (char *)v11 + v75;
      if (v27(v77, 1, v12))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v76, v77, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v76, 0, 1, v12);
      }
      uint64_t v79 = _s6StylesV15LogButtonFooterVMa(0);
      v88(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v19);
      uint64_t v3 = v84;
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v80 = v6[7];
    *(void *)((char *)a1 + v6[6]) = *(void *)((char *)v3 + v6[6]);
    *(void *)((char *)a1 + v80) = *(void *)((char *)v3 + v80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_256109368(uint64_t a1, uint64_t a2)
{
  sub_256107320(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v5 + *(int *)(v9 + 20);
    uint64_t v11 = sub_256176158();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    uint64_t v13 = v10;
    uint64_t v14 = (int *)v9;
    v12(v13, v11);
    uint64_t v15 = v5 + *(int *)(v9 + 28);
    uint64_t v16 = sub_256175D98();
    uint64_t v43 = *(void (**)(uint64_t))(*(void *)(v16 - 8) + 8);
    uint64_t v44 = v16;
    v43(v15);
    uint64_t v17 = v5 + v14[8];
    if (!v8(v17, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = _s6StylesV8TimelineVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    uint64_t v19 = v5 + v14[9];
    if (!v8(v19, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    }
    uint64_t v20 = _s6StylesV6NoDataVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    uint64_t v21 = v5 + v14[10];
    if (!v8(v21, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    }
    uint64_t v22 = _s6StylesV11PlaceholderVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    uint64_t v23 = v5 + v14[11];
    if (!v8(v23, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    }
    uint64_t v24 = _s6StylesV6SymbolVMa(0);
    v12(v23 + *(int *)(v24 + 20), v11);
    uint64_t v25 = v5 + v14[12];
    uint64_t v45 = v14;
    if (!v8(v25, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v6);
    }
    uint64_t v26 = v7;
    uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v25 + *(int *)(v27 + 20), v11);
    uint64_t v28 = *(int *)(v27 + 28);
    uint64_t v29 = v26;
    ((void (*)(uint64_t, uint64_t))v43)(v25 + v28, v44);
    uint64_t v30 = v5 + v45[13];
    if (!v8(v30, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v6);
    }
    uint64_t v31 = _s6StylesV5EmptyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    uint64_t v32 = v5 + v45[14];
    if (!v8(v32, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v6);
    }
    uint64_t v33 = _s6StylesV5DailyVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    uint64_t v34 = v5 + v45[15];
    if (!v8(v34, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v6);
    }
    uint64_t v35 = _s6StylesV9MomentaryVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    uint64_t v36 = v5 + v45[16];
    if (!v8(v36, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v6);
    }
    uint64_t v37 = _s6StylesV6HeaderVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    uint64_t v38 = v5 + v45[17];
    if (!v8(v38, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v6);
    }
    uint64_t v39 = _s6StylesV11ChartButtonVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    uint64_t v40 = v5 + v45[18];
    if (!v8(v40, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v6);
    }
    uint64_t v41 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v40 + *(int *)(v41 + 20), v11);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_256109A60(void *a1, void *a2, int *a3)
{
  sub_256107320(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v87 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v85 = a2;
    uint64_t v84 = a3;
    if (v87(v9, 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_256176158();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    *((unsigned char *)v8 + v13[6]) = *((unsigned char *)v9 + v13[6]);
    uint64_t v19 = v13[7];
    uint64_t v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = sub_256175D98();
    char v82 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
    uint64_t v83 = v22;
    v82(v20, v21);
    uint64_t v23 = v13[8];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    if (v87((void *)((char *)v9 + v23), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
    }
    uint64_t v27 = _s6StylesV8TimelineVMa(0);
    v18(&v24[*(int *)(v27 + 20)], &v25[*(int *)(v27 + 20)], v17);
    uint64_t v28 = v13[9];
    uint64_t v29 = (char *)v8 + v28;
    uint64_t v30 = (char *)v9 + v28;
    uint64_t v86 = v11;
    if (v87((void *)((char *)v9 + v28), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v10);
    }
    uint64_t v32 = _s6StylesV6NoDataVMa(0);
    v18(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v17);
    v29[*(int *)(v32 + 24)] = v30[*(int *)(v32 + 24)];
    uint64_t v33 = v13[10];
    uint64_t v34 = (char *)v8 + v33;
    uint64_t v35 = (char *)v9 + v33;
    if (v87((void *)((char *)v9 + v33), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      uint64_t v37 = v86;
    }
    else
    {
      uint64_t v37 = v86;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v34, v35, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v34, 0, 1, v10);
    }
    uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
    v18(&v34[*(int *)(v38 + 20)], &v35[*(int *)(v38 + 20)], v17);
    uint64_t v39 = v13[11];
    uint64_t v40 = (char *)v8 + v39;
    uint64_t v41 = (char *)v9 + v39;
    if (v87((void *)((char *)v9 + v39), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v40, v41, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = _s6StylesV6SymbolVMa(0);
    v18(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v17);
    uint64_t v44 = v13[12];
    uint64_t v45 = (char *)v8 + v44;
    char v46 = (char *)v9 + v44;
    if (v87((void *)((char *)v9 + v44), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v45, v46, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v45, 0, 1, v10);
    }
    uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v18(&v45[v48[5]], &v46[v48[5]], v17);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v82)(&v45[v48[7]], &v46[v48[7]], v83);
    uint64_t v49 = v13[13];
    uint64_t v50 = (char *)v8 + v49;
    uint64_t v51 = (char *)v9 + v49;
    if (v87((void *)((char *)v9 + v49), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v50, v51, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v50, 0, 1, v10);
    }
    uint64_t v53 = _s6StylesV5EmptyVMa(0);
    v18(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v17);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v13[14];
    uint64_t v55 = (char *)v8 + v54;
    uint64_t v56 = (char *)v9 + v54;
    if (v87((void *)((char *)v9 + v54), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v55, v56, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v55, 0, 1, v10);
    }
    uint64_t v58 = _s6StylesV5DailyVMa(0);
    v18(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v17);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    uint64_t v59 = v13[15];
    uint64_t v60 = (char *)v8 + v59;
    uint64_t v61 = (char *)v9 + v59;
    if (v87((void *)((char *)v9 + v59), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      uint64_t v63 = v86;
    }
    else
    {
      uint64_t v63 = v86;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v60, 0, 1, v10);
    }
    uint64_t v64 = _s6StylesV9MomentaryVMa(0);
    v18(&v60[*(int *)(v64 + 20)], &v61[*(int *)(v64 + 20)], v17);
    uint64_t v65 = v13[16];
    uint64_t v66 = (char *)v8 + v65;
    uint64_t v67 = (char *)v9 + v65;
    if (v87((void *)((char *)v9 + v65), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v66, 0, 1, v10);
    }
    uint64_t v69 = _s6StylesV6HeaderVMa(0);
    v18(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v17);
    uint64_t v70 = v13[17];
    unint64_t v71 = (char *)v8 + v70;
    unint64_t v72 = (char *)v9 + v70;
    if (v87((void *)((char *)v9 + v70), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v71, v72, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v71, 0, 1, v10);
    }
    uint64_t v74 = _s6StylesV11ChartButtonVMa(0);
    v18(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v17);
    uint64_t v75 = v13[18];
    uint64_t v76 = (char *)v8 + v75;
    uint64_t v77 = (char *)v9 + v75;
    if (v87((void *)((char *)v9 + v75), 1, v10))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v76, v77, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v76, 0, 1, v10);
    }
    uint64_t v79 = _s6StylesV15LogButtonFooterVMa(0);
    v18(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v17);
    a2 = v85;
    a3 = v84;
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v80 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v80) = *(void *)((char *)a2 + v80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_25610A8AC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25610B7A0((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_256107320(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    sub_25610B7A0((uint64_t)a1 + v8, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v84 = v12;
      char v82 = a3;
      if (v83((char *)v10, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      uint64_t v85 = *(void (**)(char *, char *))(*(void *)(v18 - 8) + 16);
      uint64_t v86 = v18;
      v85(v16, v17);
      *((unsigned char *)v9 + v14[6]) = *((unsigned char *)v10 + v14[6]);
      uint64_t v19 = v14[7];
      uint64_t v20 = (char *)v9 + v19;
      uint64_t v21 = (char *)v10 + v19;
      uint64_t v22 = sub_256175D98();
      uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
      uint64_t v81 = v22;
      v80(v20, v21);
      uint64_t v23 = v14[8];
      uint64_t v24 = (char *)v9 + v23;
      uint64_t v25 = (char *)v10 + v23;
      uint64_t v26 = v83;
      if (v83((char *)v10 + v23, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v24, v25, v11);
        uint64_t v26 = v83;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v24, 0, 1, v11);
      }
      uint64_t v28 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v86);
      uint64_t v29 = v14[9];
      uint64_t v30 = (char *)v9 + v29;
      uint64_t v31 = (char *)v10 + v29;
      if (v26((char *)v10 + v29, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v30, v31, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v30, 0, 1, v11);
      }
      uint64_t v33 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v86);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      uint64_t v34 = v14[10];
      uint64_t v35 = (char *)v9 + v34;
      uint64_t v36 = (char *)v10 + v34;
      if (v26((char *)v10 + v34, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v35, v36, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v35, 0, 1, v11);
      }
      uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v86);
      uint64_t v39 = v14[11];
      uint64_t v40 = (char *)v9 + v39;
      uint64_t v41 = (char *)v10 + v39;
      if (v26((char *)v10 + v39, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v40, v41, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v40, 0, 1, v11);
      }
      uint64_t v43 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v86);
      uint64_t v44 = v14[12];
      uint64_t v45 = (char *)v9 + v44;
      char v46 = (char *)v10 + v44;
      if (v26((char *)v10 + v44, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v45, v46, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v45, 0, 1, v11);
      }
      uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v45[v48[5]], &v46[v48[5]], v86);
      v45[v48[6]] = v46[v48[6]];
      ((void (*)(char *, char *, uint64_t))v80)(&v45[v48[7]], &v46[v48[7]], v81);
      uint64_t v49 = v14[13];
      uint64_t v50 = (char *)v9 + v49;
      uint64_t v51 = (char *)v10 + v49;
      if (v26((char *)v10 + v49, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v50, v51, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v50, 0, 1, v11);
      }
      uint64_t v53 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v86);
      v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
      uint64_t v54 = v14[14];
      uint64_t v55 = (char *)v9 + v54;
      uint64_t v56 = (char *)v10 + v54;
      if (v26((char *)v10 + v54, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v55, v56, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v55, 0, 1, v11);
      }
      uint64_t v58 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v86);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      uint64_t v59 = v14[15];
      uint64_t v60 = (char *)v9 + v59;
      uint64_t v61 = (char *)v10 + v59;
      if (v26((char *)v10 + v59, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v60, v61, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v60, 0, 1, v11);
      }
      uint64_t v63 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v86);
      uint64_t v64 = v14[16];
      uint64_t v65 = (char *)v9 + v64;
      uint64_t v66 = (char *)v10 + v64;
      if (v26((char *)v10 + v64, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v65, v66, v11);
        uint64_t v26 = v83;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v65, 0, 1, v11);
      }
      uint64_t v68 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v86);
      uint64_t v69 = v14[17];
      uint64_t v70 = (char *)v9 + v69;
      unint64_t v71 = (char *)v10 + v69;
      if (v26((char *)v10 + v69, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v70, v71, v11);
        uint64_t v26 = v83;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v70, 0, 1, v11);
      }
      uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v86);
      uint64_t v74 = v14[18];
      uint64_t v75 = (char *)v9 + v74;
      uint64_t v76 = (char *)v10 + v74;
      if (v26(v76, 1, v11))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v75, v76, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v75, 0, 1, v11);
      }
      uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v85)(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v86);
      a3 = v82;
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25610B7A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_256107320(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_25610B810(char *a1, char *a2, int *a3)
{
  sub_256107320(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v89 = a2;
    uint64_t v88 = a3;
    if (v91(v11, 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_256176158();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    v22(v19, v20, v21);
    v10[v17[6]] = v11[v17[6]];
    uint64_t v23 = v17[7];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    uint64_t v26 = sub_256175D98();
    uint64_t v86 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
    uint64_t v87 = v26;
    v86(v24, v25);
    uint64_t v27 = v17[8];
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    if (v91(&v11[v27], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v28, v29, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v28, 0, 1, v14);
    }
    uint64_t v31 = _s6StylesV8TimelineVMa(0);
    v22(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v21);
    uint64_t v32 = v17[9];
    uint64_t v33 = &v10[v32];
    uint64_t v34 = &v11[v32];
    uint64_t v90 = v15;
    if (v91(&v11[v32], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v33, v34, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v33, 0, 1, v14);
    }
    uint64_t v36 = _s6StylesV6NoDataVMa(0);
    v22(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v21);
    v33[*(int *)(v36 + 24)] = v34[*(int *)(v36 + 24)];
    uint64_t v37 = v17[10];
    uint64_t v38 = &v10[v37];
    uint64_t v39 = &v11[v37];
    if (v91(&v11[v37], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      uint64_t v41 = v90;
    }
    else
    {
      uint64_t v41 = v90;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v38, v39, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v38, 0, 1, v14);
    }
    uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
    v22(&v38[*(int *)(v42 + 20)], &v39[*(int *)(v42 + 20)], v21);
    uint64_t v43 = v17[11];
    uint64_t v44 = &v10[v43];
    uint64_t v45 = &v11[v43];
    if (v91(&v11[v43], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v44, v45, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v14);
    }
    uint64_t v47 = _s6StylesV6SymbolVMa(0);
    v22(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v21);
    uint64_t v48 = v17[12];
    uint64_t v49 = &v10[v48];
    uint64_t v50 = &v11[v48];
    if (v91(&v11[v48], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v49, v50, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v49, 0, 1, v14);
    }
    uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v22(&v49[v52[5]], &v50[v52[5]], v21);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v86)(&v49[v52[7]], &v50[v52[7]], v87);
    uint64_t v53 = v17[13];
    uint64_t v54 = &v10[v53];
    uint64_t v55 = &v11[v53];
    if (v91(&v11[v53], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v54, v55, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v54, 0, 1, v14);
    }
    uint64_t v57 = _s6StylesV5EmptyVMa(0);
    v22(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v21);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    uint64_t v58 = v17[14];
    uint64_t v59 = &v10[v58];
    uint64_t v60 = &v11[v58];
    if (v91(&v11[v58], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v59, v60, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v59, 0, 1, v14);
    }
    uint64_t v62 = _s6StylesV5DailyVMa(0);
    v22(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v21);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    uint64_t v63 = v17[15];
    uint64_t v64 = &v10[v63];
    uint64_t v65 = &v11[v63];
    if (v91(&v11[v63], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v90;
    }
    else
    {
      uint64_t v67 = v90;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v64, v65, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v64, 0, 1, v14);
    }
    uint64_t v68 = _s6StylesV9MomentaryVMa(0);
    v22(&v64[*(int *)(v68 + 20)], &v65[*(int *)(v68 + 20)], v21);
    uint64_t v69 = v17[16];
    uint64_t v70 = &v10[v69];
    unint64_t v71 = &v11[v69];
    if (v91(&v11[v69], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v70, v71, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v70, 0, 1, v14);
    }
    uint64_t v73 = _s6StylesV6HeaderVMa(0);
    v22(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v21);
    uint64_t v74 = v17[17];
    uint64_t v75 = &v10[v74];
    uint64_t v76 = &v11[v74];
    if (v91(&v11[v74], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v75, v76, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v75, 0, 1, v14);
    }
    uint64_t v78 = _s6StylesV11ChartButtonVMa(0);
    v22(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v21);
    uint64_t v79 = v17[18];
    uint64_t v80 = &v10[v79];
    uint64_t v81 = &v11[v79];
    if (v91(&v11[v79], 1, v14))
    {
      sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v80, v81, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v80, 0, 1, v14);
    }
    uint64_t v83 = _s6StylesV15LogButtonFooterVMa(0);
    v22(&v80[*(int *)(v83 + 20)], &v81[*(int *)(v83 + 20)], v21);
    swift_storeEnumTagMultiPayload();
    a2 = v89;
    a3 = v88;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v84 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v84] = *(void *)&a2[v84];
  return a1;
}

char *sub_25610C668(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25610B7A0((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_256107320(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    sub_25610B7A0((uint64_t)&a1[v10], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256107320(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v88 = v16;
      if (v87(v12, 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      uint64_t v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v19 = v18[5];
      uint64_t v20 = &v11[v19];
      uint64_t v21 = &v12[v19];
      uint64_t v22 = sub_256176158();
      uint64_t v89 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 32);
      uint64_t v90 = v22;
      v89(v20, v21);
      v11[v18[6]] = v12[v18[6]];
      uint64_t v23 = v18[7];
      uint64_t v24 = &v11[v23];
      uint64_t v25 = &v12[v23];
      uint64_t v26 = sub_256175D98();
      uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
      uint64_t v85 = v26;
      v84(v24, v25);
      uint64_t v27 = v18[8];
      uint64_t v28 = &v11[v27];
      uint64_t v29 = &v12[v27];
      uint64_t v30 = v87;
      if (v87(&v12[v27], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v28, v29, v15);
        uint64_t v30 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v28, 0, 1, v15);
      }
      uint64_t v32 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v90);
      uint64_t v33 = v18[9];
      uint64_t v34 = &v11[v33];
      uint64_t v35 = &v12[v33];
      uint64_t v86 = a3;
      if (v30(&v12[v33], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v34, v35, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v34, 0, 1, v15);
      }
      uint64_t v37 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v90);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      uint64_t v38 = v18[10];
      uint64_t v39 = &v11[v38];
      uint64_t v40 = &v12[v38];
      if (v30(&v12[v38], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v39, v40, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v39, 0, 1, v15);
      }
      uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v90);
      uint64_t v43 = v18[11];
      uint64_t v44 = &v11[v43];
      uint64_t v45 = &v12[v43];
      if (v30(&v12[v43], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v44, v45, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v44, 0, 1, v15);
      }
      uint64_t v47 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v90);
      uint64_t v48 = v18[12];
      uint64_t v49 = &v11[v48];
      uint64_t v50 = &v12[v48];
      if (v30(&v12[v48], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v49, v50, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v49, 0, 1, v15);
      }
      uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v49[v52[5]], &v50[v52[5]], v90);
      v49[v52[6]] = v50[v52[6]];
      ((void (*)(char *, char *, uint64_t))v84)(&v49[v52[7]], &v50[v52[7]], v85);
      uint64_t v53 = v18[13];
      uint64_t v54 = &v11[v53];
      uint64_t v55 = &v12[v53];
      if (v30(&v12[v53], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v54, v55, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v54, 0, 1, v15);
      }
      uint64_t v57 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v90);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v18[14];
      uint64_t v59 = &v11[v58];
      uint64_t v60 = &v12[v58];
      if (v30(&v12[v58], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v59, v60, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v59, 0, 1, v15);
      }
      uint64_t v62 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v90);
      v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
      uint64_t v63 = v18[15];
      uint64_t v64 = &v11[v63];
      uint64_t v65 = &v12[v63];
      if (v30(&v12[v63], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v64, v65, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v64, 0, 1, v15);
      }
      a3 = v86;
      uint64_t v67 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v90);
      uint64_t v68 = v18[16];
      uint64_t v69 = &v11[v68];
      uint64_t v70 = &v12[v68];
      if (v30(&v12[v68], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v69, v70, v15);
        uint64_t v30 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v69, 0, 1, v15);
      }
      uint64_t v72 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v90);
      uint64_t v73 = v18[17];
      uint64_t v74 = &v11[v73];
      uint64_t v75 = &v12[v73];
      if (v30(&v12[v73], 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v74, v75, v15);
        uint64_t v30 = v87;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v74, 0, 1, v15);
      }
      uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v90);
      uint64_t v78 = v18[18];
      uint64_t v79 = &v11[v78];
      uint64_t v80 = &v12[v78];
      if (v30(v80, 1, v15))
      {
        sub_256107320(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v79, v80, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v79, 0, 1, v15);
      }
      uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v89)(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v90);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25610D560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25610D574);
}

uint64_t sub_25610D574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_256107320(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_256107320(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_25610D6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25610D6FC);
}

void sub_25610D6FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_256107320(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_256107320(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_25610D86C()
{
  sub_256107320(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_256107320(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_25610D9A4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_25610D9C0()
{
  if (!qword_269F46F28)
  {
    sub_256107320(255, &qword_269F46F30, (uint64_t (*)(uint64_t))sub_25610DA58, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46F28);
    }
  }
}

void sub_25610DA58()
{
  if (!qword_269F46F38)
  {
    sub_25610DAE4(255);
    sub_25610DC80(255, &qword_269F46F60, MEMORY[0x263F19B28]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F46F38);
    }
  }
}

void sub_25610DAE4(uint64_t a1)
{
}

void sub_25610DB18(uint64_t a1)
{
}

void sub_25610DB4C(uint64_t a1)
{
}

void sub_25610DB80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_25610DBF4()
{
  if (!qword_269F46F58)
  {
    sub_25610DD40(255, &qword_269F44E38, (void (*)(uint64_t))sub_255F678F4);
    sub_255F6732C();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46F58);
    }
  }
}

void sub_25610DC80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_25610DD40(255, &qword_269F46F68, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
    uint64_t v7 = v6;
    sub_25610DD40(255, &qword_269F46F70, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_25610DD40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25610DDA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2561764E8();
  *a1 = result;
  return result;
}

uint64_t sub_25610DDD0()
{
  return sub_2561764F8();
}

uint64_t sub_25610DE04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2561764E8();
  *a1 = result;
  return result;
}

uint64_t sub_25610DE30()
{
  return sub_2561764F8();
}

void sub_25610DE5C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_25610DEA8()
{
  unint64_t result = qword_269F46F80;
  if (!qword_269F46F80)
  {
    sub_25610DB18(255);
    sub_25610DF20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46F80);
  }
  return result;
}

unint64_t sub_25610DF20()
{
  unint64_t result = qword_269F46F88;
  if (!qword_269F46F88)
  {
    sub_25610DB4C(255);
    sub_25610DFC8();
    sub_25610E664((unint64_t *)&qword_269F42C00, (void (*)(uint64_t))sub_25606EF40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46F88);
  }
  return result;
}

unint64_t sub_25610DFC8()
{
  unint64_t result = qword_269F46F90;
  if (!qword_269F46F90)
  {
    sub_25610DBF4();
    sub_25610E070();
    sub_25610E664(&qword_269F42C08, (void (*)(uint64_t))sub_255F6732C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46F90);
  }
  return result;
}

unint64_t sub_25610E070()
{
  unint64_t result = qword_269F46F98;
  if (!qword_269F46F98)
  {
    sub_25610DD40(255, &qword_269F44E38, (void (*)(uint64_t))sub_255F678F4);
    sub_255F97284();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46F98);
  }
  return result;
}

uint64_t sub_25610E10C(uint64_t a1, uint64_t a2)
{
  sub_25610DAE4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25610E170(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_25610DD40(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_25610E1E8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_25610DD40(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_25610E260()
{
  unint64_t result = qword_269F46FA0;
  if (!qword_269F46FA0)
  {
    sub_25610DD40(255, &qword_269F46F68, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
    sub_25610E664(&qword_269F46FA8, (void (*)(uint64_t))_s21EntryMomentsEmptyViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46FA0);
  }
  return result;
}

unint64_t sub_25610E32C()
{
  unint64_t result = qword_269F46FB0;
  if (!qword_269F46FB0)
  {
    sub_25610DD40(255, &qword_269F46F70, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
    sub_25610E664(&qword_269F46FB8, (void (*)(uint64_t))_s20EntryMomentsDataViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46FB0);
  }
  return result;
}

uint64_t sub_25610E3F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_25610DD40(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_25610E45C(uint64_t a1, uint64_t a2)
{
  sub_25610DC80(0, &qword_269F46F60, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25610E4DC(uint64_t a1)
{
  sub_25610DC80(0, &qword_269F46F60, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25610E554(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25610E5BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25610E61C()
{
  return sub_25610E664(&qword_269F46FC0, (void (*)(uint64_t))sub_25610E6AC);
}

uint64_t sub_25610E664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25610E6AC()
{
  if (!qword_269F46FC8)
  {
    sub_256107320(255, &qword_269F46F30, (uint64_t (*)(uint64_t))sub_25610DA58, MEMORY[0x263F1BAC8]);
    sub_25610E740();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46FC8);
    }
  }
}

unint64_t sub_25610E740()
{
  unint64_t result = qword_269F46FD0;
  if (!qword_269F46FD0)
  {
    sub_256107320(255, &qword_269F46F30, (uint64_t (*)(uint64_t))sub_25610DA58, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46FD0);
  }
  return result;
}

uint64_t sub_25610E7C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day;
  swift_beginAccess();
  sub_256110AB4(a1, v3);
  swift_endAccess();
  uint64_t v4 = type metadata accessor for StateOfMindCalendarDay();
  uint64_t v5 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_256177EA8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v5);

  objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
  return sub_256110A54(a1, (uint64_t (*)(void))sub_2561101D4);
}

uint64_t sub_25610EAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_256110248();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = a3;
  sub_2561102F8();
  sub_2561108D8(&qword_269F47058, (void (*)(uint64_t))sub_2561102F8);
  sub_256176A88();
  sub_256176D88();
  v12[3] = v5;
  v12[4] = sub_2561108D8(&qword_269F47060, (void (*)(uint64_t))sub_256110248);
  __swift_allocate_boxed_opaque_existential_1(v12);
  sub_256176A78();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return MEMORY[0x25A2A0DF0](v12);
}

uint64_t sub_25610EC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_256176788();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  sub_2561106B4();
  return sub_25610ECB0(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_25610ECB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v133 = a2;
  sub_256110600(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v143 = (uint64_t)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561105C4(0);
  uint64_t v141 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v145 = (uint64_t)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256110588(0);
  uint64_t v142 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v149 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v154 = (uint64_t)&v127 - v10;
  uint64_t v136 = type metadata accessor for StateOfMindCalendarDateView();
  MEMORY[0x270FA5388](v136);
  uint64_t v12 = (uint64_t *)((char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25611054C(0);
  uint64_t v138 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v148 = (uint64_t)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v137 = (uint64_t)&v127 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v153 = (uint64_t)&v127 - v18;
  sub_2561101D4(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v144 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v127 - v22;
  uint64_t v24 = type metadata accessor for StateOfMindCalendarDay();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v128 = (uint64_t)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v127 - v28;
  uint64_t v151 = sub_2561777B8();
  uint64_t v155 = *(void *)(v151 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v151);
  uint64_t v140 = (char *)&v127 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v127 - v32;
  sub_2561104A4(0);
  uint64_t v150 = v34;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v147 = (uint64_t)&v127 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v132 = (char *)&v127 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v146 = (uint64_t)&v127 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v127 - v41;
  sub_256110468(0);
  uint64_t v44 = v43;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v152 = (uint64_t)&v127 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v49 = (char *)&v127 - v48;
  MEMORY[0x270FA5388](v47);
  uint64_t v156 = (uint64_t)&v127 - v50;
  sub_2561777A8();
  uint64_t v139 = a1;
  uint64_t v51 = (void *)(a1 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day);
  swift_beginAccess();
  sub_2561109EC((uint64_t)v51, (uint64_t)v23, (uint64_t (*)(void))sub_2561101D4);
  uint64_t v134 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v135 = v25 + 48;
  if (v134(v23, 1, v24) == 1)
  {
    sub_256110A54((uint64_t)v23, (uint64_t (*)(void))sub_2561101D4);
    uint64_t v52 = v24;
  }
  else
  {
    sub_256110870((uint64_t)v23, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
    uint64_t v53 = *(void *)&v29[*(int *)(v24 + 36)];
    sub_256110A54((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
    double v54 = 1.0;
    uint64_t v52 = v24;
    if (v53 < 14) {
      goto LABEL_5;
    }
  }
  double v54 = 0.0;
LABEL_5:
  uint64_t v55 = v155;
  uint64_t v56 = *(void (**)(uint64_t, char *, uint64_t))(v155 + 16);
  uint64_t v57 = v151;
  uint64_t v131 = v155 + 16;
  uint64_t v130 = v56;
  v56((uint64_t)v42, v33, v151);
  *(double *)&v42[*(int *)(v150 + 36)] = v54;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v155 = v55 + 8;
  uint64_t v129 = v58;
  v58(v33, v57);
  char v59 = sub_256176DA8();
  sub_256175D48();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  sub_2561109EC((uint64_t)v42, (uint64_t)v49, (uint64_t (*)(void))sub_2561104A4);
  uint64_t v68 = &v49[*(int *)(v44 + 36)];
  *uint64_t v68 = v59;
  *((void *)v68 + 1) = v61;
  *((void *)v68 + 2) = v63;
  *((void *)v68 + 3) = v65;
  *((void *)v68 + 4) = v67;
  v68[40] = 0;
  sub_256110A54((uint64_t)v42, (uint64_t (*)(void))sub_2561104A4);
  sub_256110870((uint64_t)v49, v156, (uint64_t (*)(void))sub_256110468);
  uint64_t v69 = v134;
  if (v134((char *)v51, 1, v52))
  {
    uint64_t v70 = 0;
    unint64_t v71 = 0xE000000000000000;
    char v72 = 2;
  }
  else
  {
    char v72 = *((unsigned char *)v51 + *(int *)(v52 + 32));
    uint64_t v70 = v51[2];
    unint64_t v71 = v51[3];
    swift_bridgeObjectRetain();
  }
  uint64_t v73 = v154;
  uint64_t v74 = v140;
  *uint64_t v12 = swift_getKeyPath();
  sub_25611080C(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = v136;
  *((unsigned char *)v12 + *(int *)(v136 + 20)) = v72;
  uint64_t v76 = (uint64_t *)((char *)v12 + *(int *)(v75 + 24));
  void *v76 = v70;
  v76[1] = v71;
  char v77 = sub_256176DA8();
  sub_256175D48();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v86 = v137;
  sub_2561109EC((uint64_t)v12, v137, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDateView);
  uint64_t v87 = v86 + *(int *)(v138 + 36);
  *(unsigned char *)uint64_t v87 = v77;
  *(void *)(v87 + 8) = v79;
  *(void *)(v87 + 16) = v81;
  *(void *)(v87 + 24) = v83;
  *(void *)(v87 + 32) = v85;
  *(unsigned char *)(v87 + 40) = 0;
  sub_256110A54((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDateView);
  uint64_t v88 = v153;
  sub_256110870(v86, v153, (uint64_t (*)(void))sub_25611054C);
  uint64_t v89 = v143;
  sub_25610FA8C(v139, v143);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v90 = v145;
  sub_2561109EC(v89, v145, (uint64_t (*)(void))sub_256110600);
  uint64_t v91 = (_OWORD *)(v90 + *(int *)(v141 + 36));
  long long v92 = v158;
  *uint64_t v91 = v157;
  v91[1] = v92;
  v91[2] = v159;
  sub_256110A54(v89, (uint64_t (*)(void))sub_256110600);
  LOBYTE(v89) = sub_256176DA8();
  sub_256175D48();
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v98 = v97;
  uint64_t v100 = v99;
  uint64_t v101 = v149;
  sub_2561109EC(v90, v149, (uint64_t (*)(void))sub_2561105C4);
  uint64_t v102 = v101 + *(int *)(v142 + 36);
  *(unsigned char *)uint64_t v102 = v89;
  *(void *)(v102 + 8) = v94;
  *(void *)(v102 + 16) = v96;
  *(void *)(v102 + 24) = v98;
  *(void *)(v102 + 32) = v100;
  *(unsigned char *)(v102 + 40) = 0;
  sub_256110A54(v90, (uint64_t (*)(void))sub_2561105C4);
  sub_256110870(v101, v73, (uint64_t (*)(void))sub_256110588);
  uint64_t v103 = v73;
  if (v69((char *)v51, 1, v52))
  {
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v104 = v51[1];
    swift_bridgeObjectRetain();
  }
  uint64_t v105 = (uint64_t)v144;
  sub_2561777A8();
  sub_2561109EC((uint64_t)v51, v105, (uint64_t (*)(void))sub_2561101D4);
  unsigned int v106 = v69((char *)v105, 1, v52);
  uint64_t v145 = v104;
  uint64_t v107 = v101;
  if (v106 == 1)
  {
    sub_256110A54(v105, (uint64_t (*)(void))sub_2561101D4);
    uint64_t v108 = v133;
    uint64_t v109 = (uint64_t)v132;
    uint64_t v110 = v130;
    uint64_t v111 = v129;
  }
  else
  {
    uint64_t v112 = v105;
    uint64_t v113 = v128;
    sub_256110870(v112, v128, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
    uint64_t v114 = *(void *)(v113 + *(int *)(v52 + 36));
    sub_256110A54(v113, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
    double v115 = 1.0;
    BOOL v116 = v114 < 7;
    uint64_t v108 = v133;
    uint64_t v109 = (uint64_t)v132;
    uint64_t v110 = v130;
    uint64_t v111 = v129;
    if (!v116) {
      goto LABEL_16;
    }
  }
  double v115 = 0.0;
LABEL_16:
  uint64_t v117 = v151;
  v110(v109, v74, v151);
  *(double *)(v109 + *(int *)(v150 + 36)) = v115;
  v111(v74, v117);
  uint64_t v118 = v146;
  sub_256110870(v109, v146, (uint64_t (*)(void))sub_2561104A4);
  uint64_t v119 = v152;
  sub_2561109EC(v156, v152, (uint64_t (*)(void))sub_256110468);
  uint64_t v120 = v148;
  sub_2561109EC(v88, v148, (uint64_t (*)(void))sub_25611054C);
  uint64_t v121 = v107;
  sub_2561109EC(v103, v107, (uint64_t (*)(void))sub_256110588);
  uint64_t v122 = v147;
  sub_2561109EC(v118, v147, (uint64_t (*)(void))sub_2561104A4);
  sub_2561109EC(v119, v108, (uint64_t (*)(void))sub_256110468);
  sub_2561103C0();
  uint64_t v124 = v123;
  sub_2561109EC(v120, v108 + v123[12], (uint64_t (*)(void))sub_25611054C);
  sub_2561109EC(v121, v108 + v124[16], (uint64_t (*)(void))sub_256110588);
  *(void *)(v108 + v124[20]) = v145;
  uint64_t v125 = v108 + v124[24];
  *(void *)uint64_t v125 = 0;
  *(unsigned char *)(v125 + 8) = 1;
  sub_2561109EC(v122, v108 + v124[28], (uint64_t (*)(void))sub_2561104A4);
  swift_bridgeObjectRetain();
  sub_256110A54(v118, (uint64_t (*)(void))sub_2561104A4);
  sub_256110A54(v154, (uint64_t (*)(void))sub_256110588);
  sub_256110A54(v153, (uint64_t (*)(void))sub_25611054C);
  sub_256110A54(v156, (uint64_t (*)(void))sub_256110468);
  sub_256110A54(v122, (uint64_t (*)(void))sub_2561104A4);
  swift_bridgeObjectRelease();
  sub_256110A54(v121, (uint64_t (*)(void))sub_256110588);
  sub_256110A54(v120, (uint64_t (*)(void))sub_25611054C);
  return sub_256110A54(v152, (uint64_t (*)(void))sub_256110468);
}

uint64_t sub_25610FA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v34[5] = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B20];
  sub_2561104E0(0, &qword_269F47070, (uint64_t (*)(uint64_t))sub_256110670, MEMORY[0x263F1B6B0], MEMORY[0x263F19B20]);
  v34[4] = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v34 - v5;
  sub_2561104E0(0, &qword_269F47078, (uint64_t (*)(uint64_t))sub_255FDEEBC, (uint64_t)&type metadata for StateOfMindCalendarPlaceholderView, v3);
  v34[2] = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v34 - v8;
  sub_256110670(0);
  v34[3] = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDEEBC();
  v34[1] = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561101D4(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for StateOfMindCalendarDay();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (id *)((char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = a1 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day;
  swift_beginAccess();
  sub_2561109EC(v23, (uint64_t)v18, (uint64_t (*)(void))sub_2561101D4);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v24(v18, 1, v19) == 1)
  {
    uint64_t v25 = (uint64_t (*)(void))sub_2561101D4;
    uint64_t v26 = (uint64_t)v18;
  }
  else
  {
    sub_256110870((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
    if (*v22)
    {
      id v27 = *v22;
      objc_msgSend(v27, sel_valence);
      LOBYTE(v35) = 0;
      StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(&v37, v28);
      uint64_t v29 = (uint64_t *)((char *)v22 + *(int *)(v19 + 40));
      uint64_t v30 = v29[1];
      uint64_t v35 = *v29;
      uint64_t v36 = v30;
      swift_bridgeObjectRetain();
      sub_256177F68();
      sub_255F97230();
      sub_256177238();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2561109EC((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))sub_255FDEEBC);
      swift_storeEnumTagMultiPayload();
      sub_256083288();
      sub_256110920();
      sub_256176898();
      sub_2561109EC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))sub_256110670);
      swift_storeEnumTagMultiPayload();
      sub_256110974();
      sub_256176898();

      sub_256110A54((uint64_t)v12, (uint64_t (*)(void))sub_256110670);
      sub_256110A54((uint64_t)v15, (uint64_t (*)(void))sub_255FDEEBC);
      uint64_t v31 = (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay;
      uint64_t v32 = (uint64_t)v22;
      return sub_256110A54(v32, v31);
    }
    uint64_t v25 = (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay;
    uint64_t v26 = (uint64_t)v22;
  }
  sub_256110A54(v26, v25);
  v24((char *)v23, 1, v19);
  if (sub_256175A88())
  {
    *(void *)uint64_t v6 = 0;
    v6[8] = 1;
    swift_storeEnumTagMultiPayload();
    sub_256110974();
    return sub_256176898();
  }
  swift_storeEnumTagMultiPayload();
  sub_256083288();
  sub_256110920();
  sub_256176898();
  sub_2561109EC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))sub_256110670);
  swift_storeEnumTagMultiPayload();
  sub_256110974();
  sub_256176898();
  uint64_t v31 = (uint64_t (*)(void))sub_256110670;
  uint64_t v32 = (uint64_t)v12;
  return sub_256110A54(v32, v31);
}

uint64_t sub_2561100F0()
{
  return type metadata accessor for StateOfMindCalendarDayCell();
}

uint64_t type metadata accessor for StateOfMindCalendarDayCell()
{
  uint64_t result = qword_269F46FD8;
  if (!qword_269F46FD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256110144()
{
  sub_2561101D4(319);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_2561101D4(uint64_t a1)
{
}

uint64_t sub_256110208()
{
  return swift_deallocObject();
}

uint64_t sub_256110240(uint64_t a1, uint64_t a2)
{
  return sub_25610EAC8(a1, a2, *(void *)(v2 + 16));
}

void sub_256110248()
{
  if (!qword_269F46FF0)
  {
    sub_2561102F8();
    sub_2561108D8(&qword_269F47058, (void (*)(uint64_t))sub_2561102F8);
    unint64_t v0 = sub_256176A98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46FF0);
    }
  }
}

void sub_2561102F8()
{
  if (!qword_269F46FF8)
  {
    sub_25611038C(255);
    sub_2561108D8(&qword_269F47050, sub_25611038C);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46FF8);
    }
  }
}

void sub_25611038C(uint64_t a1)
{
}

void sub_2561103C0()
{
  if (!qword_269F47008)
  {
    sub_256110468(255);
    sub_25611054C(255);
    sub_256110588(255);
    sub_2561104A4(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F47008);
    }
  }
}

void sub_256110468(uint64_t a1)
{
}

void sub_2561104A4(uint64_t a1)
{
}

void sub_2561104E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_25611054C(uint64_t a1)
{
}

void sub_256110588(uint64_t a1)
{
}

void sub_2561105C4(uint64_t a1)
{
}

void sub_256110600(uint64_t a1)
{
}

void sub_256110634(uint64_t a1)
{
}

void sub_256110670(uint64_t a1)
{
}

uint64_t sub_2561106AC@<X0>(uint64_t a1@<X8>)
{
  return sub_25610EC68(*(void *)(v1 + 16), a1);
}

void sub_2561106B4()
{
  if (!qword_269F47068)
  {
    sub_25611038C(255);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47068);
    }
  }
}

uint64_t sub_25611071C()
{
  return sub_2561763C8();
}

uint64_t sub_256110740(uint64_t a1)
{
  uint64_t v2 = sub_256176778();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2561763D8();
}

void sub_25611080C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256110870(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2561108D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256110920()
{
  unint64_t result = qword_269F47080;
  if (!qword_269F47080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47080);
  }
  return result;
}

unint64_t sub_256110974()
{
  unint64_t result = qword_269F47088;
  if (!qword_269F47088)
  {
    sub_256110670(255);
    sub_256083288();
    sub_256110920();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47088);
  }
  return result;
}

uint64_t sub_2561109EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256110A54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256110AB4(uint64_t a1, uint64_t a2)
{
  sub_2561101D4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t *sub_256110B18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v119 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v122 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      if (v122(a2, 1, v7))
      {
        sub_255FD8280();
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_256176158();
      uint64_t v17 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      uint64_t v120 = *v17;
      (*v17)(v14, v15, v16);
      *((unsigned char *)a1 + v12[6]) = *((unsigned char *)a2 + v12[6]);
      uint64_t v18 = v12[7];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_256175D98();
      uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v117(v19, v20, v21);
      uint64_t v22 = v12[8];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      if (v122((uint64_t *)((char *)a2 + v22), 1, v7))
      {
        sub_255FD8280();
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v24, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
      }
      uint64_t v26 = _s6StylesV8TimelineVMa(0);
      v120(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      uint64_t v27 = v12[9];
      double v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v118 = v8;
      if (v122((uint64_t *)((char *)a2 + v27), 1, v7))
      {
        sub_255FD8280();
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v28, v29, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
      }
      uint64_t v31 = _s6StylesV6NoDataVMa(0);
      v120(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      uint64_t v32 = v12[10];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      if (v122((uint64_t *)((char *)a2 + v32), 1, v7))
      {
        sub_255FD8280();
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        uint64_t v36 = v118;
      }
      else
      {
        uint64_t v36 = v118;
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v33, v34, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v33, 0, 1, v7);
      }
      uint64_t v37 = _s6StylesV11PlaceholderVMa(0);
      v120(&v33[*(int *)(v37 + 20)], &v34[*(int *)(v37 + 20)], v16);
      uint64_t v38 = v12[11];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      if (v122((uint64_t *)((char *)a2 + v38), 1, v7))
      {
        sub_255FD8280();
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v39, v40, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v7);
      }
      uint64_t v42 = _s6StylesV6SymbolVMa(0);
      v120(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v16);
      uint64_t v43 = v12[12];
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      if (v122((uint64_t *)((char *)a2 + v43), 1, v7))
      {
        sub_255FD8280();
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v44, v45, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v7);
      }
      uint64_t v47 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v120(&v44[v47[5]], &v45[v47[5]], v16);
      v44[v47[6]] = v45[v47[6]];
      v117(&v44[v47[7]], &v45[v47[7]], v21);
      uint64_t v48 = v12[13];
      uint64_t v49 = (char *)a1 + v48;
      uint64_t v50 = (char *)a2 + v48;
      if (v122((uint64_t *)((char *)a2 + v48), 1, v7))
      {
        sub_255FD8280();
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v49, v50, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v49, 0, 1, v7);
      }
      uint64_t v52 = _s6StylesV5EmptyVMa(0);
      v120(&v49[*(int *)(v52 + 20)], &v50[*(int *)(v52 + 20)], v16);
      v49[*(int *)(v52 + 24)] = v50[*(int *)(v52 + 24)];
      uint64_t v53 = v12[14];
      double v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      if (v122((uint64_t *)((char *)a2 + v53), 1, v7))
      {
        sub_255FD8280();
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v54, v55, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v54, 0, 1, v7);
      }
      uint64_t v57 = _s6StylesV5DailyVMa(0);
      v120(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v12[15];
      char v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      if (v122((uint64_t *)((char *)a2 + v58), 1, v7))
      {
        sub_255FD8280();
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
        uint64_t v62 = v118;
      }
      else
      {
        uint64_t v62 = v118;
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v59, v60, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v59, 0, 1, v7);
      }
      uint64_t v63 = _s6StylesV9MomentaryVMa(0);
      v120(&v59[*(int *)(v63 + 20)], &v60[*(int *)(v63 + 20)], v16);
      uint64_t v64 = v12[16];
      uint64_t v65 = (char *)a1 + v64;
      uint64_t v66 = (char *)a2 + v64;
      if (v122((uint64_t *)((char *)a2 + v64), 1, v7))
      {
        sub_255FD8280();
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v65, v66, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v65, 0, 1, v7);
      }
      uint64_t v68 = _s6StylesV6HeaderVMa(0);
      v120(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v16);
      uint64_t v69 = v12[17];
      uint64_t v70 = (char *)a1 + v69;
      unint64_t v71 = (char *)a2 + v69;
      if (v122((uint64_t *)((char *)a2 + v69), 1, v7))
      {
        sub_255FD8280();
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v70, v71, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v70, 0, 1, v7);
      }
      uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
      v120(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v16);
      uint64_t v74 = v12[18];
      uint64_t v75 = (char *)a1 + v74;
      uint64_t v76 = (char *)a2 + v74;
      if (v122((uint64_t *)((char *)a2 + v74), 1, v7))
      {
        sub_255FD8280();
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v75, v76, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v75, 0, 1, v7);
      }
      uint64_t v6 = v119;
      uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
      v120(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v16);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = *(int *)(v6 + 20);
    uint64_t v121 = a1;
    uint64_t v123 = a2;
    uint64_t v80 = (char *)a1 + v79;
    uint64_t v81 = (uint64_t *)((char *)a2 + v79);
    *(uint64_t *)((char *)a1 + v79) = *v81;
    uint64_t v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v83 = v82[5];
    uint64_t v84 = &v80[v83];
    uint64_t v85 = (char *)v81 + v83;
    uint64_t v86 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    uint64_t v87 = v82[6];
    uint64_t v88 = &v80[v87];
    uint64_t v89 = (uint64_t *)((char *)v81 + v87);
    uint64_t v90 = v89[1];
    *(void *)uint64_t v88 = *v89;
    *((void *)v88 + 1) = v90;
    uint64_t v91 = v82[7];
    long long v92 = &v80[v91];
    uint64_t v93 = (char *)v81 + v91;
    uint64_t v94 = (int *)_s5EntryVMa();
    uint64_t v95 = *((void *)v94 - 1);
    uint64_t v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
    swift_bridgeObjectRetain();
    if (v96(v93, 1, v94))
    {
      sub_25611191C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      memcpy(v92, v93, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      uint64_t v98 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v92, v93, v98);
      uint64_t v99 = v94[5];
      uint64_t v100 = &v92[v99];
      uint64_t v101 = &v93[v99];
      uint64_t v102 = *((void *)v101 + 1);
      *(void *)uint64_t v100 = *(void *)v101;
      *((void *)v100 + 1) = v102;
      uint64_t v103 = v94[6];
      uint64_t v104 = &v92[v103];
      uint64_t v105 = &v93[v103];
      uint64_t v106 = *((void *)v105 + 1);
      *(void *)uint64_t v104 = *(void *)v105;
      *((void *)v104 + 1) = v106;
      uint64_t v107 = v94[7];
      uint64_t v108 = &v92[v107];
      uint64_t v109 = &v93[v107];
      uint64_t v110 = *((void *)v109 + 1);
      *(void *)uint64_t v108 = *(void *)v109;
      *((void *)v108 + 1) = v110;
      uint64_t v111 = v94[8];
      uint64_t v112 = &v92[v111];
      uint64_t v113 = &v93[v111];
      uint64_t v114 = *((void *)v113 + 1);
      *(void *)uint64_t v112 = *(void *)v113;
      *((void *)v112 + 1) = v114;
      *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
      double v115 = *(void (**)(char *, void, uint64_t, int *))(v95 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v115(v92, 0, 1, v94);
    }
    *(void *)&v80[v82[8]] = *(uint64_t *)((char *)v81 + v82[8]);
    *(void *)&v80[v82[9]] = *(uint64_t *)((char *)v81 + v82[9]);
    uint64_t v11 = v121;
    *(uint64_t *)((char *)v121 + *(int *)(v119 + 24)) = *(uint64_t *)((char *)v123 + *(int *)(v119 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v11;
}

void sub_25611191C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256111980(uint64_t a1, uint64_t a2)
{
  sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = a2;
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = a1 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    uint64_t v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = a1 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    uint64_t v47 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v48 = v14;
    v47(v13);
    uint64_t v15 = a1 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = a1 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = a1 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = a1 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = a1 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v50 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v47)(v23 + *(int *)(v24 + 28), v48);
    uint64_t v25 = v12;
    uint64_t v26 = a1 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = a1 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = a1 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = a1 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = a1 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = a1 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
    a2 = v49;
  }
  else
  {
    swift_release();
  }
  uint64_t v39 = a1 + *(int *)(a2 + 20);
  uint64_t v40 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v41 = v39 + *(int *)(v40 + 20);
  uint64_t v42 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  swift_bridgeObjectRelease();
  uint64_t v43 = v39 + *(int *)(v40 + 28);
  uint64_t v44 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44))
  {
    uint64_t v45 = sub_2561758A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_2561120F0(void *a1, void *a2, uint64_t a3)
{
  sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v116 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v119 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    if (v119(a2, 1, v6))
    {
      sub_255FD8280();
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v117 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v114(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v119((void *)((char *)a2 + v19), 1, v6))
    {
      sub_255FD8280();
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v117(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v115 = v7;
    if (v119((void *)((char *)a2 + v24), 1, v6))
    {
      sub_255FD8280();
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v117(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v119((void *)((char *)a2 + v29), 1, v6))
    {
      sub_255FD8280();
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      uint64_t v33 = v115;
    }
    else
    {
      uint64_t v33 = v115;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v30, 0, 1, v6);
    }
    uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
    v117(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
    uint64_t v35 = v9[11];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    if (v119((void *)((char *)a2 + v35), 1, v6))
    {
      sub_255FD8280();
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v36, v37, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
    }
    uint64_t v39 = _s6StylesV6SymbolVMa(0);
    v117(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
    uint64_t v40 = v9[12];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    if (v119((void *)((char *)a2 + v40), 1, v6))
    {
      sub_255FD8280();
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v41, v42, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
    }
    uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v117(&v41[v44[5]], &v42[v44[5]], v13);
    v41[v44[6]] = v42[v44[6]];
    v114(&v41[v44[7]], &v42[v44[7]], v18);
    uint64_t v45 = v9[13];
    uint64_t v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    if (v119((void *)((char *)a2 + v45), 1, v6))
    {
      sub_255FD8280();
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v46, v47, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v46, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v117(&v46[*(int *)(v49 + 20)], &v47[*(int *)(v49 + 20)], v13);
    v46[*(int *)(v49 + 24)] = v47[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v119((void *)((char *)a2 + v50), 1, v6))
    {
      sub_255FD8280();
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v117(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v119((void *)((char *)a2 + v55), 1, v6))
    {
      sub_255FD8280();
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      uint64_t v59 = v115;
    }
    else
    {
      uint64_t v59 = v115;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v56, 0, 1, v6);
    }
    uint64_t v60 = _s6StylesV9MomentaryVMa(0);
    v117(&v56[*(int *)(v60 + 20)], &v57[*(int *)(v60 + 20)], v13);
    uint64_t v61 = v9[16];
    uint64_t v62 = (char *)a1 + v61;
    uint64_t v63 = (char *)a2 + v61;
    if (v119((void *)((char *)a2 + v61), 1, v6))
    {
      sub_255FD8280();
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v62, v63, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v62, 0, 1, v6);
    }
    uint64_t v65 = _s6StylesV6HeaderVMa(0);
    v117(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
    uint64_t v66 = v9[17];
    uint64_t v67 = (char *)a1 + v66;
    uint64_t v68 = (char *)a2 + v66;
    if (v119((void *)((char *)a2 + v66), 1, v6))
    {
      sub_255FD8280();
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v67, 0, 1, v6);
    }
    uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
    v117(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
    uint64_t v71 = v9[18];
    uint64_t v72 = (char *)a1 + v71;
    uint64_t v73 = (char *)a2 + v71;
    if (v119((void *)((char *)a2 + v71), 1, v6))
    {
      sub_255FD8280();
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v72, v73, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v72, 0, 1, v6);
    }
    a3 = v116;
    uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
    v117(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = *(int *)(a3 + 20);
  uint64_t v118 = a1;
  uint64_t v120 = a2;
  uint64_t v77 = (char *)a1 + v76;
  uint64_t v78 = (void *)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = *v78;
  uint64_t v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v80 = v79[5];
  uint64_t v81 = &v77[v80];
  uint64_t v82 = (char *)v78 + v80;
  uint64_t v83 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
  uint64_t v84 = v79[6];
  uint64_t v85 = &v77[v84];
  uint64_t v86 = (void *)((char *)v78 + v84);
  uint64_t v87 = v86[1];
  *(void *)uint64_t v85 = *v86;
  *((void *)v85 + 1) = v87;
  uint64_t v88 = v79[7];
  uint64_t v89 = &v77[v88];
  uint64_t v90 = (char *)v78 + v88;
  uint64_t v91 = (int *)_s5EntryVMa();
  uint64_t v92 = *((void *)v91 - 1);
  uint64_t v93 = *(unsigned int (**)(char *, uint64_t, int *))(v92 + 48);
  swift_bridgeObjectRetain();
  if (v93(v90, 1, v91))
  {
    sub_25611191C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v89, v90, *(void *)(*(void *)(v94 - 8) + 64));
  }
  else
  {
    uint64_t v95 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v89, v90, v95);
    uint64_t v96 = v91[5];
    uint64_t v97 = &v89[v96];
    uint64_t v98 = &v90[v96];
    uint64_t v99 = *((void *)v98 + 1);
    *(void *)uint64_t v97 = *(void *)v98;
    *((void *)v97 + 1) = v99;
    uint64_t v100 = v91[6];
    uint64_t v101 = &v89[v100];
    uint64_t v102 = &v90[v100];
    uint64_t v103 = *((void *)v102 + 1);
    *(void *)uint64_t v101 = *(void *)v102;
    *((void *)v101 + 1) = v103;
    uint64_t v104 = v91[7];
    uint64_t v105 = &v89[v104];
    uint64_t v106 = &v90[v104];
    uint64_t v107 = *((void *)v106 + 1);
    *(void *)uint64_t v105 = *(void *)v106;
    *((void *)v105 + 1) = v107;
    uint64_t v108 = v91[8];
    uint64_t v109 = &v89[v108];
    uint64_t v110 = &v90[v108];
    uint64_t v111 = *((void *)v110 + 1);
    *(void *)uint64_t v109 = *(void *)v110;
    *((void *)v109 + 1) = v111;
    *(void *)&v89[v91[9]] = *(void *)&v90[v91[9]];
    uint64_t v112 = *(void (**)(char *, void, uint64_t, int *))(v92 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v112(v89, 0, 1, v91);
  }
  *(void *)&v77[v79[8]] = *(void *)((char *)v78 + v79[8]);
  *(void *)&v77[v79[9]] = *(void *)((char *)v78 + v79[9]);
  *(void *)((char *)v118 + *(int *)(v116 + 24)) = *(void *)((char *)v120 + *(int *)(v116 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v118;
}

void *sub_256112EA4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25611C9DC((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v129 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v125 = v8;
      if (v129(a2, 1, v7))
      {
        sub_255FD8280();
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      uint64_t v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      uint64_t v127 = *v15;
      (*v15)(v12, v13, v14);
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      uint64_t v16 = v10[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_256175D98();
      uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v124(v17, v18, v19);
      uint64_t v20 = v10[8];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      if (v129((void *)((char *)a2 + v20), 1, v7))
      {
        sub_255FD8280();
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v21, v22, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v21, 0, 1, v7);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v127(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      uint64_t v25 = v10[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (v129((void *)((char *)a2 + v25), 1, v7))
      {
        sub_255FD8280();
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v26, v27, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v26, 0, 1, v7);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v127(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v10[10];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      if (v129((void *)((char *)a2 + v30), 1, v7))
      {
        sub_255FD8280();
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v31, v32, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v31, 0, 1, v7);
      }
      uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
      v127(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v14);
      uint64_t v35 = v10[11];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      if (v129((void *)((char *)a2 + v35), 1, v7))
      {
        sub_255FD8280();
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v36, v37, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v36, 0, 1, v7);
      }
      uint64_t v39 = _s6StylesV6SymbolVMa(0);
      v127(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v14);
      uint64_t v40 = v10[12];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      if (v129((void *)((char *)a2 + v40), 1, v7))
      {
        sub_255FD8280();
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v41, v42, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v41, 0, 1, v7);
      }
      uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v127(&v41[v44[5]], &v42[v44[5]], v14);
      v41[v44[6]] = v42[v44[6]];
      v124(&v41[v44[7]], &v42[v44[7]], v19);
      uint64_t v45 = v10[13];
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      if (v129((void *)((char *)a2 + v45), 1, v7))
      {
        sub_255FD8280();
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v125;
      }
      else
      {
        uint64_t v49 = v125;
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v46, v47, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v46, 0, 1, v7);
      }
      uint64_t v50 = _s6StylesV5EmptyVMa(0);
      v127(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v14);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      uint64_t v51 = v10[14];
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      if (v129((void *)((char *)a2 + v51), 1, v7))
      {
        sub_255FD8280();
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      uint64_t v55 = _s6StylesV5DailyVMa(0);
      v127(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      uint64_t v56 = v10[15];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      if (v129((void *)((char *)a2 + v56), 1, v7))
      {
        sub_255FD8280();
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      uint64_t v60 = _s6StylesV9MomentaryVMa(0);
      v127(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v14);
      uint64_t v61 = v10[16];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      if (v129((void *)((char *)a2 + v61), 1, v7))
      {
        sub_255FD8280();
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      uint64_t v65 = _s6StylesV6HeaderVMa(0);
      v127(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v14);
      uint64_t v66 = v10[17];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      if (v129((void *)((char *)a2 + v66), 1, v7))
      {
        sub_255FD8280();
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
      v127(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v14);
      uint64_t v71 = v10[18];
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      if (v129((void *)((char *)a2 + v71), 1, v7))
      {
        sub_255FD8280();
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
      v127(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v14);
      uint64_t v3 = a3;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v76 = *(int *)(v3 + 20);
  uint64_t v128 = a1;
  uint64_t v130 = a2;
  uint64_t v77 = (char *)a1 + v76;
  uint64_t v78 = (void *)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = *v78;
  uint64_t v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v80 = v79[5];
  uint64_t v81 = &v77[v80];
  uint64_t v82 = (char *)v78 + v80;
  uint64_t v83 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 24))(v81, v82, v83);
  uint64_t v84 = v79[6];
  uint64_t v85 = &v77[v84];
  uint64_t v86 = (void *)((char *)v78 + v84);
  *(void *)uint64_t v85 = *v86;
  *((void *)v85 + 1) = v86[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = v79[7];
  uint64_t v88 = &v77[v87];
  uint64_t v89 = (char *)v78 + v87;
  uint64_t v90 = (int *)_s5EntryVMa();
  uint64_t v91 = *((void *)v90 - 1);
  uint64_t v92 = *(uint64_t (**)(char *, uint64_t, int *))(v91 + 48);
  int v93 = v92(v88, 1, v90);
  int v94 = v92(v89, 1, v90);
  if (!v93)
  {
    if (!v94)
    {
      uint64_t v111 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 24))(v88, v89, v111);
      uint64_t v112 = v90[5];
      uint64_t v113 = &v88[v112];
      uint64_t v114 = &v89[v112];
      *(void *)uint64_t v113 = *(void *)v114;
      *((void *)v113 + 1) = *((void *)v114 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v115 = v90[6];
      uint64_t v116 = &v88[v115];
      uint64_t v117 = &v89[v115];
      *(void *)uint64_t v116 = *(void *)v117;
      *((void *)v116 + 1) = *((void *)v117 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v118 = v90[7];
      uint64_t v119 = &v88[v118];
      uint64_t v120 = &v89[v118];
      *(void *)uint64_t v119 = *(void *)v120;
      *((void *)v119 + 1) = *((void *)v120 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v121 = v90[8];
      uint64_t v122 = &v88[v121];
      uint64_t v123 = &v89[v121];
      *(void *)uint64_t v122 = *(void *)v123;
      *((void *)v122 + 1) = *((void *)v123 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v88[v90[9]] = *(void *)&v89[v90[9]];
      goto LABEL_48;
    }
    sub_256119F6C((uint64_t)v88, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_47;
  }
  if (v94)
  {
LABEL_47:
    sub_25611191C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v88, v89, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v95 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v88, v89, v95);
  uint64_t v96 = v90[5];
  uint64_t v97 = &v88[v96];
  uint64_t v98 = &v89[v96];
  *(void *)uint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = *((void *)v98 + 1);
  uint64_t v99 = v90[6];
  uint64_t v100 = &v88[v99];
  uint64_t v101 = &v89[v99];
  *(void *)uint64_t v100 = *(void *)v101;
  *((void *)v100 + 1) = *((void *)v101 + 1);
  uint64_t v102 = v90[7];
  uint64_t v103 = &v88[v102];
  uint64_t v104 = &v89[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  *((void *)v103 + 1) = *((void *)v104 + 1);
  uint64_t v105 = v90[8];
  uint64_t v106 = &v88[v105];
  uint64_t v107 = &v89[v105];
  *(void *)uint64_t v106 = *(void *)v107;
  *((void *)v106 + 1) = *((void *)v107 + 1);
  *(void *)&v88[v90[9]] = *(void *)&v89[v90[9]];
  uint64_t v108 = *(void (**)(char *, void, uint64_t, int *))(v91 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v108(v88, 0, 1, v90);
LABEL_48:
  *(void *)&v77[v79[8]] = *(void *)((char *)v78 + v79[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v77[v79[9]] = *(void *)((char *)v78 + v79[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v128 + *(int *)(a3 + 24)) = *(void *)((char *)v130 + *(int *)(a3 + 24));
  return v128;
}

char *sub_256113E2C(char *a1, char *a2, uint64_t a3)
{
  sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v93 = a3;
    uint64_t v94 = v9;
    if (v96(a2, 1, v8))
    {
      sub_255FD8280();
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v95 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v92(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v96(&a2[v21], 1, v8))
    {
      sub_255FD8280();
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v95(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    if (v96(&a2[v26], 1, v8))
    {
      sub_255FD8280();
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v95(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v96(&a2[v31], 1, v8))
    {
      sub_255FD8280();
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v95(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v96(&a2[v36], 1, v8))
    {
      sub_255FD8280();
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v95(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v96(&a2[v41], 1, v8))
    {
      sub_255FD8280();
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v95(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v92(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v96(&a2[v46], 1, v8))
    {
      sub_255FD8280();
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v47, 0, 1, v8);
    }
    a3 = v93;
    uint64_t v50 = _s6StylesV5EmptyVMa(0);
    v95(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v15);
    v47[*(int *)(v50 + 24)] = v48[*(int *)(v50 + 24)];
    uint64_t v51 = v11[14];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    if (v96(&a2[v51], 1, v8))
    {
      sub_255FD8280();
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v52, v53, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v52, 0, 1, v8);
    }
    uint64_t v55 = _s6StylesV5DailyVMa(0);
    v95(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v15);
    v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
    uint64_t v56 = v11[15];
    uint64_t v57 = &a1[v56];
    uint64_t v58 = &a2[v56];
    if (v96(&a2[v56], 1, v8))
    {
      sub_255FD8280();
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v57, v58, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v57, 0, 1, v8);
    }
    uint64_t v60 = _s6StylesV9MomentaryVMa(0);
    v95(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v15);
    uint64_t v61 = v11[16];
    uint64_t v62 = &a1[v61];
    uint64_t v63 = &a2[v61];
    if (v96(&a2[v61], 1, v8))
    {
      sub_255FD8280();
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v62, v63, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v62, 0, 1, v8);
    }
    uint64_t v65 = _s6StylesV6HeaderVMa(0);
    v95(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v15);
    uint64_t v66 = v11[17];
    uint64_t v67 = &a1[v66];
    uint64_t v68 = &a2[v66];
    if (v96(&a2[v66], 1, v8))
    {
      sub_255FD8280();
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v67, v68, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v67, 0, 1, v8);
    }
    uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
    v95(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v15);
    uint64_t v71 = v11[18];
    uint64_t v72 = &a1[v71];
    uint64_t v73 = &a2[v71];
    if (v96(&a2[v71], 1, v8))
    {
      sub_255FD8280();
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v72, v73, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v72, 0, 1, v8);
    }
    uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
    v95(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v76 = *(int *)(a3 + 20);
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  *(void *)&a1[v76] = *(void *)&a2[v76];
  uint64_t v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v80 = v79[5];
  uint64_t v81 = &v77[v80];
  uint64_t v82 = &v78[v80];
  uint64_t v83 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
  *(_OWORD *)&v77[v79[6]] = *(_OWORD *)&v78[v79[6]];
  uint64_t v84 = v79[7];
  uint64_t v85 = &v77[v84];
  uint64_t v86 = &v78[v84];
  uint64_t v87 = (int *)_s5EntryVMa();
  uint64_t v88 = *((void *)v87 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v88 + 48))(v86, 1, v87))
  {
    sub_25611191C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    uint64_t v90 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v85, v86, v90);
    *(_OWORD *)&v85[v87[5]] = *(_OWORD *)&v86[v87[5]];
    *(_OWORD *)&v85[v87[6]] = *(_OWORD *)&v86[v87[6]];
    *(_OWORD *)&v85[v87[7]] = *(_OWORD *)&v86[v87[7]];
    *(_OWORD *)&v85[v87[8]] = *(_OWORD *)&v86[v87[8]];
    *(void *)&v85[v87[9]] = *(void *)&v86[v87[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v88 + 56))(v85, 0, 1, v87);
  }
  *(void *)&v77[v79[8]] = *(void *)&v78[v79[8]];
  *(void *)&v77[v79[9]] = *(void *)&v78[v79[9]];
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_256114BB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25611C9DC((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v123 = v10;
      if (v127(a2, 1, v9))
      {
        sub_255FD8280();
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_256176158();
      uint64_t v17 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      uint64_t v125 = *v17;
      (*v17)(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      uint64_t v18 = v12[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_256175D98();
      uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v122(v19, v20, v21);
      uint64_t v22 = v12[8];
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      if (v127(&a2[v22], 1, v9))
      {
        sub_255FD8280();
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v23, v24, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v23, 0, 1, v9);
      }
      uint64_t v26 = _s6StylesV8TimelineVMa(0);
      v125(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      uint64_t v27 = v12[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      if (v127(&a2[v27], 1, v9))
      {
        sub_255FD8280();
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v28, v29, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v28, 0, 1, v9);
      }
      uint64_t v31 = _s6StylesV6NoDataVMa(0);
      v125(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      uint64_t v32 = v12[10];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      if (v127(&a2[v32], 1, v9))
      {
        sub_255FD8280();
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v33, v34, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v33, 0, 1, v9);
      }
      uint64_t v36 = _s6StylesV11PlaceholderVMa(0);
      v125(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      uint64_t v37 = v12[11];
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      if (v127(&a2[v37], 1, v9))
      {
        sub_255FD8280();
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v38, v39, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v38, 0, 1, v9);
      }
      uint64_t v41 = _s6StylesV6SymbolVMa(0);
      v125(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      uint64_t v42 = v12[12];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      if (v127(&a2[v42], 1, v9))
      {
        sub_255FD8280();
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v43, v44, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v43, 0, 1, v9);
      }
      uint64_t v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v125(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v122(&v43[v46[7]], &v44[v46[7]], v21);
      uint64_t v47 = v12[13];
      uint64_t v48 = &a1[v47];
      uint64_t v49 = &a2[v47];
      if (v127(&a2[v47], 1, v9))
      {
        sub_255FD8280();
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v123;
      }
      else
      {
        uint64_t v51 = v123;
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v48, v49, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v48, 0, 1, v9);
      }
      uint64_t v52 = _s6StylesV5EmptyVMa(0);
      v125(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      uint64_t v53 = v12[14];
      uint64_t v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      if (v127(&a2[v53], 1, v9))
      {
        sub_255FD8280();
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      uint64_t v57 = _s6StylesV5DailyVMa(0);
      v125(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v12[15];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      if (v127(&a2[v58], 1, v9))
      {
        sub_255FD8280();
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      uint64_t v3 = a3;
      uint64_t v62 = _s6StylesV9MomentaryVMa(0);
      v125(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      uint64_t v63 = v12[16];
      uint64_t v64 = &a1[v63];
      uint64_t v65 = &a2[v63];
      if (v127(&a2[v63], 1, v9))
      {
        sub_255FD8280();
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      uint64_t v67 = _s6StylesV6HeaderVMa(0);
      v125(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      uint64_t v68 = v12[17];
      uint64_t v69 = &a1[v68];
      uint64_t v70 = &a2[v68];
      if (v127(&a2[v68], 1, v9))
      {
        sub_255FD8280();
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      uint64_t v72 = _s6StylesV11ChartButtonVMa(0);
      v125(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      uint64_t v73 = v12[18];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = &a2[v73];
      if (v127(&a2[v73], 1, v9))
      {
        sub_255FD8280();
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      uint64_t v77 = _s6StylesV15LogButtonFooterVMa(0);
      v125(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
  }
  uint64_t v78 = *(int *)(v3 + 20);
  uint64_t v126 = a2;
  uint64_t v128 = a1;
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  *(void *)&a1[v78] = *(void *)&a2[v78];
  uint64_t v81 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v82 = v81[5];
  uint64_t v83 = &v79[v82];
  uint64_t v84 = &v80[v82];
  uint64_t v85 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 40))(v83, v84, v85);
  uint64_t v86 = v81[6];
  uint64_t v87 = &v79[v86];
  uint64_t v88 = &v80[v86];
  uint64_t v90 = *(void *)v88;
  uint64_t v89 = *((void *)v88 + 1);
  *(void *)uint64_t v87 = v90;
  *((void *)v87 + 1) = v89;
  swift_bridgeObjectRelease();
  uint64_t v91 = v81[7];
  uint64_t v92 = &v79[v91];
  uint64_t v93 = &v80[v91];
  uint64_t v94 = (int *)_s5EntryVMa();
  uint64_t v95 = *((void *)v94 - 1);
  uint64_t v96 = *(uint64_t (**)(char *, uint64_t, int *))(v95 + 48);
  LODWORD(v83) = v96(v92, 1, v94);
  int v97 = v96(v93, 1, v94);
  if (!v83)
  {
    if (!v97)
    {
      uint64_t v101 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 40))(v92, v93, v101);
      uint64_t v102 = v94[5];
      uint64_t v103 = &v92[v102];
      uint64_t v104 = &v93[v102];
      uint64_t v106 = *(void *)v104;
      uint64_t v105 = *((void *)v104 + 1);
      *(void *)uint64_t v103 = v106;
      *((void *)v103 + 1) = v105;
      swift_bridgeObjectRelease();
      uint64_t v107 = v94[6];
      uint64_t v108 = &v92[v107];
      uint64_t v109 = &v93[v107];
      uint64_t v111 = *(void *)v109;
      uint64_t v110 = *((void *)v109 + 1);
      *(void *)uint64_t v108 = v111;
      *((void *)v108 + 1) = v110;
      swift_bridgeObjectRelease();
      uint64_t v112 = v94[7];
      uint64_t v113 = &v92[v112];
      uint64_t v114 = &v93[v112];
      uint64_t v116 = *(void *)v114;
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)uint64_t v113 = v116;
      *((void *)v113 + 1) = v115;
      swift_bridgeObjectRelease();
      uint64_t v117 = v94[8];
      uint64_t v118 = &v92[v117];
      uint64_t v119 = &v93[v117];
      uint64_t v121 = *(void *)v119;
      uint64_t v120 = *((void *)v119 + 1);
      *(void *)uint64_t v118 = v121;
      *((void *)v118 + 1) = v120;
      swift_bridgeObjectRelease();
      *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
      goto LABEL_47;
    }
    sub_256119F6C((uint64_t)v92, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_46;
  }
  if (v97)
  {
LABEL_46:
    sub_25611191C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v92, v93, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_47;
  }
  uint64_t v98 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v92, v93, v98);
  *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
  *(_OWORD *)&v92[v94[6]] = *(_OWORD *)&v93[v94[6]];
  *(_OWORD *)&v92[v94[7]] = *(_OWORD *)&v93[v94[7]];
  *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
  *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v95 + 56))(v92, 0, 1, v94);
LABEL_47:
  *(void *)&v79[v81[8]] = *(void *)&v80[v81[8]];
  swift_bridgeObjectRelease();
  *(void *)&v79[v81[9]] = *(void *)&v80[v81[9]];
  swift_bridgeObjectRelease();
  *(void *)&v128[*(int *)(a3 + 24)] = *(void *)&v126[*(int *)(a3 + 24)];
  return v128;
}

uint64_t sub_256115A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256115A8C);
}

uint64_t sub_256115A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25611191C(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_256115BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256115BC8);
}

uint64_t sub_256115BC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25611191C(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s13EntryBaseViewVMa()
{
  uint64_t result = qword_269F47090;
  if (!qword_269F47090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256115D48()
{
  sub_25611191C(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for StateOfMindTimeline.DaySummary();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_256115E4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256115E68@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    uint64_t v23 = (void *)sub_256176D48();
    sub_256175B38();
  }
  sub_2561762E8();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_25611DF9C((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_25611DFF8((uint64_t)v39);
  sub_25611E02C((uint64_t)&v38);
  return sub_255F9A600((uint64_t)&v34);
}

double sub_256116044@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CB7C, (uint64_t (*)(void))sub_255F723AC).n128_u64[0];
  return result;
}

double sub_2561160B4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CB64, (uint64_t (*)(void))sub_255F7327C).n128_u64[0];
  return result;
}

__n128 sub_256116124@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t), uint64_t (*a17)(void))
{
  uint64_t v18 = v17;
  uint64_t v20 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    long long v29 = (void *)sub_256176D48();
    sub_256175B38();

    uint64_t v20 = a17;
  }
  sub_2561762E8();
  a16(v18, a9);
  long long v30 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *long long v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_2561162F8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CB4C, (uint64_t (*)(void))sub_255F841A0).n128_u64[0];
  return result;
}

double sub_256116368@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CABC, (uint64_t (*)(void))sub_25611CB24).n128_u64[0];
  return result;
}

uint64_t sub_2561163D8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    long long v31 = (void *)sub_256176D48();
    sub_256175B38();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_2561762E8();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_255F67B94(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

double sub_2561165CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D708, (uint64_t (*)(void))sub_255F968B8).n128_u64[0];
  return result;
}

double sub_25611663C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CF88, (uint64_t (*)(void))sub_25611CFA0).n128_u64[0];
  return result;
}

double sub_2561166AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D2A4, (uint64_t (*)(void))sub_255FDDE28).n128_u64[0];
  return result;
}

double sub_25611671C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D28C, (uint64_t (*)(void))sub_255FDDD24).n128_u64[0];
  return result;
}

double sub_25611678C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2561173A8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, MEMORY[0x263F1A0D0], (uint64_t (*)(void))sub_2560156FC).n128_u64[0];
  return result;
}

double sub_2561167FC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CA38, (uint64_t (*)(void))sub_25603D5B8).n128_u64[0];
  return result;
}

uint64_t sub_25611686C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    long long v25 = (void *)sub_256176D48();
    sub_256175B38();
  }
  sub_2561762E8();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;

  return swift_retain();
}

double sub_256116A28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CB94, (uint64_t (*)(void))sub_25611CC18).n128_u64[0];
  return result;
}

double sub_256116A98@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611E0C0, (uint64_t (*)(void))sub_25607233C).n128_u64[0];
  return result;
}

uint64_t sub_256116B08@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int16 a18)
{
  __int16 v19 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    long long v28 = (void *)sub_256176D48();
    sub_256175B38();

    __int16 v19 = a18;
  }
  sub_2561762E8();
  *(_OWORD *)(a9 + 72) = v33;
  *(_OWORD *)(a9 + 88) = v34;
  *(_OWORD *)(a9 + 104) = v35;
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 24) = v30;
  *(_OWORD *)(a9 + 40) = v31;
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = a17;
  *(unsigned char *)(a9 + 16) = v19 & 1;
  *(unsigned char *)(a9 + 17) = HIBYTE(v19) & 1;
  *(_OWORD *)(a9 + 56) = v32;

  return swift_retain();
}

double sub_256116CF0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D488, (uint64_t (*)(void))sub_2560819BC).n128_u64[0];
  return result;
}

double sub_256116D60@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D3B8, (uint64_t (*)(void))sub_255FDE97C).n128_u64[0];
  return result;
}

double sub_256116DD0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D3A0, (uint64_t (*)(void))sub_256081C14).n128_u64[0];
  return result;
}

double sub_256116E40@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D3D0, (uint64_t (*)(void))sub_255FDEF44).n128_u64[0];
  return result;
}

uint64_t sub_256116EB0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    uint64_t v23 = (void *)sub_256176D48();
    sub_256175B38();
  }
  sub_2561762E8();
  long long v24 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v24;
  long long v25 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v25;
  long long v26 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  long long v28 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v28;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 264) = v36;
  *(_OWORD *)(a9 + 168) = v30;
  *(_OWORD *)(a9 + 184) = v31;
  *(void *)(a9 + 160) = *(void *)(v13 + 160);
  *(_OWORD *)(a9 + 200) = v32;

  return sub_25611D2EC(v13);
}

double sub_256117098@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D2D4, (uint64_t (*)(void))sub_256081CCC).n128_u64[0];
  return result;
}

uint64_t sub_256117108@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    long long v27 = (void *)sub_256176D48();
    sub_256175B38();

    uint64_t v18 = a16;
  }
  sub_2561762E8();
  *(void *)a9 = v18;
  *(void *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;

  return swift_retain();
}

double sub_2561172C8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D2BC, (uint64_t (*)(void))sub_2560B4204).n128_u64[0];
  return result;
}

double sub_256117338@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2561173A8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t (*)(void))sub_2560B749C, (uint64_t (*)(void))sub_2560B7474).n128_u64[0];
  return result;
}

__n128 sub_2561173A8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(void), uint64_t (*a17)(void))
{
  uint64_t v18 = v17;
  uint64_t v20 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    long long v29 = (void *)sub_256176D48();
    sub_256175B38();

    uint64_t v20 = a17;
  }
  sub_2561762E8();
  uint64_t v30 = a16(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a9, v18, v30);
  long long v31 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v31[4] = v37;
  v31[5] = v38;
  v31[6] = v39;
  *long long v31 = v33;
  v31[1] = v34;
  __n128 result = v36;
  v31[2] = v35;
  v31[3] = v36;
  return result;
}

double sub_2561175AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D274, (uint64_t (*)(void))sub_2560B7648).n128_u64[0];
  return result;
}

double sub_25611761C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D60C, (uint64_t (*)(void))sub_25611D6C8).n128_u64[0];
  return result;
}

double sub_25611768C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611E098, (uint64_t (*)(void))sub_2560FB39C).n128_u64[0];
  return result;
}

__n128 sub_2561176FC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_256178228();
    uint64_t v23 = (void *)sub_256176D48();
    sub_256175B38();
  }
  sub_2561762E8();
  long long v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(void *)(a9 + 112) = *(void *)(v13 + 112);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  long long v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 152) = v30;
  *(_OWORD *)(a9 + 136) = v29;
  *(_OWORD *)(a9 + 120) = v28;
  __n128 result = v32;
  *(_OWORD *)(a9 + 216) = v34;
  *(_OWORD *)(a9 + 200) = v33;
  *(__n128 *)(a9 + 184) = v32;
  *(_OWORD *)(a9 + 168) = v31;
  return result;
}

double sub_2561178C4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D6F0, (uint64_t (*)(void))sub_256104E98).n128_u64[0];
  return result;
}

double sub_256117934@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611E058, (uint64_t (*)(void))sub_25611E070).n128_u64[0];
  return result;
}

double sub_2561179A4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611D7E8, (uint64_t (*)(void))sub_25611DA1C).n128_u64[0];
  return result;
}

double sub_256117A14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611DA44, (uint64_t (*)(void))sub_25611DF74).n128_u64[0];
  return result;
}

double sub_256117A84@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611E218, (uint64_t (*)(void))sub_25611E7B8).n128_u64[0];
  return result;
}

double sub_256117AF4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611E0D8, (uint64_t (*)(void))sub_25611E1F0).n128_u64[0];
  return result;
}

double sub_256117B64@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_256116124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_25611CFC8, (uint64_t (*)(void))sub_25611D24C).n128_u64[0];
  return result;
}

uint64_t sub_256117BD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_256176AA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD821C();
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD8280();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v25 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v25 - v17;
  sub_256119FCC(v1, (uint64_t)&v25 - v17, (uint64_t (*)(void))sub_255FD8280);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v16, *MEMORY[0x263F19F08], v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v16, 0, 1, v2);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_256119FCC((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))sub_255FD8280);
  sub_256119FCC((uint64_t)v16, v19, (uint64_t (*)(void))sub_255FD8280);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v20((uint64_t)v9, 1, v2) == 1)
  {
    char v21 = sub_255FD8280;
    sub_256119F6C((uint64_t)v16, (uint64_t (*)(void))sub_255FD8280);
    sub_256119F6C((uint64_t)v18, (uint64_t (*)(void))sub_255FD8280);
    if (v20(v19, 1, v2) == 1)
    {
      char v22 = -1;
    }
    else
    {
      char v21 = sub_255FD821C;
      char v22 = 0;
    }
  }
  else
  {
    sub_256119FCC((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_255FD8280);
    if (v20(v19, 1, v2) == 1)
    {
      sub_256119F6C((uint64_t)v16, (uint64_t (*)(void))sub_255FD8280);
      sub_256119F6C((uint64_t)v18, (uint64_t (*)(void))sub_255FD8280);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
      char v22 = 0;
      char v21 = sub_255FD821C;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v19, v2);
      sub_256119890(qword_269F43E70, MEMORY[0x263F19F18]);
      char v22 = sub_256177E98();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
      v23(v5, v2);
      char v21 = sub_255FD8280;
      sub_256119F6C((uint64_t)v16, (uint64_t (*)(void))sub_255FD8280);
      sub_256119F6C((uint64_t)v18, (uint64_t (*)(void))sub_255FD8280);
      v23(v13, v2);
    }
  }
  sub_256119F6C((uint64_t)v9, (uint64_t (*)(void))v21);
  return v22 & 1;
}

uint64_t sub_256117FF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v127 = a1;
  sub_25611191C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v125 = (uint64_t *)((char *)&v106 - v3);
  uint64_t v4 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v123 = (uint64_t)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = _s22DaySummaryGradientViewVMa();
  MEMORY[0x270FA5388](v121);
  uint64_t v124 = (uint64_t *)((char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2561195E8(0);
  uint64_t v122 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v126 = (uint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  uint64_t v9 = MEMORY[0x270FA5388](v107);
  uint64_t v116 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v113 = (uint64_t)&v106 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v106 - v13;
  uint64_t v15 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v115 = (uint64_t)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v108 = (uint64_t)&v106 - v19;
  MEMORY[0x270FA5388](v18);
  char v21 = (char *)&v106 - v20;
  sub_256119610();
  MEMORY[0x270FA5388](v22 - 8);
  long long v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561198D8(0);
  uint64_t v26 = v25;
  MEMORY[0x270FA5388](v25);
  long long v28 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256119964(0);
  uint64_t v109 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v110 = (uint64_t)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611998C(0);
  uint64_t v111 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v114 = (uint64_t)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561199B4(0);
  uint64_t v112 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v119 = (char *)&v106 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561199FC(0, &qword_269F47100, (uint64_t (*)(uint64_t))sub_2561199B4, (uint64_t (*)(uint64_t))sub_256119A80, MEMORY[0x263F18E28]);
  uint64_t v117 = v35;
  MEMORY[0x270FA5388](v35);
  uint64_t v120 = (char *)&v106 - v36;
  sub_256119B50();
  MEMORY[0x270FA5388](v37 - 8);
  uint64_t v118 = (uint64_t)&v106 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)long long v24 = sub_256176798();
  *((void *)v24 + 1) = 0;
  v24[16] = 0;
  sub_256119BF4();
  sub_256118BCC(v1, (uint64_t)&v24[*(int *)(v39 + 44)]);
  char v40 = sub_256176D78();
  uint64_t v41 = v1;
  sub_256119CA0((uint64_t)v21);
  uint64_t v42 = v15;
  sub_256119FCC((uint64_t)&v21[*(int *)(v15 + 48)], (uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  uint64_t v43 = v107;
  sub_256119F6C((uint64_t)v21, type metadata accessor for StateOfMindTimeline.Styles);
  if (v14[*(int *)(v43 + 24)] == 1 && (sub_256176138() & 1) == 0) {
    sub_256117BD4();
  }
  sub_256119F6C((uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_256175D48();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  sub_256119FCC((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(void))sub_256119610);
  uint64_t v52 = &v28[*(int *)(v26 + 36)];
  *uint64_t v52 = v40;
  *((void *)v52 + 1) = v45;
  *((void *)v52 + 2) = v47;
  *((void *)v52 + 3) = v49;
  *((void *)v52 + 4) = v51;
  v52[40] = 0;
  sub_256119F6C((uint64_t)v24, (uint64_t (*)(void))sub_256119610);
  char v53 = sub_256176D98();
  uint64_t v54 = v108;
  sub_256119CA0(v108);
  uint64_t v55 = v113;
  sub_256119FCC(v54 + *(int *)(v42 + 48), v113, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_256119F6C(v54, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119F6C(v55, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_256175D48();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v64 = v110;
  sub_256119FCC((uint64_t)v28, v110, (uint64_t (*)(void))sub_2561198D8);
  uint64_t v65 = v64 + *(int *)(v109 + 36);
  *(unsigned char *)uint64_t v65 = v53;
  *(void *)(v65 + 8) = v57;
  *(void *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v61;
  *(void *)(v65 + 32) = v63;
  *(unsigned char *)(v65 + 40) = 0;
  sub_256119F6C((uint64_t)v28, (uint64_t (*)(void))sub_2561198D8);
  char v66 = sub_256176DA8();
  uint64_t v67 = v115;
  sub_256119CA0(v115);
  uint64_t v68 = v116;
  sub_256119FCC(v67 + *(int *)(v42 + 48), v116, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_256119F6C(v67, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119F6C(v68, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_256175D48();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v77 = v114;
  sub_256119FCC(v64, v114, (uint64_t (*)(void))sub_256119964);
  uint64_t v78 = v77 + *(int *)(v111 + 36);
  *(unsigned char *)uint64_t v78 = v66;
  *(void *)(v78 + 8) = v70;
  *(void *)(v78 + 16) = v72;
  *(void *)(v78 + 24) = v74;
  *(void *)(v78 + 32) = v76;
  *(unsigned char *)(v78 + 40) = 0;
  sub_256119F6C(v64, (uint64_t (*)(void))sub_256119964);
  sub_256176D98();
  uint64_t v79 = _s13EntryBaseViewVMa();
  sub_256175D48();
  uint64_t v128 = v80;
  uint64_t v129 = v81;
  uint64_t v130 = v82;
  uint64_t v131 = v83;
  char v132 = 0;
  uint64_t v84 = (uint64_t)v119;
  sub_256176AE8();
  sub_25611D5A4(v77, v84, (uint64_t (*)(void))sub_25611998C);
  uint64_t v85 = v123;
  sub_256119FCC(v41 + *(int *)(v79 + 20), v123, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v87 = (uint64_t)v125;
  *uint64_t v125 = KeyPath;
  uint64_t v88 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v89 = swift_getKeyPath();
  uint64_t v90 = (uint64_t)v124;
  uint64_t *v124 = v89;
  sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v88);
  swift_storeEnumTagMultiPayload();
  uint64_t v91 = v121;
  sub_255F9EAD8(v87, v90 + *(int *)(v121 + 20));
  sub_25611D5A4(v85, v90 + *(int *)(v91 + 24), (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  LOBYTE(v91) = sub_256176D98();
  uint64_t v92 = sub_2561761F8();
  uint64_t v93 = v126;
  sub_256119FCC(v90, v126, (uint64_t (*)(void))_s22DaySummaryGradientViewVMa);
  uint64_t v94 = v93 + *(int *)(v122 + 36);
  *(void *)uint64_t v94 = v92;
  *(unsigned char *)(v94 + 8) = v91;
  sub_256119F6C(v90, (uint64_t (*)(void))_s22DaySummaryGradientViewVMa);
  uint64_t v95 = sub_2561778E8();
  uint64_t v97 = v96;
  uint64_t v98 = (uint64_t)v120;
  uint64_t v99 = (uint64_t)&v120[*(int *)(v117 + 36)];
  sub_256119FCC(v93, v99, (uint64_t (*)(void))sub_2561195E8);
  sub_256119A80();
  uint64_t v101 = (uint64_t *)(v99 + *(int *)(v100 + 36));
  *uint64_t v101 = v95;
  v101[1] = v97;
  sub_256119FCC(v84, v98, (uint64_t (*)(void))sub_2561199B4);
  sub_256119F6C(v93, (uint64_t (*)(void))sub_2561195E8);
  sub_256119F6C(v84, (uint64_t (*)(void))sub_2561199B4);
  uint64_t v102 = sub_2561778E8();
  uint64_t v103 = v118;
  sub_256116124(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v118, 0.0, 1, INFINITY, 0, v102, v104, (void (*)(uint64_t, uint64_t))sub_25611A0E0, (uint64_t (*)(void))sub_256119B50);
  sub_25611A040(v98);
  return sub_25611D5A4(v103, v127, (uint64_t (*)(void))sub_256119B50);
}

uint64_t sub_256118BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v74 = a2;
  sub_2561196B8(0);
  uint64_t v75 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v70 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s16EntryMomentsViewVMa();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v67 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v69 = (uint64_t *)((char *)&v61 - v8);
  uint64_t v9 = _s18EntrySeparatorViewVMa();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  char v66 = (uint64_t *)((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v68 = (uint64_t)&v61 - v12;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_25611191C(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v64 = (uint64_t)&v61 - v15;
  uint64_t v16 = _s12EntryDayViewVMa();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v65 = (uint64_t)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v76 = (uint64_t *)((char *)&v61 - v19);
  sub_2561199FC(0, &qword_269F47130, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2561196B8, MEMORY[0x263F19B20]);
  uint64_t v71 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v73 = (uint64_t)&v61 - v21;
  uint64_t v72 = _s14EntryEmptyViewVMa();
  uint64_t v22 = MEMORY[0x270FA5388](v72);
  uint64_t v62 = (uint64_t *)((char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v22);
  uint64_t v63 = (uint64_t)&v61 - v24;
  uint64_t v25 = _s13EntryBaseViewVMa();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611191C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, v13);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v61 - v29;
  uint64_t v31 = a1 + *(int *)(v25 + 20);
  uint64_t v32 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_25611D534(v31 + v32[7], (uint64_t)v30, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, v13);
  uint64_t v33 = _s5EntryVMa();
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v30, 1, v33);
  sub_25611C9DC((uint64_t)v30, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, v13);
  sub_256119FCC(a1, (uint64_t)v27, (uint64_t (*)(void))_s13EntryBaseViewVMa);
  if (v34 != 1)
  {
    sub_256119F6C((uint64_t)v27, (uint64_t (*)(void))_s13EntryBaseViewVMa);
    goto LABEL_5;
  }
  uint64_t v35 = *(void *)(*(void *)&v27[*(int *)(v25 + 20) + v32[8]] + 16);
  sub_256119F6C((uint64_t)v27, (uint64_t (*)(void))_s13EntryBaseViewVMa);
  if (v35)
  {
LABEL_5:
    uint64_t v45 = v64;
    sub_256119FCC(v31, v64, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v32 - 1) + 56))(v45, 0, 1, v32);
    uint64_t v46 = v32[9];
    uint64_t v47 = *(void **)(v31 + v46);
    swift_bridgeObjectRetain();
    uint64_t v48 = v76;
    sub_2560AB344(v45, v47, v76);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v50 = (uint64_t)v66;
    uint64_t *v66 = KeyPath;
    sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = v68;
    sub_25611D5A4(v50, v68, (uint64_t (*)(void))_s18EntrySeparatorViewVMa);
    uint64_t v52 = *(void *)(v31 + v32[8]);
    char v53 = *(void **)(v31 + v46);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v54 = v69;
    sub_256107148(v52, v53, v69);
    uint64_t v55 = v65;
    sub_256119FCC((uint64_t)v48, v65, (uint64_t (*)(void))_s12EntryDayViewVMa);
    sub_256119FCC(v51, v50, (uint64_t (*)(void))_s18EntrySeparatorViewVMa);
    uint64_t v56 = v67;
    sub_256119FCC((uint64_t)v54, v67, (uint64_t (*)(void))_s16EntryMomentsViewVMa);
    uint64_t v57 = v70;
    sub_256119FCC(v55, v70, (uint64_t (*)(void))_s12EntryDayViewVMa);
    sub_2561196EC();
    uint64_t v59 = v58;
    sub_256119FCC(v50, v57 + *(int *)(v58 + 48), (uint64_t (*)(void))_s18EntrySeparatorViewVMa);
    sub_256119FCC(v56, v57 + *(int *)(v59 + 64), (uint64_t (*)(void))_s16EntryMomentsViewVMa);
    sub_256119F6C(v56, (uint64_t (*)(void))_s16EntryMomentsViewVMa);
    sub_256119F6C(v50, (uint64_t (*)(void))_s18EntrySeparatorViewVMa);
    sub_256119F6C(v55, (uint64_t (*)(void))_s12EntryDayViewVMa);
    sub_256119FCC(v57, v73, (uint64_t (*)(void))sub_2561196B8);
    swift_storeEnumTagMultiPayload();
    sub_256119890(&qword_269F470D0, (void (*)(uint64_t))_s14EntryEmptyViewVMa);
    sub_256119890(&qword_269F470D8, sub_2561196B8);
    sub_256176898();
    sub_256119F6C(v57, (uint64_t (*)(void))sub_2561196B8);
    sub_256119F6C((uint64_t)v54, (uint64_t (*)(void))_s16EntryMomentsViewVMa);
    sub_256119F6C(v51, (uint64_t (*)(void))_s18EntrySeparatorViewVMa);
    uint64_t v44 = v76;
    uint64_t v43 = _s12EntryDayViewVMa;
    return sub_256119F6C((uint64_t)v44, (uint64_t (*)(void))v43);
  }
  uint64_t v36 = *(void *)(v31 + v32[9]);
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = (uint64_t)v62;
  uint64_t *v62 = v37;
  uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v72;
  uint64_t v41 = (uint64_t *)(v38 + *(int *)(v72 + 20));
  *uint64_t v41 = swift_getKeyPath();
  sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v39);
  swift_storeEnumTagMultiPayload();
  *(void *)(v38 + *(int *)(v40 + 24)) = v36;
  uint64_t v42 = v63;
  sub_25611D5A4(v38, v63, (uint64_t (*)(void))_s14EntryEmptyViewVMa);
  sub_256119FCC(v42, v73, (uint64_t (*)(void))_s14EntryEmptyViewVMa);
  swift_storeEnumTagMultiPayload();
  sub_256119890(&qword_269F470D0, (void (*)(uint64_t))_s14EntryEmptyViewVMa);
  sub_256119890(&qword_269F470D8, sub_2561196B8);
  swift_bridgeObjectRetain();
  sub_256176898();
  uint64_t v43 = _s14EntryEmptyViewVMa;
  uint64_t v44 = (uint64_t *)v42;
  return sub_256119F6C((uint64_t)v44, (uint64_t (*)(void))v43);
}

void sub_2561195E8(uint64_t a1)
{
}

void sub_256119610()
{
  if (!qword_269F470A8)
  {
    sub_2561199FC(255, &qword_269F470B0, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2561196B8, MEMORY[0x263F19B28]);
    sub_256119774();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F470A8);
    }
  }
}

void sub_2561196B8(uint64_t a1)
{
}

void sub_2561196EC()
{
  if (!qword_269F470C0)
  {
    _s12EntryDayViewVMa();
    _s18EntrySeparatorViewVMa();
    _s16EntryMomentsViewVMa();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F470C0);
    }
  }
}

unint64_t sub_256119774()
{
  unint64_t result = qword_269F470C8;
  if (!qword_269F470C8)
  {
    sub_2561199FC(255, &qword_269F470B0, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2561196B8, MEMORY[0x263F19B28]);
    sub_256119890(&qword_269F470D0, (void (*)(uint64_t))_s14EntryEmptyViewVMa);
    sub_256119890(&qword_269F470D8, sub_2561196B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F470C8);
  }
  return result;
}

uint64_t sub_256119890(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2561198D8(uint64_t a1)
{
}

void sub_256119900(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256119964(uint64_t a1)
{
}

void sub_25611998C(uint64_t a1)
{
}

void sub_2561199B4(uint64_t a1)
{
}

void sub_2561199FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_256119A80()
{
  if (!qword_269F47108)
  {
    sub_2561195E8(255);
    sub_25611CC90(&qword_269F47110, sub_2561195E8, (void (*)(void))sub_256119B1C);
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47108);
    }
  }
}

uint64_t sub_256119B1C()
{
  return sub_256119890(&qword_269F47118, (void (*)(uint64_t))_s22DaySummaryGradientViewVMa);
}

void sub_256119B50()
{
  if (!qword_269F47120)
  {
    sub_2561199FC(255, &qword_269F47100, (uint64_t (*)(uint64_t))sub_2561199B4, (uint64_t (*)(uint64_t))sub_256119A80, MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47120);
    }
  }
}

void sub_256119BF4()
{
  if (!qword_269F47128)
  {
    sub_2561199FC(255, &qword_269F470B0, (uint64_t (*)(uint64_t))_s14EntryEmptyViewVMa, (uint64_t (*)(uint64_t))sub_2561196B8, MEMORY[0x263F19B28]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47128);
    }
  }
}

uint64_t sub_256119CA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)v18 - v10;
  sub_25611D534(v2, (uint64_t)v18 - v10, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25611D5A4((uint64_t)v11, a1, type metadata accessor for StateOfMindTimeline.Styles);
  }
  os_log_type_t v13 = sub_256178228();
  uint64_t v14 = sub_256176D48();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v18[1] = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    v18[2] = sub_255FB29A8(0x73656C797453, 0xE600000000000000, &v19);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v17, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_256119F6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256119FCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25611A040(uint64_t a1)
{
  sub_2561199FC(0, &qword_269F47100, (uint64_t (*)(uint64_t))sub_2561199B4, (uint64_t (*)(uint64_t))sub_256119A80, MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25611A0E0(uint64_t a1, uint64_t a2)
{
  return sub_25611D404(a1, a2, &qword_269F47100, (uint64_t (*)(uint64_t))sub_2561199B4, (uint64_t (*)(uint64_t))sub_256119A80);
}

uint64_t sub_25611A114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - v11;
  sub_25611D534(v2, (uint64_t)v20 - v11, &qword_269F47D00, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256175D98();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    os_log_type_t v15 = sub_256178228();
    uint64_t v16 = sub_256176D48();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v20[2] = sub_255FB29A8(0x686353726F6C6F43, 0xEB00000000656D65, &v21);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v19, -1, -1);
      MEMORY[0x25A2A1E90](v18, -1, -1);
    }

    sub_2561765D8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_25611A408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_25611D534(v2, (uint64_t)v18 - v10, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25611D5A4((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  }
  os_log_type_t v13 = sub_256178228();
  uint64_t v14 = sub_256176D48();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v18[1] = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    v18[2] = sub_255FB29A8(0x6168506F72746E49, 0xEF73636570536573, &v19);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v17, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25611A6E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - v11;
  sub_25611D534(v2, (uint64_t)v20 - v11, &qword_269F42CC0, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256175F88();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    os_log_type_t v15 = sub_256178228();
    uint64_t v16 = sub_256176D48();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v20[2] = sub_255FB29A8(0x417373696D736944, 0xED00006E6F697463, &v21);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v19, -1, -1);
      MEMORY[0x25A2A1E90](v18, -1, -1);
    }

    sub_2561765D8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_25611A9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - v11;
  sub_25611D534(v2, (uint64_t)v20 - v11, &qword_269F42FB8, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256176178();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    os_log_type_t v15 = sub_256178228();
    uint64_t v16 = sub_256176D48();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v20[2] = sub_255FB29A8(0x694474756F79614CLL, 0xEF6E6F6974636572, &v21);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v19, -1, -1);
      MEMORY[0x25A2A1E90](v18, -1, -1);
    }

    sub_2561765D8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_25611ACD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F19A00];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - v11;
  sub_25611D534(v2, (uint64_t)v20 - v11, &qword_269F43330, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256176778();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    os_log_type_t v15 = sub_256178228();
    uint64_t v16 = sub_256176D48();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v20[2] = sub_255FB29A8(0xD000000000000013, 0x80000002561AD150, &v21);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v19, -1, -1);
      MEMORY[0x25A2A1E90](v18, -1, -1);
    }

    sub_2561765D8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_25611AFC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_25611D534(v2, (uint64_t)v18 - v10, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25611D5A4((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  }
  os_log_type_t v13 = sub_256178228();
  uint64_t v14 = sub_256176D48();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v18[1] = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    v18[2] = sub_255FB29A8(0xD00000000000001ELL, 0x80000002561AD170, &v19);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v17, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25611B298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_25611D534(v2, (uint64_t)v18 - v10, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25611D5A4((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  }
  os_log_type_t v13 = sub_256178228();
  uint64_t v14 = sub_256176D48();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v18[1] = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    v18[2] = sub_255FB29A8(0xD00000000000001CLL, 0x80000002561AD130, &v19);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v17, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25611B56C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F18D80];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - v11;
  sub_25611D534(v2, (uint64_t)v20 - v11, &qword_269F440E8, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256176158();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    os_log_type_t v15 = sub_256178228();
    uint64_t v16 = sub_256176D48();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v20[2] = sub_255FB29A8(0x5463696D616E7944, 0xEF657A6953657079, &v21);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v19, -1, -1);
      MEMORY[0x25A2A1E90](v18, -1, -1);
    }

    sub_2561765D8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_25611B864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F440F0, (uint64_t (*)(uint64_t))sub_255FD8280, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_25611D534(v2, (uint64_t)v18 - v10, &qword_269F440F0, (uint64_t (*)(uint64_t))sub_255FD8280, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25611D5A4((uint64_t)v11, a1, (uint64_t (*)(void))sub_255FD8280);
  }
  os_log_type_t v13 = sub_256178228();
  uint64_t v14 = sub_256176D48();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v18[1] = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    v18[2] = sub_255FB29A8(0xD000000000000020, 0x80000002561AD0B0, &v19);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v17, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25611BB38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_25611D534(v2, (uint64_t)v18 - v10, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25611D5A4((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  }
  os_log_type_t v13 = sub_256178228();
  uint64_t v14 = sub_256176D48();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v18[1] = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    v18[2] = sub_255FB29A8(0xD00000000000001ALL, 0x80000002561AD110, &v19);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v17, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25611BE0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_25611D534(v2, (uint64_t)v18 - v10, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25611D5A4((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  }
  os_log_type_t v13 = sub_256178228();
  uint64_t v14 = sub_256176D48();
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v18[1] = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    v18[2] = sub_255FB29A8(0xD000000000000025, 0x80000002561AD0E0, &v19);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v17, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25611C0E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25611191C(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - v11;
  sub_25611D534(v2, (uint64_t)v20 - v11, &qword_269F44C98, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256175A08();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    os_log_type_t v15 = sub_256178228();
    uint64_t v16 = sub_256176D48();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v20[2] = sub_255FB29A8(0x7261646E656C6143, 0xE800000000000000, &v21);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v19, -1, -1);
      MEMORY[0x25A2A1E90](v18, -1, -1);
    }

    sub_2561765D8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_25611C3CC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_256178228();
    uint64_t v9 = sub_256176D48();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_255FB29A8(0x726F6C6F43, 0xE500000000000000, &v15);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v12, -1, -1);
      MEMORY[0x25A2A1E90](v11, -1, -1);
    }

    sub_2561765D8();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

double sub_25611C5CC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_256178228();
  uint64_t v9 = sub_256176D48();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    double v15 = *(double *)&v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_255FB29A8(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v12, -1, -1);
    MEMORY[0x25A2A1E90](v11, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  sub_256082548(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_25611C7D8(uint64_t a1, char a2)
{
  uint64_t v4 = sub_2561765E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_256178228();
  uint64_t v9 = sub_256176D48();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_255FB29A8(1819242306, 0xE400000000000000, &v15);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v12, -1, -1);
    MEMORY[0x25A2A1E90](v11, -1, -1);
  }

  sub_2561765D8();
  swift_getAtKeyPath();
  sub_256082548(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_25611C9DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_25611191C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_25611CA38(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25603D590);
}

void sub_25611CA50(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_25611D624(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v5 = sub_256176D28();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25611CABC(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255F85998);
}

uint64_t sub_25611CAD4(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25611CA50(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25611CB24(uint64_t a1)
{
}

uint64_t sub_25611CB4C(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255F841C8);
}

uint64_t sub_25611CB64(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255F732A4);
}

uint64_t sub_25611CB7C(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255F723D4);
}

uint64_t sub_25611CB94(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_256066A18);
}

void sub_25611CBAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_25611CC18(uint64_t a1)
{
}

uint64_t sub_25611CC40()
{
  return sub_25611CC90(&qword_269F47138, (void (*)(uint64_t))sub_256119B50, (void (*)(void))sub_25611CD10);
}

uint64_t sub_25611CC90(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25611CD10()
{
  unint64_t result = qword_269F47140;
  if (!qword_269F47140)
  {
    sub_2561199FC(255, &qword_269F47100, (uint64_t (*)(uint64_t))sub_2561199B4, (uint64_t (*)(uint64_t))sub_256119A80, MEMORY[0x263F18E28]);
    sub_25611CDFC();
    sub_256119890(&qword_269F47178, (void (*)(uint64_t))sub_256119A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47140);
  }
  return result;
}

unint64_t sub_25611CDFC()
{
  unint64_t result = qword_269F47148;
  if (!qword_269F47148)
  {
    sub_2561199B4(255);
    sub_25611CC90(&qword_269F47150, sub_25611998C, (void (*)(void))sub_25611CEDC);
    sub_256119890(&qword_269F47170, MEMORY[0x263F1A048]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47148);
  }
  return result;
}

uint64_t sub_25611CEDC()
{
  return sub_25611CC90(&qword_269F47158, sub_256119964, (void (*)(void))sub_25611CF18);
}

uint64_t sub_25611CF18()
{
  return sub_25611CC90(&qword_269F47160, sub_2561198D8, (void (*)(void))sub_25611CF54);
}

uint64_t sub_25611CF54()
{
  return sub_256119890(&qword_269F47168, (void (*)(uint64_t))sub_256119610);
}

uint64_t sub_25611CF88(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255FCC700);
}

void sub_25611CFA0(uint64_t a1)
{
}

uint64_t sub_25611CFC8(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25611CFE0);
}

void sub_25611CFE0()
{
  if (!qword_269F47180)
  {
    sub_25611D074(255);
    sub_256119890(&qword_269F471B0, sub_25611D074);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47180);
    }
  }
}

void sub_25611D074(uint64_t a1)
{
}

void sub_25611D0A8(uint64_t a1)
{
}

void sub_25611D0E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_2561199FC(255, a4, a5, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_25611D198(uint64_t a1)
{
}

void sub_25611D1C0()
{
  if (!qword_269F471A8)
  {
    sub_25611E1A0(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F471A8);
    }
  }
}

void sub_25611D24C(uint64_t a1)
{
}

uint64_t sub_25611D274(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_2560B744C);
}

uint64_t sub_25611D28C(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255FDDD4C);
}

uint64_t sub_25611D2A4(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseContent);
}

uint64_t sub_25611D2BC(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_2560B3F74);
}

uint64_t sub_25611D2D4(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_256081CF4);
}

uint64_t sub_25611D2EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25611D3A0(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255FDF418);
}

uint64_t sub_25611D3B8(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_256081750);
}

uint64_t sub_25611D3D0(uint64_t a1, uint64_t a2)
{
  return sub_25611D404(a1, a2, &qword_269F44030, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText, MEMORY[0x263F1A470]);
}

uint64_t sub_25611D404(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  sub_2561199FC(0, a3, a4, a5, MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_25611D488(uint64_t a1, uint64_t a2)
{
  return sub_25611D4B0(a1, a2, (unint64_t *)&qword_269F44070, MEMORY[0x263F1A470], (uint64_t)&type metadata for StateOfMindVisualization.ValenceImage);
}

uint64_t sub_25611D4B0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  sub_25611CBAC(0, a3, a4, a5, MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_25611D534(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_25611191C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_25611D5A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25611D60C(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_2560F10B4);
}

void sub_25611D624(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25611D670(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25611E1A0(255, a2, MEMORY[0x263F19E50], MEMORY[0x263F19E40], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25611D6C8(uint64_t a1)
{
}

uint64_t sub_25611D6F0(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_256104EC0);
}

uint64_t sub_25611D708(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25611D720);
}

void sub_25611D720()
{
  if (!qword_269F43428)
  {
    sub_25611D7B4(255);
    sub_256119890(&qword_269F434A0, sub_25611D7B4);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43428);
    }
  }
}

void sub_25611D7B4(uint64_t a1)
{
}

uint64_t sub_25611D7E8(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25611D800);
}

void sub_25611D800()
{
  if (!qword_269F471C0)
  {
    sub_25611D894(255);
    sub_256119890(&qword_269F471E8, sub_25611D894);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F471C0);
    }
  }
}

void sub_25611D894(uint64_t a1)
{
}

void sub_25611D8C8(uint64_t a1)
{
}

void sub_25611D8E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_255F7273C(255);
    a3(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v6) {
      atomic_store(TupleTypeMetadata, a2);
    }
  }
}

void sub_25611D978()
{
  if (!qword_269F471D8)
  {
    sub_2561199FC(255, &qword_269F471E0, (uint64_t (*)(uint64_t))sub_255F678F4, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F471D8);
    }
  }
}

void sub_25611DA1C(uint64_t a1)
{
}

uint64_t sub_25611DA44(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25611DA5C);
}

void sub_25611DA5C(uint64_t a1)
{
}

void sub_25611DA84()
{
  if (!qword_269F47200)
  {
    sub_2561199FC(255, &qword_269F47208, (uint64_t (*)(uint64_t))sub_25611DB28, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47200);
    }
  }
}

void sub_25611DB28(uint64_t a1)
{
}

void sub_25611DB70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_25611DBF0()
{
  if (!qword_269F47218)
  {
    sub_25611DC84();
    sub_25611E1A0(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47218);
    }
  }
}

void sub_25611DC84()
{
  if (!qword_269F47220)
  {
    sub_25611DD04();
    sub_25611CA50(255, (unint64_t *)&qword_269F42BD8, (unint64_t *)&qword_269F42BE0, MEMORY[0x263F1A738]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47220);
    }
  }
}

void sub_25611DD04()
{
  if (!qword_269F47228)
  {
    sub_25611DD98(255);
    sub_256119890(&qword_269F47240, sub_25611DD98);
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47228);
    }
  }
}

void sub_25611DD98(uint64_t a1)
{
}

void sub_25611DDCC()
{
  if (!qword_269F47238)
  {
    sub_255F9DF68();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47238);
    }
  }
}

unint64_t sub_25611DE34()
{
  unint64_t result = qword_269F47248;
  if (!qword_269F47248)
  {
    sub_25611DBF0();
    sub_25611DEAC();
    sub_255F67518();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47248);
  }
  return result;
}

unint64_t sub_25611DEAC()
{
  unint64_t result = qword_269F47250;
  if (!qword_269F47250)
  {
    sub_25611DC84();
    sub_256119890(&qword_269F47258, (void (*)(uint64_t))sub_25611DD04);
    sub_25611CAD4(&qword_269F42C08, (unint64_t *)&qword_269F42BD8, (unint64_t *)&qword_269F42BE0, MEMORY[0x263F1A738]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47250);
  }
  return result;
}

void sub_25611DF74(uint64_t a1)
{
}

uint64_t sub_25611DF9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25611DFF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25611E02C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25611E058(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_255F7285C);
}

void sub_25611E070(uint64_t a1)
{
}

uint64_t sub_25611E098(uint64_t a1, uint64_t a2)
{
  return sub_25611D4B0(a1, a2, (unint64_t *)&qword_269F45F60, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, MEMORY[0x263F1A830]);
}

uint64_t sub_25611E0C0(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25607223C);
}

uint64_t sub_25611E0D8(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25611E0F0);
}

void sub_25611E0F0()
{
  if (!qword_269F47270)
  {
    sub_256119900(255, &qword_269F47278, sub_2560F5464);
    sub_25611D624(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47270);
    }
  }
}

void sub_25611E1A0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_25611E1F0(uint64_t a1)
{
}

uint64_t sub_25611E218(uint64_t a1, uint64_t a2)
{
  return sub_256119FCC(a1, a2, (uint64_t (*)(void))sub_25611E230);
}

void sub_25611E230()
{
  if (!qword_269F47288)
  {
    sub_25611E2C4();
    sub_25611E1A0(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47288);
    }
  }
}

void sub_25611E2C4()
{
  if (!qword_269F47290)
  {
    sub_25611E358(255);
    sub_256119890(&qword_269F472D0, sub_25611E358);
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47290);
    }
  }
}

void sub_25611E358(uint64_t a1)
{
}

void sub_25611E38C()
{
  if (!qword_269F472A0)
  {
    sub_25611E420();
    sub_256119900(255, &qword_269F42C48, (void (*)(uint64_t))sub_255F678F4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F472A0);
    }
  }
}

void sub_25611E420()
{
  if (!qword_269F472A8)
  {
    sub_25611E4A4();
    sub_25611E5B8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F472A8);
    }
  }
}

void sub_25611E4A4()
{
  if (!qword_269F472B0)
  {
    sub_25611E524();
    sub_25611CA50(255, (unint64_t *)&qword_269F42BD8, (unint64_t *)&qword_269F42BE0, MEMORY[0x263F1A738]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F472B0);
    }
  }
}

void sub_25611E524()
{
  if (!qword_269F472B8)
  {
    sub_255F9DF68();
    sub_25611E1A0(255, (unint64_t *)&qword_269F45928, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F472B8);
    }
  }
}

unint64_t sub_25611E5B8()
{
  unint64_t result = qword_269F472C0;
  if (!qword_269F472C0)
  {
    sub_25611E4A4();
    sub_25611E650();
    sub_25611CAD4(&qword_269F42C08, (unint64_t *)&qword_269F42BD8, (unint64_t *)&qword_269F42BE0, MEMORY[0x263F1A738]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F472C0);
  }
  return result;
}

unint64_t sub_25611E650()
{
  unint64_t result = qword_269F472C8;
  if (!qword_269F472C8)
  {
    sub_25611E524();
    sub_25611E738((unint64_t *)&qword_269F436A8, (void (*)(uint64_t))sub_255F9DF68, (void (*)(void))sub_255F9E070);
    sub_25611D670((unint64_t *)&qword_269F45940, (unint64_t *)&qword_269F45928, MEMORY[0x263F1A180]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F472C8);
  }
  return result;
}

uint64_t sub_25611E738(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25611E7B8(uint64_t a1)
{
}

uint64_t sub_25611E894(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_256175B68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85[0] = sub_256175868();
  uint64_t v8 = *(void *)(v85[0] - 8);
  MEMORY[0x270FA5388](v85[0]);
  uint64_t v10 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_healthDataSource);
  if (v11)
  {
    id v12 = v11;
    unint64_t v13 = 0xD000000000000020;
    type metadata accessor for MentalHealthGenericFieldsProvider();
    *(void *)(swift_initStackObject() + 16) = v12;
    swift_unknownObjectRetain();
    unint64_t v90 = sub_25613372C(MEMORY[0x263F8EE78]);
    unint64_t v14 = 0xD000000000000010;
    unint64_t v15 = 0x80000002561A9E60;
    unint64_t v16 = v90;
    switch(v2[16])
    {
      case 1:
        unint64_t v15 = 0xEF6F72746E492064;
        unint64_t v14 = 0x6574614720656741;
        break;
      case 2:
        unint64_t v15 = 0xE500000000000000;
        unint64_t v14 = 0x6F72746E49;
        break;
      case 3:
        unint64_t v15 = 0xE900000000000073;
        unint64_t v14 = 0x6E6F697473657551;
        break;
      case 4:
        unint64_t v15 = 0xE600000000000000;
        unint64_t v14 = 0x746C75736552;
        break;
      default:
        break;
    }
    unint64_t v89 = MEMORY[0x263F8D310];
    *(void *)&long long v88 = v14;
    *((void *)&v88 + 1) = v15;
    sub_25601DCC4(&v88, v87);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v86 = v16;
    unint64_t v26 = 0xE400000000000000;
    sub_2561277D0(v87, 1885697139, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    unint64_t v27 = v86;
    swift_bridgeObjectRelease();
    unint64_t v28 = 1954047310;
    switch(v2[17])
    {
      case 1:
        unint64_t v26 = 0xE500000000000000;
        unint64_t v28 = 0x65736F6C43;
        break;
      case 2:
        break;
      case 3:
        unint64_t v28 = 1701736260;
        break;
      case 4:
        unint64_t v26 = 0xE600000000000000;
        unint64_t v28 = 0x74726F707845;
        break;
      case 5:
        unint64_t v26 = 0xED00006B63696C43;
        unint64_t v28 = 0x20656C6369747241;
        break;
      case 6:
        unint64_t v26 = 0xEA00000000006B63;
        unint64_t v28 = 0x696C43206F666E49;
        break;
      case 7:
        unint64_t v28 = 0xD000000000000013;
        uint64_t v29 = "Resource Click, SMS";
        goto LABEL_21;
      case 8:
        unint64_t v28 = 0xD000000000000017;
        uint64_t v29 = "Resource Click, Website";
        goto LABEL_21;
      case 9:
        unint64_t v28 = 0xD00000000000001ALL;
        uint64_t v29 = "Resource Click, Phone Call";
        goto LABEL_21;
      case 0xA:
        unint64_t v28 = 0xD000000000000025;
        uint64_t v29 = "Resource Click, Website (Noncellular)";
LABEL_21:
        unint64_t v26 = (unint64_t)(v29 - 32) | 0x8000000000000000;
        break;
      default:
        unint64_t v26 = 0xE500000000000000;
        unint64_t v28 = 0x6E69676542;
        break;
    }
    unint64_t v89 = MEMORY[0x263F8D310];
    *(void *)&long long v88 = v28;
    *((void *)&v88 + 1) = v26;
    sub_25601DCC4(&v88, v87);
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v86 = v27;
    sub_2561277D0(v87, 0x6E6F69746361, 0xE600000000000000, v30);
    unint64_t v31 = v86;
    unint64_t v90 = v86;
    swift_bridgeObjectRelease();
    unint64_t v32 = 0xE400000000000000;
    uint64_t v33 = 961628240;
    switch(v2[18])
    {
      case 1:
        uint64_t v33 = 927220039;
        goto LABEL_25;
      case 2:
        unint64_t v32 = 0xEB00000000395148;
        uint64_t v33 = 0x50646E6137444147;
        goto LABEL_25;
      case 3:
        sub_25613884C(0x656D737365737361, 0xEE0065707954746ELL, &v88);
        sub_256040650((uint64_t)&v88);
        goto LABEL_27;
      default:
LABEL_25:
        unint64_t v89 = MEMORY[0x263F8D310];
        *(void *)&long long v88 = v33;
        *((void *)&v88 + 1) = v32;
        sub_25601DCC4(&v88, v87);
        char v34 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v31;
        sub_2561277D0(v87, 0x656D737365737361, 0xEE0065707954746ELL, v34);
        unint64_t v90 = v86;
        swift_bridgeObjectRelease();
LABEL_27:
        unint64_t v35 = 0x80000002561A9F70;
        switch(v2[19])
        {
          case 1:
            unint64_t v13 = 0xD000000000000021;
            uint64_t v36 = "Summary Tile, Periodic Assessment";
            goto LABEL_37;
          case 2:
            unint64_t v13 = 0xD000000000000015;
            uint64_t v36 = "Mental Wellbeing Room";
            goto LABEL_37;
          case 3:
            unint64_t v13 = 0xD000000000000012;
            uint64_t v36 = "State of Mind Room";
            goto LABEL_37;
          case 4:
            unint64_t v13 = 0xD000000000000011;
            uint64_t v36 = "Anxiety Risk Room";
            goto LABEL_37;
          case 5:
            unint64_t v13 = 0xD000000000000014;
            uint64_t v36 = "Depression Risk Room";
            goto LABEL_37;
          case 6:
            unint64_t v13 = 0xD000000000000021;
            uint64_t v36 = "State of Mind, Logging Escalation";
            goto LABEL_37;
          case 7:
            uint64_t v36 = "Caring for Mental Health Article";
            goto LABEL_37;
          case 8:
            uint64_t v36 = "Pregnancy and Your Mental Health";
            goto LABEL_37;
          case 9:
            unint64_t v13 = 0xD000000000000016;
            uint64_t v36 = "Notification Deep Link";
LABEL_37:
            unint64_t v35 = (unint64_t)(v36 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v89 = MEMORY[0x263F8D310];
        *(void *)&long long v88 = v13;
        *((void *)&v88 + 1) = v35;
        sub_25601DCC4(&v88, v87);
        unint64_t v37 = v90;
        char v38 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v37;
        sub_2561277D0(v87, 0x696F507972746E65, 0xEA0000000000746ELL, v38);
        unint64_t v39 = v86;
        swift_bridgeObjectRelease();
        unint64_t v40 = 0xE700000000000000;
        unint64_t v41 = 0x7972616D6D7553;
        switch(v2[20])
        {
          case 1:
            unint64_t v40 = 0xEE006D6F6F522065;
            unint64_t v41 = 0x7079542065746144;
            break;
          case 2:
            unint64_t v41 = 0x656C6369747241;
            break;
          case 3:
            unint64_t v41 = 0xD000000000000012;
            unint64_t v40 = 0x80000002561AA110;
            break;
          case 4:
            unint64_t v40 = 0xEC0000006E6F6974;
            unint64_t v41 = 0x6163696669746F4ELL;
            break;
          default:
            break;
        }
        unint64_t v89 = MEMORY[0x263F8D310];
        *(void *)&long long v88 = v41;
        *((void *)&v88 + 1) = v40;
        sub_25601DCC4(&v88, v87);
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v39;
        sub_2561277D0(v87, 0x6E616E65766F7270, 0xEA00000000006563, v42);
        unint64_t v43 = v86;
        swift_bridgeObjectRelease();
        char v44 = v2[21];
        unint64_t v45 = MEMORY[0x263F8D4F8];
        unint64_t v89 = MEMORY[0x263F8D4F8];
        LOBYTE(v88) = v44;
        sub_25601DCC4(&v88, v87);
        char v46 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v43;
        sub_2561277D0(v87, 0xD000000000000016, 0x80000002561AC090, v46);
        unint64_t v47 = v86;
        unint64_t v90 = v86;
        swift_bridgeObjectRelease();
        int v48 = v2[22];
        if (v48 == 2)
        {
          sub_25613884C(0x7373417473726966, 0xEF746E656D737365, &v88);
          sub_256040650((uint64_t)&v88);
        }
        else
        {
          unint64_t v89 = v45;
          LOBYTE(v88) = v48 & 1;
          sub_25601DCC4(&v88, v87);
          char v49 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v86 = v47;
          sub_2561277D0(v87, 0x7373417473726966, 0xEF746E656D737365, v49);
          unint64_t v90 = v86;
          swift_bridgeObjectRelease();
        }
        uint64_t v50 = sub_256177EE8();
        uint64_t v52 = v51;
        id v53 = (id)HKMHUIActivePairedWatchProductType();
        if (v53)
        {
          uint64_t v54 = v53;
          uint64_t v55 = sub_256177EE8();
          uint64_t v57 = v56;

          unint64_t v89 = MEMORY[0x263F8D310];
          if (v57) {
            goto LABEL_51;
          }
        }
        else
        {
          unint64_t v89 = MEMORY[0x263F8D310];
        }
        uint64_t v55 = sub_256177EE8();
        uint64_t v57 = v58;
LABEL_51:
        *(void *)&long long v88 = v55;
        *((void *)&v88 + 1) = v57;
        sub_25601DCC4(&v88, v87);
        unint64_t v59 = v90;
        char v60 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v59;
        unint64_t v90 = 0x8000000000000000;
        sub_2561277D0(v87, v50, v52, v60);
        unint64_t v90 = v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v61 = sub_256177EE8();
        uint64_t v63 = v62;
        id v64 = (id)HKMHUIActivePairedWatchBuildVersion();
        if (v64)
        {
          uint64_t v65 = v64;
          uint64_t v66 = sub_256177EE8();
          uint64_t v68 = v67;

          unint64_t v89 = MEMORY[0x263F8D310];
          if (v68) {
            goto LABEL_56;
          }
        }
        else
        {
          unint64_t v89 = MEMORY[0x263F8D310];
        }
        uint64_t v66 = sub_256177EE8();
        uint64_t v68 = v69;
LABEL_56:
        *(void *)&long long v88 = v66;
        *((void *)&v88 + 1) = v68;
        sub_25601DCC4(&v88, v87);
        unint64_t v70 = v90;
        char v71 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v70;
        unint64_t v90 = 0x8000000000000000;
        sub_2561277D0(v87, v61, v63, v71);
        unint64_t v90 = v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v72 = sub_256177EE8();
        uint64_t v74 = v73;
        sub_256175858();
        id v75 = sub_2560F80E8();
        (*(void (**)(char *, void))(v8 + 8))(v10, v85[0]);
        if (v75)
        {
          unint64_t v89 = sub_256084B54();
          *(void *)&long long v88 = v75;
          sub_25601DCC4(&v88, v87);
          unint64_t v76 = v90;
          char v77 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v86 = v76;
          unint64_t v90 = 0x8000000000000000;
          sub_2561277D0(v87, v72, v74, v77);
          unint64_t v90 = v86;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_25613884C(v72, v74, &v88);
          swift_bridgeObjectRelease();
          sub_256040650((uint64_t)&v88);
        }
        uint64_t v78 = sub_256177EE8();
        uint64_t v80 = v79;
        uint64_t v81 = sub_2560F841C();
        unint64_t v89 = MEMORY[0x263F8D310];
        if (!v82) {
          uint64_t v81 = sub_256177EE8();
        }
        *(void *)&long long v88 = v81;
        *((void *)&v88 + 1) = v82;
        sub_25601DCC4(&v88, v87);
        unint64_t v83 = v90;
        char v84 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v83;
        unint64_t v90 = 0x8000000000000000;
        sub_2561277D0(v87, v78, v80, v84);
        unint64_t v90 = v86;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        swift_unknownObjectRelease();
        uint64_t result = v90;
        break;
    }
  }
  else
  {
    sub_256175B48();
    os_log_type_t v17 = sub_256175B58();
    os_log_type_t v18 = sub_256178228();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(void *)&long long v88 = v20;
      *(_DWORD *)uint64_t v19 = 136446210;
      v85[1] = v19 + 4;
      uint64_t v21 = sub_256178978();
      *(void *)&v87[0] = sub_255FB29A8(v21, v22, (uint64_t *)&v88);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v17, v18, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v20, -1, -1);
      MEMORY[0x25A2A1E90](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_25611F714();
    swift_allocError();
    void *v23 = 0xD000000000000028;
    v23[1] = 0x80000002561AD210;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_25611F6E0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MentalHealthAssessmentsEvent()
{
  return self;
}

unint64_t sub_25611F714()
{
  unint64_t result = qword_269F472E0;
  if (!qword_269F472E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F472E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsEvent.AnalyticsEventPayloadError()
{
  return &type metadata for MentalHealthAssessmentsEvent.AnalyticsEventPayloadError;
}

uint64_t sub_25611F77C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC0000006D6F6F52;
  uint64_t v3 = 0x79726F6765746163;
  uint64_t v4 = a1;
  unint64_t v5 = 0x79726F6765746163;
  unint64_t v6 = 0xEC0000006D6F6F52;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6574617453676F6CLL;
      unint64_t v6 = 0xEE00646E694D664FLL;
      break;
    case 2:
      unint64_t v6 = 0x80000002561AA410;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x736E6F6974706FLL;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = 0x80000002561AA430;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEE00646E694D664FLL;
      if (v5 == 0x6574617453676F6CLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0x80000002561AA410;
      if (v5 != 0xD000000000000011) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x736E6F6974706FLL;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0x80000002561AA430;
      if (v5 != 0xD000000000000016) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25611F988(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE006D6F6F522065;
  uint64_t v3 = 0x7079542061746144;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7079542061746144;
  unint64_t v6 = 0xEE006D6F6F522065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x7373656E746946;
      break;
    case 2:
      uint64_t v5 = 0x726353206B636F4CLL;
      unint64_t v6 = 0xEB000000006E6565;
      break;
    case 3:
      uint64_t v5 = 0x6E6C7566646E694DLL;
      unint64_t v6 = 0xEB00000000737365;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x7972616D6D7553;
      break;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x746567646957;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x7373656E746946) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      uint64_t v7 = 0x726353206B636F4CLL;
      uint64_t v8 = 7234917;
      goto LABEL_12;
    case 3:
      uint64_t v7 = 0x6E6C7566646E694DLL;
      uint64_t v8 = 7566181;
LABEL_12:
      unint64_t v2 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v7) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x7972616D6D7553;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x746567646957) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_19:
      }
        char v9 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_25611FBB8(char a1, char a2)
{
  uint64_t v3 = 0xD000000000000017;
  unint64_t v4 = 0x80000002561A9CC0;
  switch(a1)
  {
    case 1:
      uint64_t v5 = "Category Room Tile";
      goto LABEL_12;
    case 2:
      uint64_t v3 = 0xD00000000000001ALL;
      unint64_t v6 = "Fitness+ Guided Meditation";
      goto LABEL_10;
    case 3:
      unsigned int v7 = 1701670728;
      goto LABEL_6;
    case 4:
      unsigned int v7 = 1801678668;
LABEL_6:
      uint64_t v3 = v7 | 0x7263532000000000;
      unint64_t v4 = 0xEB000000006E6565;
      break;
    case 5:
      uint64_t v3 = 0xD000000000000014;
      unint64_t v6 = "Mindfulness Log Tile";
      goto LABEL_10;
    case 6:
      uint64_t v3 = 0xD000000000000015;
      unint64_t v6 = "Reminder Notification";
      goto LABEL_10;
    case 7:
      uint64_t v3 = 0xD000000000000017;
      unint64_t v6 = "State of Mind Room Tile";
LABEL_10:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 8:
      uint64_t v3 = 0x207972616D6D7553;
      unint64_t v4 = 0xEC000000656C6954;
      break;
    case 9:
      uint64_t v5 = "Watch Complication";
LABEL_12:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      uint64_t v3 = 0xD000000000000012;
      break;
    case 10:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v3 = 0x746567646957;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xD000000000000017;
  unint64_t v9 = 0x80000002561A9CC0;
  switch(a2)
  {
    case 1:
      uint64_t v10 = "Category Room Tile";
      goto LABEL_28;
    case 2:
      unint64_t v11 = 0xD00000000000001ALL;
      id v12 = "Fitness+ Guided Meditation";
      goto LABEL_25;
    case 3:
      unsigned int v13 = 1701670728;
      goto LABEL_20;
    case 4:
      unsigned int v13 = 1801678668;
LABEL_20:
      unint64_t v9 = 0xEB000000006E6565;
      if (v3 != (v13 | 0x7263532000000000)) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 5:
      unint64_t v11 = 0xD000000000000014;
      id v12 = "Mindfulness Log Tile";
      goto LABEL_25;
    case 6:
      unint64_t v11 = 0xD000000000000015;
      id v12 = "Reminder Notification";
      goto LABEL_25;
    case 7:
      unint64_t v11 = 0xD000000000000017;
      id v12 = "State of Mind Room Tile";
LABEL_25:
      unint64_t v9 = (unint64_t)(v12 - 32) | 0x8000000000000000;
      if (v3 != v11) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 8:
      unint64_t v9 = 0xEC000000656C6954;
      if (v3 != 0x207972616D6D7553) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 9:
      uint64_t v10 = "Watch Complication";
LABEL_28:
      unint64_t v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v3 != 0xD000000000000012) {
        goto LABEL_35;
      }
      goto LABEL_32;
    case 10:
      unint64_t v9 = 0xE600000000000000;
      unint64_t v8 = 0x746567646957;
      goto LABEL_31;
    default:
LABEL_31:
      if (v3 != v8) {
        goto LABEL_35;
      }
LABEL_32:
      if (v4 == v9) {
        char v14 = 1;
      }
      else {
LABEL_35:
      }
        char v14 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
  }
}

uint64_t sub_25611FEA0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 1954047310;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1954047310;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x6C65636E6143;
      break;
    case 2:
      unint64_t v5 = 1801675074;
      break;
    case 3:
      unint64_t v5 = 1885956947;
      break;
    case 4:
      unint64_t v3 = 0x80000002561A9C70;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v3 = 0x80000002561A9C90;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x6C65636E6143) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      if (v5 != 1801675074) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 1885956947) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0x80000002561A9C70;
      unint64_t v2 = 0xD000000000000014;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x80000002561A9C90;
      if (v5 != 0xD000000000000015) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25612007C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0x80000002561AA340;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0xD000000000000014;
    }
    else {
      unint64_t v4 = 0xD000000000000011;
    }
    if (v3 == 1) {
      unint64_t v5 = 0x80000002561AA360;
    }
    else {
      unint64_t v5 = 0x80000002561AA380;
    }
    int v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1) {
        unint64_t v7 = 0xD000000000000014;
      }
      else {
        unint64_t v7 = 0xD000000000000011;
      }
      if (v6 == 1) {
        unint64_t v2 = 0x80000002561AA360;
      }
      else {
        unint64_t v2 = 0x80000002561AA380;
      }
      if (v4 != v7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xD000000000000017;
    unint64_t v5 = 0x80000002561AA340;
    int v6 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  if (v4 != 0xD000000000000017)
  {
LABEL_21:
    char v8 = sub_256178828();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25612017C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000002561AA2F0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000013;
    }
    else {
      unint64_t v5 = 0x6F65675F64617571;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000002561AA310;
    }
    else {
      unint64_t v6 = 0xED0000797274656DLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000012;
  unint64_t v6 = 0x80000002561AA2F0;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000013;
    }
    else {
      unint64_t v2 = 0x6F65675F64617571;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x80000002561AA310;
    }
    else {
      unint64_t v3 = 0xED0000797274656DLL;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_256178828();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_256120294(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 927220039;
    }
    else {
      uint64_t v3 = 0x50646E6137444147;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xEB00000000395148;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 927220039;
      }
      else {
        uint64_t v6 = 0x50646E6137444147;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xEB00000000395148;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 961628240;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 961628240)
  {
LABEL_21:
    char v8 = sub_256178828();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2561203A0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x7972616D6D7553;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7972616D6D7553;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x7079542065746144;
      unint64_t v3 = 0xEE006D6F6F522065;
      break;
    case 2:
      unint64_t v5 = 0x656C6369747241;
      break;
    case 3:
      unint64_t v3 = 0x80000002561AA110;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0x6163696669746F4ELL;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEE006D6F6F522065;
      if (v5 == 0x7079542065746144) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 0x656C6369747241) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x80000002561AA110;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 != 0x6163696669746F4ELL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_256120594(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000020;
  unint64_t v3 = 0x80000002561A9F70;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000020;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000021;
      unint64_t v6 = "Summary Tile, Periodic Assessment";
      goto LABEL_11;
    case 2:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v6 = "Mental Wellbeing Room";
      goto LABEL_11;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = "State of Mind Room";
      goto LABEL_11;
    case 4:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = "Anxiety Risk Room";
      goto LABEL_11;
    case 5:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v6 = "Depression Risk Room";
      goto LABEL_11;
    case 6:
      unint64_t v5 = 0xD000000000000021;
      unint64_t v6 = "State of Mind, Logging Escalation";
      goto LABEL_11;
    case 7:
      unint64_t v6 = "Caring for Mental Health Article";
      goto LABEL_11;
    case 8:
      unint64_t v6 = "Pregnancy and Your Mental Health";
      goto LABEL_11;
    case 9:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = "Notification Deep Link";
LABEL_11:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000002561A9F70;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000021;
      char v8 = "Summary Tile, Periodic Assessment";
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xD000000000000015;
      char v8 = "Mental Wellbeing Room";
      goto LABEL_22;
    case 3:
      unint64_t v2 = 0xD000000000000012;
      char v8 = "State of Mind Room";
      goto LABEL_22;
    case 4:
      unint64_t v2 = 0xD000000000000011;
      char v8 = "Anxiety Risk Room";
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0xD000000000000014;
      char v8 = "Depression Risk Room";
      goto LABEL_22;
    case 6:
      unint64_t v2 = 0xD000000000000021;
      char v8 = "State of Mind, Logging Escalation";
      goto LABEL_22;
    case 7:
      char v8 = "Caring for Mental Health Article";
      goto LABEL_22;
    case 8:
      char v8 = "Pregnancy and Your Mental Health";
      goto LABEL_22;
    case 9:
      unint64_t v2 = 0xD000000000000016;
      char v8 = "Notification Deep Link";
LABEL_22:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_256178828();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2561207D0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E69676542;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E69676542;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x65736F6C43;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1954047310;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701736260;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x74726F707845;
      break;
    case 5:
      unint64_t v5 = 0x20656C6369747241;
      unint64_t v3 = 0xED00006B63696C43;
      break;
    case 6:
      unint64_t v5 = 0x696C43206F666E49;
      unint64_t v3 = 0xEA00000000006B63;
      break;
    case 7:
      unint64_t v3 = 0x80000002561A9ED0;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 8:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = "Resource Click, Website";
      goto LABEL_12;
    case 9:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "Resource Click, Phone Call";
      goto LABEL_12;
    case 10:
      unint64_t v5 = 0xD000000000000025;
      unint64_t v6 = "Resource Click, Website (Noncellular)";
LABEL_12:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x65736F6C43;
      break;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v2 = 1954047310;
      break;
    case 3:
      unint64_t v7 = 0xE400000000000000;
      unint64_t v2 = 1701736260;
      break;
    case 4:
      unint64_t v7 = 0xE600000000000000;
      unint64_t v2 = 0x74726F707845;
      break;
    case 5:
      unint64_t v2 = 0x20656C6369747241;
      unint64_t v7 = 0xED00006B63696C43;
      break;
    case 6:
      unint64_t v2 = 0x696C43206F666E49;
      unint64_t v7 = 0xEA00000000006B63;
      break;
    case 7:
      unint64_t v7 = 0x80000002561A9ED0;
      unint64_t v2 = 0xD000000000000013;
      break;
    case 8:
      unint64_t v2 = 0xD000000000000017;
      char v8 = "Resource Click, Website";
      goto LABEL_24;
    case 9:
      unint64_t v2 = 0xD00000000000001ALL;
      char v8 = "Resource Click, Phone Call";
      goto LABEL_24;
    case 10:
      unint64_t v2 = 0xD000000000000025;
      char v8 = "Resource Click, Website (Noncellular)";
LABEL_24:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_256178828();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_256120AD0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000002561A9E60;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6574614720656741;
      unint64_t v3 = 0xEF6F72746E492064;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6F72746E49;
      break;
    case 3:
      unint64_t v5 = 0x6E6F697473657551;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x746C75736552;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000002561A9E60;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEF6F72746E492064;
      if (v5 == 0x6574614720656741) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6F72746E49) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x6E6F697473657551;
      unint64_t v6 = 0xE900000000000073;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x746C75736552) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_256120CA8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x796C696144;
  }
  else {
    uint64_t v3 = 0x7261746E656D6F4DLL;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000079;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x796C696144;
  }
  else {
    uint64_t v5 = 0x7261746E656D6F4DLL;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000079;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_256178828();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_256120D50()
{
  return sub_256178928();
}

uint64_t sub_256120E4C()
{
  return sub_256178928();
}

uint64_t sub_256120F78()
{
  return sub_256178928();
}

uint64_t sub_25612107C()
{
  return sub_256178928();
}

uint64_t sub_256121188()
{
  return sub_256178928();
}

uint64_t sub_25612123C()
{
  return sub_256178928();
}

uint64_t sub_2561212E4()
{
  return sub_256178928();
}

uint64_t sub_2561213FC()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_256121500()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_256121678()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_256121760()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2561217F0()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25612191C()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_256121AA4()
{
  return sub_256178928();
}

uint64_t sub_256121BA4()
{
  return sub_256178928();
}

uint64_t sub_256121CAC()
{
  return sub_256178928();
}

uint64_t sub_256121D5C()
{
  return sub_256178928();
}

uint64_t sub_256121E00()
{
  return sub_256178928();
}

uint64_t sub_256121EF8()
{
  return sub_256178928();
}

uint64_t sub_256122020()
{
  return sub_256178928();
}

uint64_t sub_256122134()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RingBufferHelper()
{
  return self;
}

uint64_t sub_256122168(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25612017C(*a1, *a2);
}

uint64_t sub_256122174()
{
  return sub_256121188();
}

uint64_t sub_25612217C()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_256122218()
{
  return sub_256121CAC();
}

uint64_t sub_256122220@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256127F34();
  *a1 = result;
  return result;
}

void sub_256122258(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000002561AA310;
  unint64_t v4 = 0x6F65675F64617571;
  if (*v1 == 1) {
    unint64_t v4 = 0xD000000000000013;
  }
  else {
    unint64_t v3 = 0xED0000797274656DLL;
  }
  if (*v1)
  {
    unint64_t v2 = v4;
    unint64_t v5 = v3;
  }
  else
  {
    unint64_t v5 = 0x80000002561AA2F0;
  }
  *a1 = v2;
  a1[1] = v5;
}

void sub_2561222C4()
{
  off_269F472F0 = &unk_2704B60A8;
}

unint64_t sub_2561222D8(char a1)
{
  if (!a1) {
    return 0xD000000000000017;
  }
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return 0xD000000000000011;
}

uint64_t sub_256122334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25612007C(*a1, *a2);
}

uint64_t sub_256122340()
{
  return sub_25612123C();
}

uint64_t sub_256122348()
{
  return sub_256121760();
}

uint64_t sub_256122350()
{
  return sub_256121D5C();
}

uint64_t sub_256122358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256127F34();
  *a1 = result;
  return result;
}

unint64_t sub_256122390@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2561222D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2561223BC()
{
  int v1 = *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode);
  uint64_t v2 = 80;
  if (v1 == 1)
  {
    unint64_t v11 = &OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
    uint64_t v10 = 4;
    goto LABEL_12;
  }
  if (!v1)
  {
    unint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
    if (!v3)
    {
      uint64_t v2 = 80;
      goto LABEL_13;
    }
    id v4 = v3;
    uint64_t v2 = (uint64_t)objc_msgSend(v4, sel_pixelFormat);
    objc_msgSend(v4, sel_bounds);
    CGFloat Width = CGRectGetWidth(v13);
    uint64_t v6 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling;
    double v7 = Width * *(double *)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling);
    if ((~*(void *)&v7 & 0x7FF0000000000000) != 0)
    {
      if (v7 > -9.22337204e18)
      {
        if (v7 < 9.22337204e18)
        {
          *(void *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth) = (uint64_t)v7;
          objc_msgSend(v4, sel_bounds);
          double Height = CGRectGetHeight(v14);

          double v9 = Height * *(double *)(v0 + v6);
          if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
          {
            if (v9 > -9.22337204e18)
            {
              if (v9 < 9.22337204e18)
              {
                uint64_t v10 = (uint64_t)v9;
                unint64_t v11 = &OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight;
LABEL_12:
                *(void *)(v0 + *v11) = v10;
                goto LABEL_13;
              }
LABEL_22:
              __break(1u);
              return;
            }
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_13:
  sub_2561245D8();
  sub_2561228D0();
  sub_25612255C();

  sub_256123F98(v2);
}

uint64_t sub_25612255C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_meshQuality);
  type metadata accessor for DiscMesh();
  swift_allocObject();
  id v4 = (void *)swift_unknownObjectRetain();
  uint64_t v5 = sub_2560E2158(v4, v3);
  swift_unknownObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc) = v5;
  swift_release();
  type metadata accessor for QuadMesh();
  uint64_t v6 = swift_allocObject();
  *(int64x2_t *)(v6 + 16) = vdupq_n_s64(0x10uLL);
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  double v7 = (void *)swift_unknownObjectRetain();
  sub_256032A58(v7);
  swift_unknownObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad) = v6;
  swift_release();
  char v8 = *(void **)(v1 + v2);
  if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
  {
    id v9 = objc_msgSend(v8, sel_newBufferWithLength_options_, 312, 0);
    uint64_t v10 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances;
    *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances) = v9;
    swift_unknownObjectRelease();
    unint64_t v11 = *(void **)(v1 + v10);
    if (v11)
    {
      id v12 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v13 = v11;
    }
    else
    {
      id v12 = 0;
    }
    uint64_t v15 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator;
    swift_beginAccess();
    for (uint64_t i = 20; i != 332; i += 52)
    {
      if (v12)
      {
        __swift_mutable_project_boxed_opaque_existential_1(v15, *(void *)(v15 + 24));
        sub_2561284F0();
        sub_256128544();
        sub_256177DC8();
        *(_DWORD *)&v12[i] = v20;
      }
    }
    swift_endAccess();
  }
  else
  {
    id v14 = objc_msgSend(v8, sel_newBufferWithLength_options_, 312, 32);
    *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances) = v14;
    swift_unknownObjectRelease();
  }
  uint64_t v17 = *(void *)(v1 + v2);
  swift_unknownObjectRetain();
  uint64_t v18 = sub_256127990(0x70614D746867694CLL, 0xEC000000676E702ELL, v17);
  swift_unknownObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_environmentMap) = v18;
  return swift_unknownObjectRelease();
}

BOOL sub_2561227FC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_commandBuffer);
  if (v1)
  {
    sub_256124744();
    sub_256125CF8(v1);
    sub_2561258AC(v1);
    sub_2561250E8(v1, 0);
    sub_2561263DC(v1);
    sub_2561264BC(v1);
    sub_2561250E8(v1, 1);
    objc_msgSend(v1, sel_commit);
    swift_unknownObjectRelease();
  }
  return v1 != 0;
}

id sub_256122890(uint64_t a1, void *a2)
{
  sub_2561267A4(a1, a2);
  id result = objc_msgSend(a2, sel_commit);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun) = 0;
  return result;
}

void sub_2561228D0()
{
  uint64_t v1 = v0;
  uint64_t v82 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_256175D98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  char v71 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v57 - v6;
  uint64_t v70 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
  unsigned int v8 = *(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurSigma);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
  unint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_kernelCache);
  uint64_t v69 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive);
  uint64_t v68 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary;
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v14 = v11;
  MTLRegionMake2D(v9, v10, &v78);
  long long v67 = v78;
  long long v66 = v79;
  uint64_t v15 = v80;
  uint64_t v16 = v81;
  id v17 = objc_allocWithZone((Class)HKCVGaussianBlur);
  long long v78 = v67;
  long long v79 = v66;
  uint64_t v80 = v15;
  uint64_t v81 = v16;
  id v18 = objc_msgSend(v17, sel_initWithSigma_clipRect_kernelCache_archive_library_, &v78, v14, v12, v13, COERCE_DOUBLE(__PAIR64__(DWORD1(v66), v8)));
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline);
  *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline) = v18;

  uint64_t v20 = swift_allocObject();
  uint64_t v21 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode;
  if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
  {
    uint64_t v22 = 80;
  }
  else
  {
    uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
    if (!v23) {
      goto LABEL_18;
    }
    uint64_t v22 = (uint64_t)objc_msgSend(v23, sel_pixelFormat);
  }
  *(void *)(v20 + 16) = v22;
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F128B0]), sel_init);
  int v77 = *(_DWORD *)(v1 + v21);
  uint64_t v25 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v7, v25, v2);
  unint64_t v26 = v71;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v71, *MEMORY[0x263F18508], v2);
  LOBYTE(v25) = sub_256175D88();
  unint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v26, v2);
  v27(v7, v2);
  BOOL v76 = (v25 & 1) == 0;
  char v75 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion);
  objc_msgSend(v24, sel_setConstantValue_type_atIndex_, &v77, 29, 0);
  objc_msgSend(v24, sel_setConstantValue_type_atIndex_, &v76, 29, 1);
  objc_msgSend(v24, sel_setConstantValue_type_atIndex_, &v75, 53, 2);
  char v71 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F128B8]), sel_init);
  objc_msgSend(v71, sel_setConstantValues_, v24);
  id v28 = (id)sub_25613388C(MEMORY[0x263F8EE78]);
  if (qword_269F42370 != -1) {
    swift_once();
  }
  *(void *)&long long v67 = *((void *)off_269F472F0 + 2);
  if ((void)v67)
  {
    id v57 = v24;
    uint64_t v58 = v20;
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = 0;
    *(void *)&long long v66 = "ont";
    unint64_t v65 = 0x80000002561AA340;
    id v64 = "compute_final_composite";
    unint64_t v63 = 0x80000002561AA360;
    uint64_t v62 = "compute_bg_composite";
    unint64_t v61 = 0x80000002561AA380;
    uint64_t v60 = MEMORY[0x263F8EE50] + 8;
    long long v59 = xmmword_2561A27B0;
    while (1)
    {
      uint64_t v31 = v29;
      uint64_t v32 = *(unsigned __int8 *)(v29 + v30++ + 32);
      id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12850]), sel_init);
      char v34 = (void *)sub_256177EA8();
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_setLabel_, v34);

      uint64_t v35 = *(void *)(v1 + v69);
      if (v35)
      {
        sub_2561287CC(0, (unint64_t *)&qword_269F43AB0, v60, MEMORY[0x263F8E0F8]);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = v59;
        *(void *)(v36 + 32) = v35;
        id v74 = (id)v36;
        sub_256178018();
        sub_256128818();
        swift_unknownObjectRetain_n();
        unint64_t v37 = (void *)sub_256177FF8();
        swift_bridgeObjectRelease();
        objc_msgSend(v33, sel_setBinaryArchives_, v37);
        swift_unknownObjectRelease();
      }
      char v38 = (void *)sub_256177EA8();
      swift_bridgeObjectRelease();
      unint64_t v39 = v71;
      objc_msgSend(v71, sel_setName_, v38);

      unint64_t v40 = *(void **)(v1 + v68);
      id v74 = 0;
      id v41 = objc_msgSend(v40, sel_newFunctionWithDescriptor_error_, v39, &v74);
      if (!v41) {
        break;
      }
      id v42 = v41;
      id v43 = v74;
      objc_msgSend(v33, sel_setComputeFunction_, v42);
      char v44 = *(void **)(v1 + v70);
      id v74 = 0;
      id v45 = objc_msgSend(v44, sel_newComputePipelineStateWithDescriptor_options_reflection_error_, v33, 0, 0, &v74);
      if (!v45)
      {
        id v52 = v74;
        sub_2561755D8();

        swift_willThrow();
        sub_2561287CC(0, (unint64_t *)&qword_269F444B0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
        uint64_t v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = xmmword_2561A0960;
        swift_getErrorValue();
        uint64_t v54 = v72;
        uint64_t v55 = v73;
        *(void *)(v53 + 56) = v73;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v53 + 32));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(boxed_opaque_existential_1, v54, v55);
        sub_2561788C8();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      uint64_t v46 = (uint64_t)v45;
      id v47 = v74;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v74 = v28;
      sub_25612766C(v46, v32, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_256137DD8, (uint64_t (*)(void))sub_2560D4C04, (void (*)(void))sub_2560D412C);
      id v28 = v74;

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = v31;
      if ((void)v67 == v30)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v58;
        id v24 = v57;
        goto LABEL_15;
      }
    }
    id v50 = v74;
    uint64_t v51 = (void *)sub_2561755D8();

    swift_willThrow();
    while (1)
    {
LABEL_18:
      sub_256178658();
      __break(1u);
    }
  }
LABEL_15:
  *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines) = v28;
  swift_bridgeObjectRelease();
  char v49 = v71;
  sub_2561232E8(0, v71, v1, v20);
  sub_2561232E8(1, v49, v1, v20);
  sub_256123948(v49, v1, v20);
  swift_release();
}

uint64_t sub_2561232E8(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  v45[3] = *(id *)MEMORY[0x263EF8340];
  unsigned int v8 = (void *)sub_256177EA8();
  objc_msgSend(a2, sel_setName_, v8);

  uint64_t v9 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary;
  uint64_t v10 = *(void **)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary);
  v45[0] = 0;
  id v11 = objc_msgSend(v10, sel_newFunctionWithDescriptor_error_, a2, v45);
  if (!v11) {
    goto LABEL_12;
  }
  id v12 = v11;
  id v13 = v45[0];
  id v14 = (void *)sub_256177EA8();
  objc_msgSend(a2, sel_setName_, v14);

  uint64_t v15 = *(void **)(a3 + v9);
  v45[0] = 0;
  id v16 = objc_msgSend(v15, sel_newFunctionWithDescriptor_error_, a2, v45);
  id v17 = v45[0];
  if (v16)
  {
    id v18 = v16;
    id v19 = objc_allocWithZone(MEMORY[0x263F129C0]);
    id v20 = v17;
    id v21 = objc_msgSend(v19, sel_init);
    objc_msgSend(v21, sel_setVertexFunction_, v12);
    objc_msgSend(v21, sel_setFragmentFunction_, v18);
    if (*(void *)(a3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc)) {
      id v22 = sub_2560E1F48();
    }
    else {
      id v22 = 0;
    }
    objc_msgSend(v21, sel_setVertexDescriptor_, v22);

    objc_msgSend(v21, sel_setRasterSampleCount_, *(void *)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount));
    id v23 = objc_msgSend(v21, sel_colorAttachments);
    id v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 0);

    if (!v24) {
      __break(1u);
    }
    swift_beginAccess();
    objc_msgSend(v24, sel_setPixelFormat_, *(void *)(a4 + 16));

    uint64_t v25 = (void *)sub_256177EA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setLabel_, v25);

    uint64_t v26 = *(void *)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive);
    if (v26)
    {
      sub_2561287CC(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_2561A27B0;
      *(void *)(v27 + 32) = v26;
      v44[0] = (id)v27;
      sub_256178018();
      sub_256128818();
      swift_unknownObjectRetain_n();
      id v28 = (void *)sub_256177FF8();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_setBinaryArchives_, v28);
      swift_unknownObjectRelease();
    }
    uint64_t v29 = *(void **)(a3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device);
    v44[0] = 0;
    id v30 = objc_msgSend(v29, sel_newRenderPipelineStateWithDescriptor_options_reflection_error_, v21, 0, 0, v44);
    id v31 = v44[0];
    if (v30)
    {
      uint64_t v32 = (uint64_t)v30;
      id v33 = (uint64_t *)(a3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
      swift_beginAccess();
      id v34 = v31;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = *v33;
      *id v33 = 0x8000000000000000;
      sub_25612766C(v32, a1 != 0, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_256137D00, (uint64_t (*)(void))sub_2560D4BEC, (void (*)(void))sub_2560D3DC4);
      *id v33 = v42;
      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
    id v39 = v44[0];
    sub_2561755D8();

    swift_willThrow();
    sub_2561287CC(0, (unint64_t *)&qword_269F444B0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_2561A0960;
    swift_getErrorValue();
    *(void *)(v40 + 56) = v43;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v40 + 32));
    (*(void (**)(uint64_t *))(*(void *)(v43 - 8) + 16))(boxed_opaque_existential_1);
    sub_2561788C8();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    id v37 = v45[0];
    char v38 = (void *)sub_2561755D8();

    swift_willThrow();
  }
  uint64_t result = sub_256178658();
  __break(1u);
  return result;
}

uint64_t sub_256123948(void *a1, uint64_t a2, uint64_t a3)
{
  v43[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = (void *)sub_256177EA8();
  objc_msgSend(a1, sel_setName_, v6);

  uint64_t v7 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary;
  unsigned int v8 = *(void **)(a2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary);
  v43[0] = 0;
  id v9 = objc_msgSend(v8, sel_newFunctionWithDescriptor_error_, a1, v43);
  if (!v9) {
    goto LABEL_12;
  }
  id v10 = v9;
  id v11 = v43[0];
  id v12 = (void *)sub_256177EA8();
  objc_msgSend(a1, sel_setName_, v12);

  id v13 = *(void **)(a2 + v7);
  v43[0] = 0;
  id v14 = objc_msgSend(v13, sel_newFunctionWithDescriptor_error_, a1, v43);
  id v15 = v43[0];
  if (v14)
  {
    id v16 = v14;
    id v17 = objc_allocWithZone(MEMORY[0x263F129C0]);
    id v18 = v15;
    id v19 = objc_msgSend(v17, sel_init);
    objc_msgSend(v19, sel_setVertexFunction_, v10);
    objc_msgSend(v19, sel_setFragmentFunction_, v16);
    if (*(void *)(a2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad)) {
      id v20 = sub_256032E1C();
    }
    else {
      id v20 = 0;
    }
    objc_msgSend(v19, sel_setVertexDescriptor_, v20);

    objc_msgSend(v19, sel_setRasterSampleCount_, 1);
    id v21 = objc_msgSend(v19, sel_colorAttachments);
    id v22 = objc_msgSend(v21, sel_objectAtIndexedSubscript_, 0);

    if (!v22) {
      __break(1u);
    }
    swift_beginAccess();
    objc_msgSend(v22, sel_setPixelFormat_, *(void *)(a3 + 16));

    id v23 = (void *)sub_256177EA8();
    objc_msgSend(v19, sel_setLabel_, v23);

    uint64_t v24 = *(void *)(a2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive);
    if (v24)
    {
      sub_2561287CC(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_2561A27B0;
      *(void *)(v25 + 32) = v24;
      v42[0] = (id)v25;
      sub_256178018();
      sub_256128818();
      swift_unknownObjectRetain_n();
      uint64_t v26 = (void *)sub_256177FF8();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setBinaryArchives_, v26);
      swift_unknownObjectRelease();
    }
    uint64_t v27 = *(void **)(a2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device);
    v42[0] = 0;
    id v28 = objc_msgSend(v27, sel_newRenderPipelineStateWithDescriptor_options_reflection_error_, v19, 0, 0, v42);
    id v29 = v42[0];
    if (v28)
    {
      uint64_t v30 = (uint64_t)v28;
      id v31 = (uint64_t *)(a2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
      swift_beginAccess();
      id v32 = v29;
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v40 = *v31;
      *id v31 = 0x8000000000000000;
      sub_25612766C(v30, 2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_256137D00, (uint64_t (*)(void))sub_2560D4BEC, (void (*)(void))sub_2560D3DC4);
      *id v31 = v40;
      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
    id v37 = v42[0];
    sub_2561755D8();

    swift_willThrow();
    sub_2561287CC(0, (unint64_t *)&qword_269F444B0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_2561A0960;
    swift_getErrorValue();
    *(void *)(v38 + 56) = v41;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v38 + 32));
    (*(void (**)(uint64_t *))(*(void *)(v41 - 8) + 16))(boxed_opaque_existential_1);
    sub_2561788C8();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    id v35 = v43[0];
    uint64_t v36 = (void *)sub_2561755D8();

    swift_willThrow();
  }
  uint64_t result = sub_256178658();
  __break(1u);
  return result;
}

void sub_256123F98(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
    if (v3)
    {
      id v4 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, a1, v2, v3, 0);
      uint64_t v5 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
      unsigned int v6 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device), sel_supportsFamily_, 1001);
      uint64_t v7 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
      if (*(uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount) >= 2)
      {
        if (v6) {
          uint64_t v8 = 3;
        }
        else {
          uint64_t v8 = 2;
        }
        objc_msgSend(v4, sel_setUsage_, 4);
        objc_msgSend(v4, sel_setSampleCount_, *(void *)(v1 + v7));
        objc_msgSend(v4, sel_setTextureType_, 4);
        objc_msgSend(v4, sel_setStorageMode_, v8);
        id v9 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
        *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaAlbedo) = v9;
        swift_unknownObjectRelease();
        id v10 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
        *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaBackShape) = v10;
        swift_unknownObjectRelease();
      }
      objc_msgSend(v4, sel_setSampleCount_, 1);
      objc_msgSend(v4, sel_setTextureType_, 2);
      objc_msgSend(v4, sel_setStorageMode_, 2);
      objc_msgSend(v4, sel_setUsage_, 5);
      id v11 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
      *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo) = v11;
      swift_unknownObjectRelease();
      objc_msgSend(v4, sel_setUsage_, 7);
      id v12 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
      *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background) = v12;
      swift_unknownObjectRelease();
      objc_msgSend(v4, sel_setUsage_, 7);
      id v13 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
      id v14 = (void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
      swift_beginAccess();
      *id v14 = v13;
      swift_unknownObjectRelease();
      if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
      {
        objc_msgSend(v4, sel_setStorageMode_, 0);
        objc_msgSend(v4, sel_setUsage_, 3);
        id v15 = objc_msgSend(*(id *)(v1 + v5), sel_newTextureWithDescriptor_, v4);
        *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result) = v15;
        swift_unknownObjectRelease();
        unint64_t v16 = (unint64_t)objc_msgSend(v4, sel_width);
        if ((v16 - 0x2000000000000000) >> 62 == 3)
        {
          uint64_t v17 = 4 * v16;
          uint64_t v18 = (uint64_t)objc_msgSend(v4, sel_height);
          if ((unsigned __int128)(v17 * (__int128)v18) >> 64 == (v17 * v18) >> 63)
          {
            id v19 = objc_msgSend(*(id *)(v1 + v5), sel_newBufferWithLength_options_);
            *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_resultBuffer) = v19;
LABEL_13:
            swift_unknownObjectRelease();
            sub_2561287CC(0, (unint64_t *)&qword_269F444B0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
            uint64_t v20 = swift_allocObject();
            *(_OWORD *)(v20 + 16) = xmmword_2561A69E0;
            *(void *)(v20 + 56) = MEMORY[0x263F8D310];
            *(void *)(v20 + 32) = 0xD00000000000001ALL;
            *(void *)(v20 + 40) = 0x80000002561AD550;
            id v21 = objc_msgSend(v4, sel_width);
            uint64_t v22 = MEMORY[0x263F8D6C8];
            *(void *)(v20 + 88) = MEMORY[0x263F8D6C8];
            *(void *)(v20 + 64) = v21;
            id v23 = objc_msgSend(v4, sel_height);
            *(void *)(v20 + 120) = v22;
            *(void *)(v20 + 96) = v23;
            sub_2561788C8();
            swift_bridgeObjectRelease();

            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }
      *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result) = 0;
      swift_unknownObjectRelease();
      *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_resultBuffer) = 0;
      goto LABEL_13;
    }
  }
}

void sub_2561243D4(float a1, float a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (v3)
  {
    id v31 = v3;
    objc_msgSend(v31, sel_bounds);
    float Width = CGRectGetWidth(v33);
    objc_msgSend(v31, sel_bounds);
    float Height = CGRectGetHeight(v34);
    float v8 = Width / Height;
    if ((~COERCE_INT(Width / Height) & 0x7F800000) != 0 || (COERCE_UNSIGNED_INT(Width / Height) & 0x7FFFFF) == 0)
    {
      *(__n64 *)v10.f32 = sub_256170484((float)((float)(a1 / Width) * v8) * 3.0, (float32x4_t)xmmword_256179AC0);
      float32x4_t v20 = v10;
      float32x4_t v22 = v11;
      float32x4_t v24 = v12;
      float32x4_t v27 = v13;
      *(__n64 *)v14.f32 = sub_256170484((float)((float)(a2 / Height) * v8) * 3.0, (float32x4_t)xmmword_256179B20);
      float32x4_t v30 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v14.f32[0]), v22, *(float32x2_t *)v14.f32, 1), v24, v14, 2), v27, v14, 3);
      float32x4_t v29 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v15.f32[0]), v22, *(float32x2_t *)v15.f32, 1), v24, v15, 2), v27, v15, 3);
      float32x4_t v26 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v16.f32[0]), v22, *(float32x2_t *)v16.f32, 1), v24, v16, 2), v27, v16, 3);
      float32x4_t v23 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v20, v17.f32[0]), v22, *(float32x2_t *)v17.f32, 1), v24, v17, 2), v27, v17, 3);
      uint64_t v18 = (float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation);
      float32x4_t v19 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation);
      float32x4_t v21 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation + 16);
      float32x4_t v25 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation + 32);
      float32x4_t v28 = *(float32x4_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation + 48);

      *uint64_t v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v19.f32[0]), v29, *(float32x2_t *)v19.f32, 1), v26, v19, 2), v23, v19, 3);
      v18[1] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v21.f32[0]), v29, *(float32x2_t *)v21.f32, 1), v26, v21, 2), v23, v21, 3);
      v18[2] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v25.f32[0]), v29, *(float32x2_t *)v25.f32, 1), v26, v25, 2), v23, v25, 3);
      void v18[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v28.f32[0]), v29, *(float32x2_t *)v28.f32, 1), v26, v28, 2), v23, v28, 3);
    }
    else
    {
    }
  }
}

uint64_t sub_2561245D8()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun) = 1;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time) = 0;
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
  if (v1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (v2)
  {
    while (v2 >= 1)
    {
      uint64_t v4 = 0;
      uint64_t v5 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion;
      while (1)
      {
        uint64_t v6 = (v1 & 0xC000000000000001) != 0 ? MEMORY[0x25A2A1000](v4, v1) : swift_retain();
        int v7 = *(_DWORD *)(v6 + 24);
        BOOL v8 = v7 != 0;
        int v9 = v7 - 1;
        if (!v8) {
          break;
        }
        *(_DWORD *)(v6 + 28) = v9;
        float v10 = *(float *)(v6 + 16);
        if (*(unsigned char *)(v0 + v5)) {
          float v10 = v10 * 1.8;
        }
        ++v4;
        *(float *)(v6 + 36) = v10;
        *(float *)(v6 + 40) = v10;
        swift_release();
        if (v2 == v4) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_256178678();
      uint64_t v2 = result;
      if (!result) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease_n();
    if (*(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1) {
      int v11 = 1069379748;
    }
    else {
      int v11 = *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale);
    }
    *(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale) = v11;
  }
  return result;
}

void *sub_256124744()
{
  uint64_t v1 = v0;
  sub_256124DF0(v0, (float)*(uint64_t *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth)/ (float)*(uint64_t *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight));
  float32x4_t v2 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 16);
  float32x4_t v4 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 32);
  float32x4_t v3 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 48);
  float32x4_t v5 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*MEMORY[0x263EF89A8], COERCE_FLOAT(*MEMORY[0x263EF89A8])), v2, *MEMORY[0x263EF89A8], 1), v4, *MEMORY[0x263EF89A8], 2), v3, *MEMORY[0x263EF89A8], 3);
  float32x4_t v6 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*MEMORY[0x263EF89A8], v2.f32[0]), v2, *(float32x2_t *)v2.f32, 1), v4, v2, 2), v3, v2, 3);
  float32x4_t v7 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*MEMORY[0x263EF89A8], v4.f32[0]), v2, *(float32x2_t *)v4.f32, 1), v4, v4, 2), v3, v4, 3);
  __asm { FMOV            V0.4S, #1.5 }
  float32x4_t v13 = vmlaq_laneq_f32(vmlaq_f32(vmlaq_f32(vmulq_f32(*MEMORY[0x263EF89A8], (float32x4_t)0), (float32x4_t)0, v2), _Q0, v4), v3, v3, 3);
  float32x4_t v14 = (float32x4_t *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation);
  simd_float4x4 v15 = *(simd_float4x4 *)v14->i8;
  float32x4_t v16 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, COERCE_FLOAT(*v14)), v6, *(float32x2_t *)v14->f32, 1), v7, *v14, 2), v13, *v14, 3);
  float32x4_t v17 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, v15.columns[1].f32[0]), v6, *(float32x2_t *)v15.columns[1].f32, 1), v7, (float32x4_t)v15.columns[1], 2), v13, (float32x4_t)v15.columns[1], 3);
  float32x4_t v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, v15.columns[2].f32[0]), v6, *(float32x2_t *)v15.columns[2].f32, 1), v7, (float32x4_t)v15.columns[2], 2), v13, (float32x4_t)v15.columns[2], 3);
  float32x4_t v19 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v5, v15.columns[3].f32[0]), v6, *(float32x2_t *)v15.columns[3].f32, 1), v7, (float32x4_t)v15.columns[3], 2), v13, (float32x4_t)v15.columns[3], 3);
  float32x4_t v20 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v16, COERCE_FLOAT(*MEMORY[0x263EF89A8])), v17, *MEMORY[0x263EF89A8], 1), v18, *MEMORY[0x263EF89A8], 2), v19, *MEMORY[0x263EF89A8], 3);
  float32x4_t v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v16, v2.f32[0]), v17, *(float32x2_t *)v2.f32, 1), v18, v2, 2), v19, v2, 3);
  float32x4_t v22 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v16, v4.f32[0]), v17, *(float32x2_t *)v4.f32, 1), v18, v4, 2), v19, v4, 3);
  __asm { FMOV            V19.4S, #-1.5 }
  float32x4_t v24 = vmlaq_laneq_f32(vmlaq_f32(vmlaq_f32(vmulq_f32(v16, (float32x4_t)0), (float32x4_t)0, v17), _Q19, v18), v19, v3, 3);
  float32x4_t v25 = vmulq_f32(v20, (float32x4_t)0);
  float32x4_t v26 = vmlaq_f32(vmlaq_f32(vaddq_f32(v21, v25), (float32x4_t)0, v22), (float32x4_t)0, v24);
  float32x4_t v27 = vmlaq_f32(v25, (float32x4_t)0, v21);
  float32x4_t v28 = (float32x4_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model);
  *float32x4_t v28 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v20, (float32x4_t)0, v21), (float32x4_t)0, v22), (float32x4_t)0, v24);
  v28[1] = v26;
  v28[2] = vmlaq_f32(vaddq_f32(v22, v27), (float32x4_t)0, v24);
  v28[3] = vaddq_f32(v24, vmlaq_f32(v27, (float32x4_t)0, v22));
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_isDragging) & 1) == 0)
  {
    *(double *)v29.i64 = simd_quaternion(v15);
    simd_slerp(v29, (float32x4_t)_PromotedConst, v30);
    *(double *)v31.i64 = MEMORY[0x25A2A0CD0]();
    *float32x4_t v14 = v31;
    v14[1] = v32;
    v14[2] = v33;
    v14[3] = v34;
  }
  unint64_t v35 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_lights;
  swift_beginAccess();
  *(void *)unint64_t v35 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v36 = *(void *)v35;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)unint64_t v35 = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_31:
    uint64_t v36 = (uint64_t)sub_256096A60(0, *(void *)(v36 + 16) + 1, 1, (void *)v36);
    *(void *)unint64_t v35 = v36;
  }
  unint64_t v39 = *(void *)(v36 + 16);
  unint64_t v38 = *(void *)(v36 + 24);
  if (v39 >= v38 >> 1)
  {
    uint64_t v36 = (uint64_t)sub_256096A60((void *)(v38 > 1), v39 + 1, 1, (void *)v36);
    *(void *)unint64_t v35 = v36;
  }
  float32x2_t v40 = vrsqrte_f32((float32x2_t)1107296256);
  float32x2_t v41 = vmul_f32(v40, vrsqrts_f32((float32x2_t)1107296256, vmul_f32(v40, v40)));
  *(void *)(v36 + 16) = v39 + 1;
  uint64_t v42 = v36 + 48 * v39;
  *(_OWORD *)(v42 + 32) = xmmword_2561A8280;
  *(float32x4_t *)(v42 + 48) = vmulq_n_f32((float32x4_t)xmmword_2561A8270, vmul_f32(v41, vrsqrts_f32((float32x2_t)1107296256, vmul_f32(v41, v41))).f32[0]);
  *(_DWORD *)(v42 + 64) = 1109393408;
  uint64_t v43 = *(void **)v35;
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)unint64_t v35 = v43;
  if ((v44 & 1) == 0)
  {
    uint64_t v43 = sub_256096A60(0, v43[2] + 1, 1, v43);
    *(void *)unint64_t v35 = v43;
  }
  unint64_t v46 = v43[2];
  unint64_t v45 = v43[3];
  if (v46 >= v45 >> 1)
  {
    uint64_t v43 = sub_256096A60((void *)(v45 > 1), v46 + 1, 1, v43);
    *(void *)unint64_t v35 = v43;
  }
  float32x2_t v47 = vrsqrte_f32((float32x2_t)1105723393);
  float32x2_t v48 = vmul_f32(v47, vrsqrts_f32((float32x2_t)1105723393, vmul_f32(v47, v47)));
  v43[2] = v46 + 1;
  char v49 = &v43[6 * v46];
  *((_OWORD *)v49 + 2) = xmmword_2561A82A0;
  *((float32x4_t *)v49 + 3) = vmulq_n_f32((float32x4_t)xmmword_2561A8290, vmul_f32(v48, vrsqrts_f32((float32x2_t)1105723393, vmul_f32(v48, v48))).f32[0]);
  *((_DWORD *)v49 + 16) = 1101004800;
  id v50 = *(void **)v35;
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)unint64_t v35 = v50;
  if ((v51 & 1) == 0)
  {
    id v50 = sub_256096A60(0, v50[2] + 1, 1, v50);
    *(void *)unint64_t v35 = v50;
  }
  unint64_t v53 = v50[2];
  unint64_t v52 = v50[3];
  if (v53 >= v52 >> 1)
  {
    id v50 = sub_256096A60((void *)(v52 > 1), v53 + 1, 1, v50);
    *(void *)unint64_t v35 = v50;
  }
  float32x2_t v54 = vrsqrte_f32((float32x2_t)1105723391);
  float32x2_t v55 = vmul_f32(v54, vrsqrts_f32((float32x2_t)1105723391, vmul_f32(v54, v54)));
  v50[2] = v53 + 1;
  uint64_t v56 = &v50[6 * v53];
  *((_OWORD *)v56 + 2) = xmmword_2561A82C0;
  *((float32x4_t *)v56 + 3) = vmulq_n_f32((float32x4_t)xmmword_2561A82B0, vmul_f32(v55, vrsqrts_f32((float32x2_t)1105723391, vmul_f32(v55, v55))).f32[0]);
  *((_DWORD *)v56 + 16) = 1101004800;
  swift_endAccess();
  if (*(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1) {
    float v57 = 0.016667;
  }
  else {
    float v57 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta);
  }
  *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time) = v57
                                                                            + *(float *)(v1
                                                                                       + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time);
  unint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = (void *)sub_256178678();
    uint64_t v36 = (uint64_t)result;
    if (result) {
      goto LABEL_19;
    }
LABEL_33:
    swift_bridgeObjectRelease_n();
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun))
    {
      float v65 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence);
      uint64_t v66 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed;
    }
    else
    {
      float v67 = 0.1;
      uint64_t v66 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed;
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion)) {
        float v67 = 0.02;
      }
      float v65 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed)
          + (float)(v67
                  * (float)(*(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence)
                          - *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed)));
    }
    *(float *)(v1 + v66) = v65;
    uint64_t v68 = v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence;
    uint64_t v69 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence + 8);
    int v70 = *(_DWORD *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence + 16);
    uint64_t v75 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence);
    uint64_t v76 = v69;
    int v77 = v70;
    sub_2561287CC(0, &qword_269F47D50, MEMORY[0x263F8D5C8], MEMORY[0x263F1B750]);
    uint64_t result = MEMORY[0x25A2A01A0](&v74);
    float v71 = *(float *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
    if (vabds_f32(v74, v71) > 0.001)
    {
      uint64_t v72 = *(void *)(v68 + 8);
      int v73 = *(_DWORD *)(v68 + 16);
      uint64_t v75 = *(void *)v68;
      uint64_t v76 = v72;
      int v77 = v73;
      float v74 = v71;
      return (void *)sub_256177728();
    }
    return result;
  }
  uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = (void *)swift_bridgeObjectRetain_n();
  if (!v36) {
    goto LABEL_33;
  }
LABEL_19:
  if (v36 >= 1)
  {
    uint64_t v59 = 0;
    while (1)
    {
      if ((v35 & 0xC000000000000001) != 0) {
        uint64_t v60 = MEMORY[0x25A2A1000](v59, v35);
      }
      else {
        uint64_t v60 = swift_retain();
      }
      float v61 = *(float *)(v60 + 40);
      float v62 = v57 + *(float *)(v60 + 36);
      *(float *)(v60 + 36) = v62;
      if (v61 > v62)
      {
        *(unsigned char *)(v60 + 32) = 0;
      }
      else
      {
        *(float *)(v60 + 36) = v62 - v61;
        int v63 = *(_DWORD *)(v60 + 28);
        _CF = __CFADD__(v63, 1);
        unsigned int v64 = v63 + 1;
        if (_CF)
        {
          __break(1u);
          goto LABEL_31;
        }
        *(_DWORD *)(v60 + 28) = v64;
        *(unsigned char *)(v60 + 32) = 1;
        if (v64 >= *(_DWORD *)(v60 + 24)) {
          *(_DWORD *)(v60 + 28) = *(_DWORD *)(v60 + 20);
        }
      }
      swift_release();
      if (v36 == ++v59) {
        goto LABEL_33;
      }
    }
  }
  __break(1u);
  return result;
}

float32x4_t sub_256124DF0(uint64_t a1, float a2)
{
  float32x4_t v30 = (float32x4_t)*(unsigned int *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale);
  LODWORD(v3) = 0;
  HIDWORD(v3) = *(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale);
  float32x4_t v31 = (float32x4_t)v3;
  v4.f32[0] = sub_2561705B8(35.0, a2);
  if (a2 >= 1.0)
  {
    float32x4_t v34 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v5.f32[0]), v31, *(float32x2_t *)v5.f32, 1), (float32x4_t)xmmword_256179AD0, v5, 2), (float32x4_t)xmmword_2561A82D0, v5, 3);
    float32x4_t v35 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v4.f32[0]), v31, *(float32x2_t *)v4.f32, 1), (float32x4_t)xmmword_256179AD0, v4, 2), (float32x4_t)xmmword_2561A82D0, v4, 3);
    float32x4_t v33 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v6.f32[0]), v31, *(float32x2_t *)v6.f32, 1), (float32x4_t)xmmword_256179AD0, v6, 2), (float32x4_t)xmmword_2561A82D0, v6, 3);
    float32x4_t v14 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v30, v7.f32[0]), v31, *(float32x2_t *)v7.f32, 1), (float32x4_t)xmmword_256179AD0, v7, 2), (float32x4_t)xmmword_2561A82D0, v7, 3);
  }
  else
  {
    float32x4_t v8 = vaddq_f32(vmlaq_f32(vmulq_n_f32(v30, a2), (float32x4_t)0, v31), (float32x4_t)0);
    float32x4_t v9 = vmulq_f32(v30, (float32x4_t)0);
    float32x4_t v10 = vaddq_f32(vmlaq_n_f32(v9, v31, a2), (float32x4_t)0);
    float32x4_t v11 = vmlaq_f32(v9, (float32x4_t)0, v31);
    float32x4_t v12 = vaddq_f32(v11, (float32x4_t)xmmword_256179AD0);
    float32x4_t v13 = vaddq_f32(vaddq_f32(v11, (float32x4_t)0), (float32x4_t)xmmword_2561A82D0);
    float32x4_t v35 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v4.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 3), v13);
    float32x4_t v34 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v5.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 3), v13);
    float32x4_t v33 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v6.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v6.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 3), v13);
    float32x4_t v14 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v8, v7.f32[0]), (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1), v10), (float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), v12), (float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 3), v13);
  }
  float32x4_t v32 = v14;
  if (*(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode))
  {
    int32x4_t v15 = (int32x4_t)xmmword_2561A82E0;
  }
  else
  {
    float v16 = 0.61087;
    float v17 = a2 * 0.61087;
    if (a2 < 1.0) {
      float v17 = 0.61087;
    }
    float v18 = (float)(v17
                * (float)(COERCE_FLOAT(*(void *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset))
                        / (float)((float)*(uint64_t *)(a1
                                                    + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth)
                                * 0.5)))
        + 3.1416;
    if ((float)(1.0 / a2) >= 1.0) {
      float v16 = (float)(1.0 / a2) * 0.61087;
    }
    float v19 = 3.1416
        - (float)(v16
                * (float)(COERCE_FLOAT(HIDWORD(*(void *)(a1
                                                         + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset)))
                        / (float)((float)*(uint64_t *)(a1
                                                    + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight)
                                * 0.5)));
    __float2 v20 = __sincosf_stret(v18);
    __float2 v21 = __sincosf_stret(v19);
    v15.i64[0] = __PAIR64__(LODWORD(v21.__sinval), LODWORD(v20.__sinval));
    v15.i64[1] = COERCE_UNSIGNED_INT(-(float)(v20.__cosval * v21.__cosval));
  }
  *(__n64 *)v22.f32 = sub_256170648(0.0, v15, (int32x4_t)xmmword_256179AC0);
  float32x4_t v23 = (float32x4_t *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_projection);
  float32x4_t *v23 = v35;
  v23[1] = v34;
  v23[2] = v33;
  v23[3] = v32;
  float32x4_t v24 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v22.f32[0]), v34, *(float32x2_t *)v22.f32, 1), v33, v22, 2), v32, v22, 3);
  float32x4_t result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v25.f32[0]), v34, *(float32x2_t *)v25.f32, 1), v33, v25, 2), v32, v25, 3);
  float32x4_t v29 = (float32x4_t *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera);
  *float32x4_t v29 = v24;
  v29[1] = result;
  v29[2] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v27.f32[0]), v34, *(float32x2_t *)v27.f32, 1), v33, v27, 2), v32, v27, 3);
  v29[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v35, v28.f32[0]), v34, *(float32x2_t *)v28.f32, 1), v33, v28, 2), v32, v28, 3);
  return result;
}

void sub_2561250E8(void *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v54 = *MEMORY[0x263EF8340];
  char v6 = a2 != 0;
  sub_256126AA4(a2);
  float32x4_t v8 = v7;
  id v9 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_, v7);

  if (v9)
  {
    float32x4_t v10 = *(void **)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc);
    if (v10)
    {
      float32x4_t v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
      swift_beginAccess();
      uint64_t v12 = *v11;
      if (!*(void *)(*v11 + 16)) {
        goto LABEL_43;
      }
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_256137D00(v6);
      if ((v14 & 1) == 0)
      {
        swift_unknownObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      unint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      if (v10[9])
      {
        uint64_t v16 = 6;
        if (!a2) {
          uint64_t v16 = 1;
        }
        uint64_t v43 = v16;
        uint64_t v44 = v10[9];
        int v53 = a2;
        uint64_t v17 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers;
        unint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
        if (v18 >> 62) {
          goto LABEL_30;
        }
        uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_unknownObjectRetain();
        for (unint64_t i = v15; v19; unint64_t i = v15)
        {
          unint64_t v20 = 0;
          __float2 v21 = (char *)MEMORY[0x263F8EE78];
          while (1)
          {
            uint64_t v22 = *(void *)(v3 + v17);
            if ((v22 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v23 = MEMORY[0x25A2A1000](v20, v22);
              swift_bridgeObjectRelease();
              goto LABEL_15;
            }
            if ((v20 & 0x8000000000000000) != 0) {
              break;
            }
            if (v20 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_29;
            }
            uint64_t v23 = *(void *)(v22 + 8 * v20 + 32);
            swift_retain();
LABEL_15:
            int v24 = *(_DWORD *)(v23 + 28);
            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              __float2 v21 = sub_2560966E8(0, *((void *)v21 + 2) + 1, 1, v21);
            }
            unint64_t v15 = *((void *)v21 + 2);
            unint64_t v25 = *((void *)v21 + 3);
            if (v15 >= v25 >> 1) {
              __float2 v21 = sub_2560966E8((char *)(v25 > 1), v15 + 1, 1, v21);
            }
            ++v20;
            *((void *)v21 + 2) = v15 + 1;
            *(_DWORD *)&v21[4 * v15 + 32] = v24;
            if (v19 == v20) {
              goto LABEL_34;
            }
          }
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_256178678();
          swift_bridgeObjectRelease();
          if (v19 < 0) {
            __break(1u);
          }
        }
        __float2 v21 = (char *)MEMORY[0x263F8EE78];
LABEL_34:
        if (*(_DWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1)
        {
          v26.f32[0] = (float)*(uint64_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
          float v27 = (float)*(uint64_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
          float32x2_t v28 = 0;
        }
        else
        {
          v29.i64[0] = *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
          v29.i64[1] = *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
          float32x2_t v26 = vcvt_f32_f64(vcvtq_f64_s64(v29));
          float32x2_t v28 = vdiv_f32(*(float32x2_t *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset), vmul_f32(v26, (float32x2_t)0x3F0000003F000000));
          float v27 = v26.f32[1];
        }
        float32x2_t v52 = v28;
        float v51 = *(float *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale) * fminf(v26.f32[0] / v27, 1.0);
        uint64_t v30 = v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_lights;
        swift_beginAccess();
        uint64_t v50 = *(void *)(*(void *)v30 + 16);
        objc_msgSend(v9, sel_setFrontFacingWinding_, 1);
        objc_msgSend(v9, sel_setCullMode_, 2);
        float32x4_t v31 = (void *)sub_256177EA8();
        swift_bridgeObjectRelease();
        objc_msgSend(v9, sel_setLabel_, v31);

        id v32 = objc_msgSend(v9, sel_label);
        if (!v32)
        {
          __break(1u);
          return;
        }
        float32x4_t v33 = v32;
        objc_msgSend(v9, sel_pushDebugGroup_, v32);

        objc_msgSend(v9, sel_setRenderPipelineState_, i);
        objc_msgSend(v9, sel_setVertexBuffer_offset_atIndex_, v10[8], 0, 0);
        objc_msgSend(v9, sel_setVertexBuffer_offset_atIndex_, *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances), 0, 1);
        unint64_t v34 = *(void *)(v3 + v17);
        if (v34 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_256178678();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if ((unint64_t)(v35 - 0x2000000000000000) >> 62 == 3)
        {
          objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, v21 + 32, 4 * v35, 2);
          swift_bridgeObjectRelease();
          long long v36 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model + 16);
          long long v37 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model + 32);
          long long v38 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model + 48);
          long long v46 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model);
          long long v47 = v36;
          long long v48 = v37;
          long long v49 = v38;
          objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 64, 3);
          long long v39 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera + 16);
          long long v40 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera + 32);
          long long v41 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera + 48);
          long long v46 = *(_OWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera);
          long long v47 = v39;
          long long v48 = v40;
          long long v49 = v41;
          objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 64, 4);
          uint64_t v42 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time;
          LODWORD(v46) = *(_DWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time);
          objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 4, 5);
          LODWORD(v46) = *(_DWORD *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
          objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v46, 4, 6);
          objc_msgSend(v9, sel_setVertexBytes_length_atIndex_, &v53, 8, 7);
          objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v52, 8, 0);
          objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v51, 4, 1);
          if ((unsigned __int128)(*(uint64_t *)(*(void *)v30 + 16) * (__int128)48) >> 64 == (48
                                                                                                 * *(void *)(*(void *)v30 + 16)) >> 63)
          {
            objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, *(void *)v30 + 32);
            objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v50, 8, 3);
            objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v53, 8, 4);
            LODWORD(v46) = *(_DWORD *)(v3 + v42);
            objc_msgSend(v9, sel_setFragmentBytes_length_atIndex_, &v46, 4, 5);
            objc_msgSend(v9, sel_setFragmentTexture_atIndex_, *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background), 0);
            objc_msgSend(v9, sel_setFragmentTexture_atIndex_, *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_environmentMap), 1);
            objc_msgSend(v9, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, v10[7], 1, v44, 0, v43);
            objc_msgSend(v9, sel_popDebugGroup);
            objc_msgSend(v9, sel_endEncoding);
            swift_unknownObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
            goto LABEL_43;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
      swift_unknownObjectRelease();
      swift_release();
LABEL_43:
      swift_unknownObjectRelease();
      return;
    }
    swift_unknownObjectRelease();
  }
}

void sub_2561258AC(void *a1)
{
  uint64_t v2 = v1;
  v21[4] = *MEMORY[0x263EF8340];
  sub_256126D5C();
  float32x4_t v5 = v4;
  id v6 = objc_msgSend(a1, sel_renderCommandEncoderWithDescriptor_, v4);

  if (v6)
  {
    float32x4_t v7 = *(void **)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad);
    if (v7)
    {
      float32x4_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines);
      swift_beginAccess();
      uint64_t v9 = *v8;
      if (*(void *)(*v8 + 16))
      {
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_256137D00(2);
        if ((v11 & 1) == 0)
        {
          swift_unknownObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v13 = v7[7];
        if (v13)
        {
          unint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
          if ((v14 & 0x8000000000000000) != 0
            || HIDWORD(v14)
            || (unint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight),
                (v15 & 0x8000000000000000) != 0)
            || HIDWORD(v15))
          {
            sub_256178648();
            __break(1u);
            return;
          }
          v21[0] = __PAIR64__(v15, v14);
          v16.i64[0] = v14;
          v16.i64[1] = v15;
          float32x2_t v20 = vdiv_f32(vadd_f32(*(float32x2_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset), *(float32x2_t *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset)), vmul_f32(vcvt_f32_f64(vcvtq_f64_s64(v16)), (float32x2_t)0x3F0000003F000000));
          swift_unknownObjectRetain();
          objc_msgSend(v6, sel_setFrontFacingWinding_, 1);
          objc_msgSend(v6, sel_setCullMode_, 2);
          uint64_t v17 = (void *)sub_256177EA8();
          objc_msgSend(v6, sel_setLabel_, v17);

          unint64_t v18 = (void *)sub_256177EA8();
          objc_msgSend(v6, sel_pushDebugGroup_, v18);

          objc_msgSend(v6, sel_setRenderPipelineState_, v12);
          objc_msgSend(v6, sel_setVertexBuffer_offset_atIndex_, v7[6], 0, 0);
          int v19 = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time);
          objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, &v19, 4, 1);
          int v19 = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
          objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, &v19, 4, 2);
          objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, v21, 8, 3);
          objc_msgSend(v6, sel_setVertexBytes_length_atIndex_, &v20, 8, 4);
          objc_msgSend(v6, sel_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_, 3, v7[5], 1, v13, 0, 1);
          objc_msgSend(v6, sel_popDebugGroup);
          objc_msgSend(v6, sel_endEncoding);
          swift_unknownObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_release();
        }
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

id sub_256125CF8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = *MEMORY[0x263EF8340];
  id result = objc_msgSend(a1, sel_computeCommandEncoder);
  if (!result) {
    return result;
  }
  float32x4_t v4 = result;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_256137DD8(2);
    if ((v7 & 1) == 0)
    {
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v38 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_thetaOffsetRange);
    uint64_t v9 = v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator;
    swift_beginAccess();
    __swift_mutable_project_boxed_opaque_existential_1(v9, *(void *)(v9 + 24));
    sub_2561284F0();
    sub_256128544();
    sub_256177DC8();
    swift_endAccess();
    if (*(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode) == 1) {
      int v10 = 1015580987;
    }
    else {
      int v10 = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta);
    }
    int v40 = v10;
    uint64_t v11 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers;
    uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers);
    uint64_t v37 = v8;
    if ((unint64_t)v12 >> 62) {
      goto LABEL_49;
    }
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
    if (v13)
    {
      unint64_t v14 = 0;
      uint64_t v15 = MEMORY[0x263F8EE78];
      uint64_t v12 = MEMORY[0x263F8EE78];
      while (1)
      {
        uint64_t v16 = *(void *)(v2 + v11);
        if ((v16 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v17 = MEMORY[0x25A2A1000](v14, v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            if (v12 < 0) {
              uint64_t v15 = v12;
            }
            else {
              uint64_t v15 = v12 & 0xFFFFFFFFFFFFFF8;
            }
            swift_bridgeObjectRetain();
            uint64_t v13 = sub_256178678();
            swift_bridgeObjectRelease();
            if (v13 < 0)
            {
              __break(1u);
              goto LABEL_54;
            }
            goto LABEL_15;
          }
          if (v14 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_46;
          }
          uint64_t v17 = *(void *)(v16 + 8 * v14 + 32);
          swift_retain();
        }
        int v18 = *(_DWORD *)(v17 + 28);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = (uint64_t)sub_2560966E8(0, *(void *)(v15 + 16) + 1, 1, (char *)v15);
        }
        unint64_t v20 = *(void *)(v15 + 16);
        unint64_t v19 = *(void *)(v15 + 24);
        if (v20 >= v19 >> 1) {
          uint64_t v15 = (uint64_t)sub_2560966E8((char *)(v19 > 1), v20 + 1, 1, (char *)v15);
        }
        *(void *)(v15 + 16) = v20 + 1;
        *(_DWORD *)(v15 + 4 * v20 + 32) = v18;
        uint64_t v21 = *(void *)(v2 + v11);
        if ((v21 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v22 = MEMORY[0x25A2A1000](v14, v21);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_47;
          }
          if (v14 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_48;
          }
          uint64_t v22 = *(void *)(v21 + 8 * v14 + 32);
          swift_retain();
        }
        char v23 = *(unsigned char *)(v22 + 32);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = (uint64_t)sub_256096BB4(0, *(void *)(v12 + 16) + 1, 1, (char *)v12);
        }
        unint64_t v25 = *(void *)(v12 + 16);
        unint64_t v24 = *(void *)(v12 + 24);
        if (v25 >= v24 >> 1) {
          uint64_t v12 = (uint64_t)sub_256096BB4((char *)(v24 > 1), v25 + 1, 1, (char *)v12);
        }
        ++v14;
        *(void *)(v12 + 16) = v25 + 1;
        *(unsigned char *)(v12 + v25 + 32) = v23;
        if (v13 == v14) {
          goto LABEL_38;
        }
      }
    }
    uint64_t v15 = MEMORY[0x263F8EE78];
    uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_38:
    float32x2_t v26 = (void *)sub_256177EA8();
    objc_msgSend(v4, sel_setLabel_, v26);

    float v27 = (void *)sub_256177EA8();
    objc_msgSend(v4, sel_pushDebugGroup_, v27);

    objc_msgSend(v4, sel_setComputePipelineState_, v37);
    objc_msgSend(v4, sel_setBuffer_offset_atIndex_, *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances), 0, 0);
    unint64_t v28 = *(void *)(v2 + v11);
    if (v28 >> 62)
    {
LABEL_54:
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_256178678();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if ((unint64_t)(v29 - 0x2000000000000000) >> 62 == 3)
    {
      uint64_t v30 = 4 * v29;
      uint64_t v29 = (uint64_t)&unk_2653F3000;
      objc_msgSend(v4, sel_setBytes_length_atIndex_, v15 + 32, v30, 1);
      swift_bridgeObjectRelease();
      unint64_t v31 = *(void *)(v2 + v11);
      if (!(v31 >> 62))
      {
        uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_43;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_256178678();
    swift_bridgeObjectRelease();
LABEL_43:
    objc_msgSend(v4, *(SEL *)(v29 + 3016), v12 + 32, v32, 2);
    swift_bridgeObjectRelease();
    objc_msgSend(v4, *(SEL *)(v29 + 3016), &v40, 4, 3);
    LODWORD(v42) = *(_DWORD *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed);
    objc_msgSend(v4, *(SEL *)(v29 + 3016), &v42, 4, 4);
    LOBYTE(v42) = *(unsigned char *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun);
    objc_msgSend(v4, *(SEL *)(v29 + 3016), &v42, 1, 5);
    objc_msgSend(v4, *(SEL *)(v29 + 3016), v41, 4, 6);
    MTLSizeMake(2, 1, &v42);
    long long v36 = v42;
    uint64_t v33 = v43;
    MTLSizeMake(4, 1, &v42);
    uint64_t v34 = v43;
    long long v35 = v42;
    long long v42 = v36;
    uint64_t v43 = v33;
    long long v38 = v35;
    uint64_t v39 = v34;
    objc_msgSend(v4, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v42, &v38);
    objc_msgSend(v4, sel_popDebugGroup);
    objc_msgSend(v4, sel_endEncoding);
    swift_unknownObjectRelease();
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    return (id)swift_unknownObjectRelease();
  }
}

uint64_t sub_2561263DC(void *a1)
{
  v8[4] = *(void **)MEMORY[0x263EF8340];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline);
  if (!v2)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  float32x4_t v4 = (void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
  swift_beginAccess();
  if (!*v4) {
    goto LABEL_5;
  }
  v8[0] = *v4;
  id v5 = v2;
  -[HKCVGaussianBlur encodeCommandBuffer:inPlaceTexture:]((uint64_t)v5, a1, v8);
  unint64_t v6 = v8[0];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *float32x4_t v4 = v6;

  return swift_endAccess();
}

id sub_2561264BC(void *a1)
{
  uint64_t v2 = v1;
  id result = objc_msgSend(a1, sel_computeCommandEncoder);
  if (result)
  {
    float32x4_t v4 = result;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines);
    if (*(void *)(v5 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v6 = sub_256137DD8(1);
      if (v7)
      {
        uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v9 = (void *)sub_256177EA8();
        objc_msgSend(v4, sel_setLabel_, v9);

        int v10 = (void *)sub_256177EA8();
        objc_msgSend(v4, sel_pushDebugGroup_, v10);

        objc_msgSend(v4, sel_setComputePipelineState_, v8);
        uint64_t v11 = (void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
        swift_beginAccess();
        objc_msgSend(v4, sel_setTexture_atIndex_, *v11, 0);
        uint64_t v12 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background;
        objc_msgSend(v4, sel_setTexture_atIndex_, *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background), 1);
        objc_msgSend(v4, sel_setTexture_atIndex_, *(void *)(v2 + v12), 2);
        uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
        uint64_t v14 = v13 + 3;
        if (v13 >= 0) {
          uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
        }
        uint64_t v15 = v14 >> 2;
        if ((v13 & 3) != 0) {
          id result = (id)(v15 + 1);
        }
        else {
          id result = (id)v15;
        }
        if (((unint64_t)result - 0x2000000000000000) >> 62 == 3)
        {
          uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
          uint64_t v17 = v16 + 3;
          if (v16 >= 0) {
            uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
          }
          uint64_t v18 = v17 >> 2;
          if ((v16 & 3) != 0) {
            uint64_t v19 = v18 + 1;
          }
          else {
            uint64_t v19 = v18;
          }
          if ((unint64_t)(v19 - 0x2000000000000000) >> 62 == 3)
          {
            MTLSizeMake((uint64_t)result, v19, &v26);
            long long v23 = v26;
            uint64_t v20 = v27;
            MTLSizeMake(4, 4, &v26);
            uint64_t v21 = v27;
            long long v22 = v26;
            long long v26 = v23;
            uint64_t v27 = v20;
            long long v24 = v22;
            uint64_t v25 = v21;
            objc_msgSend(v4, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v26, &v24);
            objc_msgSend(v4, sel_popDebugGroup);
            objc_msgSend(v4, sel_endEncoding);
            swift_unknownObjectRelease();
            return (id)swift_unknownObjectRelease();
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return result;
      }
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_2561267A4(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  id result = objc_msgSend(a2, sel_computeCommandEncoder);
  if (result)
  {
    id v6 = result;
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines);
    if (*(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_256137DD8(0);
      if (v9)
      {
        uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v11 = (void *)sub_256177EA8();
        objc_msgSend(v6, sel_setLabel_, v11);

        uint64_t v12 = (void *)sub_256177EA8();
        objc_msgSend(v6, sel_pushDebugGroup_, v12);

        objc_msgSend(v6, sel_setComputePipelineState_, v10);
        objc_msgSend(v6, sel_setTexture_atIndex_, *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo), 0);
        objc_msgSend(v6, sel_setTexture_atIndex_, *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background), 1);
        objc_msgSend(v6, sel_setTexture_atIndex_, *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result), 2);
        objc_msgSend(v6, sel_setTexture_atIndex_, a1, 3);
        uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
        uint64_t v14 = v13 + 3;
        if (v13 >= 0) {
          uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth);
        }
        uint64_t v15 = v14 >> 2;
        if ((v13 & 3) != 0) {
          id result = (id)(v15 + 1);
        }
        else {
          id result = (id)v15;
        }
        if (((unint64_t)result - 0x2000000000000000) >> 62 == 3)
        {
          uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
          uint64_t v17 = v16 + 3;
          if (v16 >= 0) {
            uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight);
          }
          uint64_t v18 = v17 >> 2;
          if ((v16 & 3) != 0) {
            uint64_t v19 = v18 + 1;
          }
          else {
            uint64_t v19 = v18;
          }
          if ((unint64_t)(v19 - 0x2000000000000000) >> 62 == 3)
          {
            MTLSizeMake((uint64_t)result, v19, &v26);
            long long v23 = v26;
            uint64_t v20 = v27;
            MTLSizeMake(4, 4, &v26);
            uint64_t v21 = v27;
            long long v22 = v26;
            long long v26 = v23;
            uint64_t v27 = v20;
            long long v24 = v22;
            uint64_t v25 = v21;
            objc_msgSend(v6, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v26, &v24);
            objc_msgSend(v6, sel_popDebugGroup);
            objc_msgSend(v6, sel_endEncoding);
            swift_unknownObjectRelease();
            return (id)swift_unknownObjectRelease();
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return result;
      }
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_256126AA4(int a1)
{
  if (a1)
  {
    uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape);
    swift_beginAccess();
  }
  uint64_t v3 = *v2;
  id v4 = objc_allocWithZone(MEMORY[0x263F129A0]);
  swift_unknownObjectRetain();
  id v5 = objc_msgSend(v4, sel_init);
  id v6 = objc_msgSend(v5, sel_colorAttachments);
  id v7 = objc_msgSend(v6, sel_objectAtIndexedSubscript_, 0);

  if (!v7)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
  if (*(uint64_t *)(v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount) <= 1) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = 2;
  }
  objc_msgSend(v7, sel_setStoreAction_, v9);

  id v10 = objc_msgSend(v5, sel_colorAttachments);
  id v11 = objc_msgSend(v10, sel_objectAtIndexedSubscript_, 0);

  if (!v11) {
    goto LABEL_19;
  }
  objc_msgSend(v11, sel_setLoadAction_, 2);

  id v12 = objc_msgSend(v5, sel_colorAttachments);
  id v13 = objc_msgSend(v12, sel_objectAtIndexedSubscript_, 0);

  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v13, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

  id v14 = objc_msgSend(v5, sel_colorAttachments);
  id v15 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 0);

  if (!v15)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v16 = v3;
  if (*(uint64_t *)(v1 + v8) >= 2) {
    uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaAlbedo);
  }
  objc_msgSend(v15, sel_setTexture_, v16);

  id v17 = objc_msgSend(v5, sel_colorAttachments);
  id v18 = objc_msgSend(v17, sel_objectAtIndexedSubscript_, 0);

  if (!v18) {
    goto LABEL_22;
  }
  if (*(uint64_t *)(v1 + v8) < 2)
  {
    uint64_t v19 = 0;
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v19 = v3;
  }
  objc_msgSend(v18, sel_setResolveTexture_, v19);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
}

void sub_256126D5C()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F129A0]), sel_init);
  id v2 = objc_msgSend(v1, sel_colorAttachments);
  id v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);

  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v3, sel_setStoreAction_, 1);

  id v4 = objc_msgSend(v1, sel_colorAttachments);
  id v5 = objc_msgSend(v4, sel_objectAtIndexedSubscript_, 0);

  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v5, sel_setLoadAction_, 2);

  id v6 = objc_msgSend(v1, sel_colorAttachments);
  id v7 = objc_msgSend(v6, sel_objectAtIndexedSubscript_, 0);

  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v7, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

  id v8 = objc_msgSend(v1, sel_colorAttachments);
  id v9 = objc_msgSend(v8, sel_objectAtIndexedSubscript_, 0);

  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background);
  swift_unknownObjectRetain();
  objc_msgSend(v9, sel_setTexture_, v10);
  swift_unknownObjectRelease();

  id v11 = objc_msgSend(v1, sel_colorAttachments);
  id v12 = objc_msgSend(v11, sel_objectAtIndexedSubscript_, 0);

  if (v12)
  {
    objc_msgSend(v12, sel_setResolveTexture_, 0);

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_256126F78()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
  uint64_t v2 = sub_256175D98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_256127120()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChamomileRenderer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_256127304()
{
  return type metadata accessor for ChamomileRenderer();
}

uint64_t type metadata accessor for ChamomileRenderer()
{
  uint64_t result = qword_269F473B8;
  if (!qword_269F473B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256127358()
{
  uint64_t result = sub_256175D98();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

ValueMetadata *type metadata accessor for ChamomileRenderer.ComputePipeline()
{
  return &type metadata for ChamomileRenderer.ComputePipeline;
}

unsigned char *_s14MentalHealthUI17ChamomileRendererC14RenderPipelineOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256127584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChamomileRenderer.RenderPipeline()
{
  return &type metadata for ChamomileRenderer.RenderPipeline;
}

unint64_t sub_2561275C0()
{
  unint64_t result = qword_269F473C8;
  if (!qword_269F473C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F473C8);
  }
  return result;
}

unint64_t sub_256127618()
{
  unint64_t result = qword_269F473D0;
  if (!qword_269F473D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F473D0);
  }
  return result;
}

uint64_t sub_25612766C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void), void (*a6)(void))
{
  uint64_t v10 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = a4(a2);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a3 & 1) == 0)
  {
    uint64_t result = a5();
LABEL_7:
    long long v22 = (void *)*v10;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    *(unsigned char *)(v22[6] + v16) = a2;
    *(void *)(v22[7] + 8 * v16) = a1;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      v22[2] = v27;
      return result;
    }
    goto LABEL_14;
  }
  a6();
  uint64_t result = a4(a2);
  if ((v20 & 1) == (v24 & 1))
  {
    unint64_t v16 = result;
    long long v22 = (void *)*v10;
    if (v20) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_256178868();
  __break(1u);
  return result;
}

_OWORD *sub_2561277D0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_256137C88(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2560D4DC4();
      goto LABEL_7;
    }
    sub_2560D4498(v15, a4 & 1);
    unint64_t v21 = sub_256137C88(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      BOOL v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_256178868();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_25601DCC4(a1, v19);
  }
LABEL_13:
  sub_256127924(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_256127924(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unsigned int v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25601DCC4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_256127990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a2;
  uint64_t v45 = a1;
  v48[27] = *(id *)MEMORY[0x263EF8340];
  sub_256128870(0, (unint64_t *)&qword_26B2AD320, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v43 - v5;
  uint64_t v7 = sub_256175628();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v44 = (char *)&v43 - v12;
  id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12D88]), sel_initWithDevice_, a3);
  sub_256128870(0, (unint64_t *)&unk_269F47400, (uint64_t (*)(uint64_t))sub_2561288D4, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  BOOL v14 = (void **)MEMORY[0x263F12D60];
  *(_OWORD *)(inited + 16) = xmmword_2561A35E0;
  uint64_t v15 = *v14;
  uint64_t v16 = MEMORY[0x263F8D9D0];
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 40) = 1;
  uint64_t v17 = (void *)*MEMORY[0x263F12D58];
  *(void *)(inited + 64) = v16;
  *(void *)(inited + 72) = v17;
  *(void *)(inited + 80) = 2;
  BOOL v18 = (void *)*MEMORY[0x263F12D40];
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 112) = v18;
  uint64_t v19 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 120) = 1;
  char v20 = (void *)*MEMORY[0x263F12D38];
  *(void *)(inited + 144) = v19;
  *(void *)(inited + 152) = v20;
  unint64_t v21 = (void *)*MEMORY[0x263F12D30];
  type metadata accessor for CubeLayout(0);
  *(void *)(inited + 184) = v22;
  *(void *)(inited + 160) = v21;
  id v23 = v15;
  id v24 = v17;
  id v25 = v18;
  id v26 = v20;
  id v27 = v21;
  sub_2561338B8(inited);
  type metadata accessor for ChamomileRenderer();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v29 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v30 = (void *)sub_256177EA8();
  id v31 = objc_msgSend(v29, sel_URLForResource_withExtension_, v30, 0);

  if (!v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_6:
    __break(1u);
  }
  sub_256175608();

  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v32(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    goto LABEL_6;
  }
  uint64_t v33 = v44;
  v32(v44, v6, v7);
  uint64_t v34 = (void *)sub_2561755F8();
  type metadata accessor for Option(0);
  sub_256128940();
  long long v35 = (void *)sub_256177DD8();
  swift_bridgeObjectRelease();
  v48[0] = 0;
  id v36 = v43;
  id v37 = objc_msgSend(v43, sel_newTextureWithContentsOfURL_options_error_, v34, v35, v48);

  if (v37)
  {
    long long v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    id v39 = v48[0];
    v38(v33, v7);

    return (uint64_t)v37;
  }
  else
  {
    id v41 = v48[0];
    uint64_t v42 = sub_2561755D8();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v33, v7);
    v48[0] = 0;
    v48[1] = (id)0xE000000000000000;
    sub_256178558();
    sub_256177F68();
    uint64_t v47 = v42;
    sub_255FB3160();
    sub_256178628();
    uint64_t result = sub_256178658();
    __break(1u);
  }
  return result;
}

uint64_t sub_256127F34()
{
  unint64_t v0 = sub_2561786F8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_256127F7C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8, float a9)
{
  uint64_t v10 = v9;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode] = 0;
  uint64_t v17 = MEMORY[0x263F8E2A0];
  BOOL v18 = &v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_randomNumberGenerator];
  *((void *)v18 + 3) = MEMORY[0x263F8E298];
  *((void *)v18 + 4) = v17;
  uint64_t v19 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_meshQuality;
  v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_meshQuality] = 2;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence] = 0;
  v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_isDragging] = 0;
  *(void *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset] = 0;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale] = 1065353216;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valenceSmoothed] = 0;
  *(_DWORD *)&v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_time] = 0;
  v9[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_firstRun] = 1;
  uint64_t v20 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_ringBufferHelpers;
  sub_2561287CC(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2561A7550;
  type metadata accessor for RingBufferHelper();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 32) = 0;
  *(_DWORD *)(v22 + 16) = 1065353216;
  *(void *)(v22 + 20) = 0x400000000;
  *(void *)(v22 + 36) = 0x3F80000000000000;
  *(_DWORD *)(v22 + 28) = 4;
  *(void *)(v21 + 32) = v22;
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 32) = 0;
  *(_DWORD *)(v23 + 16) = 0;
  *(void *)(v23 + 20) = 0x500000004;
  *(void *)(v23 + 36) = 0;
  *(_DWORD *)(v23 + 28) = 5;
  *(void *)(v21 + 40) = v23;
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 32) = 0;
  *(_DWORD *)(v24 + 16) = 1077936128;
  *(void *)(v24 + 20) = 0x600000005;
  *(void *)(v24 + 36) = 0x4040000000000000;
  *(_DWORD *)(v24 + 28) = 6;
  *(void *)(v21 + 48) = v24;
  sub_256178018();
  *(void *)&v10[v20] = v21;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_disc] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_quad] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_instances] = 0;
  id v25 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_model];
  long long v26 = *MEMORY[0x263EF89A8];
  long long v27 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
  long long v28 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
  long long v29 = *(_OWORD *)(MEMORY[0x263EF89A8] + 48);
  *(_OWORD *)id v25 = *MEMORY[0x263EF89A8];
  *((_OWORD *)v25 + 1) = v27;
  *((_OWORD *)v25 + 2) = v28;
  *((_OWORD *)v25 + 3) = v29;
  uint64_t v30 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_modelRotation];
  *(_OWORD *)uint64_t v30 = v26;
  *((_OWORD *)v30 + 1) = v27;
  *((_OWORD *)v30 + 2) = v28;
  *((_OWORD *)v30 + 3) = v29;
  id v31 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_projection];
  *(_OWORD *)id v31 = v26;
  *((_OWORD *)v31 + 1) = v27;
  *((_OWORD *)v31 + 2) = v28;
  *((_OWORD *)v31 + 3) = v29;
  uint64_t v32 = &v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_camera];
  *(_OWORD *)uint64_t v32 = v26;
  *((_OWORD *)v32 + 1) = v27;
  *((_OWORD *)v32 + 2) = v28;
  *((_OWORD *)v32 + 3) = v29;
  uint64_t v33 = MEMORY[0x263F8EE78];
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_lights] = MEMORY[0x263F8EE78];
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_thetaOffsetRange] = 0x3EC90FDA00000000;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureWidth] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_textureHeight] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_background] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_environmentMap] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_albedo] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaAlbedo] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_backShape] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_msaaBackShape] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_result] = 0;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_resultBuffer] = 0;
  *(_DWORD *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurSigma] = 1107296256;
  *(void *)&v10[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_blurPipeline] = 0;
  uint64_t v34 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_kernelCache;
  id v35 = objc_allocWithZone((Class)HKCVKernelCache);
  id v36 = v10;
  *(void *)&v10[v34] = objc_msgSend(v35, sel_init);
  uint64_t v37 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_renderPipelines;
  *(void *)&v36[v37] = sub_256133BDC(v33);
  uint64_t v38 = OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_computePipelines;
  *(void *)&v36[v38] = sub_25613388C(v33);
  v10[v19] = a3;
  id v39 = &v36[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer__effectiveValence];
  *(void *)id v39 = a4;
  *((void *)v39 + 1) = a5;
  *((float *)v39 + 4) = a9;
  int v40 = &v36[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme];
  uint64_t v41 = sub_256175D98();
  uint64_t v42 = *(void *)(v41 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, a6, v41);
  v36[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion] = a7;
  swift_retain();
  swift_retain();

  uint64_t v43 = sub_255FEF898(a1, a2, a8);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(a6, v41);
  return v43;
}

void sub_256128418()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_bounds);
    uint64_t v3 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling;
    double v5 = v4 * *(double *)(v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling);
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v2, sel_setDrawableSize_, v5, v6 * *(double *)(v0 + v3));
  }
  if (!*(_DWORD *)(v0 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_animationMode))
  {
    sub_2561223BC();
  }
}

uint64_t MTLSizeMake@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[2] = 1;
  return result;
}

unint64_t sub_2561284F0()
{
  unint64_t result = qword_269F473D8;
  if (!qword_269F473D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F473D8);
  }
  return result;
}

unint64_t sub_256128544()
{
  unint64_t result = qword_269F473E0;
  if (!qword_269F473E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F473E0);
  }
  return result;
}

double simd_quaternion(simd_float4x4 a1)
{
  float v1 = a1.columns[2].f32[2] + (float)(a1.columns[0].f32[0] + a1.columns[1].f32[1]);
  if (v1 >= 0.0)
  {
    a1.columns[3].f32[0] = sqrtf(v1 + 1.0);
    float32x2_t v5 = vrecpe_f32((float32x2_t)COERCE_UNSIGNED_INT(a1.columns[3].f32[0] + a1.columns[3].f32[0]));
    float32x2_t v6 = vmul_f32(v5, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(a1.columns[3].f32[0] + a1.columns[3].f32[0]), v5));
    *(float32x2_t *)a1.columns[3].f32 = vmul_n_f32(vsub_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[1], (int8x16_t)a1.columns[1], 8uLL), *(int32x2_t *)a1.columns[2].f32), (float32x2_t)vext_s8(*(int8x8_t *)a1.columns[2].f32, (int8x8_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[0], (int8x16_t)a1.columns[0], 8uLL), 4uLL)), vmul_f32(v6, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(a1.columns[3].f32[0] + a1.columns[3].f32[0]), v6)).f32[0]);
  }
  else if (a1.columns[0].f32[0] < a1.columns[1].f32[1] || a1.columns[0].f32[0] < a1.columns[2].f32[2])
  {
    float v3 = 1.0 - a1.columns[0].f32[0];
    if (a1.columns[1].f32[1] >= a1.columns[2].f32[2])
    {
      a1.columns[3].f32[0] = sqrtf(a1.columns[1].f32[1] + (float)(v3 - a1.columns[2].f32[2]));
      a1.columns[3].f32[0] = a1.columns[3].f32[0] + a1.columns[3].f32[0];
      float32x2_t v16 = vrecpe_f32((float32x2_t)a1.columns[3].u32[0]);
      float32x2_t v17 = vmul_f32(v16, vrecps_f32((float32x2_t)a1.columns[3].u32[0], v16));
      v18.i32[0] = vmul_f32(v17, vrecps_f32((float32x2_t)a1.columns[3].u32[0], v17)).u32[0];
      v17.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_lane_s32(*(int32x2_t *)a1.columns[0].f32, 1), *(float32x2_t *)a1.columns[1].f32).u32[0];
      v17.i32[1] = a1.columns[3].i32[0];
      v18.i32[1] = 0.25;
      *(float32x2_t *)a1.columns[3].f32 = vmul_f32(v17, v18);
    }
    else
    {
      float32x2_t v4 = (float32x2_t)__PAIR64__(a1.columns[0].u32[1], COERCE_UNSIGNED_INT(sqrtf(a1.columns[2].f32[2] + (float)(v3 - a1.columns[1].f32[1]))));
      *(float32x2_t *)a1.columns[2].f32 = vadd_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[0], (int8x16_t)a1.columns[0], 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1.columns[1], (int8x16_t)a1.columns[1], 8uLL)), *(float32x2_t *)a1.columns[2].f32);
      *(int32x2_t *)a1.columns[1].f32 = vdup_lane_s32(*(int32x2_t *)a1.columns[1].f32, 0);
      a1.columns[1].i32[0] = 2.0;
      a1.columns[1].i32[0] = vmul_f32(v4, *(float32x2_t *)a1.columns[1].f32).u32[0];
      *(float32x2_t *)a1.columns[3].f32 = vrecpe_f32((float32x2_t)a1.columns[1].u32[0]);
      *(float32x2_t *)a1.columns[3].f32 = vmul_f32(*(float32x2_t *)a1.columns[3].f32, vrecps_f32((float32x2_t)a1.columns[1].u32[0], *(float32x2_t *)a1.columns[3].f32));
      *(float32x2_t *)a1.columns[3].f32 = vmul_n_f32(*(float32x2_t *)a1.columns[2].f32, vmul_f32(*(float32x2_t *)a1.columns[3].f32, vrecps_f32((float32x2_t)a1.columns[1].u32[0], *(float32x2_t *)a1.columns[3].f32)).f32[0]);
      __asm { FMOV            V2.2S, #0.25 }
    }
  }
  else
  {
    *(int32x2_t *)a1.columns[3].f32 = vdup_lane_s32(*(int32x2_t *)a1.columns[1].f32, 0);
    float32x2_t v7 = vadd_f32(*(float32x2_t *)a1.columns[0].f32, *(float32x2_t *)a1.columns[3].f32);
    a1.columns[3].i32[0] = 2.0;
    v8.i32[0] = vmul_f32((float32x2_t)__PAIR64__(a1.columns[0].u32[1], COERCE_UNSIGNED_INT(sqrtf(a1.columns[0].f32[0]+ (float)((float)(1.0 - a1.columns[1].f32[1]) - a1.columns[2].f32[2])))), *(float32x2_t *)a1.columns[3].f32).u32[0];
    v8.i32[1] = v7.i32[1];
    float32x2_t v9 = vrecpe_f32((float32x2_t)v8.u32[0]);
    float32x2_t v10 = vmul_f32(v9, vrecps_f32((float32x2_t)v8.u32[0], v9));
    unsigned __int32 v11 = vmul_f32(v10, vrecps_f32((float32x2_t)v8.u32[0], v10)).u32[0];
    __asm { FMOV            V5.2S, #0.25 }
    _D5.i32[1] = v11;
    *(float32x2_t *)a1.columns[3].f32 = vmul_f32(v8, _D5);
  }
  return *(double *)a1.columns[3].i64;
}

void simd_slerp(float32x4_t a1, float32x4_t a2, float a3)
{
  float32x4_t v3 = vmulq_f32(a1, a2);
  float32x4_t v4 = (float32x4_t)vextq_s8((int8x16_t)v3, (int8x16_t)v3, 8uLL);
  *(float32x2_t *)v3.f32 = vadd_f32(*(float32x2_t *)v3.f32, *(float32x2_t *)v4.f32);
  v3.f32[0] = vaddv_f32(*(float32x2_t *)v3.f32);
  v4.i64[0] = 0;
  int8x16_t v5 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32(v3, v4)), 0);
  _simd_slerp_internal(a1, (float32x4_t)vbslq_s8(v5, (int8x16_t)vnegq_f32(a2), (int8x16_t)a2), *(float *)v5.i32);
}

uint64_t MTLRegionMake2D@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = result;
  a3[4] = a2;
  a3[5] = 1;
  return result;
}

uint64_t sub_2561287BC()
{
  return swift_deallocObject();
}

void sub_2561287CC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_256128818()
{
  unint64_t result = qword_269F473F0;
  if (!qword_269F473F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F473F0);
  }
  return result;
}

void sub_256128870(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2561288D4()
{
  if (!qword_269F47640)
  {
    type metadata accessor for Option(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47640);
    }
  }
}

unint64_t sub_256128940()
{
  unint64_t result = qword_269F47410;
  if (!qword_269F47410)
  {
    type metadata accessor for Option(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47410);
  }
  return result;
}

void _simd_slerp_internal(float32x4_t a1, float32x4_t a2, float a3)
{
  float32x4_t v4 = vsubq_f32(a1, a2);
  int8x16_t v5 = (int8x16_t)vmulq_f32(v4, v4);
  float32x4_t v6 = vaddq_f32(a1, a2);
  int8x16_t v7 = (int8x16_t)vmulq_f32(v6, v6);
  float v8 = atan2f(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v5.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL)))), sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)))));
  float v9 = v8 + v8;
  if ((float)(v8 + v8) != 0.0) {
    sinf(v9);
  }
  if ((float)(v9 * 0.9) != 0.0) {
    sinf(v9 * 0.9);
  }
  float v10 = v9 * 0.1;
  if (v10 != 0.0) {
    sinf(v10);
  }
}

uint64_t destroy for LocalizedAssessmentInformationalContent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LocalizedAssessmentInformationalContent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocalizedAssessmentInformationalContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizedAssessmentInformationalContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedAssessmentInformationalContent()
{
  return &type metadata for LocalizedAssessmentInformationalContent;
}

void sub_256128CD8(uint64_t *a1@<X8>)
{
  if (*v1)
  {
    if (qword_269F42348 != -1) {
      swift_once();
    }
    id v2 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2561755B8();
    uint64_t v91 = v4;
    uint64_t v92 = v3;
    swift_bridgeObjectRelease();

    id v5 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_2561755B8();
    uint64_t v90 = v6;
    swift_bridgeObjectRelease();

    sub_25612974C();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_2561A35E0;
    id v8 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2561755B8();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();

    id v12 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_2561755B8();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v11;
    *(void *)(v7 + 48) = v13;
    *(void *)(v7 + 56) = v15;
    id v16 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_2561755B8();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();

    id v20 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_2561755B8();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 64) = v17;
    *(void *)(v7 + 72) = v19;
    *(void *)(v7 + 80) = v21;
    *(void *)(v7 + 88) = v23;
    id v24 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_2561755B8();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();

    id v28 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_2561755B8();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 96) = v25;
    *(void *)(v7 + 104) = v27;
    *(void *)(v7 + 112) = v29;
    *(void *)(v7 + 120) = v31;
    id v32 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_2561755B8();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();

    id v36 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_2561755B8();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 128) = v33;
    *(void *)(v7 + 136) = v35;
    *(void *)(v7 + 144) = v37;
    *(void *)(v7 + 152) = v39;
    id v40 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_269F42348 != -1) {
      swift_once();
    }
    id v41 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2561755B8();
    uint64_t v91 = v43;
    uint64_t v92 = v42;
    swift_bridgeObjectRelease();

    id v44 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_2561755B8();
    uint64_t v90 = v45;
    swift_bridgeObjectRelease();

    sub_25612974C();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_2561A8600;
    id v46 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_2561755B8();
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();

    id v50 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_2561755B8();
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 32) = v47;
    *(void *)(v7 + 40) = v49;
    *(void *)(v7 + 48) = v51;
    *(void *)(v7 + 56) = v53;
    id v54 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_2561755B8();
    uint64_t v57 = v56;
    swift_bridgeObjectRelease();

    id v58 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_2561755B8();
    uint64_t v61 = v60;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 64) = v55;
    *(void *)(v7 + 72) = v57;
    *(void *)(v7 + 80) = v59;
    *(void *)(v7 + 88) = v61;
    id v62 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_2561755B8();
    uint64_t v65 = v64;
    swift_bridgeObjectRelease();

    id v66 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_2561755B8();
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 96) = v63;
    *(void *)(v7 + 104) = v65;
    *(void *)(v7 + 112) = v67;
    *(void *)(v7 + 120) = v69;
    id v70 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_2561755B8();
    uint64_t v73 = v72;
    swift_bridgeObjectRelease();

    id v74 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_2561755B8();
    uint64_t v77 = v76;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 128) = v71;
    *(void *)(v7 + 136) = v73;
    *(void *)(v7 + 144) = v75;
    *(void *)(v7 + 152) = v77;
    id v78 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_2561755B8();
    uint64_t v81 = v80;
    swift_bridgeObjectRelease();

    id v82 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_2561755B8();
    uint64_t v85 = v84;
    swift_bridgeObjectRelease();

    *(void *)(v7 + 160) = v79;
    *(void *)(v7 + 168) = v81;
    *(void *)(v7 + 176) = v83;
    *(void *)(v7 + 184) = v85;
    id v40 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
  }
  uint64_t v86 = sub_2561755B8();
  uint64_t v88 = v87;
  swift_bridgeObjectRelease();

  *a1 = v92;
  a1[1] = v91;
  a1[2] = v89;
  a1[3] = v90;
  a1[4] = v7;
  a1[5] = v86;
  a1[6] = v88;
}

void sub_25612974C()
{
  if (!qword_269F47418)
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47418);
    }
  }
}

ValueMetadata *type metadata accessor for LocalizedAssessmentInformationalContent.Section()
{
  return &type metadata for LocalizedAssessmentInformationalContent.Section;
}

uint64_t sub_2561297B4()
{
  return sub_256178928();
}

uint64_t sub_25612983C()
{
  swift_bridgeObjectRetain();
  sub_256177F38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2561298C0()
{
  return sub_256178928();
}

uint64_t sub_256129944(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_256178828(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_256178828();
    }
  }
  return result;
}

unint64_t sub_2561299EC()
{
  unint64_t result = qword_269F47420;
  if (!qword_269F47420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47420);
  }
  return result;
}

void *sub_256129A40(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    uint64_t v6 = a2[2];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[5];
    long long v21 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v21;
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v8 = *(int *)(a3 + 40);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    *(void *)(a1 + 72) = a2[9];
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    id v11 = (id)v21;
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      uint64_t v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = (char *)v10 + v16;
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_256129D28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256129D8C(uint64_t a1, uint64_t a2)
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_256129F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  long long v19 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v19;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  id v10 = (id)v19;
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v8, v9, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25612A1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 40);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25612E398(a1 + v11, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      long long v19 = (char *)v12 + v18;
      id v20 = (char *)v13 + v18;
      uint64_t v21 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25612A490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25612A6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  uint64_t v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25612E398(a1 + v7, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25612A990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25612A9A4);
}

uint64_t sub_25612A9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256129D28(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25612AA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25612AA98);
}

uint64_t sub_25612AA98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_256129D28(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NotificationsNextButtonView(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F47428);
}

void sub_25612AB90()
{
  sub_256129D28(319, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25612AC84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25612ACA0()
{
  uint64_t v1 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25612C584();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NotificationsNextButtonView(0);
  sub_25611B298((uint64_t)v3);
  sub_25612DFB4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  *(void *)uint64_t v6 = sub_256176788();
  *((void *)v6 + 1) = 0x4014000000000000;
  v6[16] = 0;
  sub_25612DEE0();
  sub_25612AEBC(v0, (uint64_t)&v6[*(int *)(v7 + 44)]);
  uint64_t v8 = *(void *)(v0 + 56);
  char v12 = *(unsigned char *)(v0 + 48);
  uint64_t v13 = v8;
  sub_256131428(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  uint64_t v11 = v0;
  sub_25612DF6C(&qword_269F47478, (void (*)(uint64_t))sub_25612C584);
  sub_2561772B8();
  swift_release();
  swift_release();
  return sub_25612DFB4((uint64_t)v6, (uint64_t (*)(void))sub_25612C584);
}

uint64_t sub_25612AEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  sub_256129D28(0, &qword_269F47448, (uint64_t (*)(uint64_t))sub_25612C624, MEMORY[0x263F1BAC8]);
  uint64_t v79 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v77 = &v64[-v4];
  uint64_t v75 = type metadata accessor for SkipButton(0);
  uint64_t v5 = MEMORY[0x270FA5388](v75);
  uint64_t v7 = &v64[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v76 = &v64[-v8];
  sub_25612E100(0, &qword_269F47488, MEMORY[0x263F19B20]);
  uint64_t v81 = v9;
  MEMORY[0x270FA5388](v9);
  id v82 = &v64[-v10];
  uint64_t ButtonView = type metadata accessor for NotificationsNextButtonView(0);
  uint64_t v12 = *(void *)(ButtonView - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](ButtonView - 8);
  uint64_t v15 = &v64[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v64[-v16];
  uint64_t v83 = type metadata accessor for CompleteNotificationsSetupButton(0);
  uint64_t v18 = MEMORY[0x270FA5388](v83);
  id v20 = &v64[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  uint64_t v84 = &v64[-v21];
  unsigned int v22 = objc_msgSend(*(id *)(a1 + 24), sel_hasEverEnabledAStateOfMindReminderNotification);
  sub_25612E29C(a1, (uint64_t)v17, type metadata accessor for NotificationsNextButtonView);
  uint64_t v23 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  uint64_t v78 = v24;
  if (v22)
  {
    uint64_t v25 = swift_allocObject();
    sub_25612E1B0((uint64_t)v17, v25 + v24, type metadata accessor for NotificationsNextButtonView);
    uint64_t v26 = *(void **)(a1 + 24);
    uint64_t v27 = *(void *)a1;
    uint64_t v28 = *(void *)(a1 + 72);
    char v85 = *(unsigned char *)(a1 + 64);
    uint64_t v86 = v28;
    sub_25612E014(0, &qword_269F47480, (unint64_t *)&qword_269F43FD0, (uint64_t)&type metadata for NotificationAppBundle, MEMORY[0x263F1B5D0]);
    uint64_t v77 = v26;
    sub_256177598();
    uint64_t v75 = v88;
    uint64_t v76 = v87;
    LODWORD(v72) = v89;
    uint64_t v29 = *(void *)(a1 + 56);
    char v85 = *(unsigned char *)(a1 + 48);
    uint64_t v86 = v29;
    sub_256131428(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
    sub_256177598();
    uint64_t v30 = v87;
    uint64_t v31 = v88;
    unsigned __int8 v32 = v89;
    sub_25612E29C(a1, (uint64_t)v15, type metadata accessor for NotificationsNextButtonView);
    uint64_t v33 = swift_allocObject();
    sub_25612E1B0((uint64_t)v15, v33 + v78, type metadata accessor for NotificationsNextButtonView);
    *(void *)id v20 = sub_25612E094;
    *((void *)v20 + 1) = v25;
    *((void *)v20 + 2) = v77;
    *((void *)v20 + 3) = v27;
    v20[32] = 1;
    uint64_t v34 = v75;
    *((void *)v20 + 5) = v76;
    *((void *)v20 + 6) = v34;
    v20[56] = (_BYTE)v72;
    *((void *)v20 + 8) = v30;
    *((void *)v20 + 9) = v31;
    v20[80] = v32;
    *((void *)v20 + 11) = sub_25612E1A8;
    *((void *)v20 + 12) = v33;
    uint64_t v35 = (uint64_t *)&v20[*(int *)(v83 + 44)];
    *uint64_t v35 = swift_getKeyPath();
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    id v36 = v84;
    sub_25612E1B0((uint64_t)v20, (uint64_t)v84, type metadata accessor for CompleteNotificationsSetupButton);
    sub_25612E29C((uint64_t)v36, (uint64_t)v82, type metadata accessor for CompleteNotificationsSetupButton);
    swift_storeEnumTagMultiPayload();
    sub_25612DF6C(&qword_269F47460, (void (*)(uint64_t))type metadata accessor for CompleteNotificationsSetupButton);
    sub_25612C778();
    sub_256176898();
  }
  else
  {
    uint64_t v73 = v23 | 7;
    uint64_t v74 = v24 + v13;
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = type metadata accessor for NotificationsNextButtonView;
    sub_25612E1B0((uint64_t)v17, v71 + v24, type metadata accessor for NotificationsNextButtonView);
    uint64_t v37 = *(void **)(a1 + 24);
    uint64_t v38 = *(void *)a1;
    uint64_t v39 = *(void *)(a1 + 72);
    char v85 = *(unsigned char *)(a1 + 64);
    uint64_t v86 = v39;
    sub_25612E014(0, &qword_269F47480, (unint64_t *)&qword_269F43FD0, (uint64_t)&type metadata for NotificationAppBundle, MEMORY[0x263F1B5D0]);
    id v68 = v37;
    sub_256177598();
    uint64_t v67 = v87;
    uint64_t v66 = v88;
    int v65 = v89;
    uint64_t v40 = *(void *)(a1 + 56);
    char v85 = *(unsigned char *)(a1 + 48);
    uint64_t v86 = v40;
    sub_256131428(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
    sub_256177598();
    id v41 = v87;
    uint64_t v42 = v88;
    unsigned __int8 v43 = v89;
    uint64_t v69 = type metadata accessor for NotificationsNextButtonView;
    id v70 = v15;
    sub_25612E29C(a1, (uint64_t)v15, type metadata accessor for NotificationsNextButtonView);
    uint64_t v44 = swift_allocObject();
    sub_25612E1B0((uint64_t)v15, v44 + v24, v72);
    uint64_t v45 = v71;
    *(void *)id v20 = sub_25612E094;
    *((void *)v20 + 1) = v45;
    *((void *)v20 + 2) = v68;
    *((void *)v20 + 3) = v38;
    v20[32] = 0;
    uint64_t v46 = v66;
    *((void *)v20 + 5) = v67;
    *((void *)v20 + 6) = v46;
    v20[56] = v65;
    *((void *)v20 + 8) = v41;
    *((void *)v20 + 9) = v42;
    v20[80] = v43;
    *((void *)v20 + 11) = sub_25612E1A8;
    *((void *)v20 + 12) = v44;
    uint64_t v47 = (uint64_t *)&v20[*(int *)(v83 + 44)];
    uint64_t *v47 = swift_getKeyPath();
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v71 = v48;
    swift_storeEnumTagMultiPayload();
    sub_25612E1B0((uint64_t)v20, (uint64_t)v84, type metadata accessor for CompleteNotificationsSetupButton);
    uint64_t v49 = v69;
    sub_25612E29C(a1, (uint64_t)v17, v69);
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v78;
    uint64_t v52 = (uint64_t)v17;
    uint64_t v53 = v72;
    sub_25612E1B0(v52, v50 + v78, v72);
    id v54 = v7;
    id v68 = *(id *)(a1 + 24);
    uint64_t v55 = (uint64_t)v70;
    sub_25612E29C(a1, (uint64_t)v70, v49);
    uint64_t v56 = swift_allocObject();
    sub_25612E1B0(v55, v56 + v51, v53);
    *id v54 = sub_25612E094;
    v54[1] = v50;
    uint64_t v57 = v68;
    v54[2] = v68;
    v54[3] = sub_25612E1A8;
    v54[4] = v56;
    id v58 = (void *)((char *)v54 + *(int *)(v75 + 28));
    *id v58 = swift_getKeyPath();
    id v36 = v84;
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = v76;
    sub_25612E1B0((uint64_t)v54, (uint64_t)v76, type metadata accessor for SkipButton);
    sub_25612E29C((uint64_t)v36, (uint64_t)v20, type metadata accessor for CompleteNotificationsSetupButton);
    sub_25612E29C((uint64_t)v59, (uint64_t)v54, type metadata accessor for SkipButton);
    uint64_t v60 = v77;
    sub_25612E29C((uint64_t)v20, (uint64_t)v77, type metadata accessor for CompleteNotificationsSetupButton);
    sub_25612C624();
    sub_25612E29C((uint64_t)v54, (uint64_t)&v60[*(int *)(v61 + 48)], type metadata accessor for SkipButton);
    id v62 = v57;
    sub_25612DFB4((uint64_t)v54, type metadata accessor for SkipButton);
    sub_25612DFB4((uint64_t)v20, type metadata accessor for CompleteNotificationsSetupButton);
    sub_25612E304((uint64_t)v60, (uint64_t)v82);
    swift_storeEnumTagMultiPayload();
    sub_25612DF6C(&qword_269F47460, (void (*)(uint64_t))type metadata accessor for CompleteNotificationsSetupButton);
    sub_25612C778();
    sub_256176898();
    sub_25612E398((uint64_t)v60, &qword_269F47448, (uint64_t (*)(uint64_t))sub_25612C624, MEMORY[0x263F1BAC8]);
    sub_25612DFB4((uint64_t)v59, type metadata accessor for SkipButton);
  }
  return sub_25612DFB4((uint64_t)v36, type metadata accessor for CompleteNotificationsSetupButton);
}

uint64_t sub_25612B980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_256175B68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(a1 + 72);
  v13[8] = *(unsigned char *)(a1 + 64);
  uint64_t v14 = v8;
  sub_25612E014(0, &qword_269F47480, (unint64_t *)&qword_269F43FD0, (uint64_t)&type metadata for NotificationAppBundle, MEMORY[0x263F1B5D0]);
  sub_256177578();
  if (v15 != 2) {
    return sub_25612BB74(v15 & 1, a2);
  }
  sub_256175B48();
  uint64_t v10 = sub_256175B58();
  os_log_type_t v11 = sub_256178228();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_255F58000, v10, v11, "\"Notifications Disabled\" alert has been requested without specifying the associated notification bundle.", v12, 2u);
    MEMORY[0x25A2A1E90](v12, -1, -1);
  }

  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = sub_256178658();
  __break(1u);
  return result;
}

uint64_t sub_25612BB74@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t ButtonView = type metadata accessor for NotificationsNextButtonView(0);
  uint64_t v77 = *(void *)(ButtonView - 8);
  uint64_t v4 = *(void *)(v77 + 64);
  MEMORY[0x270FA5388](ButtonView - 8);
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2561773C8();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v80 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v79 = (char *)&v65 - v9;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v10 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_2561755B8();
  uint64_t v74 = v11;
  swift_bridgeObjectRelease();

  id v12 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v75 = sub_2561755B8();
  uint64_t v76 = v13;
  swift_bridgeObjectRelease();

  id v14 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  if (a1)
  {
    uint64_t v40 = sub_2561755B8();
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();

    id v43 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_2561755B8();
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();

    uint64_t v82 = v40;
    uint64_t v83 = v42;
    sub_255F5CE90();
    uint64_t v47 = sub_256177028();
    uint64_t v71 = v48;
    uint64_t v72 = v47;
    int v69 = v49;
    uint64_t v70 = v50;
    uint64_t v82 = v44;
    uint64_t v83 = v46;
    uint64_t v68 = sub_256177028();
    uint64_t v67 = v51;
    uint64_t v66 = v52;
    uint64_t v82 = v73;
    uint64_t v83 = v74;
    uint64_t v53 = sub_256177028();
    uint64_t v55 = v54;
    char v57 = v56 & 1;
    sub_2561773B8();
    sub_255F67B2C(v53, v55, v57);
    swift_bridgeObjectRelease();
    uint64_t v82 = v75;
    uint64_t v83 = v76;
    uint64_t v58 = sub_256177028();
    uint64_t v60 = v59;
    LOBYTE(v42) = v61 & 1;
    sub_25612E29C(v78, (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NotificationsNextButtonView);
    unint64_t v62 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    uint64_t v63 = swift_allocObject();
    sub_25612E1B0((uint64_t)v5, v63 + v62, type metadata accessor for NotificationsNextButtonView);
    sub_2561773A8();
    sub_255F67B2C(v58, v60, v42);
  }
  else
  {
    uint64_t v15 = sub_2561755B8();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();

    id v18 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_2561755B8();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();

    uint64_t v82 = v15;
    uint64_t v83 = v17;
    sub_255F5CE90();
    uint64_t v22 = sub_256177028();
    uint64_t v71 = v23;
    uint64_t v72 = v22;
    int v69 = v24;
    uint64_t v70 = v25;
    uint64_t v82 = v19;
    uint64_t v83 = v21;
    uint64_t v68 = sub_256177028();
    uint64_t v67 = v26;
    uint64_t v66 = v27;
    uint64_t v65 = v28 & 1;
    uint64_t v82 = v73;
    uint64_t v83 = v74;
    uint64_t v29 = sub_256177028();
    uint64_t v31 = v30;
    LOBYTE(v17) = v32 & 1;
    sub_2561773B8();
    sub_255F67B2C(v29, v31, v17);
    swift_bridgeObjectRelease();
    uint64_t v82 = v75;
    uint64_t v83 = v76;
    uint64_t v33 = sub_256177028();
    uint64_t v35 = v34;
    char v37 = v36 & 1;
    sub_25612E29C(v78, (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NotificationsNextButtonView);
    unint64_t v38 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    uint64_t v39 = swift_allocObject();
    sub_25612E1B0((uint64_t)v5, v39 + v38, type metadata accessor for NotificationsNextButtonView);
    sub_2561773A8();
    sub_255F67B2C(v33, v35, v37);
  }
  swift_release();
  swift_bridgeObjectRelease();
  return sub_256177398();
}

void sub_25612C304()
{
  uint64_t v0 = sub_256175628();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256129D28(0, (unint64_t *)&qword_26B2AD320, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  id v7 = objc_msgSend(self, sel_defaultWorkspace);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = (id)HKMHMindfulnessSettingsURL();
    if (v9)
    {
      id v10 = v9;
      sub_256175608();

      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
      {
        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v11 = (void *)sub_2561755F8();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
      uint64_t v11 = 0;
    }
    sub_25613372C(MEMORY[0x263F8EE78]);
    id v12 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_openSensitiveURL_withOptions_, v11, v12);
  }
}

void sub_25612C584()
{
  if (!qword_269F47438)
  {
    sub_25612E100(255, &qword_269F47440, MEMORY[0x263F19B28]);
    sub_25612C6B4();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47438);
    }
  }
}

uint64_t type metadata accessor for CompleteNotificationsSetupButton(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F474A0);
}

void sub_25612C624()
{
  if (!qword_269F47450)
  {
    type metadata accessor for CompleteNotificationsSetupButton(255);
    type metadata accessor for SkipButton(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47450);
    }
  }
}

uint64_t type metadata accessor for SkipButton(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F47490);
}

unint64_t sub_25612C6B4()
{
  unint64_t result = qword_269F47458;
  if (!qword_269F47458)
  {
    sub_25612E100(255, &qword_269F47440, MEMORY[0x263F19B28]);
    sub_25612DF6C(&qword_269F47460, (void (*)(uint64_t))type metadata accessor for CompleteNotificationsSetupButton);
    sub_25612C778();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47458);
  }
  return result;
}

unint64_t sub_25612C778()
{
  unint64_t result = qword_269F47468;
  if (!qword_269F47468)
  {
    sub_256129D28(255, &qword_269F47448, (uint64_t (*)(uint64_t))sub_25612C624, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47468);
  }
  return result;
}

uint64_t sub_25612C800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (uint64_t)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CompleteNotificationsSetupButton(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v5);
  id v10 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)v35 - v11;
  char v36 = sub_255F9A218;
  sub_25613130C(0, (unint64_t *)&qword_269F435D8, (void (*)(uint64_t))sub_255F9A218);
  MEMORY[0x270FA5388](v13 - 8);
  v35[0] = (char *)v35 - v14;
  uint64_t v15 = *(uint64_t (**)())(v2 + 24);
  uint64_t v43 = v3;
  uint64_t v44 = &off_2704BA090;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
  v35[1] = v2 + *(int *)(v6 + 52);
  sub_25611B298((uint64_t)boxed_opaque_existential_1);
  sub_25612E29C(v2, (uint64_t)v12, type metadata accessor for CompleteNotificationsSetupButton);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  sub_25612E1B0((uint64_t)v12, v18 + v17, type metadata accessor for CompleteNotificationsSetupButton);
  sub_25612E29C(v2, (uint64_t)v10, type metadata accessor for CompleteNotificationsSetupButton);
  uint64_t v19 = swift_allocObject();
  sub_25612E1B0((uint64_t)v10, v19 + v17, type metadata accessor for CompleteNotificationsSetupButton);
  uint64_t v45 = v15;
  LOBYTE(v46) = 0;
  sub_256131428(0, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
  sub_256177768();
  *(_OWORD *)&v47[40] = v39;
  uint64_t v48 = v40;
  char v49 = v41;
  sub_255F9A6BC(&v42, (uint64_t)v47);
  uint64_t v45 = sub_2561309C8;
  uint64_t v46 = v18;
  uint64_t v50 = sub_256130C40;
  uint64_t v51 = v19;
  *(void *)&long long v42 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6918);
  sub_256131428(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F9A218();
  sub_25612DF6C((unint64_t *)&qword_269F435F0, (void (*)(uint64_t))sub_255F9A218);
  uint64_t v20 = v35[0];
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_25612DFB4((uint64_t)&v45, (uint64_t (*)(void))sub_255F9A218);
  LOBYTE(v19) = sub_256176D98();
  uint64_t v21 = v37;
  sub_25611B298(v37);
  sub_25612DFB4(v21, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_256175D48();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = v38;
  uint64_t v31 = (void (*)(uint64_t))v36;
  sub_256130CB0(v20, v38, (unint64_t *)&qword_269F435D8, (void (*)(uint64_t))v36);
  sub_255FEACEC(0);
  uint64_t v33 = v30 + *(int *)(v32 + 36);
  *(unsigned char *)uint64_t v33 = v19;
  *(void *)(v33 + 8) = v23;
  *(void *)(v33 + 16) = v25;
  *(void *)(v33 + 24) = v27;
  *(void *)(v33 + 32) = v29;
  *(unsigned char *)(v33 + 40) = 0;
  return sub_256130D1C(v20, (unint64_t *)&qword_269F435D8, v31);
}

uint64_t sub_25612CD04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CompleteNotificationsSetupButton(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256129D28(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v30[-v7];
  sub_256177EE8();
  id v9 = objc_allocWithZone(MEMORY[0x263F1DFB0]);
  id v10 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithBundleIdentifier_, v10);

  id v12 = objc_msgSend(v11, sel_notificationSettings);
  id v13 = objc_msgSend(v12, sel_authorizationStatus);

  if (v13 == (id)2)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      if (objc_msgSend(*(id *)(a1 + 16), sel_hasAnyStateOfMindReminderEnabled)) {
        (*(void (**)(uint64_t, uint64_t))(a1 + 88))(9, 4);
      }
    }
    else
    {
      uint64_t v18 = sub_2561780E8();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
      sub_25612E29C(a1, (uint64_t)&v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for CompleteNotificationsSetupButton);
      sub_2561780C8();
      uint64_t v19 = sub_2561780B8();
      unint64_t v20 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = MEMORY[0x263F8F500];
      *(void *)(v21 + 16) = v19;
      *(void *)(v21 + 24) = v22;
      sub_25612E1B0((uint64_t)v5, v21 + v20, type metadata accessor for CompleteNotificationsSetupButton);
      sub_2560CA690((uint64_t)v8, (uint64_t)&unk_269F474C0, v21);
      swift_release();
    }
    id v23 = objc_msgSend(self, sel_sharedInstance);
    id v24 = objc_msgSend(v23, sel_getActivePairedDevice);

    if (!v24 || sub_2560701F0()) {
      return (*(uint64_t (**)(void))a1)();
    }
    uint64_t v26 = *(void *)(a1 + 48);
    char v27 = *(unsigned char *)(a1 + 56);
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = v26;
    char v34 = v27;
    char v31 = 1;
    sub_25612E014(0, &qword_269F474B0, (unint64_t *)&qword_269F43FD0, (uint64_t)&type metadata for NotificationAppBundle, MEMORY[0x263F1B750]);
    sub_256177728();
    uint64_t v28 = *(void *)(a1 + 72);
    char v29 = *(unsigned char *)(a1 + 80);
    uint64_t v32 = *(void *)(a1 + 64);
    uint64_t v33 = v28;
    char v34 = v29;
    char v31 = 1;
  }
  else
  {
    uint64_t v14 = *(void *)(a1 + 48);
    char v15 = *(unsigned char *)(a1 + 56);
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = v14;
    char v34 = v15;
    char v31 = 0;
    sub_25612E014(0, &qword_269F474B0, (unint64_t *)&qword_269F43FD0, (uint64_t)&type metadata for NotificationAppBundle, MEMORY[0x263F1B750]);
    sub_256177728();
    uint64_t v16 = *(void *)(a1 + 72);
    char v17 = *(unsigned char *)(a1 + 80);
    uint64_t v32 = *(void *)(a1 + 64);
    uint64_t v33 = v16;
    char v34 = v17;
    char v31 = 1;
  }
  sub_256131428(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  return sub_256177728();
}

uint64_t sub_25612D154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_2561780C8();
  *(void *)(v4 + 24) = sub_2561780B8();
  uint64_t v6 = sub_256178088();
  return MEMORY[0x270FA2498](sub_25612D1EC, v6, v5);
}

uint64_t sub_25612D1EC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  objc_msgSend(*(id *)(v1 + 16), sel_setReminders_, 1);
  (*(void (**)(uint64_t, uint64_t))(v1 + 88))(9, 4);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25612D274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_269F42348 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v3 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255F5CE90();
  uint64_t result = sub_256177028();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6 & 1;
  *(void *)(a2 + 24) = v7;
  return result;
}

uint64_t sub_25612D3F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v50 = a1;
  uint64_t v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v49 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_256176298();
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SkipButton(0);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v8);
  sub_256131080();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256131208();
  uint64_t v44 = v15;
  uint64_t v46 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_256131208;
  sub_25613130C(0, &qword_269F474E8, (void (*)(uint64_t))sub_256131208);
  MEMORY[0x270FA5388](v18 - 8);
  long long v42 = (char *)&v40 - v19;
  sub_256131378();
  uint64_t v47 = v20 - 8;
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v45 = (uint64_t)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25612E29C(v2, (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SkipButton);
  unint64_t v22 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v23 = swift_allocObject();
  sub_25612E1B0((uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for SkipButton);
  sub_256131108(0, &qword_269F47268, (void (*)(uint64_t))sub_255F7285C);
  sub_25613116C();
  sub_2561775C8();
  sub_256176288();
  uint64_t v24 = sub_25612DF6C(&qword_269F474E0, (void (*)(uint64_t))sub_256131080);
  uint64_t v25 = sub_25612DF6C(&qword_269F43710, MEMORY[0x263F18FD0]);
  uint64_t v26 = v43;
  sub_256177078();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(void *)&long long v51 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6948);
  sub_256131428(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  *(void *)&long long v51 = v11;
  *((void *)&v51 + 1) = v26;
  *(void *)&long long v52 = v24;
  *((void *)&v52 + 1) = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = (uint64_t)v42;
  uint64_t v28 = v44;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v28);
  sub_2561774A8();
  uint64_t v29 = v49;
  sub_25611B298(v49);
  sub_25612DFB4(v29, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  uint64_t v30 = sub_256177498();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = v45;
  uint64_t v33 = (void (*)(uint64_t))v48;
  sub_256130CB0(v27, v45, &qword_269F474E8, (void (*)(uint64_t))v48);
  char v34 = (uint64_t *)(v32 + *(int *)(v47 + 44));
  *char v34 = KeyPath;
  v34[1] = v30;
  sub_256130D1C(v27, &qword_269F474E8, v33);
  sub_25611B298(v29);
  sub_25612DFB4(v29, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v35 = v50;
  sub_25612E29C(v32, v50, (uint64_t (*)(void))sub_256131378);
  sub_256131108(0, &qword_269F474F8, (void (*)(uint64_t))sub_256131378);
  uint64_t v37 = (_OWORD *)(v35 + *(int *)(v36 + 36));
  long long v38 = v52;
  *uint64_t v37 = v51;
  v37[1] = v38;
  v37[2] = v53;
  return sub_25612DFB4(v32, (uint64_t (*)(void))sub_256131378);
}

uint64_t sub_25612DB34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v1 = sub_2561762D8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v32 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_256177958();
  uint64_t v3 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7285C();
  uint64_t v29 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v8 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_2561755B8();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();

  uint64_t v34 = v9;
  uint64_t v35 = v11;
  sub_255F5CE90();
  uint64_t v12 = sub_256177028();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  uint64_t v17 = sub_256176FC8();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  LOBYTE(v11) = v22 & 1;
  sub_255F67B2C(v12, v14, v16);
  swift_bridgeObjectRelease();
  uint64_t v24 = v30;
  uint64_t v23 = v31;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v30, *MEMORY[0x263F1B998], v31);
  uint64_t v25 = (uint64_t)v32;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v32, v24, v23);
  sub_25612E29C(v25, (uint64_t)&v7[*(int *)(v29 + 36)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v7 = v17;
  *((void *)v7 + 1) = v19;
  v7[16] = v11;
  *((void *)v7 + 3) = v21;
  sub_255F67B94(v17, v19, v11);
  swift_bridgeObjectRetain();
  sub_25612DFB4(v25, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v24, v23);
  sub_255F67B2C(v17, v19, v11);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_2561778E8();
  sub_256117934(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v33, 0.0, 1, 0.0, 1, v26, v27);
  return sub_25612DFB4((uint64_t)v7, (uint64_t (*)(void))sub_255F7285C);
}

void sub_25612DEE0()
{
  if (!qword_269F47470)
  {
    sub_25612E100(255, &qword_269F47440, MEMORY[0x263F19B28]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47470);
    }
  }
}

uint64_t sub_25612DF64@<X0>(uint64_t a1@<X8>)
{
  return sub_25612B980(*(void *)(v1 + 16), a1);
}

uint64_t sub_25612DF6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25612DFB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25612E014(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_256131428(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_25612E09C()
{
  uint64_t v1 = *(void *)(type metadata accessor for NotificationsNextButtonView(0) - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 8))();
}

void sub_25612E100(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for CompleteNotificationsSetupButton(255);
    sub_256129D28(255, &qword_269F47448, (uint64_t (*)(uint64_t))sub_25612C624, MEMORY[0x263F1BAC8]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25612E1B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25612E220(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for NotificationsNextButtonView(0) - 8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                                                     + 32))(a1, a2);
}

uint64_t sub_25612E29C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25612E304(uint64_t a1, uint64_t a2)
{
  sub_256129D28(0, &qword_269F47448, (uint64_t (*)(uint64_t))sub_25612C624, MEMORY[0x263F1BAC8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25612E398(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_256129D28(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t objectdestroyTm_23()
{
  uint64_t v1 = (int *)(type metadata accessor for NotificationsNextButtonView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[12];
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_25612E600(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(void *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[4];
    long long v20 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 16) = v20;
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    id v11 = (id)v20;
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      char v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25612E8A8(uint64_t a1, uint64_t a2)
{
  swift_release();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_25612EA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v18;
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  id v9 = (id)v18;
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25612EC90(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  uint64_t v10 = a2[4];
  a1[3] = a2[3];
  a1[4] = v10;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25612E398((uint64_t)a1 + v11, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v19 = (char *)v12 + v18;
      long long v20 = (char *)v13 + v18;
      uint64_t v21 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25612EF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v4;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25612F144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25612E398(a1 + v7, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25612F3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25612F3D8);
}

uint64_t sub_25612F3D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256129D28(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25612F4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25612F4CC);
}

void *sub_25612F4CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_256129D28(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25612F5A4()
{
  sub_256129D28(319, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25612F680(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(void *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    uint64_t v6 = (void *)a2[2];
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v11 = a2[12];
    uint64_t v12 = *(int *)(a3 + 44);
    uint64_t v13 = (uint64_t *)((char *)a2 + v12);
    uint64_t v23 = (void *)(a1 + v12);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    id v14 = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v23, v13, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v19 = (char *)v23 + v18;
      long long v20 = (char *)v13 + v18;
      uint64_t v21 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      void *v23 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25612F980(uint64_t a1, uint64_t a2)
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_25612FB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(int *)(a3 + 44);
  uint64_t v11 = (void *)(a2 + v10);
  uint64_t v21 = (void *)(a1 + v10);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  id v12 = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256176AA8();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
    {
      sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v21, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v21, v11, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
    }
    uint64_t v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v17 = (char *)v21 + v16;
    uint64_t v18 = (char *)v11 + v16;
    uint64_t v19 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    void *v21 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25612FDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 44);
    id v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25612E398(a1 + v11, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v19 = (char *)v12 + v18;
      long long v20 = (char *)v13 + v18;
      uint64_t v21 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *id v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2561300E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_256130344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 44);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25612E398(a1 + v7, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_256129D28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_256130624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256130638);
}

uint64_t sub_256130638(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256129D28(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_256130718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25613072C);
}

void *sub_25613072C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_256129D28(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_256130804()
{
  sub_256129D28(319, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_256130904()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25613098C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2561309A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2561309C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_25612CD04(v2);
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[13];
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256130C40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_25612D274(v4, a1);
}

uint64_t sub_256130CB0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_25613130C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_256130D1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_25613130C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_256130D78()
{
  uint64_t v1 = (int *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v3 = v0 + v2 + v1[13];
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    unint64_t v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256130F94(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CompleteNotificationsSetupButton(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_255FAF204;
  return sub_25612D154(a1, v5, v6, v7);
}

void sub_256131080()
{
  if (!qword_269F474C8)
  {
    sub_256131108(255, &qword_269F47268, (void (*)(uint64_t))sub_255F7285C);
    sub_25613116C();
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F474C8);
    }
  }
}

void sub_256131108(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_25613116C()
{
  unint64_t result = qword_269F474D0;
  if (!qword_269F474D0)
  {
    sub_256131108(255, &qword_269F47268, (void (*)(uint64_t))sub_255F7285C);
    sub_255F74810();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F474D0);
  }
  return result;
}

void sub_256131208()
{
  if (!qword_269F474D8)
  {
    sub_256131080();
    sub_256176298();
    sub_25612DF6C(&qword_269F474E0, (void (*)(uint64_t))sub_256131080);
    sub_25612DF6C(&qword_269F43710, MEMORY[0x263F18FD0]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F474D8);
    }
  }
}

void sub_25613130C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256176D38();
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256131378()
{
  if (!qword_269F474F0)
  {
    sub_25613130C(255, &qword_269F474E8, (void (*)(uint64_t))sub_256131208);
    sub_25612E014(255, (unint64_t *)&qword_269F43280, (unint64_t *)&qword_269F43288, MEMORY[0x263F1B440], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F474F0);
    }
  }
}

void sub_256131428(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256131474()
{
  uint64_t v1 = (int *)(type metadata accessor for SkipButton(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();

  swift_release();
  uint64_t v3 = v2 + v1[9];
  sub_256129D28(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256131668()
{
  uint64_t v1 = *(void *)(type metadata accessor for SkipButton(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  objc_msgSend(*(id *)(v2 + 16), sel_setReminders_, 0);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(9, 5);
  return (*(uint64_t (**)(uint64_t))v2)(v3);
}

unint64_t sub_256131700()
{
  unint64_t result = qword_269F47500;
  if (!qword_269F47500)
  {
    sub_255FEACEC(255);
    sub_255F9A278();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47500);
  }
  return result;
}

unint64_t sub_25613177C()
{
  unint64_t result = qword_269F47508;
  if (!qword_269F47508)
  {
    sub_256131108(255, &qword_269F474F8, (void (*)(uint64_t))sub_256131378);
    sub_256131818();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47508);
  }
  return result;
}

unint64_t sub_256131818()
{
  unint64_t result = qword_269F47510;
  if (!qword_269F47510)
  {
    sub_256131378();
    sub_256131890();
    sub_255F8A254();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47510);
  }
  return result;
}

unint64_t sub_256131890()
{
  unint64_t result = qword_269F47518;
  if (!qword_269F47518)
  {
    sub_25613130C(255, &qword_269F474E8, (void (*)(uint64_t))sub_256131208);
    sub_256131080();
    sub_256176298();
    sub_25612DF6C(&qword_269F474E0, (void (*)(uint64_t))sub_256131080);
    sub_25612DF6C(&qword_269F43710, MEMORY[0x263F18FD0]);
    swift_getOpaqueTypeConformance2();
    sub_25612DF6C(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47518);
  }
  return result;
}

void *_s31StateOfMindTimelineChartWrapperVwca(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s31StateOfMindTimelineChartWrapperVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s31StateOfMindTimelineChartWrapperVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s31StateOfMindTimelineChartWrapperVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s31StateOfMindTimelineChartWrapperVMa()
{
  return &_s31StateOfMindTimelineChartWrapperVN;
}

uint64_t sub_256131B0C()
{
  return (*v0)();
}

uint64_t sub_256131B40()
{
  return sub_256176CB8();
}

uint64_t sub_256131B7C()
{
  return MEMORY[0x263F1BB58];
}

uint64_t sub_256131B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_256131C78();

  return MEMORY[0x270F02710](a1, a2, a3, v6);
}

uint64_t sub_256131BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_256131C78();

  return MEMORY[0x270F026D8](a1, a2, a3, v6);
}

void sub_256131C50()
{
}

unint64_t sub_256131C78()
{
  unint64_t result = qword_269F47520[0];
  if (!qword_269F47520[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F47520);
  }
  return result;
}

uint64_t sub_256131CCC(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_256131D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_256131DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_2561320F0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t sub_256132178(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2561321C0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ActionButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_256132230()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256132274()
{
  sub_256133278(0, (unint64_t *)&unk_269F475A8, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v1);
  return v1;
}

uint64_t sub_2561322F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v93 = sub_256175DB8();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_256176328();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  char v85 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_256176C38();
  uint64_t v71 = v5;
  uint64_t v81 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v80 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = a1;
  *(void *)&long long v109 = *(void *)(a1 + 16);
  *((void *)&v109 + 1) = v7;
  uint64_t v9 = v109;
  uint64_t v75 = v109;
  swift_getOpaqueTypeMetadata2();
  uint64_t v10 = sub_2561761B8();
  *(void *)&long long v109 = v9;
  *((void *)&v109 + 1) = v7;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v117 = MEMORY[0x263F19100];
  uint64_t v84 = MEMORY[0x263F18E48];
  uint64_t v74 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_2561775E8();
  uint64_t v78 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v66 - v12;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v70 = v14;
  unint64_t v69 = sub_2561331CC();
  *(void *)&long long v109 = v11;
  *((void *)&v109 + 1) = v5;
  *(void *)&long long v110 = v14;
  *((void *)&v110 + 1) = v69;
  uint64_t v72 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v76 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v16 = (char *)&v66 - v15;
  uint64_t v77 = (void (*)(uint64_t))MEMORY[0x263F19168];
  sub_256133224(255, &qword_269F45100, MEMORY[0x263F19168]);
  uint64_t v17 = sub_2561761B8();
  uint64_t v79 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v67 = (char *)&v66 - v18;
  sub_256133224(255, &qword_269F45110, MEMORY[0x263F18570]);
  uint64_t v19 = sub_2561761B8();
  uint64_t v87 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v66 - v20;
  sub_256133278(255, (unint64_t *)&qword_269F43940, &qword_269F43948, MEMORY[0x263F188A8], MEMORY[0x263F1A418]);
  uint64_t v88 = v19;
  uint64_t v22 = sub_2561761B8();
  uint64_t v86 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v82 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v83 = (char *)&v66 - v25;
  uint64_t v26 = v95;
  (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(&v109, v95, v8);
  uint64_t v27 = swift_allocObject();
  long long v28 = v112;
  long long v29 = v114;
  *(_OWORD *)(v27 + 96) = v113;
  *(_OWORD *)(v27 + 112) = v29;
  long long v30 = v110;
  long long v31 = v111;
  *(_OWORD *)(v27 + 32) = v109;
  *(_OWORD *)(v27 + 48) = v30;
  uint64_t v32 = v75;
  *(void *)(v27 + 16) = v75;
  *(void *)(v27 + 24) = v7;
  *(void *)(v27 + 128) = v115;
  *(_OWORD *)(v27 + 64) = v31;
  *(_OWORD *)(v27 + 80) = v28;
  uint64_t v96 = v32;
  uint64_t v97 = v7;
  uint64_t v33 = v21;
  uint64_t v98 = v26;
  sub_2561775C8();
  uint64_t v34 = v80;
  sub_256176C28();
  uint64_t v35 = v71;
  uint64_t v36 = v70;
  unint64_t v37 = v69;
  sub_256177078();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v13, v11);
  long long v38 = v85;
  sub_256176318();
  uint64_t v105 = v11;
  uint64_t v106 = v35;
  uint64_t v107 = v36;
  unint64_t v108 = v37;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v67;
  uint64_t v41 = OpaqueTypeMetadata2;
  sub_256177188();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v38, v90);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v16, v41);
  uint64_t v42 = v92;
  uint64_t v43 = v91;
  uint64_t v44 = v93;
  (*(void (**)(char *, void, uint64_t))(v92 + 104))(v91, *MEMORY[0x263F18558], v93);
  uint64_t v45 = sub_25613336C(&qword_269F45178, &qword_269F45100, v77);
  uint64_t v103 = v39;
  uint64_t v104 = v45;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = v33;
  sub_256177098();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v40, v17);
  uint64_t v48 = sub_256132274();
  if (v49)
  {
    uint64_t v56 = sub_256177438();
  }
  else
  {
    double v50 = fmax(fmin(*(double *)&v48, 1.0), -1.0);
    swift_getKeyPath();
    sub_2560AAD50(v50);
    long long v52 = v51;
    double v54 = v53;
    swift_release();
    CGColorRef v55 = sub_2560AB028(v52, v52, v54);
    uint64_t v56 = MEMORY[0x25A29FE60](v55);
  }
  uint64_t v105 = v56;
  uint64_t v57 = sub_25613336C(&qword_269F45180, &qword_269F45110, MEMORY[0x263F18570]);
  uint64_t v101 = v46;
  uint64_t v102 = v57;
  uint64_t v58 = v88;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v60 = v82;
  sub_2561772A8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v47, v58);
  unint64_t v61 = sub_2561333BC();
  uint64_t v99 = v59;
  unint64_t v100 = v61;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = v83;
  sub_25605CACC(v60, v22, v62);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v86 + 8);
  v64(v60, v22);
  sub_25605CACC(v63, v22, v62);
  return ((uint64_t (*)(char *, uint64_t))v64)(v63, v22);
}

uint64_t sub_256132E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v10;
  uint64_t v42 = v11;
  uint64_t v35 = MEMORY[0x263F1B0D0];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v36 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v13 = (char *)v32 - v12;
  uint64_t v14 = sub_2561761B8();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)v32 - v19;
  (*(void (**)(uint64_t))(a1 + 88))(v18);
  sub_256177298();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  uint64_t v21 = (void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(a1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), v22);
  uint64_t v33 = sub_255FD7C90(v22, v23);
  v32[3] = v24 & 1;
  uint64_t v26 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 48);
  __swift_project_boxed_opaque_existential_1(v21, v26);
  sub_255FD7CC4(v26, v25);
  sub_2561778E8();
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = OpaqueTypeMetadata2;
  sub_2561772D8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v27);
  uint64_t v39 = OpaqueTypeConformance2;
  uint64_t v40 = MEMORY[0x263F19100];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_25605CACC(v17, v14, WitnessTable);
  long long v29 = *(void (**)(char *, uint64_t))(v37 + 8);
  v29(v17, v14);
  sub_25605CACC(v20, v14, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v29)(v20, v14);
}

unint64_t sub_2561331CC()
{
  unint64_t result = qword_269F45278;
  if (!qword_269F45278)
  {
    sub_256176C38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45278);
  }
  return result;
}

void sub_256133224(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176D28();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256133278(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_256133444(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2561332E0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256133338()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_256133360@<X0>(uint64_t a1@<X8>)
{
  return sub_256132E0C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_25613336C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256133224(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2561333BC()
{
  unint64_t result = qword_269F43960;
  if (!qword_269F43960)
  {
    sub_256133278(255, (unint64_t *)&qword_269F43940, &qword_269F43948, MEMORY[0x263F188A8], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43960);
  }
  return result;
}

void sub_256133444(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_256178448();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_25613348C()
{
  swift_getOpaqueTypeMetadata2();
  sub_2561761B8();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_2561775E8();
  sub_256176C38();
  swift_getWitnessTable();
  sub_2561331CC();
  swift_getOpaqueTypeMetadata2();
  uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F19168];
  sub_256133224(255, &qword_269F45100, MEMORY[0x263F19168]);
  sub_2561761B8();
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F18570];
  sub_256133224(255, &qword_269F45110, MEMORY[0x263F18570]);
  sub_2561761B8();
  sub_256133278(255, (unint64_t *)&qword_269F43940, &qword_269F43948, MEMORY[0x263F188A8], MEMORY[0x263F1A418]);
  sub_2561761B8();
  swift_getOpaqueTypeConformance2();
  sub_25613336C(&qword_269F45178, &qword_269F45100, v0);
  swift_getWitnessTable();
  sub_25613336C(&qword_269F45180, &qword_269F45110, v1);
  swift_getWitnessTable();
  sub_2561333BC();
  return swift_getWitnessTable();
}

unint64_t sub_25613372C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2560D5B6C(0, &qword_269F467F0);
  uint64_t v2 = sub_2561786A8();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2561396D8(v6, (uint64_t)&v15, (unint64_t *)&unk_269F47620);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_256137C88(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_25601DCC4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25613388C(uint64_t a1)
{
  return sub_256133C08(a1, (void (*)(void))sub_2560D5404, (uint64_t (*)(uint64_t))sub_256137DD8);
}

unint64_t sub_2561338B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2561397A4();
  uint64_t v2 = sub_2561786A8();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25613988C(v6, (uint64_t)&v13, (uint64_t (*)(void))sub_2561288D4);
    uint64_t v7 = v13;
    unint64_t result = sub_256137EA4(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_25601DCC4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2561339E4(uint64_t a1)
{
  sub_25613957C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_25613962C();
  uint64_t v7 = sub_2561786A8();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_25613988C(v13, (uint64_t)v6, (uint64_t (*)(void))sub_25613957C);
    unint64_t result = sub_256137F7C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_256177DB8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_256133BDC(uint64_t a1)
{
  return sub_256133C08(a1, (void (*)(void))sub_2560D5334, (uint64_t (*)(uint64_t))sub_256137D00);
}

unint64_t sub_256133C08(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v5 = (void *)sub_2561786A8();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    uint64_t v9 = *v7;
    swift_unknownObjectRetain();
    unint64_t result = a3(v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v8;
    *(void *)(v5[7] + 8 * result) = v9;
    uint64_t v12 = v5[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_256133D1C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2560D5B6C(0, (unint64_t *)&unk_269F46820);
  uint64_t v2 = sub_2561786A8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2561396D8(v6, (uint64_t)v15, (unint64_t *)&unk_269F475C0);
    unint64_t result = sub_256137F38((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_25601DCC4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

MentalHealthUI::Route_optional __swiftcall Route.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2561786F8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t Route.rawValue.getter()
{
  unint64_t result = 0x79726F6765746163;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574617453676F6CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_256133FA8(unsigned __int8 *a1, char *a2)
{
  return sub_25611F77C(*a1, *a2);
}

uint64_t sub_256133FB4()
{
  return sub_2561212E4();
}

uint64_t sub_256133FBC()
{
  return sub_2561213FC();
}

uint64_t sub_256133FC4()
{
  return sub_256122020();
}

MentalHealthUI::Route_optional sub_256133FCC(Swift::String *a1)
{
  return Route.init(rawValue:)(*a1);
}

unint64_t sub_256133FD8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Route.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_256134000()
{
  unint64_t v0 = sub_255F5CE90();
  uint64_t v1 = (void *)MEMORY[0x25A2A0F30](46, 0xE100000000000000, 1, 1, MEMORY[0x263F8D310], v0);
  if (!v1[2])
  {
    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x2561341A4);
  }
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x25A2A09B0](v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  sub_256177F68();
  swift_bridgeObjectRelease();
  sub_256177F68();
  sub_256177F68();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t NSUserActivity.presentWithAnimation.getter()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  if (!v1)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_11:
    sub_256138B74((uint64_t)&v9, (uint64_t (*)(void))sub_2560405F4);
    return 2;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_256177DE8();

  *(void *)&long long v9 = sub_256134000();
  *((void *)&v9 + 1) = v4;
  sub_256178508();
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_256137F38((uint64_t)v8), (v6 & 1) != 0))
  {
    sub_255FB5934(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_2560D2AB8((uint64_t)v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return v8[0];
  }
  else {
    return 2;
  }
}

void NSUserActivity.presentWithAnimation.setter(char a1)
{
  uint64_t v2 = v1;
  if (a1 == 2)
  {
    id v3 = objc_msgSend(v1, sel_userInfo);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_256177DE8();

      uint64_t v12 = v5;
      sub_256134000();
      sub_256178508();
      sub_256138950((uint64_t)v11, v13);
      sub_2560D2AB8((uint64_t)v11);
      sub_256138B74((uint64_t)v13, (uint64_t (*)(void))sub_2560405F4);
      if (v12)
      {
        char v6 = (void *)sub_256177DD8();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v6 = 0;
      }
      objc_msgSend(v2, sel_setUserInfo_, v6);
    }
    else
    {
      objc_msgSend(v1, sel_setUserInfo_, 0);
      memset(v13, 0, sizeof(v13));
      sub_256138B74((uint64_t)v13, (uint64_t (*)(void))sub_2560405F4);
    }
  }
  else
  {
    char v7 = a1 & 1;
    sub_256138A4C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2561A0960;
    v11[0] = sub_256134000();
    v11[1] = v9;
    sub_256178508();
    *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 72) = v7;
    sub_256133D1C(inited);
    long long v10 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v10);
  }
}

void (*NSUserActivity.presentWithAnimation.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = NSUserActivity.presentWithAnimation.getter();
  return sub_25613456C;
}

void sub_25613456C(uint64_t a1)
{
}

MentalHealthUI::Route NSUserActivity.route.getter@<W0>(unsigned char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_userInfo);
  if (!v3)
  {
    long long v10 = 0u;
    long long v11 = 0u;
LABEL_10:
    MentalHealthUI::Route result = sub_256138B74((uint64_t)&v10, (uint64_t (*)(void))sub_2560405F4);
    goto LABEL_11;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_256177DE8();

  sub_256134000();
  sub_256178508();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_256137F38((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_255FB5934(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_2560D2AB8((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1)) {
    goto LABEL_10;
  }
  MentalHealthUI::Route result = swift_dynamicCast();
  if (result) {
    return Route.init(rawValue:)(v9[0]).value;
  }
LABEL_11:
  *a1 = 5;
  return result;
}

void NSUserActivity.route.setter(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  int v3 = *a1;
  if (v3 == 5)
  {
    id v4 = objc_msgSend(v1, sel_userInfo);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = sub_256177DE8();

      uint64_t v15 = v6;
      sub_256134000();
      sub_256178508();
      sub_256138950((uint64_t)v14, v16);
      sub_2560D2AB8((uint64_t)v14);
      sub_256138B74((uint64_t)v16, (uint64_t (*)(void))sub_2560405F4);
      if (v15)
      {
        char v7 = (void *)sub_256177DD8();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = 0;
      }
      objc_msgSend(v2, sel_setUserInfo_, v7);
    }
    else
    {
      objc_msgSend(v1, sel_setUserInfo_, 0);
      memset(v16, 0, sizeof(v16));
      sub_256138B74((uint64_t)v16, (uint64_t (*)(void))sub_2560405F4);
    }
  }
  else
  {
    sub_256138A4C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2561A0960;
    v14[0] = sub_256134000();
    v14[1] = v9;
    uint64_t v10 = MEMORY[0x263F8D310];
    sub_256178508();
    unint64_t v11 = 0xEC0000006D6F6F52;
    unint64_t v12 = 0x79726F6765746163;
    switch(v3)
    {
      case 1:
        unint64_t v11 = 0xEE00646E694D664FLL;
        unint64_t v12 = 0x6574617453676F6CLL;
        break;
      case 2:
        unint64_t v11 = 0x80000002561AA410;
        unint64_t v12 = 0xD000000000000011;
        break;
      case 3:
        unint64_t v11 = 0xE700000000000000;
        unint64_t v12 = 0x736E6F6974706FLL;
        break;
      case 4:
        unint64_t v12 = 0xD000000000000016;
        unint64_t v11 = 0x80000002561AA430;
        break;
      default:
        break;
    }
    *(void *)(inited + 96) = v10;
    *(void *)(inited + 72) = v12;
    *(void *)(inited + 80) = v11;
    sub_256133D1C(inited);
    BOOL v13 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v13);
  }
}

void (*NSUserActivity.route.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)a1 = v1;
  NSUserActivity.route.getter((unsigned char *)(a1 + 8));
  return sub_256134A20;
}

void sub_256134A20(uint64_t a1, char a2)
{
  if (a2)
  {
    char v3 = *(unsigned char *)(a1 + 8);
    uint64_t v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    char v4 = *(unsigned char *)(a1 + 8);
    uint64_t v2 = (unsigned __int8 *)&v4;
  }
  NSUserActivity.route.setter(v2);
}

uint64_t NSUserActivity.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v19 - v4;
  id v6 = objc_msgSend(v1, sel_userInfo);
  if (!v6)
  {
    long long v21 = 0u;
    long long v22 = 0u;
LABEL_11:
    sub_256138B74((uint64_t)&v21, (uint64_t (*)(void))sub_2560405F4);
    goto LABEL_12;
  }
  char v7 = v6;
  uint64_t v8 = sub_256177DE8();

  v19[1] = sub_256134000();
  v19[2] = v9;
  sub_256178508();
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_256137F38((uint64_t)&v20), (v11 & 1) != 0))
  {
    sub_255FB5934(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_2560D2AB8((uint64_t)&v20);
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = sub_256175638();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    if (v14 >> 60 != 15)
    {
      sub_256175378();
      swift_allocObject();
      sub_256175368();
      uint64_t v15 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
      sub_256139844(&qword_269F475D0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
      sub_256175358();
      sub_256138B08(v12, v14);
      swift_release();
      long long v17 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
      v17(v5, 0, 1, v15);
      sub_256008A00((uint64_t)v5, a1);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v17)(a1, 0, 1, v15);
    }
  }
LABEL_12:
  uint64_t v16 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
}

uint64_t sub_256134DEC(uint64_t a1)
{
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - v3;
  sub_25613916C(a1, (uint64_t)&v6 - v3, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  return NSUserActivity.configuration.setter((uint64_t)v4);
}

uint64_t NSUserActivity.configuration.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v28[-v5];
  uint64_t v7 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25613916C(a1, (uint64_t)v6, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_256008A00((uint64_t)v6, (uint64_t)v10);
    sub_2561753A8();
    swift_allocObject();
    sub_256175398();
    sub_256139844((unint64_t *)&unk_269F475D8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    uint64_t v16 = sub_256175388();
    unint64_t v18 = v17;
    swift_release();
    sub_256138A4C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2561A0960;
    v31[0] = sub_256134000();
    v31[1] = v20;
    uint64_t v21 = MEMORY[0x263F8D310];
    sub_256178508();
    uint64_t v22 = sub_256175648();
    *(void *)(inited + 96) = v21;
    *(void *)(inited + 72) = v22;
    *(void *)(inited + 80) = v23;
    sub_256133D1C(inited);
    char v24 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v24);

    sub_256138B1C(v16, v18);
    sub_256139110(a1, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    uint64_t v25 = type metadata accessor for StateOfMindEntryModel.Configuration;
    uint64_t v26 = v10;
    return sub_256138B74((uint64_t)v26, v25);
  }
  sub_256139110((uint64_t)v6, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  id v11 = objc_msgSend(v2, sel_userInfo);
  if (!v11)
  {
    objc_msgSend(v2, sel_setUserInfo_, 0);
    sub_256139110(a1, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    swift_bridgeObjectRelease();
    memset(v33, 0, sizeof(v33));
    uint64_t v25 = (uint64_t (*)(void))sub_2560405F4;
    uint64_t v26 = v33;
    return sub_256138B74((uint64_t)v26, v25);
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_256177DE8();

  uint64_t v32 = v13;
  uint64_t v29 = sub_256134000();
  uint64_t v30 = v14;
  sub_256178508();
  sub_256138950((uint64_t)v31, v33);
  sub_2560D2AB8((uint64_t)v31);
  sub_256138B74((uint64_t)v33, (uint64_t (*)(void))sub_2560405F4);
  if (v32)
  {
    uint64_t v15 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  objc_msgSend(v2, sel_setUserInfo_, v15);

  return sub_256139110(a1, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
}

void (*NSUserActivity.configuration.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  size_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  uint64_t v5 = malloc(v4);
  a1[2] = v5;
  NSUserActivity.configuration.getter((uint64_t)v5);
  return sub_2561353FC;
}

void sub_2561353FC(uint64_t a1, char a2)
{
}

uint64_t NSUserActivity.version.getter()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  if (!v1)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_12:
    sub_256138B74((uint64_t)&v9, (uint64_t (*)(void))sub_2560405F4);
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_256177DE8();

  *(void *)&long long v9 = sub_256134000();
  *((void *)&v9 + 1) = v4;
  sub_256178508();
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_256137F38((uint64_t)v8), (v6 & 1) != 0))
  {
    sub_255FB5934(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_2560D2AB8((uint64_t)v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1)) {
    goto LABEL_12;
  }
  if (swift_dynamicCast()) {
    return v8[0];
  }
  else {
    return 0;
  }
}

void NSUserActivity.version.setter(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    sub_256138A4C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2561A0960;
    sub_256134000();
    sub_256178508();
    *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 72) = a1;
    sub_256133D1C(inited);
    unint64_t v5 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v5);
  }
}

void (*NSUserActivity.version.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x108uLL);
  *a1 = v3;
  v3[32] = v1;
  v3[30] = NSUserActivity.version.getter();
  *((unsigned char *)v3 + 248) = v4 & 1;
  return sub_2561356A0;
}

void sub_2561356A0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  if (a2)
  {
    if (*(unsigned char *)(*(void *)a1 + 248)) {
      goto LABEL_7;
    }
    uint64_t v3 = (void *)v2[32];
    uint64_t v4 = v2[30];
    sub_256138A4C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2561A0960;
    v2[26] = sub_256134000();
    v2[27] = v6;
    sub_256178508();
    *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 72) = v4;
    uint64_t v7 = inited;
  }
  else
  {
    if (*(unsigned char *)(*(void *)a1 + 248)) {
      goto LABEL_7;
    }
    uint64_t v3 = (void *)v2[32];
    uint64_t v8 = v2[30];
    sub_256138A4C();
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_2561A0960;
    v2[28] = sub_256134000();
    v2[29] = v10;
    sub_256178508();
    *(void *)(v9 + 96) = MEMORY[0x263F8D6C8];
    *(void *)(v9 + 72) = v8;
    uint64_t v7 = v9;
  }
  sub_256133D1C(v7);
  id v11 = (void *)sub_256177DD8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addUserInfoEntriesFromDictionary_, v11);

LABEL_7:

  free(v2);
}

Swift::Bool __swiftcall NSUserActivity.isValid()()
{
  uint64_t v0 = NSUserActivity.version.getter();
  return (v1 & 1) == 0 && v0 == 1;
}

uint64_t static URL.stateOfMind(route:presentWithAnimation:configuration:)@<X0>(unsigned char *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a4;
  sub_256138AB4(0, (unint64_t *)&qword_26B2AD320, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - v8;
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = sub_2561754C8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_256175A78();
  LOBYTE(v22) = (_BYTE)a1;
  URLComponents.route.setter();
  URLComponents.presentWithAnimation.setter(a2);
  sub_25613916C(a3, (uint64_t)v12, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  URLComponents.initialConfiguration.setter((unint64_t)v12);
  sub_256175498();
  uint64_t v17 = sub_256175628();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    sub_256139110((uint64_t)v9, (unint64_t *)&qword_26B2AD320, MEMORY[0x263F06EA8]);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_256178558();
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD00000000000001ALL;
    unint64_t v23 = 0x80000002561ADB20;
    sub_256139844(&qword_269F475E8, MEMORY[0x263F06370]);
    sub_2561787E8();
    sub_256177F68();
    swift_bridgeObjectRelease();
    uint64_t result = sub_256178658();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v9, v17);
  }
  return result;
}

uint64_t URLComponents.route.setter()
{
  sub_256177F68();
  swift_bridgeObjectRelease();

  return MEMORY[0x270EEE568](47, 0xE100000000000000);
}

uint64_t URLComponents.presentWithAnimation.setter(int a1)
{
  uint64_t v31 = sub_256175458();
  uint64_t v3 = *(void *)(v31 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v31);
  uint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v34 = &v27[-v8];
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v27[-v9];
  uint64_t v11 = sub_256175468();
  unint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v13 = v11;
    uint64_t v38 = *(void *)(v11 + 16);
    unint64_t v39 = MEMORY[0x263F8EE78];
    if (v38)
    {
      int v28 = a1;
      uint64_t v29 = v6;
      uint64_t v30 = v1;
      unint64_t v14 = 0;
      uint64_t v33 = (void *)(v3 + 32);
      uint64_t v36 = "Unable to create url from ";
      uint64_t v37 = v3 + 16;
      unint64_t v35 = 0x80000002561ADB40;
      unint64_t v12 = v31;
      while (1)
      {
        if (v14 >= *(void *)(v13 + 16))
        {
          __break(1u);
LABEL_25:
          unint64_t v12 = sub_256096E18(0, *(void *)(v12 + 16) + 1, 1, v12);
LABEL_20:
          unint64_t v25 = *(void *)(v12 + 16);
          unint64_t v24 = *(void *)(v12 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v12 = sub_256096E18(v24 > 1, v25 + 1, 1, v12);
          }
          *(void *)(v12 + 16) = v25 + 1;
          (*(void (**)(unint64_t, unsigned char *, uint64_t))(v3 + 32))(v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v25, v6, v31);
          return sub_256175478();
        }
        unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        uint64_t v6 = *(unsigned char **)(v3 + 72);
        (*(void (**)(unsigned char *, unint64_t, unint64_t))(v3 + 16))(v10, v13 + v15 + (void)v6 * v14, v12);
        if (sub_256175438() == 0xD000000000000014 && v16 == v35)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v17 = sub_256178828();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            uint64_t v18 = (void (*)(unint64_t, unsigned char *, uint64_t))*v33;
            ((void (*)(unsigned char *, unsigned char *, unint64_t))*v33)(v34, v10, v12);
            unint64_t v19 = v39;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v32 = v18;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2560E881C(0, *(void *)(v19 + 16) + 1, 1);
              unint64_t v19 = v39;
            }
            unint64_t v22 = *(void *)(v19 + 16);
            unint64_t v21 = *(void *)(v19 + 24);
            if (v22 >= v21 >> 1)
            {
              sub_2560E881C(v21 > 1, v22 + 1, 1);
              unint64_t v19 = v39;
            }
            *(void *)(v19 + 16) = v22 + 1;
            unint64_t v23 = v19 + v15 + v22 * (void)v6;
            unint64_t v12 = v31;
            v32(v23, v34, v31);
            unint64_t v39 = v19;
            goto LABEL_6;
          }
        }
        (*(void (**)(unsigned char *, unint64_t))(v3 + 8))(v10, v12);
LABEL_6:
        if (v38 == ++v14)
        {
          unint64_t v12 = v39;
          uint64_t v6 = v29;
          LOBYTE(a1) = v28;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (a1 != 2)
  {
    sub_256175428();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  return sub_256175478();
}

uint64_t URLComponents.initialConfiguration.setter(unint64_t a1)
{
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v41 = (uint64_t)&v34 - v5;
  uint64_t v6 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_256175458();
  uint64_t v10 = *(void *)(v43 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v43);
  uint64_t v13 = (void (**)(char *, char *))((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v45 = (char *)&v34 - v15;
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)&v34 - v16;
  uint64_t v18 = sub_256175468();
  unint64_t v19 = MEMORY[0x263F8EE78];
  if (v18)
  {
    uint64_t v20 = v18;
    unint64_t v48 = MEMORY[0x263F8EE78];
    uint64_t v47 = *(void *)(v18 + 16);
    if (v47)
    {
      unint64_t v35 = v13;
      uint64_t v36 = v9;
      unint64_t v37 = v1;
      unint64_t v38 = a1;
      a1 = 0;
      uint64_t v46 = v10 + 16;
      uint64_t v44 = (void (**)(char *, char *, char *))(v10 + 32);
      uint64_t v13 = (void (**)(char *, char *))(v10 + 8);
      uint64_t v9 = (char *)v43;
      uint64_t v42 = v10;
      while (1)
      {
        if (a1 >= *(void *)(v20 + 16))
        {
          __break(1u);
LABEL_26:
          unint64_t v19 = sub_256096E18(0, *(void *)(v19 + 16) + 1, 1, v19);
LABEL_21:
          unint64_t v32 = *(void *)(v19 + 16);
          unint64_t v31 = *(void *)(v19 + 24);
          if (v32 >= v31 >> 1) {
            unint64_t v19 = sub_256096E18(v31 > 1, v32 + 1, 1, v19);
          }
          *(void *)(v19 + 16) = v32 + 1;
          (*(void (**)(unint64_t, void (**)(char *, char *), uint64_t))(v2 + 32))(v19+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v32, v13, v43);
          sub_256138B1C((uint64_t)v17, v1);
          sub_256138B74((uint64_t)v9, type metadata accessor for StateOfMindEntryModel.Configuration);
          goto LABEL_24;
        }
        unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        uint64_t v2 = *(void *)(v10 + 72);
        (*(void (**)(char *, unint64_t, char *))(v10 + 16))(v17, v20 + v21 + v2 * a1, v9);
        uint64_t v22 = sub_256175438();
        unint64_t v1 = v23;
        if (v22 == 0x72756769666E6F63 && v23 == 0xED00006E6F697461)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v19 = sub_256178828();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            unint64_t v24 = *v44;
            (*v44)(v45, v17, v9);
            unint64_t v1 = v48;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2560E881C(0, *(void *)(v1 + 16) + 1, 1);
              unint64_t v1 = v48;
            }
            unint64_t v26 = *(void *)(v1 + 16);
            unint64_t v25 = *(void *)(v1 + 24);
            unint64_t v19 = v26 + 1;
            if (v26 >= v25 >> 1)
            {
              sub_2560E881C(v25 > 1, v26 + 1, 1);
              unint64_t v1 = v48;
            }
            *(void *)(v1 + 16) = v19;
            unint64_t v27 = v1 + v21 + v26 * v2;
            uint64_t v9 = (char *)v43;
            v24((char *)v27, v45, (char *)v43);
            unint64_t v48 = v1;
            uint64_t v10 = v42;
            goto LABEL_6;
          }
        }
        (*v13)(v17, v9);
LABEL_6:
        if (v47 == ++a1)
        {
          unint64_t v19 = v48;
          a1 = v38;
          uint64_t v13 = v35;
          uint64_t v9 = v36;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = v39;
  uint64_t v29 = v41;
  sub_25613916C(a1, v41, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v29, 1, v28) != 1)
  {
    uint64_t v2 = v10;
    sub_256008A00(v29, (uint64_t)v9);
    sub_2561753A8();
    swift_allocObject();
    sub_256175398();
    sub_256139844((unint64_t *)&unk_269F475D8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    char v17 = (char *)sub_256175388();
    unint64_t v1 = v30;
    swift_release();
    sub_256175648();
    sub_256175428();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_21;
  }
  sub_256139110(v29, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
LABEL_24:
  sub_256175478();
  return sub_256139110(a1, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
}

uint64_t URL.route.getter@<X0>(unsigned char *a1@<X8>)
{
  sub_256138AB4(0, &qword_269F475F0, MEMORY[0x263F06370]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  sub_256175488();
  uint64_t v5 = sub_2561754C8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t result = sub_256139110((uint64_t)v4, &qword_269F475F0, MEMORY[0x263F06370]);
    *a1 = 5;
  }
  else
  {
    URLComponents.route.getter(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

MentalHealthUI::Route_optional URLComponents.route.getter@<W0>(unsigned char *a1@<X8>)
{
  sub_2561754A8();
  unint64_t v2 = sub_255F5CE90();
  uint64_t v3 = (void *)MEMORY[0x25A2A0F30](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x263F8D310], v2);
  swift_bridgeObjectRelease();
  if (v3[2])
  {
    uint64_t v4 = v3[4];
    uint64_t v5 = v3[5];
    uint64_t v6 = v3[6];
    uint64_t v7 = v3[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x25A2A09B0](v4, v5, v6, v7);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = v8;
    v11._object = v10;
    return Route.init(rawValue:)(v11);
  }
  else
  {
    result.value = swift_bridgeObjectRelease();
    *a1 = 5;
  }
  return result;
}

uint64_t URL.presentWithAnimation.getter()
{
  sub_256138AB4(0, &qword_269F475F0, MEMORY[0x263F06370]);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v7 - v1;
  sub_256175488();
  uint64_t v3 = sub_2561754C8();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_256139110((uint64_t)v2, &qword_269F475F0, MEMORY[0x263F06370]);
    return 2;
  }
  else
  {
    uint64_t v5 = URLComponents.presentWithAnimation.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5;
}

uint64_t URLComponents.presentWithAnimation.getter()
{
  uint64_t v0 = sub_256175458();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256138AB4(0, (unint64_t *)&unk_26B2AD310, MEMORY[0x263F06338]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_256175468();
  if (!v7) {
    return 2;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v22 = v6;
    uint64_t v23 = v1;
    uint64_t v10 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v9 = v1 + 16;
    unint64_t v25 = v10;
    unint64_t v11 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = *(void *)(v9 + 56);
    v21[1] = v7;
    swift_bridgeObjectRetain();
    unint64_t v24 = 0x80000002561ADB40;
    while (1)
    {
      v25(v3, v11, v0);
      if (sub_256175438() == 0xD000000000000014 && v13 == v24) {
        break;
      }
      char v14 = sub_256178828();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v9 - 8))(v3, v0);
      v11 += v12;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = 1;
        uint64_t v6 = v22;
        uint64_t v1 = v23;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v6 = v22;
    uint64_t v1 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v22, v3, v0);
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, v15, 1, v0);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_256139110((uint64_t)v6, (unint64_t *)&unk_26B2AD310, MEMORY[0x263F06338]);
  }
  else
  {
    uint64_t v16 = sub_256175448();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    if (v18)
    {
      if (v16 == 48 && v18 == 0xE100000000000000 || (sub_256178828() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v16 == 49 && v18 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v20 = sub_256178828();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0) {
          return 2;
        }
      }
      return 1;
    }
  }
  return 2;
}

void *URL.userActivity.getter()
{
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v36 - v1;
  uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F06370];
  sub_256138AB4(0, &qword_269F475F0, MEMORY[0x263F06370]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v40 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v36 - v11;
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v36 - v13;
  sub_256175488();
  uint64_t v15 = (void *)_sSo14NSUserActivityC14MentalHealthUIE6pluginABvgZ_0();
  sub_25613916C((uint64_t)v14, (uint64_t)v12, &qword_269F475F0, v3);
  uint64_t v16 = sub_2561754C8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v12, 1, v16);
  uint64_t v41 = v2;
  if (v19 == 1)
  {
    sub_256139110((uint64_t)v12, &qword_269F475F0, MEMORY[0x263F06370]);
    char v20 = 5;
  }
  else
  {
    uint64_t v39 = v18;
    v42[0] = sub_2561754A8();
    v42[1] = v21;
    unint64_t v22 = sub_255F5CE90();
    uint64_t v23 = (void *)MEMORY[0x25A2A0F30](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x263F8D310], v22);
    swift_bridgeObjectRelease();
    if (v23[2])
    {
      uint64_t v25 = v23[4];
      uint64_t v24 = v23[5];
      uint64_t v26 = v23[7];
      uint64_t v37 = v23[6];
      uint64_t v38 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v27 = MEMORY[0x25A2A09B0](v25, v38, v37, v26);
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      v30._countAndFlagsBits = v27;
      v30._object = v29;
      Route.init(rawValue:)(v30);
      char v20 = v42[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      char v20 = 5;
      LOBYTE(v42[0]) = 5;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
    uint64_t v18 = v39;
  }
  LOBYTE(v42[0]) = v20;
  NSUserActivity.route.setter((unsigned __int8 *)v42);
  sub_25613916C((uint64_t)v14, (uint64_t)v9, &qword_269F475F0, MEMORY[0x263F06370]);
  if (v18(v9, 1, v16) == 1)
  {
    sub_256139110((uint64_t)v9, &qword_269F475F0, MEMORY[0x263F06370]);
    char v31 = 2;
  }
  else
  {
    char v31 = URLComponents.presentWithAnimation.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
  }
  uint64_t v32 = (uint64_t)v41;
  NSUserActivity.presentWithAnimation.setter(v31);
  uint64_t v33 = v40;
  sub_25613916C((uint64_t)v14, v40, &qword_269F475F0, MEMORY[0x263F06370]);
  if (v18((char *)v33, 1, v16) == 1)
  {
    sub_256139110(v33, &qword_269F475F0, MEMORY[0x263F06370]);
    uint64_t v34 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v32, 1, 1, v34);
  }
  else
  {
    URLComponents.initialConfiguration.getter(v32);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v33, v16);
  }
  NSUserActivity.configuration.setter(v32);
  objc_msgSend(v15, sel_setEligibleForHandoff_, 0);
  sub_256139110((uint64_t)v14, &qword_269F475F0, MEMORY[0x263F06370]);
  return v15;
}

uint64_t URLComponents.initialConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v31 - v3;
  uint64_t v5 = sub_256175458();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256138AB4(0, (unint64_t *)&unk_26B2AD310, MEMORY[0x263F06338]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_256175468();
  if (!v12) {
    goto LABEL_16;
  }
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v32 = v11;
    uint64_t v33 = v6;
    uint64_t v34 = v4;
    uint64_t v35 = a1;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    char v14 = v16;
    unint64_t v17 = v12 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v31 = v12;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14(v8, v17, v5);
      if (sub_256175438() == 0x72756769666E6F63 && v19 == 0xED00006E6F697461) {
        break;
      }
      char v20 = sub_256178828();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      v17 += v18;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v4 = v34;
        a1 = v35;
        uint64_t v11 = v32;
        uint64_t v6 = v33;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v11 = v32;
    uint64_t v6 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v8, v5);
    uint64_t v21 = 0;
    uint64_t v4 = v34;
    a1 = v35;
  }
  else
  {
    uint64_t v21 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, v21, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_256139110((uint64_t)v11, (unint64_t *)&unk_26B2AD310, MEMORY[0x263F06338]);
LABEL_16:
    uint64_t v27 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 1, 1, v27);
  }
  sub_256175448();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  if (!v23) {
    goto LABEL_16;
  }
  uint64_t v24 = sub_256175638();
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v26 >> 60 == 15) {
    goto LABEL_16;
  }
  sub_256175378();
  swift_allocObject();
  sub_256175368();
  uint64_t v29 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  sub_256139844(&qword_269F475D0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  sub_256175358();
  sub_256138B08(v24, v26);
  swift_release();
  Swift::String v30 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  v30(v4, 0, 1, v29);
  sub_256008A00((uint64_t)v4, a1);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v30)(a1, 0, 1, v29);
}

uint64_t (*URLComponents.route.modify(uint64_t *a1))()
{
  uint64_t v3 = a1 + 3;
  a1[2] = v1;
  *a1 = sub_2561754A8();
  a1[1] = v4;
  unint64_t v5 = sub_255F5CE90();
  uint64_t v6 = (void *)MEMORY[0x25A2A0F30](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x263F8D310], v5);
  swift_bridgeObjectRelease();
  if (v6[2])
  {
    uint64_t v7 = v6[4];
    uint64_t v8 = v6[5];
    uint64_t v9 = v6[6];
    uint64_t v10 = v6[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x25A2A09B0](v7, v8, v9, v10);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = v11;
    v14._object = v13;
    Route.init(rawValue:)(v14);
  }
  else
  {
    swift_bridgeObjectRelease();
    unsigned char *v3 = 5;
  }
  return sub_2561379A8;
}

uint64_t sub_2561379A8()
{
  return URLComponents.route.setter();
}

uint64_t (*URLComponents.presentWithAnimation.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = URLComponents.presentWithAnimation.getter();
  return sub_256137A38;
}

uint64_t sub_256137A38(uint64_t a1)
{
  return URLComponents.presentWithAnimation.setter(*(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_256137A60(uint64_t a1)
{
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - v3;
  sub_25613916C(a1, (uint64_t)&v6 - v3, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  return URLComponents.initialConfiguration.setter((unint64_t)v4);
}

void (*URLComponents.initialConfiguration.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  sub_256138AB4(0, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  size_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  unint64_t v5 = malloc(v4);
  a1[2] = v5;
  URLComponents.initialConfiguration.getter((uint64_t)v5);
  return sub_256137BBC;
}

void sub_256137BBC(uint64_t a1, char a2)
{
}

void sub_256137BD4(uint64_t a1, char a2, void (*a3)(void *))
{
  size_t v4 = *(void **)(a1 + 8);
  unint64_t v5 = *(void **)(a1 + 16);
  if (a2)
  {
    sub_25613916C(*(void *)(a1 + 16), (uint64_t)v4, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
    a3(v4);
    sub_256139110((uint64_t)v5, &qword_26B2AD348, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel.Configuration);
  }
  else
  {
    a3(*(void **)(a1 + 16));
  }
  free(v5);

  free(v4);
}

unint64_t sub_256137C88(uint64_t a1, uint64_t a2)
{
  sub_2561788E8();
  sub_256177F38();
  uint64_t v4 = sub_256178928();

  return sub_256138014(a1, a2, v4);
}

unint64_t sub_256137D00(char a1)
{
  sub_2561788E8();
  sub_256177F38();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_256178928();

  return sub_2561380F8(a1, v2);
}

unint64_t sub_256137DD8(char a1)
{
  sub_2561788E8();
  sub_256177F38();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_256178928();

  return sub_2561382B0(a1, v2);
}

unint64_t sub_256137EA4(uint64_t a1)
{
  sub_256177EE8();
  sub_2561788E8();
  sub_256177F38();
  uint64_t v2 = sub_256178928();
  swift_bridgeObjectRelease();

  return sub_25613844C(a1, v2);
}

unint64_t sub_256137F38(uint64_t a1)
{
  uint64_t v2 = sub_2561784E8();

  return sub_2561385C4(a1, v2);
}

unint64_t sub_256137F7C(uint64_t a1)
{
  sub_256177DB8();
  sub_256139844(&qword_269F46790, MEMORY[0x263F090E8]);
  uint64_t v2 = sub_256177E08();

  return sub_25613868C(a1, v2);
}

unint64_t sub_256138014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_256178828() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_256178828() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2561380F8(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v4);
      unint64_t v7 = 0x6F65675F64617571;
      if (v6 == 1) {
        unint64_t v7 = 0xD000000000000013;
      }
      unint64_t v8 = 0xED0000797274656DLL;
      if (v6 == 1) {
        unint64_t v8 = 0x80000002561AA310;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v9 = v7;
      }
      else {
        unint64_t v9 = 0xD000000000000012;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v10 = v8;
      }
      else {
        unint64_t v10 = 0x80000002561AA2F0;
      }
      if (a1)
      {
        if (a1 == 1) {
          unint64_t v11 = 0xD000000000000013;
        }
        else {
          unint64_t v11 = 0x6F65675F64617571;
        }
        if (a1 == 1) {
          unint64_t v12 = 0x80000002561AA310;
        }
        else {
          unint64_t v12 = 0xED0000797274656DLL;
        }
        if (v9 != v11) {
          goto LABEL_24;
        }
      }
      else
      {
        unint64_t v12 = 0x80000002561AA2F0;
        if (v9 != 0xD000000000000012) {
          goto LABEL_24;
        }
      }
      if (v10 == v12)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_24:
      char v13 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_2561382B0(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v13 = ~v3;
    while (1)
    {
      unint64_t v5 = 0xD000000000000014;
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
      {
        unint64_t v6 = 0x80000002561AA360;
      }
      else
      {
        unint64_t v5 = 0xD000000000000011;
        unint64_t v6 = 0x80000002561AA380;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v7 = v5;
      }
      else {
        unint64_t v7 = 0xD000000000000017;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v8 = v6;
      }
      else {
        unint64_t v8 = 0x80000002561AA340;
      }
      if (a1)
      {
        if (a1 == 1) {
          unint64_t v9 = 0xD000000000000014;
        }
        else {
          unint64_t v9 = 0xD000000000000011;
        }
        if (a1 == 1) {
          unint64_t v10 = 0x80000002561AA360;
        }
        else {
          unint64_t v10 = 0x80000002561AA380;
        }
        if (v7 != v9) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t v10 = 0x80000002561AA340;
        if (v7 != 0xD000000000000017) {
          goto LABEL_23;
        }
      }
      if (v8 == v10)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_23:
      char v11 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v13;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_25613844C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_256177EE8();
    uint64_t v8 = v7;
    if (v6 == sub_256177EE8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_256178828();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_256177EE8();
          uint64_t v15 = v14;
          if (v13 == sub_256177EE8() && v15 == v16) {
            break;
          }
          char v18 = sub_256178828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2561385C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_2560D5BC4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x25A2A0F80](v9, a1);
      sub_2560D2AB8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_25613868C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_256177DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_256139844(&qword_269F462D8, MEMORY[0x263F090E8]);
      char v15 = sub_256177E98();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

double sub_25613884C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_256137C88(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2560D4DC4();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_25601DCC4((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_256138BD4(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_256138950@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_256137F38(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2560D5528();
      uint64_t v9 = v11;
    }
    sub_2560D2AB8(*(void *)(v9 + 48) + 40 * v6);
    sub_25601DCC4((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_256138DAC(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void sub_256138A4C()
{
  if (!qword_269F475B8)
  {
    sub_256139744(255, (unint64_t *)&unk_269F475C0);
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F475B8);
    }
  }
}

void sub_256138AB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256178448();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_256138B08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_256138B1C(a1, a2);
  }
  return a1;
}

uint64_t sub_256138B1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_256138B74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_256138BD4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2561784D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2561788E8();
        swift_bridgeObjectRetain();
        sub_256177F38();
        uint64_t v10 = sub_256178928();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_256138DAC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2561784D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2560D5BC4(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_2561784E8();
        uint64_t result = sub_2560D2AB8((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *BOOL v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t _sSo14NSUserActivityC14MentalHealthUIE6pluginABvgZ_0()
{
  unint64_t v0 = sub_255F5CE90();
  uint64_t v1 = (void *)MEMORY[0x25A2A0F30](46, 0xE100000000000000, 1, 1, MEMORY[0x263F8D310], v0);
  if (v1[2])
  {
    uint64_t v2 = v1[4];
    uint64_t v3 = v1[5];
    uint64_t v4 = v1[6];
    uint64_t v5 = v1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x25A2A09B0](v2, v3, v4, v5);
    swift_bridgeObjectRelease();
    unint64_t v6 = (void *)sub_256175A68();
    swift_bridgeObjectRelease();
    sub_256138A4C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2561A0960;
    sub_256134000();
    sub_256178508();
    *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 72) = 1;
    sub_256133D1C(inited);
    unint64_t v8 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_addUserInfoEntriesFromDictionary_, v8);

    return (uint64_t)v6;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_256139110(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_256138AB4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_25613916C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_256138AB4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_2561391DC()
{
  unint64_t result = qword_269F475F8;
  if (!qword_269F475F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F475F8);
  }
  return result;
}

uint64_t sub_256139230@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = NSUserActivity.presentWithAnimation.getter();
  *a1 = result;
  return result;
}

void sub_25613925C(char *a1)
{
}

uint64_t sub_256139284@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = NSUserActivity.route.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_2561392C0(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  NSUserActivity.route.setter(&v1);
}

uint64_t sub_2561392F8@<X0>(uint64_t a1@<X8>)
{
  return NSUserActivity.configuration.getter(a1);
}

uint64_t sub_256139320@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = NSUserActivity.version.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_256139354(uint64_t a1)
{
}

MentalHealthUI::Route_optional sub_256139388@<W0>(unsigned char *a1@<X8>)
{
  result.value = URLComponents.route.getter(&v3).value;
  *a1 = v3;
  return result;
}

uint64_t sub_2561393C4()
{
  return URLComponents.route.setter();
}

uint64_t sub_2561393FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = URLComponents.presentWithAnimation.getter();
  *a1 = result;
  return result;
}

uint64_t sub_256139428(unsigned __int8 *a1)
{
  return URLComponents.presentWithAnimation.setter(*a1);
}

uint64_t sub_256139450@<X0>(uint64_t a1@<X8>)
{
  return URLComponents.initialConfiguration.getter(a1);
}

unsigned char *storeEnumTagSinglePayload for Route(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256139544);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Route()
{
  return &type metadata for Route;
}

void sub_25613957C()
{
  if (!qword_269F47600)
  {
    sub_256177DB8();
    sub_2561395EC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47600);
    }
  }
}

unint64_t sub_2561395EC()
{
  unint64_t result = qword_269F46770;
  if (!qword_269F46770)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F46770);
  }
  return result;
}

void sub_25613962C()
{
  if (!qword_269F47610)
  {
    sub_256177DB8();
    sub_2561395EC();
    sub_256139844(&qword_269F46790, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_2561786B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47610);
    }
  }
}

uint64_t sub_2561396D8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_256139744(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_256139744(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2561397A4()
{
  if (!qword_269F47630)
  {
    type metadata accessor for Option(255);
    sub_256139844((unint64_t *)&qword_269F47410, type metadata accessor for Option);
    unint64_t v0 = sub_2561786B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47630);
    }
  }
}

uint64_t sub_256139844(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25613988C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id StateOfMindCalendarViewController.__allocating_init(healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(a1, a2, a3);
}

id sub_256139940()
{
  uint64_t v1 = qword_269F47658;
  uint64_t v2 = *(void **)(v0 + qword_269F47658);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_269F47658);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2561399B4()
{
  uint64_t v1 = qword_269F47660;
  uint64_t v2 = *(void **)(v0 + qword_269F47660);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_269F47660);
LABEL_5:
    id v6 = v2;
    return v3;
  }
  id result = (id)HKDateFormatterFromTemplate();
  if (result)
  {
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_256139A28()
{
  uint64_t v1 = v0 + qword_269F50D30;
  swift_beginAccess();
  return MEMORY[0x25A2A1F80](v1);
}

uint64_t sub_256139A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + qword_269F50D30;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_256139AE4(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = qword_269F50D30;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x25A2A1F80](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_256139B6C;
}

void sub_256139B6C(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

id StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v92 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v87 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))sub_256177DB8();
  *(void *)&long long v83 = *((void *)v84 - 1);
  MEMORY[0x270FA5388](v84);
  uint64_t v82 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_25613A780(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v81 = (char *)&v71 - v12;
  sub_25613A780(0, &qword_269F462E8, MEMORY[0x263F07690], v10);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v71 - v14;
  uint64_t v16 = sub_2561758D8();
  uint64_t v80 = *(void (***)(void, void, void))(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v76 = (uint64_t *)((char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = sub_256175A08();
  uint64_t v90 = *(void *)(v86 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v86);
  char v85 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v89 = (char *)&v71 - v20;
  uint64_t v75 = (void (*)(char *, char *, uint64_t))sub_256175B68();
  uint64_t v21 = *((void *)v75 - 1);
  MEMORY[0x270FA5388](v75);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = v7;
  uint64_t v24 = *(void (**)(void))(v7 + 56);
  uint64_t v79 = &v3[qword_269F47650];
  uint64_t v91 = v6;
  uint64_t v78 = v7 + 56;
  uint64_t v77 = v24;
  v24();
  *(void *)&v3[qword_269F47658] = 0;
  *(void *)&v3[qword_269F47660] = 0;
  *(void *)&v3[qword_269F50D30 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v25 = v3;
  sub_256175B48();
  BOOL v26 = sub_256175B58();
  os_log_type_t v27 = sub_256178238();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v72 = v15;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v71 = v16;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v74 = a1;
    uint64_t v31 = v30;
    v96[0] = v30;
    uint64_t v73 = a3;
    *(_DWORD *)uint64_t v29 = 136446210;
    uint64_t v32 = sub_256178978();
    uint64_t v94 = sub_255FB29A8(v32, v33, v96);
    a3 = v73;
    sub_256178458();
    unint64_t v15 = v72;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v26, v27, "[%{public}s] initializing", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v34 = v31;
    a1 = v74;
    MEMORY[0x25A2A1E90](v34, -1, -1);
    uint64_t v35 = v29;
    uint64_t v16 = v71;
    MEMORY[0x25A2A1E90](v35, -1, -1);
  }

  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v21 + 8))(v23, v75);
  uint64_t v36 = v80;
  uint64_t v37 = v76;
  ((void (**)(uint64_t *, void, uint64_t))v80)[13](v76, *MEMORY[0x263F07740], v16);
  uint64_t v38 = v89;
  sub_2561758E8();
  ((void (*)(uint64_t *, uint64_t))v36[1])(v37, v16);
  sub_2561758B8();
  uint64_t v39 = sub_2561758C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v15, 0, 1, v39);
  sub_2561759B8();
  uint64_t v40 = 45;
  if (a3 == 2) {
    uint64_t v40 = 70;
  }
  uint64_t v74 = (void *)v40;
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  uint64_t v42 = (uint64_t)v85;
  uint64_t v41 = v86;
  v75(v85, v38, v86);
  type metadata accessor for StateOfMindCalendarDataSource();
  swift_allocObject();
  id v43 = a1;
  uint64_t v80 = (void (**)(void, void, void))v43;
  uint64_t v44 = sub_2560D5724(v43, v42);

  id v45 = objc_allocWithZone(MEMORY[0x263F466D0]);
  uint64_t v46 = (void *)sub_256175978();
  id v47 = objc_msgSend(v45, sel_initWithCalendar_, v46);

  *(void *)&v25[qword_269F47668] = v47;
  uint64_t v48 = v93;
  uint64_t v49 = (uint64_t)v81;
  uint64_t v50 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v81, v92, v91);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v77)(v49, 0, 1, v50);
  uint64_t v51 = (uint64_t)v79;
  swift_beginAccess();
  sub_256140B64(v49, v51);
  swift_endAccess();
  uint64_t v76 = v44;
  v96[0] = (uint64_t)v44;
  sub_256141994(0, &qword_269F47670, MEMORY[0x263F46278]);
  swift_allocObject();
  swift_retain();
  *(void *)&v25[qword_269F47680] = sub_256177B08();
  *(void *)&v25[qword_269F47688] = MEMORY[0x263F8EE88];
  long long v52 = v87;
  sub_256175858();
  double v53 = v82;
  sub_256175948();
  double v54 = *(char **)(v48 + 8);
  uint64_t v93 = v48 + 8;
  uint64_t v81 = v54;
  ((void (*)(char *, uint64_t))v54)(v52, v50);
  (*(void (**)(char *, char *, uint64_t (*)(uint64_t, uint64_t)))(v83 + 32))(&v25[qword_269F47690], v53, v84);

  CGColorRef v55 = v38;
  uint64_t v56 = (void (*)(uint64_t, char *, uint64_t))v75;
  v75((char *)v42, v38, v41);
  uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_25613A780(0, &qword_269F47698, MEMORY[0x263F462A0], MEMORY[0x263F8E0F8]);
  sub_256177B58();
  uint64_t v57 = swift_allocObject();
  long long v83 = xmmword_2561A0960;
  *(_OWORD *)(v57 + 16) = xmmword_2561A0960;
  sub_256177B48();
  sub_25613A7E4();
  id v58 = objc_allocWithZone((Class)sub_256177AF8());
  uint64_t v59 = (void *)sub_256177AE8();
  uint64_t v60 = (objc_class *)type metadata accessor for StateOfMindCalendarViewController();
  v95.receiver = v25;
  v95.super_class = v60;
  id v61 = objc_msgSendSuper2(&v95, sel_initWithCollectionViewLayout_, v59);
  sub_256177BD8();
  sub_256141CE4(&qword_269F476A0, (void (*)(uint64_t))type metadata accessor for StateOfMindCalendarViewController);
  v56(v42, v55, v41);
  id v62 = v61;
  sub_256175858();
  uint64_t v63 = (void *)sub_256177B88();
  id v64 = v62;
  id v65 = v63;
  sub_256177C28();

  sub_25613A780(0, &qword_269F476A8, (uint64_t (*)(uint64_t))sub_256140C44, v84);
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v83;
  uint64_t v67 = sub_256175B78();
  uint64_t v68 = MEMORY[0x263F82018];
  *(void *)(v66 + 32) = v67;
  *(void *)(v66 + 40) = v68;
  id v69 = v64;
  MEMORY[0x25A2A0CF0](v66, sel_preferredContentSizeCategoryDidChange);
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  ((void (*)(uint64_t, uint64_t))v81)(v92, v91);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v41);
  return v69;
}

void sub_25613A780(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_25613A7E4()
{
  uint64_t v0 = sub_256175B68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F835B8]);
  objc_msgSend(v4, sel_scaledValueForValue_, 21.0);
  double v6 = v5;

  double v7 = v6 + 71.0;
  sub_256175B48();
  unint64_t v8 = sub_256175B58();
  os_log_type_t v9 = sub_256178238();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v12 = sub_256178978();
    uint64_t v15 = sub_255FB29A8(v12, v13, &v16);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2048;
    uint64_t v15 = *(void *)&v7;
    sub_256178458();
    _os_log_impl(&dword_255F58000, v8, v9, "[%{public}s] calculated cell height: %f", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v11, -1, -1);
    MEMORY[0x25A2A1E90](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

id StateOfMindCalendarViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void StateOfMindCalendarViewController.init(coder:)()
{
  uint64_t v1 = &v0[qword_269F47650];
  uint64_t v2 = sub_256175868();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[qword_269F47658] = 0;
  *(void *)&v0[qword_269F47660] = 0;
  *(void *)&v0[qword_269F50D30 + 8] = 0;
  swift_unknownObjectWeakInit();

  sub_256178658();
  __break(1u);
}

void sub_25613AB5C(char *a1, uint64_t a2, void *a3)
{
  double v5 = &a1[qword_269F47650];
  uint64_t v6 = sub_256175868();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)&a1[qword_269F47658] = 0;
  *(void *)&a1[qword_269F47660] = 0;
  *(void *)&a1[qword_269F50D30 + 8] = 0;
  swift_unknownObjectWeakInit();
  id v7 = a3;

  sub_256178658();
  __break(1u);
}

void sub_25613AC4C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  id v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_25613A780(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v92 = (uint64_t)&v88 - v5;
  uint64_t v6 = sub_256175868();
  uint64_t v93 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25613A780(0, (unint64_t *)&unk_269F476C0, (uint64_t (*)(uint64_t))sub_2560D3AB8, v3);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v88 - v10;
  uint64_t v95 = type metadata accessor for StateOfMindCalendarTitleView();
  uint64_t v12 = MEMORY[0x270FA5388](v95);
  uint64_t v96 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v97 = (uint64_t)&v88 - v14;
  uint64_t v15 = sub_256175B68();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  uint64_t v19 = sub_256175B58();
  os_log_type_t v20 = sub_256178238();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v94 = v6;
  uint64_t v89 = v8;
  uint64_t v90 = v11;
  uint64_t v91 = ObjectType;
  if (v21)
  {
    uint64_t v88 = v15;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v99[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v24 = sub_256178978();
    uint64_t v98 = sub_255FB29A8(v24, v25, v99);
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v19, v20, "[%{public}s] View did load", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v23, -1, -1);
    MEMORY[0x25A2A1E90](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v88);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  BOOL v26 = (objc_class *)type metadata accessor for StateOfMindCalendarViewController();
  v101.receiver = v1;
  v101.super_class = v26;
  objc_msgSendSuper2(&v101, sel_viewDidLoad);
  objc_msgSend(v1, sel_setClearsSelectionOnViewWillAppear_, 0);
  id v27 = objc_msgSend(v1, sel_collectionView);
  if (!v27)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v28 = v27;
  uint64_t v29 = self;
  id v30 = objc_msgSend(v29, sel_systemBackgroundColor);
  objc_msgSend(v28, sel_setBackgroundColor_, v30);

  id v31 = objc_msgSend(v1, sel_collectionView);
  if (!v31)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v32 = v31;
  objc_msgSend(v31, sel_setShowsVerticalScrollIndicator_, 0);

  id v33 = objc_msgSend(v1, sel_collectionView);
  if (!v33)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v34 = v33;
  uint64_t v35 = (void *)sub_256177C18();
  objc_msgSend(v34, sel_setDataSource_, v35);

  id v36 = objc_msgSend(v1, sel_collectionView);
  if (!v36)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v37 = v36;
  if (HKUICalendarLocaleIsRightToLeft()) {
    uint64_t v38 = 4;
  }
  else {
    uint64_t v38 = 3;
  }
  objc_msgSend(v37, sel_setSemanticContentAttribute_, v38);

  id v39 = objc_msgSend(v1, sel_collectionView);
  if (!v39) {
    goto LABEL_29;
  }
  uint64_t v40 = v39;
  uint64_t v88 = (uint64_t)v26;
  type metadata accessor for StateOfMindCalendarDayCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v42 = (void *)sub_256177EA8();
  objc_msgSend(v40, sel_registerClass_forCellWithReuseIdentifier_, ObjCClassFromMetadata, v42);

  id v43 = objc_msgSend(v1, sel_collectionView);
  if (!v43)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v44 = v43;
  sub_256177C08();
  uint64_t v45 = swift_getObjCClassFromMetadata();
  id v46 = (id)*MEMORY[0x263F833F0];
  sub_256177BF8();
  id v47 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_, v45, v46, v47);

  id v48 = objc_msgSend(v1, sel_collectionView);
  if (!v48)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v49 = v48;
  type metadata accessor for StateOfMindCalendarSpacerCell();
  uint64_t v50 = swift_getObjCClassFromMetadata();
  uint64_t v51 = (void *)sub_256177EA8();
  objc_msgSend(v49, sel_registerClass_forCellWithReuseIdentifier_, v50, v51);

  LOBYTE(v98) = 0;
  sub_256177568();
  uint64_t v52 = v99[1];
  uint64_t v53 = (uint64_t)v96;
  *uint64_t v96 = v99[0];
  *(void *)(v53 + 8) = v52;
  double v54 = (uint64_t *)(v53 + *(int *)(v95 + 20));
  *double v54 = swift_getKeyPath();
  sub_25613A780(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_256141A30(v53, v97, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarTitleView);
  sub_256140CE0();
  id v56 = objc_allocWithZone(v55);
  uint64_t v57 = (void *)sub_2561767B8();
  id v58 = objc_msgSend(v57, sel_view);

  if (!v58)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v59 = objc_msgSend(v29, sel_clearColor);
  objc_msgSend(v58, sel_setBackgroundColor_, v59);

  id v60 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v60, sel_setTitleView_, v58);

  id v61 = (void *)sub_256177C38();
  id v62 = objc_msgSend(v1, sel_collectionView);
  if (!v62)
  {
LABEL_33:
    __break(1u);
    return;
  }
  uint64_t v63 = v62;
  objc_msgSend(v62, sel_bounds);

  sub_256177AC8();
  id v64 = objc_msgSend(v1, sel_navigationItem);
  id v65 = sub_256143A98();
  objc_msgSend(v64, sel__setBottomPalette_, v65);

  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v66 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  uint64_t v100 = v88;
  v99[0] = (uint64_t)v1;
  uint64_t v67 = v1;
  uint64_t v68 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  uint64_t v69 = v100;
  if (v100)
  {
    uint64_t v70 = __swift_project_boxed_opaque_existential_1(v99, v100);
    uint64_t v71 = *(void *)(v69 - 8);
    MEMORY[0x270FA5388](v70);
    uint64_t v73 = (char *)&v88 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v71 + 16))(v73);
    uint64_t v74 = sub_256178818();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v73, v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
  }
  else
  {
    uint64_t v74 = 0;
  }
  uint64_t v75 = v90;
  id v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithTitle_style_target_action_, v68, 0, v74, sel_todayButtonTapped);

  swift_unknownObjectRelease();
  id v77 = objc_msgSend(v67, sel_navigationItem);
  objc_msgSend(v77, sel_setLeftBarButtonItem_, v76);

  v99[0] = sub_256177B28();
  uint64_t v78 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v79 = swift_allocObject();
  uint64_t v80 = v91;
  *(void *)(v79 + 16) = v78;
  *(void *)(v79 + 24) = v80;
  sub_256140DEC();
  sub_256141CE4(&qword_269F476F8, (void (*)(uint64_t))sub_256140DEC);
  sub_256175CF8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_256175BE8();
  swift_endAccess();
  swift_release();
  uint64_t v81 = &v67[qword_269F47650];
  swift_beginAccess();
  uint64_t v82 = (uint64_t)v81;
  uint64_t v83 = v92;
  sub_256141A98(v82, v92, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  uint64_t v85 = v93;
  uint64_t v84 = v94;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v83, 1, v94) == 1)
  {
    uint64_t v86 = (uint64_t)v89;
    sub_256175858();
    sub_256141B18(v83, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  }
  else
  {
    uint64_t v86 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v89, v83, v84);
  }
  sub_25613BD2C(v86);
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v84);
  sub_2560D3AB8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v75, 0, 1, v87);
  sub_256177B18();
  objc_msgSend(*(id *)&v67[qword_269F47668], sel_registerObserver_, v67);
}

uint64_t sub_25613B974(uint64_t (*a1)(void, void), uint64_t a2)
{
  sub_2560D3AB8();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256175B68();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x25A2A1F80](a2 + 16);
  if (result)
  {
    uint64_t v12 = (void *)result;
    sub_256175B48();
    sub_256141C1C((uint64_t)a1, (uint64_t)v6, (uint64_t (*)(void))sub_2560D3AB8);
    uint64_t v13 = sub_256175B58();
    os_log_type_t v14 = sub_256178238();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v28 = a1;
      uint64_t v17 = v16;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v31 = v27;
      *(_DWORD *)uint64_t v17 = 136446466;
      int v26 = v15;
      uint64_t v18 = sub_256178978();
      uint64_t v29 = sub_255FB29A8(v18, v19, &v31);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      v24[1] = v17 + 14;
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_256177DB8();
      uint64_t v25 = v7;
      sub_256178628();
      sub_256177F68();
      sub_256178628();
      uint64_t v29 = sub_255FB29A8(v29, v30, &v31);
      sub_256178458();
      swift_bridgeObjectRelease();
      sub_256141C84((uint64_t)v6, (uint64_t (*)(void))sub_2560D3AB8);
      _os_log_impl(&dword_255F58000, v13, (os_log_type_t)v26, "[%{public}s] Received days updated: %s", (uint8_t *)v17, 0x16u);
      uint64_t v20 = v27;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v20, -1, -1);
      uint64_t v21 = v17;
      a1 = v28;
      MEMORY[0x25A2A1E90](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
    }
    else
    {
      sub_256141C84((uint64_t)v6, (uint64_t (*)(void))sub_2560D3AB8);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    id v22 = v12;
    uint64_t v23 = sub_25614037C(a1, (uint64_t)v22);

    sub_25613FCE4(v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25613BD2C(uint64_t a1)
{
  uint64_t v3 = sub_256175A08();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_256175868();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_256177DB8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  id v12 = objc_msgSend(*(id *)(v1 + qword_269F47668), sel_calendar);
  sub_256175988();

  sub_256177D58();
  uint64_t v13 = (void *)sub_256177C38();
  sub_256177AD8();

  sub_256177D08();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_25613BF40(void *a1)
{
  id v1 = a1;
  sub_25613AC4C();
}

id sub_25613BF88()
{
  uint64_t v1 = sub_256175A58();
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v22 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_25613A780(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = sub_256175868();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (objc_class *)type metadata accessor for StateOfMindCalendarViewController();
  v23.receiver = v0;
  v23.super_class = v15;
  objc_msgSendSuper2(&v23, sel_viewDidLayoutSubviews);
  uint64_t v16 = (uint64_t)v0 + qword_269F47650;
  swift_beginAccess();
  sub_256141A98(v16, (uint64_t)v10, (unint64_t *)&qword_269F44D30, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return (id)sub_256141B18((uint64_t)v10, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v18 = result;
  id result = (id)sub_256177C18();
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  unint64_t v19 = result;
  sub_256177BA8();

  uint64_t v20 = (void *)sub_256175A28();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
  objc_msgSend(v18, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v20, 2, 0);

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
  swift_beginAccess();
  sub_256140B64((uint64_t)v8, v16);
  swift_endAccess();
  return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_25613C304(void *a1)
{
  id v1 = a1;
  sub_25613BF88();
}

id sub_25613C34C()
{
  sub_25613C3EC();
  id result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    uint64_t v2 = result;
    id v3 = objc_msgSend(result, sel_indexPathsForVisibleItems);

    sub_256175A58();
    uint64_t v4 = sub_256178008();

    sub_25613FCE4(v4);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25613C3EC()
{
  id v1 = v0;
  sub_2560A8988();
  uint64_t v145 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v134 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v144 = (char *)&v131 - v5;
  sub_2560D3AB8();
  uint64_t v136 = v6;
  uint64_t v135 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v133 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_25613A780(0, (unint64_t *)&unk_269F476C0, (uint64_t (*)(uint64_t))sub_2560D3AB8, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v14 = (char *)&v131 - v13;
  uint64_t v15 = sub_256177DB8();
  uint64_t v139 = *(void **)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v138 = (char *)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v174 = (char *)&v131 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v141 = (char *)&v131 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v140 = (char *)&v131 - v22;
  uint64_t v23 = sub_256175A58();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v142 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v131 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  long long v158 = (char *)&v131 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  long long v157 = (char *)&v131 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v156 = (char *)&v131 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v155 = (char *)&v131 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v164 = (char *)&v131 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v170 = (char *)&v131 - v40;
  sub_25613A780(0, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30], v8);
  uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
  uint64_t v143 = (uint64_t)&v131 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v147 = (uint64_t)&v131 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v154 = (uint64_t)&v131 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v153 = (char *)&v131 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v152 = (uint64_t)&v131 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v151 = (char *)&v131 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  long long v159 = (char *)&v131 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  id v58 = (char *)&v131 - v57;
  MEMORY[0x270FA5388](v56);
  id v59 = *(void (**)(void))(v24 + 56);
  uint64_t v166 = (uint64_t)&v131 - v60;
  v59();
  v165 = v58;
  uint64_t v177 = v59;
  uint64_t v178 = (void (*)(char *, uint64_t))(v24 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v58, 1, 1, v23);
  id v61 = objc_msgSend(v1, sel_collectionView);
  if (!v61)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v62 = v61;
  id v63 = objc_msgSend(v61, sel_preparedCells);

  if (!v63)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  sub_255FB58F8(0, &qword_269F477A0);
  unint64_t v64 = sub_256178008();

  unint64_t v65 = v64;
  unint64_t v66 = v64 >> 62;
  uint64_t v146 = v29;
  uint64_t v67 = (uint64_t)v159;
  unint64_t v173 = v65;
  uint64_t v137 = v15;
  char v132 = v12;
  uint64_t v131 = v14;
  uint64_t v148 = v24;
  if (v66) {
    goto LABEL_30;
  }
  uint64_t v68 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (unint64_t i = v174; v68; unint64_t i = v174)
  {
    unint64_t v172 = v65 & 0xC000000000000001;
    uint64_t v175 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
    uint64_t v176 = (void (**)(uint64_t, char *, uint64_t))(v148 + 32);
    v169 = (void (**)(char *, char *, uint64_t))(v148 + 16);
    uint64_t v149 = (void (**)(char *, uint64_t))(v148 + 8);
    uint64_t v70 = 4;
    uint64_t v150 = v1;
    uint64_t v171 = v68;
    while (1)
    {
      id v71 = v172 ? (id)MEMORY[0x25A2A1000](v70 - 4, v65) : *(id *)(v65 + 8 * v70);
      uint64_t v72 = v71;
      uint64_t v73 = v70 - 3;
      if (__OFADD__(v70 - 4, 1)) {
        break;
      }
      id v74 = objc_msgSend(v1, sel_collectionView);
      if (!v74) {
        goto LABEL_41;
      }
      uint64_t v75 = v74;
      id v179 = v72;
      id v76 = objc_msgSend(v74, sel_indexPathForCell_, v72);

      if (v76)
      {
        id v77 = v164;
        sub_256175A38();

        uint64_t v78 = v77;
        uint64_t v79 = *v176;
        (*v176)(v67, v78, v23);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v177)(v67, 0, 1, v23);
        uint64_t v80 = *v175;
        if ((*v175)(v67, 1, v23) != 1)
        {
          uint64_t v81 = v170;
          v79((uint64_t)v170, (char *)v67, v23);
          uint64_t v82 = v152;
          sub_256141A98(v166, v152, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
          uint64_t v83 = v79;
          uint64_t v84 = v156;
          uint64_t v168 = *v169;
          v168(v156, v81, v23);
          unsigned int v85 = v80(v82, 1, v23);
          uint64_t v162 = v80;
          uint64_t v163 = v83;
          uint64_t v161 = v70 - 3;
          if (v85 == 1)
          {
            uint64_t v86 = v155;
            v83((uint64_t)v155, v84, v23);
            sub_256141B18(v82, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
            uint64_t v87 = v149;
          }
          else
          {
            uint64_t v87 = v149;
            (*v149)(v84, v23);
            uint64_t v86 = v155;
            v83((uint64_t)v155, (char *)v82, v23);
          }
          uint64_t v88 = sub_256141CE4(&qword_269F477A8, MEMORY[0x263F07A30]);
          uint64_t v89 = v170;
          uint64_t v160 = v88;
          if (sub_256177E48()) {
            uint64_t v90 = v89;
          }
          else {
            uint64_t v90 = v86;
          }
          uint64_t v91 = (uint64_t)v151;
          uint64_t v92 = v168;
          v168(v151, v90, v23);
          uint64_t v167 = *v87;
          v167(v86, v23);
          uint64_t v93 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
          uint64_t v94 = v166;
          sub_256141B18(v166, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v177)(v91, 0, 1, v23);
          sub_256141B88(v91, v94);
          uint64_t v95 = v154;
          sub_256141A98((uint64_t)v165, v154, (unint64_t *)&unk_269F47790, v93);
          uint64_t v96 = v158;
          v92(v158, v89, v23);
          if (v162(v95, 1, v23) == 1)
          {
            uint64_t v97 = v157;
            v163((uint64_t)v157, v96, v23);
            sub_256141B18(v95, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
          }
          else
          {
            v167(v96, v23);
            uint64_t v97 = v157;
            v163((uint64_t)v157, (char *)v95, v23);
          }
          uint64_t v67 = (uint64_t)v159;
          uint64_t v73 = v161;
          uint64_t v98 = v170;
          if (sub_256177E58()) {
            uint64_t v99 = v98;
          }
          else {
            uint64_t v99 = v97;
          }
          uint64_t v100 = (uint64_t)v153;
          v168(v153, v99, v23);

          objc_super v101 = v167;
          v167(v97, v23);
          v101(v98, v23);
          uint64_t v102 = (uint64_t)v165;
          sub_256141B18((uint64_t)v165, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v177)(v100, 0, 1, v23);
          sub_256141B88(v100, v102);
          id v1 = v150;
          goto LABEL_8;
        }
      }
      else
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v177)(v67, 1, 1, v23);
      }

      sub_256141B18(v67, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
LABEL_8:
      unint64_t v65 = v173;
      unint64_t i = v174;
      ++v70;
      if (v73 == v171) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_256178678();
    swift_bridgeObjectRelease();
    unint64_t v65 = v173;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v103 = v166;
  uint64_t v104 = v147;
  sub_256141A98(v166, v147, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
  uint64_t v105 = v148;
  uint64_t v106 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
  if (v106(v104, 1, v23) == 1)
  {
    sub_256141B18((uint64_t)v165, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
    uint64_t v107 = v103;
LABEL_39:
    uint64_t v130 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
    sub_256141B18(v107, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
    sub_256141B18(v104, (unint64_t *)&unk_269F47790, v130);
    return;
  }
  unint64_t v108 = v146;
  id v179 = *(id *)(v105 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v179)(v146, v104, v23);
  uint64_t v109 = (uint64_t)v165;
  uint64_t v104 = v143;
  sub_256141A98((uint64_t)v165, v143, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
  if (v106(v104, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v108, v23);
    sub_256141B18(v109, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30]);
    uint64_t v107 = v166;
    goto LABEL_39;
  }
  ((void (*)(char *, uint64_t, uint64_t))v179)(v142, v104, v23);
  uint64_t v110 = sub_256177C18();
  long long v111 = v139;
  if (!v110) {
    goto LABEL_44;
  }
  long long v112 = (void *)v110;
  sub_256177B98();

  uint64_t v113 = sub_256177C18();
  uint64_t v114 = v137;
  if (v113)
  {
    uint64_t v115 = (void *)v113;
    sub_256177B98();

    uint64_t v116 = v138;
    sub_256177D18();
    sub_256177D38();
    uint64_t v178 = (void (*)(char *, uint64_t))v111[1];
    id v179 = v111 + 1;
    v178(v116, v114);
    sub_256141CE4((unint64_t *)&unk_269F476D0, MEMORY[0x263F090E8]);
    if (sub_256177E68())
    {
      uint64_t v117 = &v144[*(int *)(v145 + 48)];
      uint64_t v118 = i;
      uint64_t v119 = (void (*)(void))v111[2];
      v119();
      uint64_t v120 = (void (*)(char *, char *, uint64_t))v111[4];
      uint64_t v177 = (void (*)(void))v117;
      v120(v117, v118, v114);
      uint64_t v121 = v134;
      uint64_t v122 = &v134[*(int *)(v145 + 48)];
      ((void (*)(char *, char *, uint64_t))v119)(v134, v144, v114);
      ((void (*)(char *, char *, uint64_t))v119)(v122, v117, v114);
      uint64_t v123 = (uint64_t)v133;
      v120(v133, v121, v114);
      uint64_t v124 = v178;
      v178(v122, v114);
      uint64_t v125 = &v121[*(int *)(v145 + 48)];
      v120(v121, v144, v114);
      v120(v125, (char *)v177, v114);
      uint64_t v126 = v136;
      v120((char *)(v123 + *(int *)(v136 + 36)), v125, v114);
      v124(v121, v114);
      uint64_t v127 = v124;
      uint64_t v128 = (uint64_t)v131;
      sub_256141A30(v123, (uint64_t)v131, (uint64_t (*)(void))sub_2560D3AB8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v135 + 56))(v128, 0, 1, v126);
      sub_256141A98(v128, (uint64_t)v132, (unint64_t *)&unk_269F476C0, (uint64_t (*)(uint64_t))sub_2560D3AB8);
      sub_256177B18();
      sub_256141B18(v128, (unint64_t *)&unk_269F476C0, (uint64_t (*)(uint64_t))sub_2560D3AB8);
      v127(v141, v114);
      v127(v140, v114);
      uint64_t v129 = *(void (**)(char *, uint64_t))(v148 + 8);
      v129(v142, v23);
      v129(v146, v23);
      uint64_t v107 = (uint64_t)v165;
      uint64_t v104 = v166;
      goto LABEL_39;
    }
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_45:
  __break(1u);
}

void sub_25613D618()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_256175B68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  uint64_t v7 = sub_256175B58();
  os_log_type_t v8 = sub_256178238();
  if (os_log_type_enabled(v7, v8))
  {
    v17[0] = v3;
    uint64_t v9 = swift_slowAlloc();
    v17[1] = ObjectType;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = sub_256178978();
    v17[2] = sub_255FB29A8(v12, v13, &v18);
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v7, v8, "[%{public}s] preferred content size changed", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v11, -1, -1);
    MEMORY[0x25A2A1E90](v10, -1, -1);

    (*(void (**)(char *, void))(v4 + 8))(v6, v17[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  os_log_type_t v14 = (void *)sub_256177C38();
  sub_25613A7E4();
  sub_256177AB8();

  id v15 = objc_msgSend(v1, sel_collectionView);
  if (v15)
  {
    uint64_t v16 = v15;
    objc_msgSend(v15, sel_reloadData);
  }
  else
  {
    __break(1u);
  }
}

void sub_25613D870(void *a1)
{
  id v1 = a1;
  sub_25613D618();
}

void sub_25613D8B8()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v0 = sub_256175868();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v33 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256175A58();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256175B68();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  uint64_t v11 = sub_256175B58();
  os_log_type_t v12 = sub_256178238();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v29 = v3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v30 = v1;
    os_log_type_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v31 = v0;
    uint64_t v16 = v15;
    uint64_t v36 = v15;
    uint64_t v28 = v4;
    *(_DWORD *)os_log_type_t v14 = 136446210;
    uint64_t v17 = sub_256178978();
    uint64_t ObjectType = v7;
    uint64_t v35 = sub_255FB29A8(v17, v18, &v36);
    uint64_t v4 = v28;
    uint64_t v3 = v29;
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v11, v12, "[%{public}s] scrolling to today's date", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    uint64_t v0 = v31;
    MEMORY[0x25A2A1E90](v19, -1, -1);
    uint64_t v20 = v14;
    uint64_t v1 = v30;
    MEMORY[0x25A2A1E90](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, ObjectType);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  id v21 = objc_msgSend(v34, sel_collectionView);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_256177C18();
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      uint64_t v25 = v33;
      sub_256175858();
      sub_256177BA8();

      (*(void (**)(char *, uint64_t))(v1 + 8))(v25, v0);
      uint64_t v26 = (void *)sub_256175A28();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      objc_msgSend(v22, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v26, 2, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_25613DC78(void *a1)
{
  id v1 = a1;
  sub_25613D8B8();
}

id StateOfMindCalendarViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void StateOfMindCalendarViewController.init(collectionViewLayout:)()
{
}

void sub_25613DD34(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindCalendarViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_256177EA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void StateOfMindCalendarViewController.init(nibName:bundle:)()
{
}

void sub_25613DE10(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_25613DE44()
{
  sub_256141B18(v0 + qword_269F47650, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_269F47690;
  uint64_t v2 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + qword_269F50D30;

  return sub_255FF0E50(v3);
}

id StateOfMindCalendarViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindCalendarViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25613DF74(uint64_t a1)
{
  sub_256141B18(a1 + qword_269F47650, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_269F47690;
  uint64_t v3 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  uint64_t v4 = a1 + qword_269F50D30;

  return sub_255FF0E50(v4);
}

void StateOfMindCalendarViewController.calendarDataSource(_:cellForItemIn:date:dayComponent:indexPath:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

id StateOfMindCalendarViewController.calendarDataSource(_:spacerCellForItemIn:indexPath:)(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_256177EA8();
  uint64_t v4 = (void *)sub_256175A28();
  id v5 = objc_msgSend(a2, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v3, v4);

  return v5;
}

uint64_t StateOfMindCalendarViewController.calendarDataSource(_:headerForSectionIn:date:startOfMonthWeekday:indexPath:)(uint64_t a1, void *a2)
{
  return sub_2561414A8(a2);
}

void sub_25613E11C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

id sub_25613E130(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_256177EA8();
  uint64_t v4 = (void *)sub_256175A28();
  id v5 = objc_msgSend(a2, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v3, v4);

  return v5;
}

uint64_t sub_25613E1B4(uint64_t a1, void *a2)
{
  return sub_2561414A8(a2);
}

void StateOfMindCalendarViewController.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2, uint64_t a3)
{
  type metadata accessor for StateOfMindCalendarDayCell();
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = a2;
    sub_25613E254(v6, a3);
  }
}

void sub_25613E254(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = a1;
  uint64_t v4 = sub_2561759E8();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v73 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_256175A08();
  uint64_t v6 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256175868();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v79 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_256177DB8();
  uint64_t v76 = *(void *)(v11 - 8);
  uint64_t v77 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v68 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v67 = (char *)&v61 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v78 = (uint64_t)&v61 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v61 - v18;
  sub_25613A780(0, &qword_269F46FE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay, MEMORY[0x263F8D8F0]);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v80 = (uint64_t)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v61 - v23;
  uint64_t v25 = type metadata accessor for StateOfMindCalendarDay();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (void **)((char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = a2;
  uint64_t v29 = v2;
  uint64_t v30 = sub_25613FFE4();
  if (v30)
  {
    uint64_t v31 = (void *)v30;
    uint64_t v32 = v81 + OBJC_IVAR____TtC14MentalHealthUI26StateOfMindCalendarDayCell_day;
    swift_beginAccess();
    sub_256141A98(v32, (uint64_t)v24, &qword_269F46FE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay);
    uint64_t v65 = v26;
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    uint64_t v66 = v25;
    if (v33(v24, 1, v25) == 1)
    {
      sub_256141B18((uint64_t)v24, &qword_269F46FE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay);
      id v61 = v31;
      objc_msgSend(v31, sel_dayIndex);
      id v63 = v19;
      sub_256177D68();
      uint64_t v64 = v29;
      id v34 = *(void **)(v29 + qword_269F47668);
      id v35 = objc_msgSend(v34, sel_calendar);
      sub_256175988();

      sub_256177DA8();
      id v62 = *(void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v36 = v72;
      v62(v8, v72);
      id v37 = objc_msgSend(v34, sel_calendar);
      sub_256175988();

      uint64_t v38 = v73;
      uint64_t v39 = v74;
      uint64_t v40 = v75;
      (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, *MEMORY[0x263F07870], v75);
      uint64_t v41 = sub_2561759F8();
      uint64_t v42 = v38;
      uint64_t v43 = v63;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v40);
      uint64_t v44 = v64;
      v62(v8, v36);
      uint64_t v46 = v76;
      uint64_t v45 = v77;
      uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(v76 + 16);
      v47(v78, v43, v77);
      id v48 = sub_256139940();
      id v49 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v41);
      id v50 = objc_msgSend(v48, sel_stringFromNumber_, v49);

      if (!v50)
      {
        __break(1u);
        return;
      }
      uint64_t v51 = sub_256177EE8();
      uint64_t v75 = v52;

      v47((uint64_t)v67, v43, v45);
      uint64_t v53 = (char *)(v44 + qword_269F47690);
      swift_beginAccess();
      v47((uint64_t)v68, v53, v45);
      LOBYTE(v53) = sub_256175A98();
      uint64_t v54 = sub_256175A48();
      sub_256099120(v78, v51, v75, (char)v53, v54, (uint64_t)v28);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v79, v70);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
      uint64_t v31 = v61;
    }
    else
    {
      sub_256141A30((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
    }
    id v55 = objc_msgSend(v31, sel_dailyStateOfMind);
    uint64_t v56 = *v28;
    id v57 = v55;

    *uint64_t v28 = v55;
    sub_256098BBC();

    id v58 = objc_msgSend(v31, sel_momentaryStatesOfMind);
    sub_255FB58F8(0, (unint64_t *)&qword_269F47780);
    uint64_t v59 = sub_256178008();

    swift_bridgeObjectRelease();
    v28[1] = (void *)v59;
    sub_256098BBC();
    uint64_t v60 = v80;
    sub_256141C1C((uint64_t)v28, v80, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v60, 0, 1, v66);
    sub_25610E7C8(v60);

    sub_256141C84((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
  }
}

uint64_t sub_25613EA84(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_256175A58();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175A38();
  type metadata accessor for StateOfMindCalendarDayCell();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = a3;
    id v14 = a4;
    id v15 = a1;
    sub_25613E254(v12, (uint64_t)v10);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void StateOfMindCalendarViewController.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v98 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_256175B68();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  uint64_t v97 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v90 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v81 = (char *)&v81 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v83 = (char *)&v81 - v11;
  uint64_t v12 = sub_256175A08();
  uint64_t v86 = *(void *)(v12 - 8);
  uint64_t v87 = v12;
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25613A780(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  unsigned int v85 = (char *)&v81 - v16;
  uint64_t v91 = sub_256175868();
  uint64_t v84 = *(void *)(v91 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v91);
  uint64_t v88 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v81 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v82 = (char *)&v81 - v22;
  uint64_t v23 = sub_256177DB8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v81 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v81 - v31;
  uint64_t v33 = sub_256177C18();
  if (v33)
  {
    id v34 = (void *)v33;
    uint64_t v95 = a2;
    sub_256177B98();

    uint64_t v94 = v24;
    id v35 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    uint64_t v92 = v32;
    v35(v30, v32, v23);
    uint64_t v36 = (char *)(v3 + qword_269F47690);
    swift_beginAccess();
    uint64_t v93 = v23;
    v35(v27, v36, v23);
    sub_256175A98();
    if (sub_256175A88())
    {
      id v37 = v90;
      sub_256175B48();
      uint64_t v38 = sub_256175B58();
      os_log_type_t v39 = sub_256178238();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        v99[0] = v41;
        *(_DWORD *)uint64_t v40 = 136446210;
        uint64_t v42 = sub_256178978();
        uint64_t v100 = sub_255FB29A8(v42, v43, v99);
        sub_256178458();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255F58000, v38, v39, "[%{public}s] Ignoring date tapped in the future", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A2A1E90](v41, -1, -1);
        MEMORY[0x25A2A1E90](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v97 + 8))(v37, v96);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v93);
      uint64_t v44 = v98;
LABEL_17:
      uint64_t v80 = (void *)sub_256175A28();
      objc_msgSend(v44, sel_deselectItemAtIndexPath_animated_, v80, 1);

      return;
    }
    uint64_t v45 = v3;
    id v46 = objc_msgSend(*(id *)(v3 + qword_269F47668), sel_calendar);
    sub_256175988();

    uint64_t v47 = sub_256177C18();
    if (v47)
    {
      id v48 = (void *)v47;
      sub_256177BC8();

      uint64_t v49 = (uint64_t)v85;
      sub_256175958();
      uint64_t v50 = v84;
      uint64_t v51 = *(void (**)(char *, uint64_t))(v84 + 8);
      uint64_t v52 = v91;
      v51(v21, v91);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v14, v87);
      int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v49, 1, v52);
      uint64_t v54 = v88;
      if (v53 == 1)
      {
        sub_256141B18(v49, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
        id v55 = v81;
        sub_256175B48();
        uint64_t v56 = sub_256175B58();
        os_log_type_t v57 = sub_256178218();
        if (os_log_type_enabled(v56, v57))
        {
          id v58 = (uint8_t *)swift_slowAlloc();
          uint64_t v59 = swift_slowAlloc();
          v99[0] = v59;
          *(_DWORD *)id v58 = 136446210;
          uint64_t v60 = sub_256178978();
          uint64_t v100 = sub_255FB29A8(v60, v61, v99);
          sub_256178458();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_255F58000, v56, v57, "[%{public}s] Unable to determine tapped date", v58, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A2A1E90](v59, -1, -1);
          MEMORY[0x25A2A1E90](v58, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v97 + 8))(v55, v96);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v93);
        uint64_t v44 = v98;
      }
      else
      {
        id v62 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v82, v49, v52);
        uint64_t v63 = v50;
        uint64_t v64 = v83;
        sub_256175B48();
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v54, v62, v52);
        uint64_t v65 = sub_256175B58();
        os_log_type_t v66 = sub_256178238();
        BOOL v67 = os_log_type_enabled(v65, v66);
        uint64_t v90 = (char *)v51;
        if (v67)
        {
          uint64_t v68 = v54;
          uint64_t v69 = swift_slowAlloc();
          uint64_t v87 = swift_slowAlloc();
          v99[0] = v87;
          *(_DWORD *)uint64_t v69 = 136446466;
          uint64_t v70 = sub_256178978();
          uint64_t v100 = sub_255FB29A8(v70, v71, v99);
          sub_256178458();
          swift_bridgeObjectRelease();
          *(_WORD *)(v69 + 12) = 2082;
          sub_256141CE4((unint64_t *)&qword_269F47700, MEMORY[0x263F07490]);
          uint64_t v72 = sub_2561787E8();
          uint64_t v100 = sub_255FB29A8(v72, v73, v99);
          uint64_t v52 = v91;
          sub_256178458();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v90)(v68, v52);
          _os_log_impl(&dword_255F58000, v65, v66, "[%{public}s] Tapped cell for date: %{public}s", (uint8_t *)v69, 0x16u);
          uint64_t v74 = v87;
          swift_arrayDestroy();
          id v62 = v82;
          MEMORY[0x25A2A1E90](v74, -1, -1);
          MEMORY[0x25A2A1E90](v69, -1, -1);

          (*(void (**)(char *, uint64_t))(v97 + 8))(v83, v96);
        }
        else
        {
          v51(v54, v52);

          (*(void (**)(char *, uint64_t))(v97 + 8))(v64, v96);
        }
        uint64_t v44 = v98;
        uint64_t v76 = v92;
        uint64_t v75 = v93;
        uint64_t v77 = v45 + qword_269F50D30;
        swift_beginAccess();
        if (MEMORY[0x25A2A1F80](v77))
        {
          uint64_t v78 = *(void *)(v77 + 8);
          uint64_t v79 = swift_getObjectType();
          (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v78 + 8))(v45, v62, v79, v78);
          swift_unknownObjectRelease();
        }
        ((void (*)(char *, uint64_t))v90)(v62, v52);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v76, v75);
      }
      goto LABEL_17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_25613F66C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_256175A58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175A38();
  id v9 = a3;
  id v10 = a1;
  StateOfMindCalendarViewController.collectionView(_:didSelectItemAt:)(v9, (uint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void StateOfMindCalendarViewController.dateCacheDidUpdate(_:on:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_256175868();
  uint64_t v41 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256175A08();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256177DB8();
  uint64_t v39 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v37 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_256175B68();
  uint64_t v11 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  id v14 = sub_256175B58();
  os_log_type_t v15 = sub_256178238();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v32 = v9;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v33 = v4;
    uint64_t v19 = v18;
    v43[0] = v18;
    id v34 = v2;
    *(_DWORD *)uint64_t v17 = 136446210;
    uint64_t v30 = v17 + 4;
    uint64_t v20 = sub_256178978();
    uint64_t v42 = sub_255FB29A8(v20, v21, v43);
    uint64_t v2 = v34;
    sub_256178458();
    uint64_t v9 = v32;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v14, v15, "[%{public}s] date cache did update", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    uint64_t v4 = v33;
    MEMORY[0x25A2A1E90](v22, -1, -1);
    uint64_t v23 = v17;
    a1 = v31;
    MEMORY[0x25A2A1E90](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v36);
  id v24 = objc_msgSend(a1, sel_calendar);
  uint64_t v25 = v38;
  sub_256175988();

  sub_256175858();
  uint64_t v26 = v37;
  sub_256175948();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v7);
  uint64_t v27 = &v2[qword_269F47690];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v27, v26, v9);
  swift_endAccess();
  id v28 = objc_msgSend(v2, sel_collectionView);
  if (v28)
  {
    uint64_t v29 = v28;
    objc_msgSend(v28, sel_reloadData);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25613FBEC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_256175418();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561753F8();
  id v9 = a3;
  id v10 = a1;
  StateOfMindCalendarViewController.dateCacheDidUpdate(_:on:)(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_25613FCE4(uint64_t a1)
{
  uint64_t v2 = sub_256175A58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25613A780(0, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v21 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  void v21[2] = a1;
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v10 = v3 + 16;
    uint64_t v27 = v11;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v13 = *(void *)(v10 + 56);
    uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v23 = v13;
    id v24 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v22 = (void (**)(char *, uint64_t))(v10 - 8);
    swift_bridgeObjectRetain();
    uint64_t v26 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 40);
    v21[1] = (v10 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v27(v8, v12, v2);
      id v14 = *v26;
      (*v26)(v8, 0, 1, v2);
      if ((*v25)(v8, 1, v2) == 1) {
        break;
      }
      (*v24)(v5, v8, v2);
      id result = objc_msgSend(v28, sel_collectionView);
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v16 = result;
      uint64_t v17 = (void *)sub_256175A28();
      id v18 = objc_msgSend(v16, sel_cellForItemAtIndexPath_, v17);

      if (v18)
      {
        type metadata accessor for StateOfMindCalendarDayCell();
        uint64_t v19 = swift_dynamicCastClass();
        if (v19) {
          sub_25613E254(v19, (uint64_t)v5);
        }
      }
      (*v22)(v5, v2);
      v12 += v23;
      if (!--v9)
      {
        v14(v8, 1, 1, v2);
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
    v20(v8, 1, 1, v2);
  }
  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_25613FFE4()
{
  sub_256141994(0, &qword_269F47788, MEMORY[0x263F46270]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (uint64_t *)((char *)&v12 - v3);
  uint64_t v5 = sub_256177DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_256177C18();
  if (result)
  {
    uint64_t v10 = (void *)result;
    sub_256177B98();

    sub_256177B38();
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x263F46258])
    {
      (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v4, v1);
      uint64_t v11 = *v4;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
      uint64_t v11 = 0;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2561401F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (!a2)
  {
    uint64_t v10 = 0;
    uint64_t v11 = a4[3];
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v10 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  uint64_t v11 = a4[3];
  if (!v11) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a4, v11);
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  uint64_t v16 = sub_256178818();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
LABEL_6:
  id v17 = objc_msgSend(v6, sel_initWithTitle_style_target_action_, v10, a3, v16, a5);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_25614037C(uint64_t (*a1)(void, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v71 = a2;
  sub_2560A8988();
  uint64_t v67 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  os_log_type_t v66 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v65 = (char *)v58 - v8;
  sub_2560D3AB8();
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v83 = (char *)v58 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v81 = (uint64_t)v58 - v15;
  uint64_t v70 = sub_256175A58();
  uint64_t v73 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_256177DB8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v64 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v63 = (char *)v58 - v22;
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)v58 - v23;
  uint64_t v82 = v10;
  uint64_t v25 = (uint64_t)a1 + *(int *)(v10 + 36);
  uint64_t v26 = sub_256141CE4((unint64_t *)&unk_269F467B0, MEMORY[0x263F090E8]);
  uint64_t v68 = v25;
  uint64_t v62 = v26;
  sub_256178488();
  uint64_t v27 = v86;
  uint64_t result = MEMORY[0x263F8EE78];
  if (v86)
  {
    uint64_t v86 = MEMORY[0x263F8EE78];
    uint64_t v29 = &v86;
    uint64_t v30 = v27;
    sub_2560E883C(0, v27 & ~(v27 >> 63), 0);
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t *))(v18 + 16);
    uint64_t v72 = v24;
    uint64_t v79 = v31;
    uint64_t v80 = v18 + 16;
    uint64_t result = ((uint64_t (*)(char *, uint64_t (*)(void, void), uint64_t))v31)(v24, a1, v17);
    if ((v30 & 0x8000000000000000) == 0)
    {
      uint64_t v32 = v30;
      unint64_t v61 = a1;
      v58[1] = v2;
      uint64_t v60 = v73 + 32;
      uint64_t v78 = (void (**)(char *, char *, uint64_t *))(v18 + 32);
      uint64_t v59 = (void (**)(char *, uint64_t *))(v18 + 8);
      while (v32)
      {
        uint64_t v74 = v32;
        uint64_t result = sub_256177C18();
        if (!result) {
          goto LABEL_21;
        }
        uint64_t v33 = (void *)result;
        id v34 = v69;
        sub_256177BB8();

        uint64_t v35 = v86;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v30 = (uint64_t)v61;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2560E883C(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v86;
        }
        unint64_t v38 = *(void *)(v35 + 16);
        unint64_t v37 = *(void *)(v35 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_2560E883C(v37 > 1, v38 + 1, 1);
          uint64_t v35 = v86;
        }
        *(void *)(v35 + 16) = v38 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))(v35+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v38, v34, v70);
        uint64_t v86 = v35;
        uint64_t v3 = sub_256141CE4((unint64_t *)&unk_269F476D0, MEMORY[0x263F090E8]);
        uint64_t v39 = v68;
        uint64_t v29 = (uint64_t *)v17;
        if ((sub_256177E68() & 1) == 0) {
          goto LABEL_17;
        }
        uint64_t v77 = v3;
        uint64_t v40 = v67;
        uint64_t v41 = v65;
        uint64_t v42 = &v65[*(int *)(v67 + 48)];
        uint64_t v43 = v30;
        uint64_t v44 = v79;
        uint64_t v29 = (uint64_t *)v17;
        v79(v65, v43, (uint64_t *)v17);
        uint64_t v45 = v42;
        uint64_t v76 = v42;
        v44(v42, v39, v29);
        id v46 = v66;
        uint64_t v47 = &v66[*(int *)(v40 + 48)];
        v44(v66, (uint64_t)v41, v29);
        v44(v47, (uint64_t)v45, v29);
        id v48 = (char *)*v78;
        (*v78)(v83, v46, v29);
        uint64_t v75 = *v59;
        v75(v47, v29);
        uint64_t v49 = &v46[*(int *)(v40 + 48)];
        ((void (*)(char *, char *, uint64_t *))v48)(v46, v41, v29);
        ((void (*)(char *, char *, uint64_t *))v48)(v49, v76, v29);
        uint64_t v50 = v83;
        uint64_t v51 = &v83[*(int *)(v82 + 36)];
        uint64_t v76 = v48;
        ((void (*)(char *, char *, uint64_t *))v48)(v51, v49, v29);
        uint64_t v30 = (uint64_t)v75;
        v75(v46, v29);
        uint64_t v52 = (uint64_t)v50;
        uint64_t v53 = v81;
        sub_256141A30(v52, v81, (uint64_t (*)(void))sub_2560D3AB8);
        uint64_t v54 = (uint64_t *)v72;
        LOBYTE(v41) = sub_256177E68();
        uint64_t v3 = (uint64_t)v64;
        v79(v64, (uint64_t)v54, v29);
        sub_256141C1C(v53, v84, (uint64_t (*)(void))sub_2560D3AB8);
        if ((v41 & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v55 = v84;
        char v56 = sub_256177E48();
        sub_256141C84(v55, (uint64_t (*)(void))sub_2560D3AB8);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t *))v30)(v3, v29);
        if ((v56 & 1) == 0) {
          goto LABEL_19;
        }
        uint64_t v17 = (uint64_t)v29;
        sub_256141C84(v81, (uint64_t (*)(void))sub_2560D3AB8);
        uint64_t v85 = 1;
        os_log_type_t v57 = v63;
        uint64_t v29 = v54;
        sub_256178478();
        ((void (*)(uint64_t *, uint64_t))v30)(v54, v17);
        ((void (*)(uint64_t *, char *, uint64_t))v76)(v54, v57, v17);
        uint64_t v32 = v74 - 1;
        if (v74 == 1)
        {
          ((void (*)(uint64_t *, uint64_t))v30)(v54, v17);
          return v86;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      sub_256141C84(v84, (uint64_t (*)(void))sub_2560D3AB8);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t *))v30)(v3, v29);
LABEL_19:
      __break(1u);
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_256140B64(uint64_t a1, uint64_t a2)
{
  sub_25613A780(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StateOfMindCalendarViewController()
{
  uint64_t result = qword_269F47708;
  if (!qword_269F47708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_256140C44()
{
  unint64_t result = qword_269F476B0;
  if (!qword_269F476B0)
  {
    sub_256140C80();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F476B0);
  }
  return result;
}

unint64_t sub_256140C80()
{
  unint64_t result = qword_269F476B8;
  if (!qword_269F476B8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F476B8);
  }
  return result;
}

void sub_256140CE0()
{
  if (!qword_269F476E0)
  {
    type metadata accessor for StateOfMindCalendarTitleView();
    sub_256141CE4(&qword_269F476E8, (void (*)(uint64_t))type metadata accessor for StateOfMindCalendarTitleView);
    unint64_t v0 = sub_2561767C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F476E0);
    }
  }
}

uint64_t sub_256140D74()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_256140DAC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256140DE4(uint64_t (*a1)(void, void))
{
  return sub_25613B974(a1, *(void *)(v1 + 16));
}

void sub_256140DEC()
{
  if (!qword_269F476F0)
  {
    sub_2560D3AB8();
    unint64_t v0 = sub_256175C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F476F0);
    }
  }
}

void sub_256140E54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v69 = a3;
  uint64_t v64 = a1;
  sub_25613A780(0, &qword_269F46FE8, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindCalendarDay, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v65 = (char *)&v58 - v8;
  sub_256141994(0, &qword_269F47788, MEMORY[0x263F46270]);
  uint64_t v10 = v9;
  uint64_t v68 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v67 = (void **)((char *)&v58 - v11);
  uint64_t v12 = type metadata accessor for StateOfMindCalendarDay();
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v12);
  os_log_type_t v66 = (void **)((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_256177DB8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v58 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v70 = (char *)&v58 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v58 - v24;
  uint64_t v26 = sub_256177C18();
  if (!v26)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v27 = (void *)v26;
  uint64_t v59 = v10;
  sub_256177B98();

  uint64_t v58 = a4;
  uint64_t v61 = v15;
  id v28 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v28(v70, v25, v14);
  uint64_t v60 = v5;
  id v29 = sub_256139940();
  id v30 = objc_allocWithZone(NSNumber);
  uint64_t v31 = v14;
  id v32 = objc_msgSend(v30, sel_initWithInteger_, v69);
  id v33 = objc_msgSend(v29, sel_stringFromNumber_, v32);

  if (!v33)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v34 = sub_256177EE8();
  uint64_t v36 = v35;

  v28(v21, v25, v31);
  unint64_t v37 = (char *)(v60 + qword_269F47690);
  swift_beginAccess();
  uint64_t v69 = v31;
  v28(v18, v37, v31);
  char v38 = sub_256175A98();
  uint64_t v39 = sub_256175A48();
  uint64_t v40 = v66;
  sub_256099120((uint64_t)v70, v34, v36, v38, v39, (uint64_t)v66);
  uint64_t v41 = v67;
  uint64_t v70 = v25;
  sub_256177B38();
  uint64_t v42 = v68;
  uint64_t v43 = v59;
  if ((*(unsigned int (**)(void **, uint64_t))(v68 + 88))(v41, v59) == *MEMORY[0x263F46258])
  {
    (*(void (**)(void **, uint64_t))(v42 + 96))(v41, v43);
    uint64_t v44 = *v41;
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v42 + 8))(v41, v43);
    uint64_t v44 = 0;
  }
  uint64_t v45 = (uint64_t)v65;
  uint64_t v47 = v62;
  uint64_t v46 = v63;
  id v48 = objc_msgSend(v44, sel_dailyStateOfMind);
  uint64_t v49 = *v40;
  id v50 = v48;

  *uint64_t v40 = v48;
  sub_256098BBC();

  uint64_t v51 = v69;
  if (v44)
  {
    id v52 = objc_msgSend(v44, sel_momentaryStatesOfMind);
    sub_255FB58F8(0, (unint64_t *)&qword_269F47780);
    uint64_t v53 = sub_256178008();
  }
  else
  {
    uint64_t v53 = MEMORY[0x263F8EE78];
  }
  uint64_t v54 = v64;
  swift_bridgeObjectRelease();
  v40[1] = (void *)v53;
  sub_256098BBC();
  uint64_t v55 = (void *)sub_256177EA8();
  char v56 = (void *)sub_256175A28();
  id v57 = objc_msgSend(v54, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v55, v56);

  type metadata accessor for StateOfMindCalendarDayCell();
  swift_dynamicCastClassUnconditional();
  sub_256141C1C((uint64_t)v40, v45, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v45, 0, 1, v46);
  sub_25610E7C8(v45);

  sub_256141C84((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for StateOfMindCalendarDay);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v70, v51);
}

uint64_t sub_2561414A8(void *a1)
{
  uint64_t v2 = (void *)*MEMORY[0x263F833F0];
  sub_256177C08();
  id v3 = v2;
  sub_256177BF8();
  uint64_t v4 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_256175A28();
  id v6 = objc_msgSend(a1, sel_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_, v3, v4, v5);

  uint64_t v7 = swift_dynamicCastClassUnconditional();
  id v8 = sub_2561399B4();
  uint64_t v9 = (void *)sub_2561757F8();
  id v10 = objc_msgSend(v8, sel_stringFromDate_, v9);

  sub_256177EE8();
  sub_256177BE8();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_256141604@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + qword_269F50D30;
  swift_beginAccess();
  uint64_t result = MEMORY[0x25A2A1F80](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_256141660(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + qword_269F50D30;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of StateOfMindCalendarViewControllerDelegate.calendarView(_:didSelectDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void sub_2561416D8()
{
  sub_25613A780(319, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_256177DB8();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t method lookup function for StateOfMindCalendarViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindCalendarViewController);
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.delegate.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x263F8EED0] & *v0)
                              + 184))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.delegate.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x263F8EED0] & *v0)
                              + 192))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.delegate.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x263F8EED0] & *v0)
                              + 200))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.__allocating_init(healthStore:dateToFocusOn:verticalSizeClass:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController + v0 + 208))();
}

uint64_t dispatch thunk of StateOfMindCalendarViewController.preferredContentSizeCategoryDidChange()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for StateOfMindCalendarViewController
                              + (*MEMORY[0x263F8EED0] & *v0)
                              + 216))();
}

uint64_t sub_25614198C()
{
  return type metadata accessor for StateOfMindCalendarViewController();
}

void sub_256141994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StateOfMindCalendarDataSource();
    uint64_t v7 = sub_256141CE4(&qword_269F47678, (void (*)(uint64_t))type metadata accessor for StateOfMindCalendarDataSource);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256141A30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_256141A98(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_25613A780(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_256141B18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_25613A780(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_256141B88(uint64_t a1, uint64_t a2)
{
  sub_25613A780(0, (unint64_t *)&unk_269F47790, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256141C1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256141C84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256141CE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256141D2C(void *a1, void *a2, char a3)
{
  id v6 = objc_msgSend(self, sel_stateOfMindType);
  id v7 = objc_msgSend(a1, sel_displayTypeController);
  id v8 = objc_msgSend(v7, sel_displayTypeForObjectType_, v6);

  if (v8)
  {
    sub_256177AA8();
    id v9 = objc_msgSend(a1, sel_unitController);
    id v10 = (void *)MEMORY[0x25A2A0520](v8, v9);

    if (a3)
    {
      id v11 = objc_msgSend(v10, sel_yAxis);

      if (v11)
      {
        id v12 = objc_msgSend(v8, sel_localization);
        id v13 = objc_msgSend(v12, sel_shortenedDisplayName);

        if (!v13)
        {
          sub_256177EE8();
          id v13 = (id)sub_256177EA8();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(self, sel_setStackedSeriesLegend_title_, v10, v13);
      }
    }
    id v14 = objc_allocWithZone((Class)type metadata accessor for StateOfMindChartTapOutFormatter());
    id v15 = v10;
    id v16 = v8;
    id v17 = objc_msgSend(v14, sel_init);
    id v18 = objc_msgSend(v16, sel_sampleType);
    id v19 = objc_msgSend(v18, sel_code);

    objc_msgSend(objc_allocWithZone(MEMORY[0x263F467D0]), sel_initWithGraphSeries_baseDisplayType_valueFormatter_dataTypeCode_, v15, v16, v17, v19);
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46400]), sel_init);
    id v21 = sub_256141FCC(v16, a1, a2);
    objc_msgSend(v20, sel_setChartCache_, v21);
    objc_msgSend(v15, sel_setDataSource_, v20);
  }
  else
  {
    __break(1u);
  }
}

id sub_256141FCC(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_256175B68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v50 - v11;
  id v13 = objc_msgSend(a2, sel_chartDataCacheController);
  id v14 = objc_msgSend(v13, sel_findCustomCachesForDisplayType_, a1);

  if (v14)
  {
    sub_255FB58F8(0, &qword_269F477B8);
    unint64_t v15 = sub_256178008();

    id v16 = a3;
    id v17 = sub_25614265C(v15, a3);
    swift_bridgeObjectRelease();

    if (v17)
    {
      id v18 = v17;
      sub_256175B48();
      id v19 = v16;
      id v20 = sub_256175B58();
      os_log_type_t v21 = sub_256178238();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v52 = v7;
        uint64_t v23 = v22;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v56 = v24;
        *(_DWORD *)uint64_t v23 = 136446467;
        uint64_t v25 = sub_256178978();
        uint64_t v51 = v6;
        uint64_t v55 = sub_255FB29A8(v25, v26, &v56);
        sub_256178458();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2081;
        uint64_t v55 = (uint64_t)a3;
        sub_2561425F4();
        id v27 = v19;
        uint64_t v28 = sub_256177F08();
        uint64_t v55 = sub_255FB29A8(v28, v29, &v56);
        sub_256178458();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255F58000, v20, v21, "[%{public}s] Found cache for state of mind predicate: %{private}s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A2A1E90](v24, -1, -1);
        MEMORY[0x25A2A1E90](v23, -1, -1);

        (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v51);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      }
      return v18;
    }
    id v53 = a1;
  }
  else
  {
    id v53 = a1;
    id v16 = a3;
  }
  sub_256175B48();
  id v30 = v16;
  uint64_t v31 = sub_256175B58();
  os_log_type_t v32 = sub_256178238();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v56 = v34;
    *(_DWORD *)uint64_t v33 = 136446467;
    uint64_t v51 = v6;
    uint64_t v35 = sub_256178978();
    uint64_t v54 = (uint64_t)a3;
    uint64_t v52 = v7;
    uint64_t v55 = sub_255FB29A8(v35, v36, &v56);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2081;
    uint64_t v55 = v54;
    sub_2561425F4();
    id v37 = v30;
    id v38 = v30;
    uint64_t v39 = a2;
    id v40 = v37;
    uint64_t v41 = sub_256177F08();
    uint64_t v55 = sub_255FB29A8(v41, v42, &v56);
    sub_256178458();

    a2 = v39;
    id v30 = v38;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v31, v32, "[%{public}s] Creating cache for state of mind predicate: %{private}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v34, -1, -1);
    MEMORY[0x25A2A1E90](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v51);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  id v43 = v53;
  id v44 = objc_msgSend(a2, sel_healthStore);
  objc_allocWithZone((Class)sub_256177C68());
  id v45 = v30;
  uint64_t v46 = (void *)sub_256177C48();
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46410]), sel_init);
  objc_msgSend(v18, sel_setDataSource_, v46);
  id v47 = objc_msgSend(self, sel_sharedOperationManager);
  objc_msgSend(v18, sel_setOperationManager_, v47);

  id v48 = objc_msgSend(a2, sel_chartDataCacheController);
  objc_msgSend(v48, sel_addCustomChartCache_forDisplayType_, v18, v43);

  return v18;
}

void sub_2561425F4()
{
  if (!qword_269F477B0)
  {
    sub_255FB58F8(255, &qword_269F46AA0);
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F477B0);
    }
  }
}

void *sub_25614265C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_256178678();
    if (v21) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v21 = v5;
    if (v5)
    {
LABEL_3:
      uint64_t v19 = v3;
      unint64_t v20 = v4;
      unint64_t v22 = v4 & 0xC000000000000001;
      uint64_t v6 = 4;
      uint64_t v3 = v21;
      do
      {
        if (v22) {
          id v7 = (id)MEMORY[0x25A2A1000](v6 - 4, v4);
        }
        else {
          id v7 = *(id *)(v4 + 8 * v6);
        }
        uint64_t v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        id v10 = objc_msgSend(v7, sel_dataSource);
        sub_256177C68();
        if (swift_dynamicCastClass())
        {
          uint64_t v11 = (void *)sub_256177C58();
          if (v11)
          {
            id v12 = v11;
            id v13 = objc_msgSend(v11, sel_predicate);

            if (!a2)
            {
              if (!v13) {
                goto LABEL_25;
              }
LABEL_21:

              swift_unknownObjectRelease();
              goto LABEL_5;
            }
          }
          else
          {
            if (!a2)
            {
LABEL_25:
              swift_unknownObjectRelease();
LABEL_26:
              swift_bridgeObjectRelease();
              return v8;
            }
            id v13 = 0;
          }
          id v14 = objc_msgSend(a2, sel_predicate, v19);
          unint64_t v15 = v14;
          if (v13)
          {
            if (!v14) {
              goto LABEL_21;
            }
            sub_255FB58F8(0, &qword_269F477C0);
            id v16 = v13;
            unint64_t v4 = v20;
            char v17 = sub_256178438();

            uint64_t v3 = v21;
            swift_unknownObjectRelease();
            if (v17) {
              goto LABEL_26;
            }
          }
          else
          {
            swift_unknownObjectRelease();
            if (!v15) {
              goto LABEL_26;
            }
          }
        }
        else
        {

          swift_unknownObjectRelease();
        }
LABEL_5:
        ++v6;
      }
      while (v9 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Color.init(valenceClassification:variant:colorScheme:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  sub_2561434D0();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  uint64_t v11 = &v9[*(int *)(v7 + 72)];
  *(void *)uint64_t v9 = a1;
  v9[8] = v10;
  uint64_t v12 = sub_256175D98();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a3, v12);
  switch(v10)
  {
    case 1:
      int v18 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v11, v12);
      if (v18 == *MEMORY[0x263F18508])
      {
        switch(a1)
        {
          case 1:
            CGFloat v15 = 0.815686275;
            CGFloat v16 = 0.776470588;
            CGFloat v17 = 0.941176471;
            break;
          case 2:
            CGFloat v15 = 0.874509804;
            CGFloat v16 = 0.898039216;
            CGFloat v17 = 1.0;
            break;
          case 3:
            CGFloat v15 = 0.807843137;
            CGFloat v16 = 0.847058824;
            CGFloat v17 = 0.905882353;
            break;
          case 5:
            CGFloat v15 = 0.807843137;
            CGFloat v16 = 0.901960784;
            CGFloat v17 = 0.643137255;
            break;
          case 6:
            CGFloat v15 = 0.964705882;
            CGFloat v16 = 0.831372549;
            CGFloat v17 = 0.635294118;
            break;
          case 7:
            CGFloat v16 = 0.917647059;
            uint64_t v23 = 0x3FEC3C3C3C3C3C3CLL;
            goto LABEL_49;
          default:
            goto LABEL_23;
        }
        goto LABEL_50;
      }
      if (v18 != *MEMORY[0x263F184F8])
      {
LABEL_23:
        CGFloat v15 = 0.858823529;
        CGFloat v16 = 0.882352941;
        CGFloat v17 = 0.88627451;
        goto LABEL_50;
      }
      break;
    case 2:
      switch(a1)
      {
        case 1:
          CGFloat v15 = 0.207843137;
          CGFloat v16 = 0.121568627;
          CGFloat v17 = 0.462745098;
          break;
        case 2:
          CGFloat v15 = 0.235294118;
          CGFloat v16 = 0.298039216;
          CGFloat v17 = 0.760784314;
          break;
        case 3:
          CGFloat v15 = 0.133333333;
          CGFloat v16 = 0.392156863;
          CGFloat v17 = 0.749019608;
          break;
        case 5:
          CGFloat v15 = 0.431372549;
          CGFloat v16 = 0.694117647;
          CGFloat v17 = 0.0;
          break;
        case 6:
          CGFloat v16 = 0.603921569;
          uint64_t v23 = 0x3F88181818181818;
LABEL_49:
          CGFloat v17 = *(double *)&v23;
          CGFloat v15 = 1.0;
          break;
        case 7:
          CGFloat v15 = 0.984313725;
          CGFloat v16 = 0.454901961;
          CGFloat v17 = 0.262745098;
          break;
        default:
          CGFloat v15 = 0.42745098;
          CGFloat v16 = 0.682352941;
          uint64_t v19 = 0x3838383838383838;
          goto LABEL_27;
      }
      goto LABEL_50;
    case 3:
      switch(a1)
      {
        case 1:
          CGFloat v15 = 0.611764706;
          CGFloat v16 = 0.423529412;
          uint64_t v19 = 0x7878787878787878;
LABEL_27:
          *(void *)&CGFloat v17 = v19 & 0xFFFFFFFFFFFFLL | 0x3FE8000000000000;
          break;
        case 2:
          CGFloat v15 = 0.556862745;
          CGFloat v16 = 0.674509804;
          CGFloat v17 = 0.996078431;
          break;
        case 3:
          CGFloat v15 = 0.635294118;
          CGFloat v16 = 0.811764706;
          CGFloat v17 = 1.0;
          break;
        case 5:
          CGFloat v15 = 0.71372549;
          CGFloat v16 = 0.858823529;
          CGFloat v17 = 0.274509804;
          break;
        case 6:
          CGFloat v15 = 0.996078431;
          CGFloat v16 = 0.823529412;
          goto LABEL_43;
        case 7:
          CGFloat v15 = 0.988235294;
          CGFloat v16 = 0.745098039;
          CGFloat v17 = 0.474509804;
          break;
        default:
          CGFloat v15 = 0.796078431;
          CGFloat v16 = 0.878431373;
          CGFloat v17 = 0.909803922;
          break;
      }
      goto LABEL_50;
    default:
      int v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v11, v12);
      if (v14 == *MEMORY[0x263F18508])
      {
        switch(a1)
        {
          case 1:
            CGFloat v15 = 0.623529412;
            CGFloat v16 = 0.588235294;
            CGFloat v17 = 0.733333333;
            goto LABEL_50;
          case 2:
            CGFloat v15 = 0.666666667;
            CGFloat v16 = 0.709803922;
            goto LABEL_39;
          case 3:
            CGFloat v15 = 0.68627451;
            CGFloat v16 = 0.752941176;
LABEL_39:
            CGFloat v17 = 0.878431373;
            break;
          case 5:
            CGFloat v15 = 0.682352941;
            CGFloat v16 = 0.788235294;
            CGFloat v17 = 0.501960784;
            break;
          case 6:
            CGFloat v15 = 0.956862745;
            CGFloat v16 = 0.819607843;
            CGFloat v17 = 0.619607843;
            break;
          case 7:
            CGFloat v15 = 0.996078431;
            CGFloat v16 = 0.737254902;
LABEL_43:
            CGFloat v17 = 0.392156863;
            break;
          default:
            goto LABEL_22;
        }
      }
      else
      {
        if (v14 != *MEMORY[0x263F184F8]) {
          goto LABEL_22;
        }
        CGFloat v15 = 0.0;
        CGFloat v16 = 0.0;
        CGFloat v17 = 0.0;
      }
      goto LABEL_50;
  }
  switch(a1)
  {
    case 1:
      GenericRGB = CGColorCreateGenericRGB(0.623529412, 0.588235294, 0.733333333, 1.0);
      if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
        goto LABEL_51;
      }
      uint64_t v21 = sub_256178198();
      if (!v21) {
        goto LABEL_51;
      }
      unint64_t v22 = *(void *)(v21 + 16);
      if (!v22)
      {
        __break(1u);
        goto LABEL_89;
      }
      if (v22 == 1)
      {
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
        JUMPOUT(0x2561431B8);
      }
      if (v22 >= 3)
      {
LABEL_87:
        CGFloat v33 = *(double *)(v21 + 32) * 0.5;
        CGFloat v34 = *(double *)(v21 + 40) * 0.5;
        double v35 = *(double *)(v21 + 48);
        swift_bridgeObjectRelease();
        CGColorRef v36 = CGColorCreateGenericRGB(v33, v34, v35 * 0.5, 1.0);

        GenericRGB = v36;
        goto LABEL_51;
      }
      __break(1u);
LABEL_22:
      CGFloat v15 = 0.741176471;
      CGFloat v16 = 0.82745098;
      CGFloat v17 = 0.839215686;
LABEL_50:
      GenericRGB = CGColorCreateGenericRGB(v15, v16, v17, 1.0);
LABEL_51:
      uint64_t v24 = MEMORY[0x25A29FE60](GenericRGB);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v25(a3, v12);
      v25((uint64_t)v11, v12);
      return v24;
    case 2:
      GenericRGB = CGColorCreateGenericRGB(0.666666667, 0.709803922, 0.878431373, 1.0);
      if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
        goto LABEL_51;
      }
      uint64_t v21 = sub_256178198();
      if (!v21) {
        goto LABEL_51;
      }
      unint64_t v27 = *(void *)(v21 + 16);
      if (!v27) {
        goto LABEL_90;
      }
      if (v27 == 1) {
        goto LABEL_91;
      }
      if (v27 >= 3) {
        goto LABEL_87;
      }
      __break(1u);
LABEL_58:
      GenericRGB = CGColorCreateGenericRGB(0.68627451, 0.752941176, 0.878431373, 1.0);
      if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
        goto LABEL_51;
      }
      uint64_t v21 = sub_256178198();
      if (!v21) {
        goto LABEL_51;
      }
      unint64_t v28 = *(void *)(v21 + 16);
      if (!v28) {
        goto LABEL_92;
      }
      if (v28 == 1) {
        goto LABEL_93;
      }
      if (v28 >= 3) {
        goto LABEL_87;
      }
      __break(1u);
LABEL_64:
      GenericRGB = CGColorCreateGenericRGB(0.741176471, 0.82745098, 0.839215686, 1.0);
      if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
        goto LABEL_51;
      }
      uint64_t v21 = sub_256178198();
      if (!v21) {
        goto LABEL_51;
      }
      unint64_t v29 = *(void *)(v21 + 16);
      if (!v29) {
        goto LABEL_94;
      }
      if (v29 == 1) {
        goto LABEL_95;
      }
      if (v29 >= 3) {
        goto LABEL_87;
      }
      __break(1u);
LABEL_70:
      GenericRGB = CGColorCreateGenericRGB(0.682352941, 0.788235294, 0.501960784, 1.0);
      if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
        goto LABEL_51;
      }
      uint64_t v21 = sub_256178198();
      if (!v21) {
        goto LABEL_51;
      }
      unint64_t v30 = *(void *)(v21 + 16);
      if (!v30) {
        goto LABEL_96;
      }
      if (v30 == 1) {
        goto LABEL_97;
      }
      if (v30 >= 3) {
        goto LABEL_87;
      }
      __break(1u);
LABEL_76:
      GenericRGB = CGColorCreateGenericRGB(0.956862745, 0.819607843, 0.619607843, 1.0);
      if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
        goto LABEL_51;
      }
      uint64_t v21 = sub_256178198();
      if (!v21) {
        goto LABEL_51;
      }
      unint64_t v31 = *(void *)(v21 + 16);
      if (!v31) {
        goto LABEL_98;
      }
      if (v31 == 1) {
        goto LABEL_99;
      }
      if (v31 >= 3) {
        goto LABEL_87;
      }
      __break(1u);
LABEL_82:
      GenericRGB = CGColorCreateGenericRGB(0.996078431, 0.737254902, 0.392156863, 1.0);
      if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
        goto LABEL_51;
      }
      uint64_t v21 = sub_256178198();
      if (!v21) {
        goto LABEL_51;
      }
      unint64_t v32 = *(void *)(v21 + 16);
      if (!v32) {
        goto LABEL_100;
      }
      if (v32 == 1) {
        goto LABEL_101;
      }
      if (v32 >= 3) {
        goto LABEL_87;
      }
      goto LABEL_102;
    case 3:
      goto LABEL_58;
    case 5:
      goto LABEL_70;
    case 6:
      goto LABEL_76;
    case 7:
      goto LABEL_82;
    default:
      goto LABEL_64;
  }
}

uint64_t Color.init(valence:variant:colorScheme:)(unsigned char *a1, uint64_t a2, double a3)
{
  uint64_t v6 = sub_256175D98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*a1)
  {
    case 2:
    case 3:
      double v10 = fmax(fmin(a3, 1.0), -1.0);
      break;
    default:
      double v10 = fmax(fmin(a3, 1.0), -1.0);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F184F8], v6);
      sub_256175D88();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      break;
  }
  swift_getKeyPath();
  sub_2560AAD50(v10);
  uint64_t v12 = v11;
  swift_release();
  uint64_t v13 = MEMORY[0x25A29FE60](v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v13;
}

void sub_2561434D0()
{
  if (!qword_269F477C8)
  {
    type metadata accessor for ValenceClassification(255);
    sub_256175D98();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F477C8);
    }
  }
}

CGColorRef sub_256143548@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_2560A95B4();
  *a1 = result;
  return result;
}

BOOL static ValenceClassificationColorVariant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ValenceClassificationColorVariant.hash(into:)()
{
  return sub_2561788F8();
}

uint64_t ValenceClassificationColorVariant.hashValue.getter()
{
  return sub_256178928();
}

CGColorRef sub_25614361C@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_2560A96E4();
  *a1 = result;
  return result;
}

CGColorRef sub_256143658@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_2560A95B4();
  *a1 = result;
  return result;
}

unint64_t sub_256143698()
{
  unint64_t result = qword_269F477D0;
  if (!qword_269F477D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F477D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ValenceClassificationColorVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2561437B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValenceClassificationColorVariant()
{
  return &type metadata for ValenceClassificationColorVariant;
}

uint64_t sub_2561437F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256143804);
}

uint64_t sub_256143804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2561438FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256143910);
}

uint64_t sub_256143910(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for IntroPhaseSpecs()
{
  uint64_t result = qword_269F477D8;
  if (!qword_269F477D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256143A60()
{
  return sub_2561763E8();
}

id sub_256143A98()
{
  objc_msgSend(self, sel_preferredHeight);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A60]), sel_initWithFrame_shouldSupportRTL_, HKUICalendarLocaleIsRightToLeft(), 0.0, 0.0, 0.0, v0);
  objc_msgSend(v1, sel_layoutMargins);
  objc_msgSend(v1, sel_setLayoutMargins_);
  id v2 = v1;
  objc_msgSend(v2, sel_layoutMargins);
  objc_msgSend(v2, sel_setLayoutMargins_);

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F83050]), sel_initWithContentView_, v2);
  return v3;
}

uint64_t *sub_256143B84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_256149C28(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v82 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v80 = v8;
      uint64_t v79 = v6;
      if (v82(a2, 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      CGFloat v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      uint64_t v81 = *v16;
      (*v16)(v13, v14, v15);
      *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      int v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_256175D98();
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v78(v18, v19, v20);
      uint64_t v21 = v11[8];
      unint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      if (v82((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v22, v23, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v7);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v81(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      unint64_t v27 = (char *)a1 + v26;
      unint64_t v28 = (char *)a2 + v26;
      if (v82((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v7);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v81(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      unint64_t v32 = (char *)a1 + v31;
      CGFloat v33 = (char *)a2 + v31;
      if (v82((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v32, v33, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v81(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = (char *)a1 + v36;
      id v38 = (char *)a2 + v36;
      if (v82((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v81(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      unint64_t v42 = (char *)a1 + v41;
      id v43 = (char *)a2 + v41;
      if (v82((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v7);
      }
      id v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v81(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      id v47 = (char *)a1 + v46;
      id v48 = (char *)a2 + v46;
      if (v82((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v80;
      }
      else
      {
        uint64_t v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v81(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      id v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if (v82((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v81(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v82((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v81(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      if (v82((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v81(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      if (v82((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v81(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      if (v82((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v81(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v79;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2561449AC(uint64_t a1)
{
  sub_256149C28(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    unsigned int v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_256176158();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    uint64_t v9 = v6;
    uint64_t v10 = (int *)v5;
    v8(v9, v7);
    uint64_t v11 = a1 + *(int *)(v5 + 28);
    uint64_t v12 = sub_256175D98();
    id v38 = *(void (**)(uint64_t))(*(void *)(v12 - 8) + 8);
    uint64_t v39 = v12;
    v38(v11);
    uint64_t v13 = a1 + v10[8];
    if (!v4(v13, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    }
    uint64_t v14 = _s6StylesV8TimelineVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    uint64_t v15 = a1 + v10[9];
    if (!v4(v15, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    }
    uint64_t v16 = _s6StylesV6NoDataVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    uint64_t v17 = a1 + v10[10];
    if (!v4(v17, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    }
    uint64_t v18 = _s6StylesV11PlaceholderVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    uint64_t v19 = a1 + v10[11];
    if (!v4(v19, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    }
    uint64_t v20 = _s6StylesV6SymbolVMa(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    uint64_t v21 = a1 + v10[12];
    if (!v4(v21, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    }
    uint64_t v40 = v3;
    uint64_t v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    ((void (*)(uint64_t, uint64_t))v38)(v21 + *(int *)(v22 + 28), v39);
    uint64_t v23 = v10;
    uint64_t v24 = a1 + v10[13];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV5EmptyVMa(0);
    v8(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v23[14];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV5DailyVMa(0);
    v8(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v23[15];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV9MomentaryVMa(0);
    v8(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v23[16];
    uint64_t v31 = v7;
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v30, v2);
    }
    uint64_t v32 = _s6StylesV6HeaderVMa(0);
    v8(v30 + *(int *)(v32 + 20), v7);
    uint64_t v33 = a1 + v23[17];
    if (!v4(v33, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v2);
    }
    uint64_t v34 = _s6StylesV11ChartButtonVMa(0);
    v8(v33 + *(int *)(v34 + 20), v7);
    uint64_t v35 = a1 + v23[18];
    if (!v4(v35, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v2);
    }
    uint64_t v36 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v35 + *(int *)(v36 + 20), v31);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_256144FE8(void *a1, void *a2, uint64_t a3)
{
  sub_256149C28(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v80 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v78 = v7;
    if (v80(a2, 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v79 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v76(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v80((void *)((char *)a2 + v19), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v79(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v77 = a3;
    if (v80((void *)((char *)a2 + v24), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v79(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v80((void *)((char *)a2 + v29), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v79(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v80((void *)((char *)a2 + v34), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v79(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v80((void *)((char *)a2 + v39), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v40, 0, 1, v6);
    }
    id v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v79(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v76(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    id v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v80((void *)((char *)a2 + v44), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v78;
    }
    else
    {
      uint64_t v48 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v79(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v80((void *)((char *)a2 + v50), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v79(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v80((void *)((char *)a2 + v55), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v77;
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v79(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v80((void *)((char *)a2 + v60), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v79(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v80((void *)((char *)a2 + v65), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v79(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v80((void *)((char *)a2 + v70), 1, v6))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v79(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_256145DC0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256149BC0((uint64_t)a1, (uint64_t)&qword_269F42AD8, (uint64_t)type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256149C28);
    sub_256149C28(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v81 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v78 = a3;
      uint64_t v79 = v8;
      if (v81(a2, 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      uint64_t v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      uint64_t v80 = *v15;
      (*v15)(v12, v13, v14);
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      uint64_t v16 = v10[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_256175D98();
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v77(v17, v18, v19);
      uint64_t v20 = v10[8];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      if (v81((void *)((char *)a2 + v20), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v21, v22, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v21, 0, 1, v7);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v80(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      uint64_t v25 = v10[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (v81((void *)((char *)a2 + v25), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v26, v27, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v26, 0, 1, v7);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v80(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v10[10];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      if (v81((void *)((char *)a2 + v30), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
      }
      uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
      v80(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v14);
      uint64_t v35 = v10[11];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      if (v81((void *)((char *)a2 + v35), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v36, v37, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v36, 0, 1, v7);
      }
      uint64_t v39 = _s6StylesV6SymbolVMa(0);
      v80(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v14);
      uint64_t v40 = v10[12];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      if (v81((void *)((char *)a2 + v40), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v41, v42, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v41, 0, 1, v7);
      }
      uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v80(&v41[v44[5]], &v42[v44[5]], v14);
      v41[v44[6]] = v42[v44[6]];
      v77(&v41[v44[7]], &v42[v44[7]], v19);
      uint64_t v45 = v10[13];
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      if (v81((void *)((char *)a2 + v45), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v79;
      }
      else
      {
        uint64_t v49 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v46, v47, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v46, 0, 1, v7);
      }
      uint64_t v50 = _s6StylesV5EmptyVMa(0);
      v80(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v14);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      uint64_t v51 = v10[14];
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      if (v81((void *)((char *)a2 + v51), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      uint64_t v55 = _s6StylesV5DailyVMa(0);
      v80(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      uint64_t v56 = v10[15];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      if (v81((void *)((char *)a2 + v56), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      uint64_t v60 = _s6StylesV9MomentaryVMa(0);
      v80(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v14);
      uint64_t v61 = v10[16];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      if (v81((void *)((char *)a2 + v61), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      uint64_t v65 = _s6StylesV6HeaderVMa(0);
      v80(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v14);
      uint64_t v66 = v10[17];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      if (v81((void *)((char *)a2 + v66), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
      v80(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v14);
      uint64_t v71 = v10[18];
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      if (v81((void *)((char *)a2 + v71), 1, v7))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
      v80(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v14);
      a3 = v78;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_256146BD8(char *a1, char *a2, uint64_t a3)
{
  sub_256149C28(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v80 = v9;
    if (v82(a2, 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v81 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v78(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v82(&a2[v21], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v81(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v79 = a3;
    if (v82(&a2[v26], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v81(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v82(&a2[v31], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v81(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v82(&a2[v36], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v81(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v82(&a2[v41], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v81(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v78(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v82(&a2[v46], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v80;
    }
    else
    {
      uint64_t v50 = v80;
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v81(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v82(&a2[v52], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v81(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v82(&a2[v57], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v79;
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v81(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v82(&a2[v62], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v81(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v82(&a2[v67], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v81(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v82(&a2[v72], 1, v8))
    {
      sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v81(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_2561479B4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256149BC0((uint64_t)a1, (uint64_t)&qword_269F42AD8, (uint64_t)type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256149C28);
    sub_256149C28(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v81 = v10;
      if (v83(a2, 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_256176158();
      uint64_t v17 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      uint64_t v82 = *v17;
      (*v17)(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      uint64_t v18 = v12[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_256175D98();
      uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v79(v19, v20, v21);
      uint64_t v22 = v12[8];
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      if (v83(&a2[v22], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v23, v24, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v23, 0, 1, v9);
      }
      uint64_t v26 = _s6StylesV8TimelineVMa(0);
      v82(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      uint64_t v27 = v12[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v80 = a3;
      if (v83(&a2[v27], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v28, v29, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v28, 0, 1, v9);
      }
      uint64_t v31 = _s6StylesV6NoDataVMa(0);
      v82(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      uint64_t v32 = v12[10];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      if (v83(&a2[v32], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v33, v34, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v33, 0, 1, v9);
      }
      uint64_t v36 = _s6StylesV11PlaceholderVMa(0);
      v82(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      uint64_t v37 = v12[11];
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      if (v83(&a2[v37], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v38, v39, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v38, 0, 1, v9);
      }
      uint64_t v41 = _s6StylesV6SymbolVMa(0);
      v82(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      uint64_t v42 = v12[12];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      if (v83(&a2[v42], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v43, v44, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v43, 0, 1, v9);
      }
      uint64_t v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v82(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v79(&v43[v46[7]], &v44[v46[7]], v21);
      uint64_t v47 = v12[13];
      uint64_t v48 = &a1[v47];
      uint64_t v49 = &a2[v47];
      if (v83(&a2[v47], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v81;
      }
      else
      {
        uint64_t v51 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v48, v49, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v48, 0, 1, v9);
      }
      uint64_t v52 = _s6StylesV5EmptyVMa(0);
      v82(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      uint64_t v53 = v12[14];
      uint64_t v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      if (v83(&a2[v53], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      uint64_t v57 = _s6StylesV5DailyVMa(0);
      v82(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v12[15];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      if (v83(&a2[v58], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      a3 = v80;
      uint64_t v62 = _s6StylesV9MomentaryVMa(0);
      v82(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      uint64_t v63 = v12[16];
      uint64_t v64 = &a1[v63];
      uint64_t v65 = &a2[v63];
      if (v83(&a2[v63], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      uint64_t v67 = _s6StylesV6HeaderVMa(0);
      v82(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      uint64_t v68 = v12[17];
      uint64_t v69 = &a1[v68];
      uint64_t v70 = &a2[v68];
      if (v83(&a2[v68], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      uint64_t v72 = _s6StylesV11ChartButtonVMa(0);
      v82(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      uint64_t v73 = v12[18];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = &a2[v73];
      if (v83(&a2[v73], 1, v9))
      {
        sub_256149C28(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      uint64_t v77 = _s6StylesV15LogButtonFooterVMa(0);
      v82(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2561487D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2561487E8);
}

uint64_t sub_2561487E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_256149C28(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2561488D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2561488EC);
}

void sub_2561488EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_256149C28(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t _s17EntryDayEmptyViewVMa()
{
  uint64_t result = qword_269F477E8;
  if (!qword_269F477E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256148A24()
{
  sub_256149C28(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_256148AEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256148B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v26 = sub_256176BB8();
  uint64_t v1 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611D800();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256149908(0, &qword_269F471F0, (void (*)(uint64_t))sub_25611D800);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v25 - v9;
  sub_25614996C();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_256176788();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  sub_256149B28();
  sub_256148F10(v25[1], &v6[*(int *)(v16 + 44)]);
  uint64_t v17 = sub_2561778E8();
  sub_2561179A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, INFINITY, 0, v17, v18);
  sub_256149F6C((uint64_t)v6, (uint64_t (*)(void))sub_25611D800);
  sub_256176B98();
  unint64_t v19 = sub_256149A14();
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v26);
  sub_256149BC0((uint64_t)v10, (uint64_t)&qword_269F471F0, (uint64_t)sub_25611D800, MEMORY[0x263F19110], (uint64_t (*)(void))sub_256149908);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v20 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_2561755B8();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();

  uint64_t v30 = v21;
  uint64_t v31 = v23;
  uint64_t v28 = v8;
  unint64_t v29 = v19;
  swift_getOpaqueTypeConformance2();
  sub_255F5CE90();
  sub_2561771C8();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_256148F10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v86 = sub_256176EE8();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v84 = (char *)v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25614A0E8(0, &qword_269F471E0, (void (*)(uint64_t))sub_255F678F4);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v90 = (char *)v82 - v5;
  sub_25611D978();
  uint64_t v89 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v92 = (uint64_t)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v91 = (uint64_t)v82 - v9;
  uint64_t v94 = (uint64_t (*)(uint64_t))(_s6StylesV5EmptyVMa(0) - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v11 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v87 = (uint64_t)v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v82 - v16;
  uint64_t v18 = _s21StateOfMindSymbolViewVMa();
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (void *)((char *)v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256149908(0, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  uint64_t v23 = v22 - 8;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v88 = (uint64_t)v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v82 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v95 = (uint64_t)v82 - v29;
  uint64_t *v21 = swift_getKeyPath();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256149C28(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (uint64_t *)((char *)v21 + *(int *)(v19 + 28));
  *uint64_t v31 = swift_getKeyPath();
  sub_256149C28(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v30);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v21 + *(int *)(v19 + 32)) = 0;
  sub_256119CA0((uint64_t)v17);
  sub_256149F04((uint64_t)&v17[*(int *)(v13 + 60)], (uint64_t)v11, _s6StylesV5EmptyVMa);
  sub_256149F6C((uint64_t)v17, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256149F6C((uint64_t)v11, _s6StylesV5EmptyVMa);
  sub_2561778E8();
  sub_256175F38();
  sub_256149F04((uint64_t)v21, (uint64_t)v28, (uint64_t (*)(void))_s21StateOfMindSymbolViewVMa);
  uint64_t v32 = &v28[*(int *)(v23 + 44)];
  long long v33 = v97;
  *(_OWORD *)uint64_t v32 = v96;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v98;
  sub_256149F6C((uint64_t)v21, (uint64_t (*)(void))_s21StateOfMindSymbolViewVMa);
  sub_256149C90((uint64_t)v28, v95);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v34 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_2561755B8();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();

  uint64_t v99 = v35;
  uint64_t v100 = v37;
  sub_255F5CE90();
  uint64_t v38 = sub_256177028();
  uint64_t v40 = v39;
  v82[1] = v41;
  LOBYTE(v34) = v42 & 1;
  uint64_t v43 = v87;
  sub_256119CA0(v87);
  uint64_t v94 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_256149F6C(v43, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176EB8();
  sub_256176E88();
  sub_256176ED8();
  swift_release();
  uint64_t v44 = v85;
  uint64_t v45 = v84;
  uint64_t v46 = v86;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, *MEMORY[0x263F1A680], v86);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  uint64_t v47 = sub_256176FD8();
  uint64_t v49 = v48;
  uint64_t v86 = v50;
  uint64_t v83 = a1;
  LOBYTE(v44) = v51 & 1;
  sub_255F67B2C(v38, v40, (char)v34);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256119CA0(v43);
  sub_256149F6C(v43, v94);
  id v52 = objc_msgSend(self, sel_tertiaryLabelColor);
  uint64_t v99 = MEMORY[0x25A29FE80](v52);
  uint64_t v53 = sub_256176FA8();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  char v59 = v58 & 1;
  sub_255F67B2C(v47, v49, v44);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v99 = v53;
  uint64_t v100 = v55;
  char v101 = v59;
  uint64_t v102 = v57;
  uint64_t v103 = KeyPath;
  char v104 = 1;
  uint64_t v61 = _s17EntryDayEmptyViewVMa();
  uint64_t v62 = (uint64_t)v90;
  sub_255F91BA4(*(void **)(v83 + *(int *)(v61 + 20)), 0x7974706D45, 0xE500000000000000);
  sub_255F67B2C(v53, v55, v59);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v45) = sub_256176D78();
  sub_256119CA0(v43);
  sub_256149F6C(v43, v94);
  sub_256175D48();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = v92;
  sub_256149D20(v62, v92);
  uint64_t v72 = v71 + *(int *)(v89 + 36);
  *(unsigned char *)uint64_t v72 = (_BYTE)v45;
  *(void *)(v72 + 8) = v64;
  *(void *)(v72 + 16) = v66;
  *(void *)(v72 + 24) = v68;
  *(void *)(v72 + 32) = v70;
  *(unsigned char *)(v72 + 40) = 0;
  sub_256149DA0(v62);
  uint64_t v73 = v91;
  sub_256149E18(v71, v91);
  uint64_t v74 = v95;
  uint64_t v75 = v88;
  sub_256149E7C(v95, v88);
  sub_256149F04(v73, v71, (uint64_t (*)(void))sub_25611D978);
  uint64_t v76 = v93;
  *uint64_t v93 = 0;
  *((unsigned char *)v76 + 8) = 1;
  sub_25611D8C8(0);
  uint64_t v78 = v77;
  sub_256149E7C(v75, (uint64_t)v76 + *(int *)(v77 + 48));
  sub_256149F04(v71, (uint64_t)v76 + *(int *)(v78 + 64), (uint64_t (*)(void))sub_25611D978);
  uint64_t v79 = (char *)v76 + *(int *)(v78 + 80);
  *(void *)uint64_t v79 = 0;
  v79[8] = 1;
  sub_256149F6C(v73, (uint64_t (*)(void))sub_25611D978);
  uint64_t v80 = MEMORY[0x263F18868];
  sub_256149BC0(v74, (uint64_t)&qword_269F42D48, (uint64_t)_s21StateOfMindSymbolViewVMa, MEMORY[0x263F18868], (uint64_t (*)(void))sub_256149908);
  sub_256149F6C(v71, (uint64_t (*)(void))sub_25611D978);
  return sub_256149BC0(v75, (uint64_t)&qword_269F42D48, (uint64_t)_s21StateOfMindSymbolViewVMa, v80, (uint64_t (*)(void))sub_256149908);
}

void sub_256149908(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_25614996C()
{
  if (!qword_269F477F8)
  {
    sub_256149908(255, &qword_269F471F0, (void (*)(uint64_t))sub_25611D800);
    sub_256149A14();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F477F8);
    }
  }
}

unint64_t sub_256149A14()
{
  unint64_t result = qword_269F47800;
  if (!qword_269F47800)
  {
    sub_256149908(255, &qword_269F471F0, (void (*)(uint64_t))sub_25611D800);
    sub_256149AE0(&qword_269F47808, (void (*)(uint64_t))sub_25611D800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47800);
  }
  return result;
}

uint64_t sub_256149AE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256149B28()
{
  if (!qword_269F47810)
  {
    sub_256149C28(255, &qword_269F471C8, (uint64_t (*)(uint64_t))sub_25611D8C8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47810);
    }
  }
}

uint64_t sub_256149BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_256149C28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256149C90(uint64_t a1, uint64_t a2)
{
  sub_256149908(0, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256149D20(uint64_t a1, uint64_t a2)
{
  sub_25614A0E8(0, &qword_269F471E0, (void (*)(uint64_t))sub_255F678F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256149DA0(uint64_t a1)
{
  sub_25614A0E8(0, &qword_269F471E0, (void (*)(uint64_t))sub_255F678F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256149E18(uint64_t a1, uint64_t a2)
{
  sub_25611D978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256149E7C(uint64_t a1, uint64_t a2)
{
  sub_256149908(0, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256149F04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256149F6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_256149FD0()
{
  unint64_t result = qword_269F47818;
  if (!qword_269F47818)
  {
    sub_25614A0E8(255, &qword_269F47820, (void (*)(uint64_t))sub_25614996C);
    sub_256149908(255, &qword_269F471F0, (void (*)(uint64_t))sub_25611D800);
    sub_256149A14();
    swift_getOpaqueTypeConformance2();
    sub_256149AE0(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47818);
  }
  return result;
}

void sub_25614A0E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256176D38();
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for AssessmentsSettingsSection(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AssessmentsSettingsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  unint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  id v5 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AssessmentsSettingsSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AssessmentsSettingsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  id v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AssessmentsSettingsSection()
{
  return &type metadata for AssessmentsSettingsSection;
}

uint64_t destroy for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1)
{
  swift_release();

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  id v6 = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentsPeriodicPromptedAssessmentsSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsPeriodicPromptedAssessmentsSection()
{
  return &type metadata for AssessmentsPeriodicPromptedAssessmentsSection;
}

uint64_t sub_25614A5A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25614A5C0()
{
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_255FCD6C4(v1);
  long long v12 = *v0;
  swift_retain();
  uint64_t v2 = sub_2560CC33C();
  sub_25605B688((uint64_t)&v12);
  uint64_t v3 = v11;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_2560970AC(0, v11[2] + 1, 1, v11);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_2560970AC((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  v3[v5 + 4] = v2;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_25615449C(v6);
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_255FB3910(v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v8;
  swift_retain();
  sub_256151938((uint64_t *)&v10);
  swift_bridgeObjectRelease();
  swift_release();
  return (uint64_t)v10;
}

uint64_t sub_25614A704()
{
  sub_255FFC224();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25614A944();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_255FCD3A4((uint64_t)&unk_2704B6A10);
  uint64_t v6 = MEMORY[0x263F8D310];
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v6);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v1, v3, v5);
  swift_bridgeObjectRelease();
  sub_256153750(0);
  sub_256154F84(&qword_269F478D8, sub_256153750);
  sub_2560755C8();
  return sub_256177838();
}

uint64_t sub_25614A944()
{
  long long v4 = *v0;
  swift_retain();
  if ((sub_2560CACD4() & 1) != 0 || (sub_2560CACD4())
    && (sub_2560CACD4() & 1) != 0)
  {
    sub_2560CACD4();
  }
  sub_25605B688((uint64_t)&v4);
  sub_2561766C8();
  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_256177018();
}

uint64_t sub_25614AAE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v142 = a2;
  sub_256153C64();
  uint64_t v135 = *(void *)(v3 - 8);
  uint64_t v136 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v134 = (char *)v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  char v132 = (char *)v110 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v133 = (char *)v110 - v8;
  sub_256153A20();
  uint64_t v120 = v9;
  uint64_t v119 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v118 = (char *)v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256153A00(0);
  uint64_t v121 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v123 = (char *)v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256153994(0, &qword_269F47890, sub_256153A00);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v131 = (char *)v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v140 = (uint64_t)v110 - v16;
  sub_256154E8C(0, &qword_269F47878, (uint64_t (*)(uint64_t))sub_2561538D4, MEMORY[0x263F8D8F0]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v141 = (uint64_t)v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v139 = (uint64_t)v110 - v20;
  sub_256075564();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v124 = (char *)v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v110 - v26;
  sub_2560754D8();
  uint64_t v29 = v28;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v127 = (char *)v110 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  long long v33 = (char *)v110 - v32;
  sub_256153824(0);
  uint64_t v128 = v34;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v129 = (char *)v110 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v144 = (uint64_t)v110 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v143 = (uint64_t)v110 - v39;
  uint64_t v40 = *a1;
  uint64_t v41 = a1[1];
  uint64_t v42 = type metadata accessor for AssessmentsSettingsModel();
  uint64_t v43 = sub_256154F84(&qword_269F44F10, (void (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel);
  uint64_t v112 = v40;
  v110[1] = v42;
  sub_2561760F8();
  swift_getKeyPath();
  uint64_t v111 = v43;
  sub_256176108();
  swift_release();
  swift_release();
  uint64_t v130 = a1;
  uint64_t v145 = a1;
  sub_255FFC224();
  uint64_t v45 = v44;
  unint64_t v46 = sub_2560755C8();
  uint64_t v114 = v45;
  unint64_t v113 = v46;
  sub_2561776C8();
  uint64_t v47 = *(void *)(v41 + 16);
  swift_retain();
  LOBYTE(v45) = sub_2560CACD4();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v49 = swift_allocObject();
  *(unsigned char *)(v49 + 16) = (v45 & 1) == 0;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v117 = v23 + 16;
  uint64_t v116 = v50;
  v50(v33, v27, v22);
  char v51 = (uint64_t *)&v33[*(int *)(v29 + 36)];
  uint64_t *v51 = KeyPath;
  v51[1] = (uint64_t)sub_255F9E950;
  v51[2] = v49;
  id v52 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v126 = v22;
  uint64_t v53 = v22;
  uint64_t v54 = v47;
  uint64_t v125 = v23 + 8;
  uint64_t v115 = v52;
  v52(v27, v53);
  *(void *)&long long v148 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6A60);
  uint64_t v55 = MEMORY[0x263F8D310];
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  uint64_t v57 = v56;
  uint64_t v137 = sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v55);
  uint64_t v138 = v57;
  sub_256177E28();
  swift_bridgeObjectRelease();
  unint64_t v58 = sub_256075670();
  uint64_t v59 = v144;
  uint64_t v122 = v29;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_256153ED8((uint64_t)v33, (uint64_t (*)(void))sub_2560754D8);
  sub_2561543D0(v59, v143, (uint64_t (*)(void))sub_256153824);
  swift_retain();
  LOBYTE(v57) = sub_2560CAEBC();
  swift_release();
  if (v57)
  {
    v110[0] = v58;
    if (qword_269F42348 != -1) {
      swift_once();
    }
    id v60 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_2561755B8();
    uint64_t v63 = v62;
    swift_bridgeObjectRelease();

    uint64_t v150 = v61;
    uint64_t v151 = v63;
    sub_2561760F8();
    swift_getKeyPath();
    sub_256176108();
    swift_release();
    uint64_t v64 = swift_release();
    long long v146 = v148;
    uint64_t v147 = v149;
    MEMORY[0x270FA5388](v64);
    uint64_t v65 = (uint64_t)v130;
    sub_256153AB4();
    sub_256153BF4();
    sub_255F5CE90();
    uint64_t v66 = v118;
    sub_256177668();
    swift_retain();
    unsigned __int8 v67 = sub_2560CACD4();
    swift_release();
    uint64_t v68 = swift_getKeyPath();
    uint64_t v69 = swift_allocObject();
    uint64_t v112 = v41;
    char v70 = 1;
    *(unsigned char *)(v69 + 16) = (v67 & 1) == 0;
    uint64_t v71 = v119;
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
    uint64_t v111 = v54;
    uint64_t v73 = (uint64_t)v123;
    uint64_t v74 = v120;
    v72(v123, v66, v120);
    uint64_t v75 = (uint64_t *)(v73 + *(int *)(v121 + 36));
    *uint64_t v75 = v68;
    v75[1] = (uint64_t)sub_255FAFFF4;
    v75[2] = v69;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v74);
    *(void *)&long long v148 = &unk_2704B5358;
    sub_255FCD3A4((uint64_t)&unk_2704B6AB0);
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_256153F58(&qword_269F478E0, sub_256153A00, (void (*)(void))sub_256153FE4, (void (*)(void))sub_255F84F80);
    uint64_t v76 = (uint64_t)v131;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_256153ED8(v73, (uint64_t (*)(void))sub_256153A00);
    sub_256154018(v76, v140);
    uint64_t v77 = *(void **)(v65 + 24);
    type metadata accessor for NotificationSettingsModel();
    sub_256154F84((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
    uint64_t v78 = (void *)sub_2561760F8();
    swift_getKeyPath();
    sub_256176108();
    swift_release();

    MEMORY[0x270FA5388](v148);
    uint64_t v79 = v124;
    sub_2561776C8();
    swift_getKeyPath();
    swift_getKeyPath();
    id v80 = v77;
    sub_256175C88();

    swift_release();
    swift_release();
    if ((v148 & 1) == 0)
    {
      swift_retain();
      unsigned __int8 v81 = sub_2560CACD4();
      swift_release();
      char v70 = v81 ^ 1;
    }
    uint64_t v82 = swift_getKeyPath();
    uint64_t v83 = swift_allocObject();
    *(unsigned char *)(v83 + 16) = v70 & 1;
    uint64_t v84 = (uint64_t)v127;
    uint64_t v85 = v126;
    v116(v127, v79, v126);
    uint64_t v86 = (uint64_t *)(v84 + *(int *)(v122 + 36));
    uint64_t *v86 = v82;
    v86[1] = (uint64_t)sub_255FAFFF4;
    v86[2] = v83;
    v115(v79, v85);
    *(void *)&long long v148 = &unk_2704B5358;
    sub_255FCD3A4((uint64_t)&unk_2704B6B00);
    sub_256177E28();
    swift_bridgeObjectRelease();
    uint64_t v87 = (uint64_t)v129;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_256153ED8(v84, (uint64_t (*)(void))sub_2560754D8);
    uint64_t v88 = (_OWORD *)swift_allocObject();
    long long v89 = *(_OWORD *)(v65 + 16);
    v88[1] = *(_OWORD *)v65;
    v88[2] = v89;
    long long v90 = *(_OWORD *)(v65 + 48);
    v88[3] = *(_OWORD *)(v65 + 32);
    v88[4] = v90;
    sub_2561540CC(v65);
    sub_256153F58(&qword_269F478D0, sub_256153824, (void (*)(void))sub_256075670, (void (*)(void))sub_255F73540);
    uint64_t v91 = v132;
    sub_2561770E8();
    swift_release();
    sub_256153ED8(v87, (uint64_t (*)(void))sub_256153824);
    uint64_t v92 = v135;
    uint64_t v93 = v133;
    uint64_t v94 = v91;
    uint64_t v95 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v133, v94, v136);
    uint64_t v96 = v140;
    sub_256154130(v140, v76);
    long long v97 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
    long long v98 = v134;
    v97(v134, v93, v95);
    uint64_t v99 = v141;
    sub_256154130(v76, v141);
    sub_256153908();
    v97((char *)(v99 + *(int *)(v100 + 48)), v98, v95);
    char v101 = *(void (**)(char *, uint64_t))(v92 + 8);
    v101(v93, v95);
    sub_2561541B0(v96);
    v101(v98, v95);
    sub_2561541B0(v76);
    sub_2561538D4(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v99, 0, 1, v102);
    uint64_t v103 = v139;
    sub_256154228(v99, v139);
  }
  else
  {
    sub_2561538D4(0);
    uint64_t v103 = v139;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v139, 1, 1, v104);
    uint64_t v99 = v141;
  }
  uint64_t v106 = v143;
  uint64_t v105 = v144;
  sub_256153D54(v143, v144);
  sub_256153DB8(v103, v99);
  uint64_t v107 = v142;
  sub_256153D54(v105, v142);
  sub_256153784();
  sub_256153DB8(v99, v107 + *(int *)(v108 + 48));
  sub_256153E4C(v103);
  sub_256153ED8(v106, (uint64_t (*)(void))sub_256153824);
  sub_256153E4C(v99);
  return sub_256153ED8(v105, (uint64_t (*)(void))sub_256153824);
}

uint64_t sub_25614BC0C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_255FFC224();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v27 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2561755B8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  uint64_t v30 = v6;
  uint64_t v31 = v8;
  sub_255F5CE90();
  uint64_t v9 = sub_256177028();
  uint64_t v11 = v10;
  char v13 = v12;
  long long v34 = *a1;
  swift_retain();
  unsigned __int8 v14 = sub_2560CACD4();
  sub_25605B688((uint64_t)&v34);
  if (v14) {
    int v15 = sub_256176A48();
  }
  else {
    int v15 = sub_256176A58();
  }
  char v16 = v13 & 1;
  LODWORD(v30) = v15;
  uint64_t v17 = sub_256176FA8();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_255F67B2C(v9, v11, v16);
  swift_bridgeObjectRelease();
  uint64_t v30 = v17;
  uint64_t v31 = v19;
  char v32 = v23;
  uint64_t v33 = v21;
  uint64_t v29 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6B50);
  uint64_t v24 = MEMORY[0x263F8D310];
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v24);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v25 = (uint64_t)v27;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v17, v19, v23);
  swift_bridgeObjectRelease();
  return sub_2561543D0(v25, v28, (uint64_t (*)(void))sub_255FFC224);
}

uint64_t sub_25614BF30(_OWORD *a1)
{
  sub_25614A5C0();
  swift_getKeyPath();
  id v2 = (_OWORD *)swift_allocObject();
  long long v3 = a1[1];
  v2[1] = *a1;
  v2[2] = v3;
  long long v4 = a1[3];
  v2[3] = a1[2];
  v2[4] = v4;
  sub_2561540CC((uint64_t)a1);
  uint64_t v5 = MEMORY[0x263F8D6C8];
  sub_256154CBC(0, &qword_269F478B0, MEMORY[0x263F8D6C8], MEMORY[0x263F8D488]);
  sub_255FFC224();
  sub_256153B9C(&qword_269F478B8, &qword_269F478B0, v5);
  sub_2560755C8();
  return sub_2561777C8();
}

uint64_t sub_25614C074(uint64_t *a1)
{
  sub_256154510(*a1);
  sub_255F5CE90();
  uint64_t v1 = MEMORY[0x263F8D310];
  uint64_t v2 = sub_256177028();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD360, v1, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A69E0;
  *(void *)(inited + 32) = 0xD000000000000020;
  *(void *)(inited + 40) = 0x80000002561ADE20;
  *(void *)(inited + 48) = sub_2561787E8();
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = 1937334596;
  *(void *)(inited + 72) = 0xE400000000000000;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v9);
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, v1, MEMORY[0x263F8D488]);
  sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v1);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_255F67B2C(v2, v4, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25614C2C8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_255FFC224();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v27 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2561755B8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  uint64_t v30 = v6;
  uint64_t v31 = v8;
  sub_255F5CE90();
  uint64_t v9 = sub_256177028();
  uint64_t v11 = v10;
  char v13 = v12;
  long long v34 = *a1;
  swift_retain();
  unsigned __int8 v14 = sub_2560CACD4();
  sub_25605B688((uint64_t)&v34);
  if (v14) {
    int v15 = sub_256176A48();
  }
  else {
    int v15 = sub_256176A58();
  }
  char v16 = v13 & 1;
  LODWORD(v30) = v15;
  uint64_t v17 = sub_256176FA8();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_255F67B2C(v9, v11, v16);
  swift_bridgeObjectRelease();
  uint64_t v30 = v17;
  uint64_t v31 = v19;
  char v32 = v23;
  uint64_t v33 = v21;
  uint64_t v29 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6BA0);
  uint64_t v24 = MEMORY[0x263F8D310];
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v24);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v25 = (uint64_t)v27;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v17, v19, v23);
  swift_bridgeObjectRelease();
  return sub_2561543D0(v25, v28, (uint64_t (*)(void))sub_255FFC224);
}

uint64_t sub_25614C5EC(uint64_t a1)
{
  sub_256154E8C(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v14[-v3];
  long long v17 = *(_OWORD *)(a1 + 16);
  id v5 = (void *)*((void *)&v17 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  id v6 = v5;
  sub_256175C88();
  swift_release();
  swift_release();
  sub_25605B57C((uint64_t)&v17);
  if (v15 == 1)
  {
    long long v15 = *(_OWORD *)(a1 + 32);
    char v16 = *(unsigned char *)(a1 + 48);
    v14[15] = 1;
    sub_256154CBC(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
    return sub_256177728();
  }
  else
  {
    uint64_t v8 = sub_2561780E8();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    sub_2561780C8();
    sub_2561540CC(a1);
    uint64_t v9 = sub_2561780B8();
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = MEMORY[0x263F8F500];
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v11;
    long long v12 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v10 + 48) = v12;
    long long v13 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v10 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v10 + 80) = v13;
    sub_2560CA690((uint64_t)v4, (uint64_t)&unk_269F478F8, v10);
    return swift_release();
  }
}

uint64_t sub_25614C800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  uint64_t v5 = sub_256175868();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  sub_2561780C8();
  v4[8] = sub_2561780B8();
  uint64_t v7 = sub_256178088();
  v4[9] = v7;
  v4[10] = v6;
  return MEMORY[0x270FA2498](sub_25614C8F4, v7, v6);
}

uint64_t sub_25614C8F4()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)*(void *)(v0 + 32);
  swift_retain();
  sub_256175828();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25614C9B4;
  uint64_t v2 = *(void *)(v0 + 56);
  return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(v2);
}

uint64_t sub_25614C9B4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 16;
  uint64_t v3 = *(void *)(*v0 + 56);
  uint64_t v4 = *(void *)(*v0 + 48);
  uint64_t v5 = *(void *)(*v0 + 40);
  swift_task_dealloc();
  sub_25605B688(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_25614CB44, v7, v6);
}

uint64_t sub_25614CB44()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25614CBAC()
{
  return sub_25614A704();
}

uint64_t sub_25614CBE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25614CC04()
{
  sub_255FFC224();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_25614CE6C();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_255FCD3A4((uint64_t)&unk_2704B6BF0);
  uint64_t v6 = MEMORY[0x263F8D310];
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v6);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v1, v3, v5);
  swift_bridgeObjectRelease();
  sub_256153824(0);
  sub_256153F58(&qword_269F478D0, sub_256153824, (void (*)(void))sub_256075670, (void (*)(void))sub_255F73540);
  sub_2560755C8();
  return sub_256177838();
}

uint64_t sub_25614CE6C()
{
  swift_retain();
  if ((sub_2560CACD4() & 1) != 0 || (sub_2560CACD4())
    && (sub_2560CACD4() & 1) != 0)
  {
    sub_2560CACD4();
    swift_release();
    sub_2561766C8();
    type metadata accessor for MentalHealthUIRepresentative();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  }
  else
  {
    swift_release();
    sub_2561766C8();
    type metadata accessor for MentalHealthUIRepresentative();
    uint64_t v2 = swift_getObjCClassFromMetadata();
    id v1 = objc_msgSend(self, sel_bundleForClass_, v2);
  }
  id v3 = v1;
  return sub_256177018();
}

uint64_t sub_25614CFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[1] = a3;
  sub_256075564();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560754D8();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssessmentsSettingsModel();
  sub_256154F84(&qword_269F44F10, (void (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel);
  sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  v19[4] = a1;
  v19[5] = a2;
  sub_255FFC224();
  sub_2560755C8();
  sub_2561776C8();
  swift_retain();
  LOBYTE(a1) = sub_2560CACD4();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = (a1 & 1) == 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  char v16 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *char v16 = KeyPath;
  v16[1] = (uint64_t)sub_255FAFFF4;
  _OWORD v16[2] = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19[7] = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6C40);
  uint64_t v17 = MEMORY[0x263F8D310];
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v17);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256075670();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return sub_256153ED8((uint64_t)v13, (uint64_t (*)(void))sub_2560754D8);
}

uint64_t sub_25614D38C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  sub_255FFC224();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v24 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v3 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2561755B8();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();

  uint64_t v27 = v4;
  uint64_t v28 = v6;
  sub_255F5CE90();
  uint64_t v7 = sub_256177028();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_retain();
  LOBYTE(v4) = sub_2560CACD4();
  swift_release();
  if (v4) {
    int v12 = sub_256176A48();
  }
  else {
    int v12 = sub_256176A58();
  }
  char v13 = v11 & 1;
  LODWORD(v27) = v12;
  uint64_t v14 = sub_256176FA8();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_255F67B2C(v7, v9, v13);
  swift_bridgeObjectRelease();
  uint64_t v27 = v14;
  uint64_t v28 = v16;
  char v29 = v20;
  uint64_t v30 = v18;
  uint64_t v26 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6C80);
  uint64_t v21 = MEMORY[0x263F8D310];
  sub_256154CBC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_256153B9C((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v21);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v24;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v14, v16, v20);
  swift_bridgeObjectRelease();
  return sub_2561543D0(v22, v25, (uint64_t (*)(void))sub_255FFC224);
}

uint64_t sub_25614D6A8()
{
  return sub_25614CC04();
}

uint64_t sub_25614D6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2561769B8();
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25614E18C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25614E2D8();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25614E3AC();
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v30 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1;
  long long v40 = *v1;
  swift_retain();
  if (sub_2560CACC8())
  {
    uint64_t v17 = sub_25605B688((uint64_t)&v40);
  }
  else
  {
    unsigned __int8 v18 = sub_2560CACC8();
    uint64_t v17 = sub_25605B688((uint64_t)&v40);
    if ((v18 & 1) == 0)
    {
      uint64_t v25 = 1;
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(a1, v25, 1, v23);
    }
  }
  uint64_t v28 = a1;
  MEMORY[0x270FA5388](v17);
  *(&v27 - 2) = (uint64_t)v16;
  sub_25614E23C(0);
  sub_256154F84(&qword_269F47840, sub_25614E23C);
  sub_256176F68();
  sub_2561769A8();
  uint64_t v19 = sub_256154F84(&qword_269F47850, (void (*)(uint64_t))sub_25614E18C);
  sub_256177388();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  long long v39 = v16[2];
  sub_256154CBC(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  uint64_t v20 = sub_256177598();
  MEMORY[0x270FA5388](v20);
  *(&v27 - 2) = (uint64_t)v16;
  uint64_t v35 = v7;
  uint64_t v36 = v3;
  uint64_t v37 = v19;
  uint64_t v38 = MEMORY[0x263F19D08];
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v30;
  uint64_t v22 = v32;
  sub_2561772B8();
  a1 = v28;
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v22);
  uint64_t v24 = v33;
  uint64_t v23 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(a1, v21, v34);
  uint64_t v25 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(a1, v25, 1, v23);
}

uint64_t sub_25614DBB8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *a1;
  long long v16 = a1[1];
  long long v17 = v3;
  sub_255FC580C((uint64_t)&v17);
  sub_25615371C((uint64_t)&v16);
  sub_256154CBC(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  type metadata accessor for AssessmentsSettingsModel();
  sub_256154F84(&qword_269F44F10, (void (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel);
  uint64_t v4 = sub_2561760E8();
  uint64_t v6 = v5;
  type metadata accessor for NotificationSettingsModel();
  sub_256154F84((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
  uint64_t v7 = sub_2561760E8();
  uint64_t v9 = v8;
  swift_retain();
  uint64_t v10 = sub_2561760E8();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v14;
  *(unsigned char *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = &unk_2704B6CC0;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  swift_retain();
  swift_retain();
  swift_release();
  return swift_release();
}

uint64_t sub_25614DD74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = sub_2561773C8();
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v41 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  long long v40 = (char *)v35 - v4;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_2561755B8();
  uint64_t v39 = v6;
  swift_bridgeObjectRelease();

  id v7 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_2561755B8();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  id v11 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2561755B8();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  id v15 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_2561755B8();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();

  uint64_t v43 = v38;
  uint64_t v44 = v39;
  sub_255F5CE90();
  uint64_t v19 = sub_256177028();
  uint64_t v38 = v20;
  uint64_t v39 = v19;
  int v36 = v21;
  uint64_t v37 = v22;
  uint64_t v43 = v8;
  uint64_t v44 = v10;
  uint64_t v23 = sub_256177028();
  void v35[2] = v24;
  v35[3] = v23;
  v35[1] = v25;
  uint64_t v43 = v12;
  uint64_t v44 = v14;
  uint64_t v26 = sub_256177028();
  uint64_t v28 = v27;
  LOBYTE(v10) = v29 & 1;
  sub_2561773B8();
  sub_255F67B2C(v26, v28, v10);
  swift_bridgeObjectRelease();
  uint64_t v43 = v16;
  uint64_t v44 = v18;
  uint64_t v30 = sub_256177028();
  uint64_t v32 = v31;
  LOBYTE(v18) = v33 & 1;
  sub_2561773A8();
  sub_255F67B2C(v30, v32, v18);
  swift_bridgeObjectRelease();
  return sub_256177398();
}

uint64_t sub_25614E150@<X0>(uint64_t a1@<X8>)
{
  return sub_25614D6B0(a1);
}

void sub_25614E18C()
{
  if (!qword_269F47828)
  {
    sub_25614E23C(255);
    sub_256154F84(&qword_269F47840, sub_25614E23C);
    unint64_t v0 = sub_256176F78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47828);
    }
  }
}

void sub_25614E23C(uint64_t a1)
{
}

void sub_25614E270()
{
  if (!qword_269F47838)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47838);
    }
  }
}

void sub_25614E2D8()
{
  if (!qword_269F47848)
  {
    sub_25614E18C();
    sub_2561769B8();
    sub_256154F84(&qword_269F47850, (void (*)(uint64_t))sub_25614E18C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F47848);
    }
  }
}

void sub_25614E3AC()
{
  if (!qword_269F47858)
  {
    sub_25614E2D8();
    sub_25614E18C();
    sub_2561769B8();
    sub_256154F84(&qword_269F47850, (void (*)(uint64_t))sub_25614E18C);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F47858);
    }
  }
}

uint64_t sub_25614E4B0@<X0>(uint64_t a1@<X8>)
{
  return sub_25614DBB8(*(long long **)(v1 + 16), a1);
}

uint64_t sub_25614E4B8@<X0>(uint64_t a1@<X8>)
{
  return sub_25614DD74(a1);
}

uint64_t sub_25614E4DC(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_2561788E8();
  sub_255F74D60(a2);
  swift_bridgeObjectRetain();
  sub_256177F38();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_256178928();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v22 = a2;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v23;
    uint64_t *v23 = 0x8000000000000000;
    char v20 = v22;
    sub_25614FC98(v22, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v23 = v25;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_40;
  }
  uint64_t v8 = ~v6;
  uint64_t v9 = a2;
  while (2)
  {
    unint64_t v10 = 0xD000000000000017;
    unint64_t v11 = 0x80000002561A9BA0;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x696472616F626E4FLL;
        unint64_t v11 = 0xEA0000000000676ELL;
        break;
      case 2:
        unint64_t v10 = 0xD000000000000013;
        unint64_t v11 = 0x80000002561A9BD0;
        break;
      case 3:
        uint64_t v12 = "Reflective Interval";
        goto LABEL_13;
      case 4:
        unint64_t v11 = 0xE600000000000000;
        unint64_t v10 = 0x736C6562614CLL;
        break;
      case 5:
        unint64_t v10 = 0x746169636F737341;
        unint64_t v11 = 0xEC000000736E6F69;
        break;
      case 6:
        unint64_t v10 = 0x616D7269666E6F43;
        unint64_t v11 = 0xEC0000006E6F6974;
        break;
      case 7:
        unint64_t v10 = 0x6F4C207972746E45;
        unint64_t v11 = 0xEC00000064656767;
        break;
      case 8:
        unint64_t v11 = 0xEC00000064656C69;
        unint64_t v10 = 0x6146207972746E45;
        break;
      case 9:
        uint64_t v12 = "n";
LABEL_13:
        unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
        unint64_t v10 = 0xD000000000000010;
        break;
      default:
        break;
    }
    unint64_t v13 = 0xD000000000000017;
    unint64_t v14 = 0x80000002561A9BA0;
    switch(v9)
    {
      case 1:
        unint64_t v14 = 0xEA0000000000676ELL;
        if (v10 == 0x696472616F626E4FLL) {
          goto LABEL_29;
        }
        goto LABEL_30;
      case 2:
        unint64_t v14 = 0x80000002561A9BD0;
        if (v10 != 0xD000000000000013) {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 3:
        id v15 = "Reflective Interval";
        goto LABEL_34;
      case 4:
        unint64_t v14 = 0xE600000000000000;
        if (v10 != 0x736C6562614CLL) {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 5:
        uint64_t v16 = 0x746169636F737341;
        uint64_t v17 = 1936617321;
        goto LABEL_25;
      case 6:
        uint64_t v16 = 0x616D7269666E6F43;
        uint64_t v17 = 1852795252;
        goto LABEL_25;
      case 7:
        uint64_t v16 = 0x6F4C207972746E45;
        uint64_t v17 = 1684367207;
LABEL_25:
        unint64_t v14 = v17 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        if (v10 != v16) {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 8:
        unint64_t v14 = 0xEC00000064656C69;
        unint64_t v13 = 0x6146207972746E45;
        goto LABEL_28;
      case 9:
        id v15 = "n";
LABEL_34:
        unint64_t v14 = (unint64_t)v15 | 0x8000000000000000;
        if (v10 != 0xD000000000000010) {
          goto LABEL_30;
        }
        goto LABEL_29;
      default:
LABEL_28:
        if (v10 != v13) {
          goto LABEL_30;
        }
LABEL_29:
        if (v11 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_39;
        }
LABEL_30:
        char v18 = sub_256178828();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_36;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_39:
        uint64_t result = 0;
        char v20 = *(unsigned char *)(*(void *)(*v23 + 48) + v7);
LABEL_40:
        *a1 = v20;
        return result;
    }
  }
}

uint64_t sub_25614E950(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_2561788E8();
  sub_2561788F8();
  uint64_t v6 = sub_256178928();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_25615013C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_25614EA70(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_2561788D8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_25615028C(a2, v9, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_25614EB6C(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2561788E8();
  swift_bridgeObjectRetain();
  sub_256177F38();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_256178928();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v19 = a2;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    void *v3 = 0x8000000000000000;
    char v17 = v19;
    sub_2561503B0(v19, v8, isUniquelyReferenced_nonNull_native);
    void *v3 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_25;
  }
  uint64_t v9 = ~v7;
  uint64_t v10 = a2;
  while (2)
  {
    unint64_t v11 = 0x80000002561A9E60;
    unint64_t v12 = 0xD000000000000010;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        unint64_t v12 = 0x6574614720656741;
        unint64_t v11 = 0xEF6F72746E492064;
        break;
      case 2:
        unint64_t v11 = 0xE500000000000000;
        unint64_t v12 = 0x6F72746E49;
        break;
      case 3:
        unint64_t v12 = 0x6E6F697473657551;
        unint64_t v11 = 0xE900000000000073;
        break;
      case 4:
        unint64_t v11 = 0xE600000000000000;
        unint64_t v12 = 0x746C75736552;
        break;
      default:
        break;
    }
    unint64_t v13 = 0x80000002561A9E60;
    unint64_t v14 = 0xD000000000000010;
    switch(v10)
    {
      case 1:
        unint64_t v13 = 0xEF6F72746E492064;
        if (v12 == 0x6574614720656741) {
          goto LABEL_15;
        }
        goto LABEL_16;
      case 2:
        unint64_t v13 = 0xE500000000000000;
        if (v12 != 0x6F72746E49) {
          goto LABEL_16;
        }
        goto LABEL_15;
      case 3:
        unint64_t v14 = 0x6E6F697473657551;
        unint64_t v13 = 0xE900000000000073;
        goto LABEL_14;
      case 4:
        unint64_t v13 = 0xE600000000000000;
        if (v12 != 0x746C75736552) {
          goto LABEL_16;
        }
        goto LABEL_15;
      default:
LABEL_14:
        if (v12 != v14) {
          goto LABEL_16;
        }
LABEL_15:
        if (v11 == v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_24;
        }
LABEL_16:
        char v15 = sub_256178828();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_24:
        uint64_t result = 0;
        char v17 = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
LABEL_25:
        *a1 = v17;
        return result;
    }
  }
}

uint64_t sub_25614EF2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2561549B4(0, &qword_269F47948, (void (*)(void))sub_256154A14);
  uint64_t v3 = sub_256178528();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v16 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_33;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v18 >= v8) {
      break;
    }
    unint64_t v19 = v28[v18];
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v8) {
        break;
      }
      unint64_t v19 = v28[v10];
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v8) {
          break;
        }
        unint64_t v19 = v28[v10];
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v8) {
            break;
          }
          unint64_t v19 = v28[v20];
          if (!v19)
          {
            while (1)
            {
              int64_t v10 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_40;
              }
              if (v10 >= v8) {
                goto LABEL_34;
              }
              unint64_t v19 = v28[v10];
              ++v20;
              if (v19) {
                goto LABEL_32;
              }
            }
          }
          int64_t v10 = v20;
        }
      }
    }
LABEL_32:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_33:
    char v25 = *(unsigned char *)(*(void *)(v2 + 48) + v17);
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_256178928();
    uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v12) >> 6;
    do
    {
      if (++v14 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x25614F374);
      }
      BOOL v23 = v14 == v22;
      if (v14 == v22) {
        unint64_t v14 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v9 + 8 * v14);
    }
    while (v24 == -1);
    unint64_t v15 = __clz(__rbit64(~v24)) + (v14 << 6);
LABEL_8:
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v25;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
  if (v26 > 63) {
    bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v26;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25614F39C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256154EF0();
  uint64_t result = sub_256178528();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_2561788E8();
      sub_2561788F8();
      uint64_t result = sub_256178928();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25614F644()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256154910(0, &qword_269F47910, MEMORY[0x263F8D6D8], MEMORY[0x263F8DBD8]);
  uint64_t result = sub_256178528();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_2561788D8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25614F8E8()
{
  uint64_t v1 = *v0;
  sub_2561549B4(0, &qword_269F47918, (void (*)(void))sub_256154960);
  uint64_t v2 = sub_256178528();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_38;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v27 = (void *)(v1 + 56);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v15 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_33;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_39;
    }
    if (v17 >= v7) {
      break;
    }
    unint64_t v18 = v27[v17];
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v7) {
        break;
      }
      unint64_t v18 = v27[v9];
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v7) {
          break;
        }
        unint64_t v18 = v27[v9];
        if (!v18)
        {
          int64_t v19 = v17 + 3;
          if (v19 >= v7) {
            break;
          }
          unint64_t v18 = v27[v19];
          if (!v18)
          {
            while (1)
            {
              int64_t v9 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_40;
              }
              if (v9 >= v7) {
                goto LABEL_34;
              }
              unint64_t v18 = v27[v9];
              ++v19;
              if (v18) {
                goto LABEL_32;
              }
            }
          }
          int64_t v9 = v19;
        }
      }
    }
LABEL_32:
    unint64_t v6 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_33:
    char v24 = *(unsigned char *)(*(void *)(v1 + 48) + v16);
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_256178928();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    if (((-1 << v12) & ~*(void *)(v8 + 8 * (v12 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v20 = 0;
    unint64_t v21 = (unint64_t)(63 - v11) >> 6;
    do
    {
      if (++v13 == v21 && (v20 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x25614FC84);
      }
      BOOL v22 = v13 == v21;
      if (v13 == v21) {
        unint64_t v13 = 0;
      }
      v20 |= v22;
      uint64_t v23 = *(void *)(v8 + 8 * v13);
    }
    while (v23 == -1);
    unint64_t v14 = __clz(__rbit64(~v23)) + (v13 << 6);
LABEL_8:
    *(void *)(v8 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v3 + 48) + v14) = v24;
    ++*(void *)(v3 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v25 = 1 << *(unsigned char *)(v1 + 32);
  if (v25 > 63) {
    bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v27 = -1 << v25;
  }
  *(void *)(v1 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *unint64_t v0 = v3;
  return result;
}

uint64_t sub_25614FC98(uint64_t result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_25614EF2C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_256150AF0(&qword_269F47948, (void (*)(void))sub_256154A14);
        goto LABEL_44;
      }
      sub_256150C8C();
    }
    uint64_t v8 = *v3;
    sub_2561788E8();
    sub_255F74D60(v5);
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t result = sub_256178928();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      uint64_t v11 = v5;
      while (2)
      {
        unint64_t v12 = 0xD000000000000017;
        unint64_t v13 = 0x80000002561A9BA0;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x696472616F626E4FLL;
            unint64_t v13 = 0xEA0000000000676ELL;
            break;
          case 2:
            unint64_t v12 = 0xD000000000000013;
            unint64_t v13 = 0x80000002561A9BD0;
            break;
          case 3:
            unint64_t v14 = "Reflective Interval";
            goto LABEL_16;
          case 4:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v12 = 0x736C6562614CLL;
            break;
          case 5:
            unint64_t v12 = 0x746169636F737341;
            unint64_t v13 = 0xEC000000736E6F69;
            break;
          case 6:
            unint64_t v12 = 0x616D7269666E6F43;
            unint64_t v13 = 0xEC0000006E6F6974;
            break;
          case 7:
            unint64_t v12 = 0x6F4C207972746E45;
            unint64_t v13 = 0xEC00000064656767;
            break;
          case 8:
            unint64_t v13 = 0xEC00000064656C69;
            unint64_t v12 = 0x6146207972746E45;
            break;
          case 9:
            unint64_t v14 = "n";
LABEL_16:
            unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
            unint64_t v12 = 0xD000000000000010;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xD000000000000017;
        unint64_t v16 = 0x80000002561A9BA0;
        switch(v11)
        {
          case 1:
            unint64_t v16 = 0xEA0000000000676ELL;
            if (v12 != 0x696472616F626E4FLL) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 2:
            unint64_t v16 = 0x80000002561A9BD0;
            if (v12 != 0xD000000000000013) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 3:
            int64_t v17 = "Reflective Interval";
            goto LABEL_30;
          case 4:
            unint64_t v16 = 0xE600000000000000;
            if (v12 != 0x736C6562614CLL) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 5:
            uint64_t v18 = 0x746169636F737341;
            uint64_t v19 = 1936617321;
            goto LABEL_34;
          case 6:
            unint64_t v15 = 0x616D7269666E6F43;
            unint64_t v16 = 0xEC0000006E6F6974;
            goto LABEL_37;
          case 7:
            uint64_t v18 = 0x6F4C207972746E45;
            uint64_t v19 = 1684367207;
LABEL_34:
            unint64_t v16 = v19 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            if (v12 != v18) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 8:
            unint64_t v16 = 0xEC00000064656C69;
            if (v12 != 0x6146207972746E45) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 9:
            int64_t v17 = "n";
LABEL_30:
            unint64_t v16 = (unint64_t)v17 | 0x8000000000000000;
            if (v12 != 0xD000000000000010) {
              goto LABEL_39;
            }
            goto LABEL_38;
          default:
LABEL_37:
            if (v12 != v15) {
              goto LABEL_39;
            }
LABEL_38:
            if (v13 == v16) {
              goto LABEL_47;
            }
LABEL_39:
            char v20 = sub_256178828();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_48;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_44:
  uint64_t v21 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v21 + 48) + a2) = v26;
  uint64_t v22 = *(void *)(v21 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_47:
    swift_bridgeObjectRelease_n();
LABEL_48:
    sub_256178858();
    __break(1u);
    JUMPOUT(0x2561500ECLL);
  }
  *(void *)(v21 + 16) = v24;
  return result;
}

uint64_t sub_25615013C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_25614F39C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2561507A4();
      goto LABEL_14;
    }
    sub_2561510C4();
  }
  uint64_t v8 = *v3;
  sub_2561788E8();
  sub_2561788F8();
  uint64_t result = sub_256178928();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for Label(0);
      uint64_t result = sub_256178858();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_25615028C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_25614F644();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_256150938();
      goto LABEL_14;
    }
    sub_25615133C();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_2561788D8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_256178858();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_2561503B0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unsigned __int8 v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  char v22 = result;
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_25614F8E8();
    }
    else
    {
      if (v8 > v7)
      {
        uint64_t result = (uint64_t)sub_256150AF0(&qword_269F47918, (void (*)(void))sub_256154960);
        goto LABEL_28;
      }
      sub_2561515C0();
    }
    uint64_t v9 = *v3;
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t result = sub_256178928();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      uint64_t v12 = v6;
      while (2)
      {
        unint64_t v13 = 0x80000002561A9E60;
        unint64_t v14 = 0xD000000000000010;
        switch(*(unsigned char *)(*(void *)(v9 + 48) + a2))
        {
          case 1:
            unint64_t v14 = 0x6574614720656741;
            unint64_t v13 = 0xEF6F72746E492064;
            break;
          case 2:
            unint64_t v13 = 0xE500000000000000;
            unint64_t v14 = 0x6F72746E49;
            break;
          case 3:
            unint64_t v14 = 0x6E6F697473657551;
            unint64_t v13 = 0xE900000000000073;
            break;
          case 4:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v14 = 0x746C75736552;
            break;
          default:
            break;
        }
        unint64_t v15 = 0x80000002561A9E60;
        unint64_t v16 = 0xD000000000000010;
        switch(v12)
        {
          case 1:
            unint64_t v15 = 0xEF6F72746E492064;
            if (v14 != 0x6574614720656741) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 2:
            unint64_t v15 = 0xE500000000000000;
            unint64_t v16 = 0x6F72746E49;
            goto LABEL_21;
          case 3:
            unint64_t v15 = 0xE900000000000073;
            if (v14 != 0x6E6F697473657551) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 4:
            unint64_t v15 = 0xE600000000000000;
            if (v14 != 0x746C75736552) {
              goto LABEL_23;
            }
            goto LABEL_22;
          default:
LABEL_21:
            if (v14 != v16) {
              goto LABEL_23;
            }
LABEL_22:
            if (v13 == v15) {
              goto LABEL_31;
            }
LABEL_23:
            char v17 = sub_256178828();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_32;
            }
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_28:
  uint64_t v18 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v18 + 48) + a2) = v22;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    sub_256178858();
    __break(1u);
    JUMPOUT(0x256150768);
  }
  *(void *)(v18 + 16) = v21;
  return result;
}

void *sub_2561507A4()
{
  uint64_t v1 = v0;
  sub_256154EF0();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256178518();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_256150938()
{
  uint64_t v1 = v0;
  sub_256154910(0, &qword_269F47910, MEMORY[0x263F8D6D8], MEMORY[0x263F8DBD8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256178518();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_256150AF0(unint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  sub_2561549B4(0, a1, a2);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_256178518();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v3 = v6;
    return result;
  }
  uint64_t result = (void *)(v5 + 56);
  uint64_t v8 = v4 + 56;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 56 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v4 + 56), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 56);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v15) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v15) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v6 + 48) + v17) = *(unsigned char *)(*(void *)(v4 + 48) + v17);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v15) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_256150C8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2561549B4(0, &qword_269F47948, (void (*)(void))sub_256154A14);
  uint64_t v3 = sub_256178528();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v16 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_33;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_37;
    }
    if (v18 >= v27) {
      break;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v27) {
        break;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v27) {
          break;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v10);
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v27) {
            break;
          }
          unint64_t v19 = *(void *)(v6 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v10 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_38;
              }
              if (v10 >= v27) {
                goto LABEL_34;
              }
              unint64_t v19 = *(void *)(v6 + 8 * v10);
              ++v20;
              if (v19) {
                goto LABEL_32;
              }
            }
          }
          int64_t v10 = v20;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_33:
    char v25 = *(unsigned char *)(*(void *)(v2 + 48) + v17);
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_256178928();
    uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v12) >> 6;
    do
    {
      if (++v14 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x25615109CLL);
      }
      BOOL v23 = v14 == v22;
      if (v14 == v22) {
        unint64_t v14 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v9 + 8 * v14);
    }
    while (v24 == -1);
    unint64_t v15 = __clz(__rbit64(~v24)) + (v14 << 6);
LABEL_8:
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v25;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2561510C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256154EF0();
  uint64_t result = sub_256178528();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_2561788E8();
    sub_2561788F8();
    uint64_t result = sub_256178928();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25615133C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256154910(0, &qword_269F47910, MEMORY[0x263F8D6D8], MEMORY[0x263F8DBD8]);
  uint64_t result = sub_256178528();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  char v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_2561788D8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2561515C0()
{
  uint64_t v1 = *v0;
  sub_2561549B4(0, &qword_269F47918, (void (*)(void))sub_256154960);
  uint64_t v2 = sub_256178528();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v15 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_33;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_37;
    }
    if (v17 >= v26) {
      break;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v26) {
        break;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v26) {
          break;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v9);
        if (!v18)
        {
          int64_t v19 = v17 + 3;
          if (v19 >= v26) {
            break;
          }
          unint64_t v18 = *(void *)(v5 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v9 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_38;
              }
              if (v9 >= v26) {
                goto LABEL_34;
              }
              unint64_t v18 = *(void *)(v5 + 8 * v9);
              ++v19;
              if (v18) {
                goto LABEL_32;
              }
            }
          }
          int64_t v9 = v19;
        }
      }
    }
LABEL_32:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_33:
    char v24 = *(unsigned char *)(*(void *)(v1 + 48) + v16);
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_256178928();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    if (((-1 << v12) & ~*(void *)(v8 + 8 * (v12 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v20 = 0;
    unint64_t v21 = (unint64_t)(63 - v11) >> 6;
    do
    {
      if (++v13 == v21 && (v20 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x256151924);
      }
      BOOL v22 = v13 == v21;
      if (v13 == v21) {
        unint64_t v13 = 0;
      }
      v20 |= v22;
      uint64_t v23 = *(void *)(v8 + 8 * v13);
    }
    while (v23 == -1);
    unint64_t v14 = __clz(__rbit64(~v23)) + (v13 << 6);
LABEL_8:
    *(void *)(v8 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v3 + 48) + v14) = v24;
    ++*(void *)(v3 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
LABEL_36:
  *unint64_t v0 = v3;
  return result;
}

uint64_t sub_256151938(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25615365C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2561519A4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2561519A4(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_2561787D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_256152030((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_256152458((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          long long v90 = &v86[16 * v85 + 32];
          *(void *)long long v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_256178048();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      BOOL v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2561522A0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_2561522A0((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    char v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          int v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_256152030((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        char v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_256178648();
  __break(1u);
  return result;
}

uint64_t sub_256152030(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      BOOL v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            BOOL v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    BOOL v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_25615239C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

char *sub_2561522A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154894();
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25615239C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_2561786C8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_256152458(uint64_t a1)
{
  return sub_2561522A0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25615246C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154CBC(0, &qword_269F43AA8, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_2561525EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154CBC(0, (unint64_t *)&qword_26B2AD360, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256152778(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154E8C(0, &qword_269F47980, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256152904(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154CBC(0, &qword_269F47978, MEMORY[0x263F18FF0], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256152A80(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154E8C(0, &qword_269F47988, (uint64_t (*)(uint64_t))sub_255FEAE7C, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_255FEAE7C(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256152C34(char a1, int64_t a2, char a3, void *a4)
{
  return sub_25615315C(a1, a2, a3, a4, &qword_269F47940, (uint64_t (*)(uint64_t))_s5EntryVMa, (uint64_t (*)(void))_s5EntryVMa);
}

uint64_t sub_256152C68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154CBC(0, (unint64_t *)&qword_269F444B0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256152DFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154CBC(0, &qword_269F43AA0, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256152F7C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2561533E0(a1, a2, a3, a4, (unint64_t *)&qword_269F43B18, (uint64_t (*)(uint64_t))type metadata accessor for Label);
}

uint64_t sub_256152F9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256154CBC(0, (unint64_t *)&qword_269F46E60, MEMORY[0x263F1B898], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256153128(char a1, int64_t a2, char a3, void *a4)
{
  return sub_25615315C(a1, a2, a3, a4, &qword_269F47938, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
}

uint64_t sub_25615315C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_256154E8C(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  void v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  BOOL v22 = (char *)v17 + v21;
  uint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_2561533C0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2561533E0(a1, a2, a3, a4, &qword_269F47930, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain);
}

uint64_t sub_2561533E0(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_256154E8C(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = _swift_stdlib_malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 25;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v15 = v12 + 32;
  unint64_t v16 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[8 * v10]) {
      memmove(v15, v16, 8 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v10] || v15 >= &v16[8 * v10])
  {
    memcpy(v15, v16, 8 * v10);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256153558(char a1, int64_t a2, char a3, void *a4)
{
  return sub_25615315C(a1, a2, a3, a4, &qword_269F46128, MEMORY[0x263F06338], MEMORY[0x263F06338]);
}

uint64_t sub_25615358C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_25615315C(a1, a2, a3, a4, &qword_269F47928, MEMORY[0x263F07A30], MEMORY[0x263F07A30]);
}

void sub_2561535C0()
{
}

uint64_t sub_2561535D4(uint64_t a1)
{
  return sub_2561533E0(0, *(void *)(a1 + 16), 0, (char *)a1, (unint64_t *)&qword_269F43B18, (uint64_t (*)(uint64_t))type metadata accessor for Label);
}

uint64_t sub_256153618(uint64_t a1)
{
  return sub_2561533E0(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_269F47930, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain);
}

uint64_t sub_25615365C(uint64_t a1)
{
  return sub_256152DFC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_256153670(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for Label(0);
  sub_256154F84(&qword_269F464F8, type metadata accessor for Label);
  uint64_t result = sub_256178108();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_25614E950(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_25615371C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t sub_256153748@<X0>(uint64_t a1@<X8>)
{
  return sub_25614AAE4(*(void **)(v1 + 16), a1);
}

void sub_256153750(uint64_t a1)
{
}

void sub_256153784()
{
  if (!qword_269F47868)
  {
    sub_256153824(255);
    sub_256154E8C(255, &qword_269F47878, (uint64_t (*)(uint64_t))sub_2561538D4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47868);
    }
  }
}

void sub_256153824(uint64_t a1)
{
}

void sub_256153844(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256154CBC(255, &qword_269F43110, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2561538D4(uint64_t a1)
{
}

void sub_256153908()
{
  if (!qword_269F47888)
  {
    sub_256153994(255, &qword_269F47890, sub_256153A00);
    sub_256153C64();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47888);
    }
  }
}

void sub_256153994(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256176D38();
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256153A00(uint64_t a1)
{
}

void sub_256153A20()
{
  if (!qword_269F478A0)
  {
    sub_256153AB4();
    sub_256153BF4();
    unint64_t v0 = sub_256177678();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F478A0);
    }
  }
}

void sub_256153AB4()
{
  if (!qword_269F478A8)
  {
    uint64_t v0 = MEMORY[0x263F8D6C8];
    sub_256154CBC(255, &qword_269F478B0, MEMORY[0x263F8D6C8], MEMORY[0x263F8D488]);
    sub_255FFC224();
    sub_256153B9C(&qword_269F478B8, &qword_269F478B0, v0);
    unint64_t v1 = sub_2561777E8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_269F478A8);
    }
  }
}

uint64_t sub_256153B9C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256154CBC(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256153BF4()
{
  unint64_t result = qword_269F478C0;
  if (!qword_269F478C0)
  {
    sub_256153AB4();
    sub_2560755C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F478C0);
  }
  return result;
}

void sub_256153C64()
{
  if (!qword_269F478C8)
  {
    sub_256153824(255);
    sub_256153F58(&qword_269F478D0, sub_256153824, (void (*)(void))sub_256075670, (void (*)(void))sub_255F73540);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F478C8);
    }
  }
}

uint64_t sub_256153D34@<X0>(uint64_t a1@<X8>)
{
  return sub_25614BC0C(*(long long **)(v1 + 16), a1);
}

uint64_t sub_256153D44()
{
  return swift_deallocObject();
}

uint64_t sub_256153D54(uint64_t a1, uint64_t a2)
{
  sub_256153824(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256153DB8(uint64_t a1, uint64_t a2)
{
  sub_256154E8C(0, &qword_269F47878, (uint64_t (*)(uint64_t))sub_2561538D4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256153E4C(uint64_t a1)
{
  sub_256154E8C(0, &qword_269F47878, (uint64_t (*)(uint64_t))sub_2561538D4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256153ED8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256153F40()
{
  return sub_25614BF30(*(_OWORD **)(v0 + 16));
}

uint64_t sub_256153F48()
{
  return swift_deallocObject();
}

uint64_t sub_256153F58(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256153FE4()
{
  return sub_256154F84(&qword_269F478E8, (void (*)(uint64_t))sub_256153A20);
}

uint64_t sub_256154018(uint64_t a1, uint64_t a2)
{
  sub_256153994(0, &qword_269F47890, sub_256153A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2561540A0@<X0>(uint64_t a1@<X8>)
{
  return sub_25614C2C8(*(long long **)(v1 + 16), a1);
}

uint64_t sub_2561540B0()
{
  return swift_deallocObject();
}

uint64_t sub_2561540C4()
{
  return sub_25614C5EC(v0 + 16);
}

uint64_t sub_2561540CC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v3 = v2;
  return a1;
}

uint64_t sub_256154130(uint64_t a1, uint64_t a2)
{
  sub_256153994(0, &qword_269F47890, sub_256153A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2561541B0(uint64_t a1)
{
  sub_256153994(0, &qword_269F47890, sub_256153A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256154228(uint64_t a1, uint64_t a2)
{
  sub_256154E8C(0, &qword_269F47878, (uint64_t (*)(uint64_t))sub_2561538D4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2561542BC()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_25615431C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_255FAF204;
  return sub_25614C800(a1, v4, v5, v1 + 32);
}

uint64_t sub_2561543D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroy_36Tm()
{
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_256154494(uint64_t *a1)
{
  return sub_25614C074(a1);
}

uint64_t sub_25615449C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_256178108();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_25614EA70(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_256154510(uint64_t a1)
{
  if (a1 > 89)
  {
    if (a1 == 90)
    {
      if (qword_269F42348 == -1)
      {
LABEL_13:
        id v2 = (id)qword_269F50C88;
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_2561755B8();
        swift_bridgeObjectRelease();

        return v3;
      }
    }
    else
    {
      if (a1 != 180) {
        goto LABEL_14;
      }
      if (qword_269F42348 == -1) {
        goto LABEL_13;
      }
    }
LABEL_17:
    swift_once();
    goto LABEL_13;
  }
  if (!a1)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_13;
    }
    goto LABEL_17;
  }
  if (a1 == 30)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_13;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_256154E8C(0, (unint64_t *)&qword_269F462F0, (uint64_t (*)(uint64_t))sub_25610701C, MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v6 + 16) = xmmword_2561A0960;
  uint64_t v8 = MEMORY[0x263F8D750];
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 32) = a1;
  uint64_t v9 = sub_256177EB8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_256154894()
{
  if (!qword_269F47900)
  {
    sub_256154910(255, &qword_269F47908, MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47900);
    }
  }
}

void sub_256154910(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F8D6C8]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_256154960()
{
  unint64_t result = qword_269F47920;
  if (!qword_269F47920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47920);
  }
  return result;
}

void sub_2561549B4(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_256178548();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_256154A14()
{
  unint64_t result = qword_269F47950;
  if (!qword_269F47950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47950);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsLoggingPatternBasedPromptedAssessmentsSection()
{
  return &type metadata for AssessmentsLoggingPatternBasedPromptedAssessmentsSection;
}

unint64_t sub_256154A7C()
{
  unint64_t result = qword_269F47958;
  if (!qword_269F47958)
  {
    sub_256154E8C(255, &qword_269F47960, (uint64_t (*)(uint64_t))sub_25614E3AC, MEMORY[0x263F8D8F0]);
    sub_25614E2D8();
    sub_25614E18C();
    sub_2561769B8();
    sub_256154F84(&qword_269F47850, (void (*)(uint64_t))sub_25614E18C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47958);
  }
  return result;
}

unint64_t sub_256154BD0()
{
  unint64_t result = qword_269F47968;
  if (!qword_269F47968)
  {
    sub_256154E18(255, &qword_269F47970, sub_256153750);
    sub_256154F84(&qword_269F478D8, sub_256153750);
    sub_2560755C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47968);
  }
  return result;
}

uint64_t sub_256154CA0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_256154CBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256154D08@<X0>(uint64_t a1@<X8>)
{
  return sub_25614CFF0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_256154D18@<X0>(uint64_t a1@<X8>)
{
  return sub_25614D38C(a1);
}

uint64_t sub_256154D20()
{
  return swift_deallocObject();
}

unint64_t sub_256154D34()
{
  unint64_t result = qword_269F47990;
  if (!qword_269F47990)
  {
    sub_256154E18(255, &qword_269F47998, sub_256153824);
    sub_256153F58(&qword_269F478D0, sub_256153824, (void (*)(void))sub_256075670, (void (*)(void))sub_255F73540);
    sub_2560755C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47990);
  }
  return result;
}

void sub_256154E18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_255FFC224();
    unint64_t v4 = sub_256177848();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256154E8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_256154EF0()
{
  if (!qword_269F479A0)
  {
    type metadata accessor for Label(255);
    sub_256154F84(&qword_269F464F8, type metadata accessor for Label);
    unint64_t v0 = sub_256178548();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F479A0);
    }
  }
}

uint64_t sub_256154F84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id StateOfMindSampleCountContext.__allocating_init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v11 = (char *)objc_allocWithZone(v5);
  uint64_t v12 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(void *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  int64_t v13 = &v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(void *)int64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  *(void *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_2561555B4();
  uint64_t v14 = v11;
  id v15 = a4;
  sub_256141D2C(a3, a5, 0);
  *(void *)&v14[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v16;
  *(void *)&v14[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  uint64_t v17 = *(void **)&v11[v12];
  *(void *)&v11[v12] = 0;
  id v18 = a5;

  v21.receiver = v14;
  v21.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  id v19 = objc_msgSendSuper2(&v21, sel_init);

  return v19;
}

void sub_2561550F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_256178678();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      uint64_t v15 = MEMORY[0x263F8EE78];
      sub_2560E879C(0, v2 & ~(v2 >> 63), 0);
      if (v2 < 0)
      {
LABEL_22:
        __break(1u);
        return;
      }
      uint64_t v3 = 0;
      uint64_t v4 = v15;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)MEMORY[0x25A2A1000](v3, a1);
        }
        else {
          id v5 = *(id *)(a1 + 8 * v3 + 32);
        }
        uint64_t v6 = v5;
        uint64_t v7 = sub_256177B68();

        unint64_t v9 = *(void *)(v15 + 16);
        unint64_t v8 = *(void *)(v15 + 24);
        unint64_t v10 = v9 + 1;
        if (v9 >= v8 >> 1) {
          sub_2560E879C(v8 > 1, v9 + 1, 1);
        }
        ++v3;
        *(void *)(v15 + 16) = v10;
        *(void *)(v15 + 8 * v9 + 32) = v7;
      }
      while (v2 != v3);
LABEL_14:
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      while (1)
      {
        uint64_t v13 = *(void *)(v4 + 8 * v11 + 32);
        BOOL v14 = __OFADD__(v12, v13);
        v12 += v13;
        if (v14) {
          break;
        }
        if (v10 == ++v11) {
          goto LABEL_17;
        }
      }
      __break(1u);
      goto LABEL_22;
    }
  }
  uint64_t v4 = MEMORY[0x263F8EE78];
  unint64_t v10 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (v10) {
    goto LABEL_14;
  }
  uint64_t v12 = 0;
LABEL_17:
  swift_bridgeObjectRelease();

  sub_256155290(v12, 0);
}

uint64_t sub_256155290(uint64_t a1, char a2)
{
  id v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate), sel_localizedNameKey);
  uint64_t v6 = sub_256177EE8();
  uint64_t v8 = v7;

  uint64_t v9 = 0;
  if (a2)
  {
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  uint64_t v10 = 0;
  if (a1 < 1)
  {
LABEL_6:
    id v18 = sub_256022FF4(v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v18;
  }
  sub_2560A8AF0();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v11 + 16) = xmmword_2561A0960;
  uint64_t v13 = MEMORY[0x263F8D750];
  *(void *)(v11 + 56) = v12;
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 32) = a1;
  uint64_t v9 = sub_256177EB8();
  uint64_t v10 = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_256177EA8();
  id v16 = (id)HKUILocalizedString();

  if (v16)
  {
    sub_256177EE8();

    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_2561A0960;
    *(void *)(v17 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v17 + 64) = MEMORY[0x263F8D750];
    *(void *)(v17 + 32) = a1;
    sub_256177EB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

id StateOfMindSampleCountContext.init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(void *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  uint64_t v11 = &v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  *(void *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_2561555B4();
  uint64_t v12 = v6;
  id v13 = a4;
  sub_256141D2C(a3, a5, 0);
  *(void *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v14;
  *(void *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  uint64_t v15 = *(void **)&v6[v10];
  *(void *)&v6[v10] = 0;
  id v16 = a5;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

unint64_t sub_2561555B4()
{
  unint64_t result = qword_269F46A00;
  if (!qword_269F46A00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F46A00);
  }
  return result;
}

id StateOfMindSampleCountContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindSampleCountContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StateOfMindSampleCountContext()
{
  return self;
}

uint64_t method lookup function for StateOfMindSampleCountContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindSampleCountContext);
}

uint64_t destroy for MomentaryDatePickerStyle()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MomentaryDatePickerStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MomentaryDatePickerStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MomentaryDatePickerStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MomentaryDatePickerStyle()
{
  return &type metadata for MomentaryDatePickerStyle;
}

uint64_t sub_256155800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25615581C()
{
  return MEMORY[0x263F1BA00];
}

uint64_t sub_256155828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2561577D0(0, &qword_269F479A8, (uint64_t (*)(uint64_t))sub_256156D24, MEMORY[0x263F1BA08], MEMORY[0x263F19B20]);
  uint64_t v110 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v111 = (char *)&v83 - v5;
  uint64_t v6 = sub_256176C88();
  uint64_t v102 = *(void *)(v6 - 8);
  uint64_t v103 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v100 = v7;
  char v101 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25605B2A0();
  long long v98 = v8;
  uint64_t v97 = *(v8 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v106 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256156E30();
  uint64_t v95 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v96 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561577D0(0, &qword_269F479B8, (uint64_t (*)(uint64_t))sub_256156E30, MEMORY[0x263F1A238], MEMORY[0x263F18E28]);
  uint64_t v112 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v107 = (uint64_t)&v83 - v13;
  sub_256156D24();
  uint64_t v109 = v14;
  uint64_t v105 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v99 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v104 = (char *)&v83 - v17;
  sub_2561570BC(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  objc_super v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = sub_256175868();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v94 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v93 = (char *)&v83 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v108 = (char *)&v83 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v83 - v32;
  sub_256176C58();
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v34(v23, 1, v24) == 1)
  {
    objc_super v21 = v23;
LABEL_5:
    sub_2560240C0((uint64_t)v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = type metadata accessor for MomentaryDatePickerFullView();
    unint64_t v38 = sub_256156E98();
    uint64_t v39 = sub_256157020(&qword_269F479E0, (void (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView);
    uint64_t v114 = (void *)v112;
    uint64_t v115 = v37;
    unint64_t v116 = v38;
    uint64_t v117 = v39;
    swift_getOpaqueTypeConformance2();
    return sub_256176898();
  }
  uint64_t v91 = a2;
  char v35 = v23;
  int v36 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v36(v33, v35, v24);
  sub_256176C48();
  if (v34(v21, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
    goto LABEL_5;
  }
  long long v90 = v33;
  uint64_t v89 = v25 + 32;
  uint64_t v88 = (void (*)(void, void, void))v36;
  v36(v108, v21, v24);
  uint64_t v41 = v92;
  uint64_t v42 = *(void *)(v92 + 8);
  unint64_t v44 = *(void *)(v92 + 16);
  uint64_t v119 = *(uint64_t **)v92;
  unint64_t v43 = v119;
  long long v118 = *(_OWORD *)(v92 + 24);
  uint64_t v45 = swift_allocObject();
  uint64_t v87 = &v83;
  long long v46 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)(v45 + 16) = *(_OWORD *)v41;
  *(_OWORD *)(v45 + 32) = v46;
  *(void *)(v45 + 48) = *(void *)(v41 + 32);
  MEMORY[0x270FA5388](v45);
  uint64_t v92 = a1;
  sub_255F9A600((uint64_t)&v119);
  swift_retain();
  sub_255FC580C((uint64_t)&v118);
  sub_2561775C8();
  uint64_t v87 = v43;
  uint64_t v114 = v43;
  uint64_t v115 = v42;
  uint64_t v86 = v42;
  unint64_t v84 = v44;
  unint64_t v116 = v44;
  sub_2561570BC(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B750]);
  uint64_t v83 = v47;
  MEMORY[0x25A2A01A0](&v113);
  if ((void)v113 == 1) {
    uint64_t v48 = sub_256177438();
  }
  else {
    uint64_t v48 = sub_2561774B8();
  }
  uint64_t v49 = v48;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v114 = (void *)v49;
  swift_retain();
  uint64_t v51 = sub_256175F48();
  uint64_t v52 = v97;
  uint64_t v53 = (uint64_t)v96;
  char v54 = v106;
  uint64_t v55 = v98;
  (*(void (**)(char *, char *, void *))(v97 + 16))(v96, v106, v98);
  swift_release();
  uint64_t v56 = (uint64_t *)(v53 + *(int *)(v95 + 36));
  *uint64_t v56 = KeyPath;
  v56[1] = v51;
  (*(void (**)(char *, void *))(v52 + 8))(v54, v55);
  uint64_t v114 = v87;
  uint64_t v115 = v86;
  unint64_t v116 = v84;
  MEMORY[0x25A2A01A0](&v113, v83);
  LOBYTE(v49) = (void)v113 == 1;
  uint64_t v57 = v107;
  sub_2561571E8(v53, v107);
  *(unsigned char *)(v57 + *(int *)(v112 + 36)) = v49;
  sub_25615724C(v53);
  long long v113 = v118;
  sub_25602FB60(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  long long v98 = v114;
  uint64_t v97 = v115;
  LODWORD(v106) = v116;
  uint64_t v58 = v25;
  uint64_t v85 = v25;
  BOOL v59 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v60 = v93;
  v59(v93, v90, v24);
  uint64_t v61 = v94;
  v59(v94, v108, v24);
  uint64_t v62 = v101;
  uint64_t v63 = v102;
  uint64_t v64 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v92, v103);
  uint64_t v65 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v66 = (v65 + 16) & ~v65;
  uint64_t v67 = (v26 + v65 + v66) & ~v65;
  unint64_t v68 = (v26 + *(unsigned __int8 *)(v63 + 80) + v67) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v69 = swift_allocObject();
  unint64_t v70 = v60;
  uint64_t v71 = (void (*)(uint64_t, char *, uint64_t))v88;
  v88(v69 + v66, v70, v24);
  v71(v69 + v67, v61, v24);
  (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v69 + v68, v62, v64);
  uint64_t v72 = type metadata accessor for MomentaryDatePickerFullView();
  unint64_t v81 = sub_256156E98();
  uint64_t v82 = sub_256157020(&qword_269F479E0, (void (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView);
  uint64_t v73 = v99;
  uint64_t v74 = (void *)v112;
  uint64_t v75 = v107;
  sub_2561772E8();
  swift_release();
  swift_release();
  swift_release();
  sub_256157504(v75);
  uint64_t v77 = v104;
  uint64_t v76 = v105;
  uint64_t v78 = v73;
  uint64_t v79 = v109;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v78, v109);
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v111, v77, v79);
  swift_storeEnumTagMultiPayload();
  uint64_t v114 = v74;
  uint64_t v115 = v72;
  unint64_t v116 = v81;
  uint64_t v117 = v82;
  swift_getOpaqueTypeConformance2();
  sub_256176898();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v79);
  id v80 = *(void (**)(char *, uint64_t))(v85 + 8);
  v80(v108, v24);
  return ((uint64_t (*)(char *, uint64_t))v80)(v90, v24);
}

uint64_t sub_256156470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_256175758();
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v45 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_256175708();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_256175718();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2561757B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v39 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v43 = sub_256175868();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_256176C78();
  MEMORY[0x25A29DDD0](v20);
  sub_2561756F8();
  sub_2561756E8();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v44);
  sub_2561756A8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v41);
  objc_super v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  uint64_t v22 = v45;
  sub_256175748();
  sub_256175798();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v47);
  v21(v15, v8);
  sub_256157020(&qword_269F44BF8, MEMORY[0x263F07258]);
  sub_256175848();
  v21(v17, v8);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v43);
  uint64_t v49 = v51;
  uint64_t v50 = v52;
  sub_255F5CE90();
  uint64_t v23 = sub_256177028();
  uint64_t v25 = v24;
  LOBYTE(v5) = v26 & 1;
  sub_256176DF8();
  uint64_t v27 = sub_256176FD8();
  uint64_t v29 = v28;
  LOBYTE(v17) = v30;
  swift_release();
  sub_255F67B2C(v23, v25, v5);
  swift_bridgeObjectRelease();
  sub_256176E88();
  uint64_t v31 = sub_256176F88();
  uint64_t v33 = v32;
  LOBYTE(v19) = v34;
  uint64_t v36 = v35;
  sub_255F67B2C(v27, v29, v17 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v48;
  *uint64_t v48 = v31;
  v38[1] = v33;
  *((unsigned char *)v38 + 16) = v19 & 1;
  v38[3] = v36;
  return result;
}

uint64_t sub_256156974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2561570BC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v38 - v9;
  sub_256157598();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v44 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - v15;
  sub_256044014();
  uint64_t v45 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v43 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  objc_super v21 = (char *)&v38 - v20;
  uint64_t v22 = sub_256175868();
  sub_256157020((unint64_t *)&qword_269F451B8, MEMORY[0x263F07490]);
  uint64_t result = sub_256177E68();
  if (result)
  {
    uint64_t v24 = *(int *)(v12 + 48);
    uint64_t v41 = a4;
    uint64_t v42 = v10;
    uint64_t v25 = &v16[v24];
    uint64_t v26 = *(void *)(v22 - 8);
    uint64_t v40 = a3;
    uint64_t v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    uint64_t v39 = v21;
    v28(v16, a1, v22);
    unint64_t v38 = v25;
    v28(v25, a2, v22);
    uint64_t v29 = v44;
    char v30 = &v44[*(int *)(v12 + 48)];
    v28(v44, (uint64_t)v16, v22);
    v28(v30, (uint64_t)v25, v22);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    uint64_t v32 = v43;
    v31(v43, v29, v22);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v27 + 8);
    v33(v30, v22);
    char v34 = &v29[*(int *)(v12 + 48)];
    v31(v29, v16, v22);
    v31(v34, v38, v22);
    v31(&v32[*(int *)(v45 + 36)], v34, v22);
    v33(v29, v22);
    uint64_t v35 = (uint64_t)v32;
    uint64_t v36 = (uint64_t)v39;
    sub_256157600(v35, (uint64_t)v39);
    uint64_t v37 = (uint64_t)v42;
    sub_256176C68();
    return sub_2560407C8(v36, v37, v41);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_256156D24()
{
  if (!qword_269F479B0)
  {
    sub_2561577D0(255, &qword_269F479B8, (uint64_t (*)(uint64_t))sub_256156E30, MEMORY[0x263F1A238], MEMORY[0x263F18E28]);
    type metadata accessor for MomentaryDatePickerFullView();
    sub_256156E98();
    sub_256157020(&qword_269F479E0, (void (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F479B0);
    }
  }
}

void sub_256156E30()
{
  if (!qword_269F479C0)
  {
    sub_25605B2A0();
    sub_255FAE284();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F479C0);
    }
  }
}

unint64_t sub_256156E98()
{
  unint64_t result = qword_269F479C8;
  if (!qword_269F479C8)
  {
    sub_2561577D0(255, &qword_269F479B8, (uint64_t (*)(uint64_t))sub_256156E30, MEMORY[0x263F1A238], MEMORY[0x263F18E28]);
    sub_256156F48();
    sub_256157068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F479C8);
  }
  return result;
}

unint64_t sub_256156F48()
{
  unint64_t result = qword_269F479D0;
  if (!qword_269F479D0)
  {
    sub_256156E30();
    sub_256157020((unint64_t *)&qword_269F42EE0, (void (*)(uint64_t))sub_25605B2A0);
    sub_256157020((unint64_t *)&qword_269F43960, (void (*)(uint64_t))sub_255FAE284);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F479D0);
  }
  return result;
}

uint64_t sub_256157020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256157068()
{
  unint64_t result = qword_269F479D8;
  if (!qword_269F479D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F479D8);
  }
  return result;
}

void sub_2561570BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256157120()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256157168()
{
  return sub_256177588();
}

uint64_t sub_2561571D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_256156470(a1);
}

uint64_t sub_2561571E8(uint64_t a1, uint64_t a2)
{
  sub_256156E30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25615724C(uint64_t a1)
{
  sub_256156E30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2561572A8()
{
  uint64_t v1 = sub_256175868();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  uint64_t v7 = sub_256176C88();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v6 + v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v0 + v4;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);
  v11(v0 + v6, v1);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);

  return swift_deallocObject();
}

uint64_t sub_256157418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_256175868() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = (v6 + v4 + v5) & ~v4;
  uint64_t v8 = *(void *)(sub_256176C88() - 8);
  uint64_t v9 = v1 + ((v7 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_256156974(v1 + v5, v1 + v7, v9, a1);
}

uint64_t sub_256157504(uint64_t a1)
{
  sub_2561577D0(0, &qword_269F479B8, (uint64_t (*)(uint64_t))sub_256156E30, MEMORY[0x263F1A238], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_256157598()
{
  if (!qword_269F479E8)
  {
    sub_256175868();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F479E8);
    }
  }
}

uint64_t sub_256157600(uint64_t a1, uint64_t a2)
{
  sub_256044014();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_256157668()
{
  unint64_t result = qword_269F479F0;
  if (!qword_269F479F0)
  {
    sub_2561577D0(255, &qword_269F479F8, (uint64_t (*)(uint64_t))sub_256156D24, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
    sub_2561577D0(255, &qword_269F479B8, (uint64_t (*)(uint64_t))sub_256156E30, MEMORY[0x263F1A238], MEMORY[0x263F18E28]);
    type metadata accessor for MomentaryDatePickerFullView();
    sub_256156E98();
    sub_256157020(&qword_269F479E0, (void (*)(uint64_t))type metadata accessor for MomentaryDatePickerFullView);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F479F0);
  }
  return result;
}

void sub_2561577D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t Symbol.image.getter()
{
  switch(*v0)
  {
    case 6:
      type metadata accessor for MentalHealthUIRepresentative();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t result = sub_256177538();
      break;
    default:
      uint64_t result = sub_256177508();
      break;
  }
  return result;
}

unint64_t Symbol.name.getter()
{
  unint64_t result = 0x7261646E656C6163;
  switch(*v0)
  {
    case 1:
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x72616D6B63656863;
      break;
    case 3:
      unint64_t result = 0x6B636F6C63;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

id Symbol.bundle.getter()
{
  if (*v0 != 6) {
    return 0;
  }
  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  return objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
}

uint64_t Symbol.hash(into:)()
{
  return sub_2561788F8();
}

BOOL static Symbol.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Symbol.hashValue.getter()
{
  return sub_256178928();
}

unint64_t sub_256157BF4()
{
  unint64_t result = qword_269F47A00;
  if (!qword_269F47A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47A00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Symbol(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256157D14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Symbol()
{
  return &type metadata for Symbol;
}

uint64_t sub_256157D4C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_256157DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12 = (int *)type metadata accessor for LabelsPicker();
  uint64_t v13 = (uint64_t *)(a5 + v12[7]);
  *uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = (uint64_t *)(a5 + v12[8]);
  *uint64_t v15 = swift_getKeyPath();
  sub_2561580D0(0, &qword_269F47D00, MEMORY[0x263F18520], v14);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a5 + v12[10];
  LOBYTE(v32) = 0;
  sub_256177568();
  uint64_t v17 = v30;
  *(unsigned char *)uint64_t v16 = (_BYTE)v29;
  *(void *)(v16 + 8) = v17;
  *(double *)a5 = a6;
  *(void *)(a5 + 8) = a1;
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  uint64_t v29 = (void *)a2;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  sub_2561580D0(0, &qword_269F45478, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B750]);
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  MEMORY[0x25A2A01A0](&v32, v19);
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_256153670(v20);
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_256153670(v22);
  swift_bridgeObjectRelease();
  if (*(void *)(v23 + 16) <= *(void *)(v21 + 16) >> 3)
  {
    uint64_t v29 = (void *)v21;
    sub_25615B240(v23);
  }
  else
  {
    sub_25615B3B4(v23, v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_255FB3688(v24);
  swift_bridgeObjectRelease();
  uint64_t v29 = v25;
  sub_25615A4CC((uint64_t *)&v29);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t)v29;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = (uint64_t *)(a5 + v12[9]);
  *uint64_t v28 = v26;
  v28[1] = 0;
  return result;
}

uint64_t type metadata accessor for LabelsPicker()
{
  uint64_t result = qword_269F47A08;
  if (!qword_269F47A08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2561580D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256158134(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    BOOL v6 = (uint64_t (*)(uint64_t *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v12 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      uint64_t v11 = *(void *)(a3 + 8 * v7 + 32);
      uint64_t v13 = v11;
      uint64_t result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v14 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_2560E885C(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v14;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          uint64_t result = sub_2560E885C(v9 > 1, v10 + 1, 1);
          uint64_t v8 = v14;
        }
        *(void *)(v8 + 16) = v10 + 1;
        *(void *)(v8 + 8 * v10 + 32) = v11;
        BOOL v6 = v12;
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_25615827C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = type metadata accessor for LabelsPicker();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25615D888();
  uint64_t v36 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25615DD3C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  uint64_t v38 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v10 = sub_256176798();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 0;
  sub_25615E480(0, &qword_269F47A80, &qword_269F47A20, (uint64_t (*)(uint64_t))sub_25615D93C);
  sub_256158780(v2, (uint64_t)&v10[*(int *)(v14 + 44)]);
  uint64_t v15 = v2 + *(int *)(v4 + 48);
  char v16 = *(unsigned char *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  LOBYTE(v44[0]) = v16;
  v44[1] = v17;
  sub_25615E754(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  int v31 = BYTE8(v42);
  uint64_t v35 = type metadata accessor for LabelsPicker;
  sub_25615E4FC(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LabelsPicker);
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v33 = v18 | 7;
  uint64_t v34 = v19 + v6;
  uint64_t v20 = swift_allocObject();
  uint64_t v32 = type metadata accessor for LabelsPicker;
  sub_25615E418((uint64_t)v7, v20 + v19, (uint64_t (*)(void))type metadata accessor for LabelsPicker);
  sub_25615DE78();
  *(void *)&long long v30 = v21;
  *((void *)&v30 + 1) = sub_25615DC90(&qword_269F47A78, (void (*)(uint64_t))sub_25615D888);
  uint64_t v22 = type metadata accessor for ShowAllLabelsPicker();
  uint64_t v23 = sub_25615DC90(&qword_269F47A70, (void (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker);
  uint64_t v41 = v22;
  *(void *)&long long v42 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = v36;
  sub_2561772E8();
  swift_release();
  swift_release();
  swift_release();
  sub_25615E3B4((uint64_t)v10, (uint64_t (*)(void))sub_25615D888);
  uint64_t v41 = *(void *)(v2 + 16);
  long long v42 = *(_OWORD *)(v2 + 24);
  sub_2561580D0(0, &qword_269F45478, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](v44);
  sub_25615E4FC(v2, (uint64_t)v7, (uint64_t (*)(void))v35);
  uint64_t v25 = swift_allocObject();
  sub_25615E418((uint64_t)v7, v25 + v19, (uint64_t (*)(void))v32);
  sub_25600525C(0);
  uint64_t v41 = v24;
  long long v42 = v30;
  uint64_t v43 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_25615E2F4();
  uint64_t v26 = v37;
  uint64_t v27 = v40;
  sub_256177368();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v27, v26);
}

uint64_t sub_256158780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  sub_25615D970();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v33 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = type metadata accessor for ExpandableInfoSectionHeader();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (uint64_t)&v29 - v11;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v12 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2561755B8();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();

  id v16 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_2561755B8();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();

  *unint64_t v10 = v13;
  v10[1] = v15;
  v10[2] = v17;
  v10[3] = v19;
  uint64_t v20 = (uint64_t *)((char *)v10 + *(int *)(v7 + 24));
  *uint64_t v20 = swift_getKeyPath();
  sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = (char *)v10 + *(int *)(v7 + 28);
  char v34 = 0;
  sub_256177568();
  uint64_t v22 = v36;
  char *v21 = v35;
  *((void *)v21 + 1) = v22;
  uint64_t v23 = v30;
  sub_25615E418((uint64_t)v10, v30, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  *(void *)uint64_t v6 = sub_256176798();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  sub_25615E480(0, &qword_269F47A90, &qword_269F47A38, (uint64_t (*)(uint64_t))sub_25615DA24);
  sub_256158B88(v31, (uint64_t)&v6[*(int *)(v24 + 44)]);
  sub_25615E4FC(v23, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  uint64_t v25 = v33;
  sub_25615E4FC((uint64_t)v6, v33, (uint64_t (*)(void))sub_25615D970);
  uint64_t v26 = v32;
  sub_25615E4FC((uint64_t)v10, v32, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  sub_25615D93C(0);
  sub_25615E4FC(v25, v26 + *(int *)(v27 + 48), (uint64_t (*)(void))sub_25615D970);
  sub_25615E3B4((uint64_t)v6, (uint64_t (*)(void))sub_25615D970);
  sub_25615E3B4(v23, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  sub_25615E3B4(v25, (uint64_t (*)(void))sub_25615D970);
  return sub_25615E3B4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
}

uint64_t sub_256158B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v3 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v86 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LabelsPicker();
  uint64_t v6 = v5 - 8;
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v73 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611DB28(0);
  uint64_t v77 = v8;
  uint64_t v79 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_25611DB28;
  uint64_t v81 = MEMORY[0x263F1A470];
  sub_25615DB90(0, &qword_269F47208, sub_25611DB28, MEMORY[0x263F1A470]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v75 = (char *)&v72 - v12;
  sub_25611DA84();
  uint64_t v78 = v13 - 8;
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v76 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611DA5C(0);
  uint64_t v84 = v15 - 8;
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v80 = (uint64_t)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611DF74(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v83 = (uint64_t)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (uint64_t)&v72 - v20;
  sub_25615DAD4(0);
  uint64_t v22 = v21 - 8;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v85 = (uint64_t)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v72 - v25;
  uint64_t v27 = *(void **)(a1 + 8);
  uint64_t v28 = (void **)(a1 + *(int *)(v6 + 44));
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  uint64_t v92 = v30;
  *(void *)&long long v93 = v29;
  sub_2561580D0(0, &qword_269F465A8, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B5D0]);
  sub_256177578();
  uint64_t v31 = v90;
  uint64_t v92 = v27;
  swift_bridgeObjectRetain();
  sub_255FCD80C(v31);
  uint64_t v32 = v92;
  uint64_t v90 = *(void *)(a1 + 16);
  long long v91 = *(_OWORD *)(a1 + 24);
  sub_2561580D0(0, &qword_269F45478, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B750]);
  sub_256177748();
  uint64_t v33 = v92;
  long long v72 = v93;
  *(void *)&v26[*(int *)(v22 + 68)] = swift_getKeyPath();
  sub_2561580D0(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v26 = v32;
  *((void *)v26 + 1) = v33;
  *((_OWORD *)v26 + 1) = v72;
  v26[32] = 1;
  *(_OWORD *)(v26 + 40) = xmmword_2561A9310;
  *((void *)v26 + 7) = sub_2561595A4;
  *((void *)v26 + 8) = 0;
  *((void *)v26 + 9) = sub_2561595F4;
  *((void *)v26 + 10) = 0;
  uint64_t v34 = v73;
  sub_25615E4FC(a1, v73, (uint64_t (*)(void))type metadata accessor for LabelsPicker);
  unint64_t v35 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v36 = swift_allocObject();
  sub_25615E418(v34, v36 + v35, (uint64_t (*)(void))type metadata accessor for LabelsPicker);
  uint64_t v89 = a1;
  sub_25611DBF0();
  sub_25615DC04((unint64_t *)&qword_269F47248, (void (*)(uint64_t))sub_25611DBF0, (void (*)(void))sub_25611DEAC, (void (*)(void))sub_255F67518);
  sub_2561775C8();
  uint64_t v92 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6CF8);
  sub_25615E754(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_25615DC90(&qword_269F47A98, sub_25611DB28);
  uint64_t v37 = v75;
  uint64_t v38 = v77;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v10, v38);
  LOBYTE(v35) = sub_256176D98();
  uint64_t v39 = v86;
  sub_25611AFC4(v86);
  sub_25615E3B4(v39, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v48 = (uint64_t)v37;
  uint64_t v49 = (uint64_t)v37;
  uint64_t v50 = v76;
  uint64_t v52 = v81;
  uint64_t v51 = v82;
  sub_25615E680(v48, v76, (uint64_t)&qword_269F47208, (uint64_t)v82, v81, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_25615DB90);
  uint64_t v53 = v50 + *(int *)(v78 + 44);
  *(unsigned char *)uint64_t v53 = v35;
  *(void *)(v53 + 8) = v41;
  *(void *)(v53 + 16) = v43;
  *(void *)(v53 + 24) = v45;
  *(void *)(v53 + 32) = v47;
  *(unsigned char *)(v53 + 40) = 0;
  sub_25615E6F4(v49, (uint64_t)&qword_269F47208, (uint64_t)v51, v52, (uint64_t (*)(void))sub_25615DB90);
  LOBYTE(v35) = sub_256176DB8();
  sub_25611AFC4(v39);
  sub_25615E3B4(v39, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v62 = v80;
  sub_25615E4FC(v50, v80, (uint64_t (*)(void))sub_25611DA84);
  uint64_t v63 = v62 + *(int *)(v84 + 44);
  *(unsigned char *)uint64_t v63 = v35;
  *(void *)(v63 + 8) = v55;
  *(void *)(v63 + 16) = v57;
  *(void *)(v63 + 24) = v59;
  *(void *)(v63 + 32) = v61;
  *(unsigned char *)(v63 + 40) = 0;
  sub_25615E3B4(v50, (uint64_t (*)(void))sub_25611DA84);
  uint64_t v64 = sub_2561778F8();
  uint64_t v65 = v83;
  sub_256117A14(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v83, 0.0, 1, 0.0, 1, v64, v66);
  sub_25615E3B4(v62, (uint64_t (*)(void))sub_25611DA5C);
  uint64_t v67 = v87;
  sub_25615E418(v65, v87, (uint64_t (*)(void))sub_25611DF74);
  uint64_t v68 = v85;
  sub_25615E4FC((uint64_t)v26, v85, (uint64_t (*)(void))sub_25615DAD4);
  sub_25615E4FC(v67, v65, (uint64_t (*)(void))sub_25611DF74);
  uint64_t v69 = v88;
  sub_25615E4FC(v68, v88, (uint64_t (*)(void))sub_25615DAD4);
  sub_25615DA24(0);
  sub_25615E4FC(v65, v69 + *(int *)(v70 + 48), (uint64_t (*)(void))sub_25611DF74);
  sub_25615E3B4(v67, (uint64_t (*)(void))sub_25611DF74);
  sub_25615E3B4((uint64_t)v26, (uint64_t (*)(void))sub_25615DAD4);
  sub_25615E3B4(v65, (uint64_t (*)(void))sub_25611DF74);
  return sub_25615E3B4(v68, (uint64_t (*)(void))sub_25615DAD4);
}

uint64_t sub_2561595A4()
{
  id v0 = (id)HKUILocalizedStringForStateOfMindLabel();
  uint64_t v1 = sub_256177EE8();

  return v1;
}

uint64_t sub_2561595F4()
{
  sub_25615E754(0, (unint64_t *)&qword_26B2AD360, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2561A0040;
  *(void *)(v0 + 32) = 0x6C6562614CLL;
  *(void *)(v0 + 40) = 0xE500000000000000;
  id v1 = (id)NSStringFromHKStateOfMindLabel();
  uint64_t v2 = sub_256177EE8();
  uint64_t v4 = v3;

  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v4;
  return v0;
}

uint64_t sub_2561596A4()
{
  return sub_256177588();
}

uint64_t sub_256159730@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v28 = a2;
  uint64_t v27 = sub_256175D98();
  uint64_t v2 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_256176EE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611DD04();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611DC84();
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = sub_256176678();
  *((void *)v11 + 1) = 0x4010000000000000;
  v11[16] = 0;
  sub_25615E5D8();
  sub_256159A74((uint64_t *)&v11[*(int *)(v16 + 44)]);
  sub_256176DF8();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1A680], v5);
  uint64_t v17 = sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t KeyPath = swift_getKeyPath();
  sub_25615E4FC((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))sub_25611DD04);
  uint64_t v19 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  *uint64_t v19 = KeyPath;
  v19[1] = v17;
  sub_25615E3B4((uint64_t)v11, (uint64_t (*)(void))sub_25611DD04);
  double v20 = *v26;
  type metadata accessor for LabelsPicker();
  sub_25611A114((uint64_t)v4);
  uint64_t v21 = sub_2560A8DFC((uint64_t)v4, v20);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v27);
  uint64_t v22 = v28;
  sub_25615E4FC((uint64_t)v15, v28, (uint64_t (*)(void))sub_25611DC84);
  sub_25611DBF0();
  *(void *)(v22 + *(int *)(v23 + 36)) = v21;
  return sub_25615E3B4((uint64_t)v15, (uint64_t (*)(void))sub_25611DC84);
}

uint64_t sub_256159A74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v41 = a1;
  sub_2561580D0(0, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  uint64_t v39 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v36 - v2);
  uint64_t v4 = sub_256177518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9DF68();
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (uint64_t)&v36 - v13;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v14 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2561755B8();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();

  uint64_t v42 = v15;
  uint64_t v43 = v17;
  sub_255F5CE90();
  uint64_t v18 = sub_256177028();
  uint64_t v37 = v19;
  uint64_t v38 = v18;
  uint64_t v36 = v20;
  char v22 = v21 & 1;
  uint64_t v23 = sub_2561774E8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1B538], v4);
  uint64_t v24 = v4;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v3 + *(int *)(v39 + 28), v7, v24);
  uint64_t *v3 = KeyPath;
  uint64_t v26 = (uint64_t)v12 + *(int *)(v9 + 36);
  uint64_t v27 = MEMORY[0x263F1B548];
  uint64_t v28 = MEMORY[0x263F1A418];
  sub_25615E680((uint64_t)v3, v26, (uint64_t)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2561580D0);
  *uint64_t v12 = v23;
  swift_retain();
  sub_25615E6F4((uint64_t)v3, (uint64_t)&qword_269F42398, v27, v28, (uint64_t (*)(void))sub_2561580D0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  swift_release();
  uint64_t v29 = v40;
  sub_25615E418((uint64_t)v12, v40, (uint64_t (*)(void))sub_255F9DF68);
  sub_25615E4FC(v29, (uint64_t)v12, (uint64_t (*)(void))sub_255F9DF68);
  uint64_t v30 = v41;
  uint64_t v31 = v37;
  uint64_t v32 = v38;
  uint64_t v33 = v36;
  *uint64_t v41 = v38;
  v30[1] = v33;
  *((unsigned char *)v30 + 16) = v22;
  v30[3] = v31;
  sub_25611DDCC();
  sub_25615E4FC((uint64_t)v12, (uint64_t)v30 + *(int *)(v34 + 48), (uint64_t (*)(void))sub_255F9DF68);
  sub_255F67B94(v32, v33, v22);
  swift_bridgeObjectRetain();
  sub_25615E3B4(v29, (uint64_t (*)(void))sub_255F9DF68);
  sub_25615E3B4((uint64_t)v12, (uint64_t (*)(void))sub_255F9DF68);
  sub_255F67B2C(v32, v33, v22);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256159F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for ShowAllLabelsPicker();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25615DE78();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_256178408();
  if (v13) {
    uint64_t v14 = 4;
  }
  else {
    uint64_t v14 = v12;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  long long v24 = *(_OWORD *)(a1 + 24);
  sub_2561580D0(0, &qword_269F45478, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B750]);
  sub_256177748();
  uint64_t v15 = v25;
  long long v16 = v26;
  *(void *)uint64_t v6 = v14;
  *((void *)v6 + 1) = v15;
  *((_OWORD *)v6 + 1) = v16;
  uint64_t v17 = (uint64_t *)&v6[v4[6]];
  *uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_2561580D0(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (uint64_t *)&v6[v4[7]];
  *uint64_t v19 = swift_getKeyPath();
  sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v18);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = &v6[v4[8]];
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_25600525C(0);
  sub_256177568();
  uint64_t v21 = v26;
  *(void *)uint64_t v20 = v25;
  *((void *)v20 + 1) = v21;
  sub_25615DC90(&qword_269F47A70, (void (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker);
  sub_256177268();
  sub_25615E3B4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ShowAllLabelsPicker);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v11, v8);
}

uint64_t sub_25615A1F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  v10[2] = a3;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_256158134((uint64_t)sub_25615E394, (uint64_t)v10, v4);
  uint64_t v6 = (uint64_t *)(a3 + *(int *)(type metadata accessor for LabelsPicker() + 36));
  uint64_t v8 = v6[1];
  uint64_t v11 = *v6;
  uint64_t v7 = v11;
  uint64_t v12 = v8;
  sub_2561580D0(0, &qword_269F465A8, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B5D0]);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_256177578();
  sub_255FCD80C(v5);
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  v10[3] = v13;
  sub_256177588();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25615A30C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LabelsPicker();
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    goto LABEL_9;
  }
  if (*(void *)(v9 + 32) == v8)
  {
LABEL_3:
    sub_25615E4FC(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LabelsPicker);
    char v11 = 0;
LABEL_10:
    sub_25615E3B4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LabelsPicker);
    return v11 & 1;
  }
  if (v10 == 1)
  {
LABEL_9:
    sub_25615E4FC(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LabelsPicker);
    uint64_t v14 = &v7[*(int *)(v4 + 36)];
    uint64_t v16 = *(void *)v14;
    uint64_t v15 = *((void *)v14 + 1);
    v18[0] = v16;
    v18[1] = v15;
    sub_2561580D0(0, &qword_269F465A8, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B5D0]);
    sub_256177578();
    char v17 = sub_256157D4C(v8, v18[3]);
    swift_bridgeObjectRelease();
    char v11 = v17 ^ 1;
    goto LABEL_10;
  }
  uint64_t v12 = 5;
  while (1)
  {
    uint64_t v13 = v12 - 3;
    if (__OFADD__(v12 - 4, 1)) {
      break;
    }
    if (*(void *)(v9 + 8 * v12) == v8) {
      goto LABEL_3;
    }
    ++v12;
    if (v13 == v10) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25615A4CC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2561535D4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_25615A538(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_25615A538(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2561787D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_135;
    }
    if (v3) {
      return sub_25615AD64(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_143;
  }
  uint64_t v97 = result;
  uint64_t v92 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v11 = (char *)MEMORY[0x263F8EE78];
LABEL_100:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v85 = *v92;
        do
        {
          unint64_t v86 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_130;
          }
          if (!v85) {
            goto LABEL_142;
          }
          uint64_t v87 = *(void *)&v11[16 * v86 + 32];
          uint64_t v88 = *(void *)&v11[16 * v12 + 24];
          sub_25615AEA8((char *)(v85 + 8 * v87), (char *)(v85 + 8 * *(void *)&v11[16 * v12 + 16]), v85 + 8 * v88, __dst);
          if (v1) {
            break;
          }
          if (v88 < v87) {
            goto LABEL_131;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v11 = sub_256152458((uint64_t)v11);
          }
          if (v86 >= *((void *)v11 + 2)) {
            goto LABEL_132;
          }
          uint64_t v89 = &v11[16 * v86 + 32];
          *(void *)uint64_t v89 = v87;
          *((void *)v89 + 1) = v88;
          unint64_t v90 = *((void *)v11 + 2);
          if (v12 > v90) {
            goto LABEL_133;
          }
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v90 - v12));
          *((void *)v11 + 2) = v90 - 1;
          unint64_t v12 = v90 - 1;
        }
        while (v90 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for Label(0);
    uint64_t v7 = sub_256178048();
    *(void *)(v7 + 16) = v6;
    uint64_t v96 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v93 = *a1 + 16;
  uint64_t v91 = *a1 - 8;
  char v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v100 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    uint64_t v101 = v13;
    if (v9 < v3)
    {
      id v14 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_256177EE8();

      id v15 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_256177EE8();

      sub_255F5CE90();
      uint64_t v98 = sub_256178498();
      swift_bridgeObjectRelease();
      uint64_t v3 = v100;
      swift_bridgeObjectRelease();
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v100)
      {
        uint64_t v94 = v11;
        uint64_t v16 = v93 + 8 * v13;
        while (1)
        {
          id v17 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_256177EE8();

          id v18 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_256177EE8();

          uint64_t v19 = sub_256178498();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v98 == -1) == (v19 != -1)) {
            break;
          }
          v16 += 8;
          ++v9;
          uint64_t v3 = v100;
          if (v100 == v9)
          {
            uint64_t v9 = v100;
            char v11 = v94;
            goto LABEL_23;
          }
        }
        char v11 = v94;
        uint64_t v3 = v100;
      }
LABEL_23:
      if (v98 == -1)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v20 = v9 - 1;
          uint64_t v21 = v13;
          do
          {
            if (v21 != v20)
            {
              if (!v10) {
                goto LABEL_141;
              }
              uint64_t v22 = *(void *)(v10 + 8 * v21);
              *(void *)(v10 + 8 * v21) = *(void *)(v10 + 8 * v20);
              *(void *)(v10 + 8 * v20) = v22;
            }
            BOOL v62 = ++v21 < v20--;
          }
          while (v62);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_134;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_50;
    }
    if (__OFADD__(v13, v97)) {
      goto LABEL_136;
    }
    uint64_t v23 = v13 + v97 >= v3 ? v3 : v13 + v97;
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v95 = v11;
      long long v24 = (uint64_t *)(v91 + 8 * v9);
      uint64_t v99 = v23;
      do
      {
        uint64_t v25 = v24;
        do
        {
          id v26 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_256177EE8();

          id v27 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_256177EE8();

          sub_255F5CE90();
          uint64_t v28 = sub_256178498();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28 != -1) {
            break;
          }
          if (!v10) {
            goto LABEL_139;
          }
          uint64_t v29 = *v25;
          *uint64_t v25 = v25[1];
          v25[1] = v29;
          --v25;
          ++v13;
        }
        while (v9 != v13);
        ++v9;
        ++v24;
        uint64_t v13 = v101;
      }
      while (v9 != v99);
      uint64_t v9 = v99;
      char v11 = v95;
    }
LABEL_50:
    if (v9 < v13) {
      goto LABEL_129;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_2561522A0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v31 = *((void *)v11 + 2);
    unint64_t v30 = *((void *)v11 + 3);
    unint64_t v12 = v31 + 1;
    if (v31 >= v30 >> 1) {
      char v11 = sub_2561522A0((char *)(v30 > 1), v31 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v32 = v11 + 32;
    uint64_t v33 = &v11[16 * v31 + 32];
    *(void *)uint64_t v33 = v13;
    *((void *)v33 + 1) = v9;
    if (v31)
    {
      uint64_t v102 = v9;
      while (1)
      {
        unint64_t v34 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v39 = &v32[16 * v12];
          uint64_t v40 = *((void *)v39 - 8);
          uint64_t v41 = *((void *)v39 - 7);
          BOOL v45 = __OFSUB__(v41, v40);
          uint64_t v42 = v41 - v40;
          if (v45) {
            goto LABEL_118;
          }
          uint64_t v44 = *((void *)v39 - 6);
          uint64_t v43 = *((void *)v39 - 5);
          BOOL v45 = __OFSUB__(v43, v44);
          uint64_t v37 = v43 - v44;
          char v38 = v45;
          if (v45) {
            goto LABEL_119;
          }
          unint64_t v46 = v12 - 2;
          uint64_t v47 = &v32[16 * v12 - 32];
          uint64_t v49 = *(void *)v47;
          uint64_t v48 = *((void *)v47 + 1);
          BOOL v45 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          if (v45) {
            goto LABEL_121;
          }
          BOOL v45 = __OFADD__(v37, v50);
          uint64_t v51 = v37 + v50;
          if (v45) {
            goto LABEL_124;
          }
          if (v51 >= v42)
          {
            uint64_t v69 = &v32[16 * v34];
            uint64_t v71 = *(void *)v69;
            uint64_t v70 = *((void *)v69 + 1);
            BOOL v45 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v45) {
              goto LABEL_128;
            }
            BOOL v62 = v37 < v72;
            goto LABEL_88;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v63 = *((void *)v11 + 4);
            uint64_t v64 = *((void *)v11 + 5);
            BOOL v45 = __OFSUB__(v64, v63);
            uint64_t v56 = v64 - v63;
            char v57 = v45;
            goto LABEL_82;
          }
          uint64_t v36 = *((void *)v11 + 4);
          uint64_t v35 = *((void *)v11 + 5);
          BOOL v45 = __OFSUB__(v35, v36);
          uint64_t v37 = v35 - v36;
          char v38 = v45;
        }
        if (v38) {
          goto LABEL_120;
        }
        unint64_t v46 = v12 - 2;
        uint64_t v52 = &v32[16 * v12 - 32];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v55 = __OFSUB__(v53, v54);
        uint64_t v56 = v53 - v54;
        char v57 = v55;
        if (v55) {
          goto LABEL_123;
        }
        uint64_t v58 = &v32[16 * v34];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v45 = __OFSUB__(v59, v60);
        uint64_t v61 = v59 - v60;
        if (v45) {
          goto LABEL_126;
        }
        if (__OFADD__(v56, v61)) {
          goto LABEL_127;
        }
        if (v56 + v61 >= v37)
        {
          BOOL v62 = v37 < v61;
LABEL_88:
          if (v62) {
            unint64_t v34 = v46;
          }
          goto LABEL_90;
        }
LABEL_82:
        if (v57) {
          goto LABEL_122;
        }
        uint64_t v65 = &v32[16 * v34];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v45 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v45) {
          goto LABEL_125;
        }
        if (v68 < v56) {
          goto LABEL_15;
        }
LABEL_90:
        unint64_t v73 = v34 - 1;
        if (v34 - 1 >= v12)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        uint64_t v74 = v10;
        if (!v10) {
          goto LABEL_140;
        }
        uint64_t v75 = v11;
        uint64_t v76 = &v32[16 * v73];
        uint64_t v77 = v32;
        uint64_t v78 = *(void *)v76;
        uint64_t v79 = v77;
        unint64_t v80 = v34;
        uint64_t v81 = &v77[16 * v34];
        uint64_t v82 = *((void *)v81 + 1);
        uint64_t v83 = v74;
        sub_25615AEA8((char *)(v74 + 8 * *(void *)v76), (char *)(v74 + 8 * *(void *)v81), v74 + 8 * v82, __dst);
        if (v1) {
          goto LABEL_111;
        }
        if (v82 < v78) {
          goto LABEL_115;
        }
        if (v80 > *((void *)v75 + 2)) {
          goto LABEL_116;
        }
        *(void *)uint64_t v76 = v78;
        *(void *)&v79[16 * v73 + 8] = v82;
        unint64_t v84 = *((void *)v75 + 2);
        if (v80 >= v84) {
          goto LABEL_117;
        }
        uint64_t v32 = v79;
        char v11 = v75;
        unint64_t v12 = v84 - 1;
        memmove(v81, v81 + 16, 16 * (v84 - 1 - v80));
        *((void *)v75 + 2) = v84 - 1;
        uint64_t v10 = v83;
        uint64_t v9 = v102;
        if (v84 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v100;
    if (v9 >= v100)
    {
      uint64_t v8 = v96;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  uint64_t result = sub_256178648();
  __break(1u);
  return result;
}

uint64_t sub_25615AD64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v13 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = (uint64_t *)(*a4 + 8 * a3 - 8);
LABEL_5:
    uint64_t v7 = v13;
    id v14 = v6;
    while (1)
    {
      id v8 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_256177EE8();

      id v9 = (id)HKUILocalizedStringForStateOfMindLabel();
      sub_256177EE8();

      sub_255F5CE90();
      uint64_t v10 = sub_256178498();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v10 != -1)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v14 + 1;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t v11 = *v6;
      uint64_t result = v6[1];
      uint64_t *v6 = result;
      v6[1] = v11;
      --v6;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25615AEA8(char *a1, char *__src, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = __src;
  uint64_t v6 = __src - a1;
  uint64_t v7 = __src - a1 + 7;
  if (__src - a1 >= 0) {
    uint64_t v7 = __src - a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v11 = a3 - (void)__src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v32 = a1;
  unint64_t v31 = __dst;
  if (v8 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != __src || &__src[8 * v12] <= __dst) {
        memmove(__dst, __src, 8 * v12);
      }
      uint64_t v20 = &v4[8 * v12];
      unint64_t v30 = v20;
      uint64_t v32 = v5;
      if (a1 < v5 && v10 >= 8)
      {
        uint64_t v21 = (char *)(a3 - 8);
        uint64_t v22 = v5;
        do
        {
          uint64_t v29 = v5;
          uint64_t v23 = v21 + 8;
          v22 -= 8;
          id v24 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_256177EE8();

          id v25 = (id)HKUILocalizedStringForStateOfMindLabel();
          sub_256177EE8();

          sub_255F5CE90();
          uint64_t v26 = sub_256178498();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v26 == -1)
          {
            if (v23 != v29 || v21 >= v29) {
              *(void *)uint64_t v21 = *(void *)v22;
            }
            uint64_t v32 = v22;
          }
          else
          {
            unint64_t v30 = v20 - 8;
            if (v23 < v20 || v21 >= v20 || v23 != v20) {
              *(void *)uint64_t v21 = *((void *)v20 - 1);
            }
            uint64_t v22 = v29;
            v20 -= 8;
          }
          if (v22 <= a1) {
            break;
          }
          v21 -= 8;
          uint64_t v5 = v22;
        }
        while (v20 > v4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != a1 || &a1[8 * v8] <= __dst) {
      memmove(__dst, a1, 8 * v8);
    }
    id v14 = &v4[8 * v8];
    unint64_t v30 = v14;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      id v15 = a1;
      do
      {
        id v16 = (id)HKUILocalizedStringForStateOfMindLabel();
        sub_256177EE8();

        id v17 = (id)HKUILocalizedStringForStateOfMindLabel();
        sub_256177EE8();

        sub_255F5CE90();
        uint64_t v18 = sub_256178498();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18 == -1)
        {
          uint64_t v19 = v5 + 8;
          if (v15 < v5 || v15 >= v19 || v15 != v5) {
            *(void *)id v15 = *(void *)v5;
          }
        }
        else
        {
          if (v15 != v4) {
            *(void *)id v15 = *(void *)v4;
          }
          v4 += 8;
          unint64_t v31 = v4;
          uint64_t v19 = v5;
        }
        v15 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v5 = v19;
      }
      while ((unint64_t)v19 < a3);
      uint64_t v32 = v15;
    }
LABEL_43:
    sub_256152398(&v32, &v31, &v30);
    return 1;
  }
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_25615B240(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_25615B764(*(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_25615B3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v33[5] = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v6 = a1 + 56;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v32 = ~v7;
    if (-v7 < 64) {
      uint64_t v8 = ~(-1 << -(char)v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v5;
    int64_t v10 = (unint64_t)(63 - v7) >> 6;
    uint64_t v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          unint64_t v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v13 = v12 | (v4 << 6);
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10) {
            goto LABEL_35;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v14);
          int64_t v16 = v4 + 1;
          if (!v15)
          {
            int64_t v16 = v4 + 2;
            if (v4 + 2 >= v10) {
              goto LABEL_35;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v4 + 3;
              if (v4 + 3 >= v10) {
                goto LABEL_35;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v4 + 4;
                if (v4 + 4 >= v10) {
                  goto LABEL_35;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v16);
                if (!v15)
                {
                  int64_t v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    swift_bridgeObjectRetain();
                    sub_255FB5894();
                    return v2;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      int64_t v16 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        break;
                      }
                      if (v16 >= v10) {
                        goto LABEL_35;
                      }
                      unint64_t v15 = *(void *)(v6 + 8 * v16);
                      ++v17;
                      if (v15) {
                        goto LABEL_23;
                      }
                    }
LABEL_37:
                    __break(1u);
                  }
                  int64_t v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v9 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
          int64_t v4 = v16;
        }
        uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
        sub_2561788E8();
        sub_2561788F8();
        uint64_t v19 = sub_256178928();
        uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v21 = v19 & ~v20;
      }
      while (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      uint64_t v22 = *(void *)(v2 + 48);
      if (*(void *)(v22 + 8 * v21) == v18) {
        break;
      }
      while (1)
      {
        unint64_t v21 = (v21 + 1) & ~v20;
        if (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        if (*(void *)(v22 + 8 * v21) == v18) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    _OWORD v33[2] = v32;
    v33[3] = v4;
    v33[4] = v9;
    unint64_t v23 = (unint64_t)(63 - v20) >> 6;
    size_t v24 = 8 * v23;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      id v27 = (char *)&v31 - v26;
      memcpy((char *)&v31 - v26, (const void *)(v2 + 56), v24);
      uint64_t v28 = sub_25615B88C((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_255FB5894();
    }
    else
    {
      uint64_t v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      uint64_t v28 = sub_25615B88C((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_255FB5894();
      MEMORY[0x25A2A1E90](v29, -1, -1);
    }
    return v28;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_25615B764(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_2561788E8();
  sub_2561788F8();
  uint64_t v4 = sub_256178928();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(void *)(v7 + 8 * v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v7 + 8 * v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2561507A4();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_25615BD88(v6);
  *uint64_t v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_25615B88C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    int64_t v15 = a5[3];
    unint64_t v16 = a5[4];
    if (!v16) {
      break;
    }
    uint64_t v17 = (v16 - 1) & v16;
    unint64_t v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_16:
    uint64_t v25 = *(void *)(*(void *)(*a5 + 48) + 8 * v18);
    a5[3] = v15;
    a5[4] = v17;
    sub_2561788E8();
    sub_2561788F8();
    uint64_t result = sub_256178928();
    uint64_t v26 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v27 = result & ~v26;
    uint64_t v11 = v27 >> 6;
    uint64_t v12 = 1 << v27;
    if (((1 << v27) & *(void *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      uint64_t v28 = *(void *)(a3 + 48);
      if (*(void *)(v28 + 8 * v27) == v25)
      {
LABEL_3:
        uint64_t v13 = v11;
        unint64_t v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1)) {
            goto LABEL_36;
          }
          if (!v9) {
            return MEMORY[0x263F8EE88];
          }
        }
      }
      else
      {
        for (unint64_t i = v27 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & ~v26;
          if (((*(void *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            break;
          }
          if (*(void *)(v28 + 8 * v30) == v25)
          {
            uint64_t v11 = v30 >> 6;
            uint64_t v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    int64_t v20 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v21 = a5[3];
    if (v19 >= v20) {
      goto LABEL_33;
    }
    uint64_t v22 = a5[1];
    unint64_t v23 = *(void *)(v22 + 8 * v19);
    if (v23) {
      goto LABEL_15;
    }
    int64_t v24 = v15 + 2;
    int64_t v21 = v15 + 1;
    if (v15 + 2 >= v20) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v22 + 8 * v24);
    if (!v23)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 3 >= v20) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v22 + 8 * (v15 + 3));
      if (v23)
      {
        int64_t v19 = v15 + 3;
        goto LABEL_15;
      }
      int64_t v24 = v15 + 4;
      int64_t v21 = v15 + 3;
      if (v15 + 4 >= v20) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v22 + 8 * v24);
      if (!v23)
      {
        int64_t v19 = v15 + 5;
        int64_t v21 = v15 + 4;
        if (v15 + 5 >= v20) {
          goto LABEL_33;
        }
        unint64_t v23 = *(void *)(v22 + 8 * v19);
        if (!v23)
        {
          int64_t v21 = v20 - 1;
          int64_t v31 = v15 + 6;
          while (v20 != v31)
          {
            unint64_t v23 = *(void *)(v22 + 8 * v31++);
            if (v23)
            {
              int64_t v19 = v31 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v21;
          a5[4] = 0;
          swift_retain();
          return sub_25615BB04(v7, a2, v9, a3);
        }
        goto LABEL_15;
      }
    }
    int64_t v19 = v24;
LABEL_15:
    uint64_t v17 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v19 << 6);
    int64_t v15 = v19;
    goto LABEL_16;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25615BB04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_25615DAF4(0, (unint64_t *)&qword_269F479A0, MEMORY[0x263F8DBD8]);
  uint64_t result = sub_256178538();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    sub_2561788E8();
    sub_2561788F8();
    uint64_t result = sub_256178928();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_25615BD88(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_2561784D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_2561788E8();
        sub_2561788F8();
        unint64_t v10 = sub_256178928() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v2);
          unint64_t v13 = (void *)(v11 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t *sub_25615BF34(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[7];
    unint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    a1[4] = a2[4];
    sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_2561580D0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = (char *)v11 + v16;
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *unint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[8];
    unint64_t v21 = (uint64_t *)((char *)v4 + v20);
    unint64_t v22 = (uint64_t *)((char *)a2 + v20);
    sub_2561580D0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      void *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    uint64_t v26 = (uint64_t *)((char *)v4 + v24);
    unint64_t v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)v4 + v25;
    unint64_t v30 = (char *)a2 + v25;
    *uint64_t v29 = *v30;
    *((void *)v29 + 1) = *((void *)v30 + 1);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_25615C2DC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 32);
  sub_2561580D0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_25615C52C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_2561580D0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v16 = (char *)v10 + v14;
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  sub_2561580D0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)((char *)a1 + v22);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  unint64_t v27 = (char *)a1 + v23;
  uint64_t v28 = (char *)a2 + v23;
  *unint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_25615C888(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615E6F4((uint64_t)a1 + v6, (uint64_t)&qword_269F435C0, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2561580D0);
    sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_2561580D0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615E6F4((uint64_t)a1 + v17, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2561580D0);
    sub_2561580D0(0, &qword_269F47D00, v20, v21);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_retain();
  swift_release();
  uint64_t v26 = a3[10];
  unint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  *unint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_25615CCA4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176AA8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_2561580D0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  sub_2561580D0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  return a1;
}

void *sub_25615CFC4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615E6F4((uint64_t)a1 + v6, (uint64_t)&qword_269F435C0, (uint64_t)type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2561580D0);
    sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, v9);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
      {
        sub_2561580D0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615E6F4((uint64_t)a1 + v19, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2561580D0);
    sub_2561580D0(0, &qword_269F47D00, v22, v23);
    uint64_t v25 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v20, v21, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  swift_bridgeObjectRelease();
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_release();
  uint64_t v30 = a3[10];
  int64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  *int64_t v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_release();
  return a1;
}

uint64_t sub_25615D3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25615D3DC);
}

uint64_t sub_25615D3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2561580D0(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_2561580D0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_25615D568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25615D57C);
}

uint64_t sub_25615D57C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2561580D0(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_2561580D0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_25615D708()
{
  sub_2561580D0(319, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_2561580D0(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_25615D86C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_25615D888()
{
  if (!qword_269F47A18)
  {
    sub_2561580D0(255, &qword_269F47A20, (uint64_t (*)(uint64_t))sub_25615D93C, MEMORY[0x263F1BAC8]);
    sub_25615DCD8(&qword_269F47A58, &qword_269F47A20, (uint64_t (*)(uint64_t))sub_25615D93C);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47A18);
    }
  }
}

void sub_25615D93C(uint64_t a1)
{
}

void sub_25615D970()
{
  if (!qword_269F47A30)
  {
    sub_2561580D0(255, &qword_269F47A38, (uint64_t (*)(uint64_t))sub_25615DA24, MEMORY[0x263F1BAC8]);
    sub_25615DCD8(&qword_269F47A50, &qword_269F47A38, (uint64_t (*)(uint64_t))sub_25615DA24);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47A30);
    }
  }
}

void sub_25615DA24(uint64_t a1)
{
}

void sub_25615DA58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_25615DAD4(uint64_t a1)
{
}

void sub_25615DAF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for Label(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_25615DC90(&qword_269F464F8, type metadata accessor for Label);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_25615DB90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_25615DC04(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25615DC90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25615DCD8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2561580D0(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25615DD3C()
{
  if (!qword_269F47A60)
  {
    sub_25615D888();
    sub_25615DE78();
    sub_25615DC90(&qword_269F47A78, (void (*)(uint64_t))sub_25615D888);
    type metadata accessor for ShowAllLabelsPicker();
    sub_25615DC90(&qword_269F47A70, (void (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F47A60);
    }
  }
}

void sub_25615DE78()
{
  if (!qword_269F47A68)
  {
    type metadata accessor for ShowAllLabelsPicker();
    sub_25615DC90(&qword_269F47A70, (void (*)(uint64_t))type metadata accessor for ShowAllLabelsPicker);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F47A68);
    }
  }
}

uint64_t sub_25615DF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LabelsPicker() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_256159F04(v4, a1);
}

uint64_t objectdestroyTm_24()
{
  uint64_t v1 = type metadata accessor for LabelsPicker();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + *(int *)(v1 + 28);
  sub_2561580D0(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v3 + *(int *)(v1 + 32);
  sub_2561580D0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_25615E274(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for LabelsPicker() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_25615A1F0(a1, a2, v6);
}

unint64_t sub_25615E2F4()
{
  unint64_t result = qword_269F47A88;
  if (!qword_269F47A88)
  {
    sub_25600525C(255);
    sub_25615DC90(&qword_269F42830, type metadata accessor for Label);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47A88);
  }
  return result;
}

uint64_t sub_25615E394(uint64_t *a1)
{
  return sub_25615A30C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_25615E3B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25615E418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_25615E480(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2561580D0(255, a3, a4, MEMORY[0x263F1BAC8]);
    unint64_t v5 = sub_256176048();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25615E4FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25615E570()
{
  type metadata accessor for LabelsPicker();

  return sub_2561596A4();
}

uint64_t sub_25615E5D0@<X0>(uint64_t a1@<X8>)
{
  return sub_256159730(*(double **)(v1 + 16), a1);
}

void sub_25615E5D8()
{
  if (!qword_269F47AA0)
  {
    sub_2561580D0(255, &qword_269F47230, (uint64_t (*)(uint64_t))sub_25611DDCC, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47AA0);
    }
  }
}

uint64_t sub_25615E680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_25615E6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_25615E754(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25615E7A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_25615E8F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v14 = *(int *)(v13 + 32);
    unint64_t v34 = &v11[v14];
    uint64_t v35 = (char *)v10 + v14;
    uint64_t v15 = sub_256175868();
    uint64_t v16 = a3;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v17(v35, v34, v15);
    uint64_t v18 = *(int *)(v16 + 28);
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_256176AA8();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      uint64_t v25 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v26 = (char *)v19 + v25;
      uint64_t v27 = (char *)v20 + v25;
      uint64_t v28 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = *(int *)(v16 + 32);
    uint64_t v30 = (uint64_t *)((char *)v4 + v29);
    int64_t v31 = (uint64_t *)((char *)a2 + v29);
    sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      *uint64_t v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_25615ED08(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[6];
  swift_release();
  swift_release();
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v6 = v4 + *(int *)(v5 + 32);
  uint64_t v7 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v12 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[8];
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256175D98();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

void *sub_25615EFCC(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v12 = *(int *)(v11 + 32);
  uint64_t v32 = (char *)v8 + v12;
  uint64_t v13 = &v9[v12];
  uint64_t v14 = sub_256175868();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v32, v13, v14);
  uint64_t v16 = a2;
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256176AA8();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v24 = (char *)v18 + v23;
    uint64_t v25 = (char *)v19 + v23;
    uint64_t v26 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *uint64_t v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = a3[8];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)v16 + v27);
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    *uint64_t v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25615F38C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v14, (uint64_t)&qword_269F44C30, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256176AA8();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      uint64_t v21 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v22 = (char *)v15 + v21;
      uint64_t v23 = (char *)v16 + v21;
      uint64_t v24 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[8];
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v25, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F47D00, v28, v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v27, v30);
    }
    else
    {
      *uint64_t v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25615F7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_25615F834(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_256175868();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256176AA8();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
    {
      sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v17, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    }
    uint64_t v23 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v24 = &v16[v23];
    uint64_t v25 = &v17[v23];
    uint64_t v26 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v27 = a3[8];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v31 = v30;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v28, v29, v32);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  return a1;
}

void *sub_25615FBDC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_release();
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  if (a1 != a2)
  {
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v15, (uint64_t)&qword_269F44C30, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v18);
    uint64_t v20 = v19;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_256176AA8();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
      {
        sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v17, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
      }
      uint64_t v24 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v25 = &v16[v24];
      uint64_t v26 = &v17[v24];
      uint64_t v27 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v28, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F47D00, v31, v32);
    uint64_t v34 = v33;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v29, v30, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25616001C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256160030);
}

uint64_t sub_256160030(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_256168E78(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  sub_256168E78(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t sub_256160238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25616024C);
}

uint64_t sub_25616024C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
    return result;
  }
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_256168E78(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  sub_256168E78(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for ReflectiveIntervalPickerButtonView(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F47AA8);
}

void sub_256160474()
{
  sub_256168E78(319, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (v0 <= 0x3F)
  {
    sub_256168E78(319, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_256168E78(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_256160620()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25616063C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v97 = a1;
  uint64_t v94 = sub_2561762B8() - 8;
  MEMORY[0x270FA5388](v94);
  uint64_t v93 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256161034();
  uint64_t v96 = v3 - 8;
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v95 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v92);
  uint64_t v88 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v84 = (uint64_t)&v82 - v7;
  uint64_t v8 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256161104(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25616112C(0);
  uint64_t v86 = v16 - 8;
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v85 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256161154(0);
  uint64_t v90 = v18 - 8;
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v87 = (uint64_t)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25616117C(0);
  uint64_t v91 = v20 - 8;
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v89 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *v1;
  long long v23 = *(_OWORD *)(v1 + 1);
  uint64_t v24 = v1[3];
  uint64_t v83 = v1;
  long long v98 = v23;
  uint64_t v99 = v24;
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B750];
  sub_256168E78(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B750]);
  sub_256177748();
  long long v82 = v100;
  uint64_t v26 = v101;
  type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], v25);
  sub_256177748();
  *(void *)uint64_t v11 = v22;
  *(_OWORD *)(v11 + 8) = v82;
  *((void *)v11 + 3) = v26;
  uint64_t v27 = (uint64_t *)&v11[v9[9]];
  *uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256168E78(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = (uint64_t *)&v11[v9[10]];
  *uint64_t v29 = swift_getKeyPath();
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], v28);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (uint64_t *)&v11[v9[11]];
  *uint64_t v30 = swift_getKeyPath();
  sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v28);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v28) = sub_256176DB8();
  uint64_t v31 = v84;
  sub_25611BE0C(v84);
  sub_256168FAC(v31, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_256168F44((uint64_t)v11, (uint64_t)v15, type metadata accessor for ReflectiveIntervalPickerSelectionView);
  uint64_t v40 = &v15[*(int *)(v13 + 44)];
  *uint64_t v40 = (char)v28;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_256168FAC((uint64_t)v11, type metadata accessor for ReflectiveIntervalPickerSelectionView);
  LOBYTE(v13) = sub_256176DC8();
  uint64_t v41 = v88;
  sub_25611BE0C(v88);
  sub_256176138();
  sub_256168FAC(v41, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v50 = v85;
  sub_256168F44((uint64_t)v15, v85, (uint64_t (*)(void))sub_256161104);
  uint64_t v51 = v50 + *(int *)(v86 + 44);
  *(unsigned char *)uint64_t v51 = v13;
  *(void *)(v51 + 8) = v43;
  *(void *)(v51 + 16) = v45;
  *(void *)(v51 + 24) = v47;
  *(void *)(v51 + 32) = v49;
  *(unsigned char *)(v51 + 40) = 0;
  sub_256168FAC((uint64_t)v15, (uint64_t (*)(void))sub_256161104);
  LOBYTE(v13) = sub_256176DD8();
  sub_25611BE0C(v31);
  sub_256168FAC(v31, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v60 = v87;
  sub_256168F44(v50, v87, (uint64_t (*)(void))sub_25616112C);
  uint64_t v61 = v60 + *(int *)(v90 + 44);
  *(unsigned char *)uint64_t v61 = v13;
  *(void *)(v61 + 8) = v53;
  *(void *)(v61 + 16) = v55;
  *(void *)(v61 + 24) = v57;
  *(void *)(v61 + 32) = v59;
  *(unsigned char *)(v61 + 40) = 0;
  sub_256168FAC(v50, (uint64_t (*)(void))sub_25616112C);
  uint64_t v62 = sub_2561778E8();
  uint64_t v64 = v63;
  uint64_t v65 = (uint64_t)v89;
  uint64_t v66 = (uint64_t)&v89[*(int *)(v91 + 44)];
  uint64_t v67 = v93;
  uint64_t v68 = &v93[*(int *)(v94 + 28)];
  uint64_t v69 = *MEMORY[0x263F19860];
  uint64_t v70 = sub_2561766E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 104))(v68, v69, v70);
  __asm { FMOV            V0.2D, #12.0 }
  _OWORD *v67 = _Q0;
  uint64_t v76 = sub_256160E68();
  uint64_t v77 = v95;
  sub_256168F44((uint64_t)v67, v95, MEMORY[0x263F19048]);
  uint64_t v78 = v96;
  *(void *)(v77 + *(int *)(v96 + 60)) = v76;
  *(_WORD *)(v77 + *(int *)(v78 + 64)) = 256;
  sub_256168FAC((uint64_t)v67, MEMORY[0x263F19048]);
  sub_256168EDC(v77, v66, (uint64_t (*)(void))sub_256161034);
  sub_2561611B0();
  unint64_t v80 = (uint64_t *)(v66 + *(int *)(v79 + 36));
  *unint64_t v80 = v62;
  v80[1] = v64;
  sub_256168EDC(v60, v65, (uint64_t (*)(void))sub_256161154);
  return sub_256168EDC(v65, v97, (uint64_t (*)(void))sub_25616117C);
}

uint64_t sub_256160E68()
{
  uint64_t v0 = sub_256175D98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  sub_25611A114((uint64_t)v3);
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x263F18508])
  {
    id v5 = objc_msgSend(self, sel_systemBackgroundColor);
    MEMORY[0x25A29FE80](v5);
    uint64_t v6 = sub_256177498();
    swift_release();
  }
  else
  {
    int v7 = v4;
    int v8 = *MEMORY[0x263F184F8];
    uint64_t v9 = self;
    if (v7 == v8)
    {
      return MEMORY[0x25A29FE80](objc_msgSend(v9, sel_quaternarySystemFillColor));
    }
    else
    {
      MEMORY[0x25A29FE80](objc_msgSend(v9, sel_systemBackgroundColor));
      uint64_t v6 = sub_256177498();
      swift_release();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
  return v6;
}

void sub_256161034()
{
  if (!qword_269F47AB8)
  {
    sub_2561762B8();
    sub_256169118(&qword_269F42DE8, MEMORY[0x263F19048]);
    unint64_t v0 = sub_256175D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47AB8);
    }
  }
}

uint64_t type metadata accessor for ReflectiveIntervalPickerSelectionView(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F47AF0);
}

void sub_256161104(uint64_t a1)
{
}

void sub_25616112C(uint64_t a1)
{
}

void sub_256161154(uint64_t a1)
{
}

void sub_25616117C(uint64_t a1)
{
}

void sub_2561611B0()
{
  if (!qword_269F47AE0)
  {
    sub_256161034();
    sub_256169118(&qword_269F47AE8, (void (*)(uint64_t))sub_256161034);
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47AE0);
    }
  }
}

uint64_t sub_256161258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v79 = a1;
  uint64_t v3 = sub_256176748();
  uint64_t v77 = *(void *)(v3 - 8);
  uint64_t v78 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v76 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v75 = (char *)v66 - v6;
  uint64_t v7 = sub_256176FF8();
  MEMORY[0x270FA5388](v7 - 8);
  v66[3] = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256175868();
  MEMORY[0x270FA5388](v9 - 8);
  v66[2] = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2561766B8();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v67 = sub_256176BB8();
  uint64_t v12 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25616801C();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256168AE0(0);
  uint64_t v70 = *(void *)(v22 - 8);
  uint64_t v71 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256168B5C(0, &qword_269F47BE8, sub_256168AE0, MEMORY[0x263F1A470]);
  uint64_t v81 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v72 = (char *)v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v73 = (char *)v66 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  unint64_t v80 = (char *)v66 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v74 = (char *)v66 - v32;
  v66[1] = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  sub_25611BE0C((uint64_t)v17);
  char v33 = sub_256176138();
  sub_256168FAC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  if (v33) {
    uint64_t v34 = 0x4024000000000000;
  }
  else {
    uint64_t v34 = 0x4030000000000000;
  }
  *(void *)uint64_t v21 = sub_256176678();
  *((void *)v21 + 1) = v34;
  v21[16] = 0;
  sub_256168D7C(0, &qword_269F47BF0, &qword_269F47B38, (uint64_t (*)(uint64_t))sub_2561680B0);
  sub_256161D4C(v2, (uint64_t)&v21[*(int *)(v35 + 44)]);
  sub_256176BA8();
  uint64_t v36 = sub_256168B28();
  uint64_t v68 = v24;
  uint64_t v69 = v19;
  uint64_t v37 = (void *)v2;
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v67);
  sub_256168FAC((uint64_t)v21, (uint64_t (*)(void))sub_25616801C);
  sub_2561766A8();
  sub_256176698();
  *(void *)&long long v82 = 0;
  *((void *)&v82 + 1) = 0xE000000000000000;
  sub_256178558();
  swift_bridgeObjectRelease();
  *(void *)&long long v82 = 0xD000000000000014;
  *((void *)&v82 + 1) = 0x80000002561AE1C0;
  sub_256177F68();
  swift_bridgeObjectRelease();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v38 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_256176688();
  swift_bridgeObjectRelease();
  sub_256176698();
  uint64_t v39 = v2;
  if (sub_25616547C()) {
    sub_256165864();
  }
  else {
    sub_2561659D0();
  }
  uint64_t v40 = (uint64_t)v72;
  sub_256176688();
  swift_bridgeObjectRelease();
  sub_256176698();
  sub_2561766D8();
  uint64_t v41 = sub_256177018();
  uint64_t v43 = v42;
  char v45 = v44 & 1;
  *(void *)&long long v82 = v69;
  *((void *)&v82 + 1) = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v71;
  uint64_t v47 = v68;
  sub_2561771B8();
  sub_255F67B2C(v41, v43, v45);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v47, v46);
  if (*v37 == 1)
  {
    sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    MEMORY[0x25A2A01A0]();
    sub_256176FE8();
    uint64_t v48 = sub_256177008();
  }
  else
  {
    sub_2561766C8();
    uint64_t v48 = sub_256177018();
  }
  uint64_t v51 = v48;
  uint64_t v52 = v49;
  uint64_t v53 = v77;
  char v54 = v50 & 1;
  uint64_t v55 = (uint64_t)v73;
  sub_256176188();
  sub_255F67B2C(v51, v52, v54);
  swift_bridgeObjectRelease();
  uint64_t v56 = MEMORY[0x263F1A470];
  sub_25615F7D4(v40, (uint64_t)&qword_269F47BE8, (uint64_t)sub_256168AE0, MEMORY[0x263F1A470], (uint64_t (*)(void))sub_256168B5C);
  uint64_t v57 = v75;
  sub_256176738();
  sub_256176198();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v59 = v57;
  uint64_t v60 = v78;
  v58(v59, v78);
  sub_25615F7D4(v55, (uint64_t)&qword_269F47BE8, (uint64_t)sub_256168AE0, v56, (uint64_t (*)(void))sub_256168B5C);
  uint64_t v61 = *(void *)(v39 + 24);
  long long v82 = *(_OWORD *)(v39 + 8);
  uint64_t v83 = v61;
  sub_256168E78(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](v84);
  if (v84[0] == *(void *)v39)
  {
    *(void *)&long long v82 = MEMORY[0x263F8EE78];
    sub_256169118(&qword_269F450C0, MEMORY[0x263F19938]);
    sub_256168E78(0, &qword_269F450C8, MEMORY[0x263F19938], MEMORY[0x263F8D488]);
    sub_256036C00();
    uint64_t v62 = v76;
    sub_2561784C8();
  }
  else
  {
    uint64_t v62 = v76;
    sub_256176728();
  }
  uint64_t v63 = (uint64_t)v74;
  uint64_t v64 = (uint64_t)v80;
  sub_2561761A8();
  v58(v62, v60);
  sub_25615F7D4(v64, (uint64_t)&qword_269F47BE8, (uint64_t)sub_256168AE0, MEMORY[0x263F1A470], (uint64_t (*)(void))sub_256168B5C);
  return sub_256168BD0(v63, v79);
}

uint64_t sub_256161D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v89 = a2;
  uint64_t v2 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v88 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = (uint64_t (*)(uint64_t))MEMORY[0x263F1B548];
  uint64_t v75 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1A418];
  sub_256168E78(0, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v70 - v6);
  uint64_t v71 = sub_256177518();
  uint64_t v8 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9DF68();
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2561688A8(0);
  uint64_t v73 = v15 - 8;
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256168874(0);
  uint64_t v74 = v18 - 8;
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v72 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561687E8(0);
  uint64_t v80 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v78 = (uint64_t)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25616875C(0, &qword_269F47B98, sub_2561687E8, (void (*)(void))sub_2561688C8);
  uint64_t v86 = v22;
  uint64_t v85 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v79 = (char *)&v70 - v23;
  sub_2561686B8();
  uint64_t v84 = v24 - 8;
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v87 = (uint64_t)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v81 = (char *)&v70 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v83 = (uint64_t)&v70 - v29;
  sub_2561680E4();
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v82 = (uint64_t)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v70 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v70 - v36;
  uint64_t v77 = (uint64_t)&v70 - v36;
  *(void *)uint64_t v35 = sub_256176798();
  *((void *)v35 + 1) = 0;
  v35[16] = 0;
  sub_256168C64();
  sub_256162774(v90, (uint64_t)&v35[*(int *)(v38 + 44)]);
  sub_256168EDC((uint64_t)v35, (uint64_t)v37, (uint64_t (*)(void))sub_2561680E4);
  uint64_t v39 = sub_256177508();
  uint64_t v40 = v71;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B540], v71);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v7 + *(int *)(v5 + 36), v10, v40);
  *uint64_t v7 = KeyPath;
  uint64_t v42 = (uint64_t)v14 + *(int *)(v12 + 44);
  uint64_t v43 = v76;
  char v44 = v75;
  sub_256168D04((uint64_t)v7, v42, (unint64_t *)&qword_269F42398, v76, v75);
  *uint64_t v14 = v39;
  swift_retain();
  sub_25615F7D4((uint64_t)v7, (uint64_t)&qword_269F42398, (uint64_t)v43, (uint64_t)v44, (uint64_t (*)(void))sub_256168E78);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v40);
  swift_release();
  uint64_t v45 = sub_256177438();
  sub_256168F44((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))sub_255F9DF68);
  *(void *)&v17[*(int *)(v73 + 44)] = v45;
  sub_256168FAC((uint64_t)v14, (uint64_t (*)(void))sub_255F9DF68);
  uint64_t v46 = sub_256176EC8();
  uint64_t v47 = swift_getKeyPath();
  uint64_t v48 = v72;
  sub_256168F44((uint64_t)v17, v72, (uint64_t (*)(void))sub_2561688A8);
  uint64_t v49 = (uint64_t *)(v48 + *(int *)(v74 + 44));
  *uint64_t v49 = v47;
  v49[1] = v46;
  sub_256168FAC((uint64_t)v17, (uint64_t (*)(void))sub_2561688A8);
  type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  uint64_t v50 = v90;
  uint64_t v51 = v88;
  sub_25611BE0C(v88);
  sub_256168FAC(v51, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_2561778E8();
  sub_2561762E8();
  uint64_t v52 = v78;
  sub_256168F44(v48, v78, (uint64_t (*)(void))sub_256168874);
  uint64_t v53 = (_OWORD *)(v52 + *(int *)(v80 + 36));
  long long v54 = v99;
  v53[4] = v98;
  v53[5] = v54;
  v53[6] = v100;
  long long v55 = v95;
  *uint64_t v53 = v94;
  v53[1] = v55;
  long long v56 = v97;
  v53[2] = v96;
  v53[3] = v56;
  sub_256168FAC(v48, (uint64_t (*)(void))sub_256168874);
  sub_2561688C8();
  uint64_t v57 = v79;
  sub_256177298();
  sub_256168FAC(v52, (uint64_t (*)(void))sub_2561687E8);
  uint64_t v58 = *(void *)(v50 + 24);
  long long v91 = *(_OWORD *)(v50 + 8);
  uint64_t v92 = v58;
  sub_256168E78(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v93);
  if (v93 == *(void *)v50) {
    double v59 = 1.0;
  }
  else {
    double v59 = 0.0;
  }
  uint64_t v60 = v85;
  uint64_t v61 = (uint64_t)v81;
  uint64_t v62 = v86;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v81, v57, v86);
  *(double *)(v61 + *(int *)(v84 + 44)) = v59;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v62);
  uint64_t v63 = v83;
  sub_256168EDC(v61, v83, (uint64_t (*)(void))sub_2561686B8);
  uint64_t v64 = v77;
  uint64_t v65 = v82;
  sub_256168F44(v77, v82, (uint64_t (*)(void))sub_2561680E4);
  uint64_t v66 = v87;
  sub_256168F44(v63, v87, (uint64_t (*)(void))sub_2561686B8);
  uint64_t v67 = v89;
  sub_256168F44(v65, v89, (uint64_t (*)(void))sub_2561680E4);
  sub_2561680B0(0);
  sub_256168F44(v66, v67 + *(int *)(v68 + 48), (uint64_t (*)(void))sub_2561686B8);
  sub_256168FAC(v63, (uint64_t (*)(void))sub_2561686B8);
  sub_256168FAC(v64, (uint64_t (*)(void))sub_2561680E4);
  sub_256168FAC(v66, (uint64_t (*)(void))sub_2561686B8);
  return sub_256168FAC(v65, (uint64_t (*)(void))sub_2561680E4);
}

uint64_t sub_256162774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v197 = a2;
  uint64_t v3 = sub_2561768C8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v170 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256044014();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v169 = (uint64_t)&v160 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v162 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v163 = (char *)&v160 - v8;
  sub_256168434(0, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
  uint64_t v165 = v9;
  uint64_t v164 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v161 = (char *)&v160 - v10;
  sub_256047D88();
  uint64_t v168 = v11;
  uint64_t v167 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v166 = (char *)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25616840C(0);
  uint64_t v172 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v173 = (char *)&v160 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25616836C();
  uint64_t v199 = v15;
  uint64_t v195 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v171 = (char *)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256168E78(0, &qword_269F47B60, (uint64_t (*)(uint64_t))sub_25616836C, MEMORY[0x263F8D8F0]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v196 = (uint64_t)&v160 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v160 - v20;
  uint64_t v22 = type metadata accessor for LoggingFlowBlendMode();
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v189 = (uint64_t *)((char *)&v160 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v23);
  uint64_t v192 = (uint64_t)&v160 - v25;
  uint64_t v191 = sub_256175D98();
  uint64_t v190 = *(void *)(v191 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v191);
  uint64_t v181 = (char *)&v160 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v188 = (uint64_t)&v160 - v28;
  uint64_t v179 = sub_256176EE8();
  uint64_t v29 = *(void *)(v179 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v179);
  uint64_t v177 = (char *)&v160 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v178 = (char *)&v160 - v32;
  uint64_t v175 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v175);
  uint64_t v176 = (uint64_t)&v160 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560F5464(0);
  uint64_t v180 = v34;
  MEMORY[0x270FA5388](v34);
  uint64_t v185 = (char *)&v160 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256168344(0);
  uint64_t v182 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v186 = (uint64_t)&v160 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611E0F0();
  uint64_t v183 = v38;
  MEMORY[0x270FA5388](v38);
  uint64_t v187 = (uint64_t)&v160 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611E1F0(0);
  uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
  uint64_t v194 = (uint64_t)&v160 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v184 = (uint64_t)&v160 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v203 = (uint64_t)&v160 - v45;
  sub_25611E2C4();
  MEMORY[0x270FA5388](v46 - 8);
  uint64_t v48 = (char *)&v160 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256168230(0, (unint64_t *)&qword_269F47288, (void (*)(uint64_t))sub_25611E2C4);
  uint64_t v50 = v49 - 8;
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)&v160 - v51;
  sub_25611E7B8(0);
  uint64_t v54 = MEMORY[0x270FA5388](v53 - 8);
  uint64_t v193 = (uint64_t)&v160 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v58 = (char *)&v160 - v57;
  MEMORY[0x270FA5388](v56);
  uint64_t v60 = (char *)&v160 - v59;
  *(void *)uint64_t v48 = sub_256176678();
  *((void *)v48 + 1) = 0x4010000000000000;
  v48[16] = 0;
  sub_256168D7C(0, &qword_269F47C00, &qword_269F47298, (uint64_t (*)(uint64_t))sub_25611E38C);
  sub_256163BDC(a1, &v48[*(int *)(v61 + 44)]);
  id v174 = self;
  uint64_t v62 = MEMORY[0x25A29FE80](objc_msgSend(v174, sel_labelColor));
  sub_256168F44((uint64_t)v48, (uint64_t)v52, (uint64_t (*)(void))sub_25611E2C4);
  *(void *)&v52[*(int *)(v50 + 44)] = v62;
  sub_256168FAC((uint64_t)v48, (uint64_t (*)(void))sub_25611E2C4);
  uint64_t v63 = sub_2561778F8();
  sub_256117A84(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v58, 0.0, 1, 0.0, 1, v63, v64);
  sub_256168DF8((uint64_t)v52);
  v202 = v60;
  sub_256168EDC((uint64_t)v58, (uint64_t)v60, (uint64_t (*)(void))sub_25611E7B8);
  char v65 = sub_25616547C();
  v200 = v21;
  uint64_t v66 = a1;
  if (v65) {
    uint64_t v67 = sub_256165864();
  }
  else {
    uint64_t v67 = sub_2561659D0();
  }
  uint64_t v204 = v67;
  uint64_t v205 = v68;
  sub_255F5CE90();
  uint64_t v69 = sub_256177028();
  uint64_t v71 = v70;
  char v73 = v72 & 1;
  sub_256176E88();
  uint64_t v74 = sub_256176F88();
  uint64_t v76 = v75;
  char v78 = v77 & 1;
  sub_255F67B2C(v69, v71, v73);
  swift_bridgeObjectRelease();
  uint64_t v198 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  uint64_t v201 = v66;
  uint64_t v79 = v176;
  sub_25611BE0C(v176);
  sub_256176EC8();
  char v80 = sub_256176138();
  uint64_t v81 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v80 & 1) == 0) {
    uint64_t v81 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v82 = v177;
  uint64_t v83 = v179;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v177, *v81, v179);
  uint64_t v84 = v178;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v178, v82, v83);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v84, v83);
  sub_256168FAC(v79, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  uint64_t v85 = sub_256176FD8();
  uint64_t v87 = v86;
  LOBYTE(v84) = v88 & 1;
  sub_255F67B2C(v74, v76, v78);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v204 = MEMORY[0x25A29FE80](objc_msgSend(v174, sel_labelColor));
  uint64_t v89 = sub_256176FA8();
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  char v95 = v94 & 1;
  sub_255F67B2C(v85, v87, (char)v84);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v96 = v188;
  sub_25611A114(v188);
  uint64_t v97 = v190;
  long long v98 = v181;
  uint64_t v99 = v191;
  (*(void (**)(char *, void, uint64_t))(v190 + 104))(v181, *MEMORY[0x263F184F8], v191);
  char v100 = sub_256175D88();
  uint64_t v101 = *(void (**)(char *, uint64_t))(v97 + 8);
  v101(v98, v99);
  if (v100) {
    double v102 = 1.0;
  }
  else {
    double v102 = 0.8;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v104 = v189;
  *uint64_t v189 = KeyPath;
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v105 = (uint64_t)v104;
  uint64_t v106 = v192;
  sub_256168EDC(v105, v192, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v107 = (uint64_t)v185;
  sub_256168F44(v106, (uint64_t)&v185[*(int *)(v180 + 36)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  *(void *)uint64_t v107 = v89;
  *(void *)(v107 + 8) = v91;
  *(unsigned char *)(v107 + 16) = v95;
  *(void *)(v107 + 24) = v93;
  *(double *)(v107 + 32) = v102;
  sub_255F67B94(v89, v91, v95);
  swift_bridgeObjectRetain();
  sub_256168FAC(v106, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  v101((char *)v96, v99);
  uint64_t v108 = v201;
  sub_255F67B2C(v89, v91, v95);
  swift_bridgeObjectRelease();
  LOBYTE(v106) = sub_256176D98();
  sub_256175D48();
  uint64_t v110 = v109;
  uint64_t v112 = v111;
  uint64_t v114 = v113;
  uint64_t v116 = v115;
  uint64_t v117 = v186;
  sub_256168F44(v107, v186, (uint64_t (*)(void))sub_2560F5464);
  uint64_t v118 = v117 + *(int *)(v182 + 36);
  *(unsigned char *)uint64_t v118 = v106;
  *(void *)(v118 + 8) = v110;
  *(void *)(v118 + 16) = v112;
  *(void *)(v118 + 24) = v114;
  *(void *)(v118 + 32) = v116;
  *(unsigned char *)(v118 + 40) = 0;
  sub_256168FAC(v107, (uint64_t (*)(void))sub_2560F5464);
  uint64_t v119 = swift_getKeyPath();
  uint64_t v120 = v187;
  sub_256168F44(v117, v187, (uint64_t (*)(void))sub_256168344);
  uint64_t v121 = v120 + *(int *)(v183 + 36);
  *(void *)uint64_t v121 = v119;
  *(unsigned char *)(v121 + 8) = 0;
  sub_256168FAC(v117, (uint64_t (*)(void))sub_256168344);
  uint64_t v122 = sub_2561778F8();
  uint64_t v123 = 1;
  uint64_t v124 = v184;
  sub_256117AF4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v184, 0.0, 1, 0.0, 1, v122, v125);
  sub_256168FAC(v120, (uint64_t (*)(void))sub_25611E0F0);
  sub_256168EDC(v124, v203, (uint64_t (*)(void))sub_25611E1F0);
  uint64_t v127 = v199;
  uint64_t v126 = (uint64_t)v200;
  uint64_t v128 = v195;
  if (*(void *)v108 == 1)
  {
    sub_2561766C8();
    sub_256177748();
    sub_256164934(v169);
    sub_2561768B8();
    uint64_t v129 = v161;
    sub_256175D38();
    sub_256168484();
    uint64_t v130 = v166;
    uint64_t v131 = v165;
    sub_2561770D8();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v129, v131);
    LOBYTE(v131) = sub_256176D98();
    sub_256175D48();
    uint64_t v133 = v132;
    uint64_t v135 = v134;
    uint64_t v137 = v136;
    uint64_t v139 = v138;
    uint64_t v140 = v167;
    uint64_t v141 = (uint64_t)v173;
    uint64_t v142 = v168;
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v173, v130, v168);
    uint64_t v143 = v141 + *(int *)(v172 + 36);
    *(unsigned char *)uint64_t v143 = v131;
    *(void *)(v143 + 8) = v133;
    *(void *)(v143 + 16) = v135;
    *(void *)(v143 + 24) = v137;
    *(void *)(v143 + 32) = v139;
    *(unsigned char *)(v143 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v140 + 8))(v130, v142);
    uint64_t v144 = *(void *)(v108 + 24);
    long long v209 = *(_OWORD *)(v108 + 8);
    uint64_t v210 = v144;
    sub_256168E78(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B750]);
    sub_256177748();
    uint64_t v145 = v204;
    uint64_t v146 = v205;
    uint64_t v147 = v206;
    LOBYTE(v209) = 0;
    sub_256177568();
    char v148 = v204;
    uint64_t v149 = v205;
    uint64_t v204 = v145;
    uint64_t v205 = v146;
    uint64_t v206 = v147;
    char v207 = v148;
    uint64_t v208 = v149;
    sub_256168508();
    sub_2561685DC();
    uint64_t v150 = v171;
    sub_256177128();
    uint64_t v127 = v199;
    uint64_t v126 = (uint64_t)v200;
    swift_release();
    swift_release();
    swift_release();
    sub_256168FAC(v141, (uint64_t (*)(void))sub_25616840C);
    (*(void (**)(uint64_t, char *, uint64_t))(v128 + 32))(v126, v150, v127);
    uint64_t v123 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56))(v126, v123, 1, v127);
  uint64_t v151 = v193;
  sub_256168F44((uint64_t)v202, v193, (uint64_t (*)(void))sub_25611E7B8);
  uint64_t v152 = v203;
  uint64_t v153 = v194;
  sub_256168F44(v203, v194, (uint64_t (*)(void))sub_25611E1F0);
  uint64_t v154 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  uint64_t v155 = v196;
  sub_256168D04(v126, v196, &qword_269F47B60, (uint64_t (*)(uint64_t))sub_25616836C, MEMORY[0x263F8D8F0]);
  uint64_t v156 = v197;
  sub_256168F44(v151, v197, (uint64_t (*)(void))sub_25611E7B8);
  sub_256168178();
  uint64_t v158 = v157;
  sub_256168F44(v153, v156 + *(int *)(v157 + 48), (uint64_t (*)(void))sub_25611E1F0);
  sub_256168D04(v155, v156 + *(int *)(v158 + 64), &qword_269F47B60, (uint64_t (*)(uint64_t))sub_25616836C, v154);
  sub_25615F7D4(v126, (uint64_t)&qword_269F47B60, (uint64_t)sub_25616836C, (uint64_t)v154, (uint64_t (*)(void))sub_256168E78);
  sub_256168FAC(v152, (uint64_t (*)(void))sub_25611E1F0);
  sub_256168FAC((uint64_t)v202, (uint64_t (*)(void))sub_25611E7B8);
  sub_25615F7D4(v155, (uint64_t)&qword_269F47B60, (uint64_t)sub_25616836C, (uint64_t)v154, (uint64_t (*)(void))sub_256168E78);
  sub_256168FAC(v153, (uint64_t (*)(void))sub_25611E1F0);
  return sub_256168FAC(v151, (uint64_t (*)(void))sub_25611E7B8);
}

uint64_t sub_256163BDC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v131 = a2;
  uint64_t v133 = sub_256176EE8();
  uint64_t v3 = *(void *)(v133 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v133);
  uint64_t v128 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v129 = (char *)&v114 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v124 = (char *)&v114 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v125 = (char *)&v114 - v10;
  uint64_t v11 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v127 = (uint64_t)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v123 = (uint64_t)&v114 - v14;
  sub_256168E78(0, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  uint64_t v120 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v114 - v16);
  uint64_t v18 = sub_256177518();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9DF68();
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (uint64_t *)((char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25611E524();
  uint64_t v118 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v119 = (uint64_t)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611E4A4();
  uint64_t v122 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v121 = (uint64_t)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611E420();
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v130 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v116 = (char *)&v114 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v126 = a1;
  uint64_t v135 = v36;
  uint64_t v136 = v35;
  uint64_t v134 = (char *)&v114 - v37;
  uint64_t v137 = v3;
  uint64_t v132 = v11;
  uint64_t v38 = sub_256177508();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F1B538], v18);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))((char *)v17 + *(int *)(v120 + 28), v21, v18);
  *uint64_t v17 = KeyPath;
  uint64_t v40 = (uint64_t)v25 + *(int *)(v23 + 36);
  uint64_t v41 = MEMORY[0x263F1B548];
  uint64_t v42 = MEMORY[0x263F1A418];
  sub_256168D04((uint64_t)v17, v40, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  *uint64_t v25 = v38;
  swift_retain();
  sub_25615F7D4((uint64_t)v17, (uint64_t)&qword_269F42398, v41, v42, (uint64_t (*)(void))sub_256168E78);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  swift_release();
  LODWORD(v18) = sub_256176A58();
  uint64_t v43 = v119;
  sub_256168F44((uint64_t)v25, v119, (uint64_t (*)(void))sub_255F9DF68);
  *(_DWORD *)(v43 + v118[9]) = v18;
  sub_256168FAC((uint64_t)v25, (uint64_t (*)(void))sub_255F9DF68);
  uint64_t v44 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  uint64_t v45 = v123;
  uint64_t v117 = v126 + *(int *)(v44 + 36);
  sub_25611BE0C(v123);
  sub_256176DF8();
  char v46 = sub_256176138();
  uint64_t v47 = v137;
  uint64_t v48 = *(int **)(v137 + 104);
  uint64_t v49 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v46 & 1) == 0) {
    uint64_t v49 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v50 = *v49;
  uint64_t v51 = v124;
  uint64_t v52 = v133;
  uint64_t v120 = v137 + 104;
  uint64_t v118 = v48;
  ((void (*)(char *, uint64_t, uint64_t))v48)(v124, v50, v133);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  uint64_t v54 = v125;
  uint64_t v124 = (char *)(v47 + 32);
  uint64_t v115 = v53;
  v53(v125, v51, v52);
  uint64_t v55 = sub_256176F08();
  swift_release();
  uint64_t v56 = *(char **)(v47 + 8);
  uint64_t v137 = v47 + 8;
  uint64_t v125 = v56;
  ((void (*)(char *, uint64_t))v56)(v54, v52);
  sub_256168FAC(v45, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  uint64_t v57 = swift_getKeyPath();
  uint64_t v58 = v121;
  sub_256168F44(v43, v121, (uint64_t (*)(void))sub_25611E524);
  uint64_t v59 = (uint64_t *)(v58 + *(int *)(v122 + 36));
  uint64_t *v59 = v57;
  v59[1] = v55;
  sub_256168FAC(v43, (uint64_t (*)(void))sub_25611E524);
  sub_256176E88();
  sub_2561689CC((unint64_t *)&qword_269F472C0, (void (*)(uint64_t))sub_25611E4A4, (void (*)(void))sub_25611E650, (void (*)(void))sub_255F6759C);
  uint64_t v60 = v116;
  sub_256177068();
  sub_256168FAC(v58, (uint64_t (*)(void))sub_25611E4A4);
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v60, v136);
  *(void *)&v160[0] = 0;
  *((void *)&v160[0] + 1) = 0xE000000000000000;
  sub_256178558();
  swift_bridgeObjectRelease();
  *(void *)&v160[0] = 0xD000000000000014;
  *((void *)&v160[0] + 1) = 0x80000002561AE1C0;
  sub_256177F68();
  swift_bridgeObjectRelease();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v61 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_2561755B8();
  uint64_t v64 = v63;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)&v160[0] = v62;
  *((void *)&v160[0] + 1) = v64;
  sub_255F5CE90();
  uint64_t v65 = sub_256177028();
  uint64_t v67 = v66;
  char v69 = v68 & 1;
  LODWORD(v160[0]) = sub_256176A58();
  uint64_t v70 = sub_256176FA8();
  uint64_t v72 = v71;
  char v74 = v73;
  uint64_t v126 = v75;
  sub_255F67B2C(v65, v67, v69);
  swift_bridgeObjectRelease();
  uint64_t v76 = v127;
  sub_25611BE0C(v127);
  sub_256176DF8();
  char v77 = sub_256176138();
  char v78 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v77 & 1) == 0) {
    char v78 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v79 = v128;
  uint64_t v80 = v133;
  ((void (*)(char *, void, uint64_t))v118)(v128, *v78, v133);
  uint64_t v81 = v129;
  v115(v129, v79, v80);
  sub_256176F08();
  swift_release();
  ((void (*)(char *, uint64_t))v125)(v81, v80);
  sub_256168FAC(v76, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  uint64_t v82 = sub_256176FD8();
  uint64_t v84 = v83;
  char v86 = v85 & 1;
  sub_255F67B2C(v70, v72, v74 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256176E88();
  uint64_t v87 = sub_256176F88();
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  LOBYTE(v79) = v92 & 1;
  sub_255F67B2C(v82, v84, v86);
  swift_bridgeObjectRelease();
  uint64_t v93 = swift_getKeyPath();
  uint64_t v161 = v87;
  uint64_t v162 = v89;
  char v163 = (char)v79;
  uint64_t v164 = v91;
  uint64_t v165 = v93;
  char v166 = 0;
  sub_2561778F8();
  sub_256115E68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v160, 0.0, 1, 0.0, 1);
  sub_255F67B2C(v87, v89, (char)v79);
  swift_release();
  swift_bridgeObjectRelease();
  long long v154 = v160[6];
  long long v155 = v160[7];
  long long v156 = v160[8];
  long long v157 = v160[9];
  long long v150 = v160[2];
  long long v151 = v160[3];
  long long v152 = v160[4];
  long long v153 = v160[5];
  long long v148 = v160[0];
  long long v149 = v160[1];
  char v95 = v134;
  uint64_t v94 = v135;
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
  uint64_t v97 = v130;
  uint64_t v98 = v136;
  v96(v130, v134, v136);
  long long v144 = v154;
  long long v145 = v155;
  long long v146 = v156;
  long long v147 = v157;
  long long v140 = v150;
  long long v141 = v151;
  long long v142 = v152;
  long long v143 = v153;
  long long v138 = v148;
  long long v139 = v149;
  uint64_t v99 = v131;
  v96(v131, v97, v98);
  sub_25611E38C();
  uint64_t v101 = *(int *)(v100 + 48);
  long long v102 = v145;
  v158[6] = v144;
  v158[7] = v145;
  long long v103 = v146;
  long long v104 = v147;
  v158[8] = v146;
  v158[9] = v147;
  long long v105 = v142;
  long long v106 = v143;
  v158[4] = v142;
  v158[5] = v143;
  long long v107 = v140;
  long long v108 = v141;
  v158[2] = v140;
  v158[3] = v141;
  long long v109 = v138;
  long long v110 = v139;
  v158[0] = v138;
  v158[1] = v139;
  uint64_t v111 = &v99[v101];
  *((_OWORD *)v111 + 6) = v144;
  *((_OWORD *)v111 + 7) = v102;
  *((_OWORD *)v111 + 8) = v103;
  *((_OWORD *)v111 + 9) = v104;
  *((_OWORD *)v111 + 2) = v107;
  *((_OWORD *)v111 + 3) = v108;
  *((_OWORD *)v111 + 4) = v105;
  *((_OWORD *)v111 + 5) = v106;
  *(_OWORD *)uint64_t v111 = v109;
  *((_OWORD *)v111 + 1) = v110;
  sub_255F67B44((uint64_t)v158);
  uint64_t v112 = *(void (**)(char *, uint64_t))(v94 + 8);
  v112(v95, v98);
  v159[6] = v144;
  v159[7] = v145;
  v159[8] = v146;
  v159[9] = v147;
  v159[2] = v140;
  v159[3] = v141;
  v159[4] = v142;
  v159[5] = v143;
  v159[0] = v138;
  v159[1] = v139;
  sub_255F67BA4((uint64_t)v159);
  return ((uint64_t (*)(char *, uint64_t))v112)(v97, v98);
}

uint64_t sub_256164934@<X0>(uint64_t a1@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v72 = sub_256175B68();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_2561759E8();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  char v74 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256168E78(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v76 = (char *)&v69 - v6;
  sub_256157598();
  uint64_t v88 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v82 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v78 = (char *)&v69 - v10;
  sub_256044014();
  uint64_t v79 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v80 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_256175A08();
  uint64_t v91 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_256175868();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  char v69 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v69 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v69 - v22;
  uint64_t v24 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  uint64_t v25 = v1 + *(int *)(v24 + 28);
  sub_25611C0E0((uint64_t)v14);
  uint64_t v87 = v1 + *(int *)(v24 + 24);
  sub_256168E78(0, &qword_269F44B48, v4, MEMORY[0x263F1B750]);
  uint64_t v83 = v26;
  MEMORY[0x25A2A01A0]();
  char v86 = v23;
  sub_2561758F8();
  uint64_t v85 = v16;
  uint64_t v27 = v16 + 8;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v29 = v15;
  v28(v21, v15);
  uint64_t v30 = v91 + 8;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v91 + 8);
  uint64_t v32 = v84;
  v31(v14, v84);
  uint64_t v73 = v25;
  sub_25611C0E0((uint64_t)v14);
  MEMORY[0x25A2A01A0](v83);
  char v33 = sub_256175908();
  uint64_t v87 = v29;
  uint64_t v89 = v28;
  uint64_t v90 = v27;
  v28(v21, v29);
  uint64_t v91 = v30;
  v31(v14, v32);
  if (v33)
  {
    uint64_t v34 = v85;
    sub_256175828();
    sub_256169118((unint64_t *)&qword_269F451B8, MEMORY[0x263F07490]);
    uint64_t v35 = v86;
    uint64_t v36 = v87;
    uint64_t result = sub_256177E68();
    if (result)
    {
      uint64_t v38 = v88;
      uint64_t v39 = v78;
      uint64_t v40 = &v78[*(int *)(v88 + 48)];
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      v41(v78, v35, v36);
      v41(v40, v21, v36);
      uint64_t v42 = v82;
      uint64_t v43 = &v82[*(int *)(v38 + 48)];
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      v44(v82, v39, v36);
      v44(v43, v40, v36);
      uint64_t v45 = (uint64_t)v80;
      v41(v80, v42, v36);
      char v46 = v43;
      uint64_t v47 = v36;
LABEL_9:
      id v61 = v89;
      v89(v46, v47);
      uint64_t v62 = *(int *)(v38 + 48);
LABEL_12:
      char v68 = &v42[v62];
      v41(v42, v39, v36);
      v41(v68, v40, v36);
      v41((char *)(v45 + *(int *)(v79 + 36)), v68, v36);
      v61(v42, v36);
      return sub_256168EDC(v45, v81, (uint64_t (*)(void))sub_256044014);
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_25611C0E0((uint64_t)v14);
  uint64_t v49 = v74;
  uint64_t v48 = v75;
  uint64_t v50 = v77;
  (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, *MEMORY[0x263F07870], v77);
  uint64_t v51 = (uint64_t)v76;
  uint64_t v52 = v86;
  sub_2561759A8();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  v31(v14, v32);
  uint64_t v53 = v85;
  uint64_t v36 = v87;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v51, 1, v87) == 1)
  {
    sub_25615F7D4(v51, (uint64_t)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_256168E78);
    uint64_t v54 = v70;
    sub_256175B48();
    uint64_t v55 = sub_256175B58();
    os_log_type_t v56 = sub_256178218();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v93 = v58;
      *(_DWORD *)uint64_t v57 = 136446210;
      uint64_t v92 = sub_255FB29A8(0xD00000000000004CLL, 0x80000002561AE240, &v93);
      sub_256178458();
      _os_log_impl(&dword_255F58000, v55, v56, "[%{public}s] Unable to determine start of next day", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v58, -1, -1);
      MEMORY[0x25A2A1E90](v57, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v54, v72);
    uint64_t v42 = v82;
    sub_256169118((unint64_t *)&qword_269F451B8, MEMORY[0x263F07490]);
    uint64_t result = sub_256177E68();
    if (result)
    {
      uint64_t v38 = v88;
      uint64_t v39 = v78;
      uint64_t v40 = &v78[*(int *)(v88 + 48)];
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
      v59(v78, v52, v36);
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
      v41(v40, v52, v36);
      uint64_t v60 = &v42[*(int *)(v38 + 48)];
      v59(v42, v39, v36);
      v59(v60, v40, v36);
      uint64_t v45 = (uint64_t)v80;
      v41(v80, v42, v36);
      char v46 = v60;
      uint64_t v47 = v36;
      goto LABEL_9;
    }
    goto LABEL_14;
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  uint64_t v63 = v69;
  v41(v69, (char *)v51, v36);
  sub_2561757E8();
  sub_256169118((unint64_t *)&qword_269F451B8, MEMORY[0x263F07490]);
  char v64 = sub_256177E68();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v89)(v63, v36);
  if (v64)
  {
    uint64_t v65 = v88;
    uint64_t v39 = v78;
    uint64_t v40 = &v78[*(int *)(v88 + 48)];
    v41(v78, v52, v36);
    v41(v40, v21, v36);
    uint64_t v42 = v82;
    uint64_t v66 = &v82[*(int *)(v65 + 48)];
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
    v67(v82, v39, v36);
    v67(v66, v40, v36);
    uint64_t v45 = (uint64_t)v80;
    v41(v80, v42, v36);
    id v61 = v89;
    v89(v66, v36);
    uint64_t v62 = *(int *)(v88 + 48);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_25616547C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ReflectiveIntervalPickerSelectionView(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_256175868();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = sub_256175A08();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 == 2)
  {
    uint64_t v26 = v5;
    sub_25611C0E0((uint64_t)v15);
    sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    MEMORY[0x25A2A01A0]();
    char v27 = sub_256175908();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v26);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    char v25 = v27 ^ 1;
  }
  else if (*v1 == 1)
  {
    uint64_t v32 = v4;
    uint64_t v16 = v5;
    sub_25611C0E0((uint64_t)v15);
    sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v29 = v17;
    MEMORY[0x25A2A01A0]();
    char v18 = sub_256175908();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v31 = v16;
    uint64_t v19 = v16;
    uint64_t v20 = (uint64_t)v32;
    v30(v11, v19);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_256168F44((uint64_t)v1, v20, type metadata accessor for ReflectiveIntervalPickerSelectionView);
    if (v18)
    {
      sub_256175828();
      MEMORY[0x25A2A01A0](v29);
      sub_2561757D8();
      double v22 = v21;
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      v30(v9, v31);
      v24(v11, v23);
      sub_256168FAC(v20, type metadata accessor for ReflectiveIntervalPickerSelectionView);
      char v25 = v22 > 60.0;
    }
    else
    {
      sub_256168FAC(v20, type metadata accessor for ReflectiveIntervalPickerSelectionView);
      char v25 = 1;
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_256165864()
{
  if (*v0 == 2)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (*v0 != 1) {
    return 0;
  }
  if (qword_269F42348 != -1) {
    goto LABEL_9;
  }
LABEL_6:
  id v1 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2561755B8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_2561659D0()
{
  sub_256178558();
  swift_bridgeObjectRelease();
  sub_256177F68();
  swift_bridgeObjectRelease();
  sub_256177F68();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v0 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_2561755B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t *sub_256165B58(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    char v18 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v14 = *(int *)(v13 + 32);
    uint64_t v39 = &v11[v14];
    uint64_t v40 = (char *)v10 + v14;
    uint64_t v15 = sub_256175868();
    uint64_t v16 = a3;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    char v18 = a1;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v17(v40, v39, v15);
    uint64_t v19 = v16[7];
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    double v21 = (uint64_t *)((char *)a2 + v19);
    sub_256168E78(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = v16[8];
    char v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *char v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = v16[9];
    uint64_t v29 = (uint64_t *)((char *)a1 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_256176AA8();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      uint64_t v34 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v35 = (char *)v29 + v34;
      uint64_t v36 = (char *)v30 + v34;
      uint64_t v37 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      *uint64_t v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v18;
}

uint64_t sub_256166028(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[6];
  swift_release();
  swift_release();
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v6 = v4 + *(int *)(v5 + 32);
  uint64_t v7 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  sub_256168E78(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175A08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = a1 + a2[9];
  sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256176AA8();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v15 = v12 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v16 = sub_256176158();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    return v17(v15, v16);
  }
  else
  {
    return swift_release();
  }
}

void *sub_256166378(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v12 = *(int *)(v11 + 32);
  uint64_t v35 = (char *)v8 + v12;
  uint64_t v13 = &v9[v12];
  uint64_t v14 = sub_256175868();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v35, v13, v14);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  char v18 = (void *)((char *)a2 + v16);
  sub_256168E78(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_256175A08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  double v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    void *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[9];
  char v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_256176AA8();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v30 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v31 = (char *)v25 + v30;
    uint64_t v32 = (char *)v26 + v30;
    uint64_t v33 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  else
  {
    *char v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2561667F0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
    char v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v14, (uint64_t)&qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F44C98, v17, v18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v16, v19);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[8];
    double v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v20, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F47D00, v23, v24);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v21, v22, v25);
    }
    else
    {
      void *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = a3[9];
    uint64_t v27 = (void *)((char *)a1 + v26);
    uint64_t v28 = (void *)((char *)a2 + v26);
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v26, (uint64_t)&qword_269F44C30, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_256176AA8();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30))
      {
        sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 16))(v27, v28, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
      }
      uint64_t v33 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v34 = (char *)v27 + v33;
      uint64_t v35 = (char *)v28 + v33;
      uint64_t v36 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_256166D28(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_256175868();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  sub_256168E78(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  uint64_t v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256175A08();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  sub_256168E78(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v25 = v24;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v22, v23, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = (char *)(a1 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v31 = v30;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_256176AA8();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v29, 1, v32))
    {
      sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v29, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
    }
    uint64_t v35 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v36 = &v28[v35];
    uint64_t v37 = &v29[v35];
    uint64_t v38 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  return a1;
}

void *sub_256167194(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_release();
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  if (a1 != a2)
  {
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v15, (uint64_t)&qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F44C98, v18, v19);
    uint64_t v21 = v20;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256175A08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v16, v17, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v23, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F47D00, v26, v27);
    uint64_t v29 = v28;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v24, v25, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    uint64_t v31 = a3[9];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25615F7D4((uint64_t)a1 + v31, (uint64_t)&qword_269F44C30, (uint64_t)type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256168E78);
    sub_256168E78(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v34);
    uint64_t v36 = v35;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_256176AA8();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v33, 1, v37))
      {
        sub_256168E78(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v32, v33, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v32, 0, 1, v37);
      }
      uint64_t v40 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v41 = &v32[v40];
      uint64_t v42 = &v33[v40];
      uint64_t v43 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2561676D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2561676E8);
}

uint64_t sub_2561676E8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  sub_256168E78(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  sub_256168E78(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_11;
  }
  sub_256168E78(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[9];

  return v16(v18, a2, v17);
}

uint64_t sub_25616796C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256167980);
}

uint64_t sub_256167980(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
    return result;
  }
  sub_256168E78(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  sub_256168E78(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  sub_256168E78(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  sub_256168E78(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[9];

  return v16(v18, a2, a2, v17);
}

void sub_256167C04()
{
  sub_256168E78(319, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (v0 <= 0x3F)
  {
    sub_256168E78(319, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_256168E78(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F)
      {
        sub_256168E78(319, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_256167E1C()
{
  return sub_2561689CC(&qword_269F47B00, sub_25616117C, (void (*)(void))sub_256167E78, (void (*)(void))sub_256167FCC);
}

uint64_t sub_256167E78()
{
  return sub_256167F14(&qword_269F47B08, sub_256161154, (void (*)(void))sub_256167EAC);
}

uint64_t sub_256167EAC()
{
  return sub_256167F14(&qword_269F47B10, sub_25616112C, (void (*)(void))sub_256167EE0);
}

uint64_t sub_256167EE0()
{
  return sub_256167F14(&qword_269F47B18, sub_256161104, (void (*)(void))sub_256167F98);
}

uint64_t sub_256167F14(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256167F98()
{
  return sub_256169118(&qword_269F47B20, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalPickerSelectionView);
}

uint64_t sub_256167FCC()
{
  return sub_256169118(&qword_269F47B28, (void (*)(uint64_t))sub_2561611B0);
}

uint64_t sub_256168000()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_25616801C()
{
  if (!qword_269F47B30)
  {
    sub_256168E78(255, &qword_269F47B38, (uint64_t (*)(uint64_t))sub_2561680B0, MEMORY[0x263F1BAC8]);
    sub_256168A58();
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47B30);
    }
  }
}

void sub_2561680B0(uint64_t a1)
{
}

void sub_2561680E4()
{
  if (!qword_269F47B48)
  {
    sub_256168E78(255, &qword_269F47B50, (uint64_t (*)(uint64_t))sub_256168178, MEMORY[0x263F1BAC8]);
    sub_256168630();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47B48);
    }
  }
}

void sub_256168178()
{
  if (!qword_269F47B58)
  {
    sub_25611E7B8(255);
    sub_25611E1F0(255);
    sub_256168E78(255, &qword_269F47B60, (uint64_t (*)(uint64_t))sub_25616836C, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F47B58);
    }
  }
}

void sub_256168230(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256168434(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2561682C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_256168344(uint64_t a1)
{
}

void sub_25616836C()
{
  if (!qword_269F47B68)
  {
    sub_25616840C(255);
    sub_256168508();
    sub_2561685DC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F47B68);
    }
  }
}

void sub_25616840C(uint64_t a1)
{
}

void sub_256168434(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_256168484()
{
  unint64_t result = qword_269F44AC8;
  if (!qword_269F44AC8)
  {
    sub_256168434(255, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44AC8);
  }
  return result;
}

unint64_t sub_256168508()
{
  unint64_t result = qword_269F47B78;
  if (!qword_269F47B78)
  {
    sub_25616840C(255);
    sub_256168434(255, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
    sub_256168484();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47B78);
  }
  return result;
}

unint64_t sub_2561685DC()
{
  unint64_t result = qword_269F47B80;
  if (!qword_269F47B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47B80);
  }
  return result;
}

unint64_t sub_256168630()
{
  unint64_t result = qword_269F47B88;
  if (!qword_269F47B88)
  {
    sub_256168E78(255, &qword_269F47B50, (uint64_t (*)(uint64_t))sub_256168178, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47B88);
  }
  return result;
}

void sub_2561686B8()
{
  if (!qword_269F47B90)
  {
    sub_25616875C(255, &qword_269F47B98, sub_2561687E8, (void (*)(void))sub_2561688C8);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47B90);
    }
  }
}

void sub_25616875C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_2561687E8(uint64_t a1)
{
}

void sub_256168810(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256168874(uint64_t a1)
{
}

void sub_2561688A8(uint64_t a1)
{
}

unint64_t sub_2561688C8()
{
  unint64_t result = qword_269F47BB8;
  if (!qword_269F47BB8)
  {
    sub_2561687E8(255);
    sub_2561689CC(&qword_269F47BC0, sub_256168874, (void (*)(void))sub_256168984, (void (*)(void))sub_255F6759C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47BB8);
  }
  return result;
}

uint64_t sub_256168984()
{
  return sub_2561689CC(&qword_269F47BC8, sub_2561688A8, (void (*)(void))sub_255F9DFF8, (void (*)(void))sub_255F67518);
}

uint64_t sub_2561689CC(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256168A58()
{
  unint64_t result = qword_269F47BD0;
  if (!qword_269F47BD0)
  {
    sub_256168E78(255, &qword_269F47B38, (uint64_t (*)(uint64_t))sub_2561680B0, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47BD0);
  }
  return result;
}

void sub_256168AE0(uint64_t a1)
{
}

uint64_t sub_256168B28()
{
  return sub_256169118(&qword_269F47BE0, (void (*)(uint64_t))sub_25616801C);
}

void sub_256168B5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_256168BD0(uint64_t a1, uint64_t a2)
{
  sub_256168B5C(0, &qword_269F47BE8, sub_256168AE0, MEMORY[0x263F1A470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_256168C64()
{
  if (!qword_269F47BF8)
  {
    sub_256168E78(255, &qword_269F47B50, (uint64_t (*)(uint64_t))sub_256168178, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47BF8);
    }
  }
}

uint64_t sub_256168D04(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_256168E78(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_256168D7C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_256168E78(255, a3, a4, MEMORY[0x263F1BAC8]);
    unint64_t v5 = sub_256176048();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256168DF8(uint64_t a1)
{
  sub_256168230(0, (unint64_t *)&qword_269F47288, (void (*)(uint64_t))sub_25611E2C4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_256168E78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256168EDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_256168F44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256168FAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_256169010()
{
  unint64_t result = qword_269F47C08;
  if (!qword_269F47C08)
  {
    sub_256168B5C(255, &qword_269F47BE8, sub_256168AE0, MEMORY[0x263F1A470]);
    sub_25616801C();
    sub_256168B28();
    swift_getOpaqueTypeConformance2();
    sub_256169118(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47C08);
  }
  return result;
}

uint64_t sub_256169118(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AssessmentsNotificationSettingsView.init(navigationTitleText:assessmentsSettingModel:notificationSettingsModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a4;
  *(void *)a5 = sub_255F67F50;
  *(void *)(a5 + 8) = a3;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = sub_25602EA20;
  *(void *)(a5 + 32) = result;
  *(unsigned char *)(a5 + 40) = 0;
  *(void *)(a5 + 48) = a1;
  *(void *)(a5 + 56) = a2;
  return result;
}

uint64_t sub_2561691EC()
{
  return swift_deallocObject();
}

uint64_t AssessmentsNotificationSettingsView.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  sub_255F68064();
  sub_25602F5EC(v1, (uint64_t)v2, v3);
  type metadata accessor for AssessmentsSettingsModel();
  sub_256169448(&qword_269F44F10, (void (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel);
  swift_bridgeObjectRetain();
  sub_256175E28();
  type metadata accessor for NotificationSettingsModel();
  sub_256169448((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
  sub_256175E28();
  sub_255F6806C();
  sub_255FE84F8(v1, v2, v3);
  swift_bridgeObjectRelease();
  sub_2561760E8();
  sub_2561760E8();
  uint64_t v5 = v4;
  sub_256177568();
  sub_256169490();
  sub_255F5CE90();
  sub_256177158();

  swift_release();
  return swift_release();
}

uint64_t sub_256169448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256169490()
{
  unint64_t result = qword_269F47C10;
  if (!qword_269F47C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47C10);
  }
  return result;
}

uint64_t sub_2561694E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AssessmentsNotificationSettingsView(uint64_t a1)
{
  sub_255F6806C();
  sub_255FE84F8(*(void *)(a1 + 24), *(void **)(a1 + 32), *(unsigned char *)(a1 + 40));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentsNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_255F68064();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  char v9 = *((unsigned char *)a2 + 40);
  sub_25602F5EC(v7, v8, v9);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentsNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_255F68064();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255F6806C();
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  char v9 = *((unsigned char *)a2 + 40);
  sub_25602F5EC(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void **)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  sub_255FE84F8(v10, v11, v12);
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssessmentsNotificationSettingsView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_255F6806C();
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void **)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v5;
  sub_255FE84F8(v6, v7, v8);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentsNotificationSettingsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentsNotificationSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsNotificationSettingsView()
{
  return &type metadata for AssessmentsNotificationSettingsView;
}

uint64_t sub_2561697A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_25616980C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_25616F77C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v87 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v85 = v8;
      uint64_t v84 = v6;
      if (v87(a2, 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      char v86 = *v16;
      (*v16)(v13, v14, v15);
      *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_256175D98();
      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v83(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      if (v87((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v22, v23, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v22, 0, 1, v7);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v86(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      if (v87((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v27, 0, 1, v7);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v86(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      if (v87((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v32, v33, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v32, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v86(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      if (v87((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v86(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      if (v87((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v42, 0, 1, v7);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v86(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v83(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      if (v87((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v85;
      }
      else
      {
        uint64_t v50 = v85;
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v86(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if (v87((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v86(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v87((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v86(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = (char *)a1 + v62;
      char v64 = (char *)a2 + v62;
      if (v87((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v86(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      char v68 = (char *)a1 + v67;
      char v69 = (char *)a2 + v67;
      if (v87((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v86(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = (char *)a1 + v72;
      char v74 = (char *)a2 + v72;
      if (v87((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v86(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v84;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v77 = *(int *)(v6 + 20);
    uint64_t v78 = *(int *)(v6 + 24);
    uint64_t v79 = (uint64_t *)((char *)a1 + v77);
    uint64_t v80 = (uint64_t *)((char *)a2 + v77);
    uint64_t v81 = v80[1];
    *uint64_t v79 = *v80;
    v79[1] = v81;
    *(uint64_t *)((char *)a1 + v78) = *(uint64_t *)((char *)a2 + v78);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_25616A64C(uint64_t a1)
{
  sub_25616F77C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    char v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_256176158();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    uint64_t v9 = v6;
    uint64_t v10 = (int *)v5;
    v8(v9, v7);
    uint64_t v11 = a1 + *(int *)(v5 + 28);
    uint64_t v12 = sub_256175D98();
    uint64_t v38 = *(void (**)(uint64_t))(*(void *)(v12 - 8) + 8);
    uint64_t v39 = v12;
    v38(v11);
    uint64_t v13 = a1 + v10[8];
    if (!v4(v13, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    }
    uint64_t v14 = _s6StylesV8TimelineVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    uint64_t v15 = a1 + v10[9];
    if (!v4(v15, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    }
    uint64_t v16 = _s6StylesV6NoDataVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    uint64_t v17 = a1 + v10[10];
    if (!v4(v17, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    }
    uint64_t v18 = _s6StylesV11PlaceholderVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    uint64_t v19 = a1 + v10[11];
    if (!v4(v19, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    }
    uint64_t v20 = _s6StylesV6SymbolVMa(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    uint64_t v21 = a1 + v10[12];
    if (!v4(v21, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    }
    uint64_t v40 = v3;
    uint64_t v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    ((void (*)(uint64_t, uint64_t))v38)(v21 + *(int *)(v22 + 28), v39);
    uint64_t v23 = v10;
    uint64_t v24 = a1 + v10[13];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV5EmptyVMa(0);
    v8(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v23[14];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV5DailyVMa(0);
    v8(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v23[15];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV9MomentaryVMa(0);
    v8(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v23[16];
    uint64_t v31 = v7;
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v30, v2);
    }
    uint64_t v32 = _s6StylesV6HeaderVMa(0);
    v8(v30 + *(int *)(v32 + 20), v7);
    uint64_t v33 = a1 + v23[17];
    if (!v4(v33, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v2);
    }
    uint64_t v34 = _s6StylesV11ChartButtonVMa(0);
    v8(v33 + *(int *)(v34 + 20), v7);
    uint64_t v35 = a1 + v23[18];
    if (!v4(v35, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v2);
    }
    uint64_t v36 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v35 + *(int *)(v36 + 20), v31);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_25616AC98(void *a1, void *a2, uint64_t a3)
{
  sub_25616F77C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v85 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v83 = v7;
    if (v85(a2, 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v84 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v81(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v85((void *)((char *)a2 + v19), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v84(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v82 = a3;
    if (v85((void *)((char *)a2 + v24), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v84(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v85((void *)((char *)a2 + v29), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v84(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v85((void *)((char *)a2 + v34), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v84(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v85((void *)((char *)a2 + v39), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v40, 0, 1, v6);
    }
    uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v84(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v81(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v85((void *)((char *)a2 + v44), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v83;
    }
    else
    {
      uint64_t v48 = v83;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v84(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v85((void *)((char *)a2 + v50), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v84(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v85((void *)((char *)a2 + v55), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v82;
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v84(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v85((void *)((char *)a2 + v60), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v84(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v85((void *)((char *)a2 + v65), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v84(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v85((void *)((char *)a2 + v70), 1, v6))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v84(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = *(int *)(a3 + 24);
  uint64_t v77 = (void *)((char *)a1 + v75);
  uint64_t v78 = (void *)((char *)a2 + v75);
  uint64_t v79 = v78[1];
  *uint64_t v77 = *v78;
  v77[1] = v79;
  *(void *)((char *)a1 + v76) = *(void *)((char *)a2 + v76);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_25616BA88(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_25616F77C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v84 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v81 = a3;
      uint64_t v82 = v7;
      if (v84(a2, 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_256176158();
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v83 = *v14;
      (*v14)(v11, v12, v13);
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      uint64_t v15 = v9[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_256175D98();
      uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v80(v16, v17, v18);
      uint64_t v19 = v9[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v84((void *)((char *)a2 + v19), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v20, v21, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v20, 0, 1, v6);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v83(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      uint64_t v24 = v9[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      if (v84((void *)((char *)a2 + v24), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v25, v26, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v25, 0, 1, v6);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v83(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v9[10];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      if (v84((void *)((char *)a2 + v29), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v30, v31, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v30, 0, 1, v6);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v83(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      uint64_t v34 = v9[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v84((void *)((char *)a2 + v34), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v35, v36, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v35, 0, 1, v6);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v83(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      uint64_t v39 = v9[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v84((void *)((char *)a2 + v39), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v40, v41, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v40, 0, 1, v6);
      }
      uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v83(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v80(&v40[v43[7]], &v41[v43[7]], v18);
      uint64_t v44 = v9[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v84((void *)((char *)a2 + v44), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v82;
      }
      else
      {
        uint64_t v48 = v82;
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v45, v46, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v45, 0, 1, v6);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v83(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v9[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v84((void *)((char *)a2 + v50), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v83(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v9[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v84((void *)((char *)a2 + v55), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v83(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      uint64_t v60 = v9[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v84((void *)((char *)a2 + v60), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v83(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      uint64_t v65 = v9[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v84((void *)((char *)a2 + v65), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v83(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      uint64_t v70 = v9[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v84((void *)((char *)a2 + v70), 1, v6))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v83(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v81;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = (void *)((char *)a1 + v75);
  uint64_t v77 = (void *)((char *)a2 + v75);
  uint64_t v78 = v77[1];
  void *v76 = *v77;
  v76[1] = v78;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_25616C898(char *a1, char *a2, uint64_t a3)
{
  sub_25616F77C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v81 = v9;
    if (v83(a2, 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v82 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v79(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v83(&a2[v21], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v82(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v80 = a3;
    if (v83(&a2[v26], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v82(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v83(&a2[v31], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v82(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v83(&a2[v36], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v82(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v83(&a2[v41], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v82(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v79(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v83(&a2[v46], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v81;
    }
    else
    {
      uint64_t v50 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v82(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v83(&a2[v52], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v82(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v83(&a2[v57], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v80;
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v82(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v83(&a2[v62], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v82(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v83(&a2[v67], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v82(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v83(&a2[v72], 1, v8))
    {
      sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v82(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v77 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v77] = *(void *)&a2[v77];
  return a1;
}

char *sub_25616D67C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_25616F77C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176AA8();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      uint64_t v79 = a3;
      uint64_t v80 = v9;
      if (v82(a2, 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      uint64_t v81 = *v16;
      (*v16)(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      uint64_t v17 = v11[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_256175D98();
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v78(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if (v82(&a2[v21], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v22, v23, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v22, 0, 1, v8);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v81(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      if (v82(&a2[v26], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v28, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v27, 0, 1, v8);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v81(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if (v82(&a2[v31], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v32, v33, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v32, 0, 1, v8);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v81(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v82(&a2[v36], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v37, v38, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v8);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v81(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      if (v82(&a2[v41], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v42, v43, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v42, 0, 1, v8);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v81(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v82(&a2[v46], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v80;
      }
      else
      {
        uint64_t v50 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v47, v48, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v8);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v81(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v82(&a2[v52], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v81(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v82(&a2[v57], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v81(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v82(&a2[v62], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v81(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v82(&a2[v67], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v81(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v82(&a2[v72], 1, v8))
      {
        sub_25616F77C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v81(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v79;
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25616E480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25616E494);
}

uint64_t sub_25616E494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25616F77C(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25616E584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25616E598);
}

void sub_25616E598(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25616F77C(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t _s14ShowMoreButtonVMa()
{
  uint64_t result = qword_269F47C18;
  if (!qword_269F47C18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25616E6D0()
{
  sub_25616F77C(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25616E7A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25616E7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2561778B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611CFE0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611D24C(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_256176788();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  sub_25616F880();
  sub_25616EA64(v1, &v9[*(int *)(v13 + 44)]);
  uint64_t v14 = sub_2561778E8();
  sub_256117B64(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v14, v15);
  sub_25616F918((uint64_t)v9, (uint64_t (*)(void))sub_25611CFE0);
  sub_256177898();
  char v16 = sub_256176D88();
  sub_25616F978(0, &qword_269F47C30, sub_25611D24C, sub_25616F9EC);
  uint64_t v18 = a1 + *(int *)(v17 + 36);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  sub_25616F9EC(0);
  *(unsigned char *)(v18 + *(int *)(v19 + 36)) = v16;
  sub_2561702D4((uint64_t)v12, a1, (uint64_t (*)(void))sub_25611D24C);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_25616F918((uint64_t)v12, (uint64_t (*)(void))sub_25611D24C);
}

uint64_t sub_25616EA64@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v70 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (uint64_t)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for StateOfMindTimeline.Styles(0) - 8;
  uint64_t v4 = MEMORY[0x270FA5388](v68);
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v66 - v7;
  uint64_t v71 = _s14ShowMoreButtonVMa();
  uint64_t v9 = *(void *)(v71 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v71);
  sub_25605B2A0();
  uint64_t v67 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611D1C0();
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611D198(0);
  uint64_t v74 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v75 = (uint64_t)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25616F7E0(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v80 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v72 = (char *)&v66 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v77 = (uint64_t)&v66 - v26;
  uint64_t v79 = sub_2561777B8();
  uint64_t v78 = *(void *)(v79 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v79);
  uint64_t v76 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v73 = (char *)&v66 - v29;
  sub_2561777A8();
  sub_2561702D4(a1, (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s14ShowMoreButtonVMa);
  unint64_t v30 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v31 = swift_allocObject();
  sub_25617026C((uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30, (uint64_t (*)(void))_s14ShowMoreButtonVMa);
  uint64_t v82 = a1;
  sub_2561775C8();
  sub_256119CA0((uint64_t)v8);
  sub_25616F918((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_2561762E8();
  uint64_t v32 = v67;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v14, v67);
  uint64_t v33 = &v18[*(int *)(v16 + 44)];
  long long v34 = v89;
  *((_OWORD *)v33 + 4) = v88;
  *((_OWORD *)v33 + 5) = v34;
  *((_OWORD *)v33 + 6) = v90;
  long long v35 = v85;
  *(_OWORD *)uint64_t v33 = v84;
  *((_OWORD *)v33 + 1) = v35;
  long long v36 = v87;
  *((_OWORD *)v33 + 2) = v86;
  *((_OWORD *)v33 + 3) = v36;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v32);
  char v37 = sub_256176D78();
  sub_256119CA0((uint64_t)v6);
  uint64_t v38 = v69;
  sub_2561702D4((uint64_t)&v6[*(int *)(v68 + 56)], v69, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_25616F918((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  if (*(unsigned char *)(v38 + *(int *)(v70 + 24)) == 1 && (sub_256176138() & 1) == 0) {
    sub_256117BD4();
  }
  sub_25616F918(v38, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_256175D48();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v47 = v75;
  sub_2561702D4((uint64_t)v18, v75, (uint64_t (*)(void))sub_25611D1C0);
  uint64_t v48 = v47 + *(int *)(v74 + 36);
  *(unsigned char *)uint64_t v48 = v37;
  *(void *)(v48 + 8) = v40;
  *(void *)(v48 + 16) = v42;
  *(void *)(v48 + 24) = v44;
  *(void *)(v48 + 32) = v46;
  *(unsigned char *)(v48 + 40) = 0;
  sub_25616F918((uint64_t)v18, (uint64_t (*)(void))sub_25611D1C0);
  uint64_t v49 = *(void **)(a1 + *(int *)(v71 + 24));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v49 = sub_256095C94(0, v49[2] + 1, 1, v49);
  }
  unint64_t v51 = v49[2];
  unint64_t v50 = v49[3];
  if (v51 >= v50 >> 1) {
    uint64_t v49 = sub_256095C94((void *)(v50 > 1), v51 + 1, 1, v49);
  }
  v49[2] = v51 + 1;
  uint64_t v52 = &v49[2 * v51];
  v52[4] = 0x7474754265726F4DLL;
  v52[5] = 0xEA00000000006E6FLL;
  uint64_t v83 = &unk_2704B5358;
  uint64_t v53 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v53);
  sub_255FCD9E0();
  sub_256170168((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_2561701EC(&qword_269F47C40, sub_25611D198, (void (*)(void))sub_2561701B0);
  uint64_t v54 = (uint64_t)v72;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25616F918(v47, (uint64_t (*)(void))sub_25611D198);
  uint64_t v55 = v77;
  sub_25617026C(v54, v77, (uint64_t (*)(void))sub_25616F7E0);
  uint64_t v56 = v78;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v58 = v76;
  uint64_t v59 = v73;
  uint64_t v60 = v79;
  v57(v76, v73, v79);
  uint64_t v61 = v80;
  sub_2561702D4(v55, v80, (uint64_t (*)(void))sub_25616F7E0);
  uint64_t v62 = v81;
  v57(v81, v58, v60);
  sub_25611D0A8(0);
  sub_2561702D4(v61, (uint64_t)&v62[*(int *)(v63 + 48)], (uint64_t (*)(void))sub_25616F7E0);
  sub_25616F918(v55, (uint64_t (*)(void))sub_25616F7E0);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v56 + 8);
  v64(v59, v60);
  sub_25616F918(v61, (uint64_t (*)(void))sub_25616F7E0);
  return ((uint64_t (*)(char *, uint64_t))v64)(v58, v60);
}

uint64_t sub_25616F418@<X0>(uint64_t *a1@<X8>)
{
  long long v35 = a1;
  uint64_t v1 = sub_256176EE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v8 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_2561755B8();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();

  uint64_t v36 = v9;
  uint64_t v37 = v11;
  sub_255F5CE90();
  uint64_t v12 = sub_256177028();
  uint64_t v14 = v13;
  uint64_t v32 = v15;
  char v17 = v16 & 1;
  sub_256119CA0((uint64_t)v7);
  long long v34 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_25616F918((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176DF8();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F1A680], v1);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v18 = sub_256176FD8();
  uint64_t v33 = v19;
  LOBYTE(v8) = v20 & 1;
  sub_255F67B2C(v12, v14, v17);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256119CA0((uint64_t)v7);
  sub_25616F918((uint64_t)v7, v34);
  id v21 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v36 = MEMORY[0x25A29FE80](v21);
  uint64_t v22 = v33;
  uint64_t v23 = sub_256176FA8();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  sub_255F67B2C(v18, v22, (char)v8);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v31 = v35;
  *long long v35 = v23;
  v31[1] = v25;
  *((unsigned char *)v31 + 16) = v27 & 1;
  v31[3] = v29;
  return result;
}

void sub_25616F77C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_25616F7E0(uint64_t a1)
{
}

void sub_25616F814(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_25616F880()
{
  if (!qword_269F47C28)
  {
    sub_25616F77C(255, &qword_269F47188, (uint64_t (*)(uint64_t))sub_25611D0A8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47C28);
    }
  }
}

uint64_t sub_25616F918(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25616F978(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_25616F9EC(uint64_t a1)
{
}

uint64_t sub_25616FA28()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(_s14ShowMoreButtonVMa() - 8) + 80);
  uint64_t v2 = (v1 + 16) & ~v1;
  uint64_t v3 = v0 + v2;
  sub_25616F77C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    unint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v0 + v2, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = v3 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    uint64_t v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = v3 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    uint64_t v40 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v41 = v14;
    v40(v13);
    uint64_t v15 = v3 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = v3 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = v3 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = v3 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = v3 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v42 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v40)(v23 + *(int *)(v24 + 28), v41);
    uint64_t v25 = v12;
    uint64_t v26 = v3 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = v3 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = v3 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = v3 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = v3 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = v3 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2561700F4()
{
  uint64_t v1 = _s14ShowMoreButtonVMa();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 20)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

uint64_t sub_256170160@<X0>(uint64_t *a1@<X8>)
{
  return sub_25616F418(a1);
}

uint64_t sub_256170168(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2561701B0()
{
  return sub_2561701EC(&qword_269F47C48, (void (*)(uint64_t))sub_25611D1C0, (void (*)(void))sub_255F738A0);
}

uint64_t sub_2561701EC(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25617026C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2561702D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_256170340()
{
  unint64_t result = qword_269F47C50;
  if (!qword_269F47C50)
  {
    sub_25616F978(255, &qword_269F47C30, sub_25611D24C, sub_25616F9EC);
    sub_2561701EC(&qword_269F47C58, sub_25611D24C, (void (*)(void))sub_256170450);
    sub_256170168(&qword_269F47C68, sub_25616F9EC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47C50);
  }
  return result;
}

uint64_t sub_256170450()
{
  return sub_256170168(&qword_269F47C60, (void (*)(uint64_t))sub_25611CFE0);
}

__n64 sub_256170484(float a1, float32x4_t a2)
{
  __float2 v2 = __sincospif_stret(a1 * 0.0055556);
  int32x4_t v3 = (int32x4_t)vmulq_f32(a2, a2);
  v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
  float32x2_t v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
  float32x2_t v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
  float32x4_t v6 = vmulq_n_f32(a2, vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).f32[0]);
  float v7 = (float)(1.0 - v2.__cosval) * v6.f32[0];
  float v8 = vmuls_lane_f32(v7, *(float32x2_t *)v6.f32, 1);
  result.n64_f32[0] = v2.__cosval + (float)(v7 * v6.f32[0]);
  result.n64_f32[1] = vmuls_lane_f32(v2.__sinval, v6, 2) + v8;
  return result;
}

float sub_2561705B8(float a1, float a2)
{
  return (float)(1.0 / tanf((float)(a1 * 0.017453) * 0.5)) / a2;
}

__n64 sub_256170648(double a1, int32x4_t a2, int32x4_t a3)
{
  float32x4_t v3 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a2, a2), (int8x16_t)a2, 0xCuLL);
  float32x4_t v4 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a3, a3), (int8x16_t)a3, 0xCuLL), vnegq_f32((float32x4_t)a2)), (float32x4_t)a3, v3);
  float32x4_t v5 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v4, (int32x4_t)v4), (int8x16_t)v4, 0xCuLL);
  int32x4_t v6 = (int32x4_t)vmulq_f32(v4, v4);
  v6.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), *(float32x2_t *)v6.i8)).u32[0];
  float32x2_t v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
  float32x2_t v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
  float32x4_t v9 = vmulq_n_f32(v5, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]);
  float32x4_t v10 = vmlaq_f32(vmulq_f32(v3, vnegq_f32(v9)), (float32x4_t)a2, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v9, (int32x4_t)v9), (int8x16_t)v9, 0xCuLL));
  float32x4_t v11 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v10, (int32x4_t)v10), (int8x16_t)v10, 0xCuLL);
  int32x4_t v12 = (int32x4_t)vmulq_f32(v10, v10);
  v12.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v12, 2), *(float32x2_t *)v12.i8)).u32[0];
  float32x2_t v13 = vrsqrte_f32((float32x2_t)v12.u32[0]);
  float32x2_t v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v13, v13)));
  result.n64_u32[0] = v9.i32[0];
  result.n64_u32[1] = vmulq_n_f32(v11, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v14, v14))).f32[0]).u32[0];
  return result;
}

void sub_2561707D0()
{
  uint64_t v1 = (CGFloat *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds];
  CGFloat v2 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds];
  CGFloat v3 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds + 8];
  CGFloat v4 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds + 16];
  CGFloat v5 = *(double *)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_lastBounds + 24];
  objc_msgSend(v0, sel_bounds);
  v44.origin.x = v6;
  v44.origin.y = v7;
  v44.size.width = v8;
  v44.size.height = v9;
  v39.origin.x = v2;
  v39.origin.y = v3;
  v39.size.width = v4;
  v39.size.height = v5;
  if (!CGRectEqualToRect(v39, v44))
  {
    float32x4_t v10 = *(void **)&v0[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer];
    if (v10)
    {
      CGFloat v11 = *v1;
      CGFloat v12 = v1[1];
      CGFloat rect = *v1;
      CGFloat v14 = v1[2];
      CGFloat v13 = v1[3];
      id rect_16 = v10;
      objc_msgSend(v0, sel_bounds);
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      CGFloat v20 = v19;
      CGFloat v22 = v21;
      v40.origin.x = v11;
      v40.origin.y = v12;
      v40.size.width = v14;
      v40.size.height = v13;
      double Width = CGRectGetWidth(v40);
      v41.origin.x = v16;
      v41.origin.y = v18;
      v41.size.width = v20;
      v41.size.height = v22;
      double rect_8 = vabdd_f64(Width, CGRectGetWidth(v41));
      v42.origin.x = rect;
      v42.origin.y = v12;
      v42.size.width = v14;
      v42.size.height = v13;
      double Height = CGRectGetHeight(v42);
      v43.origin.x = v16;
      v43.origin.y = v18;
      v43.size.width = v20;
      v43.size.height = v22;
      double v25 = vabdd_f64(Height, CGRectGetHeight(v43));
      if (rect_8 <= 40.0 && v25 <= 40.0)
      {
      }
      else
      {
        objc_msgSend(v0, sel_bounds, v25, 40.0, rect_8);
        sub_256128418();
        objc_msgSend(v0, sel_bounds);
        uint64_t v28 = v27;
        uint64_t v30 = v29;
        uint64_t v32 = v31;
        uint64_t v34 = v33;

        *(void *)uint64_t v1 = v28;
        *((void *)v1 + 1) = v30;
        *((void *)v1 + 2) = v32;
        *((void *)v1 + 3) = v34;
      }
    }
  }
}

uint64_t type metadata accessor for ShapeContainer()
{
  return self;
}

id sub_256170B24(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtCV14MentalHealthUI12EmotionShape11Coordinator_parent;
  objc_msgSend(a1, sel_velocityInView_, *(void *)(v1 + OBJC_IVAR____TtCV14MentalHealthUI12EmotionShape11Coordinator_parent));
  uint64_t v7 = *(void *)(v1 + v4);
  if (v7)
  {
    CGFloat v8 = *(void **)(v7 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
    if (v8)
    {
      float v9 = v5;
      float v10 = v6;
      id v11 = v8;
      sub_2561243D4(v9, v10);
    }
  }
  id result = objc_msgSend(a1, sel_state);
  uint64_t v13 = *(void *)(v2 + v4);
  if ((unint64_t)result > 2)
  {
    if (v13)
    {
      uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
      if (v14)
      {
        char v15 = 0;
        goto LABEL_11;
      }
    }
  }
  else if (v13)
  {
    uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
    if (v14)
    {
      char v15 = 1;
LABEL_11:
      *(unsigned char *)(v14 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_isDragging) = v15;
    }
  }
  return result;
}

id sub_256170CBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmotionShape.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EmotionShape.Coordinator()
{
  return self;
}

uint64_t sub_256170D24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_256175D98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  double v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  CGFloat v8 = (char *)&v50 - v7;
  uint64_t v55 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShapeContainer()), sel_initWithFrame_, 0.0, 0.0, 1.0, 1.0);
  id v9 = objc_msgSend(v55, sel_layer);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (!v10) {
    goto LABEL_14;
  }
  id v11 = (void *)v10;
  id v12 = MTLCreateSystemDefaultDevice();
  objc_msgSend(v11, sel_setDevice_, v12);
  objc_msgSend(v11, sel_setOpaque_, 0);
  objc_msgSend(v11, sel_setFramebufferOnly_, 0);
  objc_msgSend(v11, sel_setPixelFormat_, 80);
  objc_msgSend(v11, sel_setPresentsWithTransaction_, 1);
  sub_25611A114((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F184F8], v2);
  char v13 = sub_256175D88();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  uint64_t v53 = v8;
  v14(v8, v2);
  id v15 = v9;
  id v54 = v12;
  if ((v13 & 1) == 0)
  {
    GenericRGB = CGColorCreateGenericRGB(0.858823529, 0.882352941, 0.88627451, 1.0);
    goto LABEL_10;
  }
  GenericRGB = CGColorCreateGenericRGB(0.741176471, 0.82745098, 0.839215686, 1.0);
  if (CGColorGetNumberOfComponents(GenericRGB) != 4) {
    goto LABEL_10;
  }
  uint64_t v17 = sub_256178198();
  if (!v17) {
    goto LABEL_10;
  }
  unint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    if (v18 != 1)
    {
      if (v18 >= 3)
      {
        CGFloat v19 = *(double *)(v17 + 32) * 0.5;
        CGFloat v20 = *(double *)(v17 + 40) * 0.5;
        double v21 = *(double *)(v17 + 48);
        swift_bridgeObjectRelease();
        CGColorRef v22 = CGColorCreateGenericRGB(v19, v20, v21 * 0.5, 1.0);

        GenericRGB = v22;
LABEL_10:
        objc_msgSend(v11, sel_setBackgroundColor_, GenericRGB);

        uint64_t v23 = (int *)type metadata accessor for EmotionShape();
        double v24 = *(double *)(v1 + v23[7]);
        uint64_t v25 = v1 + v23[9];
        uint64_t v26 = *(void *)(v25 + 8);
        int v27 = *(_DWORD *)(v25 + 16);
        char v28 = *(unsigned char *)(v1 + v23[6]);
        v59[0] = *(void *)v25;
        v59[1] = v26;
        int v60 = v27;
        sub_256173034(0, &qword_269F47D50);
        uint64_t v51 = v29;
        id v52 = v15;
        sub_256177748();
        uint64_t v31 = v56;
        uint64_t v30 = v57;
        float v32 = *(float *)&v58;
        uint64_t v33 = (uint64_t)v53;
        sub_25611A114((uint64_t)v53);
        uint64_t v34 = v1 + v23[5];
        uint64_t v35 = *(void *)v34;
        char v36 = *(unsigned char *)(v34 + 8);
        sub_2560ED258(*(void *)v34, v36);
        char v37 = sub_25611C7D8(v35, v36);
        sub_256082548(v35, v36);
        id v38 = objc_allocWithZone((Class)type metadata accessor for ChamomileRenderer());
        CGRect v39 = (void *)sub_256127F7C(v11, 1, v28, v31, v30, v33, v37 & 1, v24, v32);
        swift_release();
        swift_release();
        CGRect v40 = v55;
        CGRect v41 = *(void **)&v55[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer];
        *(void *)&v55[OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer] = v39;
        CGRect v42 = v39;

        CGRect v43 = (uint64_t *)(v1 + v23[10]);
        uint64_t v44 = v43[1];
        uint64_t v45 = v43[2];
        uint64_t v56 = *v43;
        uint64_t v57 = v44;
        uint64_t v58 = v45;
        sub_25617307C(0, &qword_269F47D58, (uint64_t (*)(uint64_t))sub_2560EDD8C, MEMORY[0x263F1B750]);
        MEMORY[0x25A2A01A0](v59);
        *(void *)&v42[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset] = v59[0];
        uint64_t v46 = v1 + v23[11];
        uint64_t v47 = *(void *)(v46 + 8);
        int v48 = *(_DWORD *)(v46 + 16);
        uint64_t v56 = *(void *)v46;
        uint64_t v57 = v47;
        LODWORD(v58) = v48;
        MEMORY[0x25A2A01A0](v59, v51);
        swift_unknownObjectRelease();

        *(_DWORD *)&v42[OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale] = v59[0];
        return (uint64_t)v40;
      }
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:

  uint64_t result = sub_256178658();
  __break(1u);
  return result;
}

void *sub_256171280(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for EmotionShape();
  MEMORY[0x270FA5388](v4);
  uint64_t v68 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_256175D98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v65 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256172D8C();
  uint64_t v66 = v9;
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25617307C(0, &qword_269F44C10, MEMORY[0x263F18520], MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v63 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v62 - v16;
  MEMORY[0x270FA5388](v15);
  CGFloat v19 = (char *)&v62 - v18;
  uint64_t v70 = v4;
  uint64_t v67 = a1;
  if (a1)
  {
    uint64_t v20 = v1 + v4[8];
    uint64_t v21 = *(void *)(v20 + 8);
    int v22 = *(_DWORD *)(v20 + 16);
    uint64_t v72 = *(void *)v20;
    uint64_t v73 = v21;
    LODWORD(v74) = v22;
    sub_256173034(0, &qword_269F47D50);
    uint64_t v24 = v23;
    MEMORY[0x25A2A01A0](v71);
    *(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_valence) = v71[0];
    uint64_t v25 = (uint64_t *)(v1 + v4[10]);
    uint64_t v26 = v25[1];
    uint64_t v27 = v25[2];
    uint64_t v72 = *v25;
    uint64_t v73 = v26;
    uint64_t v74 = v27;
    sub_25617307C(0, &qword_269F47D58, (uint64_t (*)(uint64_t))sub_2560EDD8C, MEMORY[0x263F1B750]);
    MEMORY[0x25A2A01A0](v71);
    *(void *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_offset) = v71[0];
    uint64_t v28 = v1 + v4[11];
    uint64_t v29 = *(void *)(v28 + 8);
    int v30 = *(_DWORD *)(v28 + 16);
    uint64_t v72 = *(void *)v28;
    uint64_t v73 = v29;
    LODWORD(v74) = v30;
    MEMORY[0x25A2A01A0](v71, v24);
    *(_DWORD *)(a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_scale) = v71[0];
    uint64_t v31 = a1 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v19, v31, v6);
    float v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v32(v19, 0, 1, v6);
  }
  else
  {
    float v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v32((char *)&v62 - v18, 1, 1, v6);
  }
  uint64_t v69 = v2;
  sub_25611A114((uint64_t)v17);
  v32(v17, 0, 1, v6);
  uint64_t v33 = (uint64_t)&v11[*(int *)(v66 + 48)];
  sub_256172E20((uint64_t)v19, (uint64_t)v11);
  sub_256172E20((uint64_t)v17, v33);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v35 = v34(v11, 1, v6);
  uint64_t v64 = v7;
  if (v35 == 1)
  {
    char v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_256172EB4((uint64_t)v17, &qword_269F44C10, MEMORY[0x263F8D8F0]);
    sub_256172EB4((uint64_t)v19, &qword_269F44C10, v36);
    if (v34((char *)v33, 1, v6) == 1)
    {
      sub_256172EB4((uint64_t)v11, &qword_269F44C10, MEMORY[0x263F8D8F0]);
      uint64_t v38 = v68;
      uint64_t v37 = v69;
      sub_256172F88(v69, v68);
      uint64_t v39 = v67;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  uint64_t v40 = v63;
  sub_256172E20((uint64_t)v11, v63);
  if (v34((char *)v33, 1, v6) == 1)
  {
    CGRect v41 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_256172EB4((uint64_t)v17, &qword_269F44C10, MEMORY[0x263F8D8F0]);
    sub_256172EB4((uint64_t)v19, &qword_269F44C10, v41);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v40, v6);
LABEL_9:
    sub_256172F28((uint64_t)v11, (uint64_t (*)(void))sub_256172D8C);
    uint64_t v38 = v68;
    uint64_t v37 = v69;
    sub_256172F88(v69, v68);
    uint64_t v39 = v67;
LABEL_13:
    sub_256172F28(v38, (uint64_t (*)(void))type metadata accessor for EmotionShape);
    goto LABEL_16;
  }
  uint64_t v42 = v65;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v65, v33, v6);
  sub_256172FEC(&qword_269F47D48, MEMORY[0x263F18520]);
  char v43 = sub_256177E98();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v44(v42, v6);
  uint64_t v45 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_256172EB4((uint64_t)v17, &qword_269F44C10, MEMORY[0x263F8D8F0]);
  sub_256172EB4((uint64_t)v19, &qword_269F44C10, v45);
  v44(v40, v6);
  sub_256172EB4((uint64_t)v11, &qword_269F44C10, v45);
  uint64_t v38 = v68;
  uint64_t v37 = v69;
  sub_256172F88(v69, v68);
  uint64_t v39 = v67;
  if ((v43 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_11:
  if (v39) {
    int v46 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion);
  }
  else {
    int v46 = 2;
  }
  uint64_t v47 = v38 + v70[5];
  uint64_t v48 = *(void *)v47;
  char v49 = *(unsigned char *)(v47 + 8);
  sub_2560ED258(*(void *)v47, v49);
  int v50 = sub_25611C7D8(v48, v49);
  sub_256082548(v48, v49);
  sub_256172F28(v38, (uint64_t (*)(void))type metadata accessor for EmotionShape);
  if (v46 == 2)
  {
LABEL_16:
    uint64_t v51 = v70;
    if (!v39) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  BOOL v61 = v46 != 0;
  uint64_t v51 = v70;
  if (v39 && ((v50 ^ v61) & 1) != 0)
  {
LABEL_17:
    uint64_t v52 = v65;
    sub_25611A114(v65);
    uint64_t v53 = v39 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_colorScheme;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 40))(v53, v52, v6);
    swift_endAccess();
    uint64_t v54 = v37 + v51[5];
    uint64_t v55 = *(void *)v54;
    LOBYTE(v52) = *(unsigned char *)(v54 + 8);
    sub_2560ED258(*(void *)v54, v52);
    char v56 = sub_25611C7D8(v55, v52);
    sub_256082548(v55, v52);
    *(unsigned char *)(v39 + OBJC_IVAR____TtC14MentalHealthUI17ChamomileRenderer_reduceMotion) = v56 & 1;
    sub_2561223BC();
  }
LABEL_18:
  uint64_t v57 = v37 + v51[12];
  uint64_t v58 = *(void *)v57;
  uint64_t v59 = *(void *)(v57 + 8);
  LOBYTE(v57) = *(unsigned char *)(v57 + 16);
  uint64_t v72 = v58;
  uint64_t v73 = v59;
  LOBYTE(v74) = v57;
  sub_256173034(0, (unint64_t *)&qword_269F47D40);
  uint64_t result = MEMORY[0x25A2A01A0](&v75);
  if (v39)
  {
    uint64_t result = *(void **)(v39 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
    if (result) {
      return objc_msgSend(result, sel_setPaused_);
    }
  }
  return result;
}

void sub_256171ADC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC14MentalHealthUI14ShapeContainer_renderer);
  id v2 = v1;
  sub_256171280((uint64_t)v1);
}

id sub_256171B38@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EmotionShape.Coordinator()), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_256171B74()
{
  return sub_2561767F8();
}

uint64_t sub_256171BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256172FEC(&qword_269F47D28, (void (*)(uint64_t))type metadata accessor for EmotionShape);

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_256171C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256172FEC(&qword_269F47D28, (void (*)(uint64_t))type metadata accessor for EmotionShape);

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_256171CE0()
{
}

unint64_t sub_256171D38()
{
  unint64_t result = qword_269F47CF8;
  if (!qword_269F47CF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F47CF8);
  }
  return result;
}

void *sub_256171D78(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_25617307C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)v4 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_2560ED258(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)v4 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = (char *)v4 + v15;
    uint64_t v18 = (char *)a2 + v15;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    *((_DWORD *)v17 + 4) = *((_DWORD *)v18 + 4);
    uint64_t v20 = (char *)v4 + v16;
    uint64_t v21 = (char *)a2 + v16;
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    *((_DWORD *)v20 + 4) = *((_DWORD *)v21 + 4);
    uint64_t v23 = a3[10];
    uint64_t v24 = a3[11];
    uint64_t v25 = (void *)((char *)v4 + v23);
    uint64_t v26 = (void *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v25[2] = v26[2];
    uint64_t v28 = (char *)v4 + v24;
    uint64_t v29 = (char *)a2 + v24;
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    *((_DWORD *)v28 + 4) = *((_DWORD *)v29 + 4);
    uint64_t v31 = a3[12];
    float v32 = (char *)v4 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)float v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    v32[16] = v33[16];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_256171FD4(uint64_t a1, uint64_t a2)
{
  sub_25617307C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_256082548(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_256172128(void *a1, void *a2, int *a3)
{
  sub_25617307C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_2560ED258(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  *((_DWORD *)v15 + 4) = *((_DWORD *)v16 + 4);
  uint64_t v18 = (char *)a1 + v14;
  uint64_t v19 = (char *)a2 + v14;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = (void *)((char *)a2 + v21);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  void v23[2] = v24[2];
  uint64_t v26 = (char *)a1 + v22;
  uint64_t v27 = (char *)a2 + v22;
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  uint64_t v29 = a3[12];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  v30[16] = v31[16];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_256172338(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256172EB4((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F185C8]);
    sub_25617307C(0, &qword_269F47D00, MEMORY[0x263F18520], v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)v10;
  char v12 = v10[8];
  sub_2560ED258(*(void *)v10, v12);
  uint64_t v13 = *(void *)v9;
  char v14 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = v12;
  sub_256082548(v13, v14);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  swift_retain();
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_retain();
  swift_release();
  *((_DWORD *)v19 + 4) = *((_DWORD *)v20 + 4);
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_retain();
  swift_release();
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_retain();
  swift_release();
  *((void *)v22 + 2) = *((void *)v23 + 2);
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  swift_retain();
  swift_release();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_retain();
  swift_release();
  *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
  uint64_t v27 = a3[12];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  swift_retain();
  swift_release();
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  v28[16] = v29[16];
  return a1;
}

char *sub_2561725EC(char *a1, char *a2, int *a3)
{
  sub_25617307C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  char v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  a1[v10] = a2[v10];
  uint64_t v13 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  char v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_OWORD *)char v14 = *(_OWORD *)v15;
  *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
  uint64_t v20 = &a1[v17];
  uint64_t v21 = &a2[v17];
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((void *)v20 + 2) = *((void *)v21 + 2);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
  uint64_t v26 = &a1[v23];
  uint64_t v27 = &a2[v23];
  long long v28 = *(_OWORD *)v27;
  v26[16] = v27[16];
  *(_OWORD *)uint64_t v26 = v28;
  return a1;
}

char *sub_256172790(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256172EB4((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F185C8]);
    sub_25617307C(0, &qword_269F47D00, MEMORY[0x263F18520], v6);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  char v12 = &a2[v10];
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  uint64_t v14 = *(void *)v11;
  char v15 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  sub_256082548(v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_release();
  *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
  uint64_t v20 = a3[9];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_release();
  *((_DWORD *)v21 + 4) = *((_DWORD *)v22 + 4);
  uint64_t v23 = a3[10];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  swift_release();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_release();
  *((void *)v24 + 2) = *((void *)v25 + 2);
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v26];
  long long v28 = &a2[v26];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  swift_release();
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_release();
  *((_DWORD *)v27 + 4) = *((_DWORD *)v28 + 4);
  uint64_t v29 = a3[12];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *(void *)&a1[v29] = *(void *)v31;
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_release();
  v30[16] = v31[16];
  return a1;
}

uint64_t sub_2561729EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256172A00);
}

uint64_t sub_256172A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25617307C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_256172AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256172B08);
}

void sub_256172B08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25617307C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for EmotionShape()
{
  uint64_t result = qword_269F47D08;
  if (!qword_269F47D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256172C44()
{
  sub_25617307C(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_256172D44()
{
  return sub_256172FEC(&qword_269F47D20, (void (*)(uint64_t))type metadata accessor for EmotionShape);
}

void sub_256172D8C()
{
  if (!qword_269F47D30)
  {
    sub_25617307C(255, &qword_269F44C10, MEMORY[0x263F18520], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F47D30);
    }
  }
}

uint64_t sub_256172E20(uint64_t a1, uint64_t a2)
{
  sub_25617307C(0, &qword_269F44C10, MEMORY[0x263F18520], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256172EB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_25617307C(0, a2, MEMORY[0x263F18520], a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_256172F28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256172F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmotionShape();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256172FEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256173034(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_256177778();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_25617307C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2561730E0(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_2561788E8();
    sub_255F74D60(a1);
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_256178928();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xD000000000000017;
        unint64_t v10 = 0x80000002561A9BA0;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0x696472616F626E4FLL;
            unint64_t v10 = 0xEA0000000000676ELL;
            break;
          case 2:
            unint64_t v9 = 0xD000000000000013;
            unint64_t v10 = 0x80000002561A9BD0;
            break;
          case 3:
            uint64_t v11 = "Reflective Interval";
            goto LABEL_14;
          case 4:
            unint64_t v10 = 0xE600000000000000;
            unint64_t v9 = 0x736C6562614CLL;
            break;
          case 5:
            unint64_t v9 = 0x746169636F737341;
            unint64_t v10 = 0xEC000000736E6F69;
            break;
          case 6:
            unint64_t v9 = 0x616D7269666E6F43;
            unint64_t v10 = 0xEC0000006E6F6974;
            break;
          case 7:
            unint64_t v9 = 0x6F4C207972746E45;
            unint64_t v10 = 0xEC00000064656767;
            break;
          case 8:
            unint64_t v10 = 0xEC00000064656C69;
            unint64_t v9 = 0x6146207972746E45;
            break;
          case 9:
            uint64_t v11 = "n";
LABEL_14:
            unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
            unint64_t v9 = 0xD000000000000010;
            break;
          default:
            break;
        }
        unint64_t v12 = 0xD000000000000017;
        unint64_t v13 = 0x80000002561A9BA0;
        switch(v8)
        {
          case 1:
            unint64_t v13 = 0xEA0000000000676ELL;
            if (v9 == 0x696472616F626E4FLL) {
              goto LABEL_30;
            }
            goto LABEL_31;
          case 2:
            unint64_t v13 = 0x80000002561A9BD0;
            if (v9 != 0xD000000000000013) {
              goto LABEL_31;
            }
            goto LABEL_30;
          case 3:
            uint64_t v14 = "Reflective Interval";
            goto LABEL_35;
          case 4:
            unint64_t v13 = 0xE600000000000000;
            if (v9 != 0x736C6562614CLL) {
              goto LABEL_31;
            }
            goto LABEL_30;
          case 5:
            uint64_t v15 = 0x746169636F737341;
            uint64_t v16 = 1936617321;
            goto LABEL_26;
          case 6:
            uint64_t v15 = 0x616D7269666E6F43;
            uint64_t v16 = 1852795252;
            goto LABEL_26;
          case 7:
            uint64_t v15 = 0x6F4C207972746E45;
            uint64_t v16 = 1684367207;
LABEL_26:
            unint64_t v13 = v16 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            if (v9 != v15) {
              goto LABEL_31;
            }
            goto LABEL_30;
          case 8:
            unint64_t v13 = 0xEC00000064656C69;
            unint64_t v12 = 0x6146207972746E45;
            goto LABEL_29;
          case 9:
            uint64_t v14 = "n";
LABEL_35:
            unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
            if (v9 != 0xD000000000000010) {
              goto LABEL_31;
            }
            goto LABEL_30;
          default:
LABEL_29:
            if (v9 != v12) {
              goto LABEL_31;
            }
LABEL_30:
            if (v10 == v13)
            {
              swift_bridgeObjectRelease_n();
              char v17 = 1;
              return v17 & 1;
            }
LABEL_31:
            char v17 = sub_256178828();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              return v17 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v17 & 1;
            }
            break;
        }
      }
    }
  }
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_2561734D8(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_256178928();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0x80000002561A9E60;
        unint64_t v10 = 0xD000000000000010;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x6574614720656741;
            unint64_t v9 = 0xEF6F72746E492064;
            break;
          case 2:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x6F72746E49;
            break;
          case 3:
            unint64_t v10 = 0x6E6F697473657551;
            unint64_t v9 = 0xE900000000000073;
            break;
          case 4:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x746C75736552;
            break;
          default:
            break;
        }
        unint64_t v11 = 0x80000002561A9E60;
        unint64_t v12 = 0xD000000000000010;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xEF6F72746E492064;
            if (v10 == 0x6574614720656741) {
              goto LABEL_16;
            }
            goto LABEL_17;
          case 2:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x6F72746E49) {
              goto LABEL_17;
            }
            goto LABEL_16;
          case 3:
            unint64_t v12 = 0x6E6F697473657551;
            unint64_t v11 = 0xE900000000000073;
            goto LABEL_15;
          case 4:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x746C75736552) {
              goto LABEL_17;
            }
            goto LABEL_16;
          default:
LABEL_15:
            if (v10 != v12) {
              goto LABEL_17;
            }
LABEL_16:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_17:
            char v13 = sub_256178828();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

void sub_25617381C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_256173894()
{
  uint64_t v1 = *(void **)(v0 + 128);
  if (v1)
  {
    id v2 = *(id *)(v0 + 128);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, *MEMORY[0x263F09938], *(void *)(v0 + 112));
    uint64_t v4 = *(void **)(v0 + 128);
    *(void *)(v0 + 128) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.__allocating_init(healthStore:entryPoint:provenance:)(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  uint64_t v6 = swift_allocObject();
  LOBYTE(a2) = *a2;
  LOBYTE(a3) = *a3;
  swift_defaultActor_initialize();
  *(unsigned char *)(v6 + 120) = 2;
  *(unsigned char *)(v6 + 123) = 3;
  uint64_t v7 = MEMORY[0x263F8EE88];
  *(void *)(v6 + 128) = 0;
  *(void *)(v6 + 136) = v7;
  *(void *)(v6 + 112) = a1;
  *(unsigned char *)(v6 + 121) = (_BYTE)a2;
  *(unsigned char *)(v6 + 122) = (_BYTE)a3;
  return v6;
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.init(healthStore:entryPoint:provenance:)(uint64_t a1, char *a2, char *a3)
{
  char v5 = *a2;
  char v6 = *a3;
  swift_defaultActor_initialize();
  *(unsigned char *)(v3 + 120) = 2;
  *(unsigned char *)(v3 + 123) = 3;
  uint64_t v7 = MEMORY[0x263F8EE88];
  *(void *)(v3 + 128) = 0;
  *(void *)(v3 + 136) = v7;
  *(void *)(v3 + 112) = a1;
  *(unsigned char *)(v3 + 121) = v5;
  *(unsigned char *)(v3 + 122) = v6;
  return v3;
}

unsigned char *sub_2561739F8(unsigned char *result)
{
  *(unsigned char *)(v1 + 123) = *result;
  return result;
}

uint64_t sub_256173A04(unsigned char *a1, unsigned char *a2)
{
  *(void *)(v3 + 64) = v2;
  *(void *)(v3 + 72) = *v2;
  *(unsigned char *)(v3 + 96) = *a1;
  *(unsigned char *)(v3 + 97) = *a2;
  return MEMORY[0x270FA2498](sub_256173A5C, v2, 0);
}

uint64_t sub_256173A5C()
{
  unint64_t v12 = v0;
  if (*(unsigned char *)(v0[8] + 120) == 2)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[10] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_256173C20;
    return sub_256173EDC();
  }
  else
  {
    unsigned __int8 v3 = *((unsigned char *)v0 + 97);
    uint64_t v4 = v0[9];
    unsigned __int8 v10 = *((unsigned char *)v0 + 96);
    unsigned __int8 v11 = v3;
    char v5 = sub_256174440(&v10, &v11);
    id v6 = sub_256173894();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v4;
    v0[6] = sub_256174B14;
    v0[7] = v7;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_25617381C;
    v0[5] = &block_descriptor_13;
    uint64_t v8 = _Block_copy(v0 + 2);
    swift_release();
    objc_msgSend(v6, sel_submitEvent_completion_, v5, v8);
    _Block_release(v8);

    swift_release();
    unint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_256173C20(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256173D38, v2, 0);
}

uint64_t sub_256173D38()
{
  uint64_t v14 = v0;
  unint64_t v1 = *(void *)(v0 + 88);
  if (v1)
  {
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_256178678();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    char v3 = v2 == 0;
  }
  else
  {
    char v3 = 2;
  }
  *(unsigned char *)(*(void *)(v0 + 64) + 120) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v0 + 97);
  uint64_t v5 = *(void *)(v0 + 72);
  unsigned __int8 v12 = *(unsigned char *)(v0 + 96);
  unsigned __int8 v13 = v4;
  id v6 = sub_256174440(&v12, &v13);
  id v7 = sub_256173894();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  *(void *)(v0 + 48) = sub_256174B14;
  *(void *)(v0 + 56) = v8;
  *(void *)(v0 + 16) = MEMORY[0x263EF8330];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_25617381C;
  *(void *)(v0 + 40) = &block_descriptor_13;
  unint64_t v9 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  objc_msgSend(v7, sel_submitEvent_completion_, v6, v9);
  _Block_release(v9);

  swift_release();
  unsigned __int8 v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_256173EDC()
{
  v1[2] = v0;
  sub_256174D54(0, &qword_269F44950, &qword_269F44958, 0x263F0A6B8, MEMORY[0x263F09010]);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256173FC8, v0, 0);
}

uint64_t sub_256173FC8()
{
  uint64_t v1 = v0[2];
  sub_256174DBC();
  sub_256174D54(0, &qword_269F44968, &qword_269F44958, 0x263F0A6B8, MEMORY[0x263F08FD0]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2561A0040;
  sub_255FB58F8(0, &qword_269F47D80);
  uint64_t v2 = (void *)MEMORY[0x25A2A0E10]((id)*MEMORY[0x263F09F90]);
  sub_255FB58F8(0, &qword_269F44958);
  sub_256177CD8();

  char v3 = (void *)MEMORY[0x25A2A0E10]((id)*MEMORY[0x263F09F98]);
  sub_256177CD8();

  sub_256177CE8();
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2561741F8;
  uint64_t v6 = v0[3];
  return MEMORY[0x270EF3200](v4, v6);
}

uint64_t sub_2561741F8(uint64_t a1)
{
  uint64_t v5 = *v2;
  uint64_t v4 = *v2;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v1)
  {

    id v7 = sub_2561743C0;
  }
  else
  {
    *(void *)(v5 + 56) = a1;
    id v7 = sub_25617433C;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_25617433C()
{
  uint64_t v1 = v0[7];
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_2561743C0()
{
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

unsigned char *sub_256174440(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  char v5 = *(unsigned char *)(v2 + 123);
  char v6 = *(unsigned char *)(v2 + 121);
  char v7 = *(unsigned char *)(v2 + 122);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 136);
  swift_bridgeObjectRetain();
  char v9 = sub_2561734D8(v3, v8);
  swift_bridgeObjectRelease();
  char v10 = *(unsigned char *)(v2 + 120);
  type metadata accessor for MentalHealthAssessmentsEvent();
  unsigned __int8 v11 = (unsigned char *)swift_allocObject();
  v11[16] = v3;
  v11[17] = v4;
  v11[18] = v5;
  v11[19] = v6;
  v11[20] = v7;
  v11[21] = (v9 & 1) == 0;
  v11[22] = v10;
  switch(v4)
  {
    case 1:
      swift_bridgeObjectRelease();
      break;
    default:
      char v12 = sub_256178828();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        swift_beginAccess();
        sub_25614EB6C(&v14, v3);
        swift_endAccess();
      }
      break;
  }
  return v11;
}

uint64_t sub_2561746B8(char a1, void *a2)
{
  v36[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_256175B68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v32 - v9;
  if (a1)
  {
    sub_256175B48();
    unsigned __int8 v11 = sub_256175B58();
    os_log_type_t v12 = sub_2561781F8();
    if (os_log_type_enabled(v11, v12))
    {
      unsigned __int8 v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v36[0] = v14;
      *(_DWORD *)unsigned __int8 v13 = 136446210;
      uint64_t v15 = sub_256178978();
      uint64_t v35 = sub_255FB29A8(v15, v16, v36);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v11, v12, "[%{public}s] Successfully submitted analytics", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v14, -1, -1);
      MEMORY[0x25A2A1E90](v13, -1, -1);
    }

    char v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    uint64_t v18 = v10;
    goto LABEL_9;
  }
  sub_256175B48();
  id v19 = a2;
  id v20 = a2;
  uint64_t v21 = sub_256175B58();
  os_log_type_t v22 = sub_256178218();
  if (!os_log_type_enabled(v21, v22))
  {

    char v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    uint64_t v18 = v8;
LABEL_9:
    uint64_t v29 = v4;
    return v17(v18, v29);
  }
  uint64_t v34 = v4;
  uint64_t v23 = swift_slowAlloc();
  uint64_t v24 = (void *)swift_slowAlloc();
  uint64_t v33 = swift_slowAlloc();
  v36[0] = v33;
  *(_DWORD *)uint64_t v23 = 136446466;
  uint64_t v25 = sub_256178978();
  uint64_t v35 = sub_255FB29A8(v25, v26, v36);
  sub_256178458();
  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 12) = 2112;
  if (a2)
  {
    id v27 = a2;
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v35 = v28;
    sub_256178458();
  }
  else
  {
    uint64_t v35 = 0;
    sub_256178458();
    uint64_t v28 = 0;
  }
  *uint64_t v24 = v28;

  _os_log_impl(&dword_255F58000, v21, v22, "[%{public}s] Failed to submit analytics with error: %@", (uint8_t *)v23, 0x16u);
  sub_256174D54(0, &qword_269F44928, &qword_269F44930, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  MEMORY[0x25A2A1E90](v24, -1, -1);
  uint64_t v30 = v33;
  swift_arrayDestroy();
  MEMORY[0x25A2A1E90](v30, -1, -1);
  MEMORY[0x25A2A1E90](v23, -1, -1);

  char v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v18 = v8;
  uint64_t v29 = v34;
  return v17(v18, v29);
}

uint64_t sub_256174B04()
{
  return swift_deallocObject();
}

uint64_t sub_256174B14(char a1, void *a2)
{
  return sub_2561746B8(a1, a2);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t MentalHealthAssessmentsAnalyticsContextManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256174BC0()
{
  return v0;
}

uint64_t type metadata accessor for MentalHealthAssessmentsAnalyticsContextManager()
{
  return self;
}

uint64_t method lookup function for MentalHealthAssessmentsAnalyticsContextManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MentalHealthAssessmentsAnalyticsContextManager);
}

uint64_t dispatch thunk of MentalHealthAssessmentsAnalyticsContextManager.__allocating_init(healthStore:entryPoint:provenance:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of MentalHealthAssessmentsAnalyticsContextManager.updateAnalyticsContextWithAllowedAssessments(allowedAssessmentType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of MentalHealthAssessmentsAnalyticsContextManager.submitAssessmentAnalyticsEvent(step:action:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 256) + **(int **)(*(void *)v2 + 256));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_255FAF204;
  return v8(a1, a2);
}

void sub_256174D54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_255FB58F8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_256174DBC()
{
  if (!qword_269F44960)
  {
    sub_256174D54(255, &qword_269F44968, &qword_269F44958, 0x263F0A6B8, MEMORY[0x263F08FD0]);
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44960);
    }
  }
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_269F50C58 == -1)
  {
    if (qword_269F50C60) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_269F50C58, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_269F50C60) {
      return _availability_version_check();
    }
  }
  if (qword_269F50C50 == -1)
  {
    BOOL v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_269F50C50, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    BOOL v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_269F50C44 > a3) {
    return 1;
  }
  return dword_269F50C44 >= a3 && dword_269F50C48 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v1 = qword_269F50C60;
  if (qword_269F50C60) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (MEMORY[0x263EF8368])
    {
      uint64_t v1 = MEMORY[0x270FA5398];
      qword_269F50C60 = MEMORY[0x270FA5398];
    }
    if (!v1 || result != 0)
    {
      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        uint64_t v4 = *(unsigned __int8 **)result;
        uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          uint64_t v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            uint64_t v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    unsigned __int8 v11 = (uint64_t (*)(void))result;
                    uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    uint64_t v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        os_log_type_t v12 = (FILE *)result;
                        uint64_t result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          unsigned __int8 v13 = (FILE *)result;
                          id v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = MEMORY[0x25A2A16F0](v13);
                          if (v14 < 0)
                          {
                            unint64_t v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            unint64_t v16 = malloc(v15);
                            if (v16)
                            {
                              unint64_t v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  id v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_269F50C44, &dword_269F50C48);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    id v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  id v19 = v13;
                                }
                                unint64_t v16 = v26;
                              }
                              else
                              {
                                unint64_t v16 = v26;
                                id v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          id v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_256175358()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_256175368()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_256175378()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_256175388()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_256175398()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_2561753A8()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_2561753B8()
{
  return MEMORY[0x270EEE2E8]();
}

uint64_t sub_2561753C8()
{
  return MEMORY[0x270EEE2F0]();
}

uint64_t sub_2561753D8()
{
  return MEMORY[0x270EEE308]();
}

uint64_t sub_2561753E8()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_2561753F8()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_256175408()
{
  return MEMORY[0x270EEE3B8]();
}

uint64_t sub_256175418()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_256175428()
{
  return MEMORY[0x270EEE3E0]();
}

uint64_t sub_256175438()
{
  return MEMORY[0x270EEE3F0]();
}

uint64_t sub_256175448()
{
  return MEMORY[0x270EEE408]();
}

uint64_t sub_256175458()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_256175468()
{
  return MEMORY[0x270EEE4B0]();
}

uint64_t sub_256175478()
{
  return MEMORY[0x270EEE4C0]();
}

uint64_t sub_256175488()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_256175498()
{
  return MEMORY[0x270EEE520]();
}

uint64_t sub_2561754A8()
{
  return MEMORY[0x270EEE558]();
}

uint64_t sub_2561754C8()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_2561754D8()
{
  return MEMORY[0x270EEE738]();
}

uint64_t sub_2561754E8()
{
  return MEMORY[0x270EEE748]();
}

uint64_t sub_2561754F8()
{
  return MEMORY[0x270EEE760]();
}

uint64_t sub_256175508()
{
  return MEMORY[0x270EEE7B8]();
}

uint64_t sub_256175518()
{
  return MEMORY[0x270EEE7C8]();
}

uint64_t sub_256175528()
{
  return MEMORY[0x270EEE828]();
}

uint64_t sub_256175538()
{
  return MEMORY[0x270EEE838]();
}

uint64_t sub_256175548()
{
  return MEMORY[0x270EEE850]();
}

uint64_t sub_256175558()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_256175568()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_256175578()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_256175588()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_256175598()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_2561755A8()
{
  return MEMORY[0x270EEE9A8]();
}

uint64_t sub_2561755B8()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_2561755C8()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_2561755D8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2561755E8()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_2561755F8()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_256175608()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_256175618()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_256175628()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_256175638()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_256175648()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_256175658()
{
  return MEMORY[0x270EF0310]();
}

uint64_t sub_256175668()
{
  return MEMORY[0x270EF0320]();
}

uint64_t sub_256175678()
{
  return MEMORY[0x270EF0358]();
}

uint64_t sub_256175688()
{
  return MEMORY[0x270EF0360]();
}

uint64_t sub_256175698()
{
  return MEMORY[0x270EF0420]();
}

uint64_t sub_2561756A8()
{
  return MEMORY[0x270EF0430]();
}

uint64_t sub_2561756B8()
{
  return MEMORY[0x270EF0448]();
}

uint64_t sub_2561756C8()
{
  return MEMORY[0x270EF0498]();
}

uint64_t sub_2561756D8()
{
  return MEMORY[0x270EF04B0]();
}

uint64_t sub_2561756E8()
{
  return MEMORY[0x270EF04D0]();
}

uint64_t sub_2561756F8()
{
  return MEMORY[0x270EF04E8]();
}

uint64_t sub_256175708()
{
  return MEMORY[0x270EF0508]();
}

uint64_t sub_256175718()
{
  return MEMORY[0x270EF0518]();
}

uint64_t sub_256175728()
{
  return MEMORY[0x270EF0570]();
}

uint64_t sub_256175738()
{
  return MEMORY[0x270EF0598]();
}

uint64_t sub_256175748()
{
  return MEMORY[0x270EF05A0]();
}

uint64_t sub_256175758()
{
  return MEMORY[0x270EF05B8]();
}

uint64_t sub_256175768()
{
  return MEMORY[0x270EF05F0]();
}

uint64_t sub_256175778()
{
  return MEMORY[0x270EF0600]();
}

uint64_t sub_256175788()
{
  return MEMORY[0x270EF0628]();
}

uint64_t sub_256175798()
{
  return MEMORY[0x270EF0690]();
}

uint64_t sub_2561757A8()
{
  return MEMORY[0x270EF06A8]();
}

uint64_t sub_2561757B8()
{
  return MEMORY[0x270EF06E0]();
}

uint64_t sub_2561757C8()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_2561757D8()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_2561757E8()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_2561757F8()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_256175808()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_256175818()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_256175828()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_256175838()
{
  return MEMORY[0x270EF0C00]();
}

uint64_t sub_256175848()
{
  return MEMORY[0x270EF0C20]();
}

uint64_t sub_256175858()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_256175868()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_256175878()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_256175888()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_256175898()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_2561758A8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_2561758B8()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_2561758C8()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_2561758D8()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_2561758E8()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_2561758F8()
{
  return MEMORY[0x270EF1100]();
}

uint64_t sub_256175908()
{
  return MEMORY[0x270EF1150]();
}

uint64_t sub_256175918()
{
  return MEMORY[0x270EF1160]();
}

uint64_t sub_256175928()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_256175938()
{
  return MEMORY[0x270EF1280]();
}

uint64_t sub_256175948()
{
  return MEMORY[0x270F34F18]();
}

uint64_t sub_256175958()
{
  return MEMORY[0x270F34F20]();
}

uint64_t sub_256175968()
{
  return MEMORY[0x270EF12C0]();
}

uint64_t sub_256175978()
{
  return MEMORY[0x270EF12C8]();
}

uint64_t sub_256175988()
{
  return MEMORY[0x270EF1350]();
}

uint64_t sub_256175998()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_2561759A8()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_2561759B8()
{
  return MEMORY[0x270EF13C8]();
}

uint64_t sub_2561759C8()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_2561759D8()
{
  return MEMORY[0x270EF13F0]();
}

uint64_t sub_2561759E8()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_2561759F8()
{
  return MEMORY[0x270EF1430]();
}

uint64_t sub_256175A08()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_256175A18()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_256175A28()
{
  return MEMORY[0x270EF16E0]();
}

uint64_t sub_256175A38()
{
  return MEMORY[0x270EF1700]();
}

uint64_t sub_256175A48()
{
  return MEMORY[0x270F816F8]();
}

uint64_t sub_256175A58()
{
  return MEMORY[0x270EF1738]();
}

uint64_t sub_256175A68()
{
  return MEMORY[0x270F30E18]();
}

uint64_t sub_256175A78()
{
  return MEMORY[0x270F30EA0]();
}

uint64_t sub_256175A88()
{
  return MEMORY[0x270F34F30]();
}

uint64_t sub_256175A98()
{
  return MEMORY[0x270F34F38]();
}

uint64_t sub_256175AA8()
{
  return MEMORY[0x270F34F70]();
}

uint64_t sub_256175AB8()
{
  return MEMORY[0x270F34F78]();
}

uint64_t sub_256175AC8()
{
  return MEMORY[0x270F34FA0]();
}

uint64_t sub_256175AD8()
{
  return MEMORY[0x270F34FB0]();
}

uint64_t sub_256175AE8()
{
  return MEMORY[0x270F35000]();
}

uint64_t sub_256175AF8()
{
  return MEMORY[0x270F35008]();
}

uint64_t sub_256175B08()
{
  return MEMORY[0x270F35010]();
}

uint64_t sub_256175B18()
{
  return MEMORY[0x270F35018]();
}

uint64_t sub_256175B28()
{
  return MEMORY[0x270F35028]();
}

uint64_t sub_256175B38()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_256175B48()
{
  return MEMORY[0x270F350F8]();
}

uint64_t sub_256175B58()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_256175B68()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_256175B78()
{
  return MEMORY[0x270F823A0]();
}

uint64_t sub_256175B88()
{
  return MEMORY[0x270EE3950]();
}

uint64_t sub_256175B98()
{
  return MEMORY[0x270EE3968]();
}

uint64_t sub_256175BA8()
{
  return MEMORY[0x270EE39D8]();
}

uint64_t sub_256175BB8()
{
  return MEMORY[0x270EE39E0]();
}

uint64_t sub_256175BC8()
{
  return MEMORY[0x270EE3AD8]();
}

uint64_t sub_256175BD8()
{
  return MEMORY[0x270EE3B60]();
}

uint64_t sub_256175BE8()
{
  return MEMORY[0x270EE3B98]();
}

uint64_t sub_256175BF8()
{
  return MEMORY[0x270EE3BB0]();
}

uint64_t sub_256175C08()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_256175C18()
{
  return MEMORY[0x270EE3C78]();
}

uint64_t sub_256175C28()
{
  return MEMORY[0x270EE3CE0]();
}

uint64_t sub_256175C38()
{
  return MEMORY[0x270EE3CF0]();
}

uint64_t sub_256175C48()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_256175C58()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_256175C68()
{
  return MEMORY[0x270EE3DB8]();
}

uint64_t sub_256175C78()
{
  return MEMORY[0x270EE3DD0]();
}

uint64_t sub_256175C88()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_256175C98()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_256175CA8()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_256175CB8()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_256175CC8()
{
  return MEMORY[0x270EE3E78]();
}

uint64_t sub_256175CD8()
{
  return MEMORY[0x270EE3F78]();
}

uint64_t sub_256175CE8()
{
  return MEMORY[0x270EE3FB0]();
}

uint64_t sub_256175CF8()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_256175D08()
{
  return MEMORY[0x270EFEBA0]();
}

uint64_t sub_256175D18()
{
  return MEMORY[0x270EFEBB8]();
}

uint64_t sub_256175D28()
{
  return MEMORY[0x270EFECB0]();
}

uint64_t sub_256175D38()
{
  return MEMORY[0x270EFECC0]();
}

uint64_t sub_256175D48()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_256175D58()
{
  return MEMORY[0x270EFEDF0]();
}

uint64_t sub_256175D68()
{
  return MEMORY[0x270EFEDF8]();
}

uint64_t sub_256175D78()
{
  return MEMORY[0x270EFEEC0]();
}

uint64_t sub_256175D88()
{
  return MEMORY[0x270EFEF10]();
}

uint64_t sub_256175D98()
{
  return MEMORY[0x270EFEF30]();
}

uint64_t sub_256175DA8()
{
  return MEMORY[0x270EFEF38]();
}

uint64_t sub_256175DB8()
{
  return MEMORY[0x270EFEF50]();
}

uint64_t sub_256175DC8()
{
  return MEMORY[0x270EFEF58]();
}

uint64_t sub_256175DD8()
{
  return MEMORY[0x270EFEF68]();
}

uint64_t sub_256175DE8()
{
  return MEMORY[0x270EFEFA0]();
}

uint64_t sub_256175DF8()
{
  return MEMORY[0x270EFEFB8]();
}

uint64_t sub_256175E08()
{
  return MEMORY[0x270EFEFD0]();
}

uint64_t sub_256175E18()
{
  return MEMORY[0x270EFF008]();
}

uint64_t sub_256175E28()
{
  return MEMORY[0x270EFF108]();
}

uint64_t sub_256175E38()
{
  return MEMORY[0x270EFF128]();
}

uint64_t sub_256175E48()
{
  return MEMORY[0x270EFF140]();
}

uint64_t sub_256175E58()
{
  return MEMORY[0x270EFF158]();
}

uint64_t sub_256175E68()
{
  return MEMORY[0x270EFF170]();
}

uint64_t sub_256175E78()
{
  return MEMORY[0x270EFF180]();
}

uint64_t sub_256175E88()
{
  return MEMORY[0x270EFF230]();
}

uint64_t sub_256175E98()
{
  return MEMORY[0x270EFF248]();
}

uint64_t sub_256175EA8()
{
  return MEMORY[0x270EFF250]();
}

uint64_t sub_256175EB8()
{
  return MEMORY[0x270EFF480]();
}

uint64_t sub_256175EC8()
{
  return MEMORY[0x270EFF490]();
}

uint64_t sub_256175ED8()
{
  return MEMORY[0x270EFF498]();
}

uint64_t sub_256175EE8()
{
  return MEMORY[0x270EFF4A0]();
}

uint64_t sub_256175EF8()
{
  return MEMORY[0x270EFF510]();
}

uint64_t sub_256175F08()
{
  return MEMORY[0x270EFF520]();
}

uint64_t sub_256175F18()
{
  return MEMORY[0x270EFF538]();
}

uint64_t sub_256175F28()
{
  return MEMORY[0x270EFF558]();
}

uint64_t sub_256175F38()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_256175F48()
{
  return MEMORY[0x270EFF5E0]();
}

uint64_t sub_256175F58()
{
  return MEMORY[0x270EFF648]();
}

uint64_t sub_256175F68()
{
  return MEMORY[0x270EFF650]();
}

uint64_t sub_256175F78()
{
  return MEMORY[0x270EFF658]();
}

uint64_t sub_256175F88()
{
  return MEMORY[0x270EFF668]();
}

uint64_t sub_256175F98()
{
  return MEMORY[0x270EFF6C0]();
}

uint64_t sub_256175FA8()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_256175FB8()
{
  return MEMORY[0x270EFF6E8]();
}

uint64_t sub_256175FC8()
{
  return MEMORY[0x270EFF6F8]();
}

uint64_t sub_256175FD8()
{
  return MEMORY[0x270EFF7B8]();
}

uint64_t sub_256175FE8()
{
  return MEMORY[0x270EFF7C0]();
}

uint64_t sub_256175FF8()
{
  return MEMORY[0x270EFF7D0]();
}

uint64_t sub_256176008()
{
  return MEMORY[0x270EFF7D8]();
}

uint64_t sub_256176018()
{
  return MEMORY[0x270EFF7F0]();
}

uint64_t sub_256176028()
{
  return MEMORY[0x270EFF888]();
}

uint64_t sub_256176038()
{
  return MEMORY[0x270EFF898]();
}

uint64_t sub_256176048()
{
  return MEMORY[0x270EFF918]();
}

uint64_t sub_256176058()
{
  return MEMORY[0x270EFF920]();
}

uint64_t sub_256176068()
{
  return MEMORY[0x270EFF940]();
}

uint64_t sub_256176088()
{
  return MEMORY[0x270EFFA10]();
}

uint64_t sub_256176098()
{
  return MEMORY[0x270EFFA58]();
}

uint64_t sub_2561760A8()
{
  return MEMORY[0x270EFFA60]();
}

uint64_t sub_2561760B8()
{
  return MEMORY[0x270EFFA68]();
}

uint64_t sub_2561760C8()
{
  return MEMORY[0x270EFFA78]();
}

uint64_t sub_2561760D8()
{
  return MEMORY[0x270EFFB58]();
}

uint64_t sub_2561760E8()
{
  return MEMORY[0x270EFFB80]();
}

uint64_t sub_2561760F8()
{
  return MEMORY[0x270EFFB88]();
}

uint64_t sub_256176108()
{
  return MEMORY[0x270EFFBA0]();
}

uint64_t sub_256176118()
{
  return MEMORY[0x270EFFC88]();
}

uint64_t sub_256176128()
{
  return MEMORY[0x270EFFE58]();
}

uint64_t sub_256176138()
{
  return MEMORY[0x270EFFEB0]();
}

uint64_t sub_256176148()
{
  return MEMORY[0x270EFFED0]();
}

uint64_t sub_256176158()
{
  return MEMORY[0x270EFFEE0]();
}

uint64_t sub_256176168()
{
  return MEMORY[0x270F00050]();
}

uint64_t sub_256176178()
{
  return MEMORY[0x270F00058]();
}

uint64_t sub_256176188()
{
  return MEMORY[0x270F000F0]();
}

uint64_t sub_256176198()
{
  return MEMORY[0x270F00138]();
}

uint64_t sub_2561761A8()
{
  return MEMORY[0x270F00170]();
}

uint64_t sub_2561761B8()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_2561761C8()
{
  return MEMORY[0x270F001C0]();
}

uint64_t sub_2561761D8()
{
  return MEMORY[0x270F001D0]();
}

uint64_t sub_2561761E8()
{
  return MEMORY[0x270F001D8]();
}

uint64_t sub_2561761F8()
{
  return MEMORY[0x270F00220]();
}

uint64_t sub_256176208()
{
  return MEMORY[0x270F00268]();
}

uint64_t sub_256176218()
{
  return MEMORY[0x270F00270]();
}

uint64_t sub_256176228()
{
  return MEMORY[0x270F002D0]();
}

uint64_t sub_256176238()
{
  return MEMORY[0x270F00338]();
}

uint64_t sub_256176248()
{
  return MEMORY[0x270F00418]();
}

uint64_t sub_256176258()
{
  return MEMORY[0x270F00430]();
}

uint64_t sub_256176268()
{
  return MEMORY[0x270F00438]();
}

uint64_t sub_256176278()
{
  return MEMORY[0x270F00448]();
}

uint64_t sub_256176288()
{
  return MEMORY[0x270F004D0]();
}

uint64_t sub_256176298()
{
  return MEMORY[0x270F004E8]();
}

uint64_t sub_2561762A8()
{
  return MEMORY[0x270F00538]();
}

uint64_t sub_2561762B8()
{
  return MEMORY[0x270F00598]();
}

uint64_t sub_2561762C8()
{
  return MEMORY[0x270F005F8]();
}

uint64_t sub_2561762D8()
{
  return MEMORY[0x270F00670]();
}

uint64_t sub_2561762E8()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_2561762F8()
{
  return MEMORY[0x270F00698]();
}

uint64_t sub_256176308()
{
  return MEMORY[0x270F006C8]();
}

uint64_t sub_256176318()
{
  return MEMORY[0x270F006E0]();
}

uint64_t sub_256176328()
{
  return MEMORY[0x270F006F0]();
}

uint64_t sub_256176338()
{
  return MEMORY[0x270F007D8]();
}

uint64_t sub_256176348()
{
  return MEMORY[0x270F007E0]();
}

uint64_t sub_256176358()
{
  return MEMORY[0x270F00860]();
}

uint64_t sub_256176368()
{
  return MEMORY[0x270F00868]();
}

uint64_t sub_256176378()
{
  return MEMORY[0x270F008D0]();
}

uint64_t sub_256176388()
{
  return MEMORY[0x270F008D8]();
}

uint64_t sub_256176398()
{
  return MEMORY[0x270F008E8]();
}

uint64_t sub_2561763A8()
{
  return MEMORY[0x270F00940]();
}

uint64_t sub_2561763B8()
{
  return MEMORY[0x270F00948]();
}

uint64_t sub_2561763C8()
{
  return MEMORY[0x270F00978]();
}

uint64_t sub_2561763D8()
{
  return MEMORY[0x270F00980]();
}

uint64_t sub_2561763E8()
{
  return MEMORY[0x270F00A00]();
}

uint64_t sub_2561763F8()
{
  return MEMORY[0x270F00A18]();
}

uint64_t sub_256176408()
{
  return MEMORY[0x270F00A20]();
}

uint64_t sub_256176418()
{
  return MEMORY[0x270F00A30]();
}

uint64_t sub_256176428()
{
  return MEMORY[0x270F00A50]();
}

uint64_t sub_256176438()
{
  return MEMORY[0x270F00A58]();
}

uint64_t sub_256176448()
{
  return MEMORY[0x270F00AF0]();
}

uint64_t sub_256176458()
{
  return MEMORY[0x270F00AF8]();
}

uint64_t sub_256176468()
{
  return MEMORY[0x270F00B28]();
}

uint64_t sub_256176478()
{
  return MEMORY[0x270F00B78]();
}

uint64_t sub_256176488()
{
  return MEMORY[0x270F00B80]();
}

uint64_t sub_256176498()
{
  return MEMORY[0x270F00BC8]();
}

uint64_t sub_2561764A8()
{
  return MEMORY[0x270F00BD0]();
}

uint64_t sub_2561764B8()
{
  return MEMORY[0x270F00C78]();
}

uint64_t sub_2561764C8()
{
  return MEMORY[0x270F00C88]();
}

uint64_t sub_2561764D8()
{
  return MEMORY[0x270F00CD8]();
}

uint64_t sub_2561764E8()
{
  return MEMORY[0x270F00D80]();
}

uint64_t sub_2561764F8()
{
  return MEMORY[0x270F00D90]();
}

uint64_t sub_256176508()
{
  return MEMORY[0x270F00DA8]();
}

uint64_t sub_256176518()
{
  return MEMORY[0x270F00DB8]();
}

uint64_t sub_256176528()
{
  return MEMORY[0x270F00DE8]();
}

uint64_t sub_256176538()
{
  return MEMORY[0x270F00E18]();
}

uint64_t sub_256176548()
{
  return MEMORY[0x270F00E20]();
}

uint64_t sub_256176558()
{
  return MEMORY[0x270F00E28]();
}

uint64_t sub_256176568()
{
  return MEMORY[0x270F00E38]();
}

uint64_t sub_256176578()
{
  return MEMORY[0x270F00E50]();
}

uint64_t sub_256176588()
{
  return MEMORY[0x270F00E68]();
}

uint64_t sub_256176598()
{
  return MEMORY[0x270F00E88]();
}

uint64_t sub_2561765A8()
{
  return MEMORY[0x270F00E98]();
}

uint64_t sub_2561765B8()
{
  return MEMORY[0x270F00EB8]();
}

uint64_t sub_2561765C8()
{
  return MEMORY[0x270F00EC0]();
}

uint64_t sub_2561765D8()
{
  return MEMORY[0x270F00ED8]();
}

uint64_t sub_2561765E8()
{
  return MEMORY[0x270F00EE0]();
}

uint64_t sub_2561765F8()
{
  return MEMORY[0x270F00F10]();
}

uint64_t sub_256176608()
{
  return MEMORY[0x270F00F20]();
}

uint64_t sub_256176618()
{
  return MEMORY[0x270F00F88]();
}

uint64_t sub_256176628()
{
  return MEMORY[0x270F00FA0]();
}

uint64_t sub_256176638()
{
  return MEMORY[0x270F00FA8]();
}

uint64_t sub_256176648()
{
  return MEMORY[0x270F01038]();
}

uint64_t sub_256176658()
{
  return MEMORY[0x270F01050]();
}

uint64_t sub_256176668()
{
  return MEMORY[0x270F01060]();
}

uint64_t sub_256176678()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_256176688()
{
  return MEMORY[0x270F01228]();
}

uint64_t sub_256176698()
{
  return MEMORY[0x270F01238]();
}

uint64_t sub_2561766A8()
{
  return MEMORY[0x270F01248]();
}

uint64_t sub_2561766B8()
{
  return MEMORY[0x270F01258]();
}

uint64_t sub_2561766C8()
{
  return MEMORY[0x270F01270]();
}

uint64_t sub_2561766D8()
{
  return MEMORY[0x270F01280]();
}

uint64_t sub_2561766E8()
{
  return MEMORY[0x270F01358]();
}

uint64_t sub_2561766F8()
{
  return MEMORY[0x270F01378]();
}

uint64_t sub_256176708()
{
  return MEMORY[0x270F01380]();
}

uint64_t sub_256176718()
{
  return MEMORY[0x270F01388]();
}

uint64_t sub_256176728()
{
  return MEMORY[0x270F013D0]();
}

uint64_t sub_256176738()
{
  return MEMORY[0x270F01430]();
}

uint64_t sub_256176748()
{
  return MEMORY[0x270F01460]();
}

uint64_t sub_256176758()
{
  return MEMORY[0x270F01468]();
}

uint64_t sub_256176768()
{
  return MEMORY[0x270F01470]();
}

uint64_t sub_256176778()
{
  return MEMORY[0x270F014A8]();
}

uint64_t sub_256176788()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_256176798()
{
  return MEMORY[0x270F01520]();
}

uint64_t sub_2561767A8()
{
  return MEMORY[0x270F01648]();
}

uint64_t sub_2561767B8()
{
  return MEMORY[0x270F016A0]();
}

uint64_t sub_2561767C8()
{
  return MEMORY[0x270F016D0]();
}

uint64_t sub_2561767D8()
{
  return MEMORY[0x270F016E0]();
}

uint64_t sub_2561767E8()
{
  return MEMORY[0x270F016F8]();
}

uint64_t sub_2561767F8()
{
  return MEMORY[0x270F01708]();
}

uint64_t sub_256176818()
{
  return MEMORY[0x270F01728]();
}

uint64_t sub_256176828()
{
  return MEMORY[0x270F01738]();
}

uint64_t sub_256176838()
{
  return MEMORY[0x270F01748]();
}

uint64_t sub_256176848()
{
  return MEMORY[0x270F01758]();
}

uint64_t sub_256176858()
{
  return MEMORY[0x270F01768]();
}

uint64_t sub_256176868()
{
  return MEMORY[0x270F01778]();
}

uint64_t sub_256176888()
{
  return MEMORY[0x270F017E8]();
}

uint64_t sub_256176898()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_2561768A8()
{
  return MEMORY[0x270F01818]();
}

uint64_t sub_2561768B8()
{
  return MEMORY[0x270F01878]();
}

uint64_t sub_2561768C8()
{
  return MEMORY[0x270F01888]();
}

uint64_t sub_2561768D8()
{
  return MEMORY[0x270F018D8]();
}

uint64_t sub_2561768E8()
{
  return MEMORY[0x270F018F0]();
}

uint64_t sub_2561768F8()
{
  return MEMORY[0x270F01A10]();
}

uint64_t sub_256176908()
{
  return MEMORY[0x270F01A18]();
}

uint64_t sub_256176918()
{
  return MEMORY[0x270F01A28]();
}

uint64_t sub_256176928()
{
  return MEMORY[0x270F01A40]();
}

uint64_t sub_256176938()
{
  return MEMORY[0x270F01A48]();
}

uint64_t sub_256176948()
{
  return MEMORY[0x270F01A50]();
}

uint64_t sub_256176958()
{
  return MEMORY[0x270F01A78]();
}

uint64_t sub_256176968()
{
  return MEMORY[0x270F01A88]();
}

uint64_t sub_256176978()
{
  return MEMORY[0x270F01A90]();
}

uint64_t sub_256176988()
{
  return MEMORY[0x270F01A98]();
}

uint64_t sub_256176998()
{
  return MEMORY[0x270F01AE0]();
}

uint64_t sub_2561769A8()
{
  return MEMORY[0x270F01B80]();
}

uint64_t sub_2561769B8()
{
  return MEMORY[0x270F01B88]();
}

uint64_t sub_2561769C8()
{
  return MEMORY[0x270F01B90]();
}

uint64_t sub_2561769D8()
{
  return MEMORY[0x270F01BF8]();
}

uint64_t sub_2561769E8()
{
  return MEMORY[0x270F01C08]();
}

uint64_t sub_2561769F8()
{
  return MEMORY[0x270F01C10]();
}

uint64_t sub_256176A08()
{
  return MEMORY[0x270F01C18]();
}

uint64_t sub_256176A18()
{
  return MEMORY[0x270F01C30]();
}

uint64_t sub_256176A28()
{
  return MEMORY[0x270F01C58]();
}

uint64_t sub_256176A38()
{
  return MEMORY[0x270F01C68]();
}

uint64_t sub_256176A48()
{
  return MEMORY[0x270F01D20]();
}

uint64_t sub_256176A58()
{
  return MEMORY[0x270F01D38]();
}

uint64_t sub_256176A68()
{
  return MEMORY[0x270F01DA0]();
}

uint64_t sub_256176A78()
{
  return MEMORY[0x270F01E18]();
}

uint64_t sub_256176A88()
{
  return MEMORY[0x270F01E28]();
}

uint64_t sub_256176A98()
{
  return MEMORY[0x270F01E38]();
}

uint64_t sub_256176AA8()
{
  return MEMORY[0x270F01E68]();
}

uint64_t sub_256176AB8()
{
  return MEMORY[0x270F01F70]();
}

uint64_t sub_256176AC8()
{
  return MEMORY[0x270F01F90]();
}

uint64_t sub_256176AD8()
{
  return MEMORY[0x270F02078]();
}

uint64_t sub_256176AE8()
{
  return MEMORY[0x270F02080]();
}

uint64_t sub_256176AF8()
{
  return MEMORY[0x270F02098]();
}

uint64_t sub_256176B08()
{
  return MEMORY[0x270F020A0]();
}

uint64_t sub_256176B18()
{
  return MEMORY[0x270F020D8]();
}

uint64_t sub_256176B28()
{
  return MEMORY[0x270F020E8]();
}

uint64_t sub_256176B38()
{
  return MEMORY[0x270F020F0]();
}

uint64_t sub_256176B48()
{
  return MEMORY[0x270F021C8]();
}

uint64_t sub_256176B58()
{
  return MEMORY[0x270F021D0]();
}

uint64_t sub_256176B68()
{
  return MEMORY[0x270F021D8]();
}

uint64_t sub_256176B78()
{
  return MEMORY[0x270F02240]();
}

uint64_t sub_256176B88()
{
  return MEMORY[0x270F02368]();
}

uint64_t sub_256176B98()
{
  return MEMORY[0x270F02380]();
}

uint64_t sub_256176BA8()
{
  return MEMORY[0x270F02390]();
}

uint64_t sub_256176BB8()
{
  return MEMORY[0x270F023A0]();
}

uint64_t sub_256176BC8()
{
  return MEMORY[0x270F02460]();
}

uint64_t sub_256176BD8()
{
  return MEMORY[0x270F024D8]();
}

uint64_t sub_256176BE8()
{
  return MEMORY[0x270F024E0]();
}

uint64_t sub_256176BF8()
{
  return MEMORY[0x270F024E8]();
}

uint64_t sub_256176C08()
{
  return MEMORY[0x270F02510]();
}

uint64_t sub_256176C18()
{
  return MEMORY[0x270F02528]();
}

uint64_t sub_256176C28()
{
  return MEMORY[0x270F025C8]();
}

uint64_t sub_256176C38()
{
  return MEMORY[0x270F025E0]();
}

uint64_t sub_256176C48()
{
  return MEMORY[0x270F025F8]();
}

uint64_t sub_256176C58()
{
  return MEMORY[0x270F02600]();
}

uint64_t sub_256176C68()
{
  return MEMORY[0x270F02608]();
}

uint64_t sub_256176C78()
{
  return MEMORY[0x270F02610]();
}

uint64_t sub_256176C88()
{
  return MEMORY[0x270F02618]();
}

uint64_t sub_256176C98()
{
  return MEMORY[0x270F026A0]();
}

uint64_t sub_256176CA8()
{
  return MEMORY[0x270F026B0]();
}

uint64_t sub_256176CB8()
{
  return MEMORY[0x270F026C8]();
}

uint64_t sub_256176CD8()
{
  return MEMORY[0x270F026E0]();
}

uint64_t sub_256176CE8()
{
  return MEMORY[0x270F026F0]();
}

uint64_t sub_256176CF8()
{
  return MEMORY[0x270F02700]();
}

uint64_t sub_256176D18()
{
  return MEMORY[0x270F02728]();
}

uint64_t sub_256176D28()
{
  return MEMORY[0x270F02798]();
}

uint64_t sub_256176D38()
{
  return MEMORY[0x270F027A8]();
}

uint64_t sub_256176D48()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_256176D58()
{
  return MEMORY[0x270F029F0]();
}

uint64_t sub_256176D68()
{
  return MEMORY[0x270F02A00]();
}

uint64_t sub_256176D78()
{
  return MEMORY[0x270F02A20]();
}

uint64_t sub_256176D88()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_256176D98()
{
  return MEMORY[0x270F02A38]();
}

uint64_t sub_256176DA8()
{
  return MEMORY[0x270F02A48]();
}

uint64_t sub_256176DB8()
{
  return MEMORY[0x270F02A60]();
}

uint64_t sub_256176DC8()
{
  return MEMORY[0x270F02A78]();
}

uint64_t sub_256176DD8()
{
  return MEMORY[0x270F02A90]();
}

uint64_t sub_256176DE8()
{
  return MEMORY[0x270F02AD0]();
}

uint64_t sub_256176DF8()
{
  return MEMORY[0x270F02AE8]();
}

uint64_t sub_256176E08()
{
  return MEMORY[0x270F02B38]();
}

uint64_t sub_256176E18()
{
  return MEMORY[0x270F02B48]();
}

uint64_t sub_256176E28()
{
  return MEMORY[0x270F02B50]();
}

uint64_t sub_256176E38()
{
  return MEMORY[0x270F02B60]();
}

uint64_t sub_256176E48()
{
  return MEMORY[0x270F02B90]();
}

uint64_t sub_256176E58()
{
  return MEMORY[0x270F02BA8]();
}

uint64_t sub_256176E68()
{
  return MEMORY[0x270F02BF8]();
}

uint64_t sub_256176E78()
{
  return MEMORY[0x270F02C00]();
}

uint64_t sub_256176E88()
{
  return MEMORY[0x270F02C10]();
}

uint64_t sub_256176E98()
{
  return MEMORY[0x270F02C40]();
}

uint64_t sub_256176EA8()
{
  return MEMORY[0x270F02C68]();
}

uint64_t sub_256176EB8()
{
  return MEMORY[0x270F02C70]();
}

uint64_t sub_256176EC8()
{
  return MEMORY[0x270F02C88]();
}

uint64_t sub_256176ED8()
{
  return MEMORY[0x270F02C98]();
}

uint64_t sub_256176EE8()
{
  return MEMORY[0x270F02CB0]();
}

uint64_t sub_256176EF8()
{
  return MEMORY[0x270F02CD0]();
}

uint64_t sub_256176F08()
{
  return MEMORY[0x270F02CE8]();
}

uint64_t sub_256176F18()
{
  return MEMORY[0x270F02CF8]();
}

uint64_t sub_256176F28()
{
  return MEMORY[0x270F02D08]();
}

uint64_t sub_256176F38()
{
  return MEMORY[0x270F02D10]();
}

uint64_t sub_256176F48()
{
  return MEMORY[0x270F02D30]();
}

uint64_t sub_256176F58()
{
  return MEMORY[0x270F02DB8]();
}

uint64_t sub_256176F68()
{
  return MEMORY[0x270F02DC8]();
}

uint64_t sub_256176F78()
{
  return MEMORY[0x270F02DE8]();
}

uint64_t sub_256176F88()
{
  return MEMORY[0x270F02F28]();
}

uint64_t sub_256176F98()
{
  return MEMORY[0x270F03008]();
}

uint64_t sub_256176FA8()
{
  return MEMORY[0x270F03010]();
}

uint64_t sub_256176FB8()
{
  return MEMORY[0x270F03088]();
}

uint64_t sub_256176FC8()
{
  return MEMORY[0x270F03090]();
}

uint64_t sub_256176FD8()
{
  return MEMORY[0x270F030A8]();
}

uint64_t sub_256176FE8()
{
  return MEMORY[0x270F03188]();
}

uint64_t sub_256176FF8()
{
  return MEMORY[0x270F031A0]();
}

uint64_t sub_256177008()
{
  return MEMORY[0x270F03218]();
}

uint64_t sub_256177018()
{
  return MEMORY[0x270F03228]();
}

uint64_t sub_256177028()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_256177038()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_256177048()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_256177058()
{
  return MEMORY[0x270F03318]();
}

uint64_t sub_256177068()
{
  return MEMORY[0x270F03360]();
}

uint64_t sub_256177078()
{
  return MEMORY[0x270F03438]();
}

uint64_t sub_256177088()
{
  return MEMORY[0x270F03448]();
}

uint64_t sub_256177098()
{
  return MEMORY[0x270F03488]();
}

uint64_t sub_2561770A8()
{
  return MEMORY[0x270F03500]();
}

uint64_t sub_2561770B8()
{
  return MEMORY[0x270F03538]();
}

uint64_t sub_2561770C8()
{
  return MEMORY[0x270F03540]();
}

uint64_t sub_2561770D8()
{
  return MEMORY[0x270F035C0]();
}

uint64_t sub_2561770E8()
{
  return MEMORY[0x270F035E0]();
}

uint64_t sub_2561770F8()
{
  return MEMORY[0x270F03690]();
}

uint64_t sub_256177108()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_256177118()
{
  return MEMORY[0x270F03770]();
}

uint64_t sub_256177128()
{
  return MEMORY[0x270F03780]();
}

uint64_t sub_256177138()
{
  return MEMORY[0x270F03790]();
}

uint64_t sub_256177148()
{
  return MEMORY[0x270F037F8]();
}

uint64_t sub_256177158()
{
  return MEMORY[0x270F03810]();
}

uint64_t sub_256177168()
{
  return MEMORY[0x270F03890]();
}

uint64_t sub_256177178()
{
  return MEMORY[0x270F038B0]();
}

uint64_t sub_256177188()
{
  return MEMORY[0x270F03910]();
}

uint64_t sub_256177198()
{
  return MEMORY[0x270F03938]();
}

uint64_t sub_2561771A8()
{
  return MEMORY[0x270F03970]();
}

uint64_t sub_2561771B8()
{
  return MEMORY[0x270F039A0]();
}

uint64_t sub_2561771C8()
{
  return MEMORY[0x270F039B0]();
}

uint64_t sub_2561771D8()
{
  return MEMORY[0x270F039D0]();
}

uint64_t sub_2561771E8()
{
  return MEMORY[0x270F03B00]();
}

uint64_t sub_2561771F8()
{
  return MEMORY[0x270F03B88]();
}

uint64_t sub_256177208()
{
  return MEMORY[0x270F03BC0]();
}

uint64_t sub_256177218()
{
  return MEMORY[0x270F03C80]();
}

uint64_t sub_256177228()
{
  return MEMORY[0x270F03CC0]();
}

uint64_t sub_256177238()
{
  return MEMORY[0x270F03D30]();
}

uint64_t sub_256177248()
{
  return MEMORY[0x270F03D58]();
}

uint64_t sub_256177258()
{
  return MEMORY[0x270F03D60]();
}

uint64_t sub_256177268()
{
  return MEMORY[0x270F03E00]();
}

uint64_t sub_256177278()
{
  return MEMORY[0x270F03E58]();
}

uint64_t sub_256177288()
{
  return MEMORY[0x270F03E60]();
}

uint64_t sub_256177298()
{
  return MEMORY[0x270F03EF8]();
}

uint64_t sub_2561772A8()
{
  return MEMORY[0x270F03F48]();
}

uint64_t sub_2561772B8()
{
  return MEMORY[0x270F03F68]();
}

uint64_t sub_2561772C8()
{
  return MEMORY[0x270F03FE8]();
}

uint64_t sub_2561772D8()
{
  return MEMORY[0x270F03FF8]();
}

uint64_t sub_2561772E8()
{
  return MEMORY[0x270F04008]();
}

uint64_t sub_2561772F8()
{
  return MEMORY[0x270F04010]();
}

uint64_t sub_256177308()
{
  return MEMORY[0x270F04098]();
}

uint64_t sub_256177318()
{
  return MEMORY[0x270F040B0]();
}

uint64_t sub_256177328()
{
  return MEMORY[0x270F040E0]();
}

uint64_t sub_256177338()
{
  return MEMORY[0x270F04110]();
}

uint64_t sub_256177348()
{
  return MEMORY[0x270F04128]();
}

uint64_t sub_256177358()
{
  return MEMORY[0x270F04148]();
}

uint64_t sub_256177368()
{
  return MEMORY[0x270F04188]();
}

uint64_t sub_256177378()
{
  return MEMORY[0x270F04240]();
}

uint64_t sub_256177388()
{
  return MEMORY[0x270F04278]();
}

uint64_t sub_256177398()
{
  return MEMORY[0x270F042E8]();
}

uint64_t sub_2561773A8()
{
  return MEMORY[0x270F04300]();
}

uint64_t sub_2561773B8()
{
  return MEMORY[0x270F04320]();
}

uint64_t sub_2561773C8()
{
  return MEMORY[0x270F04330]();
}

uint64_t sub_2561773D8()
{
  return MEMORY[0x270F04360]();
}

uint64_t sub_2561773E8()
{
  return MEMORY[0x270F04368]();
}

uint64_t sub_2561773F8()
{
  return MEMORY[0x270F04378]();
}

uint64_t sub_256177408()
{
  return MEMORY[0x270F043A8]();
}

uint64_t sub_256177418()
{
  return MEMORY[0x270F043C0]();
}

uint64_t sub_256177428()
{
  return MEMORY[0x270F043E8]();
}

uint64_t sub_256177438()
{
  return MEMORY[0x270F043F8]();
}

uint64_t sub_256177448()
{
  return MEMORY[0x270F04428]();
}

uint64_t sub_256177458()
{
  return MEMORY[0x270F04438]();
}

uint64_t sub_256177468()
{
  return MEMORY[0x270F04460]();
}

uint64_t sub_256177478()
{
  return MEMORY[0x270F04478]();
}

uint64_t sub_256177488()
{
  return MEMORY[0x270F04498]();
}

uint64_t sub_256177498()
{
  return MEMORY[0x270F044E8]();
}

uint64_t sub_2561774A8()
{
  return MEMORY[0x270F044F0]();
}

uint64_t sub_2561774B8()
{
  return MEMORY[0x270F04558]();
}

uint64_t sub_2561774C8()
{
  return MEMORY[0x270F04570]();
}

uint64_t sub_2561774D8()
{
  return MEMORY[0x270F045A8]();
}

uint64_t sub_2561774E8()
{
  return MEMORY[0x270F04650]();
}

uint64_t sub_2561774F8()
{
  return MEMORY[0x270F04690]();
}

uint64_t sub_256177508()
{
  return MEMORY[0x270F046C8]();
}

uint64_t sub_256177518()
{
  return MEMORY[0x270F04708]();
}

uint64_t sub_256177528()
{
  return MEMORY[0x270F04718]();
}

uint64_t sub_256177538()
{
  return MEMORY[0x270F04738]();
}

uint64_t sub_256177548()
{
  return MEMORY[0x270F04748]();
}

uint64_t sub_256177558()
{
  return MEMORY[0x270F04788]();
}

uint64_t sub_256177568()
{
  return MEMORY[0x270F04818]();
}

uint64_t sub_256177578()
{
  return MEMORY[0x270F04820]();
}

uint64_t sub_256177588()
{
  return MEMORY[0x270F04830]();
}

uint64_t sub_256177598()
{
  return MEMORY[0x270F04848]();
}

uint64_t sub_2561775A8()
{
  return MEMORY[0x270F04850]();
}

uint64_t sub_2561775B8()
{
  return MEMORY[0x270F04870]();
}

uint64_t sub_2561775C8()
{
  return MEMORY[0x270F048B0]();
}

uint64_t sub_2561775D8()
{
  return MEMORY[0x270F048E8]();
}

uint64_t sub_2561775E8()
{
  return MEMORY[0x270F04900]();
}

uint64_t sub_2561775F8()
{
  return MEMORY[0x270F04960]();
}

uint64_t sub_256177608()
{
  return MEMORY[0x270F04978]();
}

uint64_t sub_256177618()
{
  return MEMORY[0x270F04980]();
}

uint64_t sub_256177628()
{
  return MEMORY[0x270F04988]();
}

uint64_t sub_256177638()
{
  return MEMORY[0x270F04990]();
}

uint64_t sub_256177648()
{
  return MEMORY[0x270F04998]();
}

uint64_t sub_256177658()
{
  return MEMORY[0x270F049A0]();
}

uint64_t sub_256177668()
{
  return MEMORY[0x270F049E0]();
}

uint64_t sub_256177678()
{
  return MEMORY[0x270F049E8]();
}

uint64_t sub_256177688()
{
  return MEMORY[0x270F04A40]();
}

uint64_t sub_256177698()
{
  return MEMORY[0x270F04A50]();
}

uint64_t sub_2561776A8()
{
  return MEMORY[0x270F04A88]();
}

uint64_t sub_2561776B8()
{
  return MEMORY[0x270F04AA0]();
}

uint64_t sub_2561776C8()
{
  return MEMORY[0x270F04AB0]();
}

uint64_t sub_2561776D8()
{
  return MEMORY[0x270F04AE0]();
}

uint64_t sub_2561776E8()
{
  return MEMORY[0x270F04AE8]();
}

uint64_t sub_2561776F8()
{
  return MEMORY[0x270F04AF8]();
}

uint64_t sub_256177708()
{
  return MEMORY[0x270F04B10]();
}

uint64_t sub_256177718()
{
  return MEMORY[0x270F04B30]();
}

uint64_t sub_256177728()
{
  return MEMORY[0x270F04B48]();
}

uint64_t sub_256177738()
{
  return MEMORY[0x270F04B58]();
}

uint64_t sub_256177748()
{
  return MEMORY[0x270F04B68]();
}

uint64_t sub_256177758()
{
  return MEMORY[0x270F04B80]();
}

uint64_t sub_256177768()
{
  return MEMORY[0x270F04B90]();
}

uint64_t sub_256177778()
{
  return MEMORY[0x270F04BF8]();
}

uint64_t sub_256177788()
{
  return MEMORY[0x270F04C00]();
}

uint64_t sub_256177798()
{
  return MEMORY[0x270F04C18]();
}

uint64_t sub_2561777A8()
{
  return MEMORY[0x270F04C20]();
}

uint64_t sub_2561777B8()
{
  return MEMORY[0x270F04C30]();
}

uint64_t sub_2561777C8()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_2561777D8()
{
  return MEMORY[0x270F04CA8]();
}

uint64_t sub_2561777E8()
{
  return MEMORY[0x270F04CC0]();
}

uint64_t sub_2561777F8()
{
  return MEMORY[0x270F04CE8]();
}

uint64_t sub_256177808()
{
  return MEMORY[0x270F04CF0]();
}

uint64_t sub_256177818()
{
  return MEMORY[0x270F04D40]();
}

uint64_t sub_256177828()
{
  return MEMORY[0x270F04D50]();
}

uint64_t sub_256177838()
{
  return MEMORY[0x270F04D70]();
}

uint64_t sub_256177848()
{
  return MEMORY[0x270F04D80]();
}

uint64_t sub_256177858()
{
  return MEMORY[0x270F04E98]();
}

uint64_t sub_256177868()
{
  return MEMORY[0x270F04EC8]();
}

uint64_t sub_256177878()
{
  return MEMORY[0x270F04ED8]();
}

uint64_t sub_256177888()
{
  return MEMORY[0x270F04EE8]();
}

uint64_t sub_256177898()
{
  return MEMORY[0x270F04F78]();
}

uint64_t sub_2561778A8()
{
  return MEMORY[0x270F04FA0]();
}

uint64_t sub_2561778B8()
{
  return MEMORY[0x270F04FB0]();
}

uint64_t sub_2561778C8()
{
  return MEMORY[0x270F05058]();
}

uint64_t sub_2561778D8()
{
  return MEMORY[0x270F05068]();
}

uint64_t sub_2561778E8()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_2561778F8()
{
  return MEMORY[0x270F05088]();
}

uint64_t sub_256177908()
{
  return MEMORY[0x270F050F8]();
}

uint64_t sub_256177918()
{
  return MEMORY[0x270F05120]();
}

uint64_t sub_256177928()
{
  return MEMORY[0x270F05140]();
}

uint64_t sub_256177938()
{
  return MEMORY[0x270F05148]();
}

uint64_t sub_256177948()
{
  return MEMORY[0x270F05158]();
}

uint64_t sub_256177958()
{
  return MEMORY[0x270F05198]();
}

uint64_t sub_256177968()
{
  return MEMORY[0x270F052F0]();
}

uint64_t sub_256177978()
{
  return MEMORY[0x270F05320]();
}

uint64_t sub_256177988()
{
  return MEMORY[0x270F05340]();
}

uint64_t sub_256177998()
{
  return MEMORY[0x270F05358]();
}

uint64_t sub_2561779A8()
{
  return MEMORY[0x270F05368]();
}

uint64_t sub_2561779B8()
{
  return MEMORY[0x270F05398]();
}

uint64_t sub_2561779C8()
{
  return MEMORY[0x270F053B8]();
}

uint64_t sub_2561779D8()
{
  return MEMORY[0x270F053C8]();
}

uint64_t sub_2561779E8()
{
  return MEMORY[0x270F053D0]();
}

uint64_t sub_2561779F8()
{
  return MEMORY[0x270F053D8]();
}

uint64_t sub_256177A08()
{
  return MEMORY[0x270FA0970]();
}

uint64_t sub_256177A18()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_256177A28()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_256177A38()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_256177A48()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_256177A58()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_256177A68()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_256177A78()
{
  return MEMORY[0x270FA0BB0]();
}

uint64_t sub_256177A88()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_256177A98()
{
  return MEMORY[0x270F37DE0]();
}

uint64_t sub_256177AA8()
{
  return MEMORY[0x270F37DE8]();
}

uint64_t sub_256177AB8()
{
  return MEMORY[0x270F37DF0]();
}

uint64_t sub_256177AC8()
{
  return MEMORY[0x270F37E00]();
}

uint64_t sub_256177AD8()
{
  return MEMORY[0x270F37E08]();
}

uint64_t sub_256177AE8()
{
  return MEMORY[0x270F37E10]();
}

uint64_t sub_256177AF8()
{
  return MEMORY[0x270F37E18]();
}

uint64_t sub_256177B08()
{
  return MEMORY[0x270F37E30]();
}

uint64_t sub_256177B18()
{
  return MEMORY[0x270F37E38]();
}

uint64_t sub_256177B28()
{
  return MEMORY[0x270F37E40]();
}

uint64_t sub_256177B38()
{
  return MEMORY[0x270F37E50]();
}

uint64_t sub_256177B48()
{
  return MEMORY[0x270F37EB8]();
}

uint64_t sub_256177B58()
{
  return MEMORY[0x270F37EC8]();
}

uint64_t sub_256177B68()
{
  return MEMORY[0x270F37EE0]();
}

uint64_t sub_256177B78()
{
  return MEMORY[0x270F37EE8]();
}

uint64_t sub_256177B88()
{
  return MEMORY[0x270F37EF8]();
}

uint64_t sub_256177B98()
{
  return MEMORY[0x270F37F00]();
}

uint64_t sub_256177BA8()
{
  return MEMORY[0x270F37F08]();
}

uint64_t sub_256177BB8()
{
  return MEMORY[0x270F37F10]();
}

uint64_t sub_256177BC8()
{
  return MEMORY[0x270F37F18]();
}

uint64_t sub_256177BD8()
{
  return MEMORY[0x270F37F20]();
}

uint64_t sub_256177BE8()
{
  return MEMORY[0x270F37F28]();
}

uint64_t sub_256177BF8()
{
  return MEMORY[0x270F37F30]();
}

uint64_t sub_256177C08()
{
  return MEMORY[0x270F37F38]();
}

uint64_t sub_256177C18()
{
  return MEMORY[0x270F37F80]();
}

uint64_t sub_256177C28()
{
  return MEMORY[0x270F37F88]();
}

uint64_t sub_256177C38()
{
  return MEMORY[0x270F37F98]();
}

uint64_t sub_256177C48()
{
  return MEMORY[0x270F37FC0]();
}

uint64_t sub_256177C58()
{
  return MEMORY[0x270F37FC8]();
}

uint64_t sub_256177C68()
{
  return MEMORY[0x270F37FD0]();
}

uint64_t sub_256177C78()
{
  return MEMORY[0x270F37FF0]();
}

uint64_t sub_256177C88()
{
  return MEMORY[0x270F38108]();
}

uint64_t sub_256177C98()
{
  return MEMORY[0x270F38110]();
}

uint64_t sub_256177CA8()
{
  return MEMORY[0x270F38118]();
}

uint64_t sub_256177CB8()
{
  return MEMORY[0x270F38120]();
}

uint64_t sub_256177CC8()
{
  return MEMORY[0x270F38128]();
}

uint64_t sub_256177CD8()
{
  return MEMORY[0x270EF3150]();
}

uint64_t sub_256177CE8()
{
  return MEMORY[0x270EF31F8]();
}

uint64_t sub_256177D08()
{
  return MEMORY[0x270F35118]();
}

uint64_t sub_256177D18()
{
  return MEMORY[0x270EF3328]();
}

uint64_t sub_256177D28()
{
  return MEMORY[0x270EF3330]();
}

uint64_t sub_256177D38()
{
  return MEMORY[0x270EF3338]();
}

uint64_t sub_256177D48()
{
  return MEMORY[0x270EF3358]();
}

uint64_t sub_256177D58()
{
  return MEMORY[0x270EF3360]();
}

uint64_t sub_256177D68()
{
  return MEMORY[0x270EF3368]();
}

uint64_t sub_256177D78()
{
  return MEMORY[0x270EF3370]();
}

uint64_t sub_256177D88()
{
  return MEMORY[0x270EF3378]();
}

uint64_t sub_256177D98()
{
  return MEMORY[0x270EF3380]();
}

uint64_t sub_256177DA8()
{
  return MEMORY[0x270EF3388]();
}

uint64_t sub_256177DB8()
{
  return MEMORY[0x270EF3390]();
}

uint64_t sub_256177DC8()
{
  return MEMORY[0x270F9D018]();
}

uint64_t sub_256177DD8()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_256177DE8()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_256177DF8()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_256177E08()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_256177E18()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_256177E28()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_256177E38()
{
  return MEMORY[0x270F35120]();
}

uint64_t sub_256177E48()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_256177E58()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_256177E68()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_256177E78()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_256177E88()
{
  return MEMORY[0x270F9D560]();
}

uint64_t sub_256177E98()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_256177EA8()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_256177EB8()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_256177EC8()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_256177ED8()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_256177EE8()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_256177EF8()
{
  return MEMORY[0x270EF1A28]();
}

uint64_t sub_256177F08()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_256177F18()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_256177F28()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_256177F38()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_256177F48()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_256177F58()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_256177F68()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_256177F78()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_256177F88()
{
  return MEMORY[0x270F9D890]();
}

uint64_t sub_256177FA8()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_256177FB8()
{
  return MEMORY[0x270F9DA18]();
}

uint64_t sub_256177FC8()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_256177FD8()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_256177FE8()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_256177FF8()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_256178008()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_256178018()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_256178028()
{
  return MEMORY[0x270F9DBC8]();
}

uint64_t sub_256178038()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_256178048()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_256178058()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_256178068()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_256178078()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_256178088()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_256178098()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_2561780A8()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_2561780B8()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_2561780C8()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_2561780D8()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_2561780E8()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_2561780F8()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_256178108()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_256178118()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_256178128()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_256178138()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_256178148()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_256178158()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_256178168()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_256178178()
{
  return MEMORY[0x270F9E2F0]();
}

uint64_t sub_256178188()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_256178198()
{
  return MEMORY[0x270EE5820]();
}

uint64_t sub_2561781A8()
{
  return MEMORY[0x270F35140]();
}

uint64_t sub_2561781B8()
{
  return MEMORY[0x270F35158]();
}

uint64_t sub_2561781C8()
{
  return MEMORY[0x270EF33C8]();
}

uint64_t sub_2561781D8()
{
  return MEMORY[0x270EF33D8]();
}

uint64_t sub_2561781E8()
{
  return MEMORY[0x270EF33E0]();
}

uint64_t sub_2561781F8()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_256178208()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_256178218()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_256178228()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_256178238()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_256178248()
{
  return MEMORY[0x270FA2F20]();
}

uint64_t sub_256178258()
{
  return MEMORY[0x270EF33E8]();
}

uint64_t sub_256178268()
{
  return MEMORY[0x270F82568]();
}

uint64_t sub_256178278()
{
  return MEMORY[0x270F35230]();
}

uint64_t sub_256178288()
{
  return MEMORY[0x270F35240]();
}

uint64_t sub_256178298()
{
  return MEMORY[0x270F35250]();
}

uint64_t sub_2561782A8()
{
  return MEMORY[0x270FA0C20]();
}

uint64_t sub_2561782B8()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t sub_2561782C8()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_2561782D8()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_2561782E8()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_2561782F8()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_256178308()
{
  return MEMORY[0x270EF34C0]();
}

uint64_t sub_256178318()
{
  return MEMORY[0x270EF34C8]();
}

uint64_t sub_256178328()
{
  return MEMORY[0x270F38160]();
}

uint64_t sub_256178338()
{
  return MEMORY[0x270EF34D0]();
}

uint64_t sub_256178348()
{
  return MEMORY[0x270EF2010]();
}

uint64_t sub_256178358()
{
  return MEMORY[0x270EF2020]();
}

uint64_t sub_256178368()
{
  return MEMORY[0x270F82658]();
}

uint64_t sub_256178378()
{
  return MEMORY[0x270F82678]();
}

uint64_t sub_256178388()
{
  return MEMORY[0x270EF34E0]();
}

uint64_t sub_256178398()
{
  return MEMORY[0x270EF3570]();
}

uint64_t sub_2561783A8()
{
  return MEMORY[0x270EF3578]();
}

uint64_t sub_2561783E8()
{
  return MEMORY[0x270F38178]();
}

uint64_t sub_2561783F8()
{
  return MEMORY[0x270F38180]();
}

uint64_t sub_256178408()
{
  return MEMORY[0x270EF3590]();
}

uint64_t sub_256178418()
{
  return MEMORY[0x270F352B8]();
}

uint64_t sub_256178428()
{
  return MEMORY[0x270F05438]();
}

uint64_t sub_256178438()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_256178448()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_256178458()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_256178468()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_256178478()
{
  return MEMORY[0x270F9E570]();
}

uint64_t sub_256178488()
{
  return MEMORY[0x270F9E578]();
}

uint64_t sub_256178498()
{
  return MEMORY[0x270EF2508]();
}

uint64_t sub_2561784A8()
{
  return MEMORY[0x270FA13A0]();
}

uint64_t sub_2561784B8()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_2561784C8()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_2561784D8()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_2561784E8()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_2561784F8()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_256178508()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_256178518()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_256178528()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_256178538()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_256178548()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_256178558()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_256178568()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_256178578()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_256178588()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_256178598()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_2561785A8()
{
  return MEMORY[0x270F9EA90]();
}

uint64_t sub_2561785B8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_2561785C8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2561785D8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_2561785E8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_2561785F8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_256178608()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_256178618()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_256178628()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_256178638()
{
  return MEMORY[0x270F9ED90]();
}

uint64_t sub_256178648()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_256178658()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_256178668()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_256178678()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_256178688()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_256178698()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_2561786A8()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_2561786B8()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_2561786C8()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2561786D8()
{
  return MEMORY[0x270F9F0C8]();
}

uint64_t sub_2561786F8()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_256178708()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_256178718()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_256178728()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_256178738()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_256178748()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_256178758()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_256178768()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_256178778()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_256178788()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_256178798()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_2561787A8()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_2561787B8()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2561787C8()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_2561787D8()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_2561787E8()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2561787F8()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_256178818()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_256178828()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_256178838()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_256178848()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_256178858()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_256178868()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_256178878()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_256178888()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_256178898()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2561788A8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2561788B8()
{
  return MEMORY[0x270F9FB88]();
}

uint64_t sub_2561788C8()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_2561788D8()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_2561788E8()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2561788F8()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_256178908()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_256178918()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_256178928()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_256178938()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_256178948()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_256178978()
{
  return MEMORY[0x270FA0128]();
}

CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x270EE5B80](red, green, blue, alpha);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x270EE5BE0](color);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x270EE71A0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x270EE71D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x270EE71F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x270EE7210]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x270EE7260]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x270EF35F8]();
}

uint64_t HKDateFormatterFromTemplate()
{
  return MEMORY[0x270F381B8]();
}

uint64_t HKMHMindfulnessSettingsURL()
{
  return MEMORY[0x270F4A448]();
}

uint64_t HKObjectForNanoPreferencesUserDefaultsKey()
{
  return MEMORY[0x270EF37C0]();
}

uint64_t HKStateOfMindReflectiveIntervalFromKind()
{
  return MEMORY[0x270EF3830]();
}

uint64_t HKUICalendarLocaleIsRightToLeft()
{
  return MEMORY[0x270F382F0]();
}

uint64_t HKUILocalizedString()
{
  return MEMORY[0x270F38340]();
}

uint64_t HKUILocalizedStringForStateOfMindDomain()
{
  return MEMORY[0x270F38360]();
}

uint64_t HKUILocalizedStringForStateOfMindLabel()
{
  return MEMORY[0x270F38368]();
}

uint64_t HKUILocalizedStringForValenceClassification()
{
  return MEMORY[0x270F38370]();
}

uint64_t HKUILocalizedStringForValenceClassificationAndReflectiveInterval()
{
  return MEMORY[0x270F38378]();
}

id MTLCreateSystemDefaultDevice(void)
{
  return (id)MEMORY[0x270EF5E20]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x270F960E8]();
}

uint64_t MobileGestalt_get_homeButtonType()
{
  return MEMORY[0x270F96138]();
}

uint64_t NSStringFromHKStateOfMindDomain()
{
  return MEMORY[0x270EF38E0]();
}

uint64_t NSStringFromHKStateOfMindLabel()
{
  return MEMORY[0x270EF38E8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

__float2 __sincosf_stret(float a1)
{
  MEMORY[0x270ED7E90](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincospif_stret(float a1)
{
  MEMORY[0x270ED7E98](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

uint64_t _availability_version_check()
{
  return MEMORY[0x270ED7F40]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

float atan2f(float a1, float a2)
{
  MEMORY[0x270ED86B8](a1, a2);
  return result;
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

int fclose(FILE *a1)
{
  return MEMORY[0x270ED98C8](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x270ED99F0](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x270ED9A28](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x270ED9AC0](a1, a2, *(void *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x270ED9B18](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void rewind(FILE *a1)
{
}

float sinf(float a1)
{
  MEMORY[0x270EDB4F0](a1);
  return result;
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x270EDB560](a1, a2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x270FA0238]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x270FA0270]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x270FA0490]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

float tanf(float a1)
{
  MEMORY[0x270EDB818](a1);
  return result;
}